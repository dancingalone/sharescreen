cscope 15 /work/cyher-air/jni/icu4c/common -q 0000012869 0002966463
	@bmpset.cpp

17 
	~"unicode/uty≥s.h
"

18 
	~"unicode/uni£t.h
"

19 
	~"cmem‹y.h
"

20 
	~"bmp£t.h
"

22 
U_NAMESPACE_BEGIN


24 
	gBMPSë
::
	$BMPSë
(c⁄° 
öt32_t
 *
∑ª¡Li°
, i¡32_à
∑ª¡Li°Lígth
) :

25 
	`li°
(
∑ª¡Li°
), 
	$li°Lígth
(
∑ª¡Li°Lígth
) {

26 
	`u¥v_mem£t
(
asciiByãs
, 0, (asciiBytes));

27 
	`u¥v_mem£t
(
èbÀ7FF
, 0, (table7FF));

28 
	`u¥v_mem£t
(
bmpBlockBôs
, 0, (bmpBlockBits));

37 
li°4kSèπs
[0]=
	`födCodePoöt
(0x800, 0, 
li°Lígth
-1);

38 
öt32_t
 
i
;

39 
i
=1; i<=0x10; ++i) {

40 
li°4kSèπs
[
i
]=
	`födCodePoöt
(i<<12,Üi°4kSèπs[i-1], 
li°Lígth
-1);

42 
li°4kSèπs
[0x11]=
li°Lígth
-1;

44 
	`öôBôs
();

45 
	`ovîrideIŒegÆ
();

46 
	}
}

48 
	gBMPSë
::
	$BMPSë
(c⁄° 
BMPSë
 &
ŸhîBMPSë
, c⁄° 
öt32_t
 *
√wP¨ítLi°
, i¡32_à
√wP¨ítLi°Lígth
) :

49 
	`li°
(
√wP¨ítLi°
), 
	$li°Lígth
(
√wP¨ítLi°Lígth
) {

50 
	`u¥v_mem˝y
(
asciiByãs
, 
ŸhîBMPSë
.asciiBytes, (asciiBytes));

51 
	`u¥v_mem˝y
(
èbÀ7FF
, 
ŸhîBMPSë
.table7FF, (table7FF));

52 
	`u¥v_mem˝y
(
bmpBlockBôs
, 
ŸhîBMPSë
.bmpBlockBits, (bmpBlockBits));

53 
	`u¥v_mem˝y
(
li°4kSèπs
, 
ŸhîBMPSë
.list4kStarts, (list4kStarts));

54 
	}
}

56 
	gBMPSë
::~
	$BMPSë
() {

57 
	}
}

63 
	$£t32x64Bôs
(
uöt32_t
 
èbÀ
[64], 
öt32_t
 
°¨t
, i¡32_à
limô
) {

64 
öt32_t
 
Àad
=
°¨t
>>6;

65 
öt32_t
 
åaû
=
°¨t
&0x3f;

68 
uöt32_t
 
bôs
=(uöt32_t)1<<
Àad
;

69 if((
°¨t
+1)==
limô
) {

70 
èbÀ
[
åaû
]|=
bôs
;

74 
öt32_t
 
limôLód
=
limô
>>6;

75 
öt32_t
 
limôTøû
=
limô
&0x3f;

77 if(
Àad
==
limôLód
) {

79 
åaû
<
limôTøû
) {

80 
èbÀ
[
åaû
++]|=
bôs
;

86 if(
åaû
>0) {

88 
èbÀ
[
åaû
++]|=
bôs
;

89 } 
åaû
<64);

90 ++
Àad
;

92 if(
Àad
<
limôLód
) {

93 
bôs
=~((1<<
Àad
)-1);

94 if(
limôLód
<0x20) {

95 
bôs
&=(1<<
limôLód
)-1;

97 
åaû
=0;Årail<64; ++trail) {

98 
èbÀ
[
åaû
]|=
bôs
;

101 
bôs
=1<<
limôLód
;

102 
åaû
=0;Åøû<
limôTøû
; ++trail) {

103 
èbÀ
[
åaû
]|=
bôs
;

106 
	}
}

108 
	gBMPSë
::
	$öôBôs
() {

109 
UCh¨32
 
°¨t
, 
limô
;

110 
öt32_t
 
li°Index
=0;

114 
°¨t
=
li°
[
li°Index
++];

115 if(
li°Index
<
li°Lígth
) {

116 
limô
=
li°
[
li°Index
++];

118 
limô
=0x110000;

120 if(
°¨t
>=0x80) {

124 
asciiByãs
[
°¨t
++]=1;

125 } 
°¨t
<
limô
 && start<0x80);

126 } 
limô
<=0x80);

129 
°¨t
<0x800) {

130 
	`£t32x64Bôs
(
èbÀ7FF
, 
°¨t
, 
limô
<=0x800 ?Üimit : 0x800);

131 if(
limô
>0x800) {

132 
°¨t
=0x800;

136 
°¨t
=
li°
[
li°Index
++];

137 if(
li°Index
<
li°Lígth
) {

138 
limô
=
li°
[
li°Index
++];

140 
limô
=0x110000;

145 
öt32_t
 
möSèπ
=0x800;

146 
°¨t
<0x10000) {

147 if(
limô
>0x10000) {

148 
limô
=0x10000;

151 if(
°¨t
<
möSèπ
) {

152 
°¨t
=
möSèπ
;

154 if(
°¨t
<
limô
) {

155 if(
°¨t
&0x3f) {

157 
°¨t
>>=6;

158 
bmpBlockBôs
[
°¨t
&0x3f]|=0x10001<<(start>>6);

159 
°¨t
=(start+1)<<6;

160 
möSèπ
=
°¨t
;

162 if(
°¨t
<
limô
) {

163 if(
°¨t
<(
limô
&~0x3f)) {

165 
	`£t32x64Bôs
(
bmpBlockBôs
, 
°¨t
>>6, 
limô
>>6);

168 if(
limô
&0x3f) {

170 
limô
>>=6;

171 
bmpBlockBôs
[
limô
&0x3f]|=0x10001<<(limit>>6);

172 
limô
=(limit+1)<<6;

173 
möSèπ
=
limô
;

178 if(
limô
==0x10000) {

182 
°¨t
=
li°
[
li°Index
++];

183 if(
li°Index
<
li°Lígth
) {

184 
limô
=
li°
[
li°Index
++];

186 
limô
=0x110000;

189 
	}
}

199 
	gBMPSë
::
	$ovîrideIŒegÆ
() {

200 
uöt32_t
 
bôs
, 
mask
;

201 
öt32_t
 
i
;

203 if(
	`c⁄èösSlow
(0xfffd, 
li°4kSèπs
[0xf],Üist4kStarts[0x10])) {

205 
i
=0x80; i<0xc0; ++i) {

206 
asciiByãs
[
i
]=1;

209 
bôs
=3;

210 
i
=0; i<64; ++i) {

211 
èbÀ7FF
[
i
]|=
bôs
;

214 
bôs
=1;

215 
i
=0; i<32; ++i) {

216 
bmpBlockBôs
[
i
]|=
bôs
;

219 
mask
=~(0x10001<<0xd);

220 
bôs
=1<<0xd;

221 
i
=32; i<64; ++i) {

222 
bmpBlockBôs
[
i
]=(bmpBlockBôs[i]&
mask
)|
bôs
;

226 
mask
=~(0x10001<<0xd);

227 
i
=32; i<64; ++i) {

228 
bmpBlockBôs
[
i
]&=
mask
;

231 
	}
}

233 
öt32_t
 
	gBMPSë
::
	$födCodePoöt
(
UCh¨32
 
c
, 
öt32_t
 
lo
, i¡32_à
hi
) const {

246 i‡(
c
 < 
li°
[
lo
])

247  
lo
;

250 i‡(
lo
 >
hi
 || 
c
 >
li°
[hi-1])

251  
hi
;

255 
öt32_t
 
i
 = (
lo
 + 
hi
) >> 1;

256 i‡(
i
 =
lo
) {

258 } i‡(
c
 < 
li°
[
i
]) {

259 
hi
 = 
i
;

261 
lo
 = 
i
;

264  
hi
;

265 
	}
}

267 
UBoﬁ


268 
	gBMPSë
::
	$c⁄èös
(
UCh¨32
 
c
) const {

269 if((
uöt32_t
)
c
<=0x7f) {

270  (
UBoﬁ
)
asciiByãs
[
c
];

271 } if((
uöt32_t
)
c
<=0x7ff) {

272  (
UBoﬁ
)((
èbÀ7FF
[
c
&0x3f]&((
uöt32_t
)1<<(c>>6)))!=0);

273 } if((
uöt32_t
)
c
<0xd800 || (c>=0xe000 && c<=0xffff)) {

274 
Àad
=
c
>>12;

275 
uöt32_t
 
twoBôs
=(
bmpBlockBôs
[(
c
>>6)&0x3f]>>
Àad
)&0x10001;

276 if(
twoBôs
<=1) {

279  (
UBoﬁ
)
twoBôs
;

282  
	`c⁄èösSlow
(
c
, 
li°4kSèπs
[
Àad
],Üist4kStarts[lead+1]);

284 } if((
uöt32_t
)
c
<=0x10ffff) {

286  
	`c⁄èösSlow
(
c
, 
li°4kSèπs
[0xd],Üist4kStarts[0x11]);

290  
FALSE
;

292 
	}
}

298 c⁄° 
UCh¨
 *

299 
	gBMPSë
::
	$•™
(c⁄° 
UCh¨
 *
s
, c⁄° UCh¨ *
limô
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
) const {

300 
UCh¨
 
c
, 
c2
;

302 if(
•™C⁄dôi⁄
) {

305 
c
=*
s
;

306 if(
c
<=0x7f) {

307 if(!
asciiByãs
[
c
]) {

310 } if(
c
<=0x7ff) {

311 if((
èbÀ7FF
[
c
&0x3f]&((
uöt32_t
)1<<(c>>6)))==0) {

314 } if(
c
<0xd800 || c>=0xe000) {

315 
Àad
=
c
>>12;

316 
uöt32_t
 
twoBôs
=(
bmpBlockBôs
[(
c
>>6)&0x3f]>>
Àad
)&0x10001;

317 if(
twoBôs
<=1) {

320 if(
twoBôs
==0) {

325 if(!
	`c⁄èösSlow
(
c
, 
li°4kSèπs
[
Àad
],Üist4kStarts[lead+1])) {

329 } if(
c
>=0xdc00 || (
s
+1)==
limô
 || (
c2
=s[1])<0xdc00 || c2>=0xe000) {

331 if(!
	`c⁄èösSlow
(
c
, 
li°4kSèπs
[0xd],Üist4kStarts[0xe])) {

336 if(!
	`c⁄èösSlow
(
	`U16_GET_SUPPLEMENTARY
(
c
, 
c2
), 
li°4kSèπs
[0x10],Üist4kStarts[0x11])) {

339 ++
s
;

341 } ++
s
<
limô
);

345 
c
=*
s
;

346 if(
c
<=0x7f) {

347 if(
asciiByãs
[
c
]) {

350 } if(
c
<=0x7ff) {

351 if((
èbÀ7FF
[
c
&0x3f]&((
uöt32_t
)1<<(c>>6)))!=0) {

354 } if(
c
<0xd800 || c>=0xe000) {

355 
Àad
=
c
>>12;

356 
uöt32_t
 
twoBôs
=(
bmpBlockBôs
[(
c
>>6)&0x3f]>>
Àad
)&0x10001;

357 if(
twoBôs
<=1) {

360 if(
twoBôs
!=0) {

365 if(
	`c⁄èösSlow
(
c
, 
li°4kSèπs
[
Àad
],Üist4kStarts[lead+1])) {

369 } if(
c
>=0xdc00 || (
s
+1)==
limô
 || (
c2
=s[1])<0xdc00 || c2>=0xe000) {

371 if(
	`c⁄èösSlow
(
c
, 
li°4kSèπs
[0xd],Üist4kStarts[0xe])) {

376 if(
	`c⁄èösSlow
(
	`U16_GET_SUPPLEMENTARY
(
c
, 
c2
), 
li°4kSèπs
[0x10],Üist4kStarts[0x11])) {

379 ++
s
;

381 } ++
s
<
limô
);

383  
s
;

384 
	}
}

387 c⁄° 
UCh¨
 *

388 
	gBMPSë
::
	$•™Back
(c⁄° 
UCh¨
 *
s
, c⁄° UCh¨ *
limô
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
) const {

389 
UCh¨
 
c
, 
c2
;

391 if(
•™C⁄dôi⁄
) {

394 
c
=*(--
limô
);

395 if(
c
<=0x7f) {

396 if(!
asciiByãs
[
c
]) {

399 } if(
c
<=0x7ff) {

400 if((
èbÀ7FF
[
c
&0x3f]&((
uöt32_t
)1<<(c>>6)))==0) {

403 } if(
c
<0xd800 || c>=0xe000) {

404 
Àad
=
c
>>12;

405 
uöt32_t
 
twoBôs
=(
bmpBlockBôs
[(
c
>>6)&0x3f]>>
Àad
)&0x10001;

406 if(
twoBôs
<=1) {

409 if(
twoBôs
==0) {

414 if(!
	`c⁄èösSlow
(
c
, 
li°4kSèπs
[
Àad
],Üist4kStarts[lead+1])) {

418 } if(
c
<0xdc00 || 
s
==
limô
 || (
c2
=*(limit-1))<0xd800 || c2>=0xdc00) {

420 if(!
	`c⁄èösSlow
(
c
, 
li°4kSèπs
[0xd],Üist4kStarts[0xe])) {

425 if(!
	`c⁄èösSlow
(
	`U16_GET_SUPPLEMENTARY
(
c2
, 
c
), 
li°4kSèπs
[0x10],Üist4kStarts[0x11])) {

428 --
limô
;

430 if(
s
==
limô
) {

431  
s
;

437 
c
=*(--
limô
);

438 if(
c
<=0x7f) {

439 if(
asciiByãs
[
c
]) {

442 } if(
c
<=0x7ff) {

443 if((
èbÀ7FF
[
c
&0x3f]&((
uöt32_t
)1<<(c>>6)))!=0) {

446 } if(
c
<0xd800 || c>=0xe000) {

447 
Àad
=
c
>>12;

448 
uöt32_t
 
twoBôs
=(
bmpBlockBôs
[(
c
>>6)&0x3f]>>
Àad
)&0x10001;

449 if(
twoBôs
<=1) {

452 if(
twoBôs
!=0) {

457 if(
	`c⁄èösSlow
(
c
, 
li°4kSèπs
[
Àad
],Üist4kStarts[lead+1])) {

461 } if(
c
<0xdc00 || 
s
==
limô
 || (
c2
=*(limit-1))<0xd800 || c2>=0xdc00) {

463 if(
	`c⁄èösSlow
(
c
, 
li°4kSèπs
[0xd],Üist4kStarts[0xe])) {

468 if(
	`c⁄èösSlow
(
	`U16_GET_SUPPLEMENTARY
(
c2
, 
c
), 
li°4kSèπs
[0x10],Üist4kStarts[0x11])) {

471 --
limô
;

473 if(
s
==
limô
) {

474  
s
;

478  
limô
+1;

479 
	}
}

485 c⁄° 
uöt8_t
 *

486 
	gBMPSë
::
	$•™UTF8
(c⁄° 
uöt8_t
 *
s
, 
öt32_t
 
Àngth
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
) const {

487 c⁄° 
uöt8_t
 *
limô
=
s
+
Àngth
;

488 
uöt8_t
 
b
=*
s
;

489 if((
öt8_t
)
b
>=0) {

491 if(
•™C⁄dôi⁄
) {

493 if(!
asciiByãs
[
b
] || ++
s
==
limô
) {

494  
s
;

496 
b
=*
s
;

497 } (
öt8_t
)
b
>=0);

500 if(
asciiByãs
[
b
] || ++
s
==
limô
) {

501  
s
;

503 
b
=*
s
;

504 } (
öt8_t
)
b
>=0);

506 
Àngth
=(
öt32_t
)(
limô
-
s
);

509 if(
•™C⁄dôi⁄
!=
USET_SPAN_NOT_CONTAINED
) {

510 
•™C⁄dôi⁄
=
USET_SPAN_CONTAINED
;

513 c⁄° 
uöt8_t
 *
limô0
=
limô
;

525 
b
=*(
limô
-1);

526 if((
öt8_t
)
b
<0) {

528 if(
b
<0xc0) {

530 if(
Àngth
>=2 && (
b
=*(
limô
-2))>=0xe0) {

531 
limô
-=2;

532 if(
asciiByãs
[0x80]!=
•™C⁄dôi⁄
) {

533 
limô0
=
limô
;

535 } if(
b
<0xc0 && b>=0x80 && 
Àngth
>=3 && (b=*(
limô
-3))>=0xf0) {

537 
limô
-=3;

538 if(
asciiByãs
[0x80]!=
•™C⁄dôi⁄
) {

539 
limô0
=
limô
;

544 --
limô
;

545 if(
asciiByãs
[0x80]!=
•™C⁄dôi⁄
) {

546 
limô0
=
limô
;

551 
uöt8_t
 
t1
, 
t2
, 
t3
;

553 
s
<
limô
) {

554 
b
=*
s
;

555 if(
b
<0xc0) {

557 if(
•™C⁄dôi⁄
) {

559 if(!
asciiByãs
[
b
]) {

560  
s
;

561 } if(++
s
==
limô
) {

562  
limô0
;

564 
b
=*
s
;

565 } 
b
<0xc0);

568 if(
asciiByãs
[
b
]) {

569  
s
;

570 } if(++
s
==
limô
) {

571  
limô0
;

573 
b
=*
s
;

574 } 
b
<0xc0);

577 ++
s
;

578 if(
b
>=0xe0) {

579 if(
b
<0xf0) {

581 (
t1
=(
uöt8_t
)(
s
[0]-0x80)) <= 0x3f &&

582 (
t2
=(
uöt8_t
)(
s
[1]-0x80)) <= 0x3f

584 
b
&=0xf;

585 
uöt32_t
 
twoBôs
=(
bmpBlockBôs
[
t1
]>>
b
)&0x10001;

586 if(
twoBôs
<=1) {

589 if(
twoBôs
!=(
uöt32_t
)
•™C⁄dôi⁄
) {

590  
s
-1;

594 
UCh¨32
 
c
=(
b
<<12)|(
t1
<<6)|
t2
;

595 if(
	`c⁄èösSlow
(
c
, 
li°4kSèπs
[
b
],Üi°4kSèπs[b+1]Ë!
•™C⁄dôi⁄
) {

596  
s
-1;

599 
s
+=2;

603 (
t1
=(
uöt8_t
)(
s
[0]-0x80)) <= 0x3f &&

604 (
t2
=(
uöt8_t
)(
s
[1]-0x80)) <= 0x3f &&

605 (
t3
=(
uöt8_t
)(
s
[2]-0x80)) <= 0x3f

608 
UCh¨32
 
c
=((UCh¨32)(
b
-0xf0)<<18)|((UCh¨32)
t1
<<12)|(
t2
<<6)|
t3
;

609 if––(0x10000<=
c
 && c<=0x10ffff) ?

610 
	`c⁄èösSlow
(
c
, 
li°4kSèπs
[0x10],Üist4kStarts[0x11]) :

611 
asciiByãs
[0x80]

612 Ë!
•™C⁄dôi⁄


614  
s
-1;

616 
s
+=3;

621 (
t1
=(
uöt8_t
)(*
s
-0x80)) <= 0x3f

623 if((
USëS∑nC⁄dôi⁄
)((
èbÀ7FF
[
t1
]&((
uöt32_t
)1<<(
b
&0x1f)))!=0Ë!
•™C⁄dôi⁄
) {

624  
s
-1;

626 ++
s
;

634 if(
asciiByãs
[0x80]!=
•™C⁄dôi⁄
) {

635  
s
-1;

639  
limô0
;

640 
	}
}

649 
öt32_t


650 
	gBMPSë
::
	$•™BackUTF8
(c⁄° 
uöt8_t
 *
s
, 
öt32_t
 
Àngth
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
) const {

651 if(
•™C⁄dôi⁄
!=
USET_SPAN_NOT_CONTAINED
) {

652 
•™C⁄dôi⁄
=
USET_SPAN_CONTAINED
;

655 
uöt8_t
 
b
;

658 
b
=
s
[--
Àngth
];

659 if((
öt8_t
)
b
>=0) {

661 if(
•™C⁄dôi⁄
) {

663 if(!
asciiByãs
[
b
]) {

664  
Àngth
+1;

665 } if(
Àngth
==0) {

668 
b
=
s
[--
Àngth
];

669 } (
öt8_t
)
b
>=0);

672 if(
asciiByãs
[
b
]) {

673  
Àngth
+1;

674 } if(
Àngth
==0) {

677 
b
=
s
[--
Àngth
];

678 } (
öt8_t
)
b
>=0);

682 
öt32_t
 
¥ev
=
Àngth
;

683 
UCh¨32
 
c
;

684 if(
b
<0xc0) {

686 
c
=
	`utf8_¥evCh¨Sa„Body
(
s
, 0, &
Àngth
, 
b
, -1);

687 if(
c
<0) {

688 
c
=0xfffd;

692 
c
=0xfffd;

695 if(
c
<=0x7ff) {

696 if((
USëS∑nC⁄dôi⁄
)((
èbÀ7FF
[
c
&0x3f]&((
uöt32_t
)1<<(c>>6)))!=0Ë!
•™C⁄dôi⁄
) {

697  
¥ev
+1;

699 } if(
c
<=0xffff) {

700 
Àad
=
c
>>12;

701 
uöt32_t
 
twoBôs
=(
bmpBlockBôs
[(
c
>>6)&0x3f]>>
Àad
)&0x10001;

702 if(
twoBôs
<=1) {

705 if(
twoBôs
!=(
uöt32_t
)
•™C⁄dôi⁄
) {

706  
¥ev
+1;

710 if(
	`c⁄èösSlow
(
c
, 
li°4kSèπs
[
Àad
],Üi°4kSèπs[Àad+1]Ë!
•™C⁄dôi⁄
) {

711  
¥ev
+1;

715 if(
	`c⁄èösSlow
(
c
, 
li°4kSèπs
[0x10],Üi°4kSèπs[0x11]Ë!
•™C⁄dôi⁄
) {

716  
¥ev
+1;

719 } 
Àngth
>0);

721 
	}
}

723 
	gU_NAMESPACE_END


	@bmpset.h

17 #i‚de‡
__BMPSET_H__


18 
	#__BMPSET_H__


	)

20 
	~"unicode/uty≥s.h
"

21 
	~"unicode/uni£t.h
"

23 
U_NAMESPACE_BEGIN


35 ˛as†
	cBMPSë
 : 
public
 
UMem‹y
 {

36 
public
:

37 
BMPSë
(c⁄° 
öt32_t
 *
∑ª¡Li°
, i¡32_à
∑ª¡Li°Lígth
);

38 
BMPSë
(c⁄° BMPSë &
ŸhîBMPSë
, c⁄° 
öt32_t
 *
√wP¨ítLi°
, i¡32_à
√wP¨ítLi°Lígth
);

39 
	mvútuÆ
 ~
BMPSë
();

41 
vútuÆ
 
UBoﬁ
 
	$c⁄èös
(
UCh¨32
 
c
) const;

48 c⁄° 
UCh¨
 *
	$•™
(c⁄° 
UCh¨
 *
s
, c⁄° UCh¨ *
limô
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
) const;

55 c⁄° 
UCh¨
 *
	$•™Back
(c⁄° 
UCh¨
 *
s
, c⁄° UCh¨ *
limô
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
) const;

62 c⁄° 
uöt8_t
 *
	$•™UTF8
(c⁄° 
uöt8_t
 *
s
, 
öt32_t
 
Àngth
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
) const;

69 
öt32_t
 
	$•™BackUTF8
(c⁄° 
uöt8_t
 *
s
, 
öt32_t
 
Àngth
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
) const;

71 
¥iv©e
:

72 
	`öôBôs
();

73 
	`ovîrideIŒegÆ
();

92 
öt32_t
 
	$födCodePoöt
(
UCh¨32
 
c
, 
öt32_t
 
lo
, i¡32_à
hi
) const;

94 
ölöe
 
UBoﬁ
 
	$c⁄èösSlow
(
UCh¨32
 
c
, 
öt32_t
 
lo
, i¡32_à
hi
) const;

102 
UBoﬁ
 
asciiByãs
[0xc0];

116 
uöt32_t
 
èbÀ7FF
[64];

134 
uöt32_t
 
bmpBlockBôs
[64];

144 
öt32_t
 
li°4kSèπs
[18];

151 c⁄° 
öt32_t
 *
li°
;

152 
öt32_t
 
li°Lígth
;

155 
ölöe
 
UBoﬁ
 
BMPSë
::
	$c⁄èösSlow
(
UCh¨32
 
c
, 
öt32_t
 
lo
, i¡32_à
hi
) const {

156  (
UBoﬁ
)(
	`födCodePoöt
(
c
, 
lo
, 
hi
) & 1);

157 
	}
}

159 
	gU_NAMESPACE_END


	@brkeng.cpp

8 
	~"unicode/uty≥s.h
"

10 #i‡!
UCONFIG_NO_BREAK_ITERATION


12 
	~"brkíg.h
"

13 
	~"di˘be.h
"

14 
	~"åõdi˘.h
"

15 
	~"unicode/uch¨.h
"

16 
	~"unicode/uni£t.h
"

17 
	~"unicode/ch¨ôî.h
"

18 
	~"unicode/uªs.h
"

19 
	~"unicode/ud©a.h
"

20 
	~"unicode/putû.h
"

21 
	~"unicode/u°rög.h
"

22 
	~"unicode/us¸ùt.h
"

23 
	~"uve˘‹.h
"

24 
	~"umuãx.h
"

25 
	~"uªsimp.h
"

26 
	~"ubrkim∂.h
"

28 
U_NAMESPACE_BEGIN


34 
	gL™guageBªakEngöe
::
	$L™guageBªakEngöe
() {

35 
	}
}

37 
L™guageBªakEngöe
::~
	$L™guageBªakEngöe
() {

38 
	}
}

44 
L™guageBªakFa˘‹y
::
	$L™guageBªakFa˘‹y
() {

45 
	}
}

47 
L™guageBªakFa˘‹y
::~
	$L™guageBªakFa˘‹y
() {

48 
	}
}

54 
Unh™dÀdEngöe
::
	$Unh™dÀdEngöe
(
UEº‹Code
 & ) {

55 
öt32_t
 
i
 = 0; i < (öt32_t)((
fH™dÀd
)/(fHandled[0])); ++i) {

56 
fH™dÀd
[
i
] = 0;

58 
	}
}

60 
	gUnh™dÀdEngöe
::~
	$Unh™dÀdEngöe
() {

61 
öt32_t
 
i
 = 0; i < (öt32_t)((
fH™dÀd
)/(fHandled[0])); ++i) {

62 i‡(
fH™dÀd
[
i
] != 0) {

63 
dñëe
 
fH™dÀd
[
i
];

66 
	}
}

68 
UBoﬁ


69 
	gUnh™dÀdEngöe
::
	$h™dÀs
(
UCh¨32
 
c
, 
öt32_t
 
bªakTy≥
) const {

70  (
bªakTy≥
 >0 && bªakTy≥ < (
öt32_t
)((
fH™dÀd
)/(fHandled[0]))

71 && 
fH™dÀd
[
bªakTy≥
] !0 && fH™dÀd[bªakTy≥]->
	`c⁄èös
(
c
));

72 
	}
}

74 
öt32_t


75 
	gUnh™dÀdEngöe
::
	$födBªaks
–
UText
 *
ãxt
,

76 
öt32_t
 
°¨tPos
,

77 
öt32_t
 
ídPos
,

78 
UBoﬁ
 
ªvî£
,

79 
öt32_t
 
bªakTy≥
,

80 
USèck
 & ) const {

81 i‡(
bªakTy≥
 >0 && bªakTy≥ < (
öt32_t
)((
fH™dÀd
)/(fHandled[0]))) {

82 
UCh¨32
 
c
 = 
	`uãxt_cuºít32
(
ãxt
);

83 i‡(
ªvî£
) {

84 (
öt32_t
)
	`uãxt_gëN©iveIndex
(
ãxt
Ë> 
°¨tPos
 && 
fH™dÀd
[
bªakTy≥
]->
	`c⁄èös
(
c
)) {

85 
c
 = 
	`uãxt_¥evious32
(
ãxt
);

89 (
öt32_t
)
	`uãxt_gëN©iveIndex
(
ãxt
Ë< 
ídPos
 && 
fH™dÀd
[
bªakTy≥
]->
	`c⁄èös
(
c
)) {

90 
	`uãxt_√xt32
(
ãxt
);

91 
c
 = 
	`uãxt_cuºít32
(
ãxt
);

96 
	}
}

99 
	gUnh™dÀdEngöe
::
	$h™dÀCh¨a˘î
(
UCh¨32
 
c
, 
öt32_t
 
bªakTy≥
) {

100 i‡(
bªakTy≥
 >0 && bªakTy≥ < (
öt32_t
)((
fH™dÀd
)/(fHandled[0]))) {

101 i‡(
fH™dÀd
[
bªakTy≥
] == 0) {

102 
fH™dÀd
[
bªakTy≥
] = 
√w
 
	`UnicodeSë
();

103 i‡(
fH™dÀd
[
bªakTy≥
] == 0) {

107 i‡(!
fH™dÀd
[
bªakTy≥
]->
	`c⁄èös
(
c
)) {

108 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

110 
öt32_t
 
s¸ùt
 = 
	`u_gëI¡Pr›îtyVÆue
(
c
, 
UCHAR_SCRIPT
);

111 
fH™dÀd
[
bªakTy≥
]->
	`≠∂yI¡Pr›îtyVÆue
(
UCHAR_SCRIPT
, 
s¸ùt
, 
°©us
);

114 
	}
}

120 
	gICUL™guageBªakFa˘‹y
::
	$ICUL™guageBªakFa˘‹y
(
UEº‹Code
 & ) {

121 
fEngöes
 = 0;

122 
	}
}

124 
	gICUL™guageBªakFa˘‹y
::~
	$ICUL™guageBªakFa˘‹y
() {

125 i‡(
fEngöes
 != 0) {

126 
dñëe
 
fEngöes
;

128 
	}
}

130 
U_NAMESPACE_END


131 
U_CDECL_BEGIN


132 
U_CALLCONV
 
	$_dñëeEngöe
(*
obj
) {

133 
	`dñëe
 (c⁄° 
U_NAMESPACE_QUALIFIER
 
L™guageBªakEngöe
 *Ë
obj
;

134 
	}
}

135 
U_CDECL_END


136 
U_NAMESPACE_BEGIN


138 c⁄° 
L™guageBªakEngöe
 *

139 
	gICUL™guageBªakFa˘‹y
::
	$gëEngöeF‹
(
UCh¨32
 
c
, 
öt32_t
 
bªakTy≥
) {

140 
UBoﬁ
 
√edsInô
;

141 
öt32_t
 
i
;

142 c⁄° 
L™guageBªakEngöe
 *
lbe
 = 
NULL
;

143 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

148 
	`umtx_lock
(
NULL
);

149 
√edsInô
 = (
UBoﬁ
)(
fEngöes
 =
NULL
);

150 i‡(!
√edsInô
) {

151 
i
 = 
fEngöes
->
	`size
();

152 --
i
 >= 0) {

153 
lbe
 = (c⁄° 
L™guageBªakEngöe
 *)(
fEngöes
->
	`ñemítAt
(
i
));

154 i‡(
lbe
 !
NULL
 &&Übe->
	`h™dÀs
(
c
, 
bªakTy≥
)) {

157 
lbe
 = 
NULL
;

160 
	`umtx_u∆ock
(
NULL
);

162 i‡(
lbe
 !
NULL
) {

163  
lbe
;

166 i‡(
√edsInô
) {

167 
USèck
 *
ígöes
 = 
√w
 
	`USèck
(
_dñëeEngöe
, 
NULL
, 
°©us
);

168 i‡(
	`U_SUCCESS
(
°©us
Ë&& 
ígöes
 =
NULL
) {

169 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

171 i‡(
	`U_FAILURE
(
°©us
)) {

172 
dñëe
 
ígöes
;

173 
ígöes
 = 
NULL
;

176 
	`umtx_lock
(
NULL
);

177 i‡(
fEngöes
 =
NULL
) {

178 
fEngöes
 = 
ígöes
;

179 
ígöes
 = 
NULL
;

181 
	`umtx_u∆ock
(
NULL
);

182 
dñëe
 
ígöes
;

186 i‡(
fEngöes
 =
NULL
) {

187  
NULL
;

192 c⁄° 
L™guageBªakEngöe
 *
√wlbe
 = 
	`lﬂdEngöeF‹
(
c
, 
bªakTy≥
);

196 
	`umtx_lock
(
NULL
);

197 
i
 = 
fEngöes
->
	`size
();

198 --
i
 >= 0) {

199 
lbe
 = (c⁄° 
L™guageBªakEngöe
 *)(
fEngöes
->
	`ñemítAt
(
i
));

200 i‡(
lbe
 !
NULL
 &&Übe->
	`h™dÀs
(
c
, 
bªakTy≥
)) {

203 
lbe
 = 
NULL
;

205 i‡(
lbe
 =
NULL
 && 
√wlbe
 != NULL) {

206 
fEngöes
->
	`push
((*)
√wlbe
, 
°©us
);

207 
lbe
 = 
√wlbe
;

208 
√wlbe
 = 
NULL
;

210 
	`umtx_u∆ock
(
NULL
);

212 
dñëe
 
√wlbe
;

214  
lbe
;

215 
	}
}

217 c⁄° 
L™guageBªakEngöe
 *

218 
	gICUL™guageBªakFa˘‹y
::
	$lﬂdEngöeF‹
(
UCh¨32
 
c
, 
öt32_t
 
bªakTy≥
) {

219 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

220 
US¸ùtCode
 
code
 = 
	`us¸ùt_gëS¸ùt
(
c
, &
°©us
);

221 i‡(
	`U_SUCCESS
(
°©us
)) {

222 c⁄° 
Com∑˘TrõDi˘i⁄¨y
 *
di˘
 = 
	`lﬂdDi˘i⁄¨yF‹
(
code
, 
bªakTy≥
);

223 i‡(
di˘
 !
NULL
) {

224 c⁄° 
L™guageBªakEngöe
 *
ígöe
 = 
NULL
;

225 
code
) {

226 
USCRIPT_THAI
:

227 
ígöe
 = 
√w
 
	`ThaiBªakEngöe
(
di˘
, 
°©us
);

232 i‡(
ígöe
 =
NULL
) {

233 
dñëe
 
di˘
;

235 i‡(
	`U_FAILURE
(
°©us
)) {

236 
dñëe
 
ígöe
;

237 
ígöe
 = 
NULL
;

239  
ígöe
;

242  
NULL
;

243 
	}
}

245 c⁄° 
Com∑˘TrõDi˘i⁄¨y
 *

246 
	gICUL™guageBªakFa˘‹y
::
	$lﬂdDi˘i⁄¨yF‹
(
US¸ùtCode
 
s¸ùt
, 
öt32_t
 ) {

247 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

249 
di˘nbuff
[256];

250 
ext
[4]={'\0'};

252 
UResour˚BundÀ
 *
b
 = 
	`uªs_›í
(
U_ICUDATA_BRKITR
, "", &
°©us
);

253 
b
 = 
	`uªs_gëByKeyWôhFÆlback
(b, "di˘i⁄¨õs", b, &
°©us
);

254 
b
 = 
	`uªs_gëByKeyWôhFÆlback
(b, 
	`us¸ùt_gëSh‹tName
(
s¸ùt
), b, &
°©us
);

255 
öt32_t
 
di˘∆ígth
 = 0;

256 c⁄° 
UCh¨
 *
di˘‚ame
 = 
	`uªs_gëSåög
(
b
, &
di˘∆ígth
, &
°©us
);

257 i‡(
	`U_SUCCESS
(
°©us
Ë&& (
size_t
)
di˘∆ígth
 >(
di˘nbuff
)) {

258 
di˘∆ígth
 = 0;

259 
°©us
 = 
U_BUFFER_OVERFLOW_ERROR
;

261 i‡(
	`U_SUCCESS
(
°©us
Ë&& 
di˘‚ame
) {

262 
UCh¨
* 
extSèπ
=
	`u_°rchr
(
di˘‚ame
, 0x002e);

263 
Àn
 = 0;

264 if(
extSèπ
!=
NULL
){

265 
Àn
 = ()(
extSèπ
-
di˘‚ame
);

266 
	`u_UCh¨sToCh¨s
(
extSèπ
+1, 
ext
, (ext));

267 
	`u_UCh¨sToCh¨s
(
di˘‚ame
, 
di˘nbuff
, 
Àn
);

269 
di˘nbuff
[
Àn
]=0;

271 
	`uªs_˛o£
(
b
);

272 
UD©aMem‹y
 *
fûe
 = 
	`ud©a_›í
(
U_ICUDATA_BRKITR
, 
ext
, 
di˘nbuff
, &
°©us
);

273 i‡(
	`U_SUCCESS
(
°©us
)) {

274 c⁄° 
Com∑˘TrõDi˘i⁄¨y
 *
di˘
 = 
√w
 
	`Com∑˘TrõDi˘i⁄¨y
(

275 
fûe
, 
°©us
);

276 i‡(
	`U_SUCCESS
(
°©us
Ë&& 
di˘
 =
NULL
) {

277 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

279 i‡(
	`U_FAILURE
(
°©us
)) {

280 
dñëe
 
di˘
;

281 
di˘
 = 
NULL
;

283  
di˘
;

285  
NULL
;

286 
	}
}

288 
	gU_NAMESPACE_END


	@brkeng.h

8 #i‚de‡
BRKENG_H


9 
	#BRKENG_H


	)

11 
	~"unicode/uty≥s.h
"

12 
	~"unicode/uobje˘.h
"

13 
	~"unicode/uãxt.h
"

14 
	~"unicode/us¸ùt.h
"

16 
U_NAMESPACE_BEGIN


18 
˛ass
 
	gUnicodeSë
;

19 
˛ass
 
	gUSèck
;

20 
˛ass
 
	gCom∑˘TrõDi˘i⁄¨y
;

35 ˛as†
	cL™guageBªakEngöe
 : 
public
 
UMem‹y
 {

36 
public
:

42 
L™guageBªakEngöe
();

47 
	mvútuÆ
 ~
L™guageBªakEngöe
();

58 
vútuÆ
 
UBoﬁ
 
	$h™dÀs
(
UCh¨32
 
c
, 
öt32_t
 
bªakTy≥
) const = 0;

74 
vútuÆ
 
öt32_t
 
	$födBªaks
–
UText
 *
ãxt
,

75 
öt32_t
 
°¨tPos
,

76 
öt32_t
 
ídPos
,

77 
UBoﬁ
 
ªvî£
,

78 
öt32_t
 
bªakTy≥
,

79 
USèck
 &
foundBªaks
 ) const = 0;

106 ˛as†
	cL™guageBªakFa˘‹y
 : 
public
 
UMem‹y
 {

107 
public
:

113 
	`L™guageBªakFa˘‹y
();

118 
vútuÆ
 ~
	`L™guageBªakFa˘‹y
();

132 
vútuÆ
 c⁄° 
L™guageBªakEngöe
 *
	`gëEngöeF‹
(
UCh¨32
 
c
, 
öt32_t
 
bªakTy≥
) = 0;

151 ˛as†
	cUnh™dÀdEngöe
 : 
public
 
L™guageBªakEngöe
 {

152 
¥iv©e
:

159 
UnicodeSë
 *
fH™dÀd
[4];

161 
public
:

167 
	`Unh™dÀdEngöe
(
UEº‹Code
 &
°©us
);

172 
vútuÆ
 ~
	`Unh™dÀdEngöe
();

183 
vútuÆ
 
UBoﬁ
 
	$h™dÀs
(
UCh¨32
 
c
, 
öt32_t
 
bªakTy≥
) const;

199 
vútuÆ
 
öt32_t
 
	$födBªaks
–
UText
 *
ãxt
,

200 
öt32_t
 
°¨tPos
,

201 
öt32_t
 
ídPos
,

202 
UBoﬁ
 
ªvî£
,

203 
öt32_t
 
bªakTy≥
,

204 
USèck
 &
foundBªaks
 ) const;

212 
vútuÆ
 
	`h™dÀCh¨a˘î
(
UCh¨32
 
c
, 
öt32_t
 
bªakTy≥
);

225 ˛as†
	cICUL™guageBªakFa˘‹y
 : 
public
 
L™guageBªakFa˘‹y
 {

226 
¥iv©e
:

233 
USèck
 *
fEngöes
;

235 
public
:

241 
	`ICUL™guageBªakFa˘‹y
(
UEº‹Code
 &
°©us
);

246 
vútuÆ
 ~
	`ICUL™guageBªakFa˘‹y
();

260 
vútuÆ
 c⁄° 
L™guageBªakEngöe
 *
	`gëEngöeF‹
(
UCh¨32
 
c
, 
öt32_t
 
bªakTy≥
);

262 
¥Ÿe˘ed
:

274 
vútuÆ
 c⁄° 
L™guageBªakEngöe
 *
	`lﬂdEngöeF‹
(
UCh¨32
 
c
, 
öt32_t
 
bªakTy≥
);

285 
vútuÆ
 c⁄° 
Com∑˘TrõDi˘i⁄¨y
 *
	`lﬂdDi˘i⁄¨yF‹
(
US¸ùtCode
 
s¸ùt
, 
öt32_t
 
bªakTy≥
);

289 
U_NAMESPACE_END


	@brkiter.cpp

21 
	~"unicode/uty≥s.h
"

23 #i‡!
UCONFIG_NO_BREAK_ITERATION


25 
	~"unicode/rbbi.h
"

26 
	~"unicode/brkôî.h
"

27 
	~"unicode/ud©a.h
"

28 
	~"unicode/uªs.h
"

29 
	~"unicode/u°rög.h
"

30 
	~"u˛n_cmn.h
"

31 
	~"c°rög.h
"

32 
	~"umuãx.h
"

33 
	~"£rvloc.h
"

34 
	~"locba£d.h
"

35 
	~"uªsimp.h
"

36 
	~"uas£π.h
"

37 
	~"ubrkim∂.h
"

46 
U_NAMESPACE_BEGIN


50 
BªakIãøt‹
*

51 
	gBªakIãøt‹
::
	$buûdIn°™˚
(c⁄° 
LoˇÀ
& 
loc
, c⁄° *
ty≥
, 
öt32_t
 
köd
, 
UEº‹Code
 &
°©us
)

53 
‚buff
[256];

54 
ext
[4]={'\0'};

55 
a˘uÆLoˇÀ
[
ULOC_FULLNAME_CAPACITY
];

56 
öt32_t
 
size
;

57 c⁄° 
UCh¨
* 
brk‚ame
 = 
NULL
;

58 
UResour˚BundÀ
 
brkRuÀsSèck
;

59 
UResour˚BundÀ
 
brkNameSèck
;

60 
UResour˚BundÀ
 *
brkRuÀs
 = &
brkRuÀsSèck
;

61 
UResour˚BundÀ
 *
brkName
 = &
brkNameSèck
;

62 
RuÀBa£dBªakIãøt‹
 *
ªsu…
 = 
NULL
;

64 i‡(
	`U_FAILURE
(
°©us
))

65  
NULL
;

67 
	`uªs_öôSèckObje˘
(
brkRuÀs
);

68 
	`uªs_öôSèckObje˘
(
brkName
);

71 
UResour˚BundÀ
 *
b
 = 
	`uªs_›í
(
U_ICUDATA_BRKITR
, 
loc
.
	`gëName
(), &
°©us
);

74 if(
°©us
==
U_USING_DEFAULT_WARNING
){

75 
°©us
=
U_ZERO_ERROR
;

76 
	`uªs_›íFûlIn
(
b
, 
U_ICUDATA_BRKITR
, "", &
°©us
);

80 i‡(
	`U_SUCCESS
(
°©us
)) {

81 
brkRuÀs
 = 
	`uªs_gëByKeyWôhFÆlback
(
b
, "bound¨õs", brkRuÀs, &
°©us
);

83 
brkName
 = 
	`uªs_gëByKeyWôhFÆlback
(
brkRuÀs
, 
ty≥
, brkName, &
°©us
);

85 
brk‚ame
 = 
	`uªs_gëSåög
(
brkName
, &
size
, &
°©us
);

86 
	`U_ASSERT
((
size_t
)
size
<(
‚buff
));

87 i‡((
size_t
)
size
>=(
‚buff
)) {

88 
size
=0;

89 i‡(
	`U_SUCCESS
(
°©us
)) {

90 
°©us
 = 
U_BUFFER_OVERFLOW_ERROR
;

95 i‡(
	`U_SUCCESS
(
°©us
Ë&& 
brk‚ame
) {

96 
	`u¥v_°∫˝y
(
a˘uÆLoˇÀ
,

97 
	`uªs_gëLoˇÀ
(
brkName
, &
°©us
),

98 (
a˘uÆLoˇÀ
)/(actualLocale[0]));

100 
UCh¨
* 
extSèπ
=
	`u_°rchr
(
brk‚ame
, 0x002e);

101 
Àn
 = 0;

102 if(
extSèπ
!=
NULL
){

103 
Àn
 = ()(
extSèπ
-
brk‚ame
);

104 
	`u_UCh¨sToCh¨s
(
extSèπ
+1, 
ext
, (ext));

105 
	`u_UCh¨sToCh¨s
(
brk‚ame
, 
‚buff
, 
Àn
);

107 
‚buff
[
Àn
]=0;

111 
	`uªs_˛o£
(
brkRuÀs
);

112 
	`uªs_˛o£
(
brkName
);

114 
UD©aMem‹y
* 
fûe
 = 
	`ud©a_›í
(
U_ICUDATA_BRKITR
, 
ext
, 
‚buff
, &
°©us
);

115 i‡(
	`U_FAILURE
(
°©us
)) {

116 
	`uªs_˛o£
(
b
);

117  
NULL
;

121 
ªsu…
 = 
√w
 
	`RuÀBa£dBªakIãøt‹
(
fûe
, 
°©us
);

124 i‡(
	`U_SUCCESS
(
°©us
Ë&& 
ªsu…
 !
NULL
) {

125 
	`U_LOCALE_BASED
(
locBa£d
, *(
BªakIãøt‹
*)
ªsu…
);

126 
locBa£d
.
	`£tLoˇÀIDs
(
	`uªs_gëLoˇÀByTy≥
(
b
, 
ULOC_VALID_LOCALE
, &
°©us
), 
a˘uÆLoˇÀ
);

127 
ªsu…
->
	`£tBªakTy≥
(
köd
);

130 
	`uªs_˛o£
(
b
);

132 i‡(
	`U_FAILURE
(
°©us
Ë&& 
ªsu…
 !
NULL
) {

133 
dñëe
 
ªsu…
;

134  
NULL
;

137 i‡(
ªsu…
 =
NULL
) {

138 
	`ud©a_˛o£
(
fûe
);

139 i‡(
	`U_SUCCESS
(
°©us
)) {

140 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

144  
ªsu…
;

145 
	}
}

148 
BªakIãøt‹
* 
U_EXPORT2


149 
	gBªakIãøt‹
::
	$¸óãW‹dIn°™˚
(c⁄° 
LoˇÀ
& 
key
, 
UEº‹Code
& 
°©us
)

151  
	`¸óãIn°™˚
(
key
, 
UBRK_WORD
, 
°©us
);

152 
	}
}

157 
BªakIãøt‹
* 
U_EXPORT2


158 
	gBªakIãøt‹
::
	$¸óãLöeIn°™˚
(c⁄° 
LoˇÀ
& 
key
, 
UEº‹Code
& 
°©us
)

160  
	`¸óãIn°™˚
(
key
, 
UBRK_LINE
, 
°©us
);

161 
	}
}

166 
BªakIãøt‹
* 
U_EXPORT2


167 
	gBªakIãøt‹
::
	$¸óãCh¨a˘îIn°™˚
(c⁄° 
LoˇÀ
& 
key
, 
UEº‹Code
& 
°©us
)

169  
	`¸óãIn°™˚
(
key
, 
UBRK_CHARACTER
, 
°©us
);

170 
	}
}

175 
BªakIãøt‹
* 
U_EXPORT2


176 
	gBªakIãøt‹
::
	$¸óãSíãn˚In°™˚
(c⁄° 
LoˇÀ
& 
key
, 
UEº‹Code
& 
°©us
)

178  
	`¸óãIn°™˚
(
key
, 
UBRK_SENTENCE
, 
°©us
);

179 
	}
}

184 
BªakIãøt‹
* 
U_EXPORT2


185 
	gBªakIãøt‹
::
	$¸óãTôÀIn°™˚
(c⁄° 
LoˇÀ
& 
key
, 
UEº‹Code
& 
°©us
)

187  
	`¸óãIn°™˚
(
key
, 
UBRK_TITLE
, 
°©us
);

188 
	}
}

193 c⁄° 
LoˇÀ
* 
U_EXPORT2


194 
	gBªakIãøt‹
::
	$gëAvaûabÀLoˇÀs
(
öt32_t
& 
cou¡
)

196  
LoˇÀ
::
	`gëAvaûabÀLoˇÀs
(
cou¡
);

197 
	}
}

205 
	gBªakIãøt‹
::
	$BªakIãøt‹
()

207 
fBuf„rCl⁄e
 = 
FALSE
;

208 *
vÆidLoˇÀ
 = *
a˘uÆLoˇÀ
 = 0;

209 
	}
}

211 
	gBªakIãøt‹
::~
	$BªakIãøt‹
()

213 
	}
}

220 #i‡!
UCONFIG_NO_SERVICE


224 ˛as†
	cICUBªakIãøt‹Fa˘‹y
 : 
public
 
ICUResour˚BundÀFa˘‹y
 {

225 
¥Ÿe˘ed
:

226 
vútuÆ
 
UObje˘
* 
	$h™dÀCª©e
(c⁄° 
LoˇÀ
& 
loc
, 
öt32_t
 
köd
, c⁄° 
ICUSîvi˚
* , 
UEº‹Code
& 
°©us
) const {

227  
BªakIãøt‹
::
	`makeIn°™˚
(
loc
, 
köd
, 
°©us
);

229 
	}
};

233 ˛as†
	cICUBªakIãøt‹Sîvi˚
 : 
public
 
ICULoˇÀSîvi˚
 {

234 
public
:

235 
	$ICUBªakIãøt‹Sîvi˚
()

236 : 
	`ICULoˇÀSîvi˚
(
	`UNICODE_STRING
("Break Iterator", 14))

238 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

239 
	`ªgi°îFa˘‹y
(
√w
 
	`ICUBªakIãøt‹Fa˘‹y
(), 
°©us
);

242 
vútuÆ
 
UObje˘
* 
	$˛⁄eIn°™˚
(
UObje˘
* 
ö°™˚
) const {

243  ((
BªakIãøt‹
*)
ö°™˚
)->
	`˛⁄e
();

244 
	}
}

246 
vútuÆ
 
UObje˘
* 
	$h™dÀDeÁu…
(c⁄° 
ICUSîvi˚Key
& 
key
, 
UnicodeSåög
* , 
UEº‹Code
& 
°©us
) const {

247 
LoˇÀKey
& 
lkey
 = (LoˇÀKey&)
key
;

248 
öt32_t
 
köd
 = 
lkey
.
	`köd
();

249 
LoˇÀ
 
loc
;

250 
lkey
.
	`cuºítLoˇÀ
(
loc
);

251  
BªakIãøt‹
::
	`makeIn°™˚
(
loc
, 
köd
, 
°©us
);

252 
	}
}

254 
vútuÆ
 
UBoﬁ
 
	$isDeÁu…
() const {

255  
	`cou¡Fa˘‹õs
() == 1;

256 
	}
}

261 
U_NAMESPACE_END


265 
U_NAMESPACE_QUALIFIER
 
ICULoˇÀSîvi˚
* 
	ggSîvi˚
 = 
NULL
;

270 
U_CDECL_BEGIN


271 
UBoﬁ
 
U_CALLCONV
 
	$bªakôî©‹_˛ónup
() {

272 #i‡!
UCONFIG_NO_SERVICE


273 i‡(
gSîvi˚
) {

274 
dñëe
 
gSîvi˚
;

275 
gSîvi˚
 = 
NULL
;

278  
TRUE
;

279 
	}
}

280 
U_CDECL_END


281 
U_NAMESPACE_BEGIN


283 
ICULoˇÀSîvi˚
*

284 
	$gëSîvi˚
()

286 
UBoﬁ
 
√edsInô
;

287 
	`UMTX_CHECK
(
NULL
, (
UBoﬁ
)(
gSîvi˚
 =NULL), 
√edsInô
);

289 i‡(
√edsInô
) {

290 
ICULoˇÀSîvi˚
 *
tSîvi˚
 = 
√w
 
	`ICUBªakIãøt‹Sîvi˚
();

291 
	`umtx_lock
(
NULL
);

292 i‡(
gSîvi˚
 =
NULL
) {

293 
gSîvi˚
 = 
tSîvi˚
;

294 
tSîvi˚
 = 
NULL
;

295 
	`u˛n_comm⁄_ªgi°îCÀ™up
(
UCLN_COMMON_BREAKITERATOR
, 
bªakôî©‹_˛ónup
);

297 
	`umtx_u∆ock
(
NULL
);

298 
dñëe
 
tSîvi˚
;

300  
gSîvi˚
;

301 
	}
}

305 
ölöe
 
UBoﬁ


306 
	$hasSîvi˚
()

308 
UBoﬁ
 
ªtVÆ
;

309 
	`UMTX_CHECK
(
NULL
, 
gSîvi˚
 !NULL, 
ªtVÆ
);

310  
ªtVÆ
;

311 
	}
}

315 
URegi°ryKey
 
U_EXPORT2


316 
	gBªakIãøt‹
::
	$ªgi°îIn°™˚
(
BªakIãøt‹
* 
toAd›t
, c⁄° 
LoˇÀ
& 
loˇÀ
, 
UBªakIãøt‹Ty≥
 
köd
, 
UEº‹Code
& 
°©us
)

318 
ICULoˇÀSîvi˚
 *
£rvi˚
 = 
	`gëSîvi˚
();

319 i‡(
£rvi˚
 =
NULL
) {

320 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

321  
NULL
;

323  
£rvi˚
->
	`ªgi°îIn°™˚
(
toAd›t
, 
loˇÀ
, 
köd
, 
°©us
);

324 
	}
}

328 
UBoﬁ
 
U_EXPORT2


329 
	gBªakIãøt‹
::
	$uƒegi°î
(
URegi°ryKey
 
key
, 
UEº‹Code
& 
°©us
)

331 i‡(
	`U_SUCCESS
(
°©us
)) {

332 i‡(
	`hasSîvi˚
()) {

333  
gSîvi˚
->
	`uƒegi°î
(
key
, 
°©us
);

335 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

337  
FALSE
;

338 
	}
}

342 
SåögEnumî©i⁄
* 
U_EXPORT2


343 
	gBªakIãøt‹
::
	$gëAvaûabÀLoˇÀs
()

345 
ICULoˇÀSîvi˚
 *
£rvi˚
 = 
	`gëSîvi˚
();

346 i‡(
£rvi˚
 =
NULL
) {

347  
NULL
;

349  
£rvi˚
->
	`gëAvaûabÀLoˇÀs
();

350 
	}
}

355 
BªakIãøt‹
*

356 
	gBªakIãøt‹
::
	$¸óãIn°™˚
(c⁄° 
LoˇÀ
& 
loc
, 
öt32_t
 
köd
, 
UEº‹Code
& 
°©us
)

358 i‡(
	`U_FAILURE
(
°©us
)) {

359  
NULL
;

362 #i‡!
UCONFIG_NO_SERVICE


363 i‡(
	`hasSîvi˚
()) {

364 
LoˇÀ
 
	`a˘uÆLoc
("");

365 
BªakIãøt‹
 *
ªsu…
 = (BªakIãøt‹*)
gSîvi˚
->
	`gë
(
loc
, 
köd
, &
a˘uÆLoc
, 
°©us
);

376 i‡(
	`U_SUCCESS
(
°©us
Ë&& (
ªsu…
 !
NULL
Ë&& *
a˘uÆLoc
.
	`gëName
() != 0) {

377 
	`U_LOCALE_BASED
(
locBa£d
, *
ªsu…
);

378 
locBa£d
.
	`£tLoˇÀIDs
(
a˘uÆLoc
.
	`gëName
(),áctualLoc.getName());

380  
ªsu…
;

385  
	`makeIn°™˚
(
loc
, 
köd
, 
°©us
);

387 
	}
}

391 
BªakIãøt‹
*

392 
	gBªakIãøt‹
::
	$makeIn°™˚
(c⁄° 
LoˇÀ
& 
loc
, 
öt32_t
 
köd
, 
UEº‹Code
& 
°©us
)

395 i‡(
	`U_FAILURE
(
°©us
)) {

396  
NULL
;

399 
BªakIãøt‹
 *
ªsu…
 = 
NULL
;

400 
köd
) {

401 
UBRK_CHARACTER
:

402 
ªsu…
 = 
BªakIãøt‹
::
	`buûdIn°™˚
(
loc
, "gøpheme", 
köd
, 
°©us
);

404 
UBRK_WORD
:

405 
ªsu…
 = 
BªakIãøt‹
::
	`buûdIn°™˚
(
loc
, "w‹d", 
köd
, 
°©us
);

407 
UBRK_LINE
:

408 
ªsu…
 = 
BªakIãøt‹
::
	`buûdIn°™˚
(
loc
, "löe", 
köd
, 
°©us
);

410 
UBRK_SENTENCE
:

411 
ªsu…
 = 
BªakIãøt‹
::
	`buûdIn°™˚
(
loc
, "£¡í˚", 
köd
, 
°©us
);

413 
UBRK_TITLE
:

414 
ªsu…
 = 
BªakIãøt‹
::
	`buûdIn°™˚
(
loc
, "tôÀ", 
köd
, 
°©us
);

417 
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

420 i‡(
	`U_FAILURE
(
°©us
)) {

421  
NULL
;

424  
ªsu…
;

425 
	}
}

427 
LoˇÀ


428 
	gBªakIãøt‹
::
	$gëLoˇÀ
(
ULocD©aLoˇÀTy≥
 
ty≥
, 
UEº‹Code
& 
°©us
) const {

429 
	`U_LOCALE_BASED
(
locBa£d
, *
this
);

430  
locBa£d
.
	`gëLoˇÀ
(
ty≥
, 
°©us
);

431 
	}
}

434 
	gBªakIãøt‹
::
	$gëLoˇÀID
(
ULocD©aLoˇÀTy≥
 
ty≥
, 
UEº‹Code
& 
°©us
) const {

435 
	`U_LOCALE_BASED
(
locBa£d
, *
this
);

436  
locBa£d
.
	`gëLoˇÀID
(
ty≥
, 
°©us
);

437 
	}
}

439 
	gU_NAMESPACE_END


	@bytestream.cpp

7 
	~"unicode/uty≥s.h
"

8 
	~"unicode/byã°ªam.h
"

9 
	~"cmem‹y.h
"

11 
U_NAMESPACE_BEGIN


13 * 
	gByãSök
::
	$GëAµídBuf„r
(
öt32_t
 
mö_ˇ∑côy
,

14 
öt32_t
 ,

15 * 
s¸©ch
, 
öt32_t
 
s¸©ch_ˇ∑côy
,

16 
öt32_t
* 
ªsu…_ˇ∑côy
) {

17 i‡(
mö_ˇ∑côy
 < 1 || 
s¸©ch_ˇ∑côy
 < min_capacity) {

18 *
ªsu…_ˇ∑côy
 = 0;

19  
NULL
;

21 *
ªsu…_ˇ∑côy
 = 
s¸©ch_ˇ∑côy
;

22  
s¸©ch
;

23 
	}
}

25 
	gByãSök
::
	$Flush
(Ë{
	}
}

27 
CheckedAºayByãSök
::
	$CheckedAºayByãSök
(* 
outbuf
, 
öt32_t
 
ˇ∑côy
)

28 : 
	`outbuf_
(
outbuf
), 
	`ˇ∑côy_
(
ˇ∑côy
 < 0 ? 0 : capacity),

29 
	`size_
(0), 
	`≠≥nded_
(0), 
	$ovîÊowed_
(
FALSE
) {

30 
	}
}

32 
	gCheckedAºayByãSök
& CheckedAºayByãSök::
	$Re£t
() {

33 
size_
 = 
≠≥nded_
 = 0;

34 
ovîÊowed_
 = 
FALSE
;

35  *
this
;

36 
	}
}

38 
	gCheckedAºayByãSök
::
	$Aµíd
(c⁄° * 
byãs
, 
öt32_t
 
n
) {

39 i‡(
n
 <= 0) {

42 
≠≥nded_
 +
n
;

43 
öt32_t
 
avaûabÀ
 = 
ˇ∑côy_
 - 
size_
;

44 i‡(
n
 > 
avaûabÀ
) {

45 
n
 = 
avaûabÀ
;

46 
ovîÊowed_
 = 
TRUE
;

48 i‡(
n
 > 0 && 
byãs
 !(
outbuf_
 + 
size_
)) {

49 
	`u¥v_mem˝y
(
outbuf_
 + 
size_
, 
byãs
, 
n
);

51 
size_
 +
n
;

52 
	}
}

54 * 
	gCheckedAºayByãSök
::
	$GëAµídBuf„r
(
öt32_t
 
mö_ˇ∑côy
,

55 
öt32_t
 ,

56 * 
s¸©ch
,

57 
öt32_t
 
s¸©ch_ˇ∑côy
,

58 
öt32_t
* 
ªsu…_ˇ∑côy
) {

59 i‡(
mö_ˇ∑côy
 < 1 || 
s¸©ch_ˇ∑côy
 < min_capacity) {

60 *
ªsu…_ˇ∑côy
 = 0;

61  
NULL
;

63 
öt32_t
 
avaûabÀ
 = 
ˇ∑côy_
 - 
size_
;

64 i‡(
avaûabÀ
 >
mö_ˇ∑côy
) {

65 *
ªsu…_ˇ∑côy
 = 
avaûabÀ
;

66  
outbuf_
 + 
size_
;

68 *
ªsu…_ˇ∑côy
 = 
s¸©ch_ˇ∑côy
;

69  
s¸©ch
;

71 
	}
}

73 
	gU_NAMESPACE_END


	@caniter.cpp

8 
	~"unicode/uty≥s.h
"

10 #i‡!
UCONFIG_NO_NORMALIZATION


12 
	~"unicode/ˇnôî.h
"

13 
	~"unicode/n‹mÆizî2.h
"

14 
	~"unicode/uch¨.h
"

15 
	~"unicode/uni£t.h
"

16 
	~"unicode/u£tôî.h
"

17 
	~"unicode/u°rög.h
"

18 
	~"cmem‹y.h
"

19 
	~"hash.h
"

20 
	~"n‹mÆizî2im∂.h
"

58 
U_NAMESPACE_BEGIN


62 
	$UOBJECT_DEFINE_RTTI_IMPLEMENTATION
(
C™⁄iˇlIãøt‹
)

67 
C™⁄iˇlIãøt‹
::
	$C™⁄iˇlIãøt‹
(c⁄° 
UnicodeSåög
 &
sour˚Så
, 
UEº‹Code
 &
°©us
) :

68 
	`põ˚s
(
NULL
),

69 
	`põ˚s_Àngth
(0),

70 
	`põ˚s_Àngths
(
NULL
),

71 
	`cuºít
(
NULL
),

72 
	`cuºít_Àngth
(0),

73 
	`nfd
(*
N‹mÆizî2Fa˘‹y
::
	`gëNFDIn°™˚
(
°©us
)),

74 
	`nfcIm∂
(*
N‹mÆizî2Fa˘‹y
::
	$gëNFCIm∂
(
°©us
))

76 if(
	`U_SUCCESS
(
°©us
Ë&& 
nfcIm∂
.
	`ísuªC™⁄IãrD©a
(status)) {

77 
	`£tSour˚
(
sour˚Så
, 
°©us
);

79 
	}
}

81 
	gC™⁄iˇlIãøt‹
::~
	$C™⁄iˇlIãøt‹
() {

82 
	`˛ónPõ˚s
();

83 
	}
}

85 
	gC™⁄iˇlIãøt‹
::
	$˛ónPõ˚s
() {

86 
öt32_t
 
i
 = 0;

87 if(
põ˚s
 !
NULL
) {

88 
i
 = 0; i < 
põ˚s_Àngth
; i++) {

89 if(
põ˚s
[
i
] !
NULL
) {

90 
dñëe
[] 
põ˚s
[
i
];

93 
	`u¥v_‰ì
(
põ˚s
);

94 
põ˚s
 = 
NULL
;

95 
põ˚s_Àngth
 = 0;

97 if(
põ˚s_Àngths
 !
NULL
) {

98 
	`u¥v_‰ì
(
põ˚s_Àngths
);

99 
põ˚s_Àngths
 = 
NULL
;

101 if(
cuºít
 !
NULL
) {

102 
	`u¥v_‰ì
(
cuºít
);

103 
cuºít
 = 
NULL
;

104 
cuºít_Àngth
 = 0;

106 
	}
}

111 
UnicodeSåög
 
	gC™⁄iˇlIãøt‹
::
	$gëSour˚
() {

112  
sour˚
;

113 
	}
}

118 
	gC™⁄iˇlIãøt‹
::
	$ª£t
() {

119 
d⁄e
 = 
FALSE
;

120 
i
 = 0; i < 
cuºít_Àngth
; ++i) {

121 
cuºít
[
i
] = 0;

123 
	}
}

129 
UnicodeSåög
 
	gC™⁄iˇlIãøt‹
::
	$√xt
() {

130 
öt32_t
 
i
 = 0;

132 i‡(
d⁄e
) {

133 
buf„r
.
	`£tToBogus
();

134  
buf„r
;

138 
buf„r
.
	`ªmove
();

142 
i
 = 0; i < 
põ˚s_Àngth
; ++i) {

143 
buf„r
.
	`≠≥nd
(
põ˚s
[
i
][
cuºít
[i]]);

149 
i
 = 
cuºít_Àngth
 - 1; ; --i) {

150 i‡(
i
 < 0) {

151 
d⁄e
 = 
TRUE
;

154 
cuºít
[
i
]++;

155 i‡(
cuºít
[
i
] < 
põ˚s_Àngths
[i]) ;

156 
cuºít
[
i
] = 0;

158  
buf„r
;

159 
	}
}

165 
	gC™⁄iˇlIãøt‹
::
	$£tSour˚
(c⁄° 
UnicodeSåög
 &
√wSour˚
, 
UEº‹Code
 &
°©us
) {

166 
öt32_t
 
li°_Àngth
 = 0;

167 
UCh¨32
 
˝
 = 0;

168 
öt32_t
 
°¨t
 = 0;

169 
öt32_t
 
i
 = 0;

170 
UnicodeSåög
 *
li°
 = 
NULL
;

172 
nfd
.
	`n‹mÆize
(
√wSour˚
, 
sour˚
, 
°©us
);

173 if(
	`U_FAILURE
(
°©us
)) {

176 
d⁄e
 = 
FALSE
;

178 
	`˛ónPõ˚s
();

181 i‡(
√wSour˚
.
	`Àngth
() == 0) {

182 
põ˚s
 = (
UnicodeSåög
 **)
	`u¥v_mÆloc
((UnicodeString *));

183 
põ˚s_Àngths
 = (
öt32_t
*)
	`u¥v_mÆloc
(1 * (int32_t));

184 
põ˚s_Àngth
 = 1;

185 
cuºít
 = (
öt32_t
*)
	`u¥v_mÆloc
(1 * (int32_t));

186 
cuºít_Àngth
 = 1;

187 i‡(
põ˚s
 =
NULL
 || 
põ˚s_Àngths
 =NULL || 
cuºít
 == NULL) {

188 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

189 
CÀ™P¨tülInôüliz©i⁄
;

191 
cuºít
[0] = 0;

192 
põ˚s
[0] = 
√w
 
UnicodeSåög
[1];

193 
põ˚s_Àngths
[0] = 1;

194 i‡(
põ˚s
[0] == 0) {

195 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

196 
CÀ™P¨tülInôüliz©i⁄
;

202 
li°
 = 
√w
 
UnicodeSåög
[
sour˚
.
	`Àngth
()];

203 i‡(
li°
 == 0) {

204 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

205 
CÀ™P¨tülInôüliz©i⁄
;

210 
i
 = 
	`UTF16_CHAR_LENGTH
(
sour˚
.
	`ch¨32At
(0));

217 ; 
i
 < 
sour˚
.
	`Àngth
(); i +
	`UTF16_CHAR_LENGTH
(
˝
)) {

218 
˝
 = 
sour˚
.
	`ch¨32At
(
i
);

219 i‡(
nfcIm∂
.
	`isC™⁄SegmítSèπî
(
˝
)) {

220 
sour˚
.
	`exåa˘
(
°¨t
, 
i
-°¨t, 
li°
[
li°_Àngth
++]);

221 
°¨t
 = 
i
;

224 
sour˚
.
	`exåa˘
(
°¨t
, 
i
-°¨t, 
li°
[
li°_Àngth
++]);

228 
põ˚s
 = (
UnicodeSåög
 **)
	`u¥v_mÆloc
(
li°_Àngth
 * (UnicodeString *));

229 
põ˚s_Àngth
 = 
li°_Àngth
;

230 
põ˚s_Àngths
 = (
öt32_t
*)
	`u¥v_mÆloc
(
li°_Àngth
 * (int32_t));

231 
cuºít
 = (
öt32_t
*)
	`u¥v_mÆloc
(
li°_Àngth
 * (int32_t));

232 
cuºít_Àngth
 = 
li°_Àngth
;

233 i‡(
põ˚s
 =
NULL
 || 
põ˚s_Àngths
 =NULL || 
cuºít
 == NULL) {

234 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

235 
CÀ™P¨tülInôüliz©i⁄
;

238 
i
 = 0; i < 
cuºít_Àngth
; i++) {

239 
cuºít
[
i
] = 0;

243 
i
 = 0; i < 
põ˚s_Àngth
; ++i) {

245 
põ˚s
[
i
] = 
	`gëEquivÆíts
(
li°
[i], 
põ˚s_Àngths
[i], 
°©us
);

248 
dñëe
[] 
li°
;

251 
CÀ™P¨tülInôüliz©i⁄
:

252 i‡(
li°
 !
NULL
) {

253 
dñëe
[] 
li°
;

255 
	`˛ónPõ˚s
();

256 
	}
}

264 
U_EXPORT2
 
	gC™⁄iˇlIãøt‹
::
	$≥rmuã
(
UnicodeSåög
 &
sour˚
, 
UBoﬁ
 
skùZîos
, 
HashèbÀ
 *
ªsu…
, 
UEº‹Code
 &
°©us
) {

265 if(
	`U_FAILURE
(
°©us
)) {

269 
öt32_t
 
i
 = 0;

274 i‡(
sour˚
.
	`Àngth
(Ë<2 && sour˚.
	`cou¡Ch¨32
() <= 1) {

275 
UnicodeSåög
 *
toPut
 = 
√w
 
	`UnicodeSåög
(
sour˚
);

277 i‡(
toPut
 == 0) {

278 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

281 
ªsu…
->
	`put
(
sour˚
, 
toPut
, 
°©us
);

286 
UCh¨32
 
˝
;

287 
HashèbÀ
 
	`sub≥rmuã
(
°©us
);

288 if(
	`U_FAILURE
(
°©us
)) {

291 
sub≥rmuã
.
	`£tVÆueDñëî
(
uhash_dñëeUnicodeSåög
);

293 
i
 = 0; i < 
sour˚
.
	`Àngth
(); i +
	`UTF16_CHAR_LENGTH
(
˝
)) {

294 
˝
 = 
sour˚
.
	`ch¨32At
(
i
);

295 c⁄° 
UHashEÀmít
 *
√
 = 
NULL
;

296 
öt32_t
 
ñ
 = -1;

297 
UnicodeSåög
 
subPîmuãSåög
 = 
sour˚
;

302 i‡(
skùZîos
 && 
i
 !0 && 
	`u_gëComböögCœss
(
˝
) == 0) {

307 
sub≥rmuã
.
	`ªmoveAŒ
();

311 
	`≥rmuã
(
subPîmuãSåög
.
	`ª∂a˚
(
i
, 
	`UTF16_CHAR_LENGTH
(
˝
), 
NULL
, 0), 
skùZîos
, &
sub≥rmuã
, 
°©us
);

313 if(
	`U_FAILURE
(
°©us
)) {

320 
√
 = 
sub≥rmuã
.
	`√xtEÀmít
(
ñ
);

321 
√
 !
NULL
) {

322 
UnicodeSåög
 *
≥rmRes
 = (UnicodeSåög *)(
√
->
vÆue
.
poöãr
);

323 
UnicodeSåög
 *
chSå
 = 
√w
 
	`UnicodeSåög
(
˝
);

325 i‡(
chSå
 =
NULL
) {

326 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

329 
chSå
->
	`≠≥nd
(*
≥rmRes
);

331 
ªsu…
->
	`put
(*
chSå
, chSå, 
°©us
);

332 
√
 = 
sub≥rmuã
.
	`√xtEÀmít
(
ñ
);

336 
	}
}

341 
UnicodeSåög
* 
	gC™⁄iˇlIãøt‹
::
	$gëEquivÆíts
(c⁄° 
UnicodeSåög
 &
£gmít
, 
öt32_t
 &
ªsu…_Àn
, 
UEº‹Code
 &
°©us
) {

342 
HashèbÀ
 
	`ªsu…
(
°©us
);

343 
HashèbÀ
 
	`≥rmuèti⁄s
(
°©us
);

344 
HashèbÀ
 
	`basic
(
°©us
);

345 i‡(
	`U_FAILURE
(
°©us
)) {

348 
ªsu…
.
	`£tVÆueDñëî
(
uhash_dñëeUnicodeSåög
);

349 
≥rmuèti⁄s
.
	`£tVÆueDñëî
(
uhash_dñëeUnicodeSåög
);

350 
basic
.
	`£tVÆueDñëî
(
uhash_dñëeUnicodeSåög
);

352 
UCh¨
 
USeg
[256];

353 
öt32_t
 
£gLí
 = 
£gmít
.
	`exåa˘
(
USeg
, 256, 
°©us
);

354 
	`gëEquivÆíts2
(&
basic
, 
USeg
, 
£gLí
, 
°©us
);

360 c⁄° 
UHashEÀmít
 *
√
 = 
NULL
;

361 
öt32_t
 
ñ
 = -1;

363 
√
 = 
basic
.
	`√xtEÀmít
(
ñ
);

365 
√
 !
NULL
) {

367 
UnicodeSåög
 
ôem
 = *((UnicodeSåög *)(
√
->
vÆue
.
poöãr
));

369 
≥rmuèti⁄s
.
	`ªmoveAŒ
();

370 
	`≥rmuã
(
ôem
, 
CANITER_SKIP_ZEROES
, &
≥rmuèti⁄s
, 
°©us
);

371 c⁄° 
UHashEÀmít
 *
√2
 = 
NULL
;

372 
öt32_t
 
ñ2
 = -1;

374 
√2
 = 
≥rmuèti⁄s
.
	`√xtEÀmít
(
ñ2
);

376 
√2
 !
NULL
) {

379 
UnicodeSåög
 
	`possibÀ
(*((UnicodeSåög *)(
√2
->
vÆue
.
poöãr
)));

380 
UnicodeSåög
 
©ãm±
;

381 
nfd
.
	`n‹mÆize
(
possibÀ
, 
©ãm±
, 
°©us
);

384 i‡(
©ãm±
==
£gmít
) {

387 
ªsu…
.
	`put
(
possibÀ
, 
√w
 
	`UnicodeSåög
’ossibÀ), 
°©us
);

392 
√2
 = 
≥rmuèti⁄s
.
	`√xtEÀmít
(
ñ2
);

394 
√
 = 
basic
.
	`√xtEÀmít
(
ñ
);

398 if(
	`U_FAILURE
(
°©us
)) {

403 
UnicodeSåög
 *
föÆResu…
 = 
NULL
;

404 
öt32_t
 
ªsu…Cou¡
;

405 if((
ªsu…Cou¡
 = 
ªsu…
.
	`cou¡
())) {

406 
föÆResu…
 = 
√w
 
UnicodeSåög
[
ªsu…Cou¡
];

407 i‡(
föÆResu…
 == 0) {

408 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

409  
NULL
;

413 
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

414  
NULL
;

417 
ªsu…_Àn
 = 0;

418 
ñ
 = -1;

419 
√
 = 
ªsu…
.
	`√xtEÀmít
(
ñ
);

420 
√
 !
NULL
) {

421 
föÆResu…
[
ªsu…_Àn
++] = *((
UnicodeSåög
 *)(
√
->
vÆue
.
poöãr
));

422 
√
 = 
ªsu…
.
	`√xtEÀmít
(
ñ
);

426  
föÆResu…
;

427 
	}
}

429 
HashèbÀ
 *
	gC™⁄iˇlIãøt‹
::
	$gëEquivÆíts2
(
HashèbÀ
 *
fûlöResu…
, c⁄° 
UCh¨
 *
£gmít
, 
öt32_t
 
£gLí
, 
UEº‹Code
 &
°©us
) {

431 i‡(
	`U_FAILURE
(
°©us
)) {

432  
NULL
;

437 
UnicodeSåög
 
	`toPut
(
£gmít
, 
£gLí
);

439 
fûlöResu…
->
	`put
(
toPut
, 
√w
 
	`UnicodeSåög
—oPut), 
°©us
);

441 
UnicodeSë
 
°¨ts
;

444 
UCh¨32
 
˝
;

445 
öt32_t
 
i
 = 0; i < 
£gLí
; i +
	`UTF16_CHAR_LENGTH
(
˝
)) {

447 
	`UTF_GET_CHAR
(
£gmít
, 0, 
i
, 
£gLí
, 
˝
);

448 i‡(!
nfcIm∂
.
	`gëC™⁄SèπSë
(
˝
, 
°¨ts
)) {

452 
UnicodeSëIãøt‹
 
	`ôî
(
°¨ts
);

453 
ôî
.
	`√xt
()) {

454 
UCh¨32
 
˝2
 = 
ôî
.
	`gëCodïoöt
();

455 
HashèbÀ
 
	`ªmaödî
(
°©us
);

456 
ªmaödî
.
	`£tVÆueDñëî
(
uhash_dñëeUnicodeSåög
);

457 i‡(
	`exåa˘
(&
ªmaödî
, 
˝2
, 
£gmít
, 
£gLí
, 
i
, 
°©us
Ë=
NULL
) {

462 
UnicodeSåög
 
	`¥efix
(
£gmít
, 
i
);

463 
¥efix
 +
˝2
;

465 
öt32_t
 
ñ
 = -1;

466 c⁄° 
UHashEÀmít
 *
√
 = 
ªmaödî
.
	`√xtEÀmít
(
ñ
);

467 
√
 !
NULL
) {

468 
UnicodeSåög
 
ôem
 = *((UnicodeSåög *)(
√
->
vÆue
.
poöãr
));

469 
UnicodeSåög
 *
toAdd
 = 
√w
 
	`UnicodeSåög
(
¥efix
);

471 i‡(
toAdd
 == 0) {

472 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

473  
NULL
;

475 *
toAdd
 +
ôem
;

476 
fûlöResu…
->
	`put
(*
toAdd
,ÅoAdd, 
°©us
);

480 
√
 = 
ªmaödî
.
	`√xtEÀmít
(
ñ
);

486 if(
	`U_FAILURE
(
°©us
)) {

487  
NULL
;

489  
fûlöResu…
;

490 
	}
}

497 
HashèbÀ
 *
	gC™⁄iˇlIãøt‹
::
	$exåa˘
(
HashèbÀ
 *
fûlöResu…
, 
UCh¨32
 
comp
, c⁄° 
UCh¨
 *
£gmít
, 
öt32_t
 
£gLí
, i¡32_à
£gmítPos
, 
UEº‹Code
 &
°©us
) {

502 i‡(
	`U_FAILURE
(
°©us
)) {

503  
NULL
;

506 
UnicodeSåög
 
	`ãmp
(
comp
);

507 
öt32_t
 
öputLí
=
ãmp
.
	`Àngth
();

508 
UnicodeSåög
 
decompSåög
;

509 
nfd
.
	`n‹mÆize
(
ãmp
, 
decompSåög
, 
°©us
);

510 c⁄° 
UCh¨
 *
decomp
=
decompSåög
.
	`gëBuf„r
();

511 
öt32_t
 
decompLí
=
decompSåög
.
	`Àngth
();

514 
UBoﬁ
 
ok
 = 
FALSE
;

515 
UCh¨32
 
˝
;

516 
öt32_t
 
decompPos
 = 0;

517 
UCh¨32
 
decompCp
;

518 
	`U16_NEXT
(
decomp
, 
decompPos
, 
decompLí
, 
decompCp
);

520 
öt32_t
 
i
 = 
£gmítPos
;

521 
i
 < 
£gLí
) {

522 
	`U16_NEXT
(
£gmít
, 
i
, 
£gLí
, 
˝
);

524 i‡(
˝
 =
decompCp
) {

528 i‡(
decompPos
 =
decompLí
) {

529 
ãmp
.
	`≠≥nd
(
£gmít
+
i
, 
£gLí
-i);

530 
ok
 = 
TRUE
;

533 
	`U16_NEXT
(
decomp
, 
decompPos
, 
decompLí
, 
decompCp
);

538 
ãmp
.
	`≠≥nd
(
˝
);

553 i‡(!
ok
)

554  
NULL
;

558 i‡(
öputLí
 =
ãmp
.
	`Àngth
()) {

559 
fûlöResu…
->
	`put
(
	`UnicodeSåög
(), 
√w
 UnicodeSåög(), 
°©us
);

560  
fûlöResu…
;

565 
UnicodeSåög
 
åül
;

566 
nfd
.
	`n‹mÆize
(
ãmp
, 
åül
, 
°©us
);

567 if(
	`U_FAILURE
(
°©us
Ë|| 
åül
.
	`com∑ª
(
£gmít
+
£gmítPos
, 
£gLí
 - segmentPos) != 0) {

568  
NULL
;

571  
	`gëEquivÆíts2
(
fûlöResu…
, 
ãmp
.
	`gëBuf„r
()+
öputLí
,Åemp.
	`Àngth
()-öputLí, 
°©us
);

572 
	}
}

574 
	gU_NAMESPACE_END


	@chariter.cpp

8 
	~"unicode/ch¨ôî.h
"

10 
U_NAMESPACE_BEGIN


12 
	gF‹w¨dCh¨a˘îIãøt‹
::~
	$F‹w¨dCh¨a˘îIãøt‹
(Ë{
	}
}

13 
F‹w¨dCh¨a˘îIãøt‹
::
	$F‹w¨dCh¨a˘îIãøt‹
()

14 : 
	$UObje˘
()

15 {
	}
}

16 
F‹w¨dCh¨a˘îIãøt‹
::
	$F‹w¨dCh¨a˘îIãøt‹
(c⁄° 
F‹w¨dCh¨a˘îIãøt‹
 &
Ÿhî
)

17 : 
	$UObje˘
(
Ÿhî
)

18 {
	}
}

21 
Ch¨a˘îIãøt‹
::
	$Ch¨a˘îIãøt‹
()

22 : 
	`ãxtLígth
(0), 
	`pos
(0), 
	`begö
(0), 
	$íd
(0) {

23 
	}
}

25 
	gCh¨a˘îIãøt‹
::
	$Ch¨a˘îIãøt‹
(
öt32_t
 
Àngth
)

26 : 
	`ãxtLígth
(
Àngth
), 
	`pos
(0), 
	`begö
(0), 
	$íd
(
Àngth
) {

27 if(
ãxtLígth
 < 0) {

28 
ãxtLígth
 = 
íd
 = 0;

30 
	}
}

32 
	gCh¨a˘îIãøt‹
::
	$Ch¨a˘îIãøt‹
(
öt32_t
 
Àngth
, i¡32_à
posôi⁄
)

33 : 
	`ãxtLígth
(
Àngth
), 
	`pos
(
posôi⁄
), 
	`begö
(0), 
	$íd
(
Àngth
) {

34 if(
ãxtLígth
 < 0) {

35 
ãxtLígth
 = 
íd
 = 0;

37 if(
pos
 < 0) {

38 
pos
 = 0;

39 } if(
pos
 > 
íd
) {

40 
pos
 = 
íd
;

42 
	}
}

44 
	gCh¨a˘îIãøt‹
::
	$Ch¨a˘îIãøt‹
(
öt32_t
 
Àngth
, i¡32_à
ãxtBegö
, i¡32_à
ãxtEnd
, i¡32_à
posôi⁄
)

45 : 
	`ãxtLígth
(
Àngth
), 
	`pos
(
posôi⁄
), 
	`begö
(
ãxtBegö
), 
	$íd
(
ãxtEnd
) {

46 if(
ãxtLígth
 < 0) {

47 
ãxtLígth
 = 0;

49 if(
begö
 < 0) {

50 
begö
 = 0;

51 } if(
begö
 > 
ãxtLígth
) {

52 
begö
 = 
ãxtLígth
;

54 if(
íd
 < 
begö
) {

55 
íd
 = 
begö
;

56 } if(
íd
 > 
ãxtLígth
) {

57 
íd
 = 
ãxtLígth
;

59 if(
pos
 < 
begö
) {

60 
pos
 = 
begö
;

61 } if(
pos
 > 
íd
) {

62 
pos
 = 
íd
;

64 
	}
}

66 
	gCh¨a˘îIãøt‹
::
	$Ch¨a˘îIãøt‹
(c⁄° 
Ch¨a˘îIãøt‹
 &
th©
) :

67 
	`F‹w¨dCh¨a˘îIãøt‹
(
th©
),

68 
	`ãxtLígth
(
th©
.
ãxtLígth
), 
	`pos
—h©.
pos
), 
	`begö
—h©.
begö
), 
	$íd
(
th©
.
íd
)

70 
	}
}

72 
	gCh¨a˘îIãøt‹
 &

73 
	gCh¨a˘îIãøt‹
::
›î©‹
=(c⁄° 
Ch¨a˘îIãøt‹
 &
th©
) {

74 
F‹w¨dCh¨a˘îIãøt‹
::
›î©‹
=(
th©
);

75 
	gãxtLígth
 = 
th©
.
ãxtLígth
;

76 
	gpos
 = 
th©
.
pos
;

77 
	gbegö
 = 
th©
.
begö
;

78 
	gíd
 = 
th©
.
íd
;

79  *
	gthis
;

84 
UCh¨


85 
	gCh¨a˘îIãøt‹
::
	$fú°Po°Inc
() {

86 
	`£tToSèπ
();

87  
	`√xtPo°Inc
();

88 
	}
}

90 
UCh¨32


91 
	gCh¨a˘îIãøt‹
::
	$fú°32Po°Inc
() {

92 
	`£tToSèπ
();

93  
	`√xt32Po°Inc
();

94 
	}
}

96 
	gU_NAMESPACE_END


	@charstr.cpp

15 
	~"unicode/uty≥s.h
"

16 
	~"ch¨°r.h
"

17 
	~"cmem‹y.h
"

18 
	~"c°rög.h
"

20 
U_NAMESPACE_BEGIN


22 
	gCh¨Såög
 &Ch¨Såög::
	$c›yFrom
(c⁄° 
Ch¨Såög
 &
s
, 
UEº‹Code
 &
îr‹Code
) {

23 if(
	`U_SUCCESS
(
îr‹Code
Ë&& 
this
!=&
s
 && 
	`ísuªC≠acôy
(s.
Àn
+1, 0,ÉrrorCode)) {

24 
Àn
=
s
.len;

25 
	`u¥v_mem˝y
(
buf„r
.
	`gëAlüs
(), 
s
.buf„r.gëAlüs(), 
Àn
+1);

27  *
this
;

28 
	}
}

30 
	gCh¨Såög
 &Ch¨Såög::
	$åunˇã
(
öt32_t
 
√wLígth
) {

31 if(
√wLígth
<0) {

32 
√wLígth
=0;

34 if(
√wLígth
<
Àn
) {

35 
buf„r
[
Àn
=
√wLígth
]=0;

37  *
this
;

38 
	}
}

40 
	gCh¨Såög
 &Ch¨Såög::
	$≠≥nd
(
c
, 
UEº‹Code
 &
îr‹Code
) {

41 if(
	`ísuªC≠acôy
(
Àn
+2, 0, 
îr‹Code
)) {

42 
buf„r
[
Àn
++]=
c
;

43 
buf„r
[
Àn
]=0;

45  *
this
;

46 
	}
}

48 
	gCh¨Såög
 &Ch¨Såög::
	$≠≥nd
(c⁄° *
s
, 
öt32_t
 
sLígth
, 
UEº‹Code
 &
îr‹Code
) {

49 if(
	`U_FAILURE
(
îr‹Code
)) {

50  *
this
;

52 if(
sLígth
<-1 || (
s
==
NULL
 && sLength!=0)) {

53 
îr‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

54  *
this
;

56 if(
sLígth
<0) {

57 
sLígth
=
	`u¥v_°æí
(
s
);

59 if(
sLígth
>0) {

60 if(
s
==(
buf„r
.
	`gëAlüs
()+
Àn
)) {

62 if(
sLígth
>=(
buf„r
.
	`gëC≠acôy
()-
Àn
)) {

64 
îr‹Code
=
U_INTERNAL_PROGRAM_ERROR
;

66 
buf„r
[
Àn
+=
sLígth
]=0;

68 } if(
buf„r
.
	`gëAlüs
()<=
s
 && s<(buf„r.gëAlüs()+
Àn
) &&

69 
sLígth
>=(
buf„r
.
	`gëC≠acôy
()-
Àn
)

73  
	`≠≥nd
(
	`Ch¨Såög
(
s
, 
sLígth
, 
îr‹Code
),ÉrrorCode);

74 } if(
	`ísuªC≠acôy
(
Àn
+
sLígth
+1, 0, 
îr‹Code
)) {

75 
	`u¥v_mem˝y
(
buf„r
.
	`gëAlüs
()+
Àn
, 
s
, 
sLígth
);

76 
buf„r
[
Àn
+=
sLígth
]=0;

79  *
this
;

80 
	}
}

82 *
	gCh¨Såög
::
	$gëAµídBuf„r
(
öt32_t
 
möC≠acôy
,

83 
öt32_t
 
desúedC≠acôyHöt
,

84 
öt32_t
 &
ªsu…C≠acôy
,

85 
UEº‹Code
 &
îr‹Code
) {

86 if(
	`U_FAILURE
(
îr‹Code
)) {

87 
ªsu…C≠acôy
=0;

88  
NULL
;

90 
öt32_t
 
≠≥ndC≠acôy
=
buf„r
.
	`gëC≠acôy
()-
Àn
-1;

91 if(
≠≥ndC≠acôy
>=
möC≠acôy
) {

92 
ªsu…C≠acôy
=
≠≥ndC≠acôy
;

93  
buf„r
.
	`gëAlüs
()+
Àn
;

95 if(
	`ísuªC≠acôy
(
Àn
+
möC≠acôy
+1,Üí+
desúedC≠acôyHöt
+1, 
îr‹Code
)) {

96 
ªsu…C≠acôy
=
buf„r
.
	`gëC≠acôy
()-
Àn
-1;

97  
buf„r
.
	`gëAlüs
()+
Àn
;

99 
ªsu…C≠acôy
=0;

100  
NULL
;

101 
	}
}

103 
	gCh¨Såög
 &Ch¨Såög::
	$≠≥ndInv¨ü¡Ch¨s
(c⁄° 
UnicodeSåög
 &
s
, 
UEº‹Code
 &
îr‹Code
) {

104 if(
	`ísuªC≠acôy
(
Àn
+
s
.
	`Àngth
()+1, 0, 
îr‹Code
)) {

105 
Àn
+=
s
.
	`exåa˘
(0, 0x7fffffff, 
buf„r
.
	`gëAlüs
()+Àn, buf„r.
	`gëC≠acôy
()-Àn, 
US_INV
);

107  *
this
;

108 
	}
}

110 
UBoﬁ
 
	gCh¨Såög
::
	$ísuªC≠acôy
(
öt32_t
 
ˇ∑côy
,

111 
öt32_t
 
desúedC≠acôyHöt
,

112 
UEº‹Code
 &
îr‹Code
) {

113 if(
	`U_FAILURE
(
îr‹Code
)) {

114  
FALSE
;

116 if(
ˇ∑côy
>
buf„r
.
	`gëC≠acôy
()) {

117 if(
desúedC≠acôyHöt
==0) {

118 
desúedC≠acôyHöt
=
ˇ∑côy
+
buf„r
.
	`gëC≠acôy
();

120 if–(
desúedC≠acôyHöt
<=
ˇ∑côy
 || 
buf„r
.
	`ªsize
(desúedC≠acôyHöt, 
Àn
+1)==
NULL
) &&

121 
buf„r
.
	`ªsize
(
ˇ∑côy
, 
Àn
+1)==
NULL


123 
îr‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

124  
FALSE
;

127  
TRUE
;

128 
	}
}

130 
	gU_NAMESPACE_END


	@charstr.h

12 #i‚de‡
CHARSTRING_H


13 
	#CHARSTRING_H


	)

15 
	~"unicode/uty≥s.h
"

16 
	~"unicode/uni°r.h
"

17 
	~"unicode/uobje˘.h
"

18 
	~"cmem‹y.h
"

20 
	gU_NAMESPACE_BEGIN


24 #i‡!
deföed
(
U_DARWIN
)

25 
ãm∂©e
 
˛ass
 
U_COMMON_API
 
	gMaybeSèckAºay
<, 40>;

39 ˛as†
	cU_COMMON_API
 
	mCh¨Såög
 : 
public
 
UMem‹y
 {

40 
public
:

41 
	$Ch¨Såög
(Ë: 
	$Àn
(0Ë{ 
buf„r
[0]=0; }

42 
	$Ch¨Såög
(c⁄° 
SåögPõ˚
 &
s
, 
UEº‹Code
 &
îr‹Code
Ë: 
	$Àn
(0) {

43 
buf„r
[0]=0;

44 
	`≠≥nd
(
s
, 
îr‹Code
);

45 
	}
}

46 
	$Ch¨Såög
(c⁄° 
Ch¨Såög
 &
s
, 
UEº‹Code
 &
îr‹Code
Ë: 
	$Àn
(0) {

47 
buf„r
[0]=0;

48 
	`≠≥nd
(
s
, 
îr‹Code
);

49 
	}
}

50 
	$Ch¨Såög
(c⁄° *
s
, 
öt32_t
 
sLígth
, 
UEº‹Code
 &
îr‹Code
Ë: 
	$Àn
(0) {

51 
buf„r
[0]=0;

52 
	`≠≥nd
(
s
, 
sLígth
, 
îr‹Code
);

53 
	}
}

54 ~
	$Ch¨Såög
(Ë{
	}
}

62 
	gCh¨Såög
 &
c›yFrom
(c⁄° 
Ch¨Såög
 &
Ÿhî
, 
UEº‹Code
 &
îr‹Code
);

64 
UBoﬁ
 
	$isEm±y
(Ë{  
Àn
==0; 
	}
}

65 
öt32_t
 
	$Àngth
(Ëc⁄° {  
Àn
; 
	}
}

66 
	g›î©‹
[] (
öt32_t
 
	gödex
Ëc⁄° {  
	gbuf„r
[
ödex
]; }

67 
SåögPõ˚
 
	$toSåögPõ˚
(Ëc⁄° {  
	`SåögPõ˚
(
buf„r
.
	`gëAlüs
(), 
Àn
); 
	}
}

69 c⁄° *
	$d©a
(Ëc⁄° {  
buf„r
.
	`gëAlüs
(); 
	}
}

70 *
	$d©a
(Ë{  
buf„r
.
	`gëAlüs
(); 
	}
}

72 
	gCh¨Såög
 &
	$˛ór
(Ë{ 
Àn
=0; 
buf„r
[0]=0;  *
this
; 
	}
}

73 
	gCh¨Såög
 &
åunˇã
(
öt32_t
 
√wLígth
);

75 
	gCh¨Såög
 &
≠≥nd
(
c
, 
UEº‹Code
 &
îr‹Code
);

76 
	gCh¨Såög
 &
	$≠≥nd
(c⁄° 
SåögPõ˚
 &
s
, 
UEº‹Code
 &
îr‹Code
) {

77  
	`≠≥nd
(
s
.
	`d©a
(), s.
	`Àngth
(), 
îr‹Code
);

78 
	}
}

79 
	gCh¨Såög
 &
	$≠≥nd
(c⁄° 
Ch¨Såög
 &
s
, 
UEº‹Code
 &
îr‹Code
) {

80  
	`≠≥nd
(
s
.
	`d©a
(), s.
	`Àngth
(), 
îr‹Code
);

81 
	}
}

82 
	gCh¨Såög
 &
≠≥nd
(c⁄° *
s
, 
öt32_t
 
sLígth
, 
UEº‹Code
 &
°©us
);

103 *
gëAµídBuf„r
(
öt32_t
 
möC≠acôy
,

104 
öt32_t
 
desúedC≠acôyHöt
,

105 
öt32_t
 &
ªsu…C≠acôy
,

106 
UEº‹Code
 &
îr‹Code
);

108 
	gCh¨Såög
 &
≠≥ndInv¨ü¡Ch¨s
(c⁄° 
UnicodeSåög
 &
s
, 
UEº‹Code
 &
îr‹Code
);

110 
	g¥iv©e
:

111 
MaybeSèckAºay
<, 40> 
	gbuf„r
;

112 
öt32_t
 
	gÀn
;

114 
UBoﬁ
 
ísuªC≠acôy
(
öt32_t
 
ˇ∑côy
, i¡32_à
desúedC≠acôyHöt
, 
UEº‹Code
 &
îr‹Code
);

116 
Ch¨Såög
(c⁄° Ch¨Såög &
Ÿhî
);

117 
	gCh¨Såög
 &
	g›î©‹
=(c⁄° 
Ch¨Såög
 &
Ÿhî
);

120 
	gU_NAMESPACE_END


	@cmemory.c

21 
	~"unicode/u˛ón.h
"

22 
	~"cmem‹y.h
"

23 
	~<°dlib.h
>

26 c⁄° 
öt32_t
 
	gzîoMem
[] = {0, 0, 0, 0, 0, 0};

29 c⁄° *
	gpC⁄ãxt
;

30 
UMemAŒocFn
 *
	gpAŒoc
;

31 
UMemRóŒocFn
 *
	gpRóŒoc
;

32 
UMemFªeFn
 *
	gpFªe
;

36 
UBoﬁ
 
	ggHópInU£
;

38 
U_CAPI
 * 
U_EXPORT2


39 
	$u¥v_mÆloc
(
size_t
 
s
) {

40 i‡(
s
 > 0) {

41 
gHópInU£
 = 
TRUE
;

42 i‡(
pAŒoc
) {

43  (*
pAŒoc
)(
pC⁄ãxt
, 
s
);

45  
	`mÆloc
(
s
);

48  (*)
zîoMem
;

50 
	}
}

52 
U_CAPI
 * 
U_EXPORT2


53 
	$u¥v_ªÆloc
(* 
buf„r
, 
size_t
 
size
) {

54 i‡(
buf„r
 =
zîoMem
) {

55  
	`u¥v_mÆloc
(
size
);

56 } i‡(
size
 == 0) {

57 i‡(
pFªe
) {

58 (*
pFªe
)(
pC⁄ãxt
, 
buf„r
);

60 
	`‰ì
(
buf„r
);

62  (*)
zîoMem
;

64 
gHópInU£
 = 
TRUE
;

65 i‡(
pRóŒoc
) {

66  (*
pRóŒoc
)(
pC⁄ãxt
, 
buf„r
, 
size
);

68  
	`ªÆloc
(
buf„r
, 
size
);

71 
	}
}

73 
U_CAPI
 
U_EXPORT2


74 
	$u¥v_‰ì
(*
buf„r
) {

75 i‡(
buf„r
 !
zîoMem
) {

76 i‡(
pFªe
) {

77 (*
pFªe
)(
pC⁄ãxt
, 
buf„r
);

79 
	`‰ì
(
buf„r
);

82 
	}
}

84 
U_CAPI
 
U_EXPORT2


85 
	$u_£tMem‹yFun˘i⁄s
(c⁄° *
c⁄ãxt
, 
UMemAŒocFn
 *
a
, 
UMemRóŒocFn
 *
r
, 
UMemFªeFn
 *
f
, 
UEº‹Code
 *
°©us
)

87 i‡(
	`U_FAILURE
(*
°©us
)) {

90 i‡(
a
==
NULL
 || 
r
==NULL || 
f
==NULL) {

91 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

94 i‡(
gHópInU£
) {

95 *
°©us
 = 
U_INVALID_STATE_ERROR
;

98 
pC⁄ãxt
 = 
c⁄ãxt
;

99 
pAŒoc
 = 
a
;

100 
pRóŒoc
 = 
r
;

101 
pFªe
 = 
f
;

102 
	}
}

105 
U_CFUNC
 
UBoﬁ
 
	$cmem‹y_˛ónup
() {

106 
pC⁄ãxt
 = 
NULL
;

107 
pAŒoc
 = 
NULL
;

108 
pRóŒoc
 = 
NULL
;

109 
pFªe
 = 
NULL
;

110 
gHópInU£
 = 
FALSE
;

111  
TRUE
;

112 
	}
}

121 
U_CFUNC
 
UBoﬁ
 
	$cmem‹y_öU£
() {

122  
gHópInU£
;

123 
	}
}

	@cmemory.h

24 #i‚de‡
CMEMORY_H


25 
	#CMEMORY_H


	)

27 
	~<°ddef.h
>

28 
	~<°rög.h
>

29 
	~"unicode/uty≥s.h
"

30 
	~"unicode/loˇÕoöãr.h
"

32 
	#u¥v_mem˝y
(
d°
, 
§c
, 
size
Ë
U_STANDARD_CPP_NAMESPACE
 
	`mem˝y
(d°, src, size)

	)

33 
	#u¥v_memmove
(
d°
, 
§c
, 
size
Ë
U_STANDARD_CPP_NAMESPACE
 
	`memmove
(d°, src, size)

	)

34 
	#u¥v_mem£t
(
buf„r
, 
m¨k
, 
size
Ë
U_STANDARD_CPP_NAMESPACE
 
	`mem£t
(buf„r, m¨k, size)

	)

35 
	#u¥v_memcmp
(
buf„r1
, 
buf„r2
, 
size
Ë
U_STANDARD_CPP_NAMESPACE
 
	`memcmp
(buf„r1, buf„r2,size)

	)

37 
U_CAPI
 * 
U_EXPORT2


38 
u¥v_mÆloc
(
size_t
 
s
);

40 
U_CAPI
 * 
U_EXPORT2


41 
u¥v_ªÆloc
(*
mem
, 
size_t
 
size
);

43 
U_CAPI
 
U_EXPORT2


44 
u¥v_‰ì
(*
mem
);

51 
	mt1
;

52 
	mt2
;

53 *
	mt3
;

54 } 
	tUAlig√dMem‹y
;

65 
	#U_POINTER_MASK_LSB
(
±r
, 
mask
Ë(((
±rdiff_t
)(*)’å)Ë& (mask))

	)

71 
	#U_ALIGNMENT_OFFSET
(
±r
Ë
	`U_POINTER_MASK_LSB
’å, (
UAlig√dMem‹y
Ë- 1)

	)

77 
	#U_ALIGNMENT_OFFSET_UP
(
±r
Ë((
UAlig√dMem‹y
Ë- 
	`U_ALIGNMENT_OFFSET
’å))

	)

83 
U_CFUNC
 
UBoﬁ


84 
cmem‹y_öU£
();

91 
U_CFUNC
 
UBoﬁ


92 
cmem‹y_˛ónup
();

94 #ifde‡
XP_CPLUSPLUS


96 
U_NAMESPACE_BEGIN


105 
	gãm∂©e
<
ty≥«me
 
	gT
>

106 
˛ass
 
	gLoˇlMem‹y
 : 
public
 
LoˇlPoöãrBa£
<
T
> {

107 
public
:

112 
ex∂icô
 
LoˇlMem‹y
(
T
 *
p
=
NULL
Ë: 
LoˇlPoöãrBa£
<T>(p) {}

116 ~
LoˇlMem‹y
() {

117 
u¥v_‰ì
(
LoˇlPoöãrBa£
<
T
>::
±r
);

124 
ad›tIn°ód
(
T
 *
p
) {

125 
u¥v_‰ì
(
LoˇlPoöãrBa£
<
T
>::
±r
);

126 
	gLoˇlPoöãrBa£
<
	gT
>::
±r
=
p
;

136 
ölöe
 
T
 *
ÆloˇãIn°ódAndRe£t
(
öt32_t
 
√wC≠acôy
=1);

148 
ölöe
 
T
 *
ÆloˇãIn°ódAndC›y
(
öt32_t
 
√wC≠acôy
=1, i¡32_à
Àngth
=0);

155 
	gT
 &
	g›î©‹
[](
±rdiff_t
 
	gi
Ëc⁄° {  
	gLoˇlPoöãrBa£
<T>::
±r
[
i
]; }

158 
	gãm∂©e
<
ty≥«me
 
	gT
>

159 
ölöe
 
T
 *
	gLoˇlMem‹y
<
	gT
>::
	$ÆloˇãIn°ódAndRe£t
(
öt32_t
 
√wC≠acôy
) {

160 if(
√wC≠acôy
>0) {

161 
T
 *
p
=(T *)
	`u¥v_mÆloc
(
√wC≠acôy
*(T));

162 if(
p
!=
NULL
) {

163 
	`u¥v_mem£t
(
p
, 0, 
√wC≠acôy
*(
T
));

164 
	`u¥v_‰ì
(
LoˇlPoöãrBa£
<
T
>::
±r
);

165 
LoˇlPoöãrBa£
<
T
>::
±r
=
p
;

167  
p
;

169  
NULL
;

171 
	}
}

174 
	gãm∂©e
<
ty≥«me
 
	gT
>

175 
ölöe
 
T
 *
	gLoˇlMem‹y
<
	gT
>::
	$ÆloˇãIn°ódAndC›y
(
öt32_t
 
√wC≠acôy
, i¡32_à
Àngth
) {

176 if(
√wC≠acôy
>0) {

177 
T
 *
p
=(T *)
	`u¥v_mÆloc
(
√wC≠acôy
*(T));

178 if(
p
!=
NULL
) {

179 if(
Àngth
>0) {

180 if(
Àngth
>
√wC≠acôy
) {

181 
Àngth
=
√wC≠acôy
;

183 
	`u¥v_mem˝y
(
p
, 
LoˇlPoöãrBa£
<
T
>::
±r
, 
Àngth
*(T));

185 
	`u¥v_‰ì
(
LoˇlPoöãrBa£
<
T
>::
±r
);

186 
LoˇlPoöãrBa£
<
T
>::
±r
=
p
;

188  
p
;

190  
NULL
;

192 
	}
}

205 
	gãm∂©e
<
ty≥«me
 
	gT
, 
öt32_t
 
	g°ackC≠acôy
>

206 ˛as†
	cMaybeSèckAºay
 {

207 
	mpublic
:

211 
	$MaybeSèckAºay
(Ë: 
	`±r
(
°ackAºay
), 
	`ˇ∑côy
(
°ackC≠acôy
), 
	$√edToRñó£
(
FALSE
) {}

215 ~
	$MaybeSèckAºay
(Ë{ 
	`ªÀa£Aºay
(); 
	}
}

220 
öt32_t
 
	$gëC≠acôy
(Ëc⁄° {  
ˇ∑côy
; 
	}
}

225 
T
 *
	$gëAlüs
(Ëc⁄° {  
±r
; 
	}
}

230 
T
 *
	$gëAºayLimô
(Ëc⁄° {  
	`gëAlüs
()+
ˇ∑côy
; 
	}
}

236 
›î©‹
 
	gT
 *(Ëc⁄° {  
	g±r
; }

243 
	gT
 &
	g›î©‹
[](
±rdiff_t
 
	gi
Ë{  
	g±r
[
i
]; }

250 
	$ÆüsIn°ód
(
T
 *
ŸhîAºay
, 
öt32_t
 
ŸhîC≠acôy
) {

251 if(
ŸhîAºay
!=
NULL
 && 
ŸhîC≠acôy
>0) {

252 
	`ªÀa£Aºay
();

253 
±r
=
ŸhîAºay
;

254 
ˇ∑côy
=
ŸhîC≠acôy
;

255 
√edToRñó£
=
FALSE
;

257 
	}
};

268 
ölöe
 
T
 *
ªsize
(
öt32_t
 
√wC≠acôy
, i¡32_à
Àngth
=0);

280 
ölöe
 
T
 *
‹ph™OrCl⁄e
(
öt32_t
 
Àngth
, i¡32_à&
ªsu…C≠acôy
);

281 
	g¥iv©e
:

282 
T
 *
±r
;

283 
öt32_t
 
	gˇ∑côy
;

284 
UBoﬁ
 
	g√edToRñó£
;

285 
T
 
	g°ackAºay
[
°ackC≠acôy
];

286 
	$ªÀa£Aºay
() {

287 if(
√edToRñó£
) {

288 
	`u¥v_‰ì
(
±r
);

290 
	}
}

292 
boﬁ
 
	g›î©‹
==(c⁄° 
MaybeSèckAºay
 & ) { 
FALSE
;};

293 
boﬁ
 
	g›î©‹
!=(c⁄° 
MaybeSèckAºay
 & ) { 
TRUE
;};

295 
	$MaybeSèckAºay
(c⁄° 
MaybeSèckAºay
 & ) {
	}
};

296 
	g›î©‹
=(c⁄° 
MaybeSèckAºay
 & ) {};

308 #i‡
U_HAVE_PLACEMENT_NEW


313 
	gãm∂©e
<
ty≥«me
 
	gT
, 
öt32_t
 
	g°ackC≠acôy
>

314 
ölöe
 
T
 *
	gMaybeSèckAºay
<
	gT
, 
	g°ackC≠acôy
>::
	$ªsize
(
öt32_t
 
√wC≠acôy
, i¡32_à
Àngth
) {

315 if(
√wC≠acôy
>0) {

316 
T
 *
p
=(T *)
	`u¥v_mÆloc
(
√wC≠acôy
*(T));

317 if(
p
!=
NULL
) {

318 if(
Àngth
>0) {

319 if(
Àngth
>
ˇ∑côy
) {

320 
Àngth
=
ˇ∑côy
;

322 if(
Àngth
>
√wC≠acôy
) {

323 
Àngth
=
√wC≠acôy
;

325 
	`u¥v_mem˝y
(
p
, 
±r
, 
Àngth
*(
T
));

327 
	`ªÀa£Aºay
();

328 
±r
=
p
;

329 
ˇ∑côy
=
√wC≠acôy
;

330 
√edToRñó£
=
TRUE
;

332  
p
;

334  
NULL
;

336 
	}
}

338 
	gãm∂©e
<
ty≥«me
 
	gT
, 
öt32_t
 
	g°ackC≠acôy
>

339 
ölöe
 
T
 *
	gMaybeSèckAºay
<
	gT
, 
	g°ackC≠acôy
>::
	$‹ph™OrCl⁄e
(
öt32_t
 
Àngth
, i¡32_à&
ªsu…C≠acôy
) {

340 
T
 *
p
;

341 if(
√edToRñó£
) {

342 
p
=
±r
;

343 } if(
Àngth
<=0) {

344  
NULL
;

346 if(
Àngth
>
ˇ∑côy
) {

347 
Àngth
=
ˇ∑côy
;

349 
p
=(
T
 *)
	`u¥v_mÆloc
(
Àngth
*(T));

350 if(
p
==
NULL
) {

351  
NULL
;

353 
	`u¥v_mem˝y
(
p
, 
±r
, 
Àngth
*(
T
));

355 
ªsu…C≠acôy
=
Àngth
;

356 
±r
=
°ackAºay
;

357 
ˇ∑côy
=
°ackC≠acôy
;

358 
√edToRñó£
=
FALSE
;

359  
p
;

360 
	}
}

372 
	gãm∂©e
<
ty≥«me
 
	gH
,Åy≥«mê
	gT
, 
öt32_t
 
	g°ackC≠acôy
>

373 ˛as†
	cMaybeSèckHódîAndAºay
 {

374 
	mpublic
:

378 
	$MaybeSèckHódîAndAºay
(Ë: 
	`±r
(&
°ackHódî
), 
	`ˇ∑côy
(
°ackC≠acôy
), 
	$√edToRñó£
(
FALSE
) {}

382 ~
	$MaybeSèckHódîAndAºay
(Ë{ 
	`ªÀa£Mem‹y
(); 
	}
}

387 
öt32_t
 
	$gëC≠acôy
(Ëc⁄° {  
ˇ∑côy
; 
	}
}

392 
H
 *
	$gëAlüs
(Ëc⁄° {  
±r
; 
	}
}

397 
T
 *
	$gëAºaySèπ
(Ëc⁄° {  
ªöãΩªt_ˇ°
<
T
 *>(
	`gëAlüs
()+1); 
	}
}

402 
T
 *
	$gëAºayLimô
(Ëc⁄° {  
	`gëAºaySèπ
()+
ˇ∑côy
; 
	}
}

408 
›î©‹
 
	gH
 *(Ëc⁄° {  
	g±r
; }

415 
	gT
 &
	g›î©‹
[](
±rdiff_t
 
	gi
Ë{  
gëAºaySèπ
()[
i
]; }

422 
	$ÆüsIn°ód
(
H
 *
ŸhîMem‹y
, 
öt32_t
 
ŸhîC≠acôy
) {

423 if(
ŸhîMem‹y
!=
NULL
 && 
ŸhîC≠acôy
>0) {

424 
	`ªÀa£Mem‹y
();

425 
±r
=
ŸhîMem‹y
;

426 
ˇ∑côy
=
ŸhîC≠acôy
;

427 
√edToRñó£
=
FALSE
;

429 
	}
};

441 
ölöe
 
H
 *
ªsize
(
öt32_t
 
√wC≠acôy
, i¡32_à
Àngth
=0);

453 
ölöe
 
H
 *
‹ph™OrCl⁄e
(
öt32_t
 
Àngth
, i¡32_à&
ªsu…C≠acôy
);

454 
	g¥iv©e
:

455 
H
 *
±r
;

456 
öt32_t
 
	gˇ∑côy
;

457 
UBoﬁ
 
	g√edToRñó£
;

459 
H
 
	g°ackHódî
;

460 
T
 
	g°ackAºay
[
°ackC≠acôy
];

461 
	$ªÀa£Mem‹y
() {

462 if(
√edToRñó£
) {

463 
	`u¥v_‰ì
(
±r
);

465 
	}
}

467 
boﬁ
 
	g›î©‹
==(c⁄° 
MaybeSèckHódîAndAºay
 & ) { 
FALSE
;};

468 
boﬁ
 
	g›î©‹
!=(c⁄° 
MaybeSèckHódîAndAºay
 & ) { 
TRUE
;};

470 
	$MaybeSèckHódîAndAºay
(c⁄° 
MaybeSèckHódîAndAºay
 & ) {
	}
};

471 
	g›î©‹
=(c⁄° 
MaybeSèckHódîAndAºay
 & ) {};

478 #i‡
U_HAVE_PLACEMENT_NEW


483 
	gãm∂©e
<
ty≥«me
 
	gH
,Åy≥«mê
	gT
, 
öt32_t
 
	g°ackC≠acôy
>

484 
ölöe
 
H
 *
	gMaybeSèckHódîAndAºay
<
	gH
, 
	gT
, 
	g°ackC≠acôy
>::
	$ªsize
(
öt32_t
 
√wC≠acôy
,

485 
öt32_t
 
Àngth
) {

486 if(
√wC≠acôy
>=0) {

487 
H
 *
p
=(H *)
	`u¥v_mÆloc
((H)+
√wC≠acôy
*(
T
));

488 if(
p
!=
NULL
) {

489 if(
Àngth
<0) {

490 
Àngth
=0;

491 } if(
Àngth
>0) {

492 if(
Àngth
>
ˇ∑côy
) {

493 
Àngth
=
ˇ∑côy
;

495 if(
Àngth
>
√wC≠acôy
) {

496 
Àngth
=
√wC≠acôy
;

499 
	`u¥v_mem˝y
(
p
, 
±r
, (
H
)+
Àngth
*(
T
));

500 
	`ªÀa£Mem‹y
();

501 
±r
=
p
;

502 
ˇ∑côy
=
√wC≠acôy
;

503 
√edToRñó£
=
TRUE
;

505  
p
;

507  
NULL
;

509 
	}
}

511 
	gãm∂©e
<
ty≥«me
 
	gH
,Åy≥«mê
	gT
, 
öt32_t
 
	g°ackC≠acôy
>

512 
ölöe
 
H
 *
	gMaybeSèckHódîAndAºay
<
	gH
, 
	gT
, 
	g°ackC≠acôy
>::
	$‹ph™OrCl⁄e
(
öt32_t
 
Àngth
,

513 
öt32_t
 &
ªsu…C≠acôy
) {

514 
H
 *
p
;

515 if(
√edToRñó£
) {

516 
p
=
±r
;

518 if(
Àngth
<0) {

519 
Àngth
=0;

520 } if(
Àngth
>
ˇ∑côy
) {

521 
Àngth
=
ˇ∑côy
;

523 
p
=(
H
 *)
	`u¥v_mÆloc
((H)+
Àngth
*(
T
));

524 if(
p
==
NULL
) {

525  
NULL
;

527 
	`u¥v_mem˝y
(
p
, 
±r
, (
H
)+
Àngth
*(
T
));

529 
ªsu…C≠acôy
=
Àngth
;

530 
±r
=&
°ackHódî
;

531 
ˇ∑côy
=
°ackC≠acôy
;

532 
√edToRñó£
=
FALSE
;

533  
p
;

534 
	}
}

536 
	gU_NAMESPACE_END


	@cpputils.h

14 #i‚de‡
CPPUTILS_H


15 
	#CPPUTILS_H


	)

17 
	~"unicode/uty≥s.h
"

18 
	~"unicode/uni°r.h
"

19 
	~"cmem‹y.h
"

26 
ölöe
 
	$u¥v_¨øyC›y
(c⁄° * 
§c
, * 
d°
, 
öt32_t
 
cou¡
)

27 { 
	`u¥v_mem˝y
(
d°
, 
§c
, (
size_t
)(
cou¡
 * (*§c))); 
	}
}

30 
ölöe
 
	$u¥v_¨øyC›y
(c⁄° * 
§c
, 
öt32_t
 
§cSèπ
,

31 * 
d°
, 
öt32_t
 
d°Sèπ
, i¡32_à
cou¡
)

32 { 
	`u¥v_mem˝y
(
d°
+
d°Sèπ
, 
§c
+
§cSèπ
, (
size_t
)(
cou¡
 * (*§c))); 
	}
}

35 
ölöe
 
	$u¥v_¨øyC›y
(c⁄° 
öt8_t
* 
§c
, i¡8_t* 
d°
, 
öt32_t
 
cou¡
)

36 { 
	`u¥v_mem˝y
(
d°
, 
§c
, (
size_t
)(
cou¡
 * (*§c))); 
	}
}

39 
ölöe
 
	$u¥v_¨øyC›y
(c⁄° 
öt8_t
* 
§c
, 
öt32_t
 
§cSèπ
,

40 
öt8_t
* 
d°
, 
öt32_t
 
d°Sèπ
, i¡32_à
cou¡
)

41 { 
	`u¥v_mem˝y
(
d°
+
d°Sèπ
, 
§c
+
§cSèπ
, (
size_t
)(
cou¡
 * (*§c))); 
	}
}

44 
ölöe
 
	$u¥v_¨øyC›y
(c⁄° 
öt16_t
* 
§c
, i¡16_t* 
d°
, 
öt32_t
 
cou¡
)

45 { 
	`u¥v_mem˝y
(
d°
, 
§c
, (
size_t
)(
cou¡
 * (*§c))); 
	}
}

48 
ölöe
 
	$u¥v_¨øyC›y
(c⁄° 
öt16_t
* 
§c
, 
öt32_t
 
§cSèπ
,

49 
öt16_t
* 
d°
, 
öt32_t
 
d°Sèπ
, i¡32_à
cou¡
)

50 { 
	`u¥v_mem˝y
(
d°
+
d°Sèπ
, 
§c
+
§cSèπ
, (
size_t
)(
cou¡
 * (*§c))); 
	}
}

53 
ölöe
 
	$u¥v_¨øyC›y
(c⁄° 
öt32_t
* 
§c
, i¡32_t* 
d°
, i¡32_à
cou¡
)

54 { 
	`u¥v_mem˝y
(
d°
, 
§c
, (
size_t
)(
cou¡
 * (*§c))); 
	}
}

57 
ölöe
 
	$u¥v_¨øyC›y
(c⁄° 
öt32_t
* 
§c
, i¡32_à
§cSèπ
,

58 
öt32_t
* 
d°
, i¡32_à
d°Sèπ
, i¡32_à
cou¡
)

59 { 
	`u¥v_mem˝y
(
d°
+
d°Sèπ
, 
§c
+
§cSèπ
, (
size_t
)(
cou¡
 * (*§c))); 
	}
}

62 
ölöe
 

63 
	$u¥v_¨øyC›y
(c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cSèπ
,

64 
UCh¨
 *
d°
, 
öt32_t
 
d°Sèπ
, i¡32_à
cou¡
)

65 { 
	`u¥v_mem˝y
(
d°
+
d°Sèπ
, 
§c
+
§cSèπ
, (
size_t
)(
cou¡
 * (*§c))); 
	}
}

71 
ölöe
 

72 
	$u¥v_¨øyC›y
(c⁄° 
U_NAMESPACE_QUALIFIER
 
UnicodeSåög
 *
§c
, U_NAMESPACE_QUALIFIER UnicodeSåög *
d°
, 
öt32_t
 
cou¡
)

73 { 
cou¡
-- > 0Ë*
d°
++ = *
§c
++; 
	}
}

79 
ölöe
 

80 
	$u¥v_¨øyC›y
(c⁄° 
U_NAMESPACE_QUALIFIER
 
UnicodeSåög
 *
§c
, 
öt32_t
 
§cSèπ
,

81 
U_NAMESPACE_QUALIFIER
 
UnicodeSåög
 *
d°
, 
öt32_t
 
d°Sèπ
, i¡32_à
cou¡
)

82 { 
	`u¥v_¨øyC›y
(
§c
+
§cSèπ
, 
d°
+
d°Sèπ
, 
cou¡
); 
	}
}

88 
ölöe
 

89 
	$u¥v_checkC™GëBuf„r
(c⁄° 
U_NAMESPACE_QUALIFIER
 
UnicodeSåög
 &
s
, 
UEº‹Code
 &
îr‹Code
) {

90 if(
	`U_SUCCESS
(
îr‹Code
Ë&& 
s
.
	`isBogus
()) {

91 
îr‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

93 
	}
}

	@cstring.c

24 
	~<°dlib.h
>

25 
	~<°dio.h
>

26 
	~"unicode/uty≥s.h
"

27 
	~"cmem‹y.h
"

28 
	~"c°rög.h
"

29 
	~"uas£π.h
"

49 
U_CAPI
 
U_EXPORT2


50 
	$u¥v_touµî
(
c
) {

51 #i‡
U_CHARSET_FAMILY
==
U_EBCDIC_FAMILY


52 if(('a'<=
c
 && c<='i') || ('j'<=c && c<='r') || ('s'<=c && c<='z')) {

53 
c
=()(c+('A'-'a'));

56 if('a'<=
c
 && c<='z') {

57 
c
=()(c+('A'-'a'));

60  
c
;

61 
	}
}

74 
U_CAPI
 
U_EXPORT2


75 
	$u¥v_tﬁowî
(
c
) {

76 #i‡
U_CHARSET_FAMILY
==
U_EBCDIC_FAMILY


77 if(('A'<=
c
 && c<='I') || ('J'<=c && c<='R') || ('S'<=c && c<='Z')) {

78 
c
=()(c+('a'-'A'));

81 if('A'<=
c
 && c<='Z') {

82 
c
=()(c+('a'-'A'));

85  
c
;

86 
	}
}

89 
U_CAPI
 
U_EXPORT2


90 
	$u¥v_asciôﬁowî
(
c
) {

91 if(0x41<=
c
 && c<=0x5a) {

92 
c
=()(c+0x20);

94  
c
;

95 
	}
}

97 
U_CAPI
 
U_EXPORT2


98 
	$u¥v_ebcdi˘ﬁowî
(
c
) {

99 if–(0xc1<=(
uöt8_t
)
c
 && (uint8_t)c<=0xc9) ||

100 (0xd1<=(
uöt8_t
)
c
 && (uint8_t)c<=0xd9) ||

101 (0xe2<=(
uöt8_t
)
c
 && (uint8_t)c<=0xe9)

103 
c
=()(c-0x40);

105  
c
;

106 
	}
}

109 
U_CAPI
 * 
U_EXPORT2


110 
	$T_CSåög_toLowîCa£
(* 
°r
)

112 * 
‹igPå
 = 
°r
;

114 i‡(
°r
) {

116 *
°r
 = ()
	`u¥v_tﬁowî
(*str);

117 *(
°r
++));

120  
‹igPå
;

121 
	}
}

123 
U_CAPI
 * 
U_EXPORT2


124 
	$T_CSåög_toUµîCa£
(* 
°r
)

126 * 
‹igPå
 = 
°r
;

128 i‡(
°r
) {

130 *
°r
 = ()
	`u¥v_touµî
(*str);

131 *(
°r
++));

134  
‹igPå
;

135 
	}
}

143 
U_CAPI
 
öt32_t
 
U_EXPORT2


144 
	$T_CSåög_öãgîToSåög
(* 
buf„r
, 
öt32_t
 
v
, i¡32_à
ødix
)

146 
tbuf
[30];

147 
öt32_t
 
tbx
 = (
tbuf
);

148 
uöt8_t
 
digô
;

149 
öt32_t
 
Àngth
 = 0;

150 
uöt32_t
 
uvÆ
;

152 
	`U_ASSERT
(
ødix
>=2 &&Ñadix<=16);

153 
uvÆ
 = (
uöt32_t
Ë
v
;

154 if(
v
<0 && 
ødix
 == 10) {

156 
uvÆ
 = (
uöt32_t
)(-
v
);

157 
buf„r
[
Àngth
++] = '-';

160 
tbx
 = (
tbuf
)-1;

161 
tbuf
[
tbx
] = 0;

163 
digô
 = (
uöt8_t
)(
uvÆ
 % 
ødix
);

164 
tbuf
[--
tbx
] = ()(
	`T_CSåög_ôosOff£t
(
digô
));

165 
uvÆ
 = uvÆ / 
ødix
;

166 } 
uvÆ
 != 0);

169 
	`u¥v_°r˝y
(
buf„r
+
Àngth
, 
tbuf
+
tbx
);

170 
Àngth
 +(
tbuf
Ë- 
tbx
 -1;

171  
Àngth
;

172 
	}
}

181 
U_CAPI
 
öt32_t
 
U_EXPORT2


182 
	$T_CSåög_öt64ToSåög
(* 
buf„r
, 
öt64_t
 
v
, 
uöt32_t
 
ødix
)

184 
tbuf
[30];

185 
öt32_t
 
tbx
 = (
tbuf
);

186 
uöt8_t
 
digô
;

187 
öt32_t
 
Àngth
 = 0;

188 
uöt64_t
 
uvÆ
;

190 
	`U_ASSERT
(
ødix
>=2 &&Ñadix<=16);

191 
uvÆ
 = (
uöt64_t
Ë
v
;

192 if(
v
<0 && 
ødix
 == 10) {

194 
uvÆ
 = (
uöt64_t
)(-
v
);

195 
buf„r
[
Àngth
++] = '-';

198 
tbx
 = (
tbuf
)-1;

199 
tbuf
[
tbx
] = 0;

201 
digô
 = (
uöt8_t
)(
uvÆ
 % 
ødix
);

202 
tbuf
[--
tbx
] = ()(
	`T_CSåög_ôosOff£t
(
digô
));

203 
uvÆ
 = uvÆ / 
ødix
;

204 } 
uvÆ
 != 0);

207 
	`u¥v_°r˝y
(
buf„r
+
Àngth
, 
tbuf
+
tbx
);

208 
Àngth
 +(
tbuf
Ë- 
tbx
 -1;

209  
Àngth
;

210 
	}
}

213 
U_CAPI
 
öt32_t
 
U_EXPORT2


214 
	$T_CSåög_°rögToI¡egî
(c⁄° *
öãgîSåög
, 
öt32_t
 
ødix
)

216 *
íd
;

217  
	`u¥v_°πoul
(
öãgîSåög
, &
íd
, 
ødix
);

219 
	}
}

221 
U_CAPI
 
U_EXPORT2


222 
	$T_CSåög_°ricmp
(c⁄° *
°r1
, c⁄° *
°r2
) {

223 if(
°r1
==
NULL
) {

224 if(
°r2
==
NULL
) {

229 } if(
°r2
==
NULL
) {

233 
rc
;

234 
c1
, 
c2
;

237 
c1
=()*
°r1
;

238 
c2
=()*
°r2
;

239 if(
c1
==0) {

240 if(
c2
==0) {

245 } if(
c2
==0) {

249 
rc
=()()
	`u¥v_tﬁowî
(
c1
)-()()u¥v_tﬁowî(
c2
);

250 if(
rc
!=0) {

251  
rc
;

254 ++
°r1
;

255 ++
°r2
;

258 
	}
}

260 
U_CAPI
 
U_EXPORT2


261 
	$T_CSåög_°∫icmp
(c⁄° *
°r1
, c⁄° *
°r2
, 
uöt32_t
 
n
) {

262 if(
°r1
==
NULL
) {

263 if(
°r2
==
NULL
) {

268 } if(
°r2
==
NULL
) {

272 
rc
;

273 
c1
, 
c2
;

275 ; 
n
--;) {

276 
c1
=()*
°r1
;

277 
c2
=()*
°r2
;

278 if(
c1
==0) {

279 if(
c2
==0) {

284 } if(
c2
==0) {

288 
rc
=()()
	`u¥v_tﬁowî
(
c1
)-()()u¥v_tﬁowî(
c2
);

289 if(
rc
!=0) {

290  
rc
;

293 ++
°r1
;

294 ++
°r2
;

299 
	}
}

301 
U_CAPI
 * 
U_EXPORT2


302 
	$u¥v_°rdup
(c⁄° *
§c
) {

303 
size_t
 
Àn
 = 
	`u¥v_°æí
(
§c
) + 1;

304 *
dup
 = (*Ë
	`u¥v_mÆloc
(
Àn
);

306 i‡(
dup
) {

307 
	`u¥v_mem˝y
(
dup
, 
§c
, 
Àn
);

310  
dup
;

311 
	}
}

313 
U_CAPI
 * 
U_EXPORT2


314 
	$u¥v_°∫dup
(c⁄° *
§c
, 
öt32_t
 
n
) {

315 *
dup
;

317 if(
n
 < 0) {

318 
dup
 = 
	`u¥v_°rdup
(
§c
);

320 
dup
 = (*)
	`u¥v_mÆloc
(
n
+1);

321 i‡(
dup
) {

322 
	`u¥v_mem˝y
(
dup
, 
§c
, 
n
);

323 
dup
[
n
] = 0;

327  
dup
;

328 
	}
}

	@cstring.h

25 #i‚de‡
CSTRING_H


26 
	#CSTRING_H
 1

	)

28 
	~"unicode/uty≥s.h
"

29 
	~<°rög.h
>

30 
	~<°dlib.h
>

31 
	~<˘y≥.h
>

33 
	#u¥v_°r˝y
(
d°
, 
§c
Ë
U_STANDARD_CPP_NAMESPACE
 
	`°r˝y
(d°, src)

	)

34 
	#u¥v_°∫˝y
(
d°
, 
§c
, 
size
Ë
U_STANDARD_CPP_NAMESPACE
 
	`°∫˝y
(d°, src, size)

	)

35 
	#u¥v_°æí
(
°r
Ë
U_STANDARD_CPP_NAMESPACE
 
	`°æí
(°r)

	)

36 
	#u¥v_°rcmp
(
s1
, 
s2
Ë
U_STANDARD_CPP_NAMESPACE
 
	`°rcmp
(s1, s2)

	)

37 
	#u¥v_°∫cmp
(
s1
, 
s2
, 
n
Ë
U_STANDARD_CPP_NAMESPACE
 
	`°∫cmp
(s1, s2,Ç)

	)

38 
	#u¥v_°rˇt
(
d°
, 
§c
Ë
U_STANDARD_CPP_NAMESPACE
 
	`°rˇt
(d°, src)

	)

39 
	#u¥v_°∫ˇt
(
d°
, 
§c
, 
n
Ë
U_STANDARD_CPP_NAMESPACE
 
	`°∫ˇt
(d°, src,Ç)

	)

40 
	#u¥v_°rchr
(
s
, 
c
Ë
U_STANDARD_CPP_NAMESPACE
 
	`°rchr
(s, c)

	)

41 
	#u¥v_°r°r
(
s
, 
c
Ë
U_STANDARD_CPP_NAMESPACE
 
	`°r°r
(s, c)

	)

42 
	#u¥v_°ºchr
(
s
, 
c
Ë
U_STANDARD_CPP_NAMESPACE
 
	`°ºchr
(s, c)

	)

44 
U_CAPI
 
U_EXPORT2


45 
u¥v_touµî
(
c
);

48 
U_CAPI
 
U_EXPORT2


49 
u¥v_asciôﬁowî
(
c
);

51 
U_CAPI
 
U_EXPORT2


52 
u¥v_ebcdi˘ﬁowî
(
c
);

54 #i‡
U_CHARSET_FAMILY
==
U_ASCII_FAMILY


55 
	#u¥v_tﬁowî
 
u¥v_asciôﬁowî


	)

56 #ñi‡
U_CHARSET_FAMILY
==
U_EBCDIC_FAMILY


57 
	#u¥v_tﬁowî
 
u¥v_ebcdi˘ﬁowî


	)

59 #îr‹ 
U_CHARSET_FAMILY
 
is
 
nŸ
 
vÆid


62 
	#u¥v_°πod
(
sour˚
, 
íd
Ë
U_STANDARD_CPP_NAMESPACE
 
	`°πod
(sour˚,Énd)

	)

63 
	#u¥v_°πoul
(
°r
, 
íd
, 
ba£
Ë
U_STANDARD_CPP_NAMESPACE
 
	`°πoul
(°r,Énd, ba£)

	)

64 
	#u¥v_°πﬁ
(
°r
, 
íd
, 
ba£
Ë
U_STANDARD_CPP_NAMESPACE
 
	`°πﬁ
(°r,Énd, ba£)

	)

65 #ifde‡
U_WINDOWS


66 #i‡
deföed
(
__BORLANDC__
)

67 
	#u¥v_°ricmp
(
°r1
, 
°r2
Ë
U_STANDARD_CPP_NAMESPACE
 
	`°ricmp
(°r1, så2)

	)

68 
	#u¥v_°∫icmp
(
°r1
, 
°r2
, 
n
Ë
U_STANDARD_CPP_NAMESPACE
 
	`°∫icmp
(°r1, så2,Ç)

	)

70 
	#u¥v_°ricmp
(
°r1
, 
°r2
Ë
U_STANDARD_CPP_NAMESPACE
 
	`_°ricmp
(°r1, så2)

	)

71 
	#u¥v_°∫icmp
(
°r1
, 
°r2
, 
n
Ë
U_STANDARD_CPP_NAMESPACE
 
	`_°∫icmp
(°r1, så2,Ç)

	)

73 #ñi‡
deföed
(
POSIX
)

74 
	#u¥v_°ricmp
(
°r1
, 
°r2
Ë
U_STANDARD_CPP_NAMESPACE
 
	`°rˇ£cmp
(°r1, så2)

	)

75 
	#u¥v_°∫icmp
(
°r1
, 
°r2
, 
n
Ë
U_STANDARD_CPP_NAMESPACE
 
	`°∫ˇ£cmp
(°r1, så2,Ç)

	)

77 
	#u¥v_°ricmp
(
°r1
, 
°r2
Ë
	`T_CSåög_°ricmp
(°r1, så2)

	)

78 
	#u¥v_°∫icmp
(
°r1
, 
°r2
, 
n
Ë
	`T_CSåög_°∫icmp
(°r1, så2,Ç)

	)

83 
	#T_CSåög_ôosOff£t
(
a
Ë(◊)<=9?('0'+◊)):('A'+◊)-10))

	)

85 
U_CAPI
 * 
U_EXPORT2


86 
u¥v_°rdup
(c⁄° *
§c
);

96 
U_CAPI
 * 
U_EXPORT2


97 
u¥v_°∫dup
(c⁄° *
§c
, 
öt32_t
 
n
);

99 
U_CAPI
 * 
U_EXPORT2


100 
T_CSåög_toLowîCa£
(* 
°r
);

102 
U_CAPI
 * 
U_EXPORT2


103 
T_CSåög_toUµîCa£
(* 
°r
);

105 
U_CAPI
 
öt32_t
 
U_EXPORT2


106 
T_CSåög_öãgîToSåög
(*
buf„r
, 
öt32_t
 
n
, i¡32_à
ødix
);

108 
U_CAPI
 
öt32_t
 
U_EXPORT2


109 
T_CSåög_öt64ToSåög
(*
buf„r
, 
öt64_t
 
n
, 
uöt32_t
 
ødix
);

111 
U_CAPI
 
öt32_t
 
U_EXPORT2


112 
T_CSåög_°rögToI¡egî
(c⁄° *
öãgîSåög
, 
öt32_t
 
ødix
);

114 
U_CAPI
 
U_EXPORT2


115 
T_CSåög_°ricmp
(c⁄° *
°r1
, c⁄° *
°r2
);

117 
U_CAPI
 
U_EXPORT2


118 
T_CSåög_°∫icmp
(c⁄° *
°r1
, c⁄° *
°r2
, 
uöt32_t
 
n
);

	@cwchar.c

17 
	~"unicode/uty≥s.h
"

19 #i‡!
U_HAVE_WCSCPY


21 
	~"cwch¨.h
"

23 
U_CAPI
 
wch¨_t
 *
	$u¥v_wcsˇt
(
wch¨_t
 *
d°
, c⁄° wch¨_à*
§c
) {

24 
wch¨_t
 *
°¨t
=
d°
;

25 *
d°
!=0) {

26 ++
d°
;

28 (*
d°
=*
§c
)!=0) {

29 ++
d°
;

30 ++
§c
;

32  
°¨t
;

33 
	}
}

35 
U_CAPI
 
wch¨_t
 *
	$u¥v_wcs˝y
(
wch¨_t
 *
d°
, c⁄° wch¨_à*
§c
) {

36 
wch¨_t
 *
°¨t
=
d°
;

37 (*
d°
=*
§c
)!=0) {

38 ++
d°
;

39 ++
§c
;

41  
°¨t
;

42 
	}
}

44 
U_CAPI
 
size_t
 
	$u¥v_wc¶í
(c⁄° 
wch¨_t
 *
§c
) {

45 c⁄° 
wch¨_t
 *
°¨t
=
§c
;

46 *
§c
!=0) {

47 ++
§c
;

49  
§c
-
°¨t
;

50 
	}
}

	@cwchar.h

21 #i‚de‡
__CWCHAR_H__


22 
	#__CWCHAR_H__


	)

24 
	~<°rög.h
>

25 
	~<°dlib.h
>

26 
	~"unicode/uty≥s.h
"

29 #i‡
U_HAVE_WCHAR_H


30 
	~<wch¨.h
>

38 #i‡
U_HAVE_WCSCPY


39 
	#u¥v_wcs˝y
 
wcs˝y


	)

40 
	#u¥v_wcsˇt
 
wcsˇt


	)

41 
	#u¥v_wc¶í
 
wc¶í


	)

43 
U_CAPI
 
wch¨_t
* 
U_EXPORT2


44 
u¥v_wcs˝y
(
wch¨_t
 *
d°
, c⁄° wch¨_à*
§c
);

45 
U_CAPI
 
wch¨_t
* 
U_EXPORT2


46 
u¥v_wcsˇt
(
wch¨_t
 *
d°
, c⁄° wch¨_à*
§c
);

47 
U_CAPI
 
size_t
 
U_EXPORT2


48 
u¥v_wc¶í
(c⁄° 
wch¨_t
 *
§c
);

52 
	#u¥v_wc°ombs
(
mb°r
, 
wc°r
, 
cou¡
Ë
U_STANDARD_CPP_NAMESPACE
 
	`wc°ombs
(mb°r, wc°r, cou¡)

	)

53 
	#u¥v_mb°owcs
(
wc°r
, 
mb°r
, 
cou¡
Ë
U_STANDARD_CPP_NAMESPACE
 
	`mb°owcs
(wc°r, mb°r, cou¡)

	)

	@dictbe.cpp

8 
	~"unicode/uty≥s.h
"

10 #i‡!
UCONFIG_NO_BREAK_ITERATION


12 
	~"brkíg.h
"

13 
	~"di˘be.h
"

14 
	~"unicode/uni£t.h
"

15 
	~"unicode/ch¨ôî.h
"

16 
	~"unicode/ubrk.h
"

17 
	~"uve˘‹.h
"

18 
	~"åõdi˘.h
"

20 
U_NAMESPACE_BEGIN


30 
	gDi˘i⁄¨yBªakEngöe
::
	$Di˘i⁄¨yBªakEngöe
(
uöt32_t
 
bªakTy≥s
) {

31 
fTy≥s
 = 
bªakTy≥s
;

32 
	}
}

34 
	gDi˘i⁄¨yBªakEngöe
::~
	$Di˘i⁄¨yBªakEngöe
() {

35 
	}
}

37 
UBoﬁ


38 
Di˘i⁄¨yBªakEngöe
::
	$h™dÀs
(
UCh¨32
 
c
, 
öt32_t
 
bªakTy≥
) const {

39  (
bªakTy≥
 >0 && bªakTy≥ < 32 && (((
uöt32_t
)1 << bªakTy≥Ë& 
fTy≥s
)

40 && 
fSë
.
	`c⁄èös
(
c
));

41 
	}
}

43 
öt32_t


44 
	gDi˘i⁄¨yBªakEngöe
::
	$födBªaks
–
UText
 *
ãxt
,

45 
öt32_t
 
°¨tPos
,

46 
öt32_t
 
ídPos
,

47 
UBoﬁ
 
ªvî£
,

48 
öt32_t
 
bªakTy≥
,

49 
USèck
 &
foundBªaks
 ) const {

50 
öt32_t
 
ªsu…
 = 0;

53 
öt32_t
 
°¨t
 = (öt32_t)
	`uãxt_gëN©iveIndex
(
ãxt
);

54 
öt32_t
 
cuºít
;

55 
öt32_t
 
øngeSèπ
;

56 
öt32_t
 
øngeEnd
;

57 
UCh¨32
 
c
 = 
	`uãxt_cuºít32
(
ãxt
);

58 i‡(
ªvî£
) {

59 
UBoﬁ
 
isDi˘
 = 
fSë
.
	`c⁄èös
(
c
);

60 (
cuºít
 = (
öt32_t
)
	`uãxt_gëN©iveIndex
(
ãxt
)Ë> 
°¨tPos
 && 
isDi˘
) {

61 
c
 = 
	`uãxt_¥evious32
(
ãxt
);

62 
isDi˘
 = 
fSë
.
	`c⁄èös
(
c
);

64 
øngeSèπ
 = (
cuºít
 < 
°¨tPos
Ë? sèπPo†: cuºít+(
isDi˘
 ? 0 : 1);

65 
øngeEnd
 = 
°¨t
 + 1;

68 (
cuºít
 = (
öt32_t
)
	`uãxt_gëN©iveIndex
(
ãxt
)Ë< 
ídPos
 && 
fSë
.
	`c⁄èös
(
c
)) {

69 
	`uãxt_√xt32
(
ãxt
);

70 
c
 = 
	`uãxt_cuºít32
(
ãxt
);

72 
øngeSèπ
 = 
°¨t
;

73 
øngeEnd
 = 
cuºít
;

75 i‡(
bªakTy≥
 >0 && bªakTy≥ < 32 && (((
uöt32_t
)1 << bªakTy≥Ë& 
fTy≥s
)) {

76 
ªsu…
 = 
	`divideUpDi˘i⁄¨yR™ge
(
ãxt
, 
øngeSèπ
, 
øngeEnd
, 
foundBªaks
);

77 
	`uãxt_£tN©iveIndex
(
ãxt
, 
cuºít
);

80  
ªsu…
;

81 
	}
}

84 
	gDi˘i⁄¨yBªakEngöe
::
	$£tCh¨a˘îs
–c⁄° 
UnicodeSë
 &
£t
 ) {

85 
fSë
 = 
£t
;

87 
fSë
.
	`com∑˘
();

88 
	}
}

105 
	#POSSIBLE_WORD_LIST_MAX
 20

	)

107 ˛as†
	cPossibÀW‹d
 {

108 
	m¥iv©e
:

110 
öt32_t
 
Àngths
[
POSSIBLE_WORD_LIST_MAX
];

111 
	mcou¡
;

112 
öt32_t
 
	m¥efix
;

113 
öt32_t
 
	moff£t
;

114 
	mm¨k
;

115 
	mcuºít
;

117 
	mpublic
:

118 
PossibÀW‹d
();

119 ~
PossibÀW‹d
();

122 
ˇndid©es
–
UText
 *
ãxt
, c⁄° 
TrõW‹dDi˘i⁄¨y
 *
di˘
, 
öt32_t
 
øngeEnd
 );

125 
öt32_t
 
ac˚±M¨ked
–
UText
 *
ãxt
 );

129 
UBoﬁ
 
backUp
–
UText
 *
ãxt
 );

132 
öt32_t
 
l⁄ge°Pªfix
();

135 
m¨kCuºít
();

138 
ölöe


139 
	gPossibÀW‹d
::
	$PossibÀW‹d
() {

140 
off£t
 = -1;

141 
	}
}

143 
ölöe


144 
	gPossibÀW‹d
::~
	$PossibÀW‹d
() {

145 
	}
}

147 
ölöe
 

148 
PossibÀW‹d
::
	$ˇndid©es
–
UText
 *
ãxt
, c⁄° 
TrõW‹dDi˘i⁄¨y
 *
di˘
, 
öt32_t
 
øngeEnd
 ) {

150 
öt32_t
 
°¨t
 = (öt32_t)
	`uãxt_gëN©iveIndex
(
ãxt
);

151 i‡(
°¨t
 !
off£t
) {

152 
off£t
 = 
°¨t
;

153 
¥efix
 = 
di˘
->
	`m©ches
(
ãxt
, 
øngeEnd
-
°¨t
, 
Àngths
, 
cou¡
, (lengths)/(lengths[0]));

155 i‡(
cou¡
 <= 0) {

156 
	`uãxt_£tN©iveIndex
(
ãxt
, 
°¨t
);

159 i‡(
cou¡
 > 0) {

160 
	`uãxt_£tN©iveIndex
(
ãxt
, 
°¨t
+
Àngths
[
cou¡
-1]);

162 
cuºít
 = 
cou¡
-1;

163 
m¨k
 = 
cuºít
;

164  
cou¡
;

165 
	}
}

167 
ölöe
 
öt32_t


168 
	gPossibÀW‹d
::
	$ac˚±M¨ked
–
UText
 *
ãxt
 ) {

169 
	`uãxt_£tN©iveIndex
(
ãxt
, 
off£t
 + 
Àngths
[
m¨k
]);

170  
Àngths
[
m¨k
];

171 
	}
}

173 
ölöe
 
UBoﬁ


174 
	gPossibÀW‹d
::
	$backUp
–
UText
 *
ãxt
 ) {

175 i‡(
cuºít
 > 0) {

176 
	`uãxt_£tN©iveIndex
(
ãxt
, 
off£t
 + 
Àngths
[--
cuºít
]);

177  
TRUE
;

179  
FALSE
;

180 
	}
}

182 
ölöe
 
öt32_t


183 
	gPossibÀW‹d
::
	$l⁄ge°Pªfix
() {

184  
¥efix
;

185 
	}
}

187 
ölöe
 

188 
	gPossibÀW‹d
::
	$m¨kCuºít
() {

189 
m¨k
 = 
cuºít
;

190 
	}
}

193 
	#THAI_LOOKAHEAD
 3

	)

196 
	#THAI_ROOT_COMBINE_THRESHOLD
 3

	)

200 
	#THAI_PREFIX_COMBINE_THRESHOLD
 3

	)

203 
	#THAI_PAIYANNOI
 0x0E2F

	)

206 
	#THAI_MAIYAMOK
 0x0E46

	)

209 
	#THAI_MIN_WORD
 2

	)

212 
	#THAI_MIN_WORD_SPAN
 (
THAI_MIN_WORD
 * 2)

	)

214 
	gThaiBªakEngöe
::
	$ThaiBªakEngöe
(c⁄° 
TrõW‹dDi˘i⁄¨y
 *
ad›tDi˘i⁄¨y
, 
UEº‹Code
 &
°©us
)

215 : 
	`Di˘i⁄¨yBªakEngöe
((1<<
UBRK_WORD
Ë| (1<<
UBRK_LINE
)),

216 
	$fDi˘i⁄¨y
(
ad›tDi˘i⁄¨y
)

218 
fThaiW‹dSë
.
	`≠∂yP©ã∫
(
	`UNICODE_STRING_SIMPLE
("[[:Thai:]&[:LöeBªak=SA:]]"), 
°©us
);

219 i‡(
	`U_SUCCESS
(
°©us
)) {

220 
	`£tCh¨a˘îs
(
fThaiW‹dSë
);

222 
fM¨kSë
.
	`≠∂yP©ã∫
(
	`UNICODE_STRING_SIMPLE
("[[:Thai:]&[:LöeBªak=SA:]&[:M:]]"), 
°©us
);

223 
fM¨kSë
.
	`add
(0x0020);

224 
fEndW‹dSë
 = 
fThaiW‹dSë
;

225 
fEndW‹dSë
.
	`ªmove
(0x0E31);

226 
fEndW‹dSë
.
	`ªmove
(0x0E40, 0x0E44);

227 
fBegöW‹dSë
.
	`add
(0x0E01, 0x0E2E);

228 
fBegöW‹dSë
.
	`add
(0x0E40, 0x0E44);

229 
fSuffixSë
.
	`add
(
THAI_PAIYANNOI
);

230 
fSuffixSë
.
	`add
(
THAI_MAIYAMOK
);

233 
fM¨kSë
.
	`com∑˘
();

234 
fEndW‹dSë
.
	`com∑˘
();

235 
fBegöW‹dSë
.
	`com∑˘
();

236 
fSuffixSë
.
	`com∑˘
();

237 
	}
}

239 
	gThaiBªakEngöe
::~
	$ThaiBªakEngöe
() {

240 
dñëe
 
fDi˘i⁄¨y
;

241 
	}
}

243 
öt32_t


244 
	gThaiBªakEngöe
::
	$divideUpDi˘i⁄¨yR™ge
–
UText
 *
ãxt
,

245 
öt32_t
 
øngeSèπ
,

246 
öt32_t
 
øngeEnd
,

247 
USèck
 &
foundBªaks
 ) const {

248 i‡((
øngeEnd
 - 
øngeSèπ
Ë< 
THAI_MIN_WORD_SPAN
) {

252 
uöt32_t
 
w‹dsFound
 = 0;

253 
öt32_t
 
w‹dLígth
;

254 
öt32_t
 
cuºít
;

255 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

256 
PossibÀW‹d
 
w‹ds
[
THAI_LOOKAHEAD
];

257 
UCh¨32
 
uc
;

259 
	`uãxt_£tN©iveIndex
(
ãxt
, 
øngeSèπ
);

261 
	`U_SUCCESS
(
°©us
Ë&& (
cuºít
 = (
öt32_t
)
	`uãxt_gëN©iveIndex
(
ãxt
)Ë< 
øngeEnd
) {

262 
w‹dLígth
 = 0;

265 
ˇndid©es
 = 
w‹ds
[
w‹dsFound
%
THAI_LOOKAHEAD
].
	`ˇndid©es
(
ãxt
, 
fDi˘i⁄¨y
, 
øngeEnd
);

268 i‡(
ˇndid©es
 == 1) {

269 
w‹dLígth
 = 
w‹ds
[
w‹dsFound
%
THAI_LOOKAHEAD
].
	`ac˚±M¨ked
(
ãxt
);

270 
w‹dsFound
 += 1;

274 i‡(
ˇndid©es
 > 1) {

276 i‡((
öt32_t
)
	`uãxt_gëN©iveIndex
(
ãxt
Ë>
øngeEnd
) {

277 
foundBe°
;

280 
w‹dsM©ched
 = 1;

281 i‡(
w‹ds
[(
w‹dsFound
+1)%
THAI_LOOKAHEAD
].
	`ˇndid©es
(
ãxt
, 
fDi˘i⁄¨y
, 
øngeEnd
) > 0) {

282 i‡(
w‹dsM©ched
 < 2) {

284 
w‹ds
[
w‹dsFound
%
THAI_LOOKAHEAD
].
	`m¨kCuºít
();

285 
w‹dsM©ched
 = 2;

289 i‡((
öt32_t
)
	`uãxt_gëN©iveIndex
(
ãxt
Ë>
øngeEnd
) {

290 
foundBe°
;

296 i‡(
w‹ds
[(
w‹dsFound
+2)%
THAI_LOOKAHEAD
].
	`ˇndid©es
(
ãxt
, 
fDi˘i⁄¨y
, 
øngeEnd
)) {

297 
w‹ds
[
w‹dsFound
%
THAI_LOOKAHEAD
].
	`m¨kCuºít
();

298 
foundBe°
;

301 
w‹ds
[(
w‹dsFound
+1)%
THAI_LOOKAHEAD
].
	`backUp
(
ãxt
));

304 
w‹ds
[
w‹dsFound
%
THAI_LOOKAHEAD
].
	`backUp
(
ãxt
));

305 
foundBe°
:

306 
w‹dLígth
 = 
w‹ds
[
w‹dsFound
%
THAI_LOOKAHEAD
].
	`ac˚±M¨ked
(
ãxt
);

307 
w‹dsFound
 += 1;

315 i‡((
öt32_t
)
	`uãxt_gëN©iveIndex
(
ãxt
Ë< 
øngeEnd
 && 
w‹dLígth
 < 
THAI_ROOT_COMBINE_THRESHOLD
) {

319 i‡(
w‹ds
[
w‹dsFound
%
THAI_LOOKAHEAD
].
	`ˇndid©es
(
ãxt
, 
fDi˘i⁄¨y
, 
øngeEnd
) <= 0

320 && (
w‹dLígth
 == 0

321 || 
w‹ds
[
w‹dsFound
%
THAI_LOOKAHEAD
].
	`l⁄ge°Pªfix
(Ë< 
THAI_PREFIX_COMBINE_THRESHOLD
)) {

324 
öt32_t
 
ªmaöög
 = 
øngeEnd
 - (
cuºít
+
w‹dLígth
);

325 
UCh¨32
 
pc
 = 
	`uãxt_cuºít32
(
ãxt
);

326 
öt32_t
 
ch¨s
 = 0;

328 
	`uãxt_√xt32
(
ãxt
);

329 
uc
 = 
	`uãxt_cuºít32
(
ãxt
);

332 
ch¨s
 += 1;

333 i‡(--
ªmaöög
 <= 0) {

336 i‡(
fEndW‹dSë
.
	`c⁄èös
(
pc
Ë&& 
fBegöW‹dSë
.c⁄èös(
uc
)) {

342 
ˇndid©es
 = 
w‹ds
[(
w‹dsFound
+1)%
THAI_LOOKAHEAD
].
	`ˇndid©es
(
ãxt
, 
fDi˘i⁄¨y
, 
øngeEnd
);

343 
	`uãxt_£tN©iveIndex
(
ãxt
, 
cuºít
+
w‹dLígth
+
ch¨s
);

344 i‡(
ˇndid©es
 > 0) {

348 
pc
 = 
uc
;

352 i‡(
w‹dLígth
 <= 0) {

353 
w‹dsFound
 += 1;

357 
w‹dLígth
 +
ch¨s
;

361 
	`uãxt_£tN©iveIndex
(
ãxt
, 
cuºít
+
w‹dLígth
);

366 
öt32_t
 
cuºPos
;

367 (
cuºPos
 = (
öt32_t
)
	`uãxt_gëN©iveIndex
(
ãxt
)Ë< 
øngeEnd
 && 
fM¨kSë
.
	`c⁄èös
(
	`uãxt_cuºít32
(text))) {

368 
	`uãxt_√xt32
(
ãxt
);

369 
w‹dLígth
 +(
öt32_t
)
	`uãxt_gëN©iveIndex
(
ãxt
Ë- 
cuºPos
;

376 i‡((
öt32_t
)
	`uãxt_gëN©iveIndex
(
ãxt
Ë< 
øngeEnd
 && 
w‹dLígth
 > 0) {

377 i‡(
w‹ds
[
w‹dsFound
%
THAI_LOOKAHEAD
].
	`ˇndid©es
(
ãxt
, 
fDi˘i⁄¨y
, 
øngeEnd
) <= 0

378 && 
fSuffixSë
.
	`c⁄èös
(
uc
 = 
	`uãxt_cuºít32
(
ãxt
))) {

379 i‡(
uc
 =
THAI_PAIYANNOI
) {

380 i‡(!
fSuffixSë
.
	`c⁄èös
(
	`uãxt_¥evious32
(
ãxt
))) {

382 
	`uãxt_√xt32
(
ãxt
);

383 
	`uãxt_√xt32
(
ãxt
);

384 
w‹dLígth
 += 1;

385 
uc
 = 
	`uãxt_cuºít32
(
ãxt
);

389 
	`uãxt_√xt32
(
ãxt
);

392 i‡(
uc
 =
THAI_MAIYAMOK
) {

393 i‡(
	`uãxt_¥evious32
(
ãxt
Ë!
THAI_MAIYAMOK
) {

395 
	`uãxt_√xt32
(
ãxt
);

396 
	`uãxt_√xt32
(
ãxt
);

397 
w‹dLígth
 += 1;

401 
	`uãxt_√xt32
(
ãxt
);

406 
	`uãxt_£tN©iveIndex
(
ãxt
, 
cuºít
+
w‹dLígth
);

411 i‡(
w‹dLígth
 > 0) {

412 
foundBªaks
.
	`push
((
cuºít
+
w‹dLígth
), 
°©us
);

417 i‡(
foundBªaks
.
	`≥eki
(Ë>
øngeEnd
) {

418 (Ë
foundBªaks
.
	`p›i
();

419 
w‹dsFound
 -= 1;

422  
w‹dsFound
;

423 
	}
}

425 
	gU_NAMESPACE_END


	@dictbe.h

8 #i‚de‡
DICTBE_H


9 
	#DICTBE_H


	)

11 
	~"unicode/uty≥s.h
"

12 
	~"unicode/uni£t.h
"

13 
	~"unicode/uãxt.h
"

15 
	~"brkíg.h
"

17 
U_NAMESPACE_BEGIN


19 
˛ass
 
	gTrõW‹dDi˘i⁄¨y
;

32 ˛as†
	cDi˘i⁄¨yBªakEngöe
 : 
public
 
L™guageBªakEngöe
 {

33 
¥iv©e
:

39 
UnicodeSë
 
fSë
;

46 
uöt32_t
 
	mfTy≥s
;

52 
Di˘i⁄¨yBªakEngöe
();

54 
	mpublic
:

61 
Di˘i⁄¨yBªakEngöe
–
uöt32_t
 
bªakTy≥s
 );

66 
	mvútuÆ
 ~
Di˘i⁄¨yBªakEngöe
();

77 
vútuÆ
 
UBoﬁ
 
	$h™dÀs
–
UCh¨32
 
c
, 
öt32_t
 
bªakTy≥
 ) const;

93 
vútuÆ
 
öt32_t
 
	$födBªaks
–
UText
 *
ãxt
,

94 
öt32_t
 
°¨tPos
,

95 
öt32_t
 
ídPos
,

96 
UBoﬁ
 
ªvî£
,

97 
öt32_t
 
bªakTy≥
,

98 
USèck
 &
foundBªaks
 ) const;

100 
¥Ÿe˘ed
:

107 
vútuÆ
 
	`£tCh¨a˘îs
–c⁄° 
UnicodeSë
 &
£t
 );

125 
vútuÆ
 
öt32_t
 
	$divideUpDi˘i⁄¨yR™ge
–
UText
 *
ãxt
,

126 
öt32_t
 
øngeSèπ
,

127 
öt32_t
 
øngeEnd
,

128 
USèck
 &
foundBªaks
 ) const = 0;

143 ˛as†
	cThaiBªakEngöe
 : 
public
 
Di˘i⁄¨yBªakEngöe
 {

144 
¥iv©e
:

150 
UnicodeSë
 
fThaiW‹dSë
;

151 
UnicodeSë
 
fEndW‹dSë
;

152 
UnicodeSë
 
fBegöW‹dSë
;

153 
UnicodeSë
 
fSuffixSë
;

154 
UnicodeSë
 
fM¨kSë
;

155 c⁄° 
TrõW‹dDi˘i⁄¨y
 *
fDi˘i⁄¨y
;

157 
public
:

165 
	`ThaiBªakEngöe
(c⁄° 
TrõW‹dDi˘i⁄¨y
 *
ad›tDi˘i⁄¨y
, 
UEº‹Code
 &
°©us
);

170 
vútuÆ
 ~
	`ThaiBªakEngöe
();

172 
¥Ÿe˘ed
:

182 
vútuÆ
 
öt32_t
 
	$divideUpDi˘i⁄¨yR™ge
–
UText
 *
ãxt
,

183 
öt32_t
 
øngeSèπ
,

184 
öt32_t
 
øngeEnd
,

185 
USèck
 &
foundBªaks
 ) const;

190 
U_NAMESPACE_END


	@dtintrv.cpp

13 
	~"unicode/dtöåv.h
"

16 
U_NAMESPACE_BEGIN


18 
	$UOBJECT_DEFINE_RTTI_IMPLEMENTATION
(
D©eI¡îvÆ
)

23 
D©eI¡îvÆ
::
	$D©eI¡îvÆ
(
UD©e
 
‰om
, UD©ê
to
)

24 : 
	`‰omD©e
(
‰om
),

25 
	$toD©e
(
to
)

26 {
	}
}

29 
	gD©eI¡îvÆ
::~
	$D©eI¡îvÆ
(){
	}
}

32 
D©eI¡îvÆ
::
	$D©eI¡îvÆ
(c⁄° 
D©eI¡îvÆ
& 
Ÿhî
)

33 : 
	$UObje˘
(
Ÿhî
) {

34 *
this
 = 
Ÿhî
;

35 
	}
}

38 
	gD©eI¡îvÆ
&

39 
	gD©eI¡îvÆ
::
›î©‹
=(c⁄° 
D©eI¡îvÆ
& 
Ÿhî
) {

40 i‡–
this
 !&
Ÿhî
 ) {

41 
‰omD©e
 = 
Ÿhî
.fromDate;

42 
	gtoD©e
 = 
Ÿhî
.
toD©e
;

44  *
	gthis
;

48 
D©eI¡îvÆ
*

49 
	gD©eI¡îvÆ
::
	$˛⁄e
() const {

50  
√w
 
	`D©eI¡îvÆ
(*
this
);

51 
	}
}

54 
UBoﬁ


55 
	gD©eI¡îvÆ
::
›î©‹
==(c⁄° 
D©eI¡îvÆ
& 
Ÿhî
) const {

56  ( 
‰omD©e
 =
Ÿhî
.‰omD©ê&& 
toD©e
 == other.toDate );

60 
	gU_NAMESPACE_END


	@errorcode.cpp

17 
	~"unicode/uty≥s.h
"

18 
	~"unicode/îr‹code.h
"

20 
U_NAMESPACE_BEGIN


22 
UEº‹Code
 
	gEº‹Code
::
	$ª£t
() {

23 
UEº‹Code
 
code
 = 
îr‹Code
;

24 
îr‹Code
 = 
U_ZERO_ERROR
;

25  
code
;

26 
	}
}

28 
	gEº‹Code
::
	$as£πSuc˚ss
() const {

29 if(
	`isFaûuª
()) {

30 
	`h™dÀFaûuª
();

32 
	}
}

34 c⁄° * 
	gEº‹Code
::
	$îr‹Name
() const {

35  
	`u_îr‹Name
(
îr‹Code
);

36 
	}
}

38 
	gU_NAMESPACE_END


	@filterednormalizer2.cpp

17 
	~"unicode/uty≥s.h
"

19 #i‡!
UCONFIG_NO_NORMALIZATION


21 
	~"unicode/n‹mÆizî2.h
"

22 
	~"unicode/uni£t.h
"

23 
	~"unicode/uni°r.h
"

24 
	~"unicode/un‹m.h
"

25 
	~"˝putûs.h
"

27 
U_NAMESPACE_BEGIN


29 
	gUnicodeSåög
 &

30 
	gFûãªdN‹mÆizî2
::
	$n‹mÆize
(c⁄° 
UnicodeSåög
 &
§c
,

31 
UnicodeSåög
 &
de°
,

32 
UEº‹Code
 &
îr‹Code
) const {

33 
	`u¥v_checkC™GëBuf„r
(
§c
, 
îr‹Code
);

34 if(
	`U_FAILURE
(
îr‹Code
)) {

35 
de°
.
	`£tToBogus
();

36  
de°
;

38 if(&
de°
==&
§c
) {

39 
îr‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

40  
de°
;

42 
de°
.
	`ªmove
();

43  
	`n‹mÆize
(
§c
, 
de°
, 
USET_SPAN_SIMPLE
, 
îr‹Code
);

44 
	}
}

53 
	gUnicodeSåög
 &

54 
	gFûãªdN‹mÆizî2
::
	$n‹mÆize
(c⁄° 
UnicodeSåög
 &
§c
,

55 
UnicodeSåög
 &
de°
,

56 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
,

57 
UEº‹Code
 &
îr‹Code
) const {

58 
UnicodeSåög
 
ãmpDe°
;

59 
öt32_t
 
¥evS∑nLimô
=0;ÖªvS∑nLimô<
§c
.
	`Àngth
();) {

60 
öt32_t
 
•™Limô
=
£t
.
	`•™
(
§c
, 
¥evS∑nLimô
, 
•™C⁄dôi⁄
);

61 
öt32_t
 
•™Lígth
=
•™Limô
-
¥evS∑nLimô
;

62 if(
•™C⁄dôi⁄
==
USET_SPAN_NOT_CONTAINED
) {

63 if(
•™Lígth
!=0) {

64 
de°
.
	`≠≥nd
(
§c
, 
¥evS∑nLimô
, 
•™Lígth
);

66 
•™C⁄dôi⁄
=
USET_SPAN_SIMPLE
;

68 if(
•™Lígth
!=0) {

71 
de°
.
	`≠≥nd
(
n‹m2
.
	`n‹mÆize
(
§c
.
	`ãmpSubSåögBëwìn
(
¥evS∑nLimô
, 
•™Limô
),

72 
ãmpDe°
, 
îr‹Code
));

73 if(
	`U_FAILURE
(
îr‹Code
)) {

77 
•™C⁄dôi⁄
=
USET_SPAN_NOT_CONTAINED
;

79 
¥evS∑nLimô
=
•™Limô
;

81  
de°
;

82 
	}
}

84 
	gUnicodeSåög
 &

85 
	gFûãªdN‹mÆizî2
::
	$n‹mÆizeSec⁄dAndAµíd
(
UnicodeSåög
 &
fú°
,

86 c⁄° 
UnicodeSåög
 &
£c⁄d
,

87 
UEº‹Code
 &
îr‹Code
) const {

88  
	`n‹mÆizeSec⁄dAndAµíd
(
fú°
, 
£c⁄d
, 
TRUE
, 
îr‹Code
);

89 
	}
}

91 
	gUnicodeSåög
 &

92 
	gFûãªdN‹mÆizî2
::
	$≠≥nd
(
UnicodeSåög
 &
fú°
,

93 c⁄° 
UnicodeSåög
 &
£c⁄d
,

94 
UEº‹Code
 &
îr‹Code
) const {

95  
	`n‹mÆizeSec⁄dAndAµíd
(
fú°
, 
£c⁄d
, 
FALSE
, 
îr‹Code
);

96 
	}
}

98 
	gUnicodeSåög
 &

99 
	gFûãªdN‹mÆizî2
::
	$n‹mÆizeSec⁄dAndAµíd
(
UnicodeSåög
 &
fú°
,

100 c⁄° 
UnicodeSåög
 &
£c⁄d
,

101 
UBoﬁ
 
doN‹mÆize
,

102 
UEº‹Code
 &
îr‹Code
) const {

103 
	`u¥v_checkC™GëBuf„r
(
fú°
, 
îr‹Code
);

104 
	`u¥v_checkC™GëBuf„r
(
£c⁄d
, 
îr‹Code
);

105 if(
	`U_FAILURE
(
îr‹Code
)) {

106  
fú°
;

108 if(&
fú°
==&
£c⁄d
) {

109 
îr‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

110  
fú°
;

112 if(
fú°
.
	`isEm±y
()) {

113 if(
doN‹mÆize
) {

114  
	`n‹mÆize
(
£c⁄d
, 
fú°
, 
îr‹Code
);

116  
fú°
=
£c⁄d
;

120 
öt32_t
 
¥efixLimô
=
£t
.
	`•™
(
£c⁄d
, 0, 
USET_SPAN_SIMPLE
);

121 if(
¥efixLimô
!=0) {

122 
UnicodeSåög
 
	`¥efix
(
£c⁄d
.
	`ãmpSubSåög
(0, 
¥efixLimô
));

123 
öt32_t
 
suffixSèπ
=
£t
.
	`•™Back
(
fú°
, 
INT32_MAX
, 
USET_SPAN_SIMPLE
);

124 if(
suffixSèπ
==0) {

125 if(
doN‹mÆize
) {

126 
n‹m2
.
	`n‹mÆizeSec⁄dAndAµíd
(
fú°
, 
¥efix
, 
îr‹Code
);

128 
n‹m2
.
	`≠≥nd
(
fú°
, 
¥efix
, 
îr‹Code
);

131 
UnicodeSåög
 
	`middÀ
(
fú°
, 
suffixSèπ
, 
INT32_MAX
);

132 if(
doN‹mÆize
) {

133 
n‹m2
.
	`n‹mÆizeSec⁄dAndAµíd
(
middÀ
, 
¥efix
, 
îr‹Code
);

135 
n‹m2
.
	`≠≥nd
(
middÀ
, 
¥efix
, 
îr‹Code
);

137 
fú°
.
	`ª∂a˚
(
suffixSèπ
, 
INT32_MAX
, 
middÀ
);

140 if(
¥efixLimô
<
£c⁄d
.
	`Àngth
()) {

141 
UnicodeSåög
 
	`ª°
(
£c⁄d
.
	`ãmpSubSåög
(
¥efixLimô
, 
INT32_MAX
));

142 if(
doN‹mÆize
) {

143 
	`n‹mÆize
(
ª°
, 
fú°
, 
USET_SPAN_NOT_CONTAINED
, 
îr‹Code
);

145 
fú°
.
	`≠≥nd
(
ª°
);

148  
fú°
;

149 
	}
}

151 
UBoﬁ


152 
	gFûãªdN‹mÆizî2
::
	$gëDecomposôi⁄
(
UCh¨32
 
c
, 
UnicodeSåög
 &
decomposôi⁄
) const {

153  
£t
.
	`c⁄èös
(
c
Ë&& 
n‹m2
.
	`gëDecomposôi⁄
(c, 
decomposôi⁄
);

154 
	}
}

156 
UBoﬁ


157 
	gFûãªdN‹mÆizî2
::
	$isN‹mÆized
(c⁄° 
UnicodeSåög
 &
s
, 
UEº‹Code
 &
îr‹Code
) const {

158 
	`u¥v_checkC™GëBuf„r
(
s
, 
îr‹Code
);

159 if(
	`U_FAILURE
(
îr‹Code
)) {

160  
FALSE
;

162 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
=
USET_SPAN_SIMPLE
;

163 
öt32_t
 
¥evS∑nLimô
=0;ÖªvS∑nLimô<
s
.
	`Àngth
();) {

164 
öt32_t
 
•™Limô
=
£t
.
	`•™
(
s
, 
¥evS∑nLimô
, 
•™C⁄dôi⁄
);

165 if(
•™C⁄dôi⁄
==
USET_SPAN_NOT_CONTAINED
) {

166 
•™C⁄dôi⁄
=
USET_SPAN_SIMPLE
;

168 if–!
n‹m2
.
	`isN‹mÆized
(
s
.
	`ãmpSubSåögBëwìn
(
¥evS∑nLimô
, 
•™Limô
), 
îr‹Code
) ||

169 
	`U_FAILURE
(
îr‹Code
)

171  
FALSE
;

173 
•™C⁄dôi⁄
=
USET_SPAN_NOT_CONTAINED
;

175 
¥evS∑nLimô
=
•™Limô
;

177  
TRUE
;

178 
	}
}

180 
UN‹mÆiz©i⁄CheckResu…


181 
	gFûãªdN‹mÆizî2
::
	$quickCheck
(c⁄° 
UnicodeSåög
 &
s
, 
UEº‹Code
 &
îr‹Code
) const {

182 
	`u¥v_checkC™GëBuf„r
(
s
, 
îr‹Code
);

183 if(
	`U_FAILURE
(
îr‹Code
)) {

184  
UNORM_MAYBE
;

186 
UN‹mÆiz©i⁄CheckResu…
 
ªsu…
=
UNORM_YES
;

187 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
=
USET_SPAN_SIMPLE
;

188 
öt32_t
 
¥evS∑nLimô
=0;ÖªvS∑nLimô<
s
.
	`Àngth
();) {

189 
öt32_t
 
•™Limô
=
£t
.
	`•™
(
s
, 
¥evS∑nLimô
, 
•™C⁄dôi⁄
);

190 if(
•™C⁄dôi⁄
==
USET_SPAN_NOT_CONTAINED
) {

191 
•™C⁄dôi⁄
=
USET_SPAN_SIMPLE
;

193 
UN‹mÆiz©i⁄CheckResu…
 
qcResu…
=

194 
n‹m2
.
	`quickCheck
(
s
.
	`ãmpSubSåögBëwìn
(
¥evS∑nLimô
, 
•™Limô
), 
îr‹Code
);

195 if(
	`U_FAILURE
(
îr‹Code
Ë|| 
qcResu…
==
UNORM_NO
) {

196  
qcResu…
;

197 } if(
qcResu…
==
UNORM_MAYBE
) {

198 
ªsu…
=
qcResu…
;

200 
•™C⁄dôi⁄
=
USET_SPAN_NOT_CONTAINED
;

202 
¥evS∑nLimô
=
•™Limô
;

204  
ªsu…
;

205 
	}
}

207 
öt32_t


208 
	gFûãªdN‹mÆizî2
::
	$•™QuickCheckYes
(c⁄° 
UnicodeSåög
 &
s
, 
UEº‹Code
 &
îr‹Code
) const {

209 
	`u¥v_checkC™GëBuf„r
(
s
, 
îr‹Code
);

210 if(
	`U_FAILURE
(
îr‹Code
)) {

213 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
=
USET_SPAN_SIMPLE
;

214 
öt32_t
 
¥evS∑nLimô
=0;ÖªvS∑nLimô<
s
.
	`Àngth
();) {

215 
öt32_t
 
•™Limô
=
£t
.
	`•™
(
s
, 
¥evS∑nLimô
, 
•™C⁄dôi⁄
);

216 if(
•™C⁄dôi⁄
==
USET_SPAN_NOT_CONTAINED
) {

217 
•™C⁄dôi⁄
=
USET_SPAN_SIMPLE
;

219 
öt32_t
 
yesLimô
=

220 
¥evS∑nLimô
+

221 
n‹m2
.
	`•™QuickCheckYes
(

222 
s
.
	`ãmpSubSåögBëwìn
(
¥evS∑nLimô
, 
•™Limô
), 
îr‹Code
);

223 if(
	`U_FAILURE
(
îr‹Code
Ë|| 
yesLimô
<
•™Limô
) {

224  
yesLimô
;

226 
•™C⁄dôi⁄
=
USET_SPAN_NOT_CONTAINED
;

228 
¥evS∑nLimô
=
•™Limô
;

230  
s
.
	`Àngth
();

231 
	}
}

233 
UBoﬁ


234 
	gFûãªdN‹mÆizî2
::
	$hasBound¨yBef‹e
(
UCh¨32
 
c
) const {

235  !
£t
.
	`c⁄èös
(
c
Ë|| 
n‹m2
.
	`hasBound¨yBef‹e
(c);

236 
	}
}

238 
UBoﬁ


239 
	gFûãªdN‹mÆizî2
::
	$hasBound¨yA·î
(
UCh¨32
 
c
) const {

240  !
£t
.
	`c⁄èös
(
c
Ë|| 
n‹m2
.
	`hasBound¨yA·î
(c);

241 
	}
}

243 
UBoﬁ


244 
	gFûãªdN‹mÆizî2
::
	$isI√π
(
UCh¨32
 
c
) const {

245  !
£t
.
	`c⁄èös
(
c
Ë|| 
n‹m2
.
	`isI√π
(c);

246 
	}
}

248 
U_NAMESPACE_END


252 
U_NAMESPACE_USE


254 
U_DRAFT
 
UN‹mÆizî2
 * 
U_EXPORT2


255 
	$un‹m2_›íFûãªd
(c⁄° 
UN‹mÆizî2
 *
n‹m2
, c⁄° 
USë
 *
fûãrSë
, 
UEº‹Code
 *
pEº‹Code
) {

256 if(
	`U_FAILURE
(*
pEº‹Code
)) {

257  
NULL
;

259 if(
fûãrSë
==
NULL
) {

260 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

261  
NULL
;

263 
N‹mÆizî2
 *
‚2
=
√w
 
	`FûãªdN‹mÆizî2
(*(N‹mÆizî2 *)
n‹m2
,

264 *
UnicodeSë
::
	`‰omUSë
(
fûãrSë
));

265 if(
‚2
==
NULL
) {

266 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

268  (
UN‹mÆizî2
 *)
‚2
;

269 
	}
}

	@hash.h

11 #i‚de‡
HASH_H


12 
	#HASH_H


	)

14 
	~"unicode/uni°r.h
"

15 
	~"unicode/uobje˘.h
"

16 
	~"uhash.h
"

18 
U_NAMESPACE_BEGIN


27 ˛as†
	cU_COMMON_API
 
	mHashèbÀ
 : 
public
 
UMem‹y
 {

28 
UHashèbÀ
* 
hash
;

29 
UHashèbÀ
 
	mhashObj
;

31 
ölöe
 
öô
(
UHashFun˘i⁄
 *
keyHash
, 
UKeyCom∑øt‹
 *
keyComp
, 
UVÆueCom∑øt‹
 *
vÆueComp
, 
UEº‹Code
& 
°©us
);

33 
	mpublic
:

39 
HashèbÀ
(
UBoﬁ
 
ign‹eKeyCa£
, 
UEº‹Code
& 
°©us
);

47 
HashèbÀ
(
UKeyCom∑øt‹
 *
keyComp
, 
UVÆueCom∑øt‹
 *
vÆueComp
, 
UEº‹Code
& 
°©us
);

53 
HashèbÀ
(
UEº‹Code
& 
°©us
);

59 
HashèbÀ
();

65 ~
HashèbÀ
();

67 
UObje˘Dñëî
 *
£tVÆueDñëî
(UObje˘Dñëî *
‚
);

69 
öt32_t
 
	$cou¡
() const;

71 * 
	`put
(c⁄° 
UnicodeSåög
& 
key
, * 
vÆue
, 
UEº‹Code
& 
°©us
);

73 
öt32_t
 
	`puti
(c⁄° 
UnicodeSåög
& 
key
, i¡32_à
vÆue
, 
UEº‹Code
& 
°©us
);

75 * 
	$gë
(c⁄° 
UnicodeSåög
& 
key
) const;

77 
öt32_t
 
	$gëi
(c⁄° 
UnicodeSåög
& 
key
) const;

79 * 
	`ªmove
(c⁄° 
UnicodeSåög
& 
key
);

81 
öt32_t
 
	`ªmovei
(c⁄° 
UnicodeSåög
& 
key
);

83 
	`ªmoveAŒ
();

85 c⁄° 
UHashEÀmít
* 
	$föd
(c⁄° 
UnicodeSåög
& 
key
) const;

87 c⁄° 
UHashEÀmít
* 
	$√xtEÀmít
(
öt32_t
& 
pos
) const;

89 
UKeyCom∑øt‹
* 
	`£tKeyCom∑øt‹
(UKeyCom∑øt‹*
keyComp
);

91 
UVÆueCom∑øt‹
* 
	`£tVÆueCom∑øt‹
(UVÆueCom∑øt‹* 
vÆueComp
);

93 
UBoﬁ
 
	$equÆs
(c⁄° 
HashèbÀ
& 
th©
) const;

94 
¥iv©e
:

95 
	`HashèbÀ
(c⁄° 
HashèbÀ
 &
Ÿhî
);

96 
HashèbÀ
 &
›î©‹
=(c⁄° HashèbÀ &
Ÿhî
);

103 
ölöe
 
HashèbÀ
::
	$öô
(
UHashFun˘i⁄
 *
keyHash
, 
UKeyCom∑øt‹
 *
keyComp
,

104 
UVÆueCom∑øt‹
 *
vÆueComp
, 
UEº‹Code
& 
°©us
) {

105 i‡(
	`U_FAILURE
(
°©us
)) {

108 
	`uhash_öô
(&
hashObj
, 
keyHash
, 
keyComp
, 
vÆueComp
, &
°©us
);

109 i‡(
	`U_SUCCESS
(
°©us
)) {

110 
hash
 = &
hashObj
;

111 
	`uhash_£tKeyDñëî
(
hash
, 
uhash_dñëeUnicodeSåög
);

113 
	}
}

115 
ölöe
 
	gHashèbÀ
::
	$HashèbÀ
(
UKeyCom∑øt‹
 *
keyComp
, 
UVÆueCom∑øt‹
 *
vÆueComp
,

116 
UEº‹Code
& 
°©us
Ë: 
	$hash
(0) {

117 
	`öô
–
uhash_hashUnicodeSåög
, 
keyComp
, 
vÆueComp
, 
°©us
);

118 
	}
}

119 
ölöe
 
	gHashèbÀ
::
	$HashèbÀ
(
UBoﬁ
 
ign‹eKeyCa£
, 
UEº‹Code
& 
°©us
)

120 : 
	$hash
(0)

122 
	`öô
(
ign‹eKeyCa£
 ? 
uhash_hashCa£ÀssUnicodeSåög


123 : 
uhash_hashUnicodeSåög
,

124 
ign‹eKeyCa£
 ? 
uhash_com∑ªCa£ÀssUnicodeSåög


125 : 
uhash_com∑ªUnicodeSåög
,

126 
NULL
,

127 
°©us
);

128 
	}
}

130 
ölöe
 
	gHashèbÀ
::
	$HashèbÀ
(
UEº‹Code
& 
°©us
)

131 : 
	$hash
(0)

133 
	`öô
(
uhash_hashUnicodeSåög
, 
uhash_com∑ªUnicodeSåög
, 
NULL
, 
°©us
);

134 
	}
}

136 
ölöe
 
	gHashèbÀ
::
	$HashèbÀ
()

137 : 
	$hash
(0)

139 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

140 
	`öô
(
uhash_hashUnicodeSåög
, 
uhash_com∑ªUnicodeSåög
, 
NULL
, 
°©us
);

141 
	}
}

143 
ölöe
 
	gHashèbÀ
::~
	$HashèbÀ
() {

144 i‡(
hash
 !
NULL
) {

145 
	`uhash_˛o£
(
hash
);

147 
	}
}

149 
ölöe
 
UObje˘Dñëî
 *
	gHashèbÀ
::
	$£tVÆueDñëî
(
UObje˘Dñëî
 *
‚
) {

150  
	`uhash_£tVÆueDñëî
(
hash
, 
‚
);

151 
	}
}

153 
ölöe
 
öt32_t
 
	gHashèbÀ
::
	$cou¡
() const {

154  
	`uhash_cou¡
(
hash
);

155 
	}
}

157 
ölöe
 * 
	gHashèbÀ
::
	$put
(c⁄° 
UnicodeSåög
& 
key
, * 
vÆue
, 
UEº‹Code
& 
°©us
) {

158  
	`uhash_put
(
hash
, 
√w
 
	`UnicodeSåög
(
key
), 
vÆue
, &
°©us
);

159 
	}
}

161 
ölöe
 
öt32_t
 
	gHashèbÀ
::
	$puti
(c⁄° 
UnicodeSåög
& 
key
, 
öt32_t
 
vÆue
, 
UEº‹Code
& 
°©us
) {

162  
	`uhash_puti
(
hash
, 
√w
 
	`UnicodeSåög
(
key
), 
vÆue
, &
°©us
);

163 
	}
}

165 
ölöe
 * 
	gHashèbÀ
::
	$gë
(c⁄° 
UnicodeSåög
& 
key
) const {

166  
	`uhash_gë
(
hash
, &
key
);

167 
	}
}

169 
ölöe
 
öt32_t
 
	gHashèbÀ
::
	$gëi
(c⁄° 
UnicodeSåög
& 
key
) const {

170  
	`uhash_gëi
(
hash
, &
key
);

171 
	}
}

173 
ölöe
 * 
	gHashèbÀ
::
	$ªmove
(c⁄° 
UnicodeSåög
& 
key
) {

174  
	`uhash_ªmove
(
hash
, &
key
);

175 
	}
}

177 
ölöe
 
öt32_t
 
	gHashèbÀ
::
	$ªmovei
(c⁄° 
UnicodeSåög
& 
key
) {

178  
	`uhash_ªmovei
(
hash
, &
key
);

179 
	}
}

181 
ölöe
 c⁄° 
UHashEÀmít
* 
	gHashèbÀ
::
	$föd
(c⁄° 
UnicodeSåög
& 
key
) const {

182  
	`uhash_föd
(
hash
, &
key
);

183 
	}
}

185 
ölöe
 c⁄° 
UHashEÀmít
* 
	gHashèbÀ
::
	$√xtEÀmít
(
öt32_t
& 
pos
) const {

186  
	`uhash_√xtEÀmít
(
hash
, &
pos
);

187 
	}
}

189 
ölöe
 
	gHashèbÀ
::
	$ªmoveAŒ
() {

190 
	`uhash_ªmoveAŒ
(
hash
);

191 
	}
}

193 
ölöe
 
UKeyCom∑øt‹
* 
	gHashèbÀ
::
	$£tKeyCom∑øt‹
(
UKeyCom∑øt‹
*
keyComp
){

194  
	`uhash_£tKeyCom∑øt‹
(
hash
, 
keyComp
);

195 
	}
}

197 
ölöe
 
UVÆueCom∑øt‹
* 
	gHashèbÀ
::
	$£tVÆueCom∑øt‹
(
UVÆueCom∑øt‹
* 
vÆueComp
){

198  
	`uhash_£tVÆueCom∑øt‹
(
hash
, 
vÆueComp
);

199 
	}
}

201 
ölöe
 
UBoﬁ
 
	gHashèbÀ
::
	$equÆs
(c⁄° 
HashèbÀ
& 
th©
)const{

202  
	`uhash_equÆs
(
hash
, 
th©
.hash);

203 
	}
}

204 
	gU_NAMESPACE_END


	@icucfg.h

5 
	#STDC_HEADERS
 1

	)

35 
	#HAVE_WCHAR_H
 1

	)

38 
	#SIZEOF_WCHAR_T
 4

	)

41 
	#HAVE_INTTYPES_H
 1

	)

53 
	#HAVE_LIBM
 1

	)

56 
	#HAVE_LIBPTHREAD
 1

	)

	@icudataver.c

10 
	~"unicode/uty≥s.h
"

11 
	~"unicode/icud©avî.h
"

12 
	~"unicode/uvîsi⁄.h
"

13 
	~"unicode/uªs.h
"

14 
	~"uªsimp.h
"

15 
	~"cmem‹y.h
"

20 
UBoﬁ
 
hasICUSTDBundÀ
();

22 
UBoﬁ
 
	$hasICUSTDBundÀ
() {

23 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

24 
UBoﬁ
 
ªsu…
 = 
TRUE
;

26 
UResour˚BundÀ
 *
icu°dbundÀ
 = 
	`uªs_›íDúe˘
(
NULL
, 
U_ICU_STD_BUNDLE
, &
°©us
);

27 i‡(
	`U_SUCCESS
(
°©us
)) {

28 
ªsu…
 = 
TRUE
;

30 
ªsu…
 = 
FALSE
;

33 
	`uªs_˛o£
(
icu°dbundÀ
);

35  
ªsu…
;

36 
	}
}

38 
U_CAPI
 
U_EXPORT2
 
	$u_gëD©aVîsi⁄
(
UVîsi⁄Info
 
d©aVîsi⁄Fûlö
, 
UEº‹Code
 *
°©us
) {

39 
UResour˚BundÀ
 *
icud©¨es
 = 
NULL
;

41 i‡(
	`U_FAILURE
(*
°©us
)) {

45 i‡(
d©aVîsi⁄Fûlö
 !
NULL
) {

46 
icud©¨es
 = 
	`uªs_›íDúe˘
(
NULL
, 
U_ICU_VERSION_BUNDLE
 , 
°©us
);

47 i‡(
	`U_SUCCESS
(*
°©us
)) {

48 
	`uªs_gëVîsi⁄ByKey
(
icud©¨es
, 
U_ICU_DATA_KEY
, 
d©aVîsi⁄Fûlö
, 
°©us
);

50 
	`uªs_˛o£
(
icud©¨es
);

52 
	}
}

54 
U_CAPI
 
UBoﬁ
 
U_EXPORT2
 
	$u_isD©aOldî
(
UVîsi⁄Info
 
d©aVîsi⁄Fûlö
, 
UBoﬁ
 *
isModifõdFûlö
, 
UEº‹Code
 *
°©us
) {

55 
UBoﬁ
 
ªsu…
 = 
TRUE
;

56 
UVîsi⁄Info
 
d©aVîsi⁄
;

57 
UVîsi⁄Info
 
wúedVîsi⁄
;

59 i‡(
	`U_FAILURE
(*
°©us
)) {

60  
ªsu…
;

63 
	`u_gëD©aVîsi⁄
(
d©aVîsi⁄
, 
°©us
);

64 i‡(
	`U_SUCCESS
(*
°©us
)) {

65 
	`u_vîsi⁄FromSåög
(
wúedVîsi⁄
, 
U_ICU_DATA_VERSION
);

67 i‡(
	`u¥v_memcmp
(
d©aVîsi⁄
, 
wúedVîsi⁄
, (
UVîsi⁄Info
)) >= 0) {

68 
ªsu…
 = 
FALSE
;

71 i‡(
d©aVîsi⁄Fûlö
 !
NULL
) {

72 
	`u¥v_mem˝y
(
d©aVîsi⁄Fûlö
, 
d©aVîsi⁄
, (
UVîsi⁄Info
));

75 i‡(
	`hasICUSTDBundÀ
()) {

76 *
isModifõdFûlö
 = 
FALSE
;

78 *
isModifõdFûlö
 = 
TRUE
;

82  
ªsu…
;

83 
	}
}

	@icuplug.c

16 
	~"unicode/icu∂ug.h
"

17 
	~"icu∂ugimp.h
"

18 
	~"c°rög.h
"

19 
	~"cmem‹y.h
"

20 
	~"putûimp.h
"

21 
	~"u˛n.h
"

22 
	~<°dio.h
>

24 #i‚de‡
UPLUG_TRACE


25 
	#UPLUG_TRACE
 0

	)

28 #i‡
UPLUG_TRACE


29 
	~<°dio.h
>

30 
	#DBG
(
x
Ë
	`Ârötf
(
°dîr
, "%s:%d: ",
__FILE__
,
__LINE__
); 
Ârötf
 
	)
x

37 
	sUPlugD©a
 {

38 
UPlugE¡rypoöt
 *
	míåypoöt
;

39 
uöt32_t
 
	m°ru˘Size
;

40 
uöt32_t
 
	mtokí
;

41 *
	mlib
;

42 
	mlibName
[
UPLUG_NAME_MAX
];

43 
	msym
[
UPLUG_NAME_MAX
];

44 
	mc⁄fig
[
UPLUG_NAME_MAX
];

45 *
	mc⁄ãxt
;

46 
	m«me
[
UPLUG_NAME_MAX
];

47 
UPlugLevñ
 
	mÀvñ
;

48 
UBoﬁ
 
	mawaôögLﬂd
;

49 
UBoﬁ
 
	md⁄tU∆ﬂd
;

50 
UEº‹Code
 
	m∂ugöSètus
;

55 
	#UPLUG_LIBRARY_INITIAL_COUNT
 8

	)

56 
	#UPLUG_PLUGIN_INITIAL_COUNT
 12

	)

66 
öt32_t
 
	$u∂ug_ªmoveE¡ryAt
(*
li°
, 
öt32_t
 
li°Size
, i¡32_à
membîSize
, i¡32_à
ôemToRemove
) {

67 
uöt8_t
 *
byãPå
 = (uöt8_à*)
li°
;

70 if(
li°Size
<1) {

71  
li°Size
;

75 if(
li°Size
 > 
ôemToRemove
+1) {

76 
	`memmove
(
byãPå
+(
ôemToRemove
*
membîSize
), bytePtr+((itemToRemove+1)*memberSize), memberSize);

79  
li°Size
-1;

80 
	}
}

85 #i‡
U_ENABLE_DYLOAD


90 
	gUPlugLibøry
;

96 
	sUPlugLibøry
 {

97 *
	mlib
;

98 
	m«me
[
UPLUG_NAME_MAX
];

99 
uöt32_t
 
	mªf
;

100 } 
	tUPlugLibøry
;

102 
UPlugLibøry
 
	g°©icLibøryLi°
[
UPLUG_LIBRARY_INITIAL_COUNT
];

103 
UPlugLibøry
 * 
	glibøryLi°
 = 
°©icLibøryLi°
;

104 
öt32_t
 
	glibøryCou¡
 = 0;

105 
öt32_t
 
	glibøryMax
 = 
UPLUG_LIBRARY_INITIAL_COUNT
;

112 
öt32_t
 
	$£¨chF‹LibøryName
(c⁄° *
libName
) {

113 
öt32_t
 
i
;

115 
i
=0;i<
libøryCou¡
;i++) {

116 if(!
	`u¥v_°rcmp
(
libName
, 
libøryLi°
[
i
].
«me
)) {

117  
i
;

121 
	}
}

123 
öt32_t
 
	$£¨chF‹Libøry
(*
lib
) {

124 
öt32_t
 
i
;

126 
i
=0;i<
libøryCou¡
;i++) {

127 if(
lib
==
libøryLi°
[
i
].lib) {

128  
i
;

132 
	}
}

134 
U_INTERNAL
 * 
U_EXPORT2


135 
	$u∂ug_födLibøry
(*
lib
, 
UEº‹Code
 *
°©us
) {

136 
öt32_t
 
libE¡
;

137 *
ªt
 = 
NULL
;

138 if(
	`U_FAILURE
(*
°©us
)) {

139  
NULL
;

141 
libE¡
 = 
	`£¨chF‹Libøry
(
lib
);

142 if(
libE¡
!=-1) {

143 
ªt
 = 
libøryLi°
[
libE¡
].
«me
;

145 *
°©us
 = 
U_MISSING_RESOURCE_ERROR
;

147  
ªt
;

148 
	}
}

150 
U_INTERNAL
 * 
U_EXPORT2


151 
	$u∂ug_›íLibøry
(c⁄° *
libName
, 
UEº‹Code
 *
°©us
) {

152 
öt32_t
 
libE¡ry
 = -1;

153 *
lib
 = 
NULL
;

155 if(
	`U_FAILURE
(*
°©us
)Ë 
NULL
;

157 
libE¡ry
 = 
	`£¨chF‹LibøryName
(
libName
);

158 if(
libE¡ry
 == -1) {

159 
libE¡ry
 = 
libøryCou¡
++;

160 if(
libøryCou¡
 >
libøryMax
) {

162 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

163 #i‡
UPLUG_TRACE


164 
	`DBG
((
°dîr
, "u∂ug_›íLibøry(Ë- ouào‡libøry slŸ†(max %d)\n", 
libøryMax
));

166  
NULL
;

170 
libøryLi°
[
libE¡ry
].
lib
 = 
	`u¥v_dl_›í
(
libName
, 
°©us
);

171 #i‡
UPLUG_TRACE


172 
	`DBG
((
°dîr
, "u∂ug_›íLibøry(%s,%sËlibE¡ry %d,Üib %p\n", 
libName
, 
	`u_îr‹Name
(*
°©us
), 
libE¡ry
, 
lib
));

175 if(
libøryLi°
[
libE¡ry
].
lib
 =
NULL
 || 
	`U_FAILURE
(*
°©us
)) {

177 
libøryLi°
[
libE¡ry
].
lib
 = 
NULL
;

178 
libøryLi°
[
libE¡ry
].
«me
[0] = 0;

179 #i‡
UPLUG_TRACE


180 
	`DBG
((
°dîr
, "u∂ug_›íLibøry(%s,%sËlibE¡ry %d,Üib %p\n", 
libName
, 
	`u_îr‹Name
(*
°©us
), 
libE¡ry
, 
lib
));

183 
libøryCou¡
--;

186 
	`u¥v_°∫˝y
(
libøryLi°
[
libE¡ry
].
«me
,
libName
,
UPLUG_NAME_MAX
);

187 
libøryLi°
[
libE¡ry
].
ªf
=1;

188 
lib
 = 
libøryLi°
[
libE¡ry
].lib;

192 
lib
 = 
libøryLi°
[
libE¡ry
].lib;

193 
libøryLi°
[
libE¡ry
].
ªf
++;

195  
lib
;

196 
	}
}

198 
U_INTERNAL
 
U_EXPORT2


199 
	$u∂ug_˛o£Libøry
(*
lib
, 
UEº‹Code
 *
°©us
) {

200 
öt32_t
 
i
;

202 #i‡
UPLUG_TRACE


203 
	`DBG
((
°dîr
, "u∂ug_˛o£Libøry(%p,%sËli° %p\n", 
lib
, 
	`u_îr‹Name
(*
°©us
), (*)
libøryLi°
));

205 if(
	`U_FAILURE
(*
°©us
)) ;

207 
i
=0;i<
libøryCou¡
;i++) {

208 if(
lib
==
libøryLi°
[
i
].lib) {

209 if(--(
libøryLi°
[
i
].
ªf
) == 0) {

210 
	`u¥v_dl_˛o£
(
libøryLi°
[
i
].
lib
, 
°©us
);

211 
libøryCou¡
 = 
	`u∂ug_ªmoveE¡ryAt
(
libøryLi°
,ÜibøryCou¡, (*libøryLi°), 
i
);

216 *
°©us
 = 
U_INTERNAL_PROGRAM_ERROR
;

217 
	}
}

221 
UPlugD©a
 
	g∂ugöLi°
[
UPLUG_PLUGIN_INITIAL_COUNT
];

222 
öt32_t
 
	g∂ugöCou¡
 = 0;

227 
öt32_t
 
	$u∂ug_∂ugöNumbî
(
UPlugD©a
* 
d
) {

228 
UPlugD©a
 *
∑°Plug
 = &
∂ugöLi°
[
∂ugöCou¡
];

229 if(
d
<=
∂ugöLi°
) {

231 } if(
d
>=
∑°Plug
) {

232  
∂ugöCou¡
;

234  (
d
-
∂ugöLi°
)/(pluginList[0]);

236 
	}
}

239 
U_CAPI
 
UPlugD©a
 * 
U_EXPORT2


240 
	$u∂ug_√xtPlug
(
UPlugD©a
 *
¥i‹
) {

241 if(
¥i‹
==
NULL
) {

242  
∂ugöLi°
;

244 
UPlugD©a
 *
√xtPlug
 = &
¥i‹
[1];

245 
UPlugD©a
 *
∑°Plug
 = &
∂ugöLi°
[
∂ugöCou¡
];

247 if(
√xtPlug
>=
∑°Plug
) {

248  
NULL
;

250  
√xtPlug
;

253 
	}
}

260 
	$u∂ug_ˇŒPlug
(
UPlugD©a
 *
∂ug
, 
UPlugRós⁄
 
ªas⁄
, 
UEº‹Code
 *
°©us
) {

261 
UPlugTokíRëu∫
 
tokí
;

262 if(
∂ug
==
NULL
||
	`U_FAILURE
(*
°©us
)) {

265 
tokí
 = (*(
∂ug
->
íåypoöt
))’lug, 
ªas⁄
, 
°©us
);

266 if(
tokí
!=
UPLUG_TOKEN
) {

267 *
°©us
 = 
U_INTERNAL_PROGRAM_ERROR
;

269 
	}
}

272 
	$u∂ug_u∆ﬂdPlug
(
UPlugD©a
 *
∂ug
, 
UEº‹Code
 *
°©us
) {

273 if(
∂ug
->
awaôögLﬂd
) {

274 *
°©us
 = 
U_INTERNAL_PROGRAM_ERROR
;

277 if(
	`U_SUCCESS
(
∂ug
->
∂ugöSètus
)) {

279 
	`u∂ug_ˇŒPlug
(
∂ug
, 
UPLUG_REASON_UNLOAD
, 
°©us
);

281 
	}
}

283 
	$u∂ug_quîyPlug
(
UPlugD©a
 *
∂ug
, 
UEº‹Code
 *
°©us
) {

284 if(!
∂ug
->
awaôögLﬂd
 || !’lug->
Àvñ
 =
UPLUG_LEVEL_UNKNOWN
) ) {

285 *
°©us
 = 
U_INTERNAL_PROGRAM_ERROR
;

288 
∂ug
->
Àvñ
 = 
UPLUG_LEVEL_INVALID
;

289 
	`u∂ug_ˇŒPlug
(
∂ug
, 
UPLUG_REASON_QUERY
, 
°©us
);

290 if(
	`U_SUCCESS
(*
°©us
)) {

291 if(
∂ug
->
Àvñ
 =
UPLUG_LEVEL_INVALID
) {

292 
∂ug
->
∂ugöSètus
 = 
U_PLUGIN_DIDNT_SET_LEVEL
;

293 
∂ug
->
awaôögLﬂd
 = 
FALSE
;

296 
∂ug
->
∂ugöSètus
 = 
U_INTERNAL_PROGRAM_ERROR
;

297 
∂ug
->
awaôögLﬂd
 = 
FALSE
;

299 
	}
}

302 
	$u∂ug_lﬂdPlug
(
UPlugD©a
 *
∂ug
, 
UEº‹Code
 *
°©us
) {

303 if(!
∂ug
->
awaôögLﬂd
 || (∂ug->
Àvñ
 < 
UPLUG_LEVEL_LOW
) ) {

304 *
°©us
 = 
U_INTERNAL_PROGRAM_ERROR
;

307 
	`u∂ug_ˇŒPlug
(
∂ug
, 
UPLUG_REASON_LOAD
, 
°©us
);

308 
∂ug
->
awaôögLﬂd
 = 
FALSE
;

309 if(!
	`U_SUCCESS
(*
°©us
)) {

310 
∂ug
->
∂ugöSètus
 = 
U_INTERNAL_PROGRAM_ERROR
;

312 
	}
}

314 
UPlugD©a
 *
	$u∂ug_ÆloˇãEm±yPlug
(
UEº‹Code
 *
°©us
)

316 
UPlugD©a
 *
∂ug
 = 
NULL
;

318 if(
	`U_FAILURE
(*
°©us
)) {

319  
NULL
;

322 if(
∂ugöCou¡
 =
UPLUG_PLUGIN_INITIAL_COUNT
) {

323 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

324  
NULL
;

327 
∂ug
 = &
∂ugöLi°
[
∂ugöCou¡
++];

329 
∂ug
->
tokí
 = 
UPLUG_TOKEN
;

330 
∂ug
->
°ru˘Size
 = (
UPlugD©a
);

331 
∂ug
->
«me
[0]=0;

332 
∂ug
->
Àvñ
 = 
UPLUG_LEVEL_UNKNOWN
;

333 
∂ug
->
awaôögLﬂd
 = 
TRUE
;

334 
∂ug
->
d⁄tU∆ﬂd
 = 
FALSE
;

335 
∂ug
->
∂ugöSètus
 = 
U_ZERO_ERROR
;

336 
∂ug
->
libName
[0] = 0;

337 
∂ug
->
c⁄fig
[0]=0;

338 
∂ug
->
sym
[0]=0;

339 
∂ug
->
lib
=
NULL
;

340 
∂ug
->
íåypoöt
=
NULL
;

343  
∂ug
;

344 
	}
}

346 
UPlugD©a
 *
	$u∂ug_ÆloˇãPlug
(
UPlugE¡rypoöt
 *
íåypoöt
, c⁄° *
c⁄fig
, *
lib
, c⁄° *
symName
,

347 
UEº‹Code
 *
°©us
) {

348 
UPlugD©a
 *
∂ug
;

350 if(
	`U_FAILURE
(*
°©us
)) {

351  
NULL
;

354 
∂ug
 = 
	`u∂ug_ÆloˇãEm±yPlug
(
°©us
);

355 if(
c⁄fig
!=
NULL
) {

356 
	`u¥v_°∫˝y
(
∂ug
->
c⁄fig
, c⁄fig, 
UPLUG_NAME_MAX
);

358 
∂ug
->
c⁄fig
[0] = 0;

361 if(
symName
!=
NULL
) {

362 
	`u¥v_°∫˝y
(
∂ug
->
sym
, 
symName
, 
UPLUG_NAME_MAX
);

364 
∂ug
->
sym
[0] = 0;

367 
∂ug
->
íåypoöt
 =Éntrypoint;

368 
∂ug
->
lib
 =Üib;

369 
	`u∂ug_quîyPlug
(
∂ug
, 
°©us
);

371  
∂ug
;

372 
	}
}

374 
	$u∂ug_dóŒoˇãPlug
(
UPlugD©a
 *
∂ug
, 
UEº‹Code
 *
°©us
) {

375 
UEº‹Code
 
subSètus
 = 
U_ZERO_ERROR
;

376 if(!
∂ug
->
d⁄tU∆ﬂd
) {

377 #i‡
U_ENABLE_DYLOAD


378 
	`u∂ug_˛o£Libøry
(
∂ug
->
lib
, &
subSètus
);

381 
∂ug
->
lib
 = 
NULL
;

382 if(
	`U_SUCCESS
(*
°©us
Ë&& 
	`U_FAILURE
(
subSètus
)) {

383 *
°©us
 = 
subSètus
;

386 if(
	`U_SUCCESS
(*
°©us
)) {

388 
∂ugöCou¡
 = 
	`u∂ug_ªmoveE¡ryAt
(
∂ugöLi°
,ÖlugöCou¡, (
∂ug
[0]), 
	`u∂ug_∂ugöNumbî
(plug));

391 
∂ug
->
awaôögLﬂd
=
FALSE
;

392 
∂ug
->
íåypoöt
=0;

393 
∂ug
->
d⁄tU∆ﬂd
=
TRUE
;

395 
	}
}

397 
	$u∂ug_doU∆ﬂdPlug
(
UPlugD©a
 *
∂ugToRemove
, 
UEº‹Code
 *
°©us
) {

398 if(
∂ugToRemove
 !
NULL
) {

399 
	`u∂ug_u∆ﬂdPlug
(
∂ugToRemove
, 
°©us
);

400 
	`u∂ug_dóŒoˇãPlug
(
∂ugToRemove
, 
°©us
);

402 
	}
}

404 
U_CAPI
 
U_EXPORT2


405 
	$u∂ug_ªmovePlug
(
UPlugD©a
 *
∂ug
, 
UEº‹Code
 *
°©us
) {

406 
UPlugD©a
 *
curs‹
 = 
NULL
;

407 
UPlugD©a
 *
∂ugToRemove
 = 
NULL
;

408 if(
	`U_FAILURE
(*
°©us
)) ;

410 
curs‹
=
∂ugöLi°
;curs‹!=
NULL
;) {

411 if(
curs‹
==
∂ug
) {

412 
∂ugToRemove
 = 
∂ug
;

413 
curs‹
=
NULL
;

415 
curs‹
 = 
	`u∂ug_√xtPlug
(cursor);

419 
	`u∂ug_doU∆ﬂdPlug
(
∂ugToRemove
, 
°©us
);

420 
	}
}

425 
U_CAPI
 
U_EXPORT2


426 
	$u∂ug_£tPlugNoU∆ﬂd
(
UPlugD©a
 *
d©a
, 
UBoﬁ
 
d⁄tU∆ﬂd
)

428 
d©a
->
d⁄tU∆ﬂd
 = dontUnload;

429 
	}
}

432 
U_CAPI
 
U_EXPORT2


433 
	$u∂ug_£tPlugLevñ
(
UPlugD©a
 *
d©a
, 
UPlugLevñ
 
Àvñ
) {

434 
d©a
->
Àvñ
 =Üevel;

435 
	}
}

438 
U_CAPI
 
UPlugLevñ
 
U_EXPORT2


439 
	$u∂ug_gëPlugLevñ
(
UPlugD©a
 *
d©a
) {

440  
d©a
->
Àvñ
;

441 
	}
}

444 
U_CAPI
 
U_EXPORT2


445 
	$u∂ug_£tPlugName
(
UPlugD©a
 *
d©a
, c⁄° *
«me
) {

446 
	`u¥v_°∫˝y
(
d©a
->
«me
,Çame, 
UPLUG_NAME_MAX
);

447 
	}
}

450 
U_CAPI
 c⁄° * 
U_EXPORT2


451 
	$u∂ug_gëPlugName
(
UPlugD©a
 *
d©a
) {

452  
d©a
->
«me
;

453 
	}
}

456 
U_CAPI
 c⁄° * 
U_EXPORT2


457 
	$u∂ug_gëSymbﬁName
(
UPlugD©a
 *
d©a
) {

458  
d©a
->
sym
;

459 
	}
}

461 
U_CAPI
 c⁄° * 
U_EXPORT2


462 
	$u∂ug_gëLibøryName
(
UPlugD©a
 *
d©a
, 
UEº‹Code
 *
°©us
) {

463 if(
d©a
->
libName
[0]) {

464  
d©a
->
libName
;

466 #i‡
U_ENABLE_DYLOAD


467  
	`u∂ug_födLibøry
(
d©a
->
lib
, 
°©us
);

469  
NULL
;

472 
	}
}

474 
U_CAPI
 * 
U_EXPORT2


475 
	$u∂ug_gëLibøry
(
UPlugD©a
 *
d©a
) {

476  
d©a
->
lib
;

477 
	}
}

479 
U_CAPI
 * 
U_EXPORT2


480 
	$u∂ug_gëC⁄ãxt
(
UPlugD©a
 *
d©a
) {

481  
d©a
->
c⁄ãxt
;

482 
	}
}

485 
U_CAPI
 
U_EXPORT2


486 
	$u∂ug_£tC⁄ãxt
(
UPlugD©a
 *
d©a
, *
c⁄ãxt
) {

487 
d©a
->
c⁄ãxt
 = context;

488 
	}
}

490 
U_CAPI
 c⁄° * 
U_EXPORT2


491 
	$u∂ug_gëC⁄figuøti⁄
(
UPlugD©a
 *
d©a
) {

492  
d©a
->
c⁄fig
;

493 
	}
}

495 
U_INTERNAL
 
UPlugD©a
* 
U_EXPORT2


496 
	$u∂ug_gëPlugI¡î«l
(
öt32_t
 
n
) {

497 if(
n
 <0 ||Ç >
∂ugöCou¡
) {

498  
NULL
;

500  &(
∂ugöLi°
[
n
]);

502 
	}
}

505 
U_CAPI
 
UEº‹Code
 
U_EXPORT2


506 
	$u∂ug_gëPlugLﬂdSètus
(
UPlugD©a
 *
∂ug
) {

507  
∂ug
->
∂ugöSètus
;

508 
	}
}

516 
UPlugD©a
* 
	$u∂ug_öôPlugFromE¡rypoötAndLibøry
(
UPlugE¡rypoöt
 *
íåypoöt
, c⁄° *
c⁄fig
, *
lib
, c⁄° *
sym
,

517 
UEº‹Code
 *
°©us
) {

518 
UPlugD©a
 *
∂ug
 = 
NULL
;

520 
∂ug
 = 
	`u∂ug_ÆloˇãPlug
(
íåypoöt
, 
c⁄fig
, 
lib
, 
sym
, 
°©us
);

522 if(
	`U_SUCCESS
(*
°©us
)) {

523  
∂ug
;

525 
	`u∂ug_dóŒoˇãPlug
(
∂ug
, 
°©us
);

526  
NULL
;

528 
	}
}

530 
U_CAPI
 
UPlugD©a
* 
U_EXPORT2


531 
	$u∂ug_lﬂdPlugFromE¡rypoöt
(
UPlugE¡rypoöt
 *
íåypoöt
, c⁄° *
c⁄fig
, 
UEº‹Code
 *
°©us
) {

532 
UPlugD©a
* 
∂ug
 = 
	`u∂ug_öôPlugFromE¡rypoötAndLibøry
(
íåypoöt
, 
c⁄fig
, 
NULL
, NULL, 
°©us
);

533 
	`u∂ug_lﬂdPlug
(
∂ug
, 
°©us
);

534  
∂ug
;

535 
	}
}

538 
UPlugD©a
*

539 
	$u∂ug_öôEº‹Plug
(c⁄° *
libName
, c⁄° *
sym
, c⁄° *
c⁄fig
, c⁄° *
«meOrEº‹
, 
UEº‹Code
 
lﬂdSètus
, UEº‹Codê*
°©us
)

541 
UPlugD©a
 *
∂ug
 = 
	`u∂ug_ÆloˇãEm±yPlug
(
°©us
);

542 if(
	`U_FAILURE
(*
°©us
)Ë 
NULL
;

544 
∂ug
->
∂ugöSètus
 = 
lﬂdSètus
;

545 
∂ug
->
awaôögLﬂd
 = 
FALSE
;

546 
∂ug
->
d⁄tU∆ﬂd
 = 
TRUE
;

548 if(
sym
!=
NULL
) {

549 
	`u¥v_°∫˝y
(
∂ug
->
sym
, sym, 
UPLUG_NAME_MAX
);

552 if(
libName
!=
NULL
) {

553 
	`u¥v_°∫˝y
(
∂ug
->
libName
,ÜibName, 
UPLUG_NAME_MAX
);

556 if(
«meOrEº‹
!=
NULL
) {

557 
	`u¥v_°∫˝y
(
∂ug
->
«me
, 
«meOrEº‹
, 
UPLUG_NAME_MAX
);

560 if(
c⁄fig
!=
NULL
) {

561 
	`u¥v_°∫˝y
(
∂ug
->
c⁄fig
, c⁄fig, 
UPLUG_NAME_MAX
);

564  
∂ug
;

565 
	}
}

571 #i‡
U_ENABLE_DYLOAD


573 
UPlugD©a
*

574 
	$u∂ug_öôPlugFromLibøry
(c⁄° *
libName
, c⁄° *
sym
, c⁄° *
c⁄fig
, 
UEº‹Code
 *
°©us
) {

575 *
lib
 = 
NULL
;

576 
UPlugD©a
 *
∂ug
 = 
NULL
;

577 if(
	`U_FAILURE
(*
°©us
)Ë{  
NULL
; }

578 
lib
 = 
	`u∂ug_›íLibøry
(
libName
, 
°©us
);

579 if(
lib
!=
NULL
 && 
	`U_SUCCESS
(*
°©us
)) {

580 
UPlugE¡rypoöt
 *
íåypoöt
 = 
NULL
;

585 
íåypoöt
 = (
UPlugE¡rypoöt
*)
	`u¥v_dl_sym
(
lib
, 
sym
, 
°©us
);

587 if(
íåypoöt
!=
NULL
&&
	`U_SUCCESS
(*
°©us
)) {

588 
∂ug
 = 
	`u∂ug_öôPlugFromE¡rypoötAndLibøry
(
íåypoöt
, 
c⁄fig
, 
lib
, 
sym
, 
°©us
);

589 if(
∂ug
!=
NULL
&&
	`U_SUCCESS
(*
°©us
)) {

590 
∂ug
->
lib
 =Üib;

591 
lib
 = 
NULL
;

594 
UEº‹Code
 
subSètus
 = 
U_ZERO_ERROR
;

595 
∂ug
 = 
	`u∂ug_öôEº‹Plug
(
libName
,
sym
,
c⁄fig
,"ERROR: CouldÇŸÜﬂdÉ¡rypoöt",(
lib
==
NULL
)?
U_MISSING_RESOURCE_ERROR
:*
°©us
,&
subSètus
);

597 if(
lib
!=
NULL
) {

598 
UEº‹Code
 
subSètus
 = 
U_ZERO_ERROR
;

599 
	`u∂ug_˛o£Libøry
(
lib
, &
subSètus
);

602 
UEº‹Code
 
subSètus
 = 
U_ZERO_ERROR
;

603 
∂ug
 = 
	`u∂ug_öôEº‹Plug
(
libName
,
sym
,
c⁄fig
,"ERROR: couldÇŸÜﬂdÜibøry",(
lib
==
NULL
)?
U_MISSING_RESOURCE_ERROR
:*
°©us
,&
subSètus
);

605  
∂ug
;

606 
	}
}

608 
U_CAPI
 
UPlugD©a
* 
U_EXPORT2


609 
	$u∂ug_lﬂdPlugFromLibøry
(c⁄° *
libName
, c⁄° *
sym
, c⁄° *
c⁄fig
, 
UEº‹Code
 *
°©us
) {

610 
UPlugD©a
 *
∂ug
 = 
NULL
;

611 if(
	`U_FAILURE
(*
°©us
)Ë{  
NULL
; }

612 
∂ug
 = 
	`u∂ug_öôPlugFromLibøry
(
libName
, 
sym
, 
c⁄fig
, 
°©us
);

613 
	`u∂ug_lﬂdPlug
(
∂ug
, 
°©us
);

615  
∂ug
;

616 
	}
}

620 
U_CAPI
 
UPlugLevñ
 
U_EXPORT2
 
	$u∂ug_gëCuºítLevñ
() {

621 if(
	`cmem‹y_öU£
()) {

622  
UPLUG_LEVEL_HIGH
;

624  
UPLUG_LEVEL_LOW
;

626 
	}
}

628 
UBoﬁ
 
U_CALLCONV
 
	$u∂ug_˛ónup
()

630 
öt32_t
 
i
;

632 
UPlugD©a
 *
∂ugöToRemove
;

634 
i
=0;i<
∂ugöCou¡
;i++) {

635 
UEº‹Code
 
subSètus
 = 
U_ZERO_ERROR
;

636 
∂ugöToRemove
 = &
∂ugöLi°
[
i
];

638 
	`u∂ug_doU∆ﬂdPlug
(
∂ugöToRemove
, &
subSètus
);

641  
TRUE
;

642 
	}
}

644 
	$u∂ug_lﬂdWaôögPlugs
(
UEº‹Code
 *
°©us
) {

645 
öt32_t
 
i
;

646 
UPlugLevñ
 
cuºítLevñ
 = 
	`u∂ug_gëCuºítLevñ
();

648 if(
	`U_FAILURE
(*
°©us
)) {

651 #i‡
UPLUG_TRACE


652 
	`DBG
((
°dîr
, "u∂ug_lﬂdWaôögPlugs(ËLevñ: %d\n", 
cuºítLevñ
));

655 
i
=0;i<
∂ugöCou¡
;i++) {

656 
UEº‹Code
 
subSètus
 = 
U_ZERO_ERROR
;

657 
UPlugD©a
 *
∂ugöToLﬂd
 = &
∂ugöLi°
[
i
];

658 if(
∂ugöToLﬂd
->
awaôögLﬂd
) {

659 if(
∂ugöToLﬂd
->
Àvñ
 =
UPLUG_LEVEL_LOW
) {

660 if(
cuºítLevñ
 > 
UPLUG_LEVEL_LOW
) {

661 
∂ugöToLﬂd
->
∂ugöSètus
 = 
U_PLUGIN_TOO_HIGH
;

663 
UPlugLevñ
 
√wLevñ
;

664 
	`u∂ug_lﬂdPlug
(
∂ugöToLﬂd
, &
subSètus
);

665 
√wLevñ
 = 
	`u∂ug_gëCuºítLevñ
();

666 if(
√wLevñ
 > 
cuºítLevñ
) {

667 
∂ugöToLﬂd
->
∂ugöSètus
 = 
U_PLUGIN_CHANGED_LEVEL_WARNING
;

668 
cuºítLevñ
 = 
√wLevñ
;

671 
∂ugöToLﬂd
->
awaôögLﬂd
 = 
FALSE
;

675 
cuºítLevñ
 = 
	`u∂ug_gëCuºítLevñ
();

677 
i
=0;i<
∂ugöCou¡
;i++) {

678 
UEº‹Code
 
subSètus
 = 
U_ZERO_ERROR
;

679 
UPlugD©a
 *
∂ugöToLﬂd
 = &
∂ugöLi°
[
i
];

681 if(
∂ugöToLﬂd
->
awaôögLﬂd
) {

682 if(
∂ugöToLﬂd
->
Àvñ
 =
UPLUG_LEVEL_INVALID
) {

683 
∂ugöToLﬂd
->
∂ugöSètus
 = 
U_PLUGIN_DIDNT_SET_LEVEL
;

684 } if(
∂ugöToLﬂd
->
Àvñ
 =
UPLUG_LEVEL_UNKNOWN
) {

685 
∂ugöToLﬂd
->
∂ugöSètus
 = 
U_INTERNAL_PROGRAM_ERROR
;

687 
	`u∂ug_lﬂdPlug
(
∂ugöToLﬂd
, &
subSètus
);

689 
∂ugöToLﬂd
->
awaôögLﬂd
 = 
FALSE
;

693 #i‡
UPLUG_TRACE


694 
	`DBG
((
°dîr
, " D⁄êLﬂdög Plugs. Levñ: %d\n", (
öt32_t
)
	`u∂ug_gëCuºítLevñ
()));

696 
	}
}

698 #i‡
U_ENABLE_DYLOAD


700 
	g∂ugö_fûe
[2048] = "";

703 
U_INTERNAL
 c⁄° * 
U_EXPORT2


704 
	$u∂ug_gëPlugöFûe
() {

705 #i‡
U_ENABLE_DYLOAD


706  
∂ugö_fûe
;

708  
NULL
;

710 
	}
}

713 
U_CAPI
 
U_EXPORT2


714 
	$u∂ug_öô
(
UEº‹Code
 *
°©us
) {

715 #i‡!
U_ENABLE_DYLOAD


716 ()
°©us
;

718 c⁄° *
∂ugö_dú
;

720 if(
	`U_FAILURE
(*
°©us
)) ;

721 
∂ugö_dú
 = 
	`gëív
("ICU_PLUGINS");

723 #i‡
	`deföed
(
DEFAULT_ICU_PLUGINS
)

724 if(
∂ugö_dú
 =
NULL
 || !*plugin_dir) {

725 
∂ugö_dú
 = 
DEFAULT_ICU_PLUGINS
;

729 #i‡
UPLUG_TRACE


730 
	`DBG
((
°dîr
, "ICU_PLUGINS=%s\n", 
∂ugö_dú
));

733 if(
∂ugö_dú
 !
NULL
 && *plugin_dir) {

734 
FILE
 *
f
;

737 
	`u¥v_°∫˝y
(
∂ugö_fûe
, 
∂ugö_dú
, 2047);

738 
	`u¥v_°∫ˇt
(
∂ugö_fûe
, 
U_FILE_SEP_STRING
,2047);

739 
	`u¥v_°∫ˇt
(
∂ugö_fûe
, "icuplugins",2047);

740 
	`u¥v_°∫ˇt
(
∂ugö_fûe
, 
U_ICU_VERSION_SHORT
 ,2047);

741 
	`u¥v_°∫ˇt
(
∂ugö_fûe
, ".txt" ,2047);

743 #i‡
UPLUG_TRACE


744 
	`DBG
((
°dîr
, "∂ugöfûe%s\n", 
∂ugö_fûe
));

747 
f
 = 
	`f›í
(
∂ugö_fûe
, "r");

749 if(
f
 !
NULL
) {

750 
löebuf
[1024];

751 *
p
, *
libName
=
NULL
, *
symName
=NULL, *
c⁄fig
=NULL;

752 
öt32_t
 
löe
 = 0;

755 
	`fgës
(
löebuf
,1023,
f
)) {

756 
löe
++;

758 if(!*
löebuf
 || *linebuf=='#') {

761 
p
 = 
löebuf
;

762 *
p
&&
	`is•a˚
(*p))

763 
p
++;

764 if(!*
p
 || *p=='#') ;

765 
libName
 = 
p
;

766 *
p
&&!
	`is•a˚
(*p)) {

767 
p
++;

769 if(!*
p
 || *p=='#') ;

770 *
p
=0;

771 
p
++;

772 *
p
&&
	`is•a˚
(*p)) {

773 
p
++;

775 if(!*
p
||*p=='#') ;

776 
symName
 = 
p
;

777 *
p
&&!
	`is•a˚
(*p)) {

778 
p
++;

781 if(*
p
) {

782 *
p
=0;

783 ++
p
;

784 *
p
&&
	`is•a˚
(*p)) {

785 
p
++;

787 if(*
p
) {

788 
c⁄fig
 = 
p
;

793 if(
c⁄fig
!=
NULL
&&*config!=0) {

794 
p
 = 
c⁄fig
+
	`°æí
(config);

795 
p
>
c⁄fig
&&
	`is•a˚
(*(--p))) {

796 *
p
=0;

802 
UEº‹Code
 
subSètus
 = 
U_ZERO_ERROR
;

803 
UPlugD©a
 *
∂ug
 = 
	`u∂ug_öôPlugFromLibøry
(
libName
, 
symName
, 
c⁄fig
, &
subSètus
);

804 if(
	`U_FAILURE
(
subSètus
Ë&& 
	`U_SUCCESS
(*
°©us
)) {

805 *
°©us
 = 
subSètus
;

807 #i‡
UPLUG_TRACE


808 
	`DBG
((
°dîr
, "PLUGINÜibName=[%s], sym=[%s], c⁄fig=[%s]\n", 
libName
, 
symName
, 
c⁄fig
));

809 
	`DBG
((
°dîr
, " -> %p, %s\n", (*)
∂ug
, 
	`u_îr‹Name
(
subSètus
)));

811 ()
∂ug
;

817 #i‡
UPLUG_TRACE


818 
	`DBG
((
°dîr
, "C™'à›íÖlugö fûê%s\n", 
∂ugö_fûe
));

822 
	`u∂ug_lﬂdWaôögPlugs
(
°©us
);

824 
	`u˛n_ªgi°îCÀ™up
(
UCLN_UPLUG
, 
u∂ug_˛ónup
);

825 
	}
}

	@icuplugimp.h

19 #i‚de‡
ICUPLUGIMP_H


20 
	#ICUPLUGIMP_H


	)

22 
	~"unicode/icu∂ug.h
"

35 
U_INTERNAL
 * 
U_EXPORT2


36 
u∂ug_›íLibøry
(c⁄° *
libName
, 
UEº‹Code
 *
°©us
);

44 
U_INTERNAL
 
U_EXPORT2


45 
u∂ug_˛o£Libøry
(*
lib
, 
UEº‹Code
 *
°©us
);

54 
U_INTERNAL
 * 
U_EXPORT2


55 
u∂ug_födLibøry
(*
lib
, 
UEº‹Code
 *
°©us
);

68 
U_INTERNAL
 
U_EXPORT2


69 
u∂ug_öô
(
UEº‹Code
 *
°©us
);

75 
U_INTERNAL
 
UPlugD©a
* 
U_EXPORT2


76 
u∂ug_gëPlugI¡î«l
(
öt32_t
 
n
);

82 
U_INTERNAL
 c⁄° * 
U_EXPORT2


83 
u∂ug_gëPlugöFûe
();

	@localsvc.h

8 #i‚de‡
LOCALSVC_H


9 
	#LOCALSVC_H


	)

11 
	~"unicode/uty≥s.h
"

13 #i‡
U_LOCAL_SERVICE_HOOK


22 
U_CAPI
 * 
u¥v_svc_hook
(c⁄° *
wh©
, 
UEº‹Code
 *
°©us
);

	@locavailable.cpp

20 
	~"unicode/uty≥s.h
"

21 
	~"unicode/locid.h
"

22 
	~"unicode/uloc.h
"

23 
	~"unicode/uªs.h
"

24 
	~"cmem‹y.h
"

25 
	~"u˛n_cmn.h
"

26 
	~"umuãx.h
"

27 
	~"uªsimp.h
"

31 
U_NAMESPACE_QUALIFIER
 
LoˇÀ
* 
	gavaûabÀLoˇÀLi°
 = 
NULL
;

32 
öt32_t
 
	gavaûabÀLoˇÀLi°Cou¡
;

34 
U_CDECL_BEGIN


36 
UBoﬁ
 
U_CALLCONV
 
	$loˇÀ_avaûabÀ_˛ónup
()

38 
U_NAMESPACE_USE


40 i‡(
avaûabÀLoˇÀLi°
) {

41 
dñëe
 []
avaûabÀLoˇÀLi°
;

42 
avaûabÀLoˇÀLi°
 = 
NULL
;

44 
avaûabÀLoˇÀLi°Cou¡
 = 0;

46  
TRUE
;

47 
	}
}

49 
U_CDECL_END


51 
U_NAMESPACE_BEGIN


53 c⁄° 
LoˇÀ
* 
U_EXPORT2


54 
	gLoˇÀ
::
	$gëAvaûabÀLoˇÀs
(
öt32_t
& 
cou¡
)

57 
UBoﬁ
 
√edInô
;

58 
	`UMTX_CHECK
(
NULL
, 
avaûabÀLoˇÀLi°
 =NULL, 
√edInô
);

60 i‡(
√edInô
) {

61 
öt32_t
 
locCou¡
 = 
	`uloc_cou¡AvaûabÀ
();

62 
LoˇÀ
 *
√wLoˇÀLi°
 = 0;

63 if(
locCou¡
) {

64 
√wLoˇÀLi°
 = 
√w
 
LoˇÀ
[
locCou¡
];

66 i‡(
√wLoˇÀLi°
 =
NULL
) {

67 
cou¡
 = 0;

68  
NULL
;

71 
cou¡
 = 
locCou¡
;

73 --
locCou¡
 >= 0) {

74 
√wLoˇÀLi°
[
locCou¡
].
	`£tFromPOSIXID
(
	`uloc_gëAvaûabÀ
(locCount));

77 
	`umtx_lock
(
NULL
);

78 if(
avaûabÀLoˇÀLi°
 == 0) {

79 
avaûabÀLoˇÀLi°Cou¡
 = 
cou¡
;

80 
avaûabÀLoˇÀLi°
 = 
√wLoˇÀLi°
;

81 
√wLoˇÀLi°
 = 
NULL
;

82 
	`u˛n_comm⁄_ªgi°îCÀ™up
(
UCLN_COMMON_LOCALE_AVAILABLE
, 
loˇÀ_avaûabÀ_˛ónup
);

84 
	`umtx_u∆ock
(
NULL
);

85 
dñëe
 []
√wLoˇÀLi°
;

87 
cou¡
 = 
avaûabÀLoˇÀLi°Cou¡
;

88  
avaûabÀLoˇÀLi°
;

89 
	}
}

92 
U_NAMESPACE_END


96 
U_NAMESPACE_USE


102 c⁄° 
	g_kIndexLoˇÀName
[] = "res_index";

103 c⁄° 
	g_kIndexTag
[] = "InstalledLocales";

105 ** 
	g_ö°ÆÀdLoˇÀs
 = 
NULL
;

106 
öt32_t
 
	g_ö°ÆÀdLoˇÀsCou¡
 = 0;

110 
UBoﬁ
 
U_CALLCONV
 
	$uloc_˛ónup
() {

111 ** 
ãmp
;

113 i‡(
_ö°ÆÀdLoˇÀs
) {

114 
ãmp
 = 
_ö°ÆÀdLoˇÀs
;

115 
_ö°ÆÀdLoˇÀs
 = 
NULL
;

117 
_ö°ÆÀdLoˇÀsCou¡
 = 0;

119 
	`u¥v_‰ì
(
ãmp
);

121  
TRUE
;

122 
	}
}

124 
	$_lﬂd_ö°ÆÀdLoˇÀs
()

126 
UBoﬁ
 
loˇÀsLﬂded
;

128 
	`UMTX_CHECK
(
NULL
, 
_ö°ÆÀdLoˇÀs
 !NULL, 
loˇÀsLﬂded
);

130 i‡(
loˇÀsLﬂded
 =
FALSE
) {

131 
UResour˚BundÀ
 *
ödexLoˇÀ
 = 
NULL
;

132 
UResour˚BundÀ
 
ö°ÆÀd
;

133 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

134 ** 
ãmp
;

135 
öt32_t
 
i
 = 0;

136 
öt32_t
 
loˇÀCou¡
;

138 
	`uªs_öôSèckObje˘
(&
ö°ÆÀd
);

139 
ödexLoˇÀ
 = 
	`uªs_›íDúe˘
(
NULL
, 
_kIndexLoˇÀName
, &
°©us
);

140 
	`uªs_gëByKey
(
ödexLoˇÀ
, 
_kIndexTag
, &
ö°ÆÀd
, &
°©us
);

142 if(
	`U_SUCCESS
(
°©us
)) {

143 
loˇÀCou¡
 = 
	`uªs_gëSize
(&
ö°ÆÀd
);

144 
ãmp
 = (**Ë
	`u¥v_mÆloc
((*Ë* (
loˇÀCou¡
+1));

146 i‡(
ãmp
 !
NULL
) {

147 
	`uªs_ª£tIãøt‹
(&
ö°ÆÀd
);

148 
	`uªs_hasNext
(&
ö°ÆÀd
)) {

149 
	`uªs_gëNextSåög
(&
ö°ÆÀd
, 
NULL
, (c⁄° **)&
ãmp
[
i
++], &
°©us
);

151 
ãmp
[
i
] = 
NULL
;

153 
	`umtx_lock
(
NULL
);

154 i‡(
_ö°ÆÀdLoˇÀs
 =
NULL
)

156 
_ö°ÆÀdLoˇÀsCou¡
 = 
loˇÀCou¡
;

157 
_ö°ÆÀdLoˇÀs
 = 
ãmp
;

158 
ãmp
 = 
NULL
;

159 
	`u˛n_comm⁄_ªgi°îCÀ™up
(
UCLN_COMMON_ULOC
, 
uloc_˛ónup
);

161 
	`umtx_u∆ock
(
NULL
);

163 
	`u¥v_‰ì
(
ãmp
);

166 
	`uªs_˛o£
(&
ö°ÆÀd
);

167 
	`uªs_˛o£
(
ödexLoˇÀ
);

169 
	}
}

171 
U_CAPI
 c⁄° * 
U_EXPORT2


172 
	$uloc_gëAvaûabÀ
(
öt32_t
 
off£t
)

175 
	`_lﬂd_ö°ÆÀdLoˇÀs
();

177 i‡(
off£t
 > 
_ö°ÆÀdLoˇÀsCou¡
)

178  
NULL
;

179  
_ö°ÆÀdLoˇÀs
[
off£t
];

180 
	}
}

182 
U_CAPI
 
öt32_t
 
U_EXPORT2


183 
	$uloc_cou¡AvaûabÀ
()

185 
	`_lﬂd_ö°ÆÀdLoˇÀs
();

186  
_ö°ÆÀdLoˇÀsCou¡
;

187 
	}
}

	@locbased.cpp

11 
	~"locba£d.h
"

12 
	~"c°rög.h
"

14 
U_NAMESPACE_BEGIN


16 
LoˇÀ
 
	gLoˇÀBa£d
::
	$gëLoˇÀ
(
ULocD©aLoˇÀTy≥
 
ty≥
, 
UEº‹Code
& 
°©us
) const {

17 c⁄° * 
id
 = 
	`gëLoˇÀID
(
ty≥
, 
°©us
);

18  
	`LoˇÀ
((
id
 != 0) ? id : "");

19 
	}
}

21 c⁄° * 
	gLoˇÀBa£d
::
	$gëLoˇÀID
(
ULocD©aLoˇÀTy≥
 
ty≥
, 
UEº‹Code
& 
°©us
) const {

22 i‡(
	`U_FAILURE
(
°©us
)) {

23  
NULL
;

26 
ty≥
) {

27 
ULOC_VALID_LOCALE
:

28  
vÆid
;

29 
ULOC_ACTUAL_LOCALE
:

30  
a˘uÆ
;

32 
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

33  
NULL
;

35 
	}
}

37 
	gLoˇÀBa£d
::
	$£tLoˇÀIDs
(c⁄° * 
vÆidID
, c⁄° * 
a˘uÆID
) {

38 i‡(
vÆidID
 != 0) {

39 
	`u¥v_°r˝y
(
vÆid
, 
vÆidID
);

41 i‡(
a˘uÆID
 != 0) {

42 
	`u¥v_°r˝y
(
a˘uÆ
, 
a˘uÆID
);

44 
	}
}

46 
	gU_NAMESPACE_END


	@locbased.h

11 #i‚de‡
LOCBASED_H


12 
	#LOCBASED_H


	)

14 
	~"unicode/locid.h
"

15 
	~"unicode/uobje˘.h
"

22 
	#U_LOCALE_BASED
(
v¨«me
, 
obj«me
) \

23 
LoˇÀBa£d
 
	`v¨«me
((
obj«me
).
vÆidLoˇÀ
, (obj«me).
a˘uÆLoˇÀ
);

	)

25 
U_NAMESPACE_BEGIN


34 ˛as†
	cU_COMMON_API
 
	mLoˇÀBa£d
 : 
public
 
UMem‹y
 {

36 
public
:

42 
ölöe
 
LoˇÀBa£d
(* 
vÆidAlüs
, * 
a˘uÆAlüs
);

48 
ölöe
 
LoˇÀBa£d
(c⁄° * 
vÆidAlüs
, c⁄° * 
a˘uÆAlüs
);

58 
LoˇÀ
 
	$gëLoˇÀ
(
ULocD©aLoˇÀTy≥
 
ty≥
, 
UEº‹Code
& 
°©us
) const;

68 c⁄° * 
	$gëLoˇÀID
(
ULocD©aLoˇÀTy≥
 
ty≥
, 
UEº‹Code
& 
°©us
) const;

76 
	`£tLoˇÀIDs
(c⁄° * 
vÆid
, c⁄° * 
a˘uÆ
);

78 
¥iv©e
:

80 * 
vÆid
;

82 * 
a˘uÆ
;

85 
ölöe
 
LoˇÀBa£d
::
	$LoˇÀBa£d
(* 
vÆidAlüs
, * 
a˘uÆAlüs
) :

86 
	`vÆid
(
vÆidAlüs
), 
	$a˘uÆ
(
a˘uÆAlüs
) {

87 
	}
}

89 
ölöe
 
	gLoˇÀBa£d
::
	$LoˇÀBa£d
(c⁄° * 
vÆidAlüs
,

90 c⁄° * 
a˘uÆAlüs
) :

92 
	`vÆid
((*)
vÆidAlüs
), 
	`a˘uÆ
((*)
a˘uÆAlüs
) {

93 
	}
}

95 
	gU_NAMESPACE_END


	@locdispnames.cpp

20 
	~"unicode/uty≥s.h
"

21 
	~"unicode/brkôî.h
"

22 
	~"unicode/locid.h
"

23 
	~"unicode/uloc.h
"

24 
	~"unicode/uªs.h
"

25 
	~"unicode/u°rög.h
"

26 
	~"cmem‹y.h
"

27 
	~"c°rög.h
"

28 
	~"putûimp.h
"

29 
	~"ulocimp.h
"

30 
	~"uªsimp.h
"

31 
	~"uª¶ocs.h
"

32 
	~"u°r_imp.h
"

36 
U_NAMESPACE_BEGIN


38 
	gUnicodeSåög
&

39 
	gLoˇÀ
::
	$gëDi•œyL™guage
(
UnicodeSåög
& 
di•L™g
) const

41  
this
->
	`gëDi•œyL™guage
(
	`gëDeÁu…
(), 
di•L™g
);

42 
	}
}

50 
	gUnicodeSåög
&

51 
	gLoˇÀ
::
	$gëDi•œyL™guage
(c⁄° 
LoˇÀ
 &
di•œyLoˇÀ
,

52 
UnicodeSåög
 &
ªsu…
) const {

53 
UCh¨
 *
buf„r
;

54 
UEº‹Code
 
îr‹Code
=
U_ZERO_ERROR
;

55 
öt32_t
 
Àngth
;

57 
buf„r
=
ªsu…
.
	`gëBuf„r
(
ULOC_FULLNAME_CAPACITY
);

58 if(
buf„r
==0) {

59 
ªsu…
.
	`åunˇã
(0);

60  
ªsu…
;

63 
Àngth
=
	`uloc_gëDi•œyL™guage
(
fuŒName
, 
di•œyLoˇÀ
.fullName,

64 
buf„r
, 
ªsu…
.
	`gëC≠acôy
(),

65 &
îr‹Code
);

66 
ªsu…
.
	`ªÀa£Buf„r
(
	`U_SUCCESS
(
îr‹Code
Ë? 
Àngth
 : 0);

68 if(
îr‹Code
==
U_BUFFER_OVERFLOW_ERROR
) {

69 
buf„r
=
ªsu…
.
	`gëBuf„r
(
Àngth
);

70 if(
buf„r
==0) {

71 
ªsu…
.
	`åunˇã
(0);

72  
ªsu…
;

74 
îr‹Code
=
U_ZERO_ERROR
;

75 
Àngth
=
	`uloc_gëDi•œyL™guage
(
fuŒName
, 
di•œyLoˇÀ
.fullName,

76 
buf„r
, 
ªsu…
.
	`gëC≠acôy
(),

77 &
îr‹Code
);

78 
ªsu…
.
	`ªÀa£Buf„r
(
	`U_SUCCESS
(
îr‹Code
Ë? 
Àngth
 : 0);

81  
ªsu…
;

82 
	}
}

84 
	gUnicodeSåög
&

85 
	gLoˇÀ
::
	$gëDi•œyS¸ùt
(
UnicodeSåög
& 
di•S¸ùt
) const

87  
this
->
	`gëDi•œyS¸ùt
(
	`gëDeÁu…
(), 
di•S¸ùt
);

88 
	}
}

90 
	gUnicodeSåög
&

91 
	gLoˇÀ
::
	$gëDi•œyS¸ùt
(c⁄° 
LoˇÀ
 &
di•œyLoˇÀ
,

92 
UnicodeSåög
 &
ªsu…
) const {

93 
UCh¨
 *
buf„r
;

94 
UEº‹Code
 
îr‹Code
=
U_ZERO_ERROR
;

95 
öt32_t
 
Àngth
;

97 
buf„r
=
ªsu…
.
	`gëBuf„r
(
ULOC_FULLNAME_CAPACITY
);

98 if(
buf„r
==0) {

99 
ªsu…
.
	`åunˇã
(0);

100  
ªsu…
;

103 
Àngth
=
	`uloc_gëDi•œyS¸ùt
(
fuŒName
, 
di•œyLoˇÀ
.fullName,

104 
buf„r
, 
ªsu…
.
	`gëC≠acôy
(),

105 &
îr‹Code
);

106 
ªsu…
.
	`ªÀa£Buf„r
(
	`U_SUCCESS
(
îr‹Code
Ë? 
Àngth
 : 0);

108 if(
îr‹Code
==
U_BUFFER_OVERFLOW_ERROR
) {

109 
buf„r
=
ªsu…
.
	`gëBuf„r
(
Àngth
);

110 if(
buf„r
==0) {

111 
ªsu…
.
	`åunˇã
(0);

112  
ªsu…
;

114 
îr‹Code
=
U_ZERO_ERROR
;

115 
Àngth
=
	`uloc_gëDi•œyS¸ùt
(
fuŒName
, 
di•œyLoˇÀ
.fullName,

116 
buf„r
, 
ªsu…
.
	`gëC≠acôy
(),

117 &
îr‹Code
);

118 
ªsu…
.
	`ªÀa£Buf„r
(
	`U_SUCCESS
(
îr‹Code
Ë? 
Àngth
 : 0);

121  
ªsu…
;

122 
	}
}

124 
	gUnicodeSåög
&

125 
	gLoˇÀ
::
	$gëDi•œyCou¡ry
(
UnicodeSåög
& 
di•C¡ry
) const

127  
this
->
	`gëDi•œyCou¡ry
(
	`gëDeÁu…
(), 
di•C¡ry
);

128 
	}
}

130 
	gUnicodeSåög
&

131 
	gLoˇÀ
::
	$gëDi•œyCou¡ry
(c⁄° 
LoˇÀ
 &
di•œyLoˇÀ
,

132 
UnicodeSåög
 &
ªsu…
) const {

133 
UCh¨
 *
buf„r
;

134 
UEº‹Code
 
îr‹Code
=
U_ZERO_ERROR
;

135 
öt32_t
 
Àngth
;

137 
buf„r
=
ªsu…
.
	`gëBuf„r
(
ULOC_FULLNAME_CAPACITY
);

138 if(
buf„r
==0) {

139 
ªsu…
.
	`åunˇã
(0);

140  
ªsu…
;

143 
Àngth
=
	`uloc_gëDi•œyCou¡ry
(
fuŒName
, 
di•œyLoˇÀ
.fullName,

144 
buf„r
, 
ªsu…
.
	`gëC≠acôy
(),

145 &
îr‹Code
);

146 
ªsu…
.
	`ªÀa£Buf„r
(
	`U_SUCCESS
(
îr‹Code
Ë? 
Àngth
 : 0);

148 if(
îr‹Code
==
U_BUFFER_OVERFLOW_ERROR
) {

149 
buf„r
=
ªsu…
.
	`gëBuf„r
(
Àngth
);

150 if(
buf„r
==0) {

151 
ªsu…
.
	`åunˇã
(0);

152  
ªsu…
;

154 
îr‹Code
=
U_ZERO_ERROR
;

155 
Àngth
=
	`uloc_gëDi•œyCou¡ry
(
fuŒName
, 
di•œyLoˇÀ
.fullName,

156 
buf„r
, 
ªsu…
.
	`gëC≠acôy
(),

157 &
îr‹Code
);

158 
ªsu…
.
	`ªÀa£Buf„r
(
	`U_SUCCESS
(
îr‹Code
Ë? 
Àngth
 : 0);

161  
ªsu…
;

162 
	}
}

164 
	gUnicodeSåög
&

165 
	gLoˇÀ
::
	$gëDi•œyV¨ü¡
(
UnicodeSåög
& 
di•V¨
) const

167  
this
->
	`gëDi•œyV¨ü¡
(
	`gëDeÁu…
(), 
di•V¨
);

168 
	}
}

170 
	gUnicodeSåög
&

171 
	gLoˇÀ
::
	$gëDi•œyV¨ü¡
(c⁄° 
LoˇÀ
 &
di•œyLoˇÀ
,

172 
UnicodeSåög
 &
ªsu…
) const {

173 
UCh¨
 *
buf„r
;

174 
UEº‹Code
 
îr‹Code
=
U_ZERO_ERROR
;

175 
öt32_t
 
Àngth
;

177 
buf„r
=
ªsu…
.
	`gëBuf„r
(
ULOC_FULLNAME_CAPACITY
);

178 if(
buf„r
==0) {

179 
ªsu…
.
	`åunˇã
(0);

180  
ªsu…
;

183 
Àngth
=
	`uloc_gëDi•œyV¨ü¡
(
fuŒName
, 
di•œyLoˇÀ
.fullName,

184 
buf„r
, 
ªsu…
.
	`gëC≠acôy
(),

185 &
îr‹Code
);

186 
ªsu…
.
	`ªÀa£Buf„r
(
	`U_SUCCESS
(
îr‹Code
Ë? 
Àngth
 : 0);

188 if(
îr‹Code
==
U_BUFFER_OVERFLOW_ERROR
) {

189 
buf„r
=
ªsu…
.
	`gëBuf„r
(
Àngth
);

190 if(
buf„r
==0) {

191 
ªsu…
.
	`åunˇã
(0);

192  
ªsu…
;

194 
îr‹Code
=
U_ZERO_ERROR
;

195 
Àngth
=
	`uloc_gëDi•œyV¨ü¡
(
fuŒName
, 
di•œyLoˇÀ
.fullName,

196 
buf„r
, 
ªsu…
.
	`gëC≠acôy
(),

197 &
îr‹Code
);

198 
ªsu…
.
	`ªÀa£Buf„r
(
	`U_SUCCESS
(
îr‹Code
Ë? 
Àngth
 : 0);

201  
ªsu…
;

202 
	}
}

204 
	gUnicodeSåög
&

205 
	gLoˇÀ
::
	$gëDi•œyName
–
UnicodeSåög
& 
«me
 ) const

207  
this
->
	`gëDi•œyName
(
	`gëDeÁu…
(), 
«me
);

208 
	}
}

210 
	gUnicodeSåög
&

211 
	gLoˇÀ
::
	$gëDi•œyName
(c⁄° 
LoˇÀ
 &
di•œyLoˇÀ
,

212 
UnicodeSåög
 &
ªsu…
) const {

213 
UCh¨
 *
buf„r
;

214 
UEº‹Code
 
îr‹Code
=
U_ZERO_ERROR
;

215 
öt32_t
 
Àngth
;

217 
buf„r
=
ªsu…
.
	`gëBuf„r
(
ULOC_FULLNAME_CAPACITY
);

218 if(
buf„r
==0) {

219 
ªsu…
.
	`åunˇã
(0);

220  
ªsu…
;

223 
Àngth
=
	`uloc_gëDi•œyName
(
fuŒName
, 
di•œyLoˇÀ
.fullName,

224 
buf„r
, 
ªsu…
.
	`gëC≠acôy
(),

225 &
îr‹Code
);

226 
ªsu…
.
	`ªÀa£Buf„r
(
	`U_SUCCESS
(
îr‹Code
Ë? 
Àngth
 : 0);

228 if(
îr‹Code
==
U_BUFFER_OVERFLOW_ERROR
) {

229 
buf„r
=
ªsu…
.
	`gëBuf„r
(
Àngth
);

230 if(
buf„r
==0) {

231 
ªsu…
.
	`åunˇã
(0);

232  
ªsu…
;

234 
îr‹Code
=
U_ZERO_ERROR
;

235 
Àngth
=
	`uloc_gëDi•œyName
(
fuŒName
, 
di•œyLoˇÀ
.fullName,

236 
buf„r
, 
ªsu…
.
	`gëC≠acôy
(),

237 &
îr‹Code
);

238 
ªsu…
.
	`ªÀa£Buf„r
(
	`U_SUCCESS
(
îr‹Code
Ë? 
Àngth
 : 0);

241  
ªsu…
;

242 
	}
}

244 #i‡! 
UCONFIG_NO_BREAK_ITERATION


248 
	gUnicodeSåög
& 
U_EXPORT2


249 
	gBªakIãøt‹
::
	$gëDi•œyName
(c⁄° 
LoˇÀ
& 
obje˘LoˇÀ
,

250 
UnicodeSåög
& 
«me
)

252  
obje˘LoˇÀ
.
	`gëDi•œyName
(
«me
);

253 
	}
}

257 
	gUnicodeSåög
& 
U_EXPORT2


258 
	gBªakIãøt‹
::
	$gëDi•œyName
(c⁄° 
LoˇÀ
& 
obje˘LoˇÀ
,

259 c⁄° 
LoˇÀ
& 
di•œyLoˇÀ
,

260 
UnicodeSåög
& 
«me
)

262  
obje˘LoˇÀ
.
	`gëDi•œyName
(
di•œyLoˇÀ
, 
«me
);

263 
	}
}

268 
U_NAMESPACE_END


272 
U_NAMESPACE_USE


278 c⁄° 
	g_kL™guages
[] = "Languages";

279 c⁄° 
	g_kS¸ùts
[] = "Scripts";

280 c⁄° 
	g_kCou¡rõs
[] = "Countries";

281 c⁄° 
	g_kV¨ü¡s
[] = "Variants";

282 c⁄° 
	g_kKeys
[] = "Keys";

283 c⁄° 
	g_kTy≥s
[] = "Types";

284 c⁄° 
	g_kRoŸName
[] = "root";

285 c⁄° 
	g_kCuºícy
[] = "currency";

286 c⁄° 
	g_kCuºícõs
[] = "Currencies";

287 c⁄° 
	g_kLoˇÀDi•œyP©ã∫
[] = "localeDisplayPattern";

288 c⁄° 
	g_kP©ã∫
[] = "pattern";

289 c⁄° 
	g_kSï¨©‹
[] = "separator";

293 
öt32_t


294 
	$_gëSåögOrC›yKey
(c⁄° *
∑th
, c⁄° *
loˇÀ
,

295 c⁄° *
èbÀKey
,

296 c⁄° * 
subTabÀKey
,

297 c⁄° *
ôemKey
,

298 c⁄° *
sub°ôuã
,

299 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

300 
UEº‹Code
 *
pEº‹Code
) {

301 c⁄° 
UCh¨
 *
s
 = 
NULL
;

302 
öt32_t
 
Àngth
 = 0;

304 if(
ôemKey
==
NULL
) {

306 
UResour˚BundÀ
 *
rb
;

308 
rb
=
	`uªs_›í
(
∑th
, 
loˇÀ
, 
pEº‹Code
);

310 if(
	`U_SUCCESS
(*
pEº‹Code
)) {

311 
s
=
	`uªs_gëSåögByKey
(
rb
, 
èbÀKey
, &
Àngth
, 
pEº‹Code
);

313 
	`uªs_˛o£
(
rb
);

317 i‡(!
	`u¥v_°∫cmp
(
èbÀKey
, "L™guages", 9Ë&& 
	`u¥v_°πﬁ
(
ôemKey
, 
NULL
, 10)) {

318 *
pEº‹Code
 = 
U_MISSING_RESOURCE_ERROR
;

321 
s
=
	`uloc_gëTabÀSåögWôhFÆlback
(
∑th
, 
loˇÀ
,

322 
èbÀKey
,

323 
subTabÀKey
,

324 
ôemKey
,

325 &
Àngth
,

326 
pEº‹Code
);

330 if(
	`U_SUCCESS
(*
pEº‹Code
)) {

331 
öt32_t
 
c›yLígth
=
	`u¥v_mö
(
Àngth
, 
de°C≠acôy
);

332 if(
c›yLígth
>0 && 
s
 !
NULL
) {

333 
	`u_mem˝y
(
de°
, 
s
, 
c›yLígth
);

337 
Àngth
=(
öt32_t
)
	`u¥v_°æí
(
sub°ôuã
);

338 
	`u_ch¨sToUCh¨s
(
sub°ôuã
, 
de°
, 
	`u¥v_mö
(
Àngth
, 
de°C≠acôy
));

339 *
pEº‹Code
=
U_USING_DEFAULT_WARNING
;

342  
	`u_ãrmö©eUCh¨s
(
de°
, 
de°C≠acôy
, 
Àngth
, 
pEº‹Code
);

343 
	}
}

345 
öt32_t
 
	tU_CALLCONV
 
	tUDi•œyNameGëãr
(c⁄° *, *, 
	töt32_t
, 
	tUEº‹Code
 *);

347 
öt32_t


348 
	$_gëDi•œyNameF‹Comp⁄ít
(c⁄° *
loˇÀ
,

349 c⁄° *
di•œyLoˇÀ
,

350 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

351 
UDi•œyNameGëãr
 *
gëãr
,

352 c⁄° *
èg
,

353 
UEº‹Code
 *
pEº‹Code
) {

354 
loˇÀBuf„r
[
ULOC_FULLNAME_CAPACITY
*4];

355 
öt32_t
 
Àngth
;

356 
UEº‹Code
 
loˇlSètus
;

357 c⁄° * 
roŸ
 = 
NULL
;

360 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

364 if(
de°C≠acôy
<0 || (de°C≠acôy>0 && 
de°
==
NULL
)) {

365 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

369 
loˇlSètus
 = 
U_ZERO_ERROR
;

370 
Àngth
=(*
gëãr
)(
loˇÀ
, 
loˇÀBuf„r
, ÷oˇÀBuf„r), &
loˇlSètus
);

371 if(
	`U_FAILURE
(
loˇlSètus
Ë||ÜoˇlSètus==
U_STRING_NOT_TERMINATED_WARNING
) {

372 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

375 if(
Àngth
==0) {

376  
	`u_ãrmö©eUCh¨s
(
de°
, 
de°C≠acôy
, 0, 
pEº‹Code
);

379 
roŸ
 = 
èg
 =
_kCou¡rõs
 ? 
U_ICUDATA_REGION
 : 
U_ICUDATA_LANG
;

381  
	`_gëSåögOrC›yKey
(
roŸ
, 
di•œyLoˇÀ
,

382 
èg
, 
NULL
, 
loˇÀBuf„r
,

383 
loˇÀBuf„r
,

384 
de°
, 
de°C≠acôy
,

385 
pEº‹Code
);

386 
	}
}

388 
U_CAPI
 
öt32_t
 
U_EXPORT2


389 
	$uloc_gëDi•œyL™guage
(c⁄° *
loˇÀ
,

390 c⁄° *
di•œyLoˇÀ
,

391 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

392 
UEº‹Code
 *
pEº‹Code
) {

393  
	`_gëDi•œyNameF‹Comp⁄ít
(
loˇÀ
, 
di•œyLoˇÀ
, 
de°
, 
de°C≠acôy
,

394 
uloc_gëL™guage
, 
_kL™guages
, 
pEº‹Code
);

395 
	}
}

397 
U_CAPI
 
öt32_t
 
U_EXPORT2


398 
	$uloc_gëDi•œyS¸ùt
(c⁄° * 
loˇÀ
,

399 c⁄° * 
di•œyLoˇÀ
,

400 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

401 
UEº‹Code
 *
pEº‹Code
)

403  
	`_gëDi•œyNameF‹Comp⁄ít
(
loˇÀ
, 
di•œyLoˇÀ
, 
de°
, 
de°C≠acôy
,

404 
uloc_gëS¸ùt
, 
_kS¸ùts
, 
pEº‹Code
);

405 
	}
}

407 
U_CAPI
 
öt32_t
 
U_EXPORT2


408 
	$uloc_gëDi•œyCou¡ry
(c⁄° *
loˇÀ
,

409 c⁄° *
di•œyLoˇÀ
,

410 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

411 
UEº‹Code
 *
pEº‹Code
) {

412  
	`_gëDi•œyNameF‹Comp⁄ít
(
loˇÀ
, 
di•œyLoˇÀ
, 
de°
, 
de°C≠acôy
,

413 
uloc_gëCou¡ry
, 
_kCou¡rõs
, 
pEº‹Code
);

414 
	}
}

421 
U_CAPI
 
öt32_t
 
U_EXPORT2


422 
	$uloc_gëDi•œyV¨ü¡
(c⁄° *
loˇÀ
,

423 c⁄° *
di•œyLoˇÀ
,

424 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

425 
UEº‹Code
 *
pEº‹Code
) {

426  
	`_gëDi•œyNameF‹Comp⁄ít
(
loˇÀ
, 
di•œyLoˇÀ
, 
de°
, 
de°C≠acôy
,

427 
uloc_gëV¨ü¡
, 
_kV¨ü¡s
, 
pEº‹Code
);

428 
	}
}

430 
U_CAPI
 
öt32_t
 
U_EXPORT2


431 
	$uloc_gëDi•œyName
(c⁄° *
loˇÀ
,

432 c⁄° *
di•œyLoˇÀ
,

433 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

434 
UEº‹Code
 *
pEº‹Code
)

436 
öt32_t
 
Àngth
, 
Àngth2
, 
Àngth3
 = 0;

437 
UBoﬁ
 
hasL™guage
, 
hasS¸ùt
, 
hasCou¡ry
, 
hasV¨ü¡
, 
hasKeyw‹ds
;

438 
UEnumî©i⁄
* 
keyw‹dEnum
 = 
NULL
;

439 
öt32_t
 
keyw‹dCou¡
 = 0;

440 c⁄° *
keyw‹d
 = 
NULL
;

441 
öt32_t
 
keyw‹dLí
 = 0;

442 
keyw‹dVÆue
[256];

443 
öt32_t
 
keyw‹dVÆueLí
 = 0;

445 
öt32_t
 
locSïLí
 = 0;

446 
öt32_t
 
locP©Lí
 = 0;

447 
öt32_t
 
p0Lí
 = 0;

448 
öt32_t
 
deÁu…P©ã∫Lí
 = 9;

449 c⁄° 
UCh¨
 *
di•LocSï¨©‹
;

450 c⁄° 
UCh¨
 *
di•LocP©ã∫
;

451 c⁄° 
UCh¨
 
deÁu…Sï¨©‹
[3] = { 0x002c, 0x0020 , 0x0000 };

452 c⁄° 
UCh¨
 
deÁu…P©ã∫
[10] = { 0x007b, 0x0030, 0x007d, 0x0020, 0x0028, 0x007b, 0x0031, 0x007d, 0x0029, 0x0000 };

453 c⁄° 
UCh¨
 
∑t0
[4] = { 0x007b, 0x0030, 0x007d , 0x0000 } ;

454 c⁄° 
UCh¨
 
∑t1
[4] = { 0x007b, 0x0031, 0x007d , 0x0000 } ;

456 
UResour˚BundÀ
 *
bundÀ
 = 
NULL
;

457 
UResour˚BundÀ
 *
locd•∑t
 = 
NULL
;

459 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

462 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

466 if(
de°C≠acôy
<0 || (de°C≠acôy>0 && 
de°
==
NULL
)) {

467 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

471 
bundÀ
 = 
	`uªs_›í
(
U_ICUDATA_LANG
, 
di•œyLoˇÀ
, &
°©us
);

473 
locd•∑t
 = 
	`uªs_gëByKeyWôhFÆlback
(
bundÀ
, 
_kLoˇÀDi•œyP©ã∫
, 
NULL
, &
°©us
);

474 
di•LocSï¨©‹
 = 
	`uªs_gëSåögByKeyWôhFÆlback
(
locd•∑t
, 
_kSï¨©‹
, &
locSïLí
, &
°©us
);

475 
di•LocP©ã∫
 = 
	`uªs_gëSåögByKeyWôhFÆlback
(
locd•∑t
, 
_kP©ã∫
, &
locP©Lí
, &
°©us
);

478 
	`uªs_˛o£
(
locd•∑t
);

479 
	`uªs_˛o£
(
bundÀ
);

482 i‡–
locSïLí
 == 0) {

483 
di•LocSï¨©‹
 = 
deÁu…Sï¨©‹
;

484 
locSïLí
 = 2;

487 i‡–
locP©Lí
 == 0) {

488 
di•LocP©ã∫
 = 
deÁu…P©ã∫
;

489 
locP©Lí
 = 9;

498 
Àngth
=
	`uloc_gëDi•œyL™guage
(
loˇÀ
, 
di•œyLoˇÀ
,

499 
de°
, 
de°C≠acôy
,

500 
pEº‹Code
);

501 
hasL™guage

Àngth
>0;

503 if(
hasL™guage
) {

504 
p0Lí
 = 
Àngth
;

507 if(
Àngth
<
de°C≠acôy
) {

508 
de°
[
Àngth
]=0x20;

510 ++
Àngth
;

511 if(
Àngth
<
de°C≠acôy
) {

512 
de°
[
Àngth
]=0x28;

514 ++
Àngth
;

517 if(*
pEº‹Code
==
U_BUFFER_OVERFLOW_ERROR
) {

519 *
pEº‹Code
=
U_ZERO_ERROR
;

523 if(
Àngth
<
de°C≠acôy
) {

524 
Àngth2
=
	`uloc_gëDi•œyS¸ùt
(
loˇÀ
, 
di•œyLoˇÀ
,

525 
de°
+
Àngth
, 
de°C≠acôy
-length,

526 
pEº‹Code
);

528 
Àngth2
=
	`uloc_gëDi•œyS¸ùt
(
loˇÀ
, 
di•œyLoˇÀ
,

529 
NULL
, 0,

530 
pEº‹Code
);

532 
hasS¸ùt

Àngth2
>0;

533 
Àngth
+=
Àngth2
;

535 if(
hasS¸ùt
) {

537 if(
Àngth
+
locSïLí
<=
de°C≠acôy
) {

538 
	`u_mem˝y
(
de°
+
Àngth
,
di•LocSï¨©‹
,
locSïLí
);

540 
Àngth
+=
locSïLí
;

543 if(*
pEº‹Code
==
U_BUFFER_OVERFLOW_ERROR
) {

545 *
pEº‹Code
=
U_ZERO_ERROR
;

549 if(
Àngth
<
de°C≠acôy
) {

550 
Àngth2
=
	`uloc_gëDi•œyCou¡ry
(
loˇÀ
, 
di•œyLoˇÀ
,

551 
de°
+
Àngth
, 
de°C≠acôy
-length,

552 
pEº‹Code
);

554 
Àngth2
=
	`uloc_gëDi•œyCou¡ry
(
loˇÀ
, 
di•œyLoˇÀ
,

555 
NULL
, 0,

556 
pEº‹Code
);

558 
hasCou¡ry

Àngth2
>0;

559 
Àngth
+=
Àngth2
;

561 if(
hasCou¡ry
) {

563 if(
Àngth
+
locSïLí
<=
de°C≠acôy
) {

564 
	`u_mem˝y
(
de°
+
Àngth
,
di•LocSï¨©‹
,
locSïLí
);

566 
Àngth
+=
locSïLí
;

569 if(*
pEº‹Code
==
U_BUFFER_OVERFLOW_ERROR
) {

571 *
pEº‹Code
=
U_ZERO_ERROR
;

575 if(
Àngth
<
de°C≠acôy
) {

576 
Àngth2
=
	`uloc_gëDi•œyV¨ü¡
(
loˇÀ
, 
di•œyLoˇÀ
,

577 
de°
+
Àngth
, 
de°C≠acôy
-length,

578 
pEº‹Code
);

580 
Àngth2
=
	`uloc_gëDi•œyV¨ü¡
(
loˇÀ
, 
di•œyLoˇÀ
,

581 
NULL
, 0,

582 
pEº‹Code
);

584 
hasV¨ü¡

Àngth2
>0;

585 
Àngth
+=
Àngth2
;

587 if(
hasV¨ü¡
) {

589 if(
Àngth
+
locSïLí
<=
de°C≠acôy
) {

590 
	`u_mem˝y
(
de°
+
Àngth
,
di•LocSï¨©‹
,
locSïLí
);

592 
Àngth
+=
locSïLí
;

595 
keyw‹dEnum
 = 
	`uloc_›íKeyw‹ds
(
loˇÀ
, 
pEº‹Code
);

597 
keyw‹dCou¡
 = 
	`uíum_cou¡
(
keyw‹dEnum
, 
pEº‹Code
); keywordCount > 0 ; keywordCount--){

598 if(
	`U_FAILURE
(*
pEº‹Code
)){

602 
keyw‹d
 = 
	`uíum_√xt
(
keyw‹dEnum
, &
keyw‹dLí
, 
pEº‹Code
);

603 if(
Àngth
 + 
Àngth3
 < 
de°C≠acôy
) {

604 
Àngth3
 +
	`uloc_gëDi•œyKeyw‹d
(
keyw‹d
, 
di•œyLoˇÀ
, 
de°
+
Àngth
+Àngth3, 
de°C≠acôy
-Àngth-Àngth3, 
pEº‹Code
);

606 
Àngth3
 +
	`uloc_gëDi•œyKeyw‹d
(
keyw‹d
, 
di•œyLoˇÀ
, 
NULL
, 0, 
pEº‹Code
);

608 if(*
pEº‹Code
==
U_BUFFER_OVERFLOW_ERROR
) {

610 *
pEº‹Code
=
U_ZERO_ERROR
;

612 
keyw‹dVÆueLí
 = 
	`uloc_gëKeyw‹dVÆue
(
loˇÀ
, 
keyw‹d
, 
keyw‹dVÆue
, 256, 
pEº‹Code
);

613 if(
keyw‹dVÆueLí
) {

614 if(
Àngth
 + 
Àngth3
 < 
de°C≠acôy
) {

615 
de°
[
Àngth
 + 
Àngth3
] = 0x3D;

617 
Àngth3
++;

618 if(
Àngth
 + 
Àngth3
 < 
de°C≠acôy
) {

619 
Àngth3
 +
	`uloc_gëDi•œyKeyw‹dVÆue
(
loˇÀ
, 
keyw‹d
, 
di•œyLoˇÀ
, 
de°
+
Àngth
+Àngth3, 
de°C≠acôy
-Àngth-Àngth3, 
pEº‹Code
);

621 
Àngth3
 +
	`uloc_gëDi•œyKeyw‹dVÆue
(
loˇÀ
, 
keyw‹d
, 
di•œyLoˇÀ
, 
NULL
, 0, 
pEº‹Code
);

623 if(*
pEº‹Code
==
U_BUFFER_OVERFLOW_ERROR
) {

625 *
pEº‹Code
=
U_ZERO_ERROR
;

628 if(
keyw‹dCou¡
 > 1) {

629 if(
Àngth
 + 
Àngth3
 + 
locSïLí
 <
de°C≠acôy
 && 
keyw‹dCou¡
) {

630 
	`u_mem˝y
(
de°
+
Àngth
+
Àngth3
,
di•LocSï¨©‹
,
locSïLí
);

631 
Àngth3
+=
locSïLí
;

635 
	`uíum_˛o£
(
keyw‹dEnum
);

637 
hasKeyw‹ds
 = 
Àngth3
 > 0;

638 
Àngth
 +
Àngth3
;

641 i‡((
hasS¸ùt
 && !
hasCou¡ry
)

642 || ((
hasS¸ùt
 || 
hasCou¡ry
Ë&& !
hasV¨ü¡
 && !
hasKeyw‹ds
)

643 || ((
hasS¸ùt
 || 
hasCou¡ry
 || 
hasV¨ü¡
Ë&& !
hasKeyw‹ds
)) {

645 
Àngth
 -
locSïLí
;

646 } i‡(
hasL™guage
 && !
hasS¸ùt
 && !
hasCou¡ry
 && !
hasV¨ü¡
 && !
hasKeyw‹ds
) {

648 
Àngth
-=2;

651 i‡(
hasL™guage
 && (
hasS¸ùt
 || 
hasCou¡ry
 || 
hasV¨ü¡
 || 
hasKeyw‹ds
)) {

653 if(
Àngth
<
de°C≠acôy
) {

654 
de°
[
Àngth
]=0x29;

656 ++
Àngth
;

662 i‡(
locP©Lí
 !
deÁu…P©ã∫Lí
 || 
	`u_°rcmp
(
di•LocP©ã∫
,
deÁu…P©ã∫
)) {

663 
UCh¨
 *
p0
 = 
	`u_°r°r
(
di•LocP©ã∫
,
∑t0
);

664 
UCh¨
 *
p1
 = 
	`u_°r°r
(
di•LocP©ã∫
,
∑t1
);

665 
	`u_ãrmö©eUCh¨s
(
de°
, 
de°C≠acôy
, 
Àngth
, 
pEº‹Code
);

667 i‡–
p0
 !
NULL
 && 
p1
 != NULL ) {

668 i‡–
de°
 ) {

669 
öt32_t
 
de°Lí
 = 0;

670 
UCh¨
 *
ªsu…
 = (UCh¨ *)
	`u¥v_mÆloc
((
Àngth
+1)*(UChar));

671 
UCh¨
 *
upos
 = (UCh¨ *)
di•LocP©ã∫
;

672 
	`u_°r˝y
(
ªsu…
,
de°
);

673 
de°
[0] = 0;

674  *
upos
 ) {

675 i‡–
upos
 =
p0
 ) {

676 
	`u_°∫ˇt
(
de°
,
ªsu…
,
p0Lí
);

677 
de°Lí
 +
p0Lí
;

678 
de°
[
de°Lí
] = 0;

679 
upos
 += 3;

680 } i‡–
upos
 =
p1
 ) {

681 
UCh¨
 *
p1Sèπ
 = &
ªsu…
[
p0Lí
+2];

682 
	`u_°∫ˇt
(
de°
,
p1Sèπ
,
Àngth
-
p0Lí
-3);

683 
de°Lí
 +(
Àngth
-
p0Lí
-3);

684 
de°
[
de°Lí
] = 0;

685 
upos
 += 3;

687 
	`u_°∫ˇt
(
de°
,
upos
,1);

688 
upos
++;

689 
de°Lí
++;

690 
de°
[
de°Lí
] = 0;

693 
Àngth
 = 
de°Lí
;

694 
	`u¥v_‰ì
(
ªsu…
);

699 if(*
pEº‹Code
==
U_BUFFER_OVERFLOW_ERROR
) {

701 *
pEº‹Code
=
U_ZERO_ERROR
;

704  
	`u_ãrmö©eUCh¨s
(
de°
, 
de°C≠acôy
, 
Àngth
, 
pEº‹Code
);

705 
	}
}

707 
U_CAPI
 
öt32_t
 
U_EXPORT2


708 
	$uloc_gëDi•œyKeyw‹d
(c⁄° * 
keyw‹d
,

709 c⁄° * 
di•œyLoˇÀ
,

710 
UCh¨
* 
de°
,

711 
öt32_t
 
de°C≠acôy
,

712 
UEº‹Code
* 
°©us
){

715 if(
°©us
==
NULL
 || 
	`U_FAILURE
(*status)) {

719 if(
de°C≠acôy
<0 || (de°C≠acôy>0 && 
de°
==
NULL
)) {

720 *
°©us
=
U_ILLEGAL_ARGUMENT_ERROR
;

726  
	`_gëSåögOrC›yKey
(
U_ICUDATA_LANG
, 
di•œyLoˇÀ
,

727 
_kKeys
, 
NULL
,

728 
keyw‹d
,

729 
keyw‹d
,

730 
de°
, 
de°C≠acôy
,

731 
°©us
);

733 
	}
}

736 
	#UCURRENCY_DISPLAY_NAME_INDEX
 1

	)

738 
U_CAPI
 
öt32_t
 
U_EXPORT2


739 
	$uloc_gëDi•œyKeyw‹dVÆue
–c⁄° * 
loˇÀ
,

740 c⁄° * 
keyw‹d
,

741 c⁄° * 
di•œyLoˇÀ
,

742 
UCh¨
* 
de°
,

743 
öt32_t
 
de°C≠acôy
,

744 
UEº‹Code
* 
°©us
){

747 
keyw‹dVÆue
[
ULOC_FULLNAME_CAPACITY
*4];

748 
öt32_t
 
ˇ∑côy
 = 
ULOC_FULLNAME_CAPACITY
*4;

749 
öt32_t
 
keyw‹dVÆueLí
 =0;

752 if(
°©us
==
NULL
 || 
	`U_FAILURE
(*status)) {

756 if(
de°C≠acôy
<0 || (de°C≠acôy>0 && 
de°
==
NULL
)) {

757 *
°©us
=
U_ILLEGAL_ARGUMENT_ERROR
;

762 
keyw‹dVÆue
[0]=0;

763 
keyw‹dVÆueLí
 = 
	`uloc_gëKeyw‹dVÆue
(
loˇÀ
, 
keyw‹d
, 
keyw‹dVÆue
, 
ˇ∑côy
, 
°©us
);

769 if(
	`u¥v_°ricmp
(
keyw‹d
, 
_kCuºícy
)==0){

771 
öt32_t
 
di•NameLí
 = 0;

772 c⁄° 
UCh¨
 *
di•Name
 = 
NULL
;

774 
UResour˚BundÀ
 *
bundÀ
 = 
	`uªs_›í
(
U_ICUDATA_CURR
, 
di•œyLoˇÀ
, 
°©us
);

775 
UResour˚BundÀ
 *
cuºícõs
 = 
	`uªs_gëByKey
(
bundÀ
, 
_kCuºícõs
, 
NULL
, 
°©us
);

776 
UResour˚BundÀ
 *
cuºícy
 = 
	`uªs_gëByKeyWôhFÆlback
(
cuºícõs
, 
keyw‹dVÆue
, 
NULL
, 
°©us
);

778 
di•Name
 = 
	`uªs_gëSåögByIndex
(
cuºícy
, 
UCURRENCY_DISPLAY_NAME_INDEX
, &
di•NameLí
, 
°©us
);

781 
	`uªs_˛o£
(
cuºícy
);

782 
	`uªs_˛o£
(
cuºícõs
);

783 
	`uªs_˛o£
(
bundÀ
);

785 if(
	`U_FAILURE
(*
°©us
)){

786 if(*
°©us
 =
U_MISSING_RESOURCE_ERROR
){

788 *
°©us
 = 
U_USING_DEFAULT_WARNING
;

795 if(
di•Name
 !
NULL
){

796 if(
di•NameLí
 <
de°C≠acôy
){

797 
	`u¥v_mem˝y
(
de°
, 
di•Name
, 
di•NameLí
 * 
U_SIZEOF_UCHAR
);

798  
	`u_ãrmö©eUCh¨s
(
de°
, 
de°C≠acôy
, 
di•NameLí
, 
°©us
);

800 *
°©us
 = 
U_BUFFER_OVERFLOW_ERROR
;

801  
di•NameLí
;

805 if(
keyw‹dVÆueLí
 <
de°C≠acôy
){

806 
	`u_ch¨sToUCh¨s
(
keyw‹dVÆue
, 
de°
, 
keyw‹dVÆueLí
);

807  
	`u_ãrmö©eUCh¨s
(
de°
, 
de°C≠acôy
, 
keyw‹dVÆueLí
, 
°©us
);

809 *
°©us
 = 
U_BUFFER_OVERFLOW_ERROR
;

810  
keyw‹dVÆueLí
;

817  
	`_gëSåögOrC›yKey
(
U_ICUDATA_LANG
, 
di•œyLoˇÀ
,

818 
_kTy≥s
, 
keyw‹d
,

819 
keyw‹dVÆue
,

820 
keyw‹dVÆue
,

821 
de°
, 
de°C≠acôy
,

822 
°©us
);

824 
	}
}

	@locid.cpp

33 
	~"unicode/locid.h
"

34 
	~"unicode/uloc.h
"

35 
	~"umuãx.h
"

36 
	~"uas£π.h
"

37 
	~"cmem‹y.h
"

38 
	~"c°rög.h
"

39 
	~"uhash.h
"

40 
	~"u˛n_cmn.h
"

42 
	#LENGTHOF
(
¨øy
Ë(
öt32_t
)(◊ºay)/(◊ºay)[0]))

	)

44 
	eELoˇÀPos
 {

45 
	meENGLISH
,

46 
	meFRENCH
,

47 
	meGERMAN
,

48 
	meITALIAN
,

49 
	meJAPANESE
,

50 
	meKOREAN
,

51 
	meCHINESE
,

53 
	meFRANCE
,

54 
	meGERMANY
,

55 
	meITALY
,

56 
	meJAPAN
,

57 
	meKOREA
,

58 
	meCHINA
,

59 
	meTAIWAN
,

60 
	meUK
,

61 
	meUS
,

62 
	meCANADA
,

63 
	meCANADA_FRENCH
,

64 
	meROOT
,

68 
	meMAX_LOCALES


69 } 
	tELoˇÀPos
;

71 
U_CFUNC
 
öt32_t
 
loˇÀ_gëKeyw‹ds
(c⁄° *
loˇÀID
,

72 
¥ev
,

73 *
keyw‹ds
, 
öt32_t
 
keyw‹dC≠acôy
,

74 *
vÆues
, 
öt32_t
 
vÆuesC≠acôy
, i¡32_à*
vÆLí
,

75 
UBoﬁ
 
vÆuesToo
,

76 
UEº‹Code
 *
°©us
);

78 
U_NAMESPACE_QUALIFIER
 
LoˇÀ
 *
	ggLoˇÀCache
 = 
NULL
;

79 
U_NAMESPACE_QUALIFIER
 
LoˇÀ
 *
	ggDeÁu…LoˇÀ
 = 
NULL
;

80 
UHashèbÀ
 *
	ggDeÁu…LoˇÀsHashT
 = 
NULL
;

82 
U_CDECL_BEGIN


86 
U_CALLCONV


87 
	$dñëeLoˇÀ
(*
obj
) {

88 
	`dñëe
 (
U_NAMESPACE_QUALIFIER
 
LoˇÀ
 *Ë
obj
;

89 
	}
}

91 
UBoﬁ
 
U_CALLCONV
 
	$loˇÀ_˛ónup
()

93 
U_NAMESPACE_USE


95 i‡(
gLoˇÀCache
) {

96 
dñëe
 [] 
gLoˇÀCache
;

97 
gLoˇÀCache
 = 
NULL
;

100 i‡(
gDeÁu…LoˇÀsHashT
) {

101 
	`uhash_˛o£
(
gDeÁu…LoˇÀsHashT
);

102 
gDeÁu…LoˇÀsHashT
 = 
NULL
;

104 i‡(
gDeÁu…LoˇÀ
) {

106 
dñëe
 
gDeÁu…LoˇÀ
;

108 
gDeÁu…LoˇÀ
 = 
NULL
;

110  
TRUE
;

111 
	}
}

112 
U_CDECL_END


114 
U_NAMESPACE_BEGIN


118 
	$loˇÀ_£t_deÁu…_öã∫Æ
(c⁄° *
id
)

120 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

121 
UBoﬁ
 
ˇn⁄iˇlize
 = 
FALSE
;

127 i‡(
id
 =
NULL
) {

128 
	`umtx_lock
(
NULL
);

129 
id
 = 
	`u¥v_gëDeÁu…LoˇÀID
();

130 
	`umtx_u∆ock
(
NULL
);

131 
ˇn⁄iˇlize
 = 
TRUE
;

138 
°©us
 = 
U_ZERO_ERROR
;

139 
loˇÀNameBuf
[512];

141 i‡(
ˇn⁄iˇlize
) {

142 
	`uloc_ˇn⁄iˇlize
(
id
, 
loˇÀNameBuf
, ÷oˇÀNameBuf)-1, &
°©us
);

144 
	`uloc_gëName
(
id
, 
loˇÀNameBuf
, ÷oˇÀNameBuf)-1, &
°©us
);

146 
loˇÀNameBuf
[(localeNameBuf)-1] = 0;

151 
UBoﬁ
 
isO∆yLoˇÀ
;

152 
	`UMTX_CHECK
(
NULL
, (
gDeÁu…LoˇÀ
 =NULL), 
isO∆yLoˇÀ
);

153 i‡(
isO∆yLoˇÀ
) {

156 
LoˇÀ
 *
√wFú°DeÁu…
 = 
√w
 
	`LoˇÀ
(LoˇÀ::
eBOGUS
);

157 i‡(
√wFú°DeÁu…
 =
NULL
) {

161 
√wFú°DeÁu…
->
	`öô
(
loˇÀNameBuf
, 
FALSE
);

162 
	`umtx_lock
(
NULL
);

163 i‡(
gDeÁu…LoˇÀ
 =
NULL
) {

164 
gDeÁu…LoˇÀ
 = 
√wFú°DeÁu…
;

165 
√wFú°DeÁu…
 = 
NULL
;

166 
	`u˛n_comm⁄_ªgi°îCÀ™up
(
UCLN_COMMON_LOCALE
, 
loˇÀ_˛ónup
);

170 
	`umtx_u∆ock
(
NULL
);

171 i‡(
√wFú°DeÁu…
 =
NULL
) {

179 
UBoﬁ
 
hashTabÀNìdsInô
;

180 
	`UMTX_CHECK
(
NULL
, (
gDeÁu…LoˇÀsHashT
 =NULL), 
hashTabÀNìdsInô
);

181 i‡(
hashTabÀNìdsInô
) {

182 
°©us
 = 
U_ZERO_ERROR
;

183 
UHashèbÀ
 *
tHashTabÀ
 = 
	`uhash_›í
(
uhash_hashCh¨s
, 
uhash_com∑ªCh¨s
, 
NULL
, &
°©us
);

184 i‡(
	`U_FAILURE
(
°©us
)) {

187 
	`uhash_£tVÆueDñëî
(
tHashTabÀ
, 
dñëeLoˇÀ
);

188 
	`umtx_lock
(
NULL
);

189 i‡(
gDeÁu…LoˇÀsHashT
 =
NULL
) {

190 
gDeÁu…LoˇÀsHashT
 = 
tHashTabÀ
;

191 
	`u˛n_comm⁄_ªgi°îCÀ™up
(
UCLN_COMMON_LOCALE
, 
loˇÀ_˛ónup
);

193 
	`uhash_˛o£
(
tHashTabÀ
);

194 
hashTabÀNìdsInô
 = 
FALSE
;

196 
	`umtx_u∆ock
(
NULL
);

200 
	`umtx_lock
(
NULL
);

201 
LoˇÀ
 *
√wDeÁu…
 = (LoˇÀ *)
	`uhash_gë
(
gDeÁu…LoˇÀsHashT
, 
loˇÀNameBuf
);

202 i‡(
√wDeÁu…
 !
NULL
) {

205 
gDeÁu…LoˇÀ
 = 
√wDeÁu…
;

206 
	`umtx_u∆ock
(
NULL
);

208 
	`umtx_u∆ock
(
NULL
);

211 
√wDeÁu…
 = 
√w
 
	`LoˇÀ
(
LoˇÀ
::
eBOGUS
);

212 i‡(
√wDeÁu…
 =
NULL
) {

216 
√wDeÁu…
->
	`öô
(
loˇÀNameBuf
, 
FALSE
);

219 c⁄° *
key
 = 
√wDeÁu…
->
	`gëName
();

220 
	`U_ASSERT
(
	`u¥v_°rcmp
(
key
, 
loˇÀNameBuf
) == 0);

221 
	`umtx_lock
(
NULL
);

222 
LoˇÀ
 *
hashTabÀVÆ
 = (LoˇÀ *)
	`uhash_gë
(
gDeÁu…LoˇÀsHashT
, 
key
);

223 i‡(
hashTabÀVÆ
 =
NULL
) {

224 i‡(
hashTabÀNìdsInô
) {

227 
	`uhash_put
(
gDeÁu…LoˇÀsHashT
, (*)
gDeÁu…LoˇÀ
->
	`gëName
(), gDeÁu…LoˇÀ, &
°©us
);

229 
	`uhash_put
(
gDeÁu…LoˇÀsHashT
, (*)
key
, 
√wDeÁu…
, &
°©us
);

230 
gDeÁu…LoˇÀ
 = 
√wDeÁu…
;

237 
gDeÁu…LoˇÀ
 = 
hashTabÀVÆ
;

238 
dñëe
 
√wDeÁu…
;

240 
	`umtx_u∆ock
(
NULL
);

242 
	}
}

243 
U_NAMESPACE_END


246 
U_CFUNC
 

247 
	$loˇÀ_£t_deÁu…
(c⁄° *
id
)

249 
U_NAMESPACE_USE


250 
	`loˇÀ_£t_deÁu…_öã∫Æ
(
id
);

251 
	}
}

254 
U_CFUNC
 const *

255 
	$loˇÀ_gë_deÁu…
()

257 
U_NAMESPACE_USE


259  
LoˇÀ
::
	`gëDeÁu…
().
	`gëName
();

260 
	}
}

263 
U_NAMESPACE_BEGIN


265 
	$UOBJECT_DEFINE_RTTI_IMPLEMENTATION
(
LoˇÀ
)

270 
	#SEP_CHAR
 '_'

	)

272 
LoˇÀ
::~
	$LoˇÀ
()

275 i‡(
fuŒName
 !
fuŒNameBuf„r
)

277 
	`u¥v_‰ì
(
fuŒName
);

278 
fuŒName
 = 
NULL
;

280 i‡(
ba£Name
 && ba£Namê!
ba£NameBuf„r
) {

281 
	`u¥v_‰ì
(
ba£Name
);

282 
ba£Name
 = 
NULL
;

284 
	}
}

286 
	gLoˇÀ
::
	$LoˇÀ
()

287 : 
	`UObje˘
(), 
	`fuŒName
(
fuŒNameBuf„r
), 
	$ba£Name
(
NULL
)

289 
	`öô
(
NULL
, 
FALSE
);

290 
	}
}

297 
	gLoˇÀ
::
LoˇÀ
(LoˇÀ::
ELoˇÀTy≥
)

298 : 
UObje˘
(), 
fuŒName
(
fuŒNameBuf„r
), 
	$ba£Name
(
NULL
)

300 
	`£tToBogus
();

301 
	}
}

304 
	gLoˇÀ
::
	$LoˇÀ
–c⁄° * 
√wL™guage
,

305 c⁄° * 
√wCou¡ry
,

306 c⁄° * 
√wV¨ü¡
,

307 c⁄° * 
√wKeyw‹ds
)

308 : 
	`UObje˘
(), 
	`fuŒName
(
fuŒNameBuf„r
), 
	$ba£Name
(
NULL
)

310 if–(
√wL™guage
==
NULL
Ë&& (
√wCou¡ry
 =NULLË&& (
√wV¨ü¡
 == NULL) )

312 
	`öô
(
NULL
, 
FALSE
);

316 
MaybeSèckAºay
<, 
ULOC_FULLNAME_CAPACITY
> 
togo
;

317 
öt32_t
 
size
 = 0;

318 
öt32_t
 
lsize
 = 0;

319 
öt32_t
 
csize
 = 0;

320 
öt32_t
 
vsize
 = 0;

321 
öt32_t
 
ksize
 = 0;

322 *
p
;

327 i‡–
√wL™guage
 !
NULL
 )

329 
lsize
 = (
öt32_t
)
	`u¥v_°æí
(
√wL™guage
);

330 
size
 = 
lsize
;

334 i‡–
√wCou¡ry
 !
NULL
 )

336 
csize
 = (
öt32_t
)
	`u¥v_°æí
(
√wCou¡ry
);

337 
size
 +
csize
;

341 i‡–
√wV¨ü¡
 !
NULL
 )

344 
√wV¨ü¡
[0] =
SEP_CHAR
)

346 
√wV¨ü¡
++;

350 
vsize
 = (
öt32_t
)
	`u¥v_°æí
(
√wV¨ü¡
);

351  (
vsize
>1Ë&& (
√wV¨ü¡
[vsize-1] =
SEP_CHAR
) )

353 
vsize
--;

357 if–
vsize
 > 0 )

359 
size
 +
vsize
;

363 i‡–
vsize
 > 0 )

365 
size
 += 2;

367 i‡–
csize
 > 0 )

369 
size
 += 1;

372 i‡–
√wKeyw‹ds
 !
NULL
)

374 
ksize
 = (
öt32_t
)
	`u¥v_°æí
(
√wKeyw‹ds
);

375 
size
 +
ksize
 + 1;

383 i‡(
size
 >
togo
.
	`gëC≠acôy
())

386 i‡(
togo
.
	`ªsize
(
size
+1Ë=
NULL
) {

387 
	`öô
(
NULL
, 
FALSE
);

391 
togo
[0] = 0;

394 
p
 = 
togo
.
	`gëAlüs
();

395 i‡–
lsize
 != 0 )

397 
	`u¥v_°r˝y
(
p
, 
√wL™guage
);

398 
p
 +
lsize
;

401 i‡––
vsize
 !0 ) || (
csize
 != 0) )

403 *
p
++ = 
SEP_CHAR
;

406 i‡–
csize
 != 0 )

408 
	`u¥v_°r˝y
(
p
, 
√wCou¡ry
);

409 
p
 +
csize
;

412 i‡–
vsize
 != 0)

414 *
p
++ = 
SEP_CHAR
;

416 
	`u¥v_°∫˝y
(
p
, 
√wV¨ü¡
, 
vsize
);

417 
p
 +
vsize
;

418 *
p
 = 0;

421 i‡–
ksize
 != 0)

423 i‡(
	`u¥v_°rchr
(
√wKeyw‹ds
, '=')) {

424 *
p
++ = '@';

427 *
p
++ = '_';

428 i‡–
vsize
 == 0) {

429 *
p
++ = '_';

432 
	`u¥v_°r˝y
(
p
, 
√wKeyw‹ds
);

433 
p
 +
ksize
;

438 
	`öô
(
togo
.
	`gëAlüs
(), 
FALSE
);

440 
	}
}

442 
	gLoˇÀ
::
	$LoˇÀ
(c⁄° 
LoˇÀ
 &
Ÿhî
)

443 : 
	`UObje˘
(
Ÿhî
), 
	`fuŒName
(
fuŒNameBuf„r
), 
	$ba£Name
(
NULL
)

445 *
this
 = 
Ÿhî
;

446 
	}
}

448 
	gLoˇÀ
 &LoˇÀ::
›î©‹
=(c⁄° 
LoˇÀ
 &
Ÿhî
)

450 i‡(
this
 =&
Ÿhî
) {

451  *
this
;

454 i‡(&
	gŸhî
 =
NULL
) {

455 
this
->
£tToBogus
();

456  *
	gthis
;

460 if(
	gfuŒName
 !
fuŒNameBuf„r
) {

461 
u¥v_‰ì
(
fuŒName
);

462 
	gfuŒName
 = 
fuŒNameBuf„r
;

466 if(
	gŸhî
.
	gfuŒName
 !
Ÿhî
.
fuŒNameBuf„r
) {

467 
fuŒName
 = (*)
u¥v_mÆloc
(()*(
u¥v_°æí
(
Ÿhî
.fullName)+1));

468 i‡(
	gfuŒName
 =
NULL
) {

469  *
this
;

473 
u¥v_°r˝y
(
fuŒName
, 
Ÿhî
.fullName);

479 if(
	gba£Name
 && ba£Namê!
ba£NameBuf„r
) {

480 
u¥v_‰ì
(
ba£Name
);

482 
	gba£Name
 = 
NULL
;

484 if(
	gŸhî
.
	gba£Name
 =
Ÿhî
.
ba£NameBuf„r
) {

485 
u¥v_°r˝y
(
ba£NameBuf„r
, 
Ÿhî
.baseNameBuffer);

486 
	gba£Name
 = 
ba£NameBuf„r
;

490 
u¥v_°r˝y
(
œnguage
, 
Ÿhî
.language);

491 
u¥v_°r˝y
(
s¸ùt
, 
Ÿhî
.script);

492 
u¥v_°r˝y
(
cou¡ry
, 
Ÿhî
.country);

495 
	gv¨ü¡Begö
 = 
Ÿhî
.
v¨ü¡Begö
;

496 
	gfIsBogus
 = 
Ÿhî
.
fIsBogus
;

497  *
	gthis
;

500 
LoˇÀ
 *

501 
	gLoˇÀ
::
	$˛⁄e
() const {

502  
√w
 
	`LoˇÀ
(*
this
);

503 
	}
}

505 
UBoﬁ


506 
	gLoˇÀ
::
›î©‹
==–c⁄° 
LoˇÀ
& 
Ÿhî
) const

508  (
u¥v_°rcmp
(
Ÿhî
.
fuŒName
, fullName) == 0);

512 
	gLoˇÀ
& LoˇÀ::
	$öô
(c⁄° * 
loˇÀID
, 
UBoﬁ
 
ˇn⁄iˇlize
)

514 
fIsBogus
 = 
FALSE
;

516 if(
fuŒName
 !
fuŒNameBuf„r
) {

517 
	`u¥v_‰ì
(
fuŒName
);

518 
fuŒName
 = 
fuŒNameBuf„r
;

521 if(
ba£Name
 && ba£Namê!
ba£NameBuf„r
) {

522 
	`u¥v_‰ì
(
ba£Name
);

523 
ba£Name
 = 
NULL
;

530 *
£∑øt‹
;

531 *
fõld
[5] = {0};

532 
öt32_t
 
fõldLí
[5] = {0};

533 
öt32_t
 
fõldIdx
;

534 
öt32_t
 
v¨ü¡Fõld
;

535 
öt32_t
 
Àngth
;

536 
UEº‹Code
 
îr
;

538 if(
loˇÀID
 =
NULL
) {

540  *
this
 = 
	`gëDeÁu…
();

544 
œnguage
[0] = 
s¸ùt
[0] = 
cou¡ry
[0] = 0;

547 
îr
 = 
U_ZERO_ERROR
;

548 
Àngth
 = 
ˇn⁄iˇlize
 ?

549 
	`uloc_ˇn⁄iˇlize
(
loˇÀID
, 
fuŒName
, (
fuŒNameBuf„r
), &
îr
) :

550 
	`uloc_gëName
(
loˇÀID
, 
fuŒName
, (
fuŒNameBuf„r
), &
îr
);

552 if(
îr
 =
U_BUFFER_OVERFLOW_ERROR
 || 
Àngth
 >(
öt32_t
)(
fuŒNameBuf„r
)) {

554 
fuŒName
 = (*)
	`u¥v_mÆloc
(()*(
Àngth
 + 1));

555 if(
fuŒName
 == 0) {

556 
fuŒName
 = 
fuŒNameBuf„r
;

559 
îr
 = 
U_ZERO_ERROR
;

560 
Àngth
 = 
ˇn⁄iˇlize
 ?

561 
	`uloc_ˇn⁄iˇlize
(
loˇÀID
, 
fuŒName
, 
Àngth
+1, &
îr
) :

562 
	`uloc_gëName
(
loˇÀID
, 
fuŒName
, 
Àngth
+1, &
îr
);

564 if(
	`U_FAILURE
(
îr
Ë||Éº =
U_STRING_NOT_TERMINATED_WARNING
) {

569 
v¨ü¡Begö
 = 
Àngth
;

572 
£∑øt‹
 = 
fõld
[0] = 
fuŒName
;

573 
fõldIdx
 = 1;

574 (
£∑øt‹
 = 
	`u¥v_°rchr
(
fõld
[
fõldIdx
-1], 
SEP_CHAR
)Ë&& fõldIdx < (
öt32_t
)((field)/(field[0]))-1) {

575 
fõld
[
fõldIdx
] = 
£∑øt‹
 + 1;

576 
fõldLí
[
fõldIdx
-1] = (
öt32_t
)(
£∑øt‹
 - 
fõld
[fieldIdx-1]);

577 
fõldIdx
++;

580 
£∑øt‹
 = 
	`u¥v_°rchr
(
fõld
[
fõldIdx
-1], '@');

581 * 
£p2
 = 
	`u¥v_°rchr
(
fõld
[
fõldIdx
-1], '.');

582 i‡(
£∑øt‹
!=
NULL
 || 
£p2
!=NULL) {

583 i‡(
£∑øt‹
==
NULL
 || (
£p2
!=NULL && separator > sep2)) {

584 
£∑øt‹
 = 
£p2
;

586 
fõldLí
[
fõldIdx
-1] = (
öt32_t
)(
£∑øt‹
 - 
fõld
[fieldIdx-1]);

588 
fõldLí
[
fõldIdx
-1] = 
Àngth
 - (
öt32_t
)(
fõld
[fõldIdx-1] - 
fuŒName
);

591 i‡(
fõldLí
[0] >(
öt32_t
)((
œnguage
))

592 || (
fõldLí
[1] =4 && fõldLí[2] >(
öt32_t
)((
cou¡ry
)))

593 || (
fõldLí
[1] !4 && fõldLí[1] >(
öt32_t
)((
cou¡ry
))))

598 
v¨ü¡Fõld
 = 2;

599 i‡(
fõldLí
[0] > 0) {

601 
	`u¥v_mem˝y
(
œnguage
, 
fuŒName
, 
fõldLí
[0]);

602 
œnguage
[
fõldLí
[0]] = 0;

604 i‡(
fõldLí
[1] == 4) {

606 
	`u¥v_mem˝y
(
s¸ùt
, 
fõld
[1], 
fõldLí
[1]);

607 
s¸ùt
[
fõldLí
[1]] = 0;

608 
v¨ü¡Fõld
 = 3;

609 i‡(
fõldLí
[2] > 0) {

611 
	`u¥v_mem˝y
(
cou¡ry
, 
fõld
[2], 
fõldLí
[2]);

612 
cou¡ry
[
fõldLí
[2]] = 0;

615 i‡(
fõldLí
[1] > 0) {

617 
	`u¥v_mem˝y
(
cou¡ry
, 
fõld
[1], 
fõldLí
[1]);

618 
cou¡ry
[
fõldLí
[1]] = 0;

620 i‡(
v¨ü¡Fõld
 > 0 && 
fõldLí
[variantField] > 0) {

622 
v¨ü¡Begö
 = (
öt32_t
)(
fõld
[
v¨ü¡Fõld
] - 
fuŒName
);

626  *
this
;

630 
	`£tToBogus
();

632  *
this
;

633 
	}
}

635 
öt32_t


636 
	gLoˇÀ
::
	$hashCode
() const

638 
UHashTok
 
hashKey
;

639 
hashKey
.
poöãr
 = 
fuŒName
;

640  
	`uhash_hashCh¨s
(
hashKey
);

641 
	}
}

644 
	gLoˇÀ
::
	$£tToBogus
() {

646 if(
fuŒName
 !
fuŒNameBuf„r
) {

647 
	`u¥v_‰ì
(
fuŒName
);

648 
fuŒName
 = 
fuŒNameBuf„r
;

650 if(
ba£Name
 && ba£Namê!
ba£NameBuf„r
) {

651 
	`u¥v_‰ì
(
ba£Name
);

652 
ba£Name
 = 
NULL
;

654 *
fuŒNameBuf„r
 = 0;

655 *
œnguage
 = 0;

656 *
s¸ùt
 = 0;

657 *
cou¡ry
 = 0;

658 
fIsBogus
 = 
TRUE
;

659 
	}
}

661 c⁄° 
	gLoˇÀ
& 
U_EXPORT2


662 
	gLoˇÀ
::
	$gëDeÁu…
()

664 c⁄° 
LoˇÀ
 *
ªtLoˇÀ
;

665 
	`UMTX_CHECK
(
NULL
, 
gDeÁu…LoˇÀ
, 
ªtLoˇÀ
);

666 i‡(
ªtLoˇÀ
 =
NULL
) {

667 
	`loˇÀ_£t_deÁu…_öã∫Æ
(
NULL
);

668 
	`umtx_lock
(
NULL
);

673 
ªtLoˇÀ
 = 
gDeÁu…LoˇÀ
;

674 
	`umtx_u∆ock
(
NULL
);

676  *
ªtLoˇÀ
;

677 
	}
}

681 
U_EXPORT2


682 
	gLoˇÀ
::
	$£tDeÁu…
–c⁄° 
LoˇÀ
& 
√wLoˇÀ
,

683 
UEº‹Code
& 
°©us
)

685 i‡(
	`U_FAILURE
(
°©us
)) {

692 c⁄° *
loˇÀID
 = 
√wLoˇÀ
.
	`gëName
();

693 
	`loˇÀ_£t_deÁu…_öã∫Æ
(
loˇÀID
);

694 
	}
}

696 
LoˇÀ
 
U_EXPORT2


697 
	gLoˇÀ
::
	$¸óãFromName
 (c⁄° *
«me
)

699 i‡(
«me
) {

700 
LoˇÀ
 
	`l
("");

701 
l
.
	`öô
(
«me
, 
FALSE
);

702  
l
;

705  
	`gëDeÁu…
();

707 
	}
}

709 
LoˇÀ
 
U_EXPORT2


710 
	gLoˇÀ
::
	$¸óãC™⁄iˇl
(c⁄° * 
«me
) {

711 
LoˇÀ
 
	`loc
("");

712 
loc
.
	`öô
(
«me
, 
TRUE
);

713  
loc
;

714 
	}
}

717 
	gLoˇÀ
::
	$gëISO3L™guage
() const

719  
	`uloc_gëISO3L™guage
(
fuŒName
);

720 
	}
}

724 
	gLoˇÀ
::
	$gëISO3Cou¡ry
() const

726  
	`uloc_gëISO3Cou¡ry
(
fuŒName
);

727 
	}
}

736 
uöt32_t


737 
	gLoˇÀ
::
	$gëLCID
() const

739  
	`uloc_gëLCID
(
fuŒName
);

740 
	}
}

742 c⁄° * c⁄°* 
U_EXPORT2
 
	gLoˇÀ
::
	$gëISOCou¡rõs
()

744  
	`uloc_gëISOCou¡rõs
();

745 
	}
}

747 c⁄° * c⁄°* 
U_EXPORT2
 
	gLoˇÀ
::
	$gëISOL™guages
()

749  
	`uloc_gëISOL™guages
();

750 
	}
}

753 
	gLoˇÀ
::
	$£tFromPOSIXID
(c⁄° *
posixID
)

755 
	`öô
(
posixID
, 
TRUE
);

756 
	}
}

758 c⁄° 
	gLoˇÀ
 & 
U_EXPORT2


759 
	gLoˇÀ
::
	$gëRoŸ
()

761  
	`gëLoˇÀ
(
eROOT
);

762 
	}
}

764 c⁄° 
	gLoˇÀ
 & 
U_EXPORT2


765 
	gLoˇÀ
::
	$gëEnglish
()

767  
	`gëLoˇÀ
(
eENGLISH
);

768 
	}
}

770 c⁄° 
	gLoˇÀ
 & 
U_EXPORT2


771 
	gLoˇÀ
::
	$gëFªnch
()

773  
	`gëLoˇÀ
(
eFRENCH
);

774 
	}
}

776 c⁄° 
	gLoˇÀ
 & 
U_EXPORT2


777 
	gLoˇÀ
::
	$gëGîm™
()

779  
	`gëLoˇÀ
(
eGERMAN
);

780 
	}
}

782 c⁄° 
	gLoˇÀ
 & 
U_EXPORT2


783 
	gLoˇÀ
::
	$gëIèlün
()

785  
	`gëLoˇÀ
(
eITALIAN
);

786 
	}
}

788 c⁄° 
	gLoˇÀ
 & 
U_EXPORT2


789 
	gLoˇÀ
::
	$gëJ≠™e£
()

791  
	`gëLoˇÀ
(
eJAPANESE
);

792 
	}
}

794 c⁄° 
	gLoˇÀ
 & 
U_EXPORT2


795 
	gLoˇÀ
::
	$gëK‹ón
()

797  
	`gëLoˇÀ
(
eKOREAN
);

798 
	}
}

800 c⁄° 
	gLoˇÀ
 & 
U_EXPORT2


801 
	gLoˇÀ
::
	$gëChöe£
()

803  
	`gëLoˇÀ
(
eCHINESE
);

804 
	}
}

806 c⁄° 
	gLoˇÀ
 & 
U_EXPORT2


807 
	gLoˇÀ
::
	$gëSim∂ifõdChöe£
()

809  
	`gëLoˇÀ
(
eCHINA
);

810 
	}
}

812 c⁄° 
	gLoˇÀ
 & 
U_EXPORT2


813 
	gLoˇÀ
::
	$gëTødôi⁄ÆChöe£
()

815  
	`gëLoˇÀ
(
eTAIWAN
);

816 
	}
}

819 c⁄° 
	gLoˇÀ
 & 
U_EXPORT2


820 
	gLoˇÀ
::
	$gëFøn˚
()

822  
	`gëLoˇÀ
(
eFRANCE
);

823 
	}
}

825 c⁄° 
	gLoˇÀ
 & 
U_EXPORT2


826 
	gLoˇÀ
::
	$gëGîm™y
()

828  
	`gëLoˇÀ
(
eGERMANY
);

829 
	}
}

831 c⁄° 
	gLoˇÀ
 & 
U_EXPORT2


832 
	gLoˇÀ
::
	$gëIèly
()

834  
	`gëLoˇÀ
(
eITALY
);

835 
	}
}

837 c⁄° 
	gLoˇÀ
 & 
U_EXPORT2


838 
	gLoˇÀ
::
	$gëJ≠™
()

840  
	`gëLoˇÀ
(
eJAPAN
);

841 
	}
}

843 c⁄° 
	gLoˇÀ
 & 
U_EXPORT2


844 
	gLoˇÀ
::
	$gëK‹ó
()

846  
	`gëLoˇÀ
(
eKOREA
);

847 
	}
}

849 c⁄° 
	gLoˇÀ
 & 
U_EXPORT2


850 
	gLoˇÀ
::
	$gëChöa
()

852  
	`gëLoˇÀ
(
eCHINA
);

853 
	}
}

855 c⁄° 
	gLoˇÀ
 & 
U_EXPORT2


856 
	gLoˇÀ
::
	$gëPRC
()

858  
	`gëLoˇÀ
(
eCHINA
);

859 
	}
}

861 c⁄° 
	gLoˇÀ
 & 
U_EXPORT2


862 
	gLoˇÀ
::
	$gëTaiw™
()

864  
	`gëLoˇÀ
(
eTAIWAN
);

865 
	}
}

867 c⁄° 
	gLoˇÀ
 & 
U_EXPORT2


868 
	gLoˇÀ
::
	$gëUK
()

870  
	`gëLoˇÀ
(
eUK
);

871 
	}
}

873 c⁄° 
	gLoˇÀ
 & 
U_EXPORT2


874 
	gLoˇÀ
::
	$gëUS
()

876  
	`gëLoˇÀ
(
eUS
);

877 
	}
}

879 c⁄° 
	gLoˇÀ
 & 
U_EXPORT2


880 
	gLoˇÀ
::
	$gëC™ada
()

882  
	`gëLoˇÀ
(
eCANADA
);

883 
	}
}

885 c⁄° 
	gLoˇÀ
 & 
U_EXPORT2


886 
	gLoˇÀ
::
	$gëC™adaFªnch
()

888  
	`gëLoˇÀ
(
eCANADA_FRENCH
);

889 
	}
}

891 c⁄° 
	gLoˇÀ
 &

892 
	gLoˇÀ
::
	$gëLoˇÀ
(
locid
)

894 
LoˇÀ
 *
loˇÀCache
 = 
	`gëLoˇÀCache
();

895 
	`U_ASSERT
((
locid
 < 
eMAX_LOCALES
)&&(locid>=0));

896 i‡(
loˇÀCache
 =
NULL
) {

899 
locid
 = 0;

901  
loˇÀCache
[
locid
];

902 
	}
}

908 
LoˇÀ
 *

909 
	gLoˇÀ
::
	$gëLoˇÀCache
()

911 
	`umtx_lock
(
NULL
);

912 
UBoﬁ
 
√edInô
 = (
gLoˇÀCache
 =
NULL
);

913 
	`umtx_u∆ock
(
NULL
);

915 i‡(
√edInô
) {

916 
LoˇÀ
 *
tLoˇÀCache
 = 
√w
 LoˇÀ[()
eMAX_LOCALES
];

917 i‡(
tLoˇÀCache
 =
NULL
) {

918  
NULL
;

920 
tLoˇÀCache
[
eROOT
] = 
	`LoˇÀ
("");

921 
tLoˇÀCache
[
eENGLISH
] = 
	`LoˇÀ
("en");

922 
tLoˇÀCache
[
eFRENCH
] = 
	`LoˇÀ
("fr");

923 
tLoˇÀCache
[
eGERMAN
] = 
	`LoˇÀ
("de");

924 
tLoˇÀCache
[
eITALIAN
] = 
	`LoˇÀ
("it");

925 
tLoˇÀCache
[
eJAPANESE
] = 
	`LoˇÀ
("ja");

926 
tLoˇÀCache
[
eKOREAN
] = 
	`LoˇÀ
("ko");

927 
tLoˇÀCache
[
eCHINESE
] = 
	`LoˇÀ
("zh");

928 
tLoˇÀCache
[
eFRANCE
] = 
	`LoˇÀ
("fr", "FR");

929 
tLoˇÀCache
[
eGERMANY
] = 
	`LoˇÀ
("de", "DE");

930 
tLoˇÀCache
[
eITALY
] = 
	`LoˇÀ
("it", "IT");

931 
tLoˇÀCache
[
eJAPAN
] = 
	`LoˇÀ
("ja", "JP");

932 
tLoˇÀCache
[
eKOREA
] = 
	`LoˇÀ
("ko", "KR");

933 
tLoˇÀCache
[
eCHINA
] = 
	`LoˇÀ
("zh", "CN");

934 
tLoˇÀCache
[
eTAIWAN
] = 
	`LoˇÀ
("zh", "TW");

935 
tLoˇÀCache
[
eUK
] = 
	`LoˇÀ
("en", "GB");

936 
tLoˇÀCache
[
eUS
] = 
	`LoˇÀ
("en", "US");

937 
tLoˇÀCache
[
eCANADA
] = 
	`LoˇÀ
("en", "CA");

938 
tLoˇÀCache
[
eCANADA_FRENCH
] = 
	`LoˇÀ
("fr", "CA");

940 
	`umtx_lock
(
NULL
);

941 i‡(
gLoˇÀCache
 =
NULL
) {

942 
gLoˇÀCache
 = 
tLoˇÀCache
;

943 
tLoˇÀCache
 = 
NULL
;

944 
	`u˛n_comm⁄_ªgi°îCÀ™up
(
UCLN_COMMON_LOCALE
, 
loˇÀ_˛ónup
);

946 
	`umtx_u∆ock
(
NULL
);

947 i‡(
tLoˇÀCache
) {

948 
dñëe
 [] 
tLoˇÀCache
;

951  
gLoˇÀCache
;

952 
	}
}

954 ˛as†
	cKeyw‹dEnumî©i⁄
 : 
public
 
SåögEnumî©i⁄
 {

955 
¥iv©e
:

956 *
keyw‹ds
;

957 *
	mcuºít
;

958 
öt32_t
 
	mÀngth
;

959 
UnicodeSåög
 
	mcuºUSKey
;

960 c⁄° 
	mfgCœssID
;

962 
	mpublic
:

963 
UCœssID
 
U_EXPORT2
 
	$gëSèticCœssID
(Ë{  (
UCœssID
)&
fgCœssID
; }

964 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
(Ëc⁄° {  
	`gëSèticCœssID
(); 
	}
}

965 
	gpublic
:

966 
	$Keyw‹dEnumî©i⁄
(c⁄° *
keys
, 
öt32_t
 
keyw‹dLí
, i¡32_à
cuºítIndex
, 
UEº‹Code
 &
°©us
)

967 : 
	`keyw‹ds
((*)&
fgCœssID
), 
	`cuºít
((*)&fgCœssID), 
	$Àngth
(0) {

968 if(
	`U_SUCCESS
(
°©us
Ë&& 
keyw‹dLí
 != 0) {

969 if(
keys
 =
NULL
 || 
keyw‹dLí
 < 0) {

970 
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

972 
keyw‹ds
 = (*)
	`u¥v_mÆloc
(
keyw‹dLí
+1);

973 i‡(
keyw‹ds
 =
NULL
) {

974 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

977 
	`u¥v_mem˝y
(
keyw‹ds
, 
keys
, 
keyw‹dLí
);

978 
keyw‹ds
[
keyw‹dLí
] = 0;

979 
cuºít
 = 
keyw‹ds
 + 
cuºítIndex
;

980 
Àngth
 = 
keyw‹dLí
;

984 
	}
}

986 
	gvútuÆ
 ~
	$Keyw‹dEnumî©i⁄
() {

987 
	`u¥v_‰ì
(
keyw‹ds
);

988 
	}
}

990 
vútuÆ
 
SåögEnumî©i⁄
 * 
	$˛⁄e
() const

992 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

993  
√w
 
	`Keyw‹dEnumî©i⁄
(
keyw‹ds
, 
Àngth
, (
öt32_t
)(
cuºít
 - keyw‹ds), 
°©us
);

994 
	}
}

996 
vútuÆ
 
öt32_t
 
	$cou¡
(
UEº‹Code
 & ) const {

997 *
kw
 = 
keyw‹ds
;

998 
öt32_t
 
ªsu…
 = 0;

999 *
kw
) {

1000 
ªsu…
++;

1001 
kw
 +
	`u¥v_°æí
(kw)+1;

1003  
ªsu…
;

1004 
	}
}

1006 
vútuÆ
 c⁄° * 
	$√xt
(
öt32_t
* 
ªsu…Lígth
, 
UEº‹Code
& 
°©us
) {

1007 c⁄° * 
ªsu…
;

1008 
öt32_t
 
Àn
;

1009 if(
	`U_SUCCESS
(
°©us
Ë&& *
cuºít
 != 0) {

1010 
ªsu…
 = 
cuºít
;

1011 
Àn
 = (
öt32_t
)
	`u¥v_°æí
(
cuºít
);

1012 
cuºít
 +
Àn
+1;

1013 if(
ªsu…Lígth
 !
NULL
) {

1014 *
ªsu…Lígth
 = 
Àn
;

1017 if(
ªsu…Lígth
 !
NULL
) {

1018 *
ªsu…Lígth
 = 0;

1020 
ªsu…
 = 
NULL
;

1022  
ªsu…
;

1023 
	}
}

1025 
vútuÆ
 c⁄° 
UnicodeSåög
* 
	$¢ext
(
UEº‹Code
& 
°©us
) {

1026 
öt32_t
 
ªsu…Lígth
 = 0;

1027 c⁄° *
s
 = 
	`√xt
(&
ªsu…Lígth
, 
°©us
);

1028  
	`£tCh¨s
(
s
, 
ªsu…Lígth
, 
°©us
);

1029 
	}
}

1031 
vútuÆ
 
	$ª£t
(
UEº‹Code
& ) {

1032 
cuºít
 = 
keyw‹ds
;

1033 
	}
}

1036 c⁄° 
	gKeyw‹dEnumî©i⁄
::
fgCœssID
 = '\0';

1038 
SåögEnumî©i⁄
 *

1039 
	gLoˇÀ
::
	$¸óãKeyw‹ds
(
UEº‹Code
 &
°©us
) const

1041 
keyw‹ds
[256];

1042 
öt32_t
 
keyw‹dC≠acôy
 = 256;

1043 
SåögEnumî©i⁄
 *
ªsu…
 = 
NULL
;

1045 c⁄° * 
v¨ü¡Sèπ
 = 
	`u¥v_°rchr
(
fuŒName
, '@');

1046 c⁄° * 
assignmít
 = 
	`u¥v_°rchr
(
fuŒName
, '=');

1047 if(
v¨ü¡Sèπ
) {

1048 if(
assignmít
 > 
v¨ü¡Sèπ
) {

1049 
öt32_t
 
keyLí
 = 
	`loˇÀ_gëKeyw‹ds
(
v¨ü¡Sèπ
+1, '@', 
keyw‹ds
, 
keyw‹dC≠acôy
, 
NULL
, 0, NULL, 
FALSE
, &
°©us
);

1050 if(
keyLí
) {

1051 
ªsu…
 = 
√w
 
	`Keyw‹dEnumî©i⁄
(
keyw‹ds
, 
keyLí
, 0, 
°©us
);

1054 
°©us
 = 
U_INVALID_FORMAT_ERROR
;

1057  
ªsu…
;

1058 
	}
}

1060 
öt32_t


1061 
	gLoˇÀ
::
	$gëKeyw‹dVÆue
(c⁄° * 
keyw‹dName
, *
buf„r
, 
öt32_t
 
bufLí
, 
UEº‹Code
 &
°©us
) const

1063  
	`uloc_gëKeyw‹dVÆue
(
fuŒName
, 
keyw‹dName
, 
buf„r
, 
bufLí
, &
°©us
);

1064 
	}
}

1067 
	gLoˇÀ
::
	$£tKeyw‹dVÆue
(c⁄° * 
keyw‹dName
, c⁄° * 
keyw‹dVÆue
, 
UEº‹Code
 &
°©us
)

1069 
	`uloc_£tKeyw‹dVÆue
(
keyw‹dName
, 
keyw‹dVÆue
, 
fuŒName
, 
ULOC_FULLNAME_CAPACITY
, &
°©us
);

1070 
	}
}

1073 
	gLoˇÀ
::
	$gëBa£Name
() const

1076 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

1078 if(
ba£Name
 == 0) {

1079 ((
LoˇÀ
 *)
this
)->
ba£Name
 = ((LoˇÀ *Èhis)->
ba£NameBuf„r
;

1080 
öt32_t
 
ba£NameSize
 = 
	`uloc_gëBa£Name
(
fuŒName
, 
ba£Name
, 
ULOC_FULLNAME_CAPACITY
, &
°©us
);

1081 if(
ba£NameSize
 >
ULOC_FULLNAME_CAPACITY
) {

1082 ((
LoˇÀ
 *)
this
)->
ba£Name
 = (*)
	`u¥v_mÆloc
((Ë* 
ba£NameSize
 + 1);

1083 i‡(
ba£Name
 =
NULL
) {

1084  
ba£Name
;

1086 
	`uloc_gëBa£Name
(
fuŒName
, 
ba£Name
, 
ba£NameSize
+1, &
°©us
);

1088 
ba£Name
[
ba£NameSize
] = 0;

1093 i‡(
v¨ü¡Begö
 =(
öt32_t
)
	`u¥v_°æí
(
fuŒName
)) {

1094 ((
LoˇÀ
*)
this
)->
v¨ü¡Begö
 = 
ba£NameSize
;

1097  
ba£Name
;

1098 
	}
}

1101 
	gU_NAMESPACE_END


	@loclikely.cpp

20 
	~"unicode/uty≥s.h
"

21 
	~"unicode/putû.h
"

22 
	~"unicode/uloc.h
"

23 
	~"unicode/uªs.h
"

24 
	~"cmem‹y.h
"

25 
	~"c°rög.h
"

26 
	~"ulocimp.h
"

27 
	~"u°r_imp.h
"

37 c⁄° * 
U_CALLCONV


38 
	$födLikñySubègs
(c⁄° * 
loˇÀID
,

39 * 
buf„r
,

40 
öt32_t
 
buf„rLígth
,

41 
UEº‹Code
* 
îr
) {

42 c⁄° * 
ªsu…
 = 
NULL
;

44 i‡(!
	`U_FAILURE
(*
îr
)) {

45 
öt32_t
 
ªsLí
 = 0;

46 c⁄° 
UCh¨
* 
s
 = 
NULL
;

47 
UEº‹Code
 
tmpEº
 = 
U_ZERO_ERROR
;

48 
UResour˚BundÀ
* 
subègs
 = 
	`uªs_›íDúe˘
(
NULL
, "likñySubègs", &
tmpEº
);

49 i‡(
	`U_SUCCESS
(
tmpEº
)) {

50 
s
 = 
	`uªs_gëSåögByKey
(
subègs
, 
loˇÀID
, &
ªsLí
, &
tmpEº
);

52 i‡(
	`U_FAILURE
(
tmpEº
)) {

57 i‡(
tmpEº
 !
U_MISSING_RESOURCE_ERROR
) {

58 *
îr
 = 
tmpEº
;

61 i‡(
ªsLí
 >
buf„rLígth
) {

63 *
îr
 = 
U_INTERNAL_PROGRAM_ERROR
;

66 
	`u_UCh¨sToCh¨s
(
s
, 
buf„r
, 
ªsLí
 + 1);

67 
ªsu…
 = 
buf„r
;

70 
	`uªs_˛o£
(
subègs
);

72 *
îr
 = 
tmpEº
;

76  
ªsu…
;

77 
	}
}

89 
U_CALLCONV


90 
	$≠≥ndTag
(

91 c⁄° * 
èg
,

92 
öt32_t
 
ègLígth
,

93 * 
buf„r
,

94 
öt32_t
* 
buf„rLígth
) {

96 i‡(*
buf„rLígth
 > 0) {

97 
buf„r
[*
buf„rLígth
] = '_';

98 ++(*
buf„rLígth
);

101 
	`u¥v_memmove
(

102 &
buf„r
[*
buf„rLígth
],

103 
èg
,

104 
ègLígth
);

106 *
buf„rLígth
 +
ègLígth
;

107 
	}
}

112 c⁄° * c⁄° 
	gunknownL™guage
 = "und";

113 c⁄° * c⁄° 
	gunknownS¸ùt
 = "Zzzz";

114 c⁄° * c⁄° 
	gunknownRegi⁄
 = "ZZ";

150 
öt32_t
 
U_CALLCONV


151 
	$¸óãTagSåögWôhA…î«ãs
(

152 c⁄° * 
œng
,

153 
öt32_t
 
œngLígth
,

154 c⁄° * 
s¸ùt
,

155 
öt32_t
 
s¸ùtLígth
,

156 c⁄° * 
ªgi⁄
,

157 
öt32_t
 
ªgi⁄Lígth
,

158 c⁄° * 
åaûög
,

159 
öt32_t
 
åaûögLígth
,

160 c⁄° * 
Æã∫©eTags
,

161 * 
èg
,

162 
öt32_t
 
ègC≠acôy
,

163 
UEº‹Code
* 
îr
) {

165 i‡(
	`U_FAILURE
(*
îr
)) {

166 
îr‹
;

168 i‡(
èg
 =
NULL
 ||

169 
ègC≠acôy
 <= 0 ||

170 
œngLígth
 >
ULOC_LANG_CAPACITY
 ||

171 
s¸ùtLígth
 >
ULOC_SCRIPT_CAPACITY
 ||

172 
ªgi⁄Lígth
 >
ULOC_COUNTRY_CAPACITY
) {

173 
îr‹
;

182 
ègBuf„r
[
ULOC_FULLNAME_CAPACITY
];

183 
öt32_t
 
ègLígth
 = 0;

184 
öt32_t
 
ˇ∑côyRemaöög
 = 
ègC≠acôy
;

185 
UBoﬁ
 
ªgi⁄Aµíded
 = 
FALSE
;

187 i‡(
œngLígth
 > 0) {

188 
	`≠≥ndTag
(

189 
œng
,

190 
œngLígth
,

191 
ègBuf„r
,

192 &
ègLígth
);

194 i‡(
Æã∫©eTags
 =
NULL
) {

199 
	`≠≥ndTag
(

200 
unknownL™guage
,

201 (
öt32_t
)
	`u¥v_°æí
(
unknownL™guage
),

202 
ègBuf„r
,

203 &
ègLígth
);

209 
Æã∫©eL™g
[
ULOC_LANG_CAPACITY
];

210 
öt32_t
 
Æã∫©eL™gLígth
 = (
Æã∫©eL™g
);

212 
Æã∫©eL™gLígth
 =

213 
	`uloc_gëL™guage
(

214 
Æã∫©eTags
,

215 
Æã∫©eL™g
,

216 
Æã∫©eL™gLígth
,

217 
îr
);

218 if(
	`U_FAILURE
(*
îr
) ||

219 
Æã∫©eL™gLígth
 >
ULOC_LANG_CAPACITY
) {

220 
îr‹
;

222 i‡(
Æã∫©eL™gLígth
 == 0) {

227 
	`≠≥ndTag
(

228 
unknownL™guage
,

229 (
öt32_t
)
	`u¥v_°æí
(
unknownL™guage
),

230 
ègBuf„r
,

231 &
ègLígth
);

234 
	`≠≥ndTag
(

235 
Æã∫©eL™g
,

236 
Æã∫©eL™gLígth
,

237 
ègBuf„r
,

238 &
ègLígth
);

242 i‡(
s¸ùtLígth
 > 0) {

243 
	`≠≥ndTag
(

244 
s¸ùt
,

245 
s¸ùtLígth
,

246 
ègBuf„r
,

247 &
ègLígth
);

249 i‡(
Æã∫©eTags
 !
NULL
) {

253 
Æã∫©eS¸ùt
[
ULOC_SCRIPT_CAPACITY
];

255 c⁄° 
öt32_t
 
Æã∫©eS¸ùtLígth
 =

256 
	`uloc_gëS¸ùt
(

257 
Æã∫©eTags
,

258 
Æã∫©eS¸ùt
,

259 (
Æã∫©eS¸ùt
),

260 
îr
);

262 i‡(
	`U_FAILURE
(*
îr
) ||

263 
Æã∫©eS¸ùtLígth
 >
ULOC_SCRIPT_CAPACITY
) {

264 
îr‹
;

266 i‡(
Æã∫©eS¸ùtLígth
 > 0) {

267 
	`≠≥ndTag
(

268 
Æã∫©eS¸ùt
,

269 
Æã∫©eS¸ùtLígth
,

270 
ègBuf„r
,

271 &
ègLígth
);

275 i‡(
ªgi⁄Lígth
 > 0) {

276 
	`≠≥ndTag
(

277 
ªgi⁄
,

278 
ªgi⁄Lígth
,

279 
ègBuf„r
,

280 &
ègLígth
);

282 
ªgi⁄Aµíded
 = 
TRUE
;

284 i‡(
Æã∫©eTags
 !
NULL
) {

288 
Æã∫©eRegi⁄
[
ULOC_COUNTRY_CAPACITY
];

290 c⁄° 
öt32_t
 
Æã∫©eRegi⁄Lígth
 =

291 
	`uloc_gëCou¡ry
(

292 
Æã∫©eTags
,

293 
Æã∫©eRegi⁄
,

294 (
Æã∫©eRegi⁄
),

295 
îr
);

296 i‡(
	`U_FAILURE
(*
îr
) ||

297 
Æã∫©eRegi⁄Lígth
 >
ULOC_COUNTRY_CAPACITY
) {

298 
îr‹
;

300 i‡(
Æã∫©eRegi⁄Lígth
 > 0) {

301 
	`≠≥ndTag
(

302 
Æã∫©eRegi⁄
,

303 
Æã∫©eRegi⁄Lígth
,

304 
ègBuf„r
,

305 &
ègLígth
);

307 
ªgi⁄Aµíded
 = 
TRUE
;

312 c⁄° 
öt32_t
 
toC›y
 =

313 
ègLígth
 >
ègC≠acôy
 ?ÅagCapacity :ÅagLength;

319 
	`u¥v_mem˝y
(

320 
èg
,

321 
ègBuf„r
,

322 
toC›y
);

324 
ˇ∑côyRemaöög
 -
toC›y
;

327 i‡(
åaûögLígth
 > 0) {

328 i‡(
ˇ∑côyRemaöög
 > 0 && !
ªgi⁄Aµíded
) {

329 
èg
[
ègLígth
++] = '_';

330 --
ˇ∑côyRemaöög
;

333 i‡(
ˇ∑côyRemaöög
 > 0) {

338 c⁄° 
öt32_t
 
toC›y
 =

339 
åaûögLígth
 >
ˇ∑côyRemaöög
 ? capacityRemaining :ÅrailingLength;

341 
	`u¥v_memmove
(

342 &
èg
[
ègLígth
],

343 
åaûög
,

344 
toC›y
);

348 
ègLígth
 +
åaûögLígth
;

350  
	`u_ãrmö©eCh¨s
(

351 
èg
,

352 
ègC≠acôy
,

353 
ègLígth
,

354 
îr
);

357 
îr‹
:

364 i‡(*
îr
 =
U_BUFFER_OVERFLOW_ERROR
 ||

365 
	`U_SUCCESS
(*
îr
)) {

366 *
îr
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

370 
	}
}

398 
öt32_t
 
U_CALLCONV


399 
	$¸óãTagSåög
(

400 c⁄° * 
œng
,

401 
öt32_t
 
œngLígth
,

402 c⁄° * 
s¸ùt
,

403 
öt32_t
 
s¸ùtLígth
,

404 c⁄° * 
ªgi⁄
,

405 
öt32_t
 
ªgi⁄Lígth
,

406 c⁄° * 
åaûög
,

407 
öt32_t
 
åaûögLígth
,

408 * 
èg
,

409 
öt32_t
 
ègC≠acôy
,

410 
UEº‹Code
* 
îr
)

412  
	`¸óãTagSåögWôhA…î«ãs
(

413 
œng
,

414 
œngLígth
,

415 
s¸ùt
,

416 
s¸ùtLígth
,

417 
ªgi⁄
,

418 
ªgi⁄Lígth
,

419 
åaûög
,

420 
åaûögLígth
,

421 
NULL
,

422 
èg
,

423 
ègC≠acôy
,

424 
îr
);

425 
	}
}

455 
öt32_t
 
U_CALLCONV


456 
	$∑r£TagSåög
(

457 c⁄° * 
loˇÀID
,

458 * 
œng
,

459 
öt32_t
* 
œngLígth
,

460 * 
s¸ùt
,

461 
öt32_t
* 
s¸ùtLígth
,

462 * 
ªgi⁄
,

463 
öt32_t
* 
ªgi⁄Lígth
,

464 
UEº‹Code
* 
îr
)

466 c⁄° * 
posôi⁄
 = 
loˇÀID
;

467 
öt32_t
 
subègLígth
 = 0;

469 if(
	`U_FAILURE
(*
îr
) ||

470 
loˇÀID
 =
NULL
 ||

471 
œng
 =
NULL
 ||

472 
œngLígth
 =
NULL
 ||

473 
s¸ùt
 =
NULL
 ||

474 
s¸ùtLígth
 =
NULL
 ||

475 
ªgi⁄
 =
NULL
 ||

476 
ªgi⁄Lígth
 =
NULL
) {

477 
îr‹
;

480 
subègLígth
 = 
	`ulocimp_gëL™guage
(
posôi⁄
, 
œng
, *
œngLígth
, &position);

481 
	`u_ãrmö©eCh¨s
(
œng
, *
œngLígth
, 
subègLígth
, 
îr
);

488 if(
	`U_FAILURE
(*
îr
)) {

489 
îr‹
;

492 *
œngLígth
 = 
subègLígth
;

498 i‡(*
œngLígth
 == 0) {

499 
	`u¥v_°r˝y
(

500 
œng
,

501 
unknownL™guage
);

502 *
œngLígth
 = (
öt32_t
)
	`u¥v_°æí
(
œng
);

504 i‡(
	`_isIDSï¨©‹
(*
posôi⁄
)) {

505 ++
posôi⁄
;

508 
subègLígth
 = 
	`ulocimp_gëS¸ùt
(
posôi⁄
, 
s¸ùt
, *
s¸ùtLígth
, &position);

509 
	`u_ãrmö©eCh¨s
(
s¸ùt
, *
s¸ùtLígth
, 
subègLígth
, 
îr
);

511 if(
	`U_FAILURE
(*
îr
)) {

512 
îr‹
;

515 *
s¸ùtLígth
 = 
subègLígth
;

517 i‡(*
s¸ùtLígth
 > 0) {

518 i‡(
	`u¥v_°∫icmp
(
s¸ùt
, 
unknownS¸ùt
, *
s¸ùtLígth
) == 0) {

522 *
s¸ùtLígth
 = 0;

528 i‡(
	`_isIDSï¨©‹
(*
posôi⁄
)) {

529 ++
posôi⁄
;

533 
subègLígth
 = 
	`ulocimp_gëCou¡ry
(
posôi⁄
, 
ªgi⁄
, *
ªgi⁄Lígth
, &position);

534 
	`u_ãrmö©eCh¨s
(
ªgi⁄
, *
ªgi⁄Lígth
, 
subègLígth
, 
îr
);

536 if(
	`U_FAILURE
(*
îr
)) {

537 
îr‹
;

540 *
ªgi⁄Lígth
 = 
subègLígth
;

542 i‡(*
ªgi⁄Lígth
 > 0) {

543 i‡(
	`u¥v_°∫icmp
(
ªgi⁄
, 
unknownRegi⁄
, *
ªgi⁄Lígth
) == 0) {

547 *
ªgi⁄Lígth
 = 0;

551 
exô
:

553  (
öt32_t
)(
posôi⁄
 - 
loˇÀID
);

555 
îr‹
:

561 i‡(!
	`U_FAILURE
(*
îr
)) {

562 *
îr
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

565 
exô
;

566 
	}
}

568 
öt32_t
 
U_CALLCONV


569 
	$¸óãLikñySubègsSåög
(

570 c⁄° * 
œng
,

571 
öt32_t
 
œngLígth
,

572 c⁄° * 
s¸ùt
,

573 
öt32_t
 
s¸ùtLígth
,

574 c⁄° * 
ªgi⁄
,

575 
öt32_t
 
ªgi⁄Lígth
,

576 c⁄° * 
v¨ü¡s
,

577 
öt32_t
 
v¨ü¡sLígth
,

578 * 
èg
,

579 
öt32_t
 
ègC≠acôy
,

580 
UEº‹Code
* 
îr
)

588 
ègBuf„r
[
ULOC_FULLNAME_CAPACITY
];

589 
likñySubègsBuf„r
[
ULOC_FULLNAME_CAPACITY
];

590 
öt32_t
 
ègBuf„rLígth
 = 0;

592 if(
	`U_FAILURE
(*
îr
)) {

593 
îr‹
;

599 i‡(
s¸ùtLígth
 > 0 && 
ªgi⁄Lígth
 > 0) {

601 c⁄° * 
likñySubègs
 = 
NULL
;

603 
ègBuf„rLígth
 = 
	`¸óãTagSåög
(

604 
œng
,

605 
œngLígth
,

606 
s¸ùt
,

607 
s¸ùtLígth
,

608 
ªgi⁄
,

609 
ªgi⁄Lígth
,

610 
NULL
,

612 
ègBuf„r
,

613 (
ègBuf„r
),

614 
îr
);

615 if(
	`U_FAILURE
(*
îr
)) {

616 
îr‹
;

619 
likñySubègs
 =

620 
	`födLikñySubègs
(

621 
ègBuf„r
,

622 
likñySubègsBuf„r
,

623 (
likñySubègsBuf„r
),

624 
îr
);

625 if(
	`U_FAILURE
(*
îr
)) {

626 
îr‹
;

629 i‡(
likñySubègs
 !
NULL
) {

633  
	`¸óãTagSåögWôhA…î«ãs
(

634 
NULL
,

636 
NULL
,

638 
NULL
,

640 
v¨ü¡s
,

641 
v¨ü¡sLígth
,

642 
likñySubègs
,

643 
èg
,

644 
ègC≠acôy
,

645 
îr
);

652 i‡(
s¸ùtLígth
 > 0) {

654 c⁄° * 
likñySubègs
 = 
NULL
;

656 
ègBuf„rLígth
 = 
	`¸óãTagSåög
(

657 
œng
,

658 
œngLígth
,

659 
s¸ùt
,

660 
s¸ùtLígth
,

661 
NULL
,

663 
NULL
,

665 
ègBuf„r
,

666 (
ègBuf„r
),

667 
îr
);

668 if(
	`U_FAILURE
(*
îr
)) {

669 
îr‹
;

672 
likñySubègs
 =

673 
	`födLikñySubègs
(

674 
ègBuf„r
,

675 
likñySubègsBuf„r
,

676 (
likñySubègsBuf„r
),

677 
îr
);

678 if(
	`U_FAILURE
(*
îr
)) {

679 
îr‹
;

682 i‡(
likñySubègs
 !
NULL
) {

686  
	`¸óãTagSåögWôhA…î«ãs
(

687 
NULL
,

689 
NULL
,

691 
ªgi⁄
,

692 
ªgi⁄Lígth
,

693 
v¨ü¡s
,

694 
v¨ü¡sLígth
,

695 
likñySubègs
,

696 
èg
,

697 
ègC≠acôy
,

698 
îr
);

705 i‡(
ªgi⁄Lígth
 > 0) {

707 c⁄° * 
likñySubègs
 = 
NULL
;

709 
	`¸óãTagSåög
(

710 
œng
,

711 
œngLígth
,

712 
NULL
,

714 
ªgi⁄
,

715 
ªgi⁄Lígth
,

716 
NULL
,

718 
ègBuf„r
,

719 (
ègBuf„r
),

720 
îr
);

721 if(
	`U_FAILURE
(*
îr
)) {

722 
îr‹
;

725 
likñySubègs
 =

726 
	`födLikñySubègs
(

727 
ègBuf„r
,

728 
likñySubègsBuf„r
,

729 (
likñySubègsBuf„r
),

730 
îr
);

731 if(
	`U_FAILURE
(*
îr
)) {

732 
îr‹
;

735 i‡(
likñySubègs
 !
NULL
) {

739  
	`¸óãTagSåögWôhA…î«ãs
(

740 
NULL
,

742 
s¸ùt
,

743 
s¸ùtLígth
,

744 
NULL
,

746 
v¨ü¡s
,

747 
v¨ü¡sLígth
,

748 
likñySubègs
,

749 
èg
,

750 
ègC≠acôy
,

751 
îr
);

759 c⁄° * 
likñySubègs
 = 
NULL
;

761 
	`¸óãTagSåög
(

762 
œng
,

763 
œngLígth
,

764 
NULL
,

766 
NULL
,

768 
NULL
,

770 
ègBuf„r
,

771 (
ègBuf„r
),

772 
îr
);

773 if(
	`U_FAILURE
(*
îr
)) {

774 
îr‹
;

777 
likñySubègs
 =

778 
	`födLikñySubègs
(

779 
ègBuf„r
,

780 
likñySubègsBuf„r
,

781 (
likñySubègsBuf„r
),

782 
îr
);

783 if(
	`U_FAILURE
(*
îr
)) {

784 
îr‹
;

787 i‡(
likñySubègs
 !
NULL
) {

791  
	`¸óãTagSåögWôhA…î«ãs
(

792 
NULL
,

794 
s¸ùt
,

795 
s¸ùtLígth
,

796 
ªgi⁄
,

797 
ªgi⁄Lígth
,

798 
v¨ü¡s
,

799 
v¨ü¡sLígth
,

800 
likñySubègs
,

801 
èg
,

802 
ègC≠acôy
,

803 
îr
);

807  
	`u_ãrmö©eCh¨s
(

808 
èg
,

809 
ègC≠acôy
,

811 
îr
);

813 
îr‹
:

815 i‡(!
	`U_FAILURE
(*
îr
)) {

816 *
îr
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

820 
	}
}

822 
	#CHECK_TRAILING_VARIANT_SIZE
(
åaûög
, 
åaûögLígth
) \

823 { 
öt32_t
 
cou¡
 = 0; \

824 
öt32_t
 
i
; \

825 
i
 = 0; i < 
åaûögLígth
; i++) { \

826 i‡(
åaûög
[
i
] == '-' ||Årailing[i] == '_') { \

827 
cou¡
 = 0; \

828 i‡(
cou¡
 > 8) { \

829 
îr‹
; \

831 } i‡(
åaûög
[
i
] == '@') { \

833 } i‡(
cou¡
 > 8) { \

834 
îr‹
; \

836 
cou¡
++; \

839 }

	)

841 
öt32_t


842 
	$_uloc_addLikñySubègs
(c⁄° * 
loˇÀID
,

843 * 
maximizedLoˇÀID
,

844 
öt32_t
 
maximizedLoˇÀIDC≠acôy
,

845 
UEº‹Code
* 
îr
)

847 
œng
[
ULOC_LANG_CAPACITY
];

848 
öt32_t
 
œngLígth
 = (
œng
);

849 
s¸ùt
[
ULOC_SCRIPT_CAPACITY
];

850 
öt32_t
 
s¸ùtLígth
 = (
s¸ùt
);

851 
ªgi⁄
[
ULOC_COUNTRY_CAPACITY
];

852 
öt32_t
 
ªgi⁄Lígth
 = (
ªgi⁄
);

853 c⁄° * 
åaûög
 = "";

854 
öt32_t
 
åaûögLígth
 = 0;

855 
öt32_t
 
åaûögIndex
 = 0;

856 
öt32_t
 
ªsu…Lígth
 = 0;

858 if(
	`U_FAILURE
(*
îr
)) {

859 
îr‹
;

861 i‡(
loˇÀID
 =
NULL
 ||

862 
maximizedLoˇÀID
 =
NULL
 ||

863 
maximizedLoˇÀIDC≠acôy
 <= 0) {

864 
îr‹
;

867 
åaûögIndex
 = 
	`∑r£TagSåög
(

868 
loˇÀID
,

869 
œng
,

870 &
œngLígth
,

871 
s¸ùt
,

872 &
s¸ùtLígth
,

873 
ªgi⁄
,

874 &
ªgi⁄Lígth
,

875 
îr
);

876 if(
	`U_FAILURE
(*
îr
)) {

878 i‡(*
îr
 =
U_BUFFER_OVERFLOW_ERROR
) {

879 *
îr
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

882 
îr‹
;

886 
åaûög
 = &
loˇÀID
[
åaûögIndex
];

887 
åaûögLígth
 = (
öt32_t
)
	`u¥v_°æí
(
åaûög
);

889 
	`CHECK_TRAILING_VARIANT_SIZE
(
åaûög
, 
åaûögLígth
);

891 
ªsu…Lígth
 =

892 
	`¸óãLikñySubègsSåög
(

893 
œng
,

894 
œngLígth
,

895 
s¸ùt
,

896 
s¸ùtLígth
,

897 
ªgi⁄
,

898 
ªgi⁄Lígth
,

899 
åaûög
,

900 
åaûögLígth
,

901 
maximizedLoˇÀID
,

902 
maximizedLoˇÀIDC≠acôy
,

903 
îr
);

905 i‡(
ªsu…Lígth
 == 0) {

906 c⁄° 
öt32_t
 
loˇlIDLígth
 = (öt32_t)
	`u¥v_°æí
(
loˇÀID
);

911 
	`u¥v_mem˝y
(

912 
maximizedLoˇÀID
,

913 
loˇÀID
,

914 
loˇlIDLígth
 <
maximizedLoˇÀIDC≠acôy
 ?

915 
loˇlIDLígth
 : 
maximizedLoˇÀIDC≠acôy
);

917 
ªsu…Lígth
 =

918 
	`u_ãrmö©eCh¨s
(

919 
maximizedLoˇÀID
,

920 
maximizedLoˇÀIDC≠acôy
,

921 
loˇlIDLígth
,

922 
îr
);

925  
ªsu…Lígth
;

927 
îr‹
:

929 i‡(!
	`U_FAILURE
(*
îr
)) {

930 *
îr
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

934 
	}
}

936 
öt32_t


937 
	$_uloc_möimizeSubègs
(c⁄° * 
loˇÀID
,

938 * 
möimizedLoˇÀID
,

939 
öt32_t
 
möimizedLoˇÀIDC≠acôy
,

940 
UEº‹Code
* 
îr
)

948 
maximizedTagBuf„r
[
ULOC_FULLNAME_CAPACITY
];

949 
öt32_t
 
maximizedTagBuf„rLígth
 = (
maximizedTagBuf„r
);

951 
œng
[
ULOC_LANG_CAPACITY
];

952 
öt32_t
 
œngLígth
 = (
œng
);

953 
s¸ùt
[
ULOC_SCRIPT_CAPACITY
];

954 
öt32_t
 
s¸ùtLígth
 = (
s¸ùt
);

955 
ªgi⁄
[
ULOC_COUNTRY_CAPACITY
];

956 
öt32_t
 
ªgi⁄Lígth
 = (
ªgi⁄
);

957 c⁄° * 
åaûög
 = "";

958 
öt32_t
 
åaûögLígth
 = 0;

959 
öt32_t
 
åaûögIndex
 = 0;

961 if(
	`U_FAILURE
(*
îr
)) {

962 
îr‹
;

964 i‡(
loˇÀID
 =
NULL
 ||

965 
möimizedLoˇÀID
 =
NULL
 ||

966 
möimizedLoˇÀIDC≠acôy
 <= 0) {

967 
îr‹
;

970 
åaûögIndex
 =

971 
	`∑r£TagSåög
(

972 
loˇÀID
,

973 
œng
,

974 &
œngLígth
,

975 
s¸ùt
,

976 &
s¸ùtLígth
,

977 
ªgi⁄
,

978 &
ªgi⁄Lígth
,

979 
îr
);

980 if(
	`U_FAILURE
(*
îr
)) {

983 i‡(*
îr
 =
U_BUFFER_OVERFLOW_ERROR
) {

984 *
îr
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

987 
îr‹
;

991 
åaûög
 = &
loˇÀID
[
åaûögIndex
];

992 
åaûögLígth
 = (
öt32_t
)
	`u¥v_°æí
(
åaûög
);

994 
	`CHECK_TRAILING_VARIANT_SIZE
(
åaûög
, 
åaûögLígth
);

996 
	`¸óãTagSåög
(

997 
œng
,

998 
œngLígth
,

999 
s¸ùt
,

1000 
s¸ùtLígth
,

1001 
ªgi⁄
,

1002 
ªgi⁄Lígth
,

1003 
NULL
,

1005 
maximizedTagBuf„r
,

1006 
maximizedTagBuf„rLígth
,

1007 
îr
);

1008 if(
	`U_FAILURE
(*
îr
)) {

1009 
îr‹
;

1016 
maximizedTagBuf„rLígth
 =

1017 
	`uloc_addLikñySubègs
(

1018 
maximizedTagBuf„r
,

1019 
maximizedTagBuf„r
,

1020 
maximizedTagBuf„rLígth
,

1021 
îr
);

1023 if(
	`U_FAILURE
(*
îr
)) {

1024 
îr‹
;

1031 
ègBuf„r
[
ULOC_FULLNAME_CAPACITY
];

1033 c⁄° 
öt32_t
 
ègBuf„rLígth
 =

1034 
	`¸óãLikñySubègsSåög
(

1035 
œng
,

1036 
œngLígth
,

1037 
NULL
,

1039 
NULL
,

1041 
NULL
,

1043 
ègBuf„r
,

1044 (
ègBuf„r
),

1045 
îr
);

1047 if(
	`U_FAILURE
(*
îr
)) {

1048 
îr‹
;

1050 i‡(
	`u¥v_°∫icmp
(

1051 
maximizedTagBuf„r
,

1052 
ègBuf„r
,

1053 
ègBuf„rLígth
) == 0) {

1055  
	`¸óãTagSåög
(

1056 
œng
,

1057 
œngLígth
,

1058 
NULL
,

1060 
NULL
,

1062 
åaûög
,

1063 
åaûögLígth
,

1064 
möimizedLoˇÀID
,

1065 
möimizedLoˇÀIDC≠acôy
,

1066 
îr
);

1073 i‡(
ªgi⁄Lígth
 > 0) {

1075 
ègBuf„r
[
ULOC_FULLNAME_CAPACITY
];

1077 c⁄° 
öt32_t
 
ègBuf„rLígth
 =

1078 
	`¸óãLikñySubègsSåög
(

1079 
œng
,

1080 
œngLígth
,

1081 
NULL
,

1083 
ªgi⁄
,

1084 
ªgi⁄Lígth
,

1085 
NULL
,

1087 
ègBuf„r
,

1088 (
ègBuf„r
),

1089 
îr
);

1091 if(
	`U_FAILURE
(*
îr
)) {

1092 
îr‹
;

1094 i‡(
	`u¥v_°∫icmp
(

1095 
maximizedTagBuf„r
,

1096 
ègBuf„r
,

1097 
ègBuf„rLígth
) == 0) {

1099  
	`¸óãTagSåög
(

1100 
œng
,

1101 
œngLígth
,

1102 
NULL
,

1104 
ªgi⁄
,

1105 
ªgi⁄Lígth
,

1106 
åaûög
,

1107 
åaûögLígth
,

1108 
möimizedLoˇÀID
,

1109 
möimizedLoˇÀIDC≠acôy
,

1110 
îr
);

1119 i‡(
s¸ùtLígth
 > 0 && 
ªgi⁄Lígth
 > 0) {

1120 
ègBuf„r
[
ULOC_FULLNAME_CAPACITY
];

1122 c⁄° 
öt32_t
 
ègBuf„rLígth
 =

1123 
	`¸óãLikñySubègsSåög
(

1124 
œng
,

1125 
œngLígth
,

1126 
s¸ùt
,

1127 
s¸ùtLígth
,

1128 
NULL
,

1130 
NULL
,

1132 
ègBuf„r
,

1133 (
ègBuf„r
),

1134 
îr
);

1136 if(
	`U_FAILURE
(*
îr
)) {

1137 
îr‹
;

1139 i‡(
	`u¥v_°∫icmp
(

1140 
maximizedTagBuf„r
,

1141 
ègBuf„r
,

1142 
ègBuf„rLígth
) == 0) {

1144  
	`¸óãTagSåög
(

1145 
œng
,

1146 
œngLígth
,

1147 
s¸ùt
,

1148 
s¸ùtLígth
,

1149 
NULL
,

1151 
åaûög
,

1152 
åaûögLígth
,

1153 
möimizedLoˇÀID
,

1154 
möimizedLoˇÀIDC≠acôy
,

1155 
îr
);

1163 c⁄° 
öt32_t
 
loˇÀIDLígth
 = (öt32_t)
	`u¥v_°æí
(
loˇÀID
);

1165 
	`u¥v_mem˝y
(

1166 
möimizedLoˇÀID
,

1167 
loˇÀID
,

1168 
loˇÀIDLígth
 <
möimizedLoˇÀIDC≠acôy
 ?

1169 
loˇÀIDLígth
 : 
möimizedLoˇÀIDC≠acôy
);

1171  
	`u_ãrmö©eCh¨s
(

1172 
möimizedLoˇÀID
,

1173 
möimizedLoˇÀIDC≠acôy
,

1174 
loˇÀIDLígth
,

1175 
îr
);

1178 
îr‹
:

1180 i‡(!
	`U_FAILURE
(*
îr
)) {

1181 *
îr
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1187 
	}
}

1189 
UBoﬁ


1190 
	$do_ˇn⁄iˇlize
(c⁄° * 
loˇÀID
,

1191 * 
buf„r
,

1192 
öt32_t
 
buf„rC≠acôy
,

1193 
UEº‹Code
* 
îr
)

1195 
	`uloc_ˇn⁄iˇlize
(

1196 
loˇÀID
,

1197 
buf„r
,

1198 
buf„rC≠acôy
,

1199 
îr
);

1201 i‡(*
îr
 =
U_STRING_NOT_TERMINATED_WARNING
 ||

1202 *
îr
 =
U_BUFFER_OVERFLOW_ERROR
) {

1203 *
îr
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1205  
FALSE
;

1207 i‡(
	`U_FAILURE
(*
îr
)) {

1209  
FALSE
;

1212  
TRUE
;

1214 
	}
}

1216 
U_DRAFT
 
öt32_t
 
U_EXPORT2


1217 
	$uloc_addLikñySubègs
(c⁄° * 
loˇÀID
,

1218 * 
maximizedLoˇÀID
,

1219 
öt32_t
 
maximizedLoˇÀIDC≠acôy
,

1220 
UEº‹Code
* 
îr
)

1222 
loˇÀBuf„r
[
ULOC_FULLNAME_CAPACITY
];

1224 i‡(!
	`do_ˇn⁄iˇlize
(

1225 
loˇÀID
,

1226 
loˇÀBuf„r
,

1227 (
loˇÀBuf„r
),

1228 
îr
)) {

1232  
	`_uloc_addLikñySubègs
(

1233 
loˇÀBuf„r
,

1234 
maximizedLoˇÀID
,

1235 
maximizedLoˇÀIDC≠acôy
,

1236 
îr
);

1238 
	}
}

1240 
U_DRAFT
 
öt32_t
 
U_EXPORT2


1241 
	$uloc_möimizeSubègs
(c⁄° * 
loˇÀID
,

1242 * 
möimizedLoˇÀID
,

1243 
öt32_t
 
möimizedLoˇÀIDC≠acôy
,

1244 
UEº‹Code
* 
îr
)

1246 
loˇÀBuf„r
[
ULOC_FULLNAME_CAPACITY
];

1248 i‡(!
	`do_ˇn⁄iˇlize
(

1249 
loˇÀID
,

1250 
loˇÀBuf„r
,

1251 (
loˇÀBuf„r
),

1252 
îr
)) {

1256  
	`_uloc_möimizeSubègs
(

1257 
loˇÀBuf„r
,

1258 
möimizedLoˇÀID
,

1259 
möimizedLoˇÀIDC≠acôy
,

1260 
îr
);

1262 
	}
}

	@locmap.c

28 
	~"locm≠.h
"

29 
	~"unicode/uloc.h
"

30 
	~"c°rög.h
"

31 
	~"cmem‹y.h
"

33 #i‡
deföed
(
U_WINDOWS
Ë&& deföed(
_MSC_VER
) && (_MSC_VER >= 1500)

34 
	#USE_WINDOWS_LOCALE_API


	)

37 #ifde‡
USE_WINDOWS_LOCALE_API


38 
	~<wödows.h
>

39 
	~<wö∆s.h
>

59 
	sILcidPosixEÀmít


61 c⁄° 
uöt32_t
 
	mho°ID
;

62 c⁄° * c⁄° 
	mposixID
;

63 } 
	tILcidPosixEÀmít
;

65 
	sILcidPosixM≠


67 c⁄° 
uöt32_t
 
	mnumRegi⁄s
;

68 c⁄° 
ILcidPosixEÀmít
* c⁄° 
	mªgi⁄M≠s
;

69 } 
	tILcidPosixM≠
;

88 
	#ILCID_POSIX_ELEMENT_ARRAY
(
ho°ID
, 
œnguageID
, 
posixID
) \

89 c⁄° 
ILcidPosixEÀmít
 
locm≠_
 ## 
œnguageID
 [] = { \

90 {
	`LANGUAGE_LCID
(
ho°ID
), #languageID}, \

91 {
ho°ID
, #posixID}, \

92 };

	)

98 
	#ILCID_POSIX_SUBTABLE
(
id
) \

99 c⁄° 
ILcidPosixEÀmít
 
locm≠_
 ## 
id
 [] =

	)

108 
	#ILCID_POSIX_MAP
(
_posixID
) \

109 {(
locm≠_
 ## 
_posixID
)/(
ILcidPosixEÀmít
),Üocm≠_ ## _posixID}

	)

127 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0436, 
af
, 
af_ZA
)

129 
	$ILCID_POSIX_SUBTABLE
(
¨
) {

147 
	}
};

149 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x044d, 
as
, 
as_IN
)

150 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x045e, 
am
, 
am_ET
)

151 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x047a, 
¨n
,
¨n_CL
)

153 
	$ILCID_POSIX_SUBTABLE
(
az
) {

160 
	}
};

162 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x046d, 
ba
, 
ba_RU
)

163 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0423, 
be
, 
be_BY
)

165 
	$ILCID_POSIX_SUBTABLE
(
bî
) {

171 
	}
};

173 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0402, 
bg
, 
bg_BG
)

175 
	$ILCID_POSIX_SUBTABLE
(
bn
) {

179 
	}
};

181 
	$ILCID_POSIX_SUBTABLE
(
bo
) {

185 
	}
};

187 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x047e, 
br
, 
br_FR
)

188 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0403, 
ˇ
, 
ˇ_ES
)

189 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0483, 
co
, 
co_FR
)

190 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x045c, 
chr
,
chr_US
)

193 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0405, 
cs
, 
cs_CZ
)

195 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0452, 
cy
, 
cy_GB
)

196 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0406, 
da
, 
da_DK
)

198 
	$ILCID_POSIX_SUBTABLE
(
de
) {

207 
	}
};

209 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0465, 
dv
, 
dv_MV
)

210 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0408, 
ñ
, 
ñ_GR
)

212 
	$ILCID_POSIX_SUBTABLE
(
í
) {

237 
	}
};

239 
	$ILCID_POSIX_SUBTABLE
(
í_US_POSIX
) {

241 
	}
};

243 
	$ILCID_POSIX_SUBTABLE
(
es
) {

267 
	}
};

269 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0425, 
ë
, 
ë_EE
)

270 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x042d, 
eu
, 
eu_ES
)

273 
	$ILCID_POSIX_SUBTABLE
(
Á
) {

277 
	}
};

280 
	$ILCID_POSIX_SUBTABLE
(
Á_AF
) {

283 
	}
};

285 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x040b, 
fi
, 
fi_FI
)

286 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0464, 
fû
,
fû_PH
)

287 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0438, 
fo
, 
fo_FO
)

289 
	$ILCID_POSIX_SUBTABLE
(
‰
) {

305 
	}
};

307 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0462, 
fy
, 
fy_NL
)

310 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x083c, 
ga
, 
ga_IE
)

311 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0491, 
gd
, 
gd_GB
)

313 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0456, 
gl
, 
gl_ES
)

314 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0447, 
gu
, 
gu_IN
)

315 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0474, 
gn
, 
gn_PY
)

316 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0484, 
gsw
,
gsw_FR
)

318 
	$ILCID_POSIX_SUBTABLE
(
ha
) {

322 
	}
};

324 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0475, 
haw
,
haw_US
)

325 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x040d, 
he
, 
he_IL
)

326 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0439, 
hi
, 
hi_IN
)

329 
	$ILCID_POSIX_SUBTABLE
(
hr
) {

350 
	}
};

352 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x040e, 
hu
, 
hu_HU
)

353 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x042b, 
hy
, 
hy_AM
)

354 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0421, 
id
, 
id_ID
)

355 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0470, 
ig
, 
ig_NG
)

356 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0478, 
ii
, 
ii_CN
)

357 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x040f, 
is
, 
is_IS
)

359 
	$ILCID_POSIX_SUBTABLE
(
ô
) {

363 
	}
};

365 
	$ILCID_POSIX_SUBTABLE
(
iu
) {

371 
	}
};

373 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x040d, 
iw
, 
iw_IL
)

374 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0411, 
ja
, 
ja_JP
)

375 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0437, 
ka
, 
ka_GE
)

376 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x043f, 
kk
, 
kk_KZ
)

377 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x046f, 
kl
, 
kl_GL
)

378 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0453, 
km
, 
km_KH
)

379 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x044b, 
kn
, 
kn_IN
)

381 
	$ILCID_POSIX_SUBTABLE
(
ko
) {

385 
	}
};

387 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0457, 
kok
, 
kok_IN
)

388 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0471, 
kr
, 
kr_NG
)

390 
	$ILCID_POSIX_SUBTABLE
(
ks
) {

394 
	}
};

396 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0440, 
ky
, 
ky_KG
)

397 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0476, 
œ
, 
œ_IT
)

398 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x046e, 
lb
, 
lb_LU
)

399 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0454, 
lo
, 
lo_LA
)

400 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0427, 
…
, 
…_LT
)

401 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0426, 
lv
, 
lv_LV
)

402 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0481, 
mi
, 
mi_NZ
)

403 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x042f, 
mk
, 
mk_MK
)

404 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x044c, 
ml
, 
ml_IN
)

406 
	$ILCID_POSIX_SUBTABLE
(
mn
) {

413 
	}
};

415 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0458, 
mni
,
mni_IN
)

416 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x047c, 
moh
,
moh_CA
)

417 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x044e, 
mr
, 
mr_IN
)

419 
	$ILCID_POSIX_SUBTABLE
(
ms
) {

423 
	}
};

425 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x043a, 
mt
, 
mt_MT
)

426 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0455, 
my
, 
my_MM
)

428 
	$ILCID_POSIX_SUBTABLE
(
√
) {

432 
	}
};

434 
	$ILCID_POSIX_SUBTABLE
(
∆
) {

438 
	}
};

441 
	$ILCID_POSIX_SUBTABLE
(
no
) {

449 
	}
};

451 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x046c, 
nso
,
nso_ZA
)

452 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0482, 
oc
, 
oc_FR
)

453 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0472, 
om
, 
om_ET
)

456 
	$ILCID_POSIX_SUBTABLE
(
‹_IN
) {

459 
	}
};

462 
	$ILCID_POSIX_SUBTABLE
(
∑
) {

466 
	}
};

468 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0415, 
∂
, 
∂_PL
)

469 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0463, 
ps
, 
ps_AF
)

471 
	$ILCID_POSIX_SUBTABLE
(
±
) {

475 
	}
};

477 
	$ILCID_POSIX_SUBTABLE
(
qu
) {

482 
	}
};

484 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0486, 
qut
, 
qut_GT
)

485 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0417, 
rm
, 
rm_CH
)

486 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0418, 
ro
, 
ro_RO
)

488 
	$ILCID_POSIX_SUBTABLE
(
roŸ
) {

490 
	}
};

492 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0419, 
ru
, 
ru_RU
)

493 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0487, 
rw
, 
rw_RW
)

494 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x044f, 
ß
, 
ß_IN
)

495 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0485, 
ßh
,
ßh_RU
)

497 
	$ILCID_POSIX_SUBTABLE
(
sd
) {

501 
	}
};

503 
	$ILCID_POSIX_SUBTABLE
(
£
) {

518 
	}
};

520 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x045b, 
si
, 
si_LK
)

521 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x041b, 
sk
, 
sk_SK
)

522 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0424, 
¶
, 
¶_SI
)

523 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0477, 
so
, 
so_ET
)

524 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x041c, 
sq
, 
sq_AL
)

526 
	$ILCID_POSIX_SUBTABLE
(
sv
) {

530 
	}
};

532 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0441, 
sw
, 
sw_KE
)

533 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x045A, 
syr
, 
syr_SY
)

534 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0449, 
è
, 
è_IN
)

535 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x044a, 
ã
, 
ã_IN
)

538 
	$ILCID_POSIX_SUBTABLE
(
tg
) {

542 
	}
};

544 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x041e, 
th
, 
th_TH
)

546 
	$ILCID_POSIX_SUBTABLE
(
ti
) {

550 
	}
};

552 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0442, 
tk
, 
tk_TM
)

553 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0432, 
ä
, 
ä_BW
)

554 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x041f, 
å
, 
å_TR
)

555 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0444, 
â
, 
â_RU
)

557 
	$ILCID_POSIX_SUBTABLE
(
tzm
) {

561 
	}
};

563 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0480, 
ug
, 
ug_CN
)

564 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0422, 
uk
, 
uk_UA
)

566 
	$ILCID_POSIX_SUBTABLE
(
ur
) {

570 
	}
};

572 
	$ILCID_POSIX_SUBTABLE
(
uz
) {

579 
	}
};

581 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0433, 
ve
, 
ve_ZA
)

582 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x042a, 
vi
, 
vi_VN
)

584 
	$ILCID_POSIX_SUBTABLE
(
wí
) {

591 
	}
};

593 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0488, 
wo
, 
wo_SN
)

594 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0434, 
xh
, 
xh_ZA
)

595 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x046a, 
yo
, 
yo_NG
)

597 
	$ILCID_POSIX_SUBTABLE
(
zh
) {

620 
	}
};

622 
	$ILCID_POSIX_ELEMENT_ARRAY
(0x0435, 
zu
, 
zu_ZA
)

633 c⁄° 
ILcidPosixM≠
 
gPosixIDm≠
[] = {

634 
	`ILCID_POSIX_MAP
(
af
),

635 
	`ILCID_POSIX_MAP
(
am
),

636 
	`ILCID_POSIX_MAP
(
¨
),

637 
	`ILCID_POSIX_MAP
(
¨n
),

638 
	`ILCID_POSIX_MAP
(
as
),

639 
	`ILCID_POSIX_MAP
(
az
),

640 
	`ILCID_POSIX_MAP
(
ba
),

641 
	`ILCID_POSIX_MAP
(
be
),

643 
	`ILCID_POSIX_MAP
(
bg
),

644 
	`ILCID_POSIX_MAP
(
bn
),

645 
	`ILCID_POSIX_MAP
(
bo
),

646 
	`ILCID_POSIX_MAP
(
br
),

647 
	`ILCID_POSIX_MAP
(
ˇ
),

648 
	`ILCID_POSIX_MAP
(
chr
),

649 
	`ILCID_POSIX_MAP
(
co
),

650 
	`ILCID_POSIX_MAP
(
cs
),

651 
	`ILCID_POSIX_MAP
(
cy
),

652 
	`ILCID_POSIX_MAP
(
da
),

653 
	`ILCID_POSIX_MAP
(
de
),

654 
	`ILCID_POSIX_MAP
(
dv
),

655 
	`ILCID_POSIX_MAP
(
ñ
),

656 
	`ILCID_POSIX_MAP
(
í
),

657 
	`ILCID_POSIX_MAP
(
í_US_POSIX
),

658 
	`ILCID_POSIX_MAP
(
es
),

659 
	`ILCID_POSIX_MAP
(
ë
),

660 
	`ILCID_POSIX_MAP
(
eu
),

661 
	`ILCID_POSIX_MAP
(
Á
),

662 
	`ILCID_POSIX_MAP
(
Á_AF
),

663 
	`ILCID_POSIX_MAP
(
fi
),

664 
	`ILCID_POSIX_MAP
(
fû
),

665 
	`ILCID_POSIX_MAP
(
fo
),

666 
	`ILCID_POSIX_MAP
(
‰
),

667 
	`ILCID_POSIX_MAP
(
fy
),

668 
	`ILCID_POSIX_MAP
(
ga
),

669 
	`ILCID_POSIX_MAP
(
gd
),

670 
	`ILCID_POSIX_MAP
(
gl
),

671 
	`ILCID_POSIX_MAP
(
gn
),

672 
	`ILCID_POSIX_MAP
(
gsw
),

673 
	`ILCID_POSIX_MAP
(
gu
),

674 
	`ILCID_POSIX_MAP
(
ha
),

675 
	`ILCID_POSIX_MAP
(
haw
),

676 
	`ILCID_POSIX_MAP
(
he
),

677 
	`ILCID_POSIX_MAP
(
hi
),

678 
	`ILCID_POSIX_MAP
(
hr
),

679 
	`ILCID_POSIX_MAP
(
hu
),

680 
	`ILCID_POSIX_MAP
(
hy
),

681 
	`ILCID_POSIX_MAP
(
id
),

682 
	`ILCID_POSIX_MAP
(
ig
),

683 
	`ILCID_POSIX_MAP
(
ii
),

684 
	`ILCID_POSIX_MAP
(
is
),

685 
	`ILCID_POSIX_MAP
(
ô
),

686 
	`ILCID_POSIX_MAP
(
iu
),

687 
	`ILCID_POSIX_MAP
(
iw
),

688 
	`ILCID_POSIX_MAP
(
ja
),

689 
	`ILCID_POSIX_MAP
(
ka
),

690 
	`ILCID_POSIX_MAP
(
kk
),

691 
	`ILCID_POSIX_MAP
(
kl
),

692 
	`ILCID_POSIX_MAP
(
km
),

693 
	`ILCID_POSIX_MAP
(
kn
),

694 
	`ILCID_POSIX_MAP
(
ko
),

695 
	`ILCID_POSIX_MAP
(
kok
),

696 
	`ILCID_POSIX_MAP
(
kr
),

697 
	`ILCID_POSIX_MAP
(
ks
),

698 
	`ILCID_POSIX_MAP
(
ky
),

699 
	`ILCID_POSIX_MAP
(
lb
),

700 
	`ILCID_POSIX_MAP
(
œ
),

701 
	`ILCID_POSIX_MAP
(
lo
),

702 
	`ILCID_POSIX_MAP
(
…
),

703 
	`ILCID_POSIX_MAP
(
lv
),

704 
	`ILCID_POSIX_MAP
(
mi
),

705 
	`ILCID_POSIX_MAP
(
mk
),

706 
	`ILCID_POSIX_MAP
(
ml
),

707 
	`ILCID_POSIX_MAP
(
mn
),

708 
	`ILCID_POSIX_MAP
(
mni
),

709 
	`ILCID_POSIX_MAP
(
moh
),

710 
	`ILCID_POSIX_MAP
(
mr
),

711 
	`ILCID_POSIX_MAP
(
ms
),

712 
	`ILCID_POSIX_MAP
(
mt
),

713 
	`ILCID_POSIX_MAP
(
my
),

715 
	`ILCID_POSIX_MAP
(
√
),

716 
	`ILCID_POSIX_MAP
(
∆
),

718 
	`ILCID_POSIX_MAP
(
no
),

719 
	`ILCID_POSIX_MAP
(
nso
),

720 
	`ILCID_POSIX_MAP
(
oc
),

721 
	`ILCID_POSIX_MAP
(
om
),

722 
	`ILCID_POSIX_MAP
(
‹_IN
),

723 
	`ILCID_POSIX_MAP
(
∑
),

724 
	`ILCID_POSIX_MAP
(
∂
),

725 
	`ILCID_POSIX_MAP
(
ps
),

726 
	`ILCID_POSIX_MAP
(
±
),

727 
	`ILCID_POSIX_MAP
(
qu
),

728 
	`ILCID_POSIX_MAP
(
qut
),

729 
	`ILCID_POSIX_MAP
(
rm
),

730 
	`ILCID_POSIX_MAP
(
ro
),

731 
	`ILCID_POSIX_MAP
(
roŸ
),

732 
	`ILCID_POSIX_MAP
(
ru
),

733 
	`ILCID_POSIX_MAP
(
rw
),

734 
	`ILCID_POSIX_MAP
(
ß
),

735 
	`ILCID_POSIX_MAP
(
ßh
),

736 
	`ILCID_POSIX_MAP
(
sd
),

737 
	`ILCID_POSIX_MAP
(
£
),

739 
	`ILCID_POSIX_MAP
(
si
),

740 
	`ILCID_POSIX_MAP
(
sk
),

741 
	`ILCID_POSIX_MAP
(
¶
),

742 
	`ILCID_POSIX_MAP
(
so
),

743 
	`ILCID_POSIX_MAP
(
sq
),

745 
	`ILCID_POSIX_MAP
(
sv
),

746 
	`ILCID_POSIX_MAP
(
sw
),

747 
	`ILCID_POSIX_MAP
(
syr
),

748 
	`ILCID_POSIX_MAP
(
è
),

749 
	`ILCID_POSIX_MAP
(
ã
),

750 
	`ILCID_POSIX_MAP
(
tg
),

751 
	`ILCID_POSIX_MAP
(
th
),

752 
	`ILCID_POSIX_MAP
(
ti
),

753 
	`ILCID_POSIX_MAP
(
tk
),

754 
	`ILCID_POSIX_MAP
(
ä
),

755 
	`ILCID_POSIX_MAP
(
å
),

756 
	`ILCID_POSIX_MAP
(
â
),

757 
	`ILCID_POSIX_MAP
(
tzm
),

758 
	`ILCID_POSIX_MAP
(
ug
),

759 
	`ILCID_POSIX_MAP
(
uk
),

760 
	`ILCID_POSIX_MAP
(
ur
),

761 
	`ILCID_POSIX_MAP
(
uz
),

762 
	`ILCID_POSIX_MAP
(
ve
),

763 
	`ILCID_POSIX_MAP
(
vi
),

764 
	`ILCID_POSIX_MAP
(
wí
),

765 
	`ILCID_POSIX_MAP
(
wo
),

766 
	`ILCID_POSIX_MAP
(
xh
),

767 
	`ILCID_POSIX_MAP
(
yo
),

768 
	`ILCID_POSIX_MAP
(
zh
),

769 
	`ILCID_POSIX_MAP
(
zu
),

770 
	}
};

772 c⁄° 
uöt32_t
 
	ggLoˇÀCou¡
 = (
gPosixIDm≠
)/(
ILcidPosixM≠
);

779 
öt32_t


780 
	$idCmp
(c⁄° * 
id1
, c⁄° * 
id2
)

782 
öt32_t
 
diffIdx
 = 0;

783 *
id1
 =*
id2
 && *id1 != 0) {

784 
diffIdx
++;

785 
id1
++;

786 
id2
++;

788  
diffIdx
;

789 
	}
}

799 
uöt32_t


800 
	$gëHo°ID
(c⁄° 
ILcidPosixM≠
 *
this_0
, c⁄° * 
posixID
, 
UEº‹Code
* 
°©us
)

802 
öt32_t
 
be°Idx
 = 0;

803 
öt32_t
 
be°IdxDiff
 = 0;

804 
öt32_t
 
posixIDÀn
 = (öt32_t)
	`u¥v_°æí
(
posixID
);

805 
uöt32_t
 
idx
;

807 
idx
 = 0; idx < 
this_0
->
numRegi⁄s
; idx++ ) {

808 
öt32_t
 
ßmeCh¨s
 = 
	`idCmp
(
posixID
, 
this_0
->
ªgi⁄M≠s
[
idx
].posixID);

809 i‡(
ßmeCh¨s
 > 
be°IdxDiff
 && 
this_0
->
ªgi⁄M≠s
[
idx
].
posixID
[sameChars] == 0) {

810 i‡(
posixIDÀn
 =
ßmeCh¨s
) {

812  
this_0
->
ªgi⁄M≠s
[
idx
].
ho°ID
;

814 
be°IdxDiff
 = 
ßmeCh¨s
;

815 
be°Idx
 = 
idx
;

820 i‡((
posixID
[
be°IdxDiff
] == '_' ||ÖosixID[bestIdxDiff] == '@')

821 && 
this_0
->
ªgi⁄M≠s
[
be°Idx
].
posixID
[
be°IdxDiff
] == 0)

823 *
°©us
 = 
U_USING_FALLBACK_WARNING
;

824  
this_0
->
ªgi⁄M≠s
[
be°Idx
].
ho°ID
;

828 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

829  
this_0
->
ªgi⁄M≠s
->
ho°ID
;

830 
	}
}

833 
	$gëPosixID
(c⁄° 
ILcidPosixM≠
 *
this_0
, 
uöt32_t
 
ho°ID
)

835 
uöt32_t
 
i
;

836 
i
 = 0; i <
this_0
->
numRegi⁄s
; i++)

838 i‡(
this_0
->
ªgi⁄M≠s
[
i
].
ho°ID
 == hostID)

840  
this_0
->
ªgi⁄M≠s
[
i
].
posixID
;

846  
this_0
->
ªgi⁄M≠s
[0].
posixID
;

847 
	}
}

856 #ifde‡
USE_WINDOWS_LOCALE_API


860 
	#FIX_LOCALE_ID_TAG_SEPARATOR
(
buf„r
, 
Àn
, 
i
) \

861 
i
 = 0; i < 
Àn
; i++) \

862 i‡(
buf„r
[
i
] ='-'Ëbuf„r[i] = '_';

	)

869 
	#FIX_LANGUAGE_ID_TAG
(
buf„r
, 
Àn
) \

870 i‡(
Àn
 >= 3) { \

871 i‡(
buf„r
[0] == 'q' && buffer[1] == 'u' && buffer[2] == 'z') {\

872 
buf„r
[2] = 0; \

873 
	`u¥v_°rˇt
(
buf„r
, buffer+3); \

874 } i‡(
buf„r
[0] == 'p' && buffer[1] == 'r' && buffer[2] == 's') {\

875 
buf„r
[0] = 'f'; buffer[1] = 'a'; buffer[2] = 0; \

876 
	`u¥v_°rˇt
(
buf„r
, buffer+3); \

878 }

	)

880 
	ggPosixFromLCID
[
ULOC_FULLNAME_CAPACITY
];

882 
U_CAPI
 const *

883 
	$u¥v_c⁄vîtToPosix
(
uöt32_t
 
ho°id
, 
UEº‹Code
* 
°©us
)

885 
uöt16_t
 
œngID
;

886 
uöt32_t
 
loˇÀIndex
;

887 #ifde‡
USE_WINDOWS_LOCALE_API


888 
öt32_t
 
ªt
 = 0;

890 
	`u¥v_mem£t
(
gPosixFromLCID
, 0, (gPosixFromLCID));

892 
ªt
 = 
	`GëLoˇÀInfoA
(
ho°id
, 
LOCALE_SNAME
, (
LPSTR
)
gPosixFromLCID
, (gPosixFromLCID));

893 i‡(
ªt
 > 1) {

894 
	`FIX_LOCALE_ID_TAG_SEPARATOR
(
gPosixFromLCID
, 
ªt
, 
loˇÀIndex
)

895 
	`FIX_LANGUAGE_ID_TAG
(
gPosixFromLCID
, 
ªt
)

897  
gPosixFromLCID
;

900 
œngID
 = 
	`LANGUAGE_LCID
(
ho°id
);

902 
loˇÀIndex
 = 0;ÜoˇÀIndex < 
gLoˇÀCou¡
;ÜocaleIndex++)

904 i‡(
œngID
 =
gPosixIDm≠
[
loˇÀIndex
].
ªgi⁄M≠s
->
ho°ID
)

906  
	`gëPosixID
(&
gPosixIDm≠
[
loˇÀIndex
], 
ho°id
);

911 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

912  
NULL
;

913 
	}
}

926 
U_CAPI
 
uöt32_t


927 
	$u¥v_c⁄vîtToLCID
(c⁄° *
œngID
, c⁄° * 
posixID
, 
UEº‹Code
* 
°©us
)

930 
uöt32_t
 
low
 = 0;

931 
uöt32_t
 
high
 = 
gLoˇÀCou¡
;

932 
uöt32_t
 
mid
 = 
high
;

933 
uöt32_t
 
ﬁdmid
 = 0;

934 
öt32_t
 
compVÆ
;

936 
uöt32_t
 
vÆue
 = 0;

937 
uöt32_t
 
ÁŒbackVÆue
 = (uint32_t)-1;

938 
UEº‹Code
 
mySètus
;

939 
uöt32_t
 
idx
;

942 i‡(!
œngID
 || !
posixID
 || 
	`u¥v_°æí
(langID) < 2 || uprv_strlen(posixID) < 2) {

948 
high
 > 
low
) {

950 
mid
 = (
high
+
low
) >> 1;

952 i‡(
mid
 =
ﬁdmid
)

955 
compVÆ
 = 
	`u¥v_°rcmp
(
œngID
, 
gPosixIDm≠
[
mid
].
ªgi⁄M≠s
->
posixID
);

956 i‡(
compVÆ
 < 0){

957 
high
 = 
mid
;

959 i‡(
compVÆ
 > 0){

960 
low
 = 
mid
;

963  
	`gëHo°ID
(&
gPosixIDm≠
[
mid
], 
posixID
, 
°©us
);

965 
ﬁdmid
 = 
mid
;

972 
idx
 = 0; idx < 
gLoˇÀCou¡
; idx++ ) {

973 
mySètus
 = 
U_ZERO_ERROR
;

974 
vÆue
 = 
	`gëHo°ID
(&
gPosixIDm≠
[
idx
], 
posixID
, &
mySètus
);

975 i‡(
mySètus
 =
U_ZERO_ERROR
) {

976  
vÆue
;

978 i‡(
mySètus
 =
U_USING_FALLBACK_WARNING
) {

979 
ÁŒbackVÆue
 = 
vÆue
;

983 i‡(
ÁŒbackVÆue
 !(
uöt32_t
)-1) {

984 *
°©us
 = 
U_USING_FALLBACK_WARNING
;

985  
ÁŒbackVÆue
;

989 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

991 
	}
}

	@locmap.h

24 #i‚de‡
LOCMAP_H


25 
	#LOCMAP_H


	)

27 
	~"unicode/uty≥s.h
"

29 
	#LANGUAGE_LCID
(
ho°ID
Ë(
uöt16_t
)(0x03FF & ho°ID)

	)

31 
U_CAPI
 c⁄° *
u¥v_c⁄vîtToPosix
(
uöt32_t
 
ho°id
, 
UEº‹Code
* 
°©us
);

34 
U_CAPI
 
uöt32_t
 
u¥v_c⁄vîtToLCID
(c⁄° *
œngID
, c⁄° * 
posixID
, 
UEº‹Code
* 
°©us
);

	@locresdata.cpp

21 
	~"unicode/uty≥s.h
"

22 
	~"unicode/putû.h
"

23 
	~"unicode/uloc.h
"

24 
	~"unicode/uªs.h
"

25 
	~"c°rög.h
"

26 
	~"ulocimp.h
"

27 
	~"uªsimp.h
"

42 
U_CAPI
 c⁄° 
UCh¨
 * 
U_EXPORT2


43 
	$uloc_gëTabÀSåögWôhFÆlback
(c⁄° *
∑th
, c⁄° *
loˇÀ
,

44 c⁄° *
èbÀKey
, c⁄° *
subTabÀKey
,

45 c⁄° *
ôemKey
,

46 
öt32_t
 *
pLígth
,

47 
UEº‹Code
 *
pEº‹Code
)

50 
UResour˚BundÀ
 *
rb
=
NULL
, 
èbÀ
, 
subTabÀ
;

51 c⁄° 
UCh¨
 *
ôem
=
NULL
;

52 
UEº‹Code
 
îr‹Code
;

53 
ex∂icôFÆlbackName
[
ULOC_FULLNAME_CAPACITY
] = {0};

59 
îr‹Code
=
U_ZERO_ERROR
;

60 
rb
=
	`uªs_›í
(
∑th
, 
loˇÀ
, &
îr‹Code
);

62 if(
	`U_FAILURE
(
îr‹Code
)) {

64 *
pEº‹Code
=
îr‹Code
;

65  
NULL
;

66 } if(
îr‹Code
==
U_USING_DEFAULT_WARNING
 ||

67 (
îr‹Code
==
U_USING_FALLBACK_WARNING
 && *
pEº‹Code
!=
U_USING_DEFAULT_WARNING
)

70 *
pEº‹Code
=
îr‹Code
;

74 
	`uªs_öôSèckObje˘
(&
èbÀ
);

75 
	`uªs_öôSèckObje˘
(&
subTabÀ
);

76 
	`uªs_gëByKeyWôhFÆlback
(
rb
, 
èbÀKey
, &
èbÀ
, &
îr‹Code
);

78 i‡(
subTabÀKey
 !
NULL
) {

88 
	`uªs_gëByKeyWôhFÆlback
(&
èbÀ
,
subTabÀKey
, &èbÀ, &
îr‹Code
);

90 if(
	`U_SUCCESS
(
îr‹Code
)){

91 
ôem
 = 
	`uªs_gëSåögByKeyWôhFÆlback
(&
èbÀ
, 
ôemKey
, 
pLígth
, &
îr‹Code
);

92 if(
	`U_FAILURE
(
îr‹Code
)){

93 c⁄° * 
ª∂a˚mít
 = 
NULL
;

94 *
pEº‹Code
 = 
îr‹Code
;

95 
îr‹Code
 = 
U_ZERO_ERROR
;

97 if(
	`u¥v_°rcmp
(
èbÀKey
, "Countries")==0){

98 
ª∂a˚mít
 = 
	`uloc_gëCuºítCou¡ryID
(
ôemKey
);

99 }if(
	`u¥v_°rcmp
(
èbÀKey
, "Languages")==0){

100 
ª∂a˚mít
 = 
	`uloc_gëCuºítL™guageID
(
ôemKey
);

103 if(
ª∂a˚mít
!=
NULL
 && 
ôemKey
 !=Ñeplacement){

104 
ôem
 = 
	`uªs_gëSåögByKeyWôhFÆlback
(&
èbÀ
, 
ª∂a˚mít
, 
pLígth
, &
îr‹Code
);

105 if(
	`U_SUCCESS
(
îr‹Code
)){

106 *
pEº‹Code
 = 
îr‹Code
;

115 if(
	`U_FAILURE
(
îr‹Code
)){

118 
öt32_t
 
Àn
 = 0;

119 c⁄° 
UCh¨
* 
ÁŒbackLoˇÀ
 = 
NULL
;

120 *
pEº‹Code
 = 
îr‹Code
;

121 
îr‹Code
 = 
U_ZERO_ERROR
;

123 
ÁŒbackLoˇÀ
 = 
	`uªs_gëSåögByKeyWôhFÆlback
(&
èbÀ
, "FÆlback", &
Àn
, &
îr‹Code
);

124 if(
	`U_FAILURE
(
îr‹Code
)){

125 *
pEº‹Code
 = 
îr‹Code
;

129 
	`u_UCh¨sToCh¨s
(
ÁŒbackLoˇÀ
, 
ex∂icôFÆlbackName
, 
Àn
);

132 if(
	`u¥v_°rcmp
(
ex∂icôFÆlbackName
, 
loˇÀ
)==0){

133 *
pEº‹Code
 = 
U_INTERNAL_PROGRAM_ERROR
;

136 
	`uªs_˛o£
(
rb
);

137 
rb
 = 
	`uªs_›í
(
∑th
, 
ex∂icôFÆlbackName
, &
îr‹Code
);

138 if(
	`U_FAILURE
(
îr‹Code
)){

139 *
pEº‹Code
 = 
îr‹Code
;

148 
	`uªs_˛o£
(&
subTabÀ
);

149 
	`uªs_˛o£
(&
èbÀ
);

150 
	`uªs_˛o£
(
rb
);

151  
ôem
;

152 
	}
}

154 
ULayoutTy≥


155 
	$_uloc_gëOrõ¡©i⁄Hñ≥r
(c⁄° * 
loˇÀId
,

156 c⁄° * 
key
,

157 
UEº‹Code
 *
°©us
)

159 
ULayoutTy≥
 
ªsu…
 = 
ULOC_LAYOUT_UNKNOWN
;

161 i‡(!
	`U_FAILURE
(*
°©us
)) {

162 
öt32_t
 
Àngth
 = 0;

163 
loˇÀBuf„r
[
ULOC_FULLNAME_CAPACITY
];

165 
	`uloc_ˇn⁄iˇlize
(
loˇÀId
, 
loˇÀBuf„r
, ÷oˇÀBuf„r), 
°©us
);

167 i‡(!
	`U_FAILURE
(*
°©us
)) {

168 c⁄° 
UCh¨
* c⁄° 
vÆue
 =

169 
	`uloc_gëTabÀSåögWôhFÆlback
(

170 
NULL
,

171 
loˇÀBuf„r
,

173 
NULL
,

174 
key
,

175 &
Àngth
,

176 
°©us
);

178 i‡(!
	`U_FAILURE
(*
°©us
Ë&& 
Àngth
 != 0) {

179 
vÆue
[0])

182 
ªsu…
 = 
ULOC_LAYOUT_BTT
;

185 
ªsu…
 = 
ULOC_LAYOUT_LTR
;

188 
ªsu…
 = 
ULOC_LAYOUT_RTL
;

191 
ªsu…
 = 
ULOC_LAYOUT_TTB
;

194 *
°©us
 = 
U_INTERNAL_PROGRAM_ERROR
;

201  
ªsu…
;

202 
	}
}

204 
U_DRAFT
 
ULayoutTy≥
 
U_EXPORT2


205 
	$uloc_gëCh¨a˘îOrõ¡©i⁄
(c⁄° * 
loˇÀId
,

206 
UEº‹Code
 *
°©us
)

208  
	`_uloc_gëOrõ¡©i⁄Hñ≥r
(
loˇÀId
, "ch¨a˘îs", 
°©us
);

209 
	}
}

219 
U_DRAFT
 
ULayoutTy≥
 
U_EXPORT2


220 
	$uloc_gëLöeOrõ¡©i⁄
(c⁄° * 
loˇÀId
,

221 
UEº‹Code
 *
°©us
)

223  
	`_uloc_gëOrõ¡©i⁄Hñ≥r
(
loˇÀId
, "löes", 
°©us
);

224 
	}
}

	@locutil.cpp

7 
	~"unicode/uty≥s.h
"

9 #i‡!
UCONFIG_NO_SERVICE
 || !
UCONFIG_NO_TRANSLITERATION


11 
	~"unicode/ªsbund.h
"

12 
	~"cmem‹y.h
"

13 
	~"u°rfmt.h
"

14 
	~"locutû.h
"

15 
	~"ch¨°r.h
"

16 
	~"u˛n_cmn.h
"

17 
	~"uas£π.h
"

18 
	~"umuãx.h
"

21 
U_NAMESPACE_QUALIFIER
 
HashèbÀ
 * 
	gLoˇÀUtûôy_ˇche
 = 
NULL
;

23 
	#UNDERSCORE_CHAR
 ((
UCh¨
)0x005f)

	)

24 
	#AT_SIGN_CHAR
 ((
UCh¨
)64)

	)

25 
	#PERIOD_CHAR
 ((
UCh¨
)46)

	)

34 
U_CDECL_BEGIN


35 
UBoﬁ
 
U_CALLCONV
 
	$£rvi˚_˛ónup
() {

36 i‡(
LoˇÀUtûôy_ˇche
) {

37 
dñëe
 
LoˇÀUtûôy_ˇche
;

38 
LoˇÀUtûôy_ˇche
 = 
NULL
;

40  
TRUE
;

41 
	}
}

42 
U_CDECL_END


44 
U_NAMESPACE_BEGIN


46 
	gUnicodeSåög
&

47 
	gLoˇÀUtûôy
::
	$ˇn⁄iˇlLoˇÀSåög
(c⁄° 
UnicodeSåög
* 
id
, UnicodeSåög& 
ªsu…
)

49 i‡(
id
 =
NULL
) {

50 
ªsu…
.
	`£tToBogus
();

59 
ªsu…
 = *
id
;

60 
öt32_t
 
i
 = 0;

61 
öt32_t
 
íd
 = 
ªsu…
.
	`ödexOf
(
AT_SIGN_CHAR
);

62 
öt32_t
 
n
 = 
ªsu…
.
	`ödexOf
(
PERIOD_CHAR
);

63 i‡(
n
 >0 &&Ç < 
íd
) {

64 
íd
 = 
n
;

66 i‡(
íd
 < 0) {

67 
íd
 = 
ªsu…
.
	`Àngth
();

69 
n
 = 
ªsu…
.
	`ödexOf
(
UNDERSCORE_CHAR
);

70 i‡(
n
 < 0) {

71 
n
 = 
íd
;

73 ; 
i
 < 
n
; ++i) {

74 
UCh¨
 
c
 = 
ªsu…
.
	`ch¨At
(
i
);

75 i‡(
c
 >= 0x0041 && c <= 0x005a) {

76 
c
 += 0x20;

77 
ªsu…
.
	`£tCh¨At
(
i
, 
c
);

80 
n
 = 
íd
; 
i
 <Ç; ++i) {

81 
UCh¨
 
c
 = 
ªsu…
.
	`ch¨At
(
i
);

82 i‡(
c
 >= 0x0061 && c <= 0x007a) {

83 
c
 -= 0x20;

84 
ªsu…
.
	`£tCh¨At
(
i
, 
c
);

88  
ªsu…
;

102 
ªsu…
.
	`£tToBogus
();

103 i‡(
id
 != 0) {

104 
öt32_t
 
buÊí
 = 
id
->
	`Àngth
() + 8;

105 * 
buf
 = (*Ë
	`u¥v_mÆloc
(
buÊí
);

106 * 
ˇn⁄
 = (
buf
 =0Ë? 0 : (*Ë
	`u¥v_mÆloc
(
buÊí
);

107 i‡(
buf
 !0 && 
ˇn⁄
 != 0) {

108 
	`U_ASSERT
(
id
->
	`exåa˘
(0, 
INT32_MAX
, 
buf
, 
buÊí
) < buflen);

109 
UEº‹Code
 
ec
 = 
U_ZERO_ERROR
;

110 
	`uloc_ˇn⁄iˇlize
(
buf
, 
ˇn⁄
, 
buÊí
, &
ec
);

111 i‡(
	`U_SUCCESS
(
ec
)) {

112 
ªsu…
 = 
	`UnicodeSåög
(
ˇn⁄
);

115 
	`u¥v_‰ì
(
buf
);

116 
	`u¥v_‰ì
(
ˇn⁄
);

118  
ªsu…
;

120 
	}
}

122 
	gLoˇÀ
&

123 
	gLoˇÀUtûôy
::
	$öôLoˇÀFromName
(c⁄° 
UnicodeSåög
& 
id
, 
LoˇÀ
& 
ªsu…
)

125 íum { 
BUFLEN
 = 128 };

127 i‡(
id
.
	`isBogus
(Ë|| id.
	`Àngth
(Ë>
BUFLEN
) {

128 
ªsu…
.
	`£tToBogus
();

148 
buf„r
[
BUFLEN
];

149 
öt32_t
 
¥ev
, 
i
;

150 
¥ev
 = 0;

152 
i
 = 
id
.
	`ödexOf
((
UCh¨
)0x40, 
¥ev
);

153 if(
i
 < 0) {

155 
id
.
	`exåa˘
(
¥ev
, 
INT32_MAX
, 
buf„r
 +Öªv, 
BUFLEN
 -Öªv, 
US_INV
);

159 
id
.
	`exåa˘
(
¥ev
, 
i
 -Öªv, 
buf„r
 +Öªv, 
BUFLEN
 -Öªv, 
US_INV
);

161 
buf„r
[
i
] = '@';

162 
¥ev
 = 
i
 + 1;

165 
ªsu…
 = 
LoˇÀ
::
	`¸óãFromName
(
buf„r
);

167  
ªsu…
;

168 
	}
}

170 
	gUnicodeSåög
&

171 
	gLoˇÀUtûôy
::
	$öôNameFromLoˇÀ
(c⁄° 
LoˇÀ
& 
loˇÀ
, 
UnicodeSåög
& 
ªsu…
)

173 i‡(
loˇÀ
.
	`isBogus
()) {

174 
ªsu…
.
	`£tToBogus
();

176 
ªsu…
.
	`≠≥nd
(
	`UnicodeSåög
(
loˇÀ
.
	`gëName
(), -1, 
US_INV
));

178  
ªsu…
;

179 
	}
}

181 c⁄° 
HashèbÀ
*

182 
	gLoˇÀUtûôy
::
	$gëAvaûabÀLoˇÀNames
(c⁄° 
UnicodeSåög
& 
bundÀID
)

191 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

192 
HashèbÀ
* 
ˇche
;

193 
	`umtx_lock
(
NULL
);

194 
ˇche
 = 
LoˇÀUtûôy_ˇche
;

195 
	`umtx_u∆ock
(
NULL
);

197 i‡(
ˇche
 =
NULL
) {

198 
ˇche
 = 
√w
 
	`HashèbÀ
(
°©us
);

199 i‡(
ˇche
 =
NULL
 || 
	`U_FAILURE
(
°©us
)) {

200  
NULL
;

202 
ˇche
->
	`£tVÆueDñëî
(
uhash_dñëeHashèbÀ
);

203 
HashèbÀ
* 
h
;

204 
	`umtx_lock
(
NULL
);

205 
h
 = 
LoˇÀUtûôy_ˇche
;

206 i‡(
h
 =
NULL
) {

207 
LoˇÀUtûôy_ˇche
 = 
h
 = 
ˇche
;

208 
ˇche
 = 
NULL
;

209 
	`u˛n_comm⁄_ªgi°îCÀ™up
(
UCLN_COMMON_SERVICE
, 
£rvi˚_˛ónup
);

211 
	`umtx_u∆ock
(
NULL
);

212 if(
ˇche
 !
NULL
) {

213 
dñëe
 
ˇche
;

215 
ˇche
 = 
h
;

218 
	`U_ASSERT
(
ˇche
 !
NULL
);

220 
HashèbÀ
* 
hç
;

221 
	`umtx_lock
(
NULL
);

222 
hç
 = (
HashèbÀ
*Ë
ˇche
->
	`gë
(
bundÀID
);

223 
	`umtx_u∆ock
(
NULL
);

225 i‡(
hç
 =
NULL
) {

226 
hç
 = 
√w
 
	`HashèbÀ
(
°©us
);

227 i‡(
hç
 && 
	`U_SUCCESS
(
°©us
)) {

228 
Ch¨Såög
 
cbundÀID
;

229 
cbundÀID
.
	`≠≥ndInv¨ü¡Ch¨s
(
bundÀID
, 
°©us
);

230 c⁄° * 
∑th
 = 
cbundÀID
.
	`isEm±y
(Ë? 
NULL
 : cbundÀID.
	`d©a
();

231 
UEnumî©i⁄
 *
uíum
 = 
	`uªs_›íAvaûabÀLoˇÀs
(
∑th
, &
°©us
);

233 c⁄° 
UCh¨
* 
id
 = 
	`uíum_u√xt
(
uíum
, 
NULL
, &
°©us
);

234 i‡(
id
 =
NULL
) {

237 
hç
->
	`put
(
	`UnicodeSåög
(
id
), (*)hç, 
°©us
);

239 
	`uíum_˛o£
(
uíum
);

240 i‡(
	`U_FAILURE
(
°©us
)) {

241 
dñëe
 
hç
;

242  
NULL
;

244 
	`umtx_lock
(
NULL
);

245 
ˇche
->
	`put
(
bundÀID
, (*)
hç
, 
°©us
);

246 
	`umtx_u∆ock
(
NULL
);

249  
hç
;

250 
	}
}

252 
UBoﬁ


253 
	gLoˇÀUtûôy
::
	$isFÆlbackOf
(c⁄° 
UnicodeSåög
& 
roŸ
, c⁄° UnicodeSåög& 
chûd
)

255  
chûd
.
	`ödexOf
(
roŸ
) == 0 &&

256 (
chûd
.
	`Àngth
(Ë=
roŸ
.length() ||

257 
chûd
.
	`ch¨At
(
roŸ
.
	`Àngth
()Ë=
UNDERSCORE_CHAR
);

258 
	}
}

260 
	gU_NAMESPACE_END


	@locutil.h

9 #i‚de‡
LOCUTIL_H


10 
	#LOCUTIL_H


	)

12 
	~"unicode/uty≥s.h
"

13 
	~"hash.h
"

15 #i‡!
UCONFIG_NO_SERVICE
 || !
UCONFIG_NO_TRANSLITERATION


18 
U_NAMESPACE_BEGIN


23 ˛as†
	cU_COMMON_API
 
	mLoˇÀUtûôy
 {

24 
	mpublic
:

25 
UnicodeSåög
& 
ˇn⁄iˇlLoˇÀSåög
(c⁄° UnicodeSåög* 
id
, UnicodeSåög& 
ªsu…
);

26 
	mLoˇÀ
& 
öôLoˇÀFromName
(c⁄° 
UnicodeSåög
& 
id
, 
LoˇÀ
& 
ªsu…
);

27 
	mUnicodeSåög
& 
öôNameFromLoˇÀ
(c⁄° 
LoˇÀ
& 
loˇÀ
, 
UnicodeSåög
& 
ªsu…
);

28 c⁄° 
HashèbÀ
* 
gëAvaûabÀLoˇÀNames
(c⁄° 
UnicodeSåög
& 
bundÀID
);

29 
UBoﬁ
 
isFÆlbackOf
(c⁄° 
UnicodeSåög
& 
roŸ
, c⁄° UnicodeSåög& 
chûd
);

32 
	gU_NAMESPACE_END


	@msvcres.h

15 
	#_STLP_OUTERMOST_HEADER_ID
 0

	)

16 
	#_STLP_WINCE
 1

	)

18 
	~"unicode/uvîsi⁄.h
"

20 
	#ICU_WEBSITE
 "hâp://icu-¥oje˘.‹g"

	)

21 
	#ICU_COMPANY
 "ThêICU Proje˘"

	)

22 
	#ICU_PRODUCT_PREFIX
 "ICU"

	)

23 
	#ICU_PRODUCT
 "I¡î«ti⁄Æ Comp⁄ít†f‹ Unicode"

	)

	@mutex.cpp

14 
	~"unicode/uty≥s.h
"

15 
	~"muãx.h
"

17 
U_NAMESPACE_BEGIN


19 *
	gSim∂eSögÀt⁄
::
	$gëIn°™˚
(
In°™tüt‹Fn
 *
ö°™tüt‹
, c⁄° *
c⁄ãxt
,

20 *&
du∂iˇã
,

21 
UEº‹Code
 &
îr‹Code
) {

22 
du∂iˇã
=
NULL
;

23 if(
	`U_FAILURE
(
îr‹Code
)) {

24  
NULL
;

26 *
ö°™˚
;

27 
	`UMTX_CHECK
(
NULL
, 
fIn°™˚
, 
ö°™˚
);

28 if(
ö°™˚
!=
NULL
) {

29  
ö°™˚
;

31 
ö°™˚
=
	`ö°™tüt‹
(
c⁄ãxt
, 
îr‹Code
);

32 
Muãx
 
muãx
;

33 if(
fIn°™˚
==
NULL
 && 
	`U_SUCCESS
(
îr‹Code
)) {

34 
fIn°™˚
=
ö°™˚
;

36 
du∂iˇã
=
ö°™˚
;

38  
fIn°™˚
;

40 
	}
}

42 *
	gTriSèãSögÀt⁄
::
	$gëIn°™˚
(
In°™tüt‹Fn
 *
ö°™tüt‹
, c⁄° *
c⁄ãxt
,

43 *&
du∂iˇã
,

44 
UEº‹Code
 &
îr‹Code
) {

45 
du∂iˇã
=
NULL
;

46 if(
	`U_FAILURE
(
îr‹Code
)) {

47  
NULL
;

49 
öt8_t
 
haveIn°™˚
;

50 
	`UMTX_CHECK
(
NULL
, 
fHaveIn°™˚
, 
haveIn°™˚
);

51 if(
haveIn°™˚
>0) {

52  
fIn°™˚
;

53 } if(
haveIn°™˚
<0) {

54 
îr‹Code
=
fEº‹Code
;

55  
NULL
;

57 *
ö°™˚
=
	`ö°™tüt‹
(
c⁄ãxt
, 
îr‹Code
);

58 
Muãx
 
muãx
;

59 if(
fHaveIn°™˚
==0) {

60 if(
	`U_SUCCESS
(
îr‹Code
)) {

61 
fIn°™˚
=
ö°™˚
;

62 
ö°™˚
=
NULL
;

63 
fHaveIn°™˚
=1;

65 
fEº‹Code
=
îr‹Code
;

66 
fHaveIn°™˚
=-1;

69 
îr‹Code
=
fEº‹Code
;

71 
du∂iˇã
=
ö°™˚
;

72  
fIn°™˚
;

74 
	}
}

76 
	gTriSèãSögÀt⁄
::
	$ª£t
() {

77 
fIn°™˚
=
NULL
;

78 
fEº‹Code
=
U_ZERO_ERROR
;

79 
fHaveIn°™˚
=0;

80 
	}
}

82 #i‡
UCONFIG_NO_SERVICE


86 
Muãx
 *
	gaMuãx
 = 0;

91 
	gU_NAMESPACE_END


	@mutex.h

20 #i‚de‡
MUTEX_H


21 
	#MUTEX_H


	)

23 
	~"unicode/uty≥s.h
"

24 
	~"unicode/uobje˘.h
"

25 
	~"umuãx.h
"

27 
U_NAMESPACE_BEGIN


51 ˛as†
	cU_COMMON_API
 
	mMuãx
 : 
public
 
UMem‹y
 {

52 
public
:

53 
ölöe
 
Muãx
(
UMTX
 *
muãx
 = 
NULL
);

54 
	mölöe
 ~
Muãx
();

56 
	m¥iv©e
:

57 
UMTX
 *
fMuãx
;

59 
Muãx
(c⁄° Muãx &
Ÿhî
);

60 
	mMuãx
 &
	m›î©‹
=(c⁄° 
Muãx
 &
Ÿhî
);

63 
ölöe
 
	gMuãx
::
	$Muãx
(
UMTX
 *
muãx
)

64 : 
	$fMuãx
(
muãx
)

66 
	`umtx_lock
(
fMuãx
);

67 
	}
}

69 
ölöe
 
	gMuãx
::~
	$Muãx
()

71 
	`umtx_u∆ock
(
fMuãx
);

72 
	}
}

82 *
	tIn°™tüt‹Fn
(c⁄° *
	tc⁄ãxt
, 
	tUEº‹Code
 &
	tîr‹Code
);

92 
	sSim∂eSögÀt⁄
 {

93 *
	mfIn°™˚
;

102 *
gëIn°™˚
(
In°™tüt‹Fn
 *
ö°™tüt‹
, c⁄° *
c⁄ãxt
,

103 *&
du∂iˇã
,

104 
UEº‹Code
 &
îr‹Code
);

110 
ª£t
(Ë{ 
	mfIn°™˚
=
NULL
; }

113 
	#STATIC_SIMPLE_SINGLETON
(
«me
Ë
Sim∂eSögÀt⁄
Çame={ 
NULL
 }

	)

120 
	gãm∂©e
<
ty≥«me
 
	gT
>

121 ˛as†
	cSim∂eSögÀt⁄Wøµî
 {

122 
	mpublic
:

123 
	$Sim∂eSögÀt⁄Wøµî
(
Sim∂eSögÀt⁄
 &
s
Ë: 
	$sögÀt⁄
(
s
) {}

124 
	$dñëeIn°™˚
() {

125 
	`dñëe
 (
T
 *)
sögÀt⁄
.
fIn°™˚
;

126 
sögÀt⁄
.
	`ª£t
();

127 
	}
}

128 
T
 *
	$gëIn°™˚
(
In°™tüt‹Fn
 *
ö°™tüt‹
, c⁄° *
c⁄ãxt
,

129 
UEº‹Code
 &
îr‹Code
) {

130 *
du∂iˇã
;

131 
T
 *
ö°™˚
=(T *)
sögÀt⁄
.
	`gëIn°™˚
(
ö°™tüt‹
, 
c⁄ãxt
, 
du∂iˇã
, 
îr‹Code
);

132 
	`dñëe
 (
T
 *)
du∂iˇã
;

133  
ö°™˚
;

134 
	}
}

135 
	g¥iv©e
:

136 
Sim∂eSögÀt⁄
 &
sögÀt⁄
;

145 
	sTriSèãSögÀt⁄
 {

146 *
	mfIn°™˚
;

147 
UEº‹Code
 
	mfEº‹Code
;

148 
öt8_t
 
	mfHaveIn°™˚
;

159 *
gëIn°™˚
(
In°™tüt‹Fn
 *
ö°™tüt‹
, c⁄° *
c⁄ãxt
,

160 *&
du∂iˇã
,

161 
UEº‹Code
 &
îr‹Code
);

167 
ª£t
();

170 
	#STATIC_TRI_STATE_SINGLETON
(
«me
Ë
TriSèãSögÀt⁄
Çame={ 
NULL
, 
U_ZERO_ERROR
, 0 }

	)

177 
	gãm∂©e
<
ty≥«me
 
	gT
>

178 ˛as†
	cTriSèãSögÀt⁄Wøµî
 {

179 
	mpublic
:

180 
	$TriSèãSögÀt⁄Wøµî
(
TriSèãSögÀt⁄
 &
s
Ë: 
	$sögÀt⁄
(
s
) {}

181 
	$dñëeIn°™˚
() {

182 
	`dñëe
 (
T
 *)
sögÀt⁄
.
fIn°™˚
;

183 
sögÀt⁄
.
	`ª£t
();

184 
	}
}

185 
T
 *
	$gëIn°™˚
(
In°™tüt‹Fn
 *
ö°™tüt‹
, c⁄° *
c⁄ãxt
,

186 
UEº‹Code
 &
îr‹Code
) {

187 *
du∂iˇã
;

188 
T
 *
ö°™˚
=(T *)
sögÀt⁄
.
	`gëIn°™˚
(
ö°™tüt‹
, 
c⁄ãxt
, 
du∂iˇã
, 
îr‹Code
);

189 
	`dñëe
 (
T
 *)
du∂iˇã
;

190  
ö°™˚
;

191 
	}
}

192 
	g¥iv©e
:

193 
TriSèãSögÀt⁄
 &
sögÀt⁄
;

196 
	gU_NAMESPACE_END


	@normalizer2.cpp

17 
	~"unicode/uty≥s.h
"

19 #i‡!
UCONFIG_NO_NORMALIZATION


21 
	~"unicode/loˇÕoöãr.h
"

22 
	~"unicode/n‹mÆizî2.h
"

23 
	~"unicode/uni°r.h
"

24 
	~"unicode/un‹m.h
"

25 
	~"˝putûs.h
"

26 
	~"c°rög.h
"

27 
	~"muãx.h
"

28 
	~"n‹mÆizî2im∂.h
"

29 
	~"u˛n_cmn.h
"

30 
	~"uhash.h
"

32 
U_NAMESPACE_BEGIN


37 ˛as†
	cNo›N‹mÆizî2
 : 
public
 
N‹mÆizî2
 {

38 
vútuÆ
 
UnicodeSåög
 &

39 
	$n‹mÆize
(c⁄° 
UnicodeSåög
 &
§c
,

40 
UnicodeSåög
 &
de°
,

41 
UEº‹Code
 &
îr‹Code
) const {

42 if(
	`U_SUCCESS
(
îr‹Code
)) {

43 if(&
de°
!=&
§c
) {

44 
de°
=
§c
;

46 
îr‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

49  
de°
;

51 
vútuÆ
 
UnicodeSåög
 &

52 
	$n‹mÆizeSec⁄dAndAµíd
(
UnicodeSåög
 &
fú°
,

53 c⁄° 
UnicodeSåög
 &
£c⁄d
,

54 
UEº‹Code
 &
îr‹Code
) const {

55 if(
	`U_SUCCESS
(
îr‹Code
)) {

56 if(&
fú°
!=&
£c⁄d
) {

57 
fú°
.
	`≠≥nd
(
£c⁄d
);

59 
îr‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

62  
fú°
;

63 
	}
}

64 
vútuÆ
 
	gUnicodeSåög
 &

65 
	$≠≥nd
(
UnicodeSåög
 &
fú°
,

66 c⁄° 
UnicodeSåög
 &
£c⁄d
,

67 
UEº‹Code
 &
îr‹Code
) const {

68 if(
	`U_SUCCESS
(
îr‹Code
)) {

69 if(&
fú°
!=&
£c⁄d
) {

70 
fú°
.
	`≠≥nd
(
£c⁄d
);

72 
îr‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

75  
fú°
;

76 
	}
}

77 
vútuÆ
 
UBoﬁ


78 
	$gëDecomposôi⁄
(
UCh¨32
, 
UnicodeSåög
 &) const {

79  
FALSE
;

80 
	}
}

81 
vútuÆ
 
UBoﬁ


82 
	$isN‹mÆized
(c⁄° 
UnicodeSåög
 &, 
UEº‹Code
 &) const {

83  
TRUE
;

84 
	}
}

85 
vútuÆ
 
UN‹mÆiz©i⁄CheckResu…


86 
	$quickCheck
(c⁄° 
UnicodeSåög
 &, 
UEº‹Code
 &) const {

87  
UNORM_YES
;

88 
	}
}

89 
vútuÆ
 
öt32_t


90 
	$•™QuickCheckYes
(c⁄° 
UnicodeSåög
 &
s
, 
UEº‹Code
 &) const {

91  
s
.
	`Àngth
();

92 
	}
}

93 
vútuÆ
 
UBoﬁ
 
	$hasBound¨yBef‹e
(
UCh¨32
Ëc⁄° {  
TRUE
; 
	}
}

94 
vútuÆ
 
UBoﬁ
 
	$hasBound¨yA·î
(
UCh¨32
Ëc⁄° {  
TRUE
; 
	}
}

95 
vútuÆ
 
UBoﬁ
 
	$isI√π
(
UCh¨32
Ëc⁄° {  
TRUE
; 
	}
}

100 ˛as†
	cN‹mÆizî2WôhIm∂
 : 
public
 
N‹mÆizî2
 {

101 
public
:

102 
	$N‹mÆizî2WôhIm∂
(c⁄° 
N‹mÆizî2Im∂
 &
ni
Ë: 
	$im∂
(
ni
) {}

105 
vútuÆ
 
UnicodeSåög
 &

106 
	$n‹mÆize
(c⁄° 
UnicodeSåög
 &
§c
,

107 
UnicodeSåög
 &
de°
,

108 
UEº‹Code
 &
îr‹Code
) const {

109 if(
	`U_FAILURE
(
îr‹Code
)) {

110 
de°
.
	`£tToBogus
();

111  
de°
;

113 c⁄° 
UCh¨
 *
sAºay
=
§c
.
	`gëBuf„r
();

114 if(&
de°
==&
§c
 || 
sAºay
==
NULL
) {

115 
îr‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

116 
de°
.
	`£tToBogus
();

117  
de°
;

119 
de°
.
	`ªmove
();

120 
Re‹dîögBuf„r
 
	`buf„r
(
im∂
, 
de°
);

121 if(
buf„r
.
	`öô
(
§c
.
	`Àngth
(), 
îr‹Code
)) {

122 
	`n‹mÆize
(
sAºay
, sAºay+
§c
.
	`Àngth
(), 
buf„r
, 
îr‹Code
);

124  
de°
;

125 
	}
}

126 
vútuÆ
 

127 
	$n‹mÆize
(c⁄° 
UCh¨
 *
§c
, c⁄° UCh¨ *
limô
,

128 
Re‹dîögBuf„r
 &
buf„r
, 
UEº‹Code
 &
îr‹Code
) const = 0;

131 
vútuÆ
 
UnicodeSåög
 &

132 
	$n‹mÆizeSec⁄dAndAµíd
(
UnicodeSåög
 &
fú°
,

133 c⁄° 
UnicodeSåög
 &
£c⁄d
,

134 
UEº‹Code
 &
îr‹Code
) const {

135  
	`n‹mÆizeSec⁄dAndAµíd
(
fú°
, 
£c⁄d
, 
TRUE
, 
îr‹Code
);

136 
	}
}

137 
vútuÆ
 
	gUnicodeSåög
 &

138 
	$≠≥nd
(
UnicodeSåög
 &
fú°
,

139 c⁄° 
UnicodeSåög
 &
£c⁄d
,

140 
UEº‹Code
 &
îr‹Code
) const {

141  
	`n‹mÆizeSec⁄dAndAµíd
(
fú°
, 
£c⁄d
, 
FALSE
, 
îr‹Code
);

142 
	}
}

143 
	gUnicodeSåög
 &

144 
	$n‹mÆizeSec⁄dAndAµíd
(
UnicodeSåög
 &
fú°
,

145 c⁄° 
UnicodeSåög
 &
£c⁄d
,

146 
UBoﬁ
 
doN‹mÆize
,

147 
UEº‹Code
 &
îr‹Code
) const {

148 
	`u¥v_checkC™GëBuf„r
(
fú°
, 
îr‹Code
);

149 if(
	`U_FAILURE
(
îr‹Code
)) {

150  
fú°
;

152 c⁄° 
UCh¨
 *
£c⁄dAºay
=
£c⁄d
.
	`gëBuf„r
();

153 if(&
fú°
==&
£c⁄d
 || 
£c⁄dAºay
==
NULL
) {

154 
îr‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

155  
fú°
;

157 
Re‹dîögBuf„r
 
	`buf„r
(
im∂
, 
fú°
);

158 if(
buf„r
.
	`öô
(
fú°
.
	`Àngth
()+
£c⁄d
.Àngth(), 
îr‹Code
)) {

159 
	`n‹mÆizeAndAµíd
(
£c⁄dAºay
, sec⁄dAºay+
£c⁄d
.
	`Àngth
(), 
doN‹mÆize
,

160 
buf„r
, 
îr‹Code
);

162  
fú°
;

163 
	}
}

164 
vútuÆ
 

165 
	$n‹mÆizeAndAµíd
(c⁄° 
UCh¨
 *
§c
, c⁄° UCh¨ *
limô
, 
UBoﬁ
 
doN‹mÆize
,

166 
Re‹dîögBuf„r
 &
buf„r
, 
UEº‹Code
 &
îr‹Code
) const = 0;

167 
vútuÆ
 
UBoﬁ


168 
	$gëDecomposôi⁄
(
UCh¨32
 
c
, 
UnicodeSåög
 &
decomposôi⁄
) const {

169 
UCh¨
 
buf„r
[4];

170 
öt32_t
 
Àngth
;

171 c⁄° 
UCh¨
 *
d
=
im∂
.
	`gëDecomposôi⁄
(
c
, 
buf„r
, 
Àngth
);

172 if(
d
==
NULL
) {

173  
FALSE
;

175 if(
d
==
buf„r
) {

176 
decomposôi⁄
.
	`£tTo
(
buf„r
, 
Àngth
);

178 
decomposôi⁄
.
	`£tTo
(
FALSE
, 
d
, 
Àngth
);

180  
TRUE
;

181 
	}
}

184 
vútuÆ
 
UBoﬁ


185 
	$isN‹mÆized
(c⁄° 
UnicodeSåög
 &
s
, 
UEº‹Code
 &
îr‹Code
) const {

186 if(
	`U_FAILURE
(
îr‹Code
)) {

187  
FALSE
;

189 c⁄° 
UCh¨
 *
sAºay
=
s
.
	`gëBuf„r
();

190 if(
sAºay
==
NULL
) {

191 
îr‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

192  
FALSE
;

194 c⁄° 
UCh¨
 *
sLimô
=
sAºay
+
s
.
	`Àngth
();

195  
sLimô
==
	`•™QuickCheckYes
(
sAºay
, sLimô, 
îr‹Code
);

196 
	}
}

197 
vútuÆ
 
UN‹mÆiz©i⁄CheckResu…


198 
	$quickCheck
(c⁄° 
UnicodeSåög
 &
s
, 
UEº‹Code
 &
îr‹Code
) const {

199  
N‹mÆizî2WôhIm∂
::
	`isN‹mÆized
(
s
, 
îr‹Code
Ë? 
UNORM_YES
 : 
UNORM_NO
;

200 
	}
}

201 
vútuÆ
 
öt32_t


202 
	$•™QuickCheckYes
(c⁄° 
UnicodeSåög
 &
s
, 
UEº‹Code
 &
îr‹Code
) const {

203 if(
	`U_FAILURE
(
îr‹Code
)) {

206 c⁄° 
UCh¨
 *
sAºay
=
s
.
	`gëBuf„r
();

207 if(
sAºay
==
NULL
) {

208 
îr‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

211  (
öt32_t
)(
	`•™QuickCheckYes
(
sAºay
, sAºay+
s
.
	`Àngth
(), 
îr‹Code
)-sArray);

212 
	}
}

213 
vútuÆ
 c⁄° 
UCh¨
 *

214 
	$•™QuickCheckYes
(c⁄° 
UCh¨
 *
§c
, c⁄° UCh¨ *
limô
, 
UEº‹Code
 &
îr‹Code
) const = 0;

216 
vútuÆ
 
UN‹mÆiz©i⁄CheckResu…
 
	$gëQuickCheck
(
UCh¨32
) const {

217  
UNORM_YES
;

218 
	}
}

220 c⁄° 
	gN‹mÆizî2Im∂
 &
	gim∂
;

223 ˛as†
	cDecompo£N‹mÆizî2
 : 
public
 
N‹mÆizî2WôhIm∂
 {

224 
public
:

225 
	$Decompo£N‹mÆizî2
(c⁄° 
N‹mÆizî2Im∂
 &
ni
Ë: 
	$N‹mÆizî2WôhIm∂
(
ni
) {}

227 
¥iv©e
:

228 
vútuÆ
 

229 
	$n‹mÆize
(c⁄° 
UCh¨
 *
§c
, c⁄° UCh¨ *
limô
,

230 
Re‹dîögBuf„r
 &
buf„r
, 
UEº‹Code
 &
îr‹Code
) const {

231 
im∂
.
	`decompo£
(
§c
, 
limô
, &
buf„r
, 
îr‹Code
);

232 
	}
}

233 
usög
 
	gN‹mÆizî2WôhIm∂
::
n‹mÆize
;

234 
vútuÆ
 

235 
	$n‹mÆizeAndAµíd
(c⁄° 
UCh¨
 *
§c
, c⁄° UCh¨ *
limô
, 
UBoﬁ
 
doN‹mÆize
,

236 
Re‹dîögBuf„r
 &
buf„r
, 
UEº‹Code
 &
îr‹Code
) const {

237 
im∂
.
	`decompo£AndAµíd
(
§c
, 
limô
, 
doN‹mÆize
, 
buf„r
, 
îr‹Code
);

238 
	}
}

239 
vútuÆ
 c⁄° 
UCh¨
 *

240 
	$•™QuickCheckYes
(c⁄° 
UCh¨
 *
§c
, c⁄° UCh¨ *
limô
, 
UEº‹Code
 &
îr‹Code
) const {

241  
im∂
.
	`decompo£
(
§c
, 
limô
, 
NULL
, 
îr‹Code
);

242 
	}
}

243 
usög
 
	gN‹mÆizî2WôhIm∂
::
•™QuickCheckYes
;

244 
vútuÆ
 
UN‹mÆiz©i⁄CheckResu…
 
	$gëQuickCheck
(
UCh¨32
 
c
) const {

245  
im∂
.
	`isDecompYes
(im∂.
	`gëN‹m16
(
c
)Ë? 
UNORM_YES
 : 
UNORM_NO
;

246 
	}
}

247 
vútuÆ
 
UBoﬁ
 
	$hasBound¨yBef‹e
(
UCh¨32
 
c
Ëc⁄° {  
im∂
.
	`hasDecompBound¨y
(c, 
TRUE
); 
	}
}

248 
vútuÆ
 
UBoﬁ
 
	$hasBound¨yA·î
(
UCh¨32
 
c
Ëc⁄° {  
im∂
.
	`hasDecompBound¨y
(c, 
FALSE
); 
	}
}

249 
vútuÆ
 
UBoﬁ
 
	$isI√π
(
UCh¨32
 
c
Ëc⁄° {  
im∂
.
	`isDecompI√π
(c); 
	}
}

252 ˛as†
	cCompo£N‹mÆizî2
 : 
public
 
N‹mÆizî2WôhIm∂
 {

253 
public
:

254 
	$Compo£N‹mÆizî2
(c⁄° 
N‹mÆizî2Im∂
 &
ni
, 
UBoﬁ
 
fcc
) :

255 
	`N‹mÆizî2WôhIm∂
(
ni
), 
	$⁄lyC⁄tiguous
(
fcc
) {}

257 
¥iv©e
:

258 
vútuÆ
 

259 
	$n‹mÆize
(c⁄° 
UCh¨
 *
§c
, c⁄° UCh¨ *
limô
,

260 
Re‹dîögBuf„r
 &
buf„r
, 
UEº‹Code
 &
îr‹Code
) const {

261 
im∂
.
	`compo£
(
§c
, 
limô
, 
⁄lyC⁄tiguous
, 
TRUE
, 
buf„r
, 
îr‹Code
);

262 
	}
}

263 
usög
 
	gN‹mÆizî2WôhIm∂
::
n‹mÆize
;

264 
vútuÆ
 

265 
	$n‹mÆizeAndAµíd
(c⁄° 
UCh¨
 *
§c
, c⁄° UCh¨ *
limô
, 
UBoﬁ
 
doN‹mÆize
,

266 
Re‹dîögBuf„r
 &
buf„r
, 
UEº‹Code
 &
îr‹Code
) const {

267 
im∂
.
	`compo£AndAµíd
(
§c
, 
limô
, 
doN‹mÆize
, 
⁄lyC⁄tiguous
, 
buf„r
, 
îr‹Code
);

268 
	}
}

270 
vútuÆ
 
UBoﬁ


271 
	$isN‹mÆized
(c⁄° 
UnicodeSåög
 &
s
, 
UEº‹Code
 &
îr‹Code
) const {

272 if(
	`U_FAILURE
(
îr‹Code
)) {

273  
FALSE
;

275 c⁄° 
UCh¨
 *
sAºay
=
s
.
	`gëBuf„r
();

276 if(
sAºay
==
NULL
) {

277 
îr‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

278  
FALSE
;

280 
UnicodeSåög
 
ãmp
;

281 
Re‹dîögBuf„r
 
	`buf„r
(
im∂
, 
ãmp
);

282 if(!
buf„r
.
	`öô
(5, 
îr‹Code
)) {

283  
FALSE
;

285  
im∂
.
	`compo£
(
sAºay
, sAºay+
s
.
	`Àngth
(), 
⁄lyC⁄tiguous
, 
FALSE
, 
buf„r
, 
îr‹Code
);

286 
	}
}

287 
vútuÆ
 
UN‹mÆiz©i⁄CheckResu…


288 
	$quickCheck
(c⁄° 
UnicodeSåög
 &
s
, 
UEº‹Code
 &
îr‹Code
) const {

289 if(
	`U_FAILURE
(
îr‹Code
)) {

290  
UNORM_MAYBE
;

292 c⁄° 
UCh¨
 *
sAºay
=
s
.
	`gëBuf„r
();

293 if(
sAºay
==
NULL
) {

294 
îr‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

295  
UNORM_MAYBE
;

297 
UN‹mÆiz©i⁄CheckResu…
 
qcResu…
=
UNORM_YES
;

298 
im∂
.
	`compo£QuickCheck
(
sAºay
, sAºay+
s
.
	`Àngth
(), 
⁄lyC⁄tiguous
, &
qcResu…
);

299  
qcResu…
;

300 
	}
}

301 
vútuÆ
 c⁄° 
UCh¨
 *

302 
	$•™QuickCheckYes
(c⁄° 
UCh¨
 *
§c
, c⁄° UCh¨ *
limô
, 
UEº‹Code
 &) const {

303  
im∂
.
	`compo£QuickCheck
(
§c
, 
limô
, 
⁄lyC⁄tiguous
, 
NULL
);

304 
	}
}

305 
usög
 
	gN‹mÆizî2WôhIm∂
::
•™QuickCheckYes
;

306 
vútuÆ
 
UN‹mÆiz©i⁄CheckResu…
 
	$gëQuickCheck
(
UCh¨32
 
c
) const {

307  
im∂
.
	`gëCompQuickCheck
(im∂.
	`gëN‹m16
(
c
));

308 
	}
}

309 
vútuÆ
 
UBoﬁ
 
	$hasBound¨yBef‹e
(
UCh¨32
 
c
) const {

310  
im∂
.
	`hasCompBound¨yBef‹e
(
c
);

311 
	}
}

312 
vútuÆ
 
UBoﬁ
 
	$hasBound¨yA·î
(
UCh¨32
 
c
) const {

313  
im∂
.
	`hasCompBound¨yA·î
(
c
, 
⁄lyC⁄tiguous
, 
FALSE
);

314 
	}
}

315 
vútuÆ
 
UBoﬁ
 
	$isI√π
(
UCh¨32
 
c
) const {

316  
im∂
.
	`hasCompBound¨yA·î
(
c
, 
⁄lyC⁄tiguous
, 
TRUE
);

317 
	}
}

319 c⁄° 
UBoﬁ
 
	g⁄lyC⁄tiguous
;

322 ˛as†
	cFCDN‹mÆizî2
 : 
public
 
N‹mÆizî2WôhIm∂
 {

323 
public
:

324 
	$FCDN‹mÆizî2
(c⁄° 
N‹mÆizî2Im∂
 &
ni
Ë: 
	$N‹mÆizî2WôhIm∂
(
ni
) {}

326 
¥iv©e
:

327 
vútuÆ
 

328 
	$n‹mÆize
(c⁄° 
UCh¨
 *
§c
, c⁄° UCh¨ *
limô
,

329 
Re‹dîögBuf„r
 &
buf„r
, 
UEº‹Code
 &
îr‹Code
) const {

330 
im∂
.
	`makeFCD
(
§c
, 
limô
, &
buf„r
, 
îr‹Code
);

331 
	}
}

332 
usög
 
	gN‹mÆizî2WôhIm∂
::
n‹mÆize
;

333 
vútuÆ
 

334 
	$n‹mÆizeAndAµíd
(c⁄° 
UCh¨
 *
§c
, c⁄° UCh¨ *
limô
, 
UBoﬁ
 
doN‹mÆize
,

335 
Re‹dîögBuf„r
 &
buf„r
, 
UEº‹Code
 &
îr‹Code
) const {

336 
im∂
.
	`makeFCDAndAµíd
(
§c
, 
limô
, 
doN‹mÆize
, 
buf„r
, 
îr‹Code
);

337 
	}
}

338 
vútuÆ
 c⁄° 
UCh¨
 *

339 
	$•™QuickCheckYes
(c⁄° 
UCh¨
 *
§c
, c⁄° UCh¨ *
limô
, 
UEº‹Code
 &
îr‹Code
) const {

340  
im∂
.
	`makeFCD
(
§c
, 
limô
, 
NULL
, 
îr‹Code
);

341 
	}
}

342 
usög
 
	gN‹mÆizî2WôhIm∂
::
•™QuickCheckYes
;

343 
vútuÆ
 
UBoﬁ
 
	$hasBound¨yBef‹e
(
UCh¨32
 
c
Ëc⁄° {  
im∂
.
	`hasFCDBound¨yBef‹e
(c); 
	}
}

344 
vútuÆ
 
UBoﬁ
 
	$hasBound¨yA·î
(
UCh¨32
 
c
Ëc⁄° {  
im∂
.
	`hasFCDBound¨yA·î
(c); 
	}
}

345 
vútuÆ
 
UBoﬁ
 
	$isI√π
(
UCh¨32
 
c
Ëc⁄° {  
im∂
.
	`isFCDI√π
(c); 
	}
}

350 
	gN‹m2AŒModes
 : 
public
 
UMem‹y
 {

351 
N‹m2AŒModes
 *
¸óãIn°™˚
(c⁄° *
∑ckageName
,

352 c⁄° *
«me
,

353 
UEº‹Code
 &
îr‹Code
);

354 
N‹m2AŒModes
(Ë: 
comp
(
im∂
, 
FALSE
), 
decomp
(im∂), 
fcd
(im∂), 
fcc
(im∂, 
TRUE
) {}

356 
N‹mÆizî2Im∂
 
	gim∂
;

357 
Compo£N‹mÆizî2
 
	gcomp
;

358 
Decompo£N‹mÆizî2
 
	gdecomp
;

359 
FCDN‹mÆizî2
 
	gfcd
;

360 
Compo£N‹mÆizî2
 
	gfcc
;

363 
N‹m2AŒModes
 *

364 
	gN‹m2AŒModes
::
	$¸óãIn°™˚
(c⁄° *
∑ckageName
,

365 c⁄° *
«me
,

366 
UEº‹Code
 &
îr‹Code
) {

367 if(
	`U_FAILURE
(
îr‹Code
)) {

368  
NULL
;

370 
LoˇlPoöãr
<
N‹m2AŒModes
> 
	`ÆlModes
(
√w
 Norm2AllModes);

371 if(
ÆlModes
.
	`isNuŒ
()) {

372 
îr‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

373  
NULL
;

375 
ÆlModes
->
im∂
.
	`lﬂd
(
∑ckageName
, 
«me
, 
îr‹Code
);

376  
	`U_SUCCESS
(
îr‹Code
Ë? 
ÆlModes
.
	`‹ph™
(Ë: 
NULL
;

377 
	}
}

379 
U_CDECL_BEGIN


380 
UBoﬁ
 
U_CALLCONV
 
u¥v_n‹mÆizî2_˛ónup
();

381 
U_CDECL_END


383 
˛ass
 
	gN‹m2AŒModesSögÀt⁄
 : 
public
 
TriSèãSögÀt⁄Wøµî
<
N‹m2AŒModes
> {

384 
public
:

385 
N‹m2AŒModesSögÀt⁄
(
TriSèãSögÀt⁄
 &
s
, c⁄° *
n
) :

386 
TriSèãSögÀt⁄Wøµî
<
N‹m2AŒModes
>(
s
), 
«me
(
n
) {}

387 
N‹m2AŒModes
 *
gëIn°™˚
(
UEº‹Code
 &
îr‹Code
) {

388  
	gTriSèãSögÀt⁄Wøµî
<
	gN‹m2AŒModes
>::
gëIn°™˚
(
¸óãIn°™˚
, 
«me
, 
îr‹Code
);

390 
	g¥iv©e
:

391 *
¸óãIn°™˚
(c⁄° *
c⁄ãxt
, 
UEº‹Code
 &
îr‹Code
) {

392 
u˛n_comm⁄_ªgi°îCÀ™up
(
UCLN_COMMON_NORMALIZER2
, 
u¥v_n‹mÆizî2_˛ónup
);

393  
	gN‹m2AŒModes
::
¸óãIn°™˚
(
NULL
, (c⁄° *)
c⁄ãxt
, 
îr‹Code
);

396 c⁄° *
	g«me
;

399 
STATIC_TRI_STATE_SINGLETON
(
nfcSögÀt⁄
);

400 
STATIC_TRI_STATE_SINGLETON
(
nfkcSögÀt⁄
);

401 
STATIC_TRI_STATE_SINGLETON
(
nfkc_cfSögÀt⁄
);

403 
˛ass
 
	gN‹m2SögÀt⁄
 : 
public
 
Sim∂eSögÀt⁄Wøµî
<
N‹mÆizî2
> {

404 
public
:

405 
N‹m2SögÀt⁄
(
Sim∂eSögÀt⁄
 &
s
Ë: 
Sim∂eSögÀt⁄Wøµî
<
N‹mÆizî2
>(s) {}

406 
N‹mÆizî2
 *
gëIn°™˚
(
UEº‹Code
 &
îr‹Code
) {

407  
Sim∂eSögÀt⁄Wøµî
<
N‹mÆizî2
>::
gëIn°™˚
(
¸óãIn°™˚
, 
NULL
, 
îr‹Code
);

409 
	g¥iv©e
:

410 *
¸óãIn°™˚
(c⁄° *, 
UEº‹Code
 &
îr‹Code
) {

411 
N‹mÆizî2
 *
	gno›
=
√w
 
No›N‹mÆizî2
;

412 if(
	gno›
==
NULL
) {

413 
îr‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

415 
u˛n_comm⁄_ªgi°îCÀ™up
(
UCLN_COMMON_NORMALIZER2
, 
u¥v_n‹mÆizî2_˛ónup
);

416  
	gno›
;

420 
STATIC_SIMPLE_SINGLETON
(
no›SögÀt⁄
);

422 
UHashèbÀ
 *
	gˇche
=
NULL
;

424 
U_CDECL_BEGIN


426 
U_CALLCONV
 
	$dñëeN‹m2AŒModes
(*
ÆlModes
) {

427 
	`dñëe
 (
N‹m2AŒModes
 *)
ÆlModes
;

428 
	}
}

430 
UBoﬁ
 
U_CALLCONV
 
	$u¥v_n‹mÆizî2_˛ónup
() {

431 
	`N‹m2AŒModesSögÀt⁄
(
nfcSögÀt⁄
, 
NULL
).
	`dñëeIn°™˚
();

432 
	`N‹m2AŒModesSögÀt⁄
(
nfkcSögÀt⁄
, 
NULL
).
	`dñëeIn°™˚
();

433 
	`N‹m2AŒModesSögÀt⁄
(
nfkc_cfSögÀt⁄
, 
NULL
).
	`dñëeIn°™˚
();

434 
	`N‹m2SögÀt⁄
(
no›SögÀt⁄
).
	`dñëeIn°™˚
();

435 
	`uhash_˛o£
(
ˇche
);

436 
ˇche
=
NULL
;

437  
TRUE
;

438 
	}
}

440 
U_CDECL_END


442 c⁄° 
N‹mÆizî2
 *
	gN‹mÆizî2Fa˘‹y
::
	$gëNFCIn°™˚
(
UEº‹Code
 &
îr‹Code
) {

443 
N‹m2AŒModes
 *
ÆlModes
=
	`N‹m2AŒModesSögÀt⁄
(
nfcSögÀt⁄
, "nfc").
	`gëIn°™˚
(
îr‹Code
);

444  
ÆlModes
!=
NULL
 ? &ÆlModes->
comp
 : NULL;

445 
	}
}

447 c⁄° 
N‹mÆizî2
 *
	gN‹mÆizî2Fa˘‹y
::
	$gëNFDIn°™˚
(
UEº‹Code
 &
îr‹Code
) {

448 
N‹m2AŒModes
 *
ÆlModes
=
	`N‹m2AŒModesSögÀt⁄
(
nfcSögÀt⁄
, "nfc").
	`gëIn°™˚
(
îr‹Code
);

449  
ÆlModes
!=
NULL
 ? &ÆlModes->
decomp
 : NULL;

450 
	}
}

452 c⁄° 
N‹mÆizî2
 *
	gN‹mÆizî2Fa˘‹y
::
	$gëFCDIn°™˚
(
UEº‹Code
 &
îr‹Code
) {

453 
N‹m2AŒModes
 *
ÆlModes
=
	`N‹m2AŒModesSögÀt⁄
(
nfcSögÀt⁄
, "nfc").
	`gëIn°™˚
(
îr‹Code
);

454 if(
ÆlModes
!=
NULL
) {

455 
ÆlModes
->
im∂
.
	`gëFCDTrõ
(
îr‹Code
);

456  &
ÆlModes
->
fcd
;

458  
NULL
;

460 
	}
}

462 c⁄° 
N‹mÆizî2
 *
	gN‹mÆizî2Fa˘‹y
::
	$gëFCCIn°™˚
(
UEº‹Code
 &
îr‹Code
) {

463 
N‹m2AŒModes
 *
ÆlModes
=
	`N‹m2AŒModesSögÀt⁄
(
nfcSögÀt⁄
, "nfc").
	`gëIn°™˚
(
îr‹Code
);

464  
ÆlModes
!=
NULL
 ? &ÆlModes->
fcc
 : NULL;

465 
	}
}

467 c⁄° 
N‹mÆizî2
 *
	gN‹mÆizî2Fa˘‹y
::
	$gëNFKCIn°™˚
(
UEº‹Code
 &
îr‹Code
) {

468 
N‹m2AŒModes
 *
ÆlModes
=

469 
	`N‹m2AŒModesSögÀt⁄
(
nfkcSögÀt⁄
, "nfkc").
	`gëIn°™˚
(
îr‹Code
);

470  
ÆlModes
!=
NULL
 ? &ÆlModes->
comp
 : NULL;

471 
	}
}

473 c⁄° 
N‹mÆizî2
 *
	gN‹mÆizî2Fa˘‹y
::
	$gëNFKDIn°™˚
(
UEº‹Code
 &
îr‹Code
) {

474 
N‹m2AŒModes
 *
ÆlModes
=

475 
	`N‹m2AŒModesSögÀt⁄
(
nfkcSögÀt⁄
, "nfkc").
	`gëIn°™˚
(
îr‹Code
);

476  
ÆlModes
!=
NULL
 ? &ÆlModes->
decomp
 : NULL;

477 
	}
}

479 c⁄° 
N‹mÆizî2
 *
	gN‹mÆizî2Fa˘‹y
::
	$gëNFKC_CFIn°™˚
(
UEº‹Code
 &
îr‹Code
) {

480 
N‹m2AŒModes
 *
ÆlModes
=

481 
	`N‹m2AŒModesSögÀt⁄
(
nfkc_cfSögÀt⁄
, "nfkc_cf").
	`gëIn°™˚
(
îr‹Code
);

482  
ÆlModes
!=
NULL
 ? &ÆlModes->
comp
 : NULL;

483 
	}
}

485 c⁄° 
N‹mÆizî2
 *
	gN‹mÆizî2Fa˘‹y
::
	$gëNo›In°™˚
(
UEº‹Code
 &
îr‹Code
) {

486  
	`N‹m2SögÀt⁄
(
no›SögÀt⁄
).
	`gëIn°™˚
(
îr‹Code
);

487 
	}
}

489 c⁄° 
N‹mÆizî2
 *

490 
	gN‹mÆizî2Fa˘‹y
::
	$gëIn°™˚
(
UN‹mÆiz©i⁄Mode
 
mode
, 
UEº‹Code
 &
îr‹Code
) {

491 if(
	`U_FAILURE
(
îr‹Code
)) {

492  
NULL
;

494 
mode
) {

495 
UNORM_NFD
:

496  
	`gëNFDIn°™˚
(
îr‹Code
);

497 
UNORM_NFKD
:

498  
	`gëNFKDIn°™˚
(
îr‹Code
);

499 
UNORM_NFC
:

500  
	`gëNFCIn°™˚
(
îr‹Code
);

501 
UNORM_NFKC
:

502  
	`gëNFKCIn°™˚
(
îr‹Code
);

503 
UNORM_FCD
:

504  
	`gëFCDIn°™˚
(
îr‹Code
);

506  
	`gëNo›In°™˚
(
îr‹Code
);

508 
	}
}

510 c⁄° 
N‹mÆizî2Im∂
 *

511 
	gN‹mÆizî2Fa˘‹y
::
	$gëNFCIm∂
(
UEº‹Code
 &
îr‹Code
) {

512 
N‹m2AŒModes
 *
ÆlModes
=

513 
	`N‹m2AŒModesSögÀt⁄
(
nfcSögÀt⁄
, "nfc").
	`gëIn°™˚
(
îr‹Code
);

514  
ÆlModes
!=
NULL
 ? &ÆlModes->
im∂
 : NULL;

515 
	}
}

517 c⁄° 
N‹mÆizî2Im∂
 *

518 
	gN‹mÆizî2Fa˘‹y
::
	$gëNFKCIm∂
(
UEº‹Code
 &
îr‹Code
) {

519 
N‹m2AŒModes
 *
ÆlModes
=

520 
	`N‹m2AŒModesSögÀt⁄
(
nfkcSögÀt⁄
, "nfkc").
	`gëIn°™˚
(
îr‹Code
);

521  
ÆlModes
!=
NULL
 ? &ÆlModes->
im∂
 : NULL;

522 
	}
}

524 c⁄° 
N‹mÆizî2Im∂
 *

525 
	gN‹mÆizî2Fa˘‹y
::
	$gëNFKC_CFIm∂
(
UEº‹Code
 &
îr‹Code
) {

526 
N‹m2AŒModes
 *
ÆlModes
=

527 
	`N‹m2AŒModesSögÀt⁄
(
nfkc_cfSögÀt⁄
, "nfkc_cf").
	`gëIn°™˚
(
îr‹Code
);

528  
ÆlModes
!=
NULL
 ? &ÆlModes->
im∂
 : NULL;

529 
	}
}

531 c⁄° 
N‹mÆizî2Im∂
 *

532 
	gN‹mÆizî2Fa˘‹y
::
	$gëIm∂
(c⁄° 
N‹mÆizî2
 *
n‹m2
) {

533  &((
N‹mÆizî2WôhIm∂
 *)
n‹m2
)->
im∂
;

534 
	}
}

536 c⁄° 
UTrõ2
 *

537 
	gN‹mÆizî2Fa˘‹y
::
	$gëFCDTrõ
(
UEº‹Code
 &
îr‹Code
) {

538 
N‹m2AŒModes
 *
ÆlModes
=

539 
	`N‹m2AŒModesSögÀt⁄
(
nfcSögÀt⁄
, "nfc").
	`gëIn°™˚
(
îr‹Code
);

540 if(
ÆlModes
!=
NULL
) {

541  
ÆlModes
->
im∂
.
	`gëFCDTrõ
(
îr‹Code
);

543  
NULL
;

545 
	}
}

547 c⁄° 
N‹mÆizî2
 *

548 
	gN‹mÆizî2
::
	$gëIn°™˚
(c⁄° *
∑ckageName
,

549 c⁄° *
«me
,

550 
UN‹mÆiz©i⁄2Mode
 
mode
,

551 
UEº‹Code
 &
îr‹Code
) {

552 if(
	`U_FAILURE
(
îr‹Code
)) {

553  
NULL
;

555 if(
«me
==
NULL
 || *name==0) {

556 
îr‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

558 
N‹m2AŒModes
 *
ÆlModes
=
NULL
;

559 if(
∑ckageName
==
NULL
) {

560 if(0==
	`u¥v_°rcmp
(
«me
, "nfc")) {

561 
ÆlModes
=
	`N‹m2AŒModesSögÀt⁄
(
nfcSögÀt⁄
, "nfc").
	`gëIn°™˚
(
îr‹Code
);

562 } if(0==
	`u¥v_°rcmp
(
«me
, "nfkc")) {

563 
ÆlModes
=
	`N‹m2AŒModesSögÀt⁄
(
nfkcSögÀt⁄
, "nfkc").
	`gëIn°™˚
(
îr‹Code
);

564 } if(0==
	`u¥v_°rcmp
(
«me
, "nfkc_cf")) {

565 
ÆlModes
=
	`N‹m2AŒModesSögÀt⁄
(
nfkc_cfSögÀt⁄
, "nfkc_cf").
	`gëIn°™˚
(
îr‹Code
);

568 if(
ÆlModes
==
NULL
 && 
	`U_SUCCESS
(
îr‹Code
)) {

570 
Muãx
 
lock
;

571 if(
ˇche
!=
NULL
) {

572 
ÆlModes
=(
N‹m2AŒModes
 *)
	`uhash_gë
(
ˇche
, 
«me
);

575 if(
ÆlModes
==
NULL
) {

576 
LoˇlPoöãr
<
N‹m2AŒModes
> 
	`loˇlAŒModes
(

577 
N‹m2AŒModes
::
	`¸óãIn°™˚
(
∑ckageName
, 
«me
, 
îr‹Code
));

578 if(
	`U_SUCCESS
(
îr‹Code
)) {

579 
Muãx
 
lock
;

580 if(
ˇche
==
NULL
) {

581 
ˇche
=
	`uhash_›í
(
uhash_hashCh¨s
, 
uhash_com∑ªCh¨s
, 
NULL
, &
îr‹Code
);

582 if(
	`U_FAILURE
(
îr‹Code
)) {

583  
NULL
;

585 
	`uhash_£tKeyDñëî
(
ˇche
, 
u¥v_‰ì
);

586 
	`uhash_£tVÆueDñëî
(
ˇche
, 
dñëeN‹m2AŒModes
);

588 *
ãmp
=
	`uhash_gë
(
ˇche
, 
«me
);

589 if(
ãmp
==
NULL
) {

590 
öt32_t
 
keyLígth
=
	`u¥v_°æí
(
«me
)+1;

591 *
«meC›y
=(*)
	`u¥v_mÆloc
(
keyLígth
);

592 if(
«meC›y
==
NULL
) {

593 
îr‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

594  
NULL
;

596 
	`u¥v_mem˝y
(
«meC›y
, 
«me
, 
keyLígth
);

597 
	`uhash_put
(
ˇche
, 
«meC›y
, 
ÆlModes
=
loˇlAŒModes
.
	`‹ph™
(), &
îr‹Code
);

600 
ÆlModes
=(
N‹m2AŒModes
 *)
ãmp
;

605 if(
ÆlModes
!=
NULL
 && 
	`U_SUCCESS
(
îr‹Code
)) {

606 
mode
) {

607 
UNORM2_COMPOSE
:

608  &
ÆlModes
->
comp
;

609 
UNORM2_DECOMPOSE
:

610  &
ÆlModes
->
decomp
;

611 
UNORM2_FCD
:

612 
ÆlModes
->
im∂
.
	`gëFCDTrõ
(
îr‹Code
);

613  &
ÆlModes
->
fcd
;

614 
UNORM2_COMPOSE_CONTIGUOUS
:

615  &
ÆlModes
->
fcc
;

620  
NULL
;

621 
	}
}

623 
	$UOBJECT_DEFINE_NO_RTTI_IMPLEMENTATION
(
N‹mÆizî2
)

625 
U_NAMESPACE_END


629 
U_NAMESPACE_USE


631 
U_DRAFT
 c⁄° 
UN‹mÆizî2
 * 
U_EXPORT2


632 
	$un‹m2_gëIn°™˚
(c⁄° *
∑ckageName
,

633 c⁄° *
«me
,

634 
UN‹mÆiz©i⁄2Mode
 
mode
,

635 
UEº‹Code
 *
pEº‹Code
) {

636  (c⁄° 
UN‹mÆizî2
 *)
N‹mÆizî2
::
	`gëIn°™˚
(
∑ckageName
, 
«me
, 
mode
, *
pEº‹Code
);

637 
	}
}

639 
U_DRAFT
 
U_EXPORT2


640 
	$un‹m2_˛o£
(
UN‹mÆizî2
 *
n‹m2
) {

641 
	`dñëe
 (
N‹mÆizî2
 *)
n‹m2
;

642 
	}
}

644 
U_DRAFT
 
öt32_t
 
U_EXPORT2


645 
	$un‹m2_n‹mÆize
(c⁄° 
UN‹mÆizî2
 *
n‹m2
,

646 c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
Àngth
,

647 
UCh¨
 *
de°
, 
öt32_t
 
ˇ∑côy
,

648 
UEº‹Code
 *
pEº‹Code
) {

649 if(
	`U_FAILURE
(*
pEº‹Code
)) {

652 if–(
§c
==
NULL
 ? 
Àngth
!=0 :Üength<-1) ||

653 (
de°
==
NULL
 ? 
ˇ∑côy
!=0 : capacity<0) ||

654 (
§c
==
de°
 && src!=
NULL
)

656 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

659 
UnicodeSåög
 
	`de°Såög
(
de°
, 0, 
ˇ∑côy
);

661 if(
Àngth
!=0) {

662 c⁄° 
N‹mÆizî2
 *
n2
=(c⁄° N‹mÆizî2 *)
n‹m2
;

663 c⁄° 
N‹mÆizî2WôhIm∂
 *
n2wi
=
dy«mic_ˇ°
<c⁄° N‹mÆizî2WôhIm∂ *>(
n2
);

664 if(
n2wi
!=
NULL
) {

666 
Re‹dîögBuf„r
 
	`buf„r
(
n2wi
->
im∂
, 
de°Såög
);

667 if(
buf„r
.
	`öô
(
Àngth
, *
pEº‹Code
)) {

668 
n2wi
->
	`n‹mÆize
(
§c
, 
Àngth
>=0 ? src+Àngth : 
NULL
, 
buf„r
, *
pEº‹Code
);

671 
UnicodeSåög
 
	`§cSåög
(
Àngth
<0, 
§c
,Üength);

672 
n2
->
	`n‹mÆize
(
§cSåög
, 
de°Såög
, *
pEº‹Code
);

675  
de°Såög
.
	`exåa˘
(
de°
, 
ˇ∑côy
, *
pEº‹Code
);

676 
	}
}

678 
öt32_t


679 
	$n‹mÆizeSec⁄dAndAµíd
(c⁄° 
UN‹mÆizî2
 *
n‹m2
,

680 
UCh¨
 *
fú°
, 
öt32_t
 
fú°Lígth
, i¡32_à
fú°C≠acôy
,

681 c⁄° 
UCh¨
 *
£c⁄d
, 
öt32_t
 
£c⁄dLígth
,

682 
UBoﬁ
 
doN‹mÆize
,

683 
UEº‹Code
 *
pEº‹Code
) {

684 if(
	`U_FAILURE
(*
pEº‹Code
)) {

687 if–(
£c⁄d
==
NULL
 ? 
£c⁄dLígth
!=0 : secondLength<-1) ||

688 (
fú°
==
NULL
 ? (
fú°C≠acôy
!=0 || 
fú°Lígth
!=0) :

689 (
fú°C≠acôy
<0 || 
fú°Lígth
<-1)) ||

690 (
fú°
==
£c⁄d
 && fú°!=
NULL
)

692 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

695 
UnicodeSåög
 
	`fú°Såög
(
fú°
, 
fú°Lígth
, 
fú°C≠acôy
);

697 if(
£c⁄dLígth
!=0) {

698 c⁄° 
N‹mÆizî2
 *
n2
=(c⁄° N‹mÆizî2 *)
n‹m2
;

699 c⁄° 
N‹mÆizî2WôhIm∂
 *
n2wi
=
dy«mic_ˇ°
<c⁄° N‹mÆizî2WôhIm∂ *>(
n2
);

700 if(
n2wi
!=
NULL
) {

702 
Re‹dîögBuf„r
 
	`buf„r
(
n2wi
->
im∂
, 
fú°Såög
);

703 if(
buf„r
.
	`öô
(
fú°Lígth
+
£c⁄dLígth
+1, *
pEº‹Code
)) {

704 
n2wi
->
	`n‹mÆizeAndAµíd
(
£c⁄d
, 
£c⁄dLígth
>=0 ? sec⁄d+£c⁄dLígth : 
NULL
,

705 
doN‹mÆize
, 
buf„r
, *
pEº‹Code
);

708 
UnicodeSåög
 
	`£c⁄dSåög
(
£c⁄dLígth
<0, 
£c⁄d
, secondLength);

709 if(
doN‹mÆize
) {

710 
n2
->
	`n‹mÆizeSec⁄dAndAµíd
(
fú°Såög
, 
£c⁄dSåög
, *
pEº‹Code
);

712 
n2
->
	`≠≥nd
(
fú°Såög
, 
£c⁄dSåög
, *
pEº‹Code
);

716  
fú°Såög
.
	`exåa˘
(
fú°
, 
fú°C≠acôy
, *
pEº‹Code
);

717 
	}
}

719 
U_DRAFT
 
öt32_t
 
U_EXPORT2


720 
	$un‹m2_n‹mÆizeSec⁄dAndAµíd
(c⁄° 
UN‹mÆizî2
 *
n‹m2
,

721 
UCh¨
 *
fú°
, 
öt32_t
 
fú°Lígth
, i¡32_à
fú°C≠acôy
,

722 c⁄° 
UCh¨
 *
£c⁄d
, 
öt32_t
 
£c⁄dLígth
,

723 
UEº‹Code
 *
pEº‹Code
) {

724  
	`n‹mÆizeSec⁄dAndAµíd
(
n‹m2
,

725 
fú°
, 
fú°Lígth
, 
fú°C≠acôy
,

726 
£c⁄d
, 
£c⁄dLígth
,

727 
TRUE
, 
pEº‹Code
);

728 
	}
}

730 
U_DRAFT
 
öt32_t
 
U_EXPORT2


731 
	$un‹m2_≠≥nd
(c⁄° 
UN‹mÆizî2
 *
n‹m2
,

732 
UCh¨
 *
fú°
, 
öt32_t
 
fú°Lígth
, i¡32_à
fú°C≠acôy
,

733 c⁄° 
UCh¨
 *
£c⁄d
, 
öt32_t
 
£c⁄dLígth
,

734 
UEº‹Code
 *
pEº‹Code
) {

735  
	`n‹mÆizeSec⁄dAndAµíd
(
n‹m2
,

736 
fú°
, 
fú°Lígth
, 
fú°C≠acôy
,

737 
£c⁄d
, 
£c⁄dLígth
,

738 
FALSE
, 
pEº‹Code
);

739 
	}
}

741 
U_DRAFT
 
öt32_t
 
U_EXPORT2


742 
	$un‹m2_gëDecomposôi⁄
(c⁄° 
UN‹mÆizî2
 *
n‹m2
,

743 
UCh¨32
 
c
, 
UCh¨
 *
decomposôi⁄
, 
öt32_t
 
ˇ∑côy
,

744 
UEº‹Code
 *
pEº‹Code
) {

745 if(
	`U_FAILURE
(*
pEº‹Code
)) {

748 if(
decomposôi⁄
==
NULL
 ? 
ˇ∑côy
!=0 : capacity<0) {

749 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

752 
UnicodeSåög
 
	`de°Såög
(
decomposôi⁄
, 0, 
ˇ∑côy
);

753 if(
ªöãΩªt_ˇ°
<c⁄° 
N‹mÆizî2
 *>(
n‹m2
)->
	`gëDecomposôi⁄
(
c
, 
de°Såög
)) {

754  
de°Såög
.
	`exåa˘
(
decomposôi⁄
, 
ˇ∑côy
, *
pEº‹Code
);

758 
	}
}

760 
U_DRAFT
 
UBoﬁ
 
U_EXPORT2


761 
	$un‹m2_isN‹mÆized
(c⁄° 
UN‹mÆizî2
 *
n‹m2
,

762 c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
,

763 
UEº‹Code
 *
pEº‹Code
) {

764 if(
	`U_FAILURE
(*
pEº‹Code
)) {

767 if((
s
==
NULL
 && 
Àngth
!=0) ||Üength<-1) {

768 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

771 
UnicodeSåög
 
	`sSåög
(
Àngth
<0, 
s
,Üength);

772  ((c⁄° 
N‹mÆizî2
 *)
n‹m2
)->
	`isN‹mÆized
(
sSåög
, *
pEº‹Code
);

773 
	}
}

775 
U_DRAFT
 
UN‹mÆiz©i⁄CheckResu…
 
U_EXPORT2


776 
	$un‹m2_quickCheck
(c⁄° 
UN‹mÆizî2
 *
n‹m2
,

777 c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
,

778 
UEº‹Code
 *
pEº‹Code
) {

779 if(
	`U_FAILURE
(*
pEº‹Code
)) {

780  
UNORM_NO
;

782 if((
s
==
NULL
 && 
Àngth
!=0) ||Üength<-1) {

783 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

784  
UNORM_NO
;

786 
UnicodeSåög
 
	`sSåög
(
Àngth
<0, 
s
,Üength);

787  ((c⁄° 
N‹mÆizî2
 *)
n‹m2
)->
	`quickCheck
(
sSåög
, *
pEº‹Code
);

788 
	}
}

790 
U_DRAFT
 
öt32_t
 
U_EXPORT2


791 
	$un‹m2_•™QuickCheckYes
(c⁄° 
UN‹mÆizî2
 *
n‹m2
,

792 c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
,

793 
UEº‹Code
 *
pEº‹Code
) {

794 if(
	`U_FAILURE
(*
pEº‹Code
)) {

797 if((
s
==
NULL
 && 
Àngth
!=0) ||Üength<-1) {

798 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

801 
UnicodeSåög
 
	`sSåög
(
Àngth
<0, 
s
,Üength);

802  ((c⁄° 
N‹mÆizî2
 *)
n‹m2
)->
	`•™QuickCheckYes
(
sSåög
, *
pEº‹Code
);

803 
	}
}

805 
U_DRAFT
 
UBoﬁ
 
U_EXPORT2


806 
	$un‹m2_hasBound¨yBef‹e
(c⁄° 
UN‹mÆizî2
 *
n‹m2
, 
UCh¨32
 
c
) {

807  ((c⁄° 
N‹mÆizî2
 *)
n‹m2
)->
	`hasBound¨yBef‹e
(
c
);

808 
	}
}

810 
U_DRAFT
 
UBoﬁ
 
U_EXPORT2


811 
	$un‹m2_hasBound¨yA·î
(c⁄° 
UN‹mÆizî2
 *
n‹m2
, 
UCh¨32
 
c
) {

812  ((c⁄° 
N‹mÆizî2
 *)
n‹m2
)->
	`hasBound¨yA·î
(
c
);

813 
	}
}

815 
U_DRAFT
 
UBoﬁ
 
U_EXPORT2


816 
	$un‹m2_isI√π
(c⁄° 
UN‹mÆizî2
 *
n‹m2
, 
UCh¨32
 
c
) {

817  ((c⁄° 
N‹mÆizî2
 *)
n‹m2
)->
	`isI√π
(
c
);

818 
	}
}

822 
U_CFUNC
 
UN‹mÆiz©i⁄CheckResu…
 
U_EXPORT2


823 
	$un‹m_gëQuickCheck
(
UCh¨32
 
c
, 
UN‹mÆiz©i⁄Mode
 
mode
) {

824 if(
mode
<=
UNORM_NONE
 || 
UNORM_FCD
<=mode) {

825  
UNORM_YES
;

827 
UEº‹Code
 
îr‹Code
=
U_ZERO_ERROR
;

828 c⁄° 
N‹mÆizî2
 *
n‹m2
=
N‹mÆizî2Fa˘‹y
::
	`gëIn°™˚
(
mode
, 
îr‹Code
);

829 if(
	`U_SUCCESS
(
îr‹Code
)) {

830  ((c⁄° 
N‹mÆizî2WôhIm∂
 *)
n‹m2
)->
	`gëQuickCheck
(
c
);

832  
UNORM_MAYBE
;

834 
	}
}

836 
U_CAPI
 c⁄° 
uöt16_t
 * 
U_EXPORT2


837 
	$un‹m_gëFCDTrõIndex
(
UCh¨32
 &
fcdHighSèπ
, 
UEº‹Code
 *
pEº‹Code
) {

838 c⁄° 
UTrõ2
 *
åõ
=
N‹mÆizî2Fa˘‹y
::
	`gëFCDTrõ
(*
pEº‹Code
);

839 if(
	`U_SUCCESS
(*
pEº‹Code
)) {

840 
fcdHighSèπ
=
åõ
->
highSèπ
;

841  
åõ
->
ödex
;

843  
NULL
;

845 
	}
}

	@normalizer2impl.cpp

17 
	~"unicode/uty≥s.h
"

19 #i‡!
UCONFIG_NO_NORMALIZATION


21 
	~"unicode/n‹mÆizî2.h
"

22 
	~"unicode/ud©a.h
"

23 
	~"unicode/u°rög.h
"

24 
	~"cmem‹y.h
"

25 
	~"muãx.h
"

26 
	~"n‹mÆizî2im∂.h
"

27 
	~"uas£π.h
"

28 
	~"uhash.h
"

29 
	~"u£t_imp.h
"

30 
	~"uåõ2.h
"

31 
	~"uve˘‹.h
"

33 
U_NAMESPACE_BEGIN


37 
UBoﬁ
 
	gRe‹dîögBuf„r
::
	$öô
(
öt32_t
 
de°C≠acôy
, 
UEº‹Code
 &
îr‹Code
) {

38 
öt32_t
 
Àngth
=
°r
.
	`Àngth
();

39 
°¨t
=
°r
.
	`gëBuf„r
(
de°C≠acôy
);

40 if(
°¨t
==
NULL
) {

42 
îr‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

43  
FALSE
;

45 
limô
=
°¨t
+
Àngth
;

46 
ªmaöögC≠acôy
=
°r
.
	`gëC≠acôy
()-
Àngth
;

47 
ª‹dîSèπ
=
°¨t
;

48 if(
°¨t
==
limô
) {

49 
œ°CC
=0;

51 
	`£tIãøt‹
();

52 
œ°CC
=
	`¥eviousCC
();

54 if(
œ°CC
>1) {

55 
	`¥eviousCC
()>1) {}

57 
ª‹dîSèπ
=
codePoötLimô
;

59  
TRUE
;

60 
	}
}

62 
UBoﬁ
 
	gRe‹dîögBuf„r
::
	$equÆs
(c⁄° 
UCh¨
 *
ŸhîSèπ
, c⁄° UCh¨ *
ŸhîLimô
) const {

63 
öt32_t
 
Àngth
=(öt32_t)(
limô
-
°¨t
);

65 
Àngth
==(
öt32_t
)(
ŸhîLimô
-
ŸhîSèπ
) &&

66 0==
	`u_memcmp
(
°¨t
, 
ŸhîSèπ
, 
Àngth
);

67 
	}
}

69 
UBoﬁ
 
	gRe‹dîögBuf„r
::
	$≠≥ndSuµÀmíèry
(
UCh¨32
 
c
, 
uöt8_t
 
cc
, 
UEº‹Code
 &
îr‹Code
) {

70 if(
ªmaöögC≠acôy
<2 && !
	`ªsize
(2, 
îr‹Code
)) {

71  
FALSE
;

73 if(
œ°CC
<=
cc
 || cc==0) {

74 
limô
[0]=
	`U16_LEAD
(
c
);

75 
limô
[1]=
	`U16_TRAIL
(
c
);

76 
limô
+=2;

77 
œ°CC
=
cc
;

78 if(
cc
<=1) {

79 
ª‹dîSèπ
=
limô
;

82 
	`ö£π
(
c
, 
cc
);

84 
ªmaöögC≠acôy
-=2;

85  
TRUE
;

86 
	}
}

88 
UBoﬁ
 
	gRe‹dîögBuf„r
::
	$≠≥nd
(c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
,

89 
uöt8_t
 
ÀadCC
, uöt8_à
åaûCC
,

90 
UEº‹Code
 &
îr‹Code
) {

91 if(
Àngth
==0) {

92  
TRUE
;

94 if(
ªmaöögC≠acôy
<
Àngth
 && !
	`ªsize
÷ígth, 
îr‹Code
)) {

95  
FALSE
;

97 
ªmaöögC≠acôy
-=
Àngth
;

98 if(
œ°CC
<=
ÀadCC
 ||ÜeadCC==0) {

99 if(
åaûCC
<=1) {

100 
ª‹dîSèπ
=
limô
+
Àngth
;

101 } if(
ÀadCC
<=1) {

102 
ª‹dîSèπ
=
limô
+1;

104 c⁄° 
UCh¨
 *
sLimô
=
s
+
Àngth
;

105 dÿ{ *
limô
++=*
s
++; } s!=
sLimô
);

106 
œ°CC
=
åaûCC
;

108 
öt32_t
 
i
=0;

109 
UCh¨32
 
c
;

110 
	`U16_NEXT
(
s
, 
i
, 
Àngth
, 
c
);

111 
	`ö£π
(
c
, 
ÀadCC
);

112 
i
<
Àngth
) {

113 
	`U16_NEXT
(
s
, 
i
, 
Àngth
, 
c
);

114 if(
i
<
Àngth
) {

116 
ÀadCC
=
N‹mÆizî2Im∂
::
	`gëCCFromYesOrMaybe
(
im∂
.
	`gëN‹m16
(
c
));

118 
ÀadCC
=
åaûCC
;

120 
	`≠≥nd
(
c
, 
ÀadCC
, 
îr‹Code
);

123  
TRUE
;

124 
	}
}

126 
UBoﬁ
 
	gRe‹dîögBuf„r
::
	$≠≥ndZîoCC
(
UCh¨32
 
c
, 
UEº‹Code
 &
îr‹Code
) {

127 
öt32_t
 
˝Lígth
=
	`U16_LENGTH
(
c
);

128 if(
ªmaöögC≠acôy
<
˝Lígth
 && !
	`ªsize
(˝Lígth, 
îr‹Code
)) {

129  
FALSE
;

131 
ªmaöögC≠acôy
-=
˝Lígth
;

132 if(
˝Lígth
==1) {

133 *
limô
++=(
UCh¨
)
c
;

135 
limô
[0]=
	`U16_LEAD
(
c
);

136 
limô
[1]=
	`U16_TRAIL
(
c
);

137 
limô
+=2;

139 
œ°CC
=0;

140 
ª‹dîSèπ
=
limô
;

141  
TRUE
;

142 
	}
}

144 
UBoﬁ
 
	gRe‹dîögBuf„r
::
	$≠≥ndZîoCC
(c⁄° 
UCh¨
 *
s
, c⁄° UCh¨ *
sLimô
, 
UEº‹Code
 &
îr‹Code
) {

145 if(
s
==
sLimô
) {

146  
TRUE
;

148 
öt32_t
 
Àngth
=(öt32_t)(
sLimô
-
s
);

149 if(
ªmaöögC≠acôy
<
Àngth
 && !
	`ªsize
÷ígth, 
îr‹Code
)) {

150  
FALSE
;

152 
	`u_mem˝y
(
limô
, 
s
, 
Àngth
);

153 
limô
+=
Àngth
;

154 
ªmaöögC≠acôy
-=
Àngth
;

155 
œ°CC
=0;

156 
ª‹dîSèπ
=
limô
;

157  
TRUE
;

158 
	}
}

160 
	gRe‹dîögBuf„r
::
	$ªmove
() {

161 
ª‹dîSèπ
=
limô
=
°¨t
;

162 
ªmaöögC≠acôy
=
°r
.
	`gëC≠acôy
();

163 
œ°CC
=0;

164 
	}
}

166 
	gRe‹dîögBuf„r
::
	$ªmoveSuffix
(
öt32_t
 
suffixLígth
) {

167 if(
suffixLígth
<(
limô
-
°¨t
)) {

168 
limô
-=
suffixLígth
;

169 
ªmaöögC≠acôy
+=
suffixLígth
;

171 
limô
=
°¨t
;

172 
ªmaöögC≠acôy
=
°r
.
	`gëC≠acôy
();

174 
œ°CC
=0;

175 
ª‹dîSèπ
=
limô
;

176 
	}
}

178 
UBoﬁ
 
	gRe‹dîögBuf„r
::
	$ªsize
(
öt32_t
 
≠≥ndLígth
, 
UEº‹Code
 &
îr‹Code
) {

179 
öt32_t
 
ª‹dîSèπIndex
=(öt32_t)(
ª‹dîSèπ
-
°¨t
);

180 
öt32_t
 
Àngth
=(öt32_t)(
limô
-
°¨t
);

181 
°r
.
	`ªÀa£Buf„r
(
Àngth
);

182 
öt32_t
 
√wC≠acôy
=
Àngth
+
≠≥ndLígth
;

183 
öt32_t
 
doubÀC≠acôy
=2*
°r
.
	`gëC≠acôy
();

184 if(
√wC≠acôy
<
doubÀC≠acôy
) {

185 
√wC≠acôy
=
doubÀC≠acôy
;

187 if(
√wC≠acôy
<256) {

188 
√wC≠acôy
=256;

190 
°¨t
=
°r
.
	`gëBuf„r
(
√wC≠acôy
);

191 if(
°¨t
==
NULL
) {

193 
îr‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

194  
FALSE
;

196 
ª‹dîSèπ
=
°¨t
+
ª‹dîSèπIndex
;

197 
limô
=
°¨t
+
Àngth
;

198 
ªmaöögC≠acôy
=
°r
.
	`gëC≠acôy
()-
Àngth
;

199  
TRUE
;

200 
	}
}

202 
	gRe‹dîögBuf„r
::
	$skùPªvious
() {

203 
codePoötLimô
=
codePoötSèπ
;

204 
UCh¨
 
c
=*--
codePoötSèπ
;

205 if(
	`U16_IS_TRAIL
(
c
Ë&& 
°¨t
<
codePoötSèπ
 && 
	`U16_IS_LEAD
(*(codePointStart-1))) {

206 --
codePoötSèπ
;

208 
	}
}

210 
uöt8_t
 
	gRe‹dîögBuf„r
::
	$¥eviousCC
() {

211 
codePoötLimô
=
codePoötSèπ
;

212 if(
ª‹dîSèπ
>=
codePoötSèπ
) {

215 
UCh¨32
 
c
=*--
codePoötSèπ
;

216 if(
c
<
N‹mÆizî2Im∂
::
MIN_CCC_LCCC_CP
) {

220 
UCh¨
 
c2
;

221 if(
	`U16_IS_TRAIL
(
c
Ë&& 
°¨t
<
codePoötSèπ
 && 
	`U16_IS_LEAD
(
c2
=*(codePointStart-1))) {

222 --
codePoötSèπ
;

223 
c
=
	`U16_GET_SUPPLEMENTARY
(
c2
, c);

225  
N‹mÆizî2Im∂
::
	`gëCCFromYesOrMaybe
(
im∂
.
	`gëN‹m16
(
c
));

226 
	}
}

230 
	gRe‹dîögBuf„r
::
	$ö£π
(
UCh¨32
 
c
, 
uöt8_t
 
cc
) {

231 
	`£tIãøt‹
(), 
	`skùPªvious
(); 
	`¥eviousCC
()>
cc
;) {}

233 
UCh¨
 *
q
=
limô
;

234 
UCh¨
 *
r
=
limô
+=
	`U16_LENGTH
(
c
);

236 *--
r
=*--
q
;

237 } 
codePoötLimô
!=
q
);

238 
	`wrôeCodePoöt
(
q
, 
c
);

239 if(
cc
<=1) {

240 
ª‹dîSèπ
=
r
;

242 
	}
}

246 
	gC™⁄IãrD©a
 : 
public
 
UMem‹y
 {

247 
C™⁄IãrD©a
(
UEº‹Code
 &
îr‹Code
);

248 ~
C™⁄IãrD©a
();

249 
addToSèπSë
(
UCh¨32
 
‹igö
, UCh¨32 
decompLód
, 
UEº‹Code
 &
îr‹Code
);

250 
UTrõ2
 *
	gåõ
;

251 
UVe˘‹
 
	gˇn⁄SèπSës
;

254 
	gN‹mÆizî2Im∂
::~
	$N‹mÆizî2Im∂
() {

255 
	`ud©a_˛o£
(
mem‹y
);

256 
	`uåõ2_˛o£
(
n‹mTrõ
);

257 
	`UTrõ2SögÀt⁄
(
fcdTrõSögÀt⁄
).
	`dñëeIn°™˚
();

258 
	`dñëe
 (
C™⁄IãrD©a
 *)
ˇn⁄IãrD©aSögÀt⁄
.
fIn°™˚
;

259 
	}
}

261 
UBoﬁ
 
U_CALLCONV


262 
	gN‹mÆizî2Im∂
::
	$isAc˚±abÀ
(*
c⁄ãxt
,

264 c⁄° 
UD©aInfo
 *
pInfo
) {

266 
pInfo
->
size
>=20 &&

267 
pInfo
->
isBigEndün
==
U_IS_BIG_ENDIAN
 &&

268 
pInfo
->
ch¨£tFamûy
==
U_CHARSET_FAMILY
 &&

269 
pInfo
->
d©aF‹m©
[0]==0x4e &&

270 
pInfo
->
d©aF‹m©
[1]==0x72 &&

271 
pInfo
->
d©aF‹m©
[2]==0x6d &&

272 
pInfo
->
d©aF‹m©
[3]==0x32 &&

273 
pInfo
->
f‹m©Vîsi⁄
[0]==1

275 
N‹mÆizî2Im∂
 *
me
=(N‹mÆizî2Im∂ *)
c⁄ãxt
;

276 
	`u¥v_mem˝y
(
me
->
d©aVîsi⁄
, 
pInfo
->dataVersion, 4);

277  
TRUE
;

279  
FALSE
;

281 
	}
}

284 
	gN‹mÆizî2Im∂
::
	$lﬂd
(c⁄° *
∑ckageName
, c⁄° *
«me
, 
UEº‹Code
 &
îr‹Code
) {

285 if(
	`U_FAILURE
(
îr‹Code
)) {

288 
mem‹y
=
	`ud©a_›íChoi˚
(
∑ckageName
, "ƒm", 
«me
, 
isAc˚±abÀ
, 
this
, &
îr‹Code
);

289 if(
	`U_FAILURE
(
îr‹Code
)) {

292 c⁄° 
uöt8_t
 *
öByãs
=(c⁄° uöt8_à*)
	`ud©a_gëMem‹y
(
mem‹y
);

293 c⁄° 
öt32_t
 *
öIndexes
=(c⁄° i¡32_à*)
öByãs
;

294 
öt32_t
 
ödexesLígth
=
öIndexes
[
IX_NORM_TRIE_OFFSET
]/4;

295 if(
ödexesLígth
<=
IX_MIN_MAYBE_YES
) {

296 
îr‹Code
=
U_INVALID_FORMAT_ERROR
;

300 
möDecompNoCP
=
öIndexes
[
IX_MIN_DECOMP_NO_CP
];

301 
möCompNoMaybeCP
=
öIndexes
[
IX_MIN_COMP_NO_MAYBE_CP
];

303 
möYesNo
=
öIndexes
[
IX_MIN_YES_NO
];

304 
möNoNo
=
öIndexes
[
IX_MIN_NO_NO
];

305 
limôNoNo
=
öIndexes
[
IX_LIMIT_NO_NO
];

306 
möMaybeYes
=
öIndexes
[
IX_MIN_MAYBE_YES
];

308 
öt32_t
 
off£t
=
öIndexes
[
IX_NORM_TRIE_OFFSET
];

309 
öt32_t
 
√xtOff£t
=
öIndexes
[
IX_EXTRA_DATA_OFFSET
];

310 
n‹mTrõ
=
	`uåõ2_›íFromSîülized
(
UTRIE2_16_VALUE_BITS
,

311 
öByãs
+
off£t
, 
√xtOff£t
-off£t, 
NULL
,

312 &
îr‹Code
);

313 if(
	`U_FAILURE
(
îr‹Code
)) {

317 
off£t
=
√xtOff£t
;

318 
maybeYesComposôi⁄s
=(c⁄° 
uöt16_t
 *)(
öByãs
+
off£t
);

319 
exåaD©a
=
maybeYesComposôi⁄s
+(
MIN_NORMAL_MAYBE_YES
-
möMaybeYes
);

320 
	}
}

322 
uöt8_t
 
	gN‹mÆizî2Im∂
::
	$gëTøûCCFromCompYesAndZîoCC
(c⁄° 
UCh¨
 *
˝Sèπ
, c⁄° UCh¨ *
˝Limô
) const {

323 
UCh¨32
 
c
;

324 if(
˝Sèπ
==(
˝Limô
-1)) {

325 
c
=*
˝Sèπ
;

327 
c
=
	`U16_GET_SUPPLEMENTARY
(
˝Sèπ
[0], cpStart[1]);

329 
uöt16_t
 
¥evN‹m16
=
	`gëN‹m16
(
c
);

330 if(
¥evN‹m16
<=
möYesNo
) {

333  (
uöt8_t
)(*
	`gëM≠pög
(
¥evN‹m16
)>>8);

335 
	}
}

337 
U_CDECL_BEGIN


339 
UBoﬁ
 
U_CALLCONV


340 
	$íumPr›îtySèπsR™ge
(c⁄° *
c⁄ãxt
, 
UCh¨32
 
°¨t
, UCh¨32 , 
uöt32_t
 ) {

342 c⁄° 
USëAddî
 *
ß
=(c⁄° USëAddî *)
c⁄ãxt
;

343 
ß
->
	`add
(ß->
£t
, 
°¨t
);

344  
TRUE
;

345 
	}
}

347 
uöt32_t
 
U_CALLCONV


348 
	$£gmítSèπîM≠≥r
(c⁄° * , 
uöt32_t
 
vÆue
) {

349  
vÆue
&
CANON_NOT_SEGMENT_STARTER
;

350 
	}
}

352 
U_CDECL_END


355 
	gN‹mÆizî2Im∂
::
	$addPr›îtySèπs
(c⁄° 
USëAddî
 *
ß
, 
UEº‹Code
 & ) const {

357 
	`uåõ2_íum
(
n‹mTrõ
, 
NULL
, 
íumPr›îtySèπsR™ge
, 
ß
);

360 
UCh¨
 
c
=
H™gul
::
HANGUL_BASE
; c<H™gul::
HANGUL_LIMIT
; c+=H™gul::
JAMO_T_COUNT
) {

361 
ß
->
	`add
(ß->
£t
, 
c
);

362 
ß
->
	`add
(ß->
£t
, 
c
+1);

364 
ß
->
	`add
(ß->
£t
, 
H™gul
::
HANGUL_LIMIT
);

365 
	}
}

368 
	gN‹mÆizî2Im∂
::
	$addC™⁄IãrPr›îtySèπs
(c⁄° 
USëAddî
 *
ß
, 
UEº‹Code
 &
îr‹Code
) const {

370 if(
	`ísuªC™⁄IãrD©a
(
îr‹Code
)) {

372 
	`uåõ2_íum
(((
C™⁄IãrD©a
 *)
ˇn⁄IãrD©aSögÀt⁄
.
fIn°™˚
)->
åõ
,

373 
£gmítSèπîM≠≥r
, 
íumPr›îtySèπsR™ge
, 
ß
);

375 
	}
}

377 c⁄° 
UCh¨
 *

378 
	gN‹mÆizî2Im∂
::
	$c›yLowPªfixFromNulTîmö©ed
(c⁄° 
UCh¨
 *
§c
,

379 
UCh¨32
 
möNìdD©aCP
,

380 
Re‹dîögBuf„r
 *
buf„r
,

381 
UEº‹Code
 &
îr‹Code
) const {

387 c⁄° 
UCh¨
 *
¥evSrc
=
§c
;

388 
UCh¨
 
c
;

389 (
c
=*
§c
++)<
möNìdD©aCP
 && c!=0) {}

392 if(--
§c
!=
¥evSrc
) {

393 if(
buf„r
!=
NULL
) {

394 
buf„r
->
	`≠≥ndZîoCC
(
¥evSrc
, 
§c
, 
îr‹Code
);

397  
§c
;

398 
	}
}

403 c⁄° 
UCh¨
 *

404 
	gN‹mÆizî2Im∂
::
	$decompo£
(c⁄° 
UCh¨
 *
§c
, c⁄° UCh¨ *
limô
,

405 
Re‹dîögBuf„r
 *
buf„r
,

406 
UEº‹Code
 &
îr‹Code
) const {

407 
UCh¨32
 
möNoCP
=
möDecompNoCP
;

408 if(
limô
==
NULL
) {

409 
§c
=
	`c›yLowPªfixFromNulTîmö©ed
(§c, 
möNoCP
, 
buf„r
, 
îr‹Code
);

410 if(
	`U_FAILURE
(
îr‹Code
)) {

411  
§c
;

413 
limô
=
	`u_°rchr
(
§c
, 0);

416 c⁄° 
UCh¨
 *
¥evSrc
;

417 
UCh¨32
 
c
=0;

418 
uöt16_t
 
n‹m16
=0;

421 c⁄° 
UCh¨
 *
¥evBound¨y
=
§c
;

422 
uöt8_t
 
¥evCC
=0;

426 
¥evSrc
=
§c
; src!=
limô
;) {

427 if–(
c
=*
§c
)<
möNoCP
 ||

428 
	`isMo°DecompYesAndZîoCC
(
n‹m16
=
	`UTRIE2_GET16_FROM_U16_SINGLE_LEAD
(
n‹mTrõ
, 
c
))

430 ++
§c
;

431 } if(!
	`U16_IS_SURROGATE
(
c
)) {

434 
UCh¨
 
c2
;

435 if(
	`U16_IS_SURROGATE_LEAD
(
c
)) {

436 if((
§c
+1)!=
limô
 && 
	`U16_IS_TRAIL
(
c2
=src[1])) {

437 
c
=
	`U16_GET_SUPPLEMENTARY
(c, 
c2
);

440 if(
¥evSrc
<
§c
 && 
	`U16_IS_LEAD
(
c2
=*(src-1))) {

441 --
§c
;

442 
c
=
	`U16_GET_SUPPLEMENTARY
(
c2
, c);

445 if(
	`isMo°DecompYesAndZîoCC
(
n‹m16
=
	`gëN‹m16
(
c
))) {

446 
§c
+=
	`U16_LENGTH
(
c
);

453 if(
§c
!=
¥evSrc
) {

454 if(
buf„r
!=
NULL
) {

455 if(!
buf„r
->
	`≠≥ndZîoCC
(
¥evSrc
, 
§c
, 
îr‹Code
)) {

459 
¥evCC
=0;

460 
¥evBound¨y
=
§c
;

463 if(
§c
==
limô
) {

468 
§c
+=
	`U16_LENGTH
(
c
);

469 if(
buf„r
!=
NULL
) {

470 if(!
	`decompo£
(
c
, 
n‹m16
, *
buf„r
, 
îr‹Code
)) {

474 if(
	`isDecompYes
(
n‹m16
)) {

475 
uöt8_t
 
cc
=
	`gëCCFromYesOrMaybe
(
n‹m16
);

476 if(
¥evCC
<=
cc
 || cc==0) {

477 
¥evCC
=
cc
;

478 if(
cc
<=1) {

479 
¥evBound¨y
=
§c
;

484  
¥evBound¨y
;

487  
§c
;

488 
	}
}

494 
UBoﬁ
 
	gN‹mÆizî2Im∂
::
	$decompo£Sh‹t
(c⁄° 
UCh¨
 *
§c
, c⁄° UCh¨ *
limô
,

495 
Re‹dîögBuf„r
 &
buf„r
,

496 
UEº‹Code
 &
îr‹Code
) const {

497 
§c
<
limô
) {

498 
UCh¨32
 
c
;

499 
uöt16_t
 
n‹m16
;

500 
	`UTRIE2_U16_NEXT16
(
n‹mTrõ
, 
§c
, 
limô
, 
c
, 
n‹m16
);

501 if(!
	`decompo£
(
c
, 
n‹m16
, 
buf„r
, 
îr‹Code
)) {

502  
FALSE
;

505  
TRUE
;

506 
	}
}

508 
UBoﬁ
 
	gN‹mÆizî2Im∂
::
	$decompo£
(
UCh¨32
 
c
, 
uöt16_t
 
n‹m16
,

509 
Re‹dîögBuf„r
 &
buf„r
,

510 
UEº‹Code
 &
îr‹Code
) const {

514 if(
	`isDecompYes
(
n‹m16
)) {

516  
buf„r
.
	`≠≥nd
(
c
, 
	`gëCCFromYesOrMaybe
(
n‹m16
), 
îr‹Code
);

517 } if(
	`isH™gul
(
n‹m16
)) {

519 
UCh¨
 
jamos
[3];

520  
buf„r
.
	`≠≥ndZîoCC
(
jamos
, jamos+
H™gul
::
	`decompo£
(
c
, jamos), 
îr‹Code
);

521 } if(
	`isDecompNoAlg‹ôhmic
(
n‹m16
)) {

522 
c
=
	`m≠Alg‹ôhmic
(c, 
n‹m16
);

523 
n‹m16
=
	`gëN‹m16
(
c
);

526 c⁄° 
uöt16_t
 *
m≠pög
=
	`gëM≠pög
(
n‹m16
);

527 
uöt16_t
 
fú°Unô
=*
m≠pög
++;

528 
öt32_t
 
Àngth
=
fú°Unô
&
MAPPING_LENGTH_MASK
;

529 
uöt8_t
 
ÀadCC
, 
åaûCC
;

530 
åaûCC
=(
uöt8_t
)(
fú°Unô
>>8);

531 if(
fú°Unô
&
MAPPING_HAS_CCC_LCCC_WORD
) {

532 
ÀadCC
=(
uöt8_t
)(*
m≠pög
++>>8);

534 
ÀadCC
=0;

536  
buf„r
.
	`≠≥nd
((c⁄° 
UCh¨
 *)
m≠pög
, 
Àngth
, 
ÀadCC
, 
åaûCC
, 
îr‹Code
);

539 
	}
}

541 c⁄° 
UCh¨
 *

542 
	gN‹mÆizî2Im∂
::
	$gëDecomposôi⁄
(
UCh¨32
 
c
, 
UCh¨
 
buf„r
[4], 
öt32_t
 &
Àngth
) const {

543 c⁄° 
UCh¨
 *
decomp
=
NULL
;

544 
uöt16_t
 
n‹m16
;

546 if(
c
<
möDecompNoCP
 || 
	`isDecompYes
(
n‹m16
=
	`gëN‹m16
(c))) {

548  
decomp
;

549 } if(
	`isH™gul
(
n‹m16
)) {

551 
Àngth
=
H™gul
::
	`decompo£
(
c
, 
buf„r
);

552  
buf„r
;

553 } if(
	`isDecompNoAlg‹ôhmic
(
n‹m16
)) {

554 
c
=
	`m≠Alg‹ôhmic
(c, 
n‹m16
);

555 
decomp
=
buf„r
;

556 
Àngth
=0;

557 
	`U16_APPEND_UNSAFE
(
buf„r
, 
Àngth
, 
c
);

560 c⁄° 
uöt16_t
 *
m≠pög
=
	`gëM≠pög
(
n‹m16
);

561 
uöt16_t
 
fú°Unô
=*
m≠pög
++;

562 
Àngth
=
fú°Unô
&
MAPPING_LENGTH_MASK
;

563 if(
fú°Unô
&
MAPPING_HAS_CCC_LCCC_WORD
) {

564 ++
m≠pög
;

566  (c⁄° 
UCh¨
 *)
m≠pög
;

569 
	}
}

571 
	gN‹mÆizî2Im∂
::
	$decompo£AndAµíd
(c⁄° 
UCh¨
 *
§c
, c⁄° UCh¨ *
limô
,

572 
UBoﬁ
 
doDecompo£
,

573 
Re‹dîögBuf„r
 &
buf„r
,

574 
UEº‹Code
 &
îr‹Code
) const {

575 if(
doDecompo£
) {

576 
	`decompo£
(
§c
, 
limô
, &
buf„r
, 
îr‹Code
);

580 
F‹w¨dUTrõ2SåögIãøt‹
 
	`ôî
(
n‹mTrõ
, 
§c
, 
limô
);

581 
uöt8_t
 
fú°CC
, 
¥evCC
, 
cc
;

582 
fú°CC
=
¥evCC
=
cc
=
	`gëCC
(
ôî
.
	`√xt16
());

583 
cc
!=0) {

584 
¥evCC
=
cc
;

585 
cc
=
	`gëCC
(
ôî
.
	`√xt16
());

587 
buf„r
.
	`≠≥nd
(
§c
, (
öt32_t
)(
ôî
.
codePoötSèπ
-§c), 
fú°CC
, 
¥evCC
, 
îr‹Code
) &&

588 
buf„r
.
	`≠≥ndZîoCC
(
ôî
.
codePoötSèπ
, 
limô
, 
îr‹Code
);

589 
	}
}

594 
UBoﬁ
 
	gN‹mÆizî2Im∂
::
	$hasDecompBound¨y
(
UCh¨32
 
c
, 
UBoﬁ
 
bef‹e
) const {

596 if(
c
<
möDecompNoCP
) {

597  
TRUE
;

599 
uöt16_t
 
n‹m16
=
	`gëN‹m16
(
c
);

600 if(
	`isH™gul
(
n‹m16
Ë|| 
	`isDecompYesAndZîoCC
(norm16)) {

601  
TRUE
;

602 } if(
n‹m16
>
MIN_NORMAL_MAYBE_YES
) {

603  
FALSE
;

604 } if(
	`isDecompNoAlg‹ôhmic
(
n‹m16
)) {

605 
c
=
	`m≠Alg‹ôhmic
(c, 
n‹m16
);

608 c⁄° 
uöt16_t
 *
m≠pög
=
	`gëM≠pög
(
n‹m16
);

609 
uöt16_t
 
fú°Unô
=*
m≠pög
++;

610 if((
fú°Unô
&
MAPPING_LENGTH_MASK
)==0) {

611  
FALSE
;

613 if(!
bef‹e
) {

616 if(
fú°Unô
>0x1ff) {

617  
FALSE
;

619 if(
fú°Unô
<=0xff) {

620  
TRUE
;

625  (
fú°Unô
&
MAPPING_HAS_CCC_LCCC_WORD
)==0 || (*
m≠pög
&0xff00)==0;

628 
	}
}

652 
öt32_t
 
	gN‹mÆizî2Im∂
::
	$comböe
(c⁄° 
uöt16_t
 *
li°
, 
UCh¨32
 
åaû
) {

653 
uöt16_t
 
key1
, 
fú°Unô
;

654 if(
åaû
<
COMP_1_TRAIL_LIMIT
) {

657 
key1
=(
uöt16_t
)(
åaû
<<1);

658 
key1
>(
fú°Unô
=*
li°
)) {

659 
li°
+=2+(
fú°Unô
&
COMP_1_TRIPLE
);

661 if(
key1
==(
fú°Unô
&
COMP_1_TRAIL_MASK
)) {

662 if(
fú°Unô
&
COMP_1_TRIPLE
) {

663  ((
öt32_t
)
li°
[1]<<16)|list[2];

665  
li°
[1];

671 
key1
=(
uöt16_t
)(
COMP_1_TRAIL_LIMIT
+

672 (((
åaû
>>
COMP_1_TRAIL_SHIFT
))&

673 ~
COMP_1_TRIPLE
));

674 
uöt16_t
 
key2
=(uöt16_t)(
åaû
<<
COMP_2_TRAIL_SHIFT
);

675 
uöt16_t
 
£c⁄dUnô
;

677 if(
key1
>(
fú°Unô
=*
li°
)) {

678 
li°
+=2+(
fú°Unô
&
COMP_1_TRIPLE
);

679 } if(
key1
==(
fú°Unô
&
COMP_1_TRAIL_MASK
)) {

680 if(
key2
>(
£c⁄dUnô
=
li°
[1])) {

681 if(
fú°Unô
&
COMP_1_LAST_TUPLE
) {

684 
li°
+=3;

686 } if(
key2
==(
£c⁄dUnô
&
COMP_2_TRAIL_MASK
)) {

687  ((
öt32_t
)(
£c⁄dUnô
&~
COMP_2_TRAIL_MASK
)<<16)|
li°
[2];

697 
	}
}

703 
	gN‹mÆizî2Im∂
::
	$addComposôes
(c⁄° 
uöt16_t
 *
li°
, 
UnicodeSë
 &
£t
) const {

704 
uöt16_t
 
fú°Unô
;

705 
öt32_t
 
composôeAndFwd
;

707 
fú°Unô
=*
li°
;

708 if((
fú°Unô
&
COMP_1_TRIPLE
)==0) {

709 
composôeAndFwd
=
li°
[1];

710 
li°
+=2;

712 
composôeAndFwd
=(((
öt32_t
)
li°
[1]&~
COMP_2_TRAIL_MASK
)<<16)|list[2];

713 
li°
+=3;

715 
UCh¨32
 
composôe
=
composôeAndFwd
>>1;

716 if((
composôeAndFwd
&1)!=0) {

717 
	`addComposôes
(
	`gëComposôi⁄sLi°F‹Composôe
(
	`gëN‹m16
(
composôe
)), 
£t
);

719 
£t
.
	`add
(
composôe
);

720 } (
fú°Unô
&
COMP_1_LAST_TUPLE
)==0);

721 
	}
}

733 
	gN‹mÆizî2Im∂
::
	$ªcompo£
(
Re‹dîögBuf„r
 &
buf„r
, 
öt32_t
 
ªcompo£SèπIndex
,

734 
UBoﬁ
 
⁄lyC⁄tiguous
) const {

735 
UCh¨
 *
p
=
buf„r
.
	`gëSèπ
()+
ªcompo£SèπIndex
;

736 
UCh¨
 *
limô
=
buf„r
.
	`gëLimô
();

737 if(
p
==
limô
) {

741 
UCh¨
 *
°¨ãr
, *
pRemove
, *
q
, *
r
;

742 c⁄° 
uöt16_t
 *
composôi⁄sLi°
;

743 
UCh¨32
 
c
, 
composôeAndFwd
;

744 
uöt16_t
 
n‹m16
;

745 
uöt8_t
 
cc
, 
¥evCC
;

746 
UBoﬁ
 
°¨ãrIsSuµÀmíèry
;

750 
composôi⁄sLi°
=
NULL
;

751 
°¨ãr
=
NULL
;

752 
°¨ãrIsSuµÀmíèry
=
FALSE
;

753 
¥evCC
=0;

756 
	`UTRIE2_U16_NEXT16
(
n‹mTrõ
, 
p
, 
limô
, 
c
, 
n‹m16
);

757 
cc
=
	`gëCCFromYesOrMaybe
(
n‹m16
);

759 
	`isMaybe
(
n‹m16
) &&

761 
composôi⁄sLi°
!=
NULL
 &&

763 (
¥evCC
<
cc
 ||ÖrevCC==0)

765 if(
	`isJamoVT
(
n‹m16
)) {

767 if(
c
<
H™gul
::
JAMO_T_BASE
) {

769 
UCh¨
 
¥ev
=(UCh¨)(*
°¨ãr
-
H™gul
::
JAMO_L_BASE
);

770 if(
¥ev
<
H™gul
::
JAMO_L_COUNT
) {

771 
pRemove
=
p
-1;

772 
UCh¨
 
syŒabÀ
=(UChar)

773 (
H™gul
::
HANGUL_BASE
+

774 (
¥ev
*
H™gul
::
JAMO_V_COUNT
+(
c
-H™gul::
JAMO_V_BASE
))*

775 
H™gul
::
JAMO_T_COUNT
);

776 
UCh¨
 
t
;

777 if(
p
!=
limô
 && (
t
=(
UCh¨
)(*p-
H™gul
::
JAMO_T_BASE
))<H™gul::
JAMO_T_COUNT
) {

778 ++
p
;

779 
syŒabÀ
+=
t
;

781 *
°¨ãr
=
syŒabÀ
;

783 
q
=
pRemove
;

784 
r
=
p
;

785 
r
<
limô
) {

786 *
q
++=*
r
++;

788 
limô
=
q
;

789 
p
=
pRemove
;

798 if(
p
==
limô
) {

801 
composôi⁄sLi°
=
NULL
;

803 } if((
composôeAndFwd
=
	`comböe
(
composôi⁄sLi°
, 
c
))>=0) {

805 
UCh¨32
 
composôe
=
composôeAndFwd
>>1;

808 
pRemove
=
p
-
	`U16_LENGTH
(
c
);

809 if(
°¨ãrIsSuµÀmíèry
) {

810 if(
	`U_IS_SUPPLEMENTARY
(
composôe
)) {

812 
°¨ãr
[0]=
	`U16_LEAD
(
composôe
);

813 
°¨ãr
[1]=
	`U16_TRAIL
(
composôe
);

815 *
°¨ãr
=(
UCh¨
)
composôe
;

818 
°¨ãrIsSuµÀmíèry
=
FALSE
;

819 
q
=
°¨ãr
+1;

820 
r
=
q
+1;

821 
r
<
pRemove
) {

822 *
q
++=*
r
++;

824 --
pRemove
;

826 } if(
	`U_IS_SUPPLEMENTARY
(
composôe
)) {

829 
°¨ãrIsSuµÀmíèry
=
TRUE
;

830 ++
°¨ãr
;

831 
q
=
pRemove
;

832 
r
=++
pRemove
;

833 
°¨ãr
<
q
) {

834 *--
r
=*--
q
;

836 *
°¨ãr
=
	`U16_TRAIL
(
composôe
);

837 *--
°¨ãr
=
	`U16_LEAD
(
composôe
);

840 *
°¨ãr
=(
UCh¨
)
composôe
;

844 if(
pRemove
<
p
) {

845 
q
=
pRemove
;

846 
r
=
p
;

847 
r
<
limô
) {

848 *
q
++=*
r
++;

850 
limô
=
q
;

851 
p
=
pRemove
;

855 if(
p
==
limô
) {

859 if(
composôeAndFwd
&1) {

860 
composôi⁄sLi°
=

861 
	`gëComposôi⁄sLi°F‹Composôe
(
	`gëN‹m16
(
composôe
));

863 
composôi⁄sLi°
=
NULL
;

872 
¥evCC
=
cc
;

873 if(
p
==
limô
) {

878 if(
cc
==0) {

880 if((
composôi⁄sLi°
=
	`gëComposôi⁄sLi°F‹DecompYes
(
n‹m16
))!=
NULL
) {

882 if(
	`U_IS_BMP
(
c
)) {

883 
°¨ãrIsSuµÀmíèry
=
FALSE
;

884 
°¨ãr
=
p
-1;

886 
°¨ãrIsSuµÀmíèry
=
TRUE
;

887 
°¨ãr
=
p
-2;

890 } if(
⁄lyC⁄tiguous
) {

892 
composôi⁄sLi°
=
NULL
;

895 
buf„r
.
	`£tRe‹dîögLimô
(
limô
);

896 
	}
}

901 
UBoﬁ


902 
	gN‹mÆizî2Im∂
::
	$compo£
(c⁄° 
UCh¨
 *
§c
, c⁄° UCh¨ *
limô
,

903 
UBoﬁ
 
⁄lyC⁄tiguous
,

904 
UBoﬁ
 
doCompo£
,

905 
Re‹dîögBuf„r
 &
buf„r
,

906 
UEº‹Code
 &
îr‹Code
) const {

919 c⁄° 
UCh¨
 *
¥evBound¨y
=
§c
;

920 
UCh¨32
 
möNoMaybeCP
=
möCompNoMaybeCP
;

921 if(
limô
==
NULL
) {

922 
§c
=
	`c›yLowPªfixFromNulTîmö©ed
(§c, 
möNoMaybeCP
,

923 
doCompo£
 ? &
buf„r
 : 
NULL
,

924 
îr‹Code
);

925 if(
	`U_FAILURE
(
îr‹Code
)) {

926  
FALSE
;

928 if(
¥evBound¨y
<
§c
) {

930 
¥evBound¨y
=
§c
-1;

932 
limô
=
	`u_°rchr
(
§c
, 0);

935 c⁄° 
UCh¨
 *
¥evSrc
;

936 
UCh¨32
 
c
=0;

937 
uöt16_t
 
n‹m16
=0;

940 
uöt8_t
 
¥evCC
=0;

944 
¥evSrc
=
§c
; src!=
limô
;) {

945 if–(
c
=*
§c
)<
möNoMaybeCP
 ||

946 
	`isCompYesAndZîoCC
(
n‹m16
=
	`UTRIE2_GET16_FROM_U16_SINGLE_LEAD
(
n‹mTrõ
, 
c
))

948 ++
§c
;

949 } if(!
	`U16_IS_SURROGATE
(
c
)) {

952 
UCh¨
 
c2
;

953 if(
	`U16_IS_SURROGATE_LEAD
(
c
)) {

954 if((
§c
+1)!=
limô
 && 
	`U16_IS_TRAIL
(
c2
=src[1])) {

955 
c
=
	`U16_GET_SUPPLEMENTARY
(c, 
c2
);

958 if(
¥evSrc
<
§c
 && 
	`U16_IS_LEAD
(
c2
=*(src-1))) {

959 --
§c
;

960 
c
=
	`U16_GET_SUPPLEMENTARY
(
c2
, c);

963 if(
	`isCompYesAndZîoCC
(
n‹m16
=
	`gëN‹m16
(
c
))) {

964 
§c
+=
	`U16_LENGTH
(
c
);

971 if(
§c
!=
¥evSrc
) {

972 if(
doCompo£
) {

973 if(!
buf„r
.
	`≠≥ndZîoCC
(
¥evSrc
, 
§c
, 
îr‹Code
)) {

977 
¥evCC
=0;

979 if(
§c
==
limô
) {

983 
¥evBound¨y
=
§c
-1;

984 if–
	`U16_IS_TRAIL
(*
¥evBound¨y
Ë&& 
¥evSrc
<prevBoundary &&

985 
	`U16_IS_LEAD
(*(
¥evBound¨y
-1))

987 --
¥evBound¨y
;

990 
¥evSrc
=
§c
;

991 } if(
§c
==
limô
) {

995 
§c
+=
	`U16_LENGTH
(
c
);

1003 if(
	`isJamoVT
(
n‹m16
Ë&& 
¥evBound¨y
!=
¥evSrc
) {

1004 
UCh¨
 
¥ev
=*(
¥evSrc
-1);

1005 
UBoﬁ
 
√edToDecompo£
=
FALSE
;

1006 if(
c
<
H™gul
::
JAMO_T_BASE
) {

1008 
¥ev
=(
UCh¨
)’ªv-
H™gul
::
JAMO_L_BASE
);

1009 if(
¥ev
<
H™gul
::
JAMO_L_COUNT
) {

1010 if(!
doCompo£
) {

1011  
FALSE
;

1013 
UCh¨
 
syŒabÀ
=(UChar)

1014 (
H™gul
::
HANGUL_BASE
+

1015 (
¥ev
*
H™gul
::
JAMO_V_COUNT
+(
c
-H™gul::
JAMO_V_BASE
))*

1016 
H™gul
::
JAMO_T_COUNT
);

1017 
UCh¨
 
t
;

1018 if(
§c
!=
limô
 && (
t
=(
UCh¨
)(*§c-
H™gul
::
JAMO_T_BASE
))<H™gul::
JAMO_T_COUNT
) {

1019 ++
§c
;

1020 
syŒabÀ
+=
t
;

1021 
¥evBound¨y
=
§c
;

1022 
buf„r
.
	`£tLa°Ch¨
(
syŒabÀ
);

1034 
√edToDecompo£
=
TRUE
;

1036 } if(
H™gul
::
	`isH™gulWôhoutJamoT
(
¥ev
)) {

1039 if(!
doCompo£
) {

1040  
FALSE
;

1042 
buf„r
.
	`£tLa°Ch¨
((
UCh¨
)(
¥ev
+
c
-
H™gul
::
JAMO_T_BASE
));

1043 
¥evBound¨y
=
§c
;

1046 if(!
√edToDecompo£
) {

1048 if(
doCompo£
) {

1049 if(!
buf„r
.
	`≠≥ndBMP
((
UCh¨
)
c
, 0, 
îr‹Code
)) {

1053 
¥evCC
=0;

1080 if(
n‹m16
>=
MIN_YES_YES_WITH_CC
) {

1081 
uöt8_t
 
cc
=(uöt8_t)
n‹m16
;

1082 if–
⁄lyC⁄tiguous
 &&

1083 (
doCompo£
 ? 
buf„r
.
	`gëLa°CC
(Ë: 
¥evCC
)==0 &&

1084 
¥evBound¨y
<
¥evSrc
 &&

1092 
	`gëTøûCCFromCompYesAndZîoCC
(
¥evBound¨y
, 
¥evSrc
)>
cc


1095 if(!
doCompo£
) {

1096  
FALSE
;

1098 } if(
doCompo£
) {

1099 if(!
buf„r
.
	`≠≥nd
(
c
, 
cc
, 
îr‹Code
)) {

1103 } if(
¥evCC
<=
cc
) {

1104 
¥evCC
=
cc
;

1107  
FALSE
;

1109 } if(!
doCompo£
 && !
	`isMaybeOrN⁄ZîoCC
(
n‹m16
)) {

1110  
FALSE
;

1128 if(
	`hasCompBound¨yBef‹e
(
c
, 
n‹m16
)) {

1129 
¥evBound¨y
=
¥evSrc
;

1130 } if(
doCompo£
) {

1131 
buf„r
.
	`ªmoveSuffix
((
öt32_t
)(
¥evSrc
-
¥evBound¨y
));

1136 
§c
=(
UCh¨
 *)
	`födNextCompBound¨y
(§c, 
limô
);

1139 
öt32_t
 
ªcompo£SèπIndex
=
buf„r
.
	`Àngth
();

1140 if(!
	`decompo£Sh‹t
(
¥evBound¨y
, 
§c
, 
buf„r
, 
îr‹Code
)) {

1143 
	`ªcompo£
(
buf„r
, 
ªcompo£SèπIndex
, 
⁄lyC⁄tiguous
);

1144 if(!
doCompo£
) {

1145 if(!
buf„r
.
	`equÆs
(
¥evBound¨y
, 
§c
)) {

1146  
FALSE
;

1148 
buf„r
.
	`ªmove
();

1149 
¥evCC
=0;

1153 
¥evBound¨y
=
§c
;

1155  
TRUE
;

1156 
	}
}

1161 c⁄° 
UCh¨
 *

1162 
	gN‹mÆizî2Im∂
::
	$compo£QuickCheck
(c⁄° 
UCh¨
 *
§c
, c⁄° UCh¨ *
limô
,

1163 
UBoﬁ
 
⁄lyC⁄tiguous
,

1164 
UN‹mÆiz©i⁄CheckResu…
 *
pQCResu…
) const {

1169 c⁄° 
UCh¨
 *
¥evBound¨y
=
§c
;

1170 
UCh¨32
 
möNoMaybeCP
=
möCompNoMaybeCP
;

1171 if(
limô
==
NULL
) {

1172 
UEº‹Code
 
îr‹Code
=
U_ZERO_ERROR
;

1173 
§c
=
	`c›yLowPªfixFromNulTîmö©ed
(§c, 
möNoMaybeCP
, 
NULL
, 
îr‹Code
);

1174 if(
¥evBound¨y
<
§c
) {

1176 
¥evBound¨y
=
§c
-1;

1178 
limô
=
	`u_°rchr
(
§c
, 0);

1181 c⁄° 
UCh¨
 *
¥evSrc
;

1182 
UCh¨32
 
c
=0;

1183 
uöt16_t
 
n‹m16
=0;

1184 
uöt8_t
 
¥evCC
=0;

1188 
¥evSrc
=
§c
;;) {

1189 if(
§c
==
limô
) {

1190  
§c
;

1192 if–(
c
=*
§c
)<
möNoMaybeCP
 ||

1193 
	`isCompYesAndZîoCC
(
n‹m16
=
	`UTRIE2_GET16_FROM_U16_SINGLE_LEAD
(
n‹mTrõ
, 
c
))

1195 ++
§c
;

1196 } if(!
	`U16_IS_SURROGATE
(
c
)) {

1199 
UCh¨
 
c2
;

1200 if(
	`U16_IS_SURROGATE_LEAD
(
c
)) {

1201 if((
§c
+1)!=
limô
 && 
	`U16_IS_TRAIL
(
c2
=src[1])) {

1202 
c
=
	`U16_GET_SUPPLEMENTARY
(c, 
c2
);

1205 if(
¥evSrc
<
§c
 && 
	`U16_IS_LEAD
(
c2
=*(src-1))) {

1206 --
§c
;

1207 
c
=
	`U16_GET_SUPPLEMENTARY
(
c2
, c);

1210 if(
	`isCompYesAndZîoCC
(
n‹m16
=
	`gëN‹m16
(
c
))) {

1211 
§c
+=
	`U16_LENGTH
(
c
);

1217 if(
§c
!=
¥evSrc
) {

1219 
¥evBound¨y
=
§c
-1;

1220 if–
	`U16_IS_TRAIL
(*
¥evBound¨y
Ë&& 
¥evSrc
<prevBoundary &&

1221 
	`U16_IS_LEAD
(*(
¥evBound¨y
-1))

1223 --
¥evBound¨y
;

1225 
¥evCC
=0;

1227 
¥evSrc
=
§c
;

1230 
§c
+=
	`U16_LENGTH
(
c
);

1236 if(
	`isMaybeOrN⁄ZîoCC
(
n‹m16
)) {

1237 
uöt8_t
 
cc
=
	`gëCCFromYesOrMaybe
(
n‹m16
);

1238 if–
⁄lyC⁄tiguous
 &&

1239 
cc
!=0 &&

1240 
¥evCC
==0 &&

1241 
¥evBound¨y
<
¥evSrc
 &&

1249 
	`gëTøûCCFromCompYesAndZîoCC
(
¥evBound¨y
, 
¥evSrc
)>
cc


1252 } if(
¥evCC
<=
cc
 || cc==0) {

1253 
¥evCC
=
cc
;

1254 if(
n‹m16
<
MIN_YES_YES_WITH_CC
) {

1255 if(
pQCResu…
!=
NULL
) {

1256 *
pQCResu…
=
UNORM_MAYBE
;

1258  
¥evBound¨y
;

1264 if(
pQCResu…
!=
NULL
) {

1265 *
pQCResu…
=
UNORM_NO
;

1267  
¥evBound¨y
;

1269 
	}
}

1271 
	gN‹mÆizî2Im∂
::
	$compo£AndAµíd
(c⁄° 
UCh¨
 *
§c
, c⁄° UCh¨ *
limô
,

1272 
UBoﬁ
 
doCompo£
,

1273 
UBoﬁ
 
⁄lyC⁄tiguous
,

1274 
Re‹dîögBuf„r
 &
buf„r
,

1275 
UEº‹Code
 &
îr‹Code
) const {

1276 if(!
buf„r
.
	`isEm±y
()) {

1277 c⁄° 
UCh¨
 *
fú°SèπîInSrc
=
	`födNextCompBound¨y
(
§c
, 
limô
);

1278 if(
§c
!=
fú°SèπîInSrc
) {

1279 c⁄° 
UCh¨
 *
œ°SèπîInDe°
=
	`födPªviousCompBound¨y
(
buf„r
.
	`gëSèπ
(),

1280 
buf„r
.
	`gëLimô
());

1281 
UnicodeSåög
 
	`middÀ
(
œ°SèπîInDe°
,

1282 (
öt32_t
)(
buf„r
.
	`gëLimô
()-
œ°SèπîInDe°
));

1283 
buf„r
.
	`ªmoveSuffix
((
öt32_t
)(buf„r.
	`gëLimô
()-
œ°SèπîInDe°
));

1284 
middÀ
.
	`≠≥nd
(
§c
, (
öt32_t
)(
fú°SèπîInSrc
-src));

1285 c⁄° 
UCh¨
 *
middÀSèπ
=
middÀ
.
	`gëBuf„r
();

1286 
	`compo£
(
middÀSèπ
, middÀSèπ+
middÀ
.
	`Àngth
(), 
⁄lyC⁄tiguous
,

1287 
TRUE
, 
buf„r
, 
îr‹Code
);

1288 if(
	`U_FAILURE
(
îr‹Code
)) {

1291 
§c
=
fú°SèπîInSrc
;

1294 if(
doCompo£
) {

1295 
	`compo£
(
§c
, 
limô
, 
⁄lyC⁄tiguous
, 
TRUE
, 
buf„r
, 
îr‹Code
);

1297 
buf„r
.
	`≠≥ndZîoCC
(
§c
, 
limô
, 
îr‹Code
);

1299 
	}
}

1308 
UBoﬁ
 
	gN‹mÆizî2Im∂
::
	$hasCompBound¨yBef‹e
(
UCh¨32
 
c
, 
uöt16_t
 
n‹m16
) const {

1310 if(
	`isCompYesAndZîoCC
(
n‹m16
)) {

1311  
TRUE
;

1312 } if(
	`isMaybeOrN⁄ZîoCC
(
n‹m16
)) {

1313  
FALSE
;

1314 } if(
	`isDecompNoAlg‹ôhmic
(
n‹m16
)) {

1315 
c
=
	`m≠Alg‹ôhmic
(c, 
n‹m16
);

1316 
n‹m16
=
	`gëN‹m16
(
c
);

1319 c⁄° 
uöt16_t
 *
m≠pög
=
	`gëM≠pög
(
n‹m16
);

1320 
uöt16_t
 
fú°Unô
=*
m≠pög
++;

1321 if((
fú°Unô
&
MAPPING_LENGTH_MASK
)==0) {

1322  
FALSE
;

1324 if((
fú°Unô
&
MAPPING_HAS_CCC_LCCC_WORD
Ë&& (*
m≠pög
++&0xff00)) {

1325  
FALSE
;

1327 
öt32_t
 
i
=0;

1328 
UCh¨32
 
c
;

1329 
	`U16_NEXT_UNSAFE
(
m≠pög
, 
i
, 
c
);

1330  
	`isCompYesAndZîoCC
(
	`gëN‹m16
(
c
));

1333 
	}
}

1335 
UBoﬁ
 
	gN‹mÆizî2Im∂
::
	$hasCompBound¨yA·î
(
UCh¨32
 
c
, 
UBoﬁ
 
⁄lyC⁄tiguous
, UBoﬁ 
ã°I√π
) const {

1337 
uöt16_t
 
n‹m16
=
	`gëN‹m16
(
c
);

1338 if(
	`isI√π
(
n‹m16
)) {

1339  
TRUE
;

1340 } if(
n‹m16
<=
möYesNo
) {

1343  
	`isH™gul
(
n‹m16
Ë&& !
H™gul
::
	`isH™gulWôhoutJamoT
((
UCh¨
)
c
);

1344 } if(
n‹m16
>(
ã°I√π
 ? 
möNoNo
 : 
möMaybeYes
)) {

1345  
FALSE
;

1346 } if(
	`isDecompNoAlg‹ôhmic
(
n‹m16
)) {

1347 
c
=
	`m≠Alg‹ôhmic
(c, 
n‹m16
);

1352 c⁄° 
uöt16_t
 *
m≠pög
=
	`gëM≠pög
(
n‹m16
);

1353 
uöt16_t
 
fú°Unô
=*
m≠pög
;

1359 (
fú°Unô
&
MAPPING_LENGTH_MASK
)!=0 &&

1360 (
fú°Unô
&(
MAPPING_PLUS_COMPOSITION_LIST
|
MAPPING_NO_COMP_BOUNDARY_AFTER
))==0 &&

1361 (!
⁄lyC⁄tiguous
 || 
fú°Unô
<=0x1ff);

1364 
	}
}

1366 c⁄° 
UCh¨
 *
	gN‹mÆizî2Im∂
::
	$födPªviousCompBound¨y
(c⁄° 
UCh¨
 *
°¨t
, c⁄° UCh¨ *
p
) const {

1367 
Backw¨dUTrõ2SåögIãøt‹
 
	`ôî
(
n‹mTrõ
, 
°¨t
, 
p
);

1368 
uöt16_t
 
n‹m16
;

1370 
n‹m16
=
ôî
.
	`¥evious16
();

1371 } !
	`hasCompBound¨yBef‹e
(
ôî
.
codePoöt
, 
n‹m16
));

1374  
ôî
.
codePoötSèπ
;

1375 
	}
}

1377 c⁄° 
UCh¨
 *
	gN‹mÆizî2Im∂
::
	$födNextCompBound¨y
(c⁄° 
UCh¨
 *
p
, c⁄° UCh¨ *
limô
) const {

1378 
F‹w¨dUTrõ2SåögIãøt‹
 
	`ôî
(
n‹mTrõ
, 
p
, 
limô
);

1379 
uöt16_t
 
n‹m16
;

1381 
n‹m16
=
ôî
.
	`√xt16
();

1382 } !
	`hasCompBound¨yBef‹e
(
ôî
.
codePoöt
, 
n‹m16
));

1383  
ôî
.
codePoötSèπ
;

1384 
	}
}

1386 ˛as†
	cFCDTrõSögÀt⁄
 : 
public
 
UTrõ2SögÀt⁄
 {

1387 
public
:

1388 
	$FCDTrõSögÀt⁄
(
Sim∂eSögÀt⁄
 &
s
, 
N‹mÆizî2Im∂
 &
ni
, 
UEº‹Code
 &
ec
) :

1389 
	`UTrõ2SögÀt⁄
(
s
), 
	`im∂
(
ni
), 
	$îr‹Code
(
ec
) {}

1390 
UTrõ2
 *
	$gëIn°™˚
(
UEº‹Code
 &
îr‹Code
) {

1391  
UTrõ2SögÀt⁄
::
	`gëIn°™˚
(
¸óãIn°™˚
, 
this
, 
îr‹Code
);

1392 
	}
}

1393 *
¸óãIn°™˚
(c⁄° *
c⁄ãxt
, 
UEº‹Code
 &
îr‹Code
);

1394 
UBoﬁ
 
	$øngeH™dÀr
(
UCh¨32
 
°¨t
, UCh¨32 
íd
, 
uöt32_t
 
vÆue
) {

1395 if(
vÆue
!=0) {

1396 
im∂
.
	`£tFCD16FromN‹m16
(
°¨t
, 
íd
, (
uöt16_t
)
vÆue
, 
√wFCDTrõ
, 
îr‹Code
);

1398  
	`U_SUCCESS
(
îr‹Code
);

1399 
	}
}

1401 
	gN‹mÆizî2Im∂
 &
	gim∂
;

1402 
UTrõ2
 *
	g√wFCDTrõ
;

1403 
	gUEº‹Code
 &
	gîr‹Code
;

1406 
U_CDECL_BEGIN


1409 
UBoﬁ
 
U_CALLCONV


1410 
	$íumR™geH™dÀr
(c⁄° *
c⁄ãxt
, 
UCh¨32
 
°¨t
, UCh¨32 
íd
, 
uöt32_t
 
vÆue
) {

1411  ((
FCDTrõSögÀt⁄
 *)
c⁄ãxt
)->
	`øngeH™dÀr
(
°¨t
, 
íd
, 
vÆue
);

1412 
	}
}

1416 
UBoﬁ
 
U_CALLCONV


1417 
	$íumR™geOrVÆue
(c⁄° *
c⁄ãxt
, 
UCh¨32
 , UCh¨32 , 
uöt32_t
 
vÆue
) {

1418 *((
uöt32_t
 *)
c⁄ãxt
)|=
vÆue
;

1419  
TRUE
;

1420 
	}
}

1422 
U_CDECL_END


1424 *
	gFCDTrõSögÀt⁄
::
	$¸óãIn°™˚
(c⁄° *
c⁄ãxt
, 
UEº‹Code
 &
îr‹Code
) {

1425 
FCDTrõSögÀt⁄
 *
me
=(FCDTrõSögÀt⁄ *)
c⁄ãxt
;

1426 
me
->
√wFCDTrõ
=
	`uåõ2_›í
(0, 0, &
îr‹Code
);

1427 if(
	`U_SUCCESS
(
îr‹Code
)) {

1428 
	`uåõ2_íum
(
me
->
im∂
.
	`gëN‹mTrõ
(), 
NULL
, 
íumR™geH™dÀr
, me);

1429 
UCh¨
 
Àad
=0xd800;Üead<0xdc00; ++lead) {

1430 
uöt32_t
 
‹edVÆue
=
	`uåõ2_gë32
(
me
->
√wFCDTrõ
, 
Àad
);

1431 
	`uåõ2_íumF‹LódSuºog©e
(
me
->
√wFCDTrõ
, 
Àad
, 
NULL
, 
íumR™geOrVÆue
, &
‹edVÆue
);

1432 if(
‹edVÆue
!=0) {

1437 if(
‹edVÆue
>0xff) {

1438 
‹edVÆue
=0x100|(oredValue&0xff);

1440 
	`uåõ2_£t32F‹LódSuºog©eCodeUnô
(
me
->
√wFCDTrõ
, 
Àad
, 
‹edVÆue
, &
îr‹Code
);

1443 
	`uåõ2_‰ìze
(
me
->
√wFCDTrõ
, 
UTRIE2_16_VALUE_BITS
, &
îr‹Code
);

1444 if(
	`U_SUCCESS
(
îr‹Code
)) {

1445  
me
->
√wFCDTrõ
;

1448 
	`uåõ2_˛o£
(
me
->
√wFCDTrõ
);

1449  
NULL
;

1450 
	}
}

1452 
	gN‹mÆizî2Im∂
::
	$£tFCD16FromN‹m16
(
UCh¨32
 
°¨t
, UCh¨32 
íd
, 
uöt16_t
 
n‹m16
,

1453 
UTrõ2
 *
√wFCDTrõ
, 
UEº‹Code
 &
îr‹Code
) const {

1456 if(
n‹m16
>=
MIN_NORMAL_MAYBE_YES
) {

1457 
n‹m16
&=0xff;

1458 
n‹m16
|=norm16<<8;

1459 } if(
n‹m16
<=
möYesNo
 || 
möMaybeYes
<=norm16) {

1462 } if(
limôNoNo
<=
n‹m16
) {

1463 
öt32_t
 
dñè
=
n‹m16
-(
möMaybeYes
-
MAX_DELTA
-1);

1464 if(
°¨t
==
íd
) {

1465 
°¨t
+=
dñè
;

1466 
n‹m16
=
	`gëN‹m16
(
°¨t
);

1470 
UCh¨32
 
c
=
°¨t
+
dñè
;

1471 
	`£tFCD16FromN‹m16
(
c
, c, 
	`gëN‹m16
(c), 
√wFCDTrõ
, 
îr‹Code
);

1472 } ++
°¨t
<=
íd
);

1477 c⁄° 
uöt16_t
 *
m≠pög
=
	`gëM≠pög
(
n‹m16
);

1478 
uöt16_t
 
fú°Unô
=*
m≠pög
;

1479 if((
fú°Unô
&
MAPPING_LENGTH_MASK
)==0) {

1483 
n‹m16
=0x1ff;

1485 if(
fú°Unô
&
MAPPING_HAS_CCC_LCCC_WORD
) {

1486 
n‹m16
=
m≠pög
[1]&0xff00;

1488 
n‹m16
=0;

1490 
n‹m16
|=
fú°Unô
>>8;

1493 
	`uåõ2_£tR™ge32
(
√wFCDTrõ
, 
°¨t
, 
íd
, 
n‹m16
, 
TRUE
, &
îr‹Code
);

1496 
	}
}

1498 c⁄° 
UTrõ2
 *
	gN‹mÆizî2Im∂
::
	$gëFCDTrõ
(
UEº‹Code
 &
îr‹Code
) const {

1500 
N‹mÆizî2Im∂
 *
me
=
c⁄°_ˇ°
<N‹mÆizî2Im∂ *>(
this
);

1501  
	`FCDTrõSögÀt⁄
(
me
->
fcdTrõSögÀt⁄
, *me, 
îr‹Code
).
	`gëIn°™˚
(errorCode);

1502 
	}
}

1507 c⁄° 
UCh¨
 *

1508 
	gN‹mÆizî2Im∂
::
	$makeFCD
(c⁄° 
UCh¨
 *
§c
, c⁄° UCh¨ *
limô
,

1509 
Re‹dîögBuf„r
 *
buf„r
,

1510 
UEº‹Code
 &
îr‹Code
) const {

1513 c⁄° 
UCh¨
 *
¥evBound¨y
=
§c
;

1514 
öt32_t
 
¥evFCD16
=0;

1515 if(
limô
==
NULL
) {

1516 
§c
=
	`c›yLowPªfixFromNulTîmö©ed
(§c, 
MIN_CCC_LCCC_CP
, 
buf„r
, 
îr‹Code
);

1517 if(
	`U_FAILURE
(
îr‹Code
)) {

1518  
§c
;

1520 if(
¥evBound¨y
<
§c
) {

1521 
¥evBound¨y
=
§c
;

1524 
¥evFCD16
=
	`gëFCD16FromSögÀLód
(*(
§c
-1));

1525 if(
¥evFCD16
>1) {

1526 --
¥evBound¨y
;

1529 
limô
=
	`u_°rchr
(
§c
, 0);

1538 c⁄° 
UTrõ2
 *
åõ
=
	`fcdTrõ
();

1540 c⁄° 
UCh¨
 *
¥evSrc
;

1541 
UCh¨32
 
c
=0;

1542 
uöt16_t
 
fcd16
=0;

1546 
¥evSrc
=
§c
; src!=
limô
;) {

1547 if((
c
=*
§c
)<
MIN_CCC_LCCC_CP
) {

1548 
¥evFCD16
=~
c
;

1549 ++
§c
;

1550 } if((
fcd16
=
	`UTRIE2_GET16_FROM_U16_SINGLE_LEAD
(
åõ
, 
c
))<=0xff) {

1551 
¥evFCD16
=
fcd16
;

1552 ++
§c
;

1553 } if(!
	`U16_IS_SURROGATE
(
c
)) {

1556 
UCh¨
 
c2
;

1557 if(
	`U16_IS_SURROGATE_LEAD
(
c
)) {

1558 if((
§c
+1)!=
limô
 && 
	`U16_IS_TRAIL
(
c2
=src[1])) {

1559 
c
=
	`U16_GET_SUPPLEMENTARY
(c, 
c2
);

1562 if(
¥evSrc
<
§c
 && 
	`U16_IS_LEAD
(
c2
=*(src-1))) {

1563 --
§c
;

1564 
c
=
	`U16_GET_SUPPLEMENTARY
(
c2
, c);

1567 if((
fcd16
=
	`gëFCD16
(
c
))<=0xff) {

1568 
¥evFCD16
=
fcd16
;

1569 
§c
+=
	`U16_LENGTH
(
c
);

1576 if(
§c
!=
¥evSrc
) {

1577 if(
buf„r
!=
NULL
 && !buf„r->
	`≠≥ndZîoCC
(
¥evSrc
, 
§c
, 
îr‹Code
)) {

1580 if(
§c
==
limô
) {

1583 
¥evBound¨y
=
§c
;

1585 if(
¥evFCD16
<0) {

1587 
¥evFCD16
=
	`gëFCD16FromSögÀLód
((
UCh¨
)~prevFCD16);

1588 if(
¥evFCD16
>1) {

1589 --
¥evBound¨y
;

1592 c⁄° 
UCh¨
 *
p
=
§c
-1;

1593 if(
	`U16_IS_TRAIL
(*
p
Ë&& 
¥evSrc
<∞&& 
	`U16_IS_LEAD
(*(p-1))) {

1594 --
p
;

1597 
¥evFCD16
=
	`gëFCD16FromSuºog©ePaú
(
p
[0],Ö[1]);

1600 if(
¥evFCD16
>1) {

1601 
¥evBound¨y
=
p
;

1605 
¥evSrc
=
§c
;

1606 } if(
§c
==
limô
) {

1610 
§c
+=
	`U16_LENGTH
(
c
);

1613 if((
¥evFCD16
&0xff)<=(
fcd16
>>8)) {

1615 if((
fcd16
&0xff)<=1) {

1616 
¥evBound¨y
=
§c
;

1618 if(
buf„r
!=
NULL
 && !buf„r->
	`≠≥ndZîoCC
(
c
, 
îr‹Code
)) {

1621 
¥evFCD16
=
fcd16
;

1623 } if(
buf„r
==
NULL
) {

1624  
¥evBound¨y
;

1631 
buf„r
->
	`ªmoveSuffix
((
öt32_t
)(
¥evSrc
-
¥evBound¨y
));

1636 
§c
=
	`födNextFCDBound¨y
(§c, 
limô
);

1641 if(!
	`decompo£Sh‹t
(
¥evBound¨y
, 
§c
, *
buf„r
, 
îr‹Code
)) {

1644 
¥evBound¨y
=
§c
;

1645 
¥evFCD16
=0;

1648  
§c
;

1649 
	}
}

1651 
	gN‹mÆizî2Im∂
::
	$makeFCDAndAµíd
(c⁄° 
UCh¨
 *
§c
, c⁄° UCh¨ *
limô
,

1652 
UBoﬁ
 
doMakeFCD
,

1653 
Re‹dîögBuf„r
 &
buf„r
,

1654 
UEº‹Code
 &
îr‹Code
) const {

1655 if(!
buf„r
.
	`isEm±y
()) {

1656 c⁄° 
UCh¨
 *
fú°Bound¨yInSrc
=
	`födNextFCDBound¨y
(
§c
, 
limô
);

1657 if(
§c
!=
fú°Bound¨yInSrc
) {

1658 c⁄° 
UCh¨
 *
œ°Bound¨yInDe°
=
	`födPªviousFCDBound¨y
(
buf„r
.
	`gëSèπ
(),

1659 
buf„r
.
	`gëLimô
());

1660 
UnicodeSåög
 
	`middÀ
(
œ°Bound¨yInDe°
,

1661 (
öt32_t
)(
buf„r
.
	`gëLimô
()-
œ°Bound¨yInDe°
));

1662 
buf„r
.
	`ªmoveSuffix
((
öt32_t
)(buf„r.
	`gëLimô
()-
œ°Bound¨yInDe°
));

1663 
middÀ
.
	`≠≥nd
(
§c
, (
öt32_t
)(
fú°Bound¨yInSrc
-src));

1664 c⁄° 
UCh¨
 *
middÀSèπ
=
middÀ
.
	`gëBuf„r
();

1665 
	`makeFCD
(
middÀSèπ
, middÀSèπ+
middÀ
.
	`Àngth
(), &
buf„r
, 
îr‹Code
);

1666 if(
	`U_FAILURE
(
îr‹Code
)) {

1669 
§c
=
fú°Bound¨yInSrc
;

1672 if(
doMakeFCD
) {

1673 
	`makeFCD
(
§c
, 
limô
, &
buf„r
, 
îr‹Code
);

1675 
buf„r
.
	`≠≥ndZîoCC
(
§c
, 
limô
, 
îr‹Code
);

1677 
	}
}

1679 c⁄° 
UCh¨
 *
	gN‹mÆizî2Im∂
::
	$födPªviousFCDBound¨y
(c⁄° 
UCh¨
 *
°¨t
, c⁄° UCh¨ *
p
) const {

1680 
Backw¨dUTrõ2SåögIãøt‹
 
	`ôî
(
	`fcdTrõ
(), 
°¨t
, 
p
);

1681 
uöt16_t
 
fcd16
;

1683 
fcd16
=
ôî
.
	`¥evious16
();

1684 } 
fcd16
>0xff);

1685  
ôî
.
codePoötSèπ
;

1686 
	}
}

1688 c⁄° 
UCh¨
 *
	gN‹mÆizî2Im∂
::
	$födNextFCDBound¨y
(c⁄° 
UCh¨
 *
p
, c⁄° UCh¨ *
limô
) const {

1689 
F‹w¨dUTrõ2SåögIãøt‹
 
	`ôî
(
	`fcdTrõ
(), 
p
, 
limô
);

1690 
uöt16_t
 
fcd16
;

1692 
fcd16
=
ôî
.
	`√xt16
();

1693 } 
fcd16
>0xff);

1694  
ôî
.
codePoötSèπ
;

1695 
	}
}

1699 
	gC™⁄IãrD©a
::
	$C™⁄IãrD©a
(
UEº‹Code
 &
îr‹Code
) :

1700 
	`åõ
(
	`uåõ2_›í
(0, 0, &
îr‹Code
)),

1701 
	$ˇn⁄SèπSës
(
uhash_dñëeUObje˘
, 
NULL
, 
îr‹Code
Ë{
	}
}

1703 
	gC™⁄IãrD©a
::~
	$C™⁄IãrD©a
() {

1704 
	`uåõ2_˛o£
(
åõ
);

1705 
	}
}

1707 
	gC™⁄IãrD©a
::
	$addToSèπSë
(
UCh¨32
 
‹igö
, UCh¨32 
decompLód
, 
UEº‹Code
 &
îr‹Code
) {

1708 
uöt32_t
 
ˇn⁄VÆue
=
	`uåõ2_gë32
(
åõ
, 
decompLód
);

1709 if((
ˇn⁄VÆue
&(
CANON_HAS_SET
|
CANON_VALUE_MASK
))==0 && 
‹igö
!=0) {

1712 
	`uåõ2_£t32
(
åõ
, 
decompLód
, 
ˇn⁄VÆue
|
‹igö
, &
îr‹Code
);

1715 
UnicodeSë
 *
£t
;

1716 if((
ˇn⁄VÆue
&
CANON_HAS_SET
)==0) {

1717 
£t
=
√w
 
UnicodeSë
;

1718 if(
£t
==
NULL
) {

1719 
îr‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

1722 
UCh¨32
 
fú°Origö
=(UCh¨32)(
ˇn⁄VÆue
&
CANON_VALUE_MASK
);

1723 
ˇn⁄VÆue
=(ˇn⁄VÆue&~
CANON_VALUE_MASK
)|
CANON_HAS_SET
|(
uöt32_t
)
ˇn⁄SèπSës
.
	`size
();

1724 
	`uåõ2_£t32
(
åõ
, 
decompLód
, 
ˇn⁄VÆue
, &
îr‹Code
);

1725 
ˇn⁄SèπSës
.
	`addEÀmít
(
£t
, 
îr‹Code
);

1726 if(
fú°Origö
!=0) {

1727 
£t
->
	`add
(
fú°Origö
);

1730 
£t
=(
UnicodeSë
 *)
ˇn⁄SèπSës
[(
öt32_t
)(
ˇn⁄VÆue
&
CANON_VALUE_MASK
)];

1732 
£t
->
	`add
(
‹igö
);

1734 
	}
}

1736 ˛as†
	cC™⁄IãrD©aSögÀt⁄
 {

1737 
	mpublic
:

1738 
	$C™⁄IãrD©aSögÀt⁄
(
Sim∂eSögÀt⁄
 &
s
, 
N‹mÆizî2Im∂
 &
ni
, 
UEº‹Code
 &
ec
) :

1739 
	`sögÀt⁄
(
s
), 
	`im∂
(
ni
), 
	$îr‹Code
(
ec
) {}

1740 
C™⁄IãrD©a
 *
	$gëIn°™˚
(
UEº‹Code
 &
îr‹Code
) {

1741 *
du∂iˇã
;

1742 
C™⁄IãrD©a
 *
ö°™˚
=

1743 (
C™⁄IãrD©a
 *)
sögÀt⁄
.
	`gëIn°™˚
(
¸óãIn°™˚
, 
this
, 
du∂iˇã
, 
îr‹Code
);

1744 
	`dñëe
 (
C™⁄IãrD©a
 *)
du∂iˇã
;

1745  
ö°™˚
;

1746 
	}
}

1747 *
¸óãIn°™˚
(c⁄° *
c⁄ãxt
, 
UEº‹Code
 &
îr‹Code
);

1748 
UBoﬁ
 
	$øngeH™dÀr
(
UCh¨32
 
°¨t
, UCh¨32 
íd
, 
uöt32_t
 
vÆue
) {

1749 if(
vÆue
!=0) {

1750 
im∂
.
	`makeC™⁄IãrD©aFromN‹m16
(
°¨t
, 
íd
, (
uöt16_t
)
vÆue
, *
√wD©a
, 
îr‹Code
);

1752  
	`U_SUCCESS
(
îr‹Code
);

1753 
	}
}

1755 
	g¥iv©e
:

1756 
Sim∂eSögÀt⁄
 &
sögÀt⁄
;

1757 
	gN‹mÆizî2Im∂
 &
	gim∂
;

1758 
C™⁄IãrD©a
 *
	g√wD©a
;

1759 
	gUEº‹Code
 &
	gîr‹Code
;

1762 
U_CDECL_BEGIN


1765 
UBoﬁ
 
U_CALLCONV


1766 
	$íumCIDR™geH™dÀr
(c⁄° *
c⁄ãxt
, 
UCh¨32
 
°¨t
, UCh¨32 
íd
, 
uöt32_t
 
vÆue
) {

1767  ((
C™⁄IãrD©aSögÀt⁄
 *)
c⁄ãxt
)->
	`øngeH™dÀr
(
°¨t
, 
íd
, 
vÆue
);

1768 
	}
}

1770 
U_CDECL_END


1772 *
	gC™⁄IãrD©aSögÀt⁄
::
	$¸óãIn°™˚
(c⁄° *
c⁄ãxt
, 
UEº‹Code
 &
îr‹Code
) {

1773 
C™⁄IãrD©aSögÀt⁄
 *
me
=(C™⁄IãrD©aSögÀt⁄ *)
c⁄ãxt
;

1774 
me
->
√wD©a
=
√w
 
	`C™⁄IãrD©a
(
îr‹Code
);

1775 if(
me
->
√wD©a
==
NULL
) {

1776 
îr‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

1777  
NULL
;

1779 if(
	`U_SUCCESS
(
îr‹Code
)) {

1780 
	`uåõ2_íum
(
me
->
im∂
.
	`gëN‹mTrõ
(), 
NULL
, 
íumCIDR™geH™dÀr
, me);

1781 
	`uåõ2_‰ìze
(
me
->
√wD©a
->
åõ
, 
UTRIE2_32_VALUE_BITS
, &
îr‹Code
);

1782 if(
	`U_SUCCESS
(
îr‹Code
)) {

1783  
me
->
√wD©a
;

1786 
dñëe
 
me
->
√wD©a
;

1787  
NULL
;

1788 
	}
}

1790 
	gN‹mÆizî2Im∂
::
	$makeC™⁄IãrD©aFromN‹m16
(
UCh¨32
 
°¨t
, UCh¨32 
íd
, 
uöt16_t
 
n‹m16
,

1791 
C™⁄IãrD©a
 &
√wD©a
,

1792 
UEº‹Code
 &
îr‹Code
) const {

1793 if(
n‹m16
==0 || (
möYesNo
<Ú‹m16 &&Ç‹m16<
möNoNo
)) {

1802 
UCh¨32
 
c
=
°¨t
; c<=
íd
; ++c) {

1803 
uöt32_t
 
ﬁdVÆue
=
	`uåõ2_gë32
(
√wD©a
.
åõ
, 
c
);

1804 
uöt32_t
 
√wVÆue
=
ﬁdVÆue
;

1805 if(
n‹m16
>=
möMaybeYes
) {

1807 
√wVÆue
|=
CANON_NOT_SEGMENT_STARTER
;

1808 if(
n‹m16
<
MIN_NORMAL_MAYBE_YES
) {

1809 
√wVÆue
|=
CANON_HAS_COMPOSITIONS
;

1811 } if(
n‹m16
<
möYesNo
) {

1812 
√wVÆue
|=
CANON_HAS_COMPOSITIONS
;

1815 
UCh¨32
 
c2
=
c
;

1816 
uöt16_t
 
n‹m16_2
=
n‹m16
;

1817 
limôNoNo
<=
n‹m16_2
 &&Ç‹m16_2<
möMaybeYes
) {

1818 
c2
=
	`m≠Alg‹ôhmic
(c2, 
n‹m16_2
);

1819 
n‹m16_2
=
	`gëN‹m16
(
c2
);

1821 if(
möYesNo
<=
n‹m16_2
 &&Ç‹m16_2<
limôNoNo
) {

1823 c⁄° 
uöt16_t
 *
m≠pög
=
	`gëM≠pög
(
n‹m16_2
);

1824 
uöt16_t
 
fú°Unô
=*
m≠pög
++;

1825 
öt32_t
 
Àngth
=
fú°Unô
&
MAPPING_LENGTH_MASK
;

1826 if((
fú°Unô
&
MAPPING_HAS_CCC_LCCC_WORD
)!=0) {

1827 if(
c
==
c2
 && (*
m≠pög
&0xff)!=0) {

1828 
√wVÆue
|=
CANON_NOT_SEGMENT_STARTER
;

1830 ++
m≠pög
;

1833 if(
Àngth
!=0) {

1835 
öt32_t
 
i
=0;

1836 
	`U16_NEXT_UNSAFE
(
m≠pög
, 
i
, 
c2
);

1837 
√wD©a
.
	`addToSèπSë
(
c
, 
c2
, 
îr‹Code
);

1841 if(
n‹m16_2
>=
möNoNo
) {

1842 
i
<
Àngth
) {

1843 
	`U16_NEXT_UNSAFE
(
m≠pög
, 
i
, 
c2
);

1844 
uöt32_t
 
c2VÆue
=
	`uåõ2_gë32
(
√wD©a
.
åõ
, 
c2
);

1845 if((
c2VÆue
&
CANON_NOT_SEGMENT_STARTER
)==0) {

1846 
	`uåõ2_£t32
(
√wD©a
.
åõ
, 
c2
, 
c2VÆue
|
CANON_NOT_SEGMENT_STARTER
,

1847 &
îr‹Code
);

1854 
√wD©a
.
	`addToSèπSë
(
c
, 
c2
, 
îr‹Code
);

1857 if(
√wVÆue
!=
ﬁdVÆue
) {

1858 
	`uåõ2_£t32
(
√wD©a
.
åõ
, 
c
, 
√wVÆue
, &
îr‹Code
);

1861 
	}
}

1863 
UBoﬁ
 
	gN‹mÆizî2Im∂
::
	$ísuªC™⁄IãrD©a
(
UEº‹Code
 &
îr‹Code
) const {

1865 
N‹mÆizî2Im∂
 *
me
=
c⁄°_ˇ°
<N‹mÆizî2Im∂ *>(
this
);

1866 
	`C™⁄IãrD©aSögÀt⁄
(
me
->
ˇn⁄IãrD©aSögÀt⁄
, *me, 
îr‹Code
).
	`gëIn°™˚
(errorCode);

1867  
	`U_SUCCESS
(
îr‹Code
);

1868 
	}
}

1870 
öt32_t
 
	gN‹mÆizî2Im∂
::
	$gëC™⁄VÆue
(
UCh¨32
 
c
) const {

1871  (
öt32_t
)
	`uåõ2_gë32
(((
C™⁄IãrD©a
 *)
ˇn⁄IãrD©aSögÀt⁄
.
fIn°™˚
)->
åõ
, 
c
);

1872 
	}
}

1874 c⁄° 
	gUnicodeSë
 &
	gN‹mÆizî2Im∂
::
	$gëC™⁄SèπSë
(
öt32_t
 
n
) const {

1875  *(c⁄° 
UnicodeSë
 *)(

1876 ((
C™⁄IãrD©a
 *)
ˇn⁄IãrD©aSögÀt⁄
.
fIn°™˚
)->
ˇn⁄SèπSës
[
n
]);

1877 
	}
}

1879 
UBoﬁ
 
	gN‹mÆizî2Im∂
::
	$isC™⁄SegmítSèπî
(
UCh¨32
 
c
) const {

1880  
	`gëC™⁄VÆue
(
c
)>=0;

1881 
	}
}

1883 
UBoﬁ
 
	gN‹mÆizî2Im∂
::
	$gëC™⁄SèπSë
(
UCh¨32
 
c
, 
UnicodeSë
 &
£t
) const {

1884 
öt32_t
 
ˇn⁄VÆue
=
	`gëC™⁄VÆue
(
c
)&~
CANON_NOT_SEGMENT_STARTER
;

1885 if(
ˇn⁄VÆue
==0) {

1886  
FALSE
;

1888 
£t
.
	`˛ór
();

1889 
öt32_t
 
vÆue
=
ˇn⁄VÆue
&
CANON_VALUE_MASK
;

1890 if((
ˇn⁄VÆue
&
CANON_HAS_SET
)!=0) {

1891 
£t
.
	`addAŒ
(
	`gëC™⁄SèπSë
(
vÆue
));

1892 } if(
vÆue
!=0) {

1893 
£t
.
	`add
(
vÆue
);

1895 if((
ˇn⁄VÆue
&
CANON_HAS_COMPOSITIONS
)!=0) {

1896 
uöt16_t
 
n‹m16
=
	`gëN‹m16
(
c
);

1897 if(
n‹m16
==
JAMO_L
) {

1898 
UCh¨32
 
syŒabÀ
=

1899 (
UCh¨32
)(
H™gul
::
HANGUL_BASE
+(
c
-H™gul::
JAMO_L_BASE
)*H™gul::
JAMO_VT_COUNT
);

1900 
£t
.
	`add
(
syŒabÀ
, syŒabÀ+
H™gul
::
JAMO_VT_COUNT
-1);

1902 
	`addComposôes
(
	`gëComposôi⁄sLi°
(
n‹m16
), 
£t
);

1905  
TRUE
;

1906 
	}
}

1908 
U_NAMESPACE_END


1912 
U_NAMESPACE_USE


1914 
U_CAPI
 
öt32_t
 
U_EXPORT2


1915 
	$un‹m2_sw≠
(c⁄° 
UD©aSw≠≥r
 *
ds
,

1916 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

1917 
UEº‹Code
 *
pEº‹Code
) {

1918 c⁄° 
UD©aInfo
 *
pInfo
;

1919 
öt32_t
 
hódîSize
;

1921 c⁄° 
uöt8_t
 *
öByãs
;

1922 
uöt8_t
 *
outByãs
;

1924 c⁄° 
öt32_t
 *
öIndexes
;

1925 
öt32_t
 
ödexes
[
N‹mÆizî2Im∂
::
IX_MIN_MAYBE_YES
+1];

1927 
öt32_t
 
i
, 
off£t
, 
√xtOff£t
, 
size
;

1930 
hódîSize
=
	`ud©a_sw≠D©aHódî
(
ds
, 
öD©a
, 
Àngth
, 
outD©a
, 
pEº‹Code
);

1931 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

1936 
pInfo
=(c⁄° 
UD©aInfo
 *)((c⁄° *)
öD©a
+4);

1938 
pInfo
->
d©aF‹m©
[0]==0x4e &&

1939 
pInfo
->
d©aF‹m©
[1]==0x72 &&

1940 
pInfo
->
d©aF‹m©
[2]==0x6d &&

1941 
pInfo
->
d©aF‹m©
[3]==0x32 &&

1942 
pInfo
->
f‹m©Vîsi⁄
[0]==1

1944 
	`ud©a_¥ötEº‹
(
ds
, "unorm2_swap(): data format %02x.%02x.%02x.%02x (format version %02x) isÇotÑecognizedás Normalizer2 data\n",

1945 
pInfo
->
d©aF‹m©
[0],ÖInfo->dataFormat[1],

1946 
pInfo
->
d©aF‹m©
[2],ÖInfo->dataFormat[3],

1947 
pInfo
->
f‹m©Vîsi⁄
[0]);

1948 *
pEº‹Code
=
U_UNSUPPORTED_ERROR
;

1952 
öByãs
=(c⁄° 
uöt8_t
 *)
öD©a
+
hódîSize
;

1953 
outByãs
=(
uöt8_t
 *)
outD©a
+
hódîSize
;

1955 
öIndexes
=(c⁄° 
öt32_t
 *)
öByãs
;

1957 if(
Àngth
>=0) {

1958 
Àngth
-=
hódîSize
;

1959 if(
Àngth
<(
öt32_t
)(
ödexes
)) {

1960 
	`ud©a_¥ötEº‹
(
ds
, "unorm2_swap():Åoo few bytes (%dáfter header) for Normalizer2 data\n",

1961 
Àngth
);

1962 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

1968 
i
=0; i<=
N‹mÆizî2Im∂
::
IX_MIN_MAYBE_YES
; ++i) {

1969 
ödexes
[
i
]=
	`ud©a_ªadI¡32
(
ds
, 
öIndexes
[i]);

1973 
size
=
ödexes
[
N‹mÆizî2Im∂
::
IX_TOTAL_SIZE
];

1975 if(
Àngth
>=0) {

1976 if(
Àngth
<
size
) {

1977 
	`ud©a_¥ötEº‹
(
ds
, "unorm2_swap():Åoo few bytes (%dáfter header) foráll of Normalizer2 data\n",

1978 
Àngth
);

1979 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

1984 if(
öByãs
!=
outByãs
) {

1985 
	`u¥v_mem˝y
(
outByãs
, 
öByãs
, 
size
);

1988 
off£t
=0;

1991 
√xtOff£t
=
ödexes
[
N‹mÆizî2Im∂
::
IX_NORM_TRIE_OFFSET
];

1992 
ds
->
	`sw≠Aºay32
(ds, 
öByãs
, 
√xtOff£t
-
off£t
, 
outByãs
, 
pEº‹Code
);

1993 
off£t
=
√xtOff£t
;

1996 
√xtOff£t
=
ödexes
[
N‹mÆizî2Im∂
::
IX_EXTRA_DATA_OFFSET
];

1997 
	`uåõ2_sw≠
(
ds
, 
öByãs
+
off£t
, 
√xtOff£t
-off£t, 
outByãs
+off£t, 
pEº‹Code
);

1998 
off£t
=
√xtOff£t
;

2001 
√xtOff£t
=
ödexes
[
N‹mÆizî2Im∂
::
IX_EXTRA_DATA_OFFSET
+1];

2002 
ds
->
	`sw≠Aºay16
(ds, 
öByãs
+
off£t
, 
√xtOff£t
-off£t, 
outByãs
+off£t, 
pEº‹Code
);

2003 
off£t
=
√xtOff£t
;

2005 
	`U_ASSERT
(
off£t
==
size
);

2008  
hódîSize
+
size
;

2009 
	}
}

	@normalizer2impl.h

17 #i‚de‡
__NORMALIZER2IMPL_H__


18 
	#__NORMALIZER2IMPL_H__


	)

20 
	~"unicode/uty≥s.h
"

22 #i‡!
UCONFIG_NO_NORMALIZATION


24 
	~"unicode/n‹mÆizî2.h
"

25 
	~"unicode/ud©a.h
"

26 
	~"unicode/uni°r.h
"

27 
	~"unicode/un‹m.h
"

28 
	~"muãx.h
"

29 
	~"u£t_imp.h
"

30 
	~"uåõ2.h
"

32 
U_NAMESPACE_BEGIN


34 
˛ass
 
	gC™⁄IãrD©a
;

36 ˛as†
	cH™gul
 {

37 
	mpublic
:

40 
JAMO_L_BASE
=0x1100,

41 
	mJAMO_V_BASE
=0x1161,

42 
	mJAMO_T_BASE
=0x11a7,

44 
	mHANGUL_BASE
=0xac00,

46 
	mJAMO_L_COUNT
=19,

47 
	mJAMO_V_COUNT
=21,

48 
	mJAMO_T_COUNT
=28,

50 
	mJAMO_VT_COUNT
=
JAMO_V_COUNT
*
JAMO_T_COUNT
,

52 
	mHANGUL_COUNT
=
JAMO_L_COUNT
*
JAMO_V_COUNT
*
JAMO_T_COUNT
,

53 
	mHANGUL_LIMIT
=
HANGUL_BASE
+
HANGUL_COUNT


56 
ölöe
 
UBoﬁ
 
	$isH™gul
(
UCh¨32
 
c
) {

57  
HANGUL_BASE
<=
c
 && c<
HANGUL_LIMIT
;

58 
	}
}

59 
ölöe
 
UBoﬁ


60 
	$isH™gulWôhoutJamoT
(
UCh¨
 
c
) {

61 
c
-=
HANGUL_BASE
;

62  
c
<
HANGUL_COUNT
 && c%
JAMO_T_COUNT
==0;

63 
	}
}

64 
ölöe
 
UBoﬁ
 
	$isJamoL
(
UCh¨32
 
c
) {

65  (
uöt32_t
)(
c
-
JAMO_L_BASE
)<
JAMO_L_COUNT
;

66 
	}
}

67 
ölöe
 
UBoﬁ
 
	$isJamoV
(
UCh¨32
 
c
) {

68  (
uöt32_t
)(
c
-
JAMO_V_BASE
)<
JAMO_V_COUNT
;

69 
	}
}

75 
ölöe
 
öt32_t
 
	$decompo£
(
UCh¨32
 
c
, 
UCh¨
 
buf„r
[3]) {

76 
c
-=
HANGUL_BASE
;

77 
UCh¨32
 
c2
=
c
%
JAMO_T_COUNT
;

78 
c
/=
JAMO_T_COUNT
;

79 
buf„r
[0]=(
UCh¨
)(
JAMO_L_BASE
+
c
/
JAMO_V_COUNT
);

80 
buf„r
[1]=(
UCh¨
)(
JAMO_V_BASE
+
c
%
JAMO_V_COUNT
);

81 if(
c2
==0) {

84 
buf„r
[2]=(
UCh¨
)(
JAMO_T_BASE
+
c2
);

87 
	}
}

88 
	g¥iv©e
:

89 
H™gul
();

92 
˛ass
 
	gN‹mÆizî2Im∂
;

94 ˛as†
	cRe‹dîögBuf„r
 : 
public
 
UMem‹y
 {

95 
public
:

96 
	$Re‹dîögBuf„r
(c⁄° 
N‹mÆizî2Im∂
 &
ni
, 
UnicodeSåög
 &
de°
) :

97 
	`im∂
(
ni
), 
	`°r
(
de°
),

98 
	`°¨t
(
NULL
), 
	`ª‹dîSèπ
(NULL), 
	`limô
(NULL),

99 
	`ªmaöögC≠acôy
(0), 
	$œ°CC
(0) {}

100 ~
	$Re‹dîögBuf„r
() {

101 if(
°¨t
!=
NULL
) {

102 
°r
.
	`ªÀa£Buf„r
((
öt32_t
)(
limô
-
°¨t
));

104 
	}
}

105 
UBoﬁ
 
öô
(
öt32_t
 
de°C≠acôy
, 
UEº‹Code
 &
îr‹Code
);

107 
UBoﬁ
 
	$isEm±y
(Ëc⁄° {  
°¨t
==
limô
; 
	}
}

108 
öt32_t
 
	$Àngth
(Ëc⁄° {  (
öt32_t
)(
limô
-
°¨t
); 
	}
}

109 
UCh¨
 *
	$gëSèπ
(Ë{  
°¨t
; 
	}
}

110 
UCh¨
 *
	$gëLimô
(Ë{  
limô
; 
	}
}

111 
uöt8_t
 
	$gëLa°CC
(Ëc⁄° {  
œ°CC
; 
	}
}

113 
UBoﬁ
 
	$equÆs
(c⁄° 
UCh¨
 *
°¨t
, c⁄° UCh¨ *
limô
) const;

116 
	$£tLa°Ch¨
(
UCh¨
 
c
) {

117 *(
limô
-1)=
c
;

118 
	}
}

120 
UBoﬁ
 
	$≠≥nd
(
UCh¨32
 
c
, 
uöt8_t
 
cc
, 
UEº‹Code
 &
îr‹Code
) {

121  (
c
<=0xffff) ?

122 
	`≠≥ndBMP
((
UCh¨
)
c
, 
cc
, 
îr‹Code
) :

123 
	`≠≥ndSuµÀmíèry
(
c
, 
cc
, 
îr‹Code
);

124 
	}
}

126 
UBoﬁ
 
≠≥nd
(c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
,

127 
uöt8_t
 
ÀadCC
, uöt8_à
åaûCC
,

128 
UEº‹Code
 &
îr‹Code
);

129 
UBoﬁ
 
	$≠≥ndBMP
(
UCh¨
 
c
, 
uöt8_t
 
cc
, 
UEº‹Code
 &
îr‹Code
) {

130 if(
ªmaöögC≠acôy
==0 && !
	`ªsize
(1, 
îr‹Code
)) {

131  
FALSE
;

133 if(
œ°CC
<=
cc
 || cc==0) {

134 *
limô
++=
c
;

135 
œ°CC
=
cc
;

136 if(
cc
<=1) {

137 
ª‹dîSèπ
=
limô
;

140 
	`ö£π
(
c
, 
cc
);

142 --
ªmaöögC≠acôy
;

143  
TRUE
;

144 
	}
}

145 
UBoﬁ
 
≠≥ndZîoCC
(
UCh¨32
 
c
, 
UEº‹Code
 &
îr‹Code
);

146 
UBoﬁ
 
≠≥ndZîoCC
(c⁄° 
UCh¨
 *
s
, c⁄° UCh¨ *
sLimô
, 
UEº‹Code
 &
îr‹Code
);

147 
ªmove
();

148 
ªmoveSuffix
(
öt32_t
 
suffixLígth
);

149 
	$£tRe‹dîögLimô
(
UCh¨
 *
√wLimô
) {

150 
ªmaöögC≠acôy
+=(
öt32_t
)(
limô
-
√wLimô
);

151 
ª‹dîSèπ
=
limô
=
√wLimô
;

152 
œ°CC
=0;

153 
	}
}

154 
	g¥iv©e
:

168 
UBoﬁ
 
≠≥ndSuµÀmíèry
(
UCh¨32
 
c
, 
uöt8_t
 
cc
, 
UEº‹Code
 &
îr‹Code
);

169 
ö£π
(
UCh¨32
 
c
, 
uöt8_t
 
cc
);

170 
	$wrôeCodePoöt
(
UCh¨
 *
p
, 
UCh¨32
 
c
) {

171 if(
c
<=0xffff) {

172 *
p
=(
UCh¨
)
c
;

174 
p
[0]=
	`U16_LEAD
(
c
);

175 
p
[1]=
	`U16_TRAIL
(
c
);

177 
	}
}

178 
UBoﬁ
 
ªsize
(
öt32_t
 
≠≥ndLígth
, 
UEº‹Code
 &
îr‹Code
);

180 c⁄° 
	gN‹mÆizî2Im∂
 &
	gim∂
;

181 
	gUnicodeSåög
 &
	g°r
;

182 
UCh¨
 *
	g°¨t
, *
	gª‹dîSèπ
, *
	glimô
;

183 
öt32_t
 
	gªmaöögC≠acôy
;

184 
uöt8_t
 
	gœ°CC
;

187 
	$£tIãøt‹
(Ë{ 
codePoötSèπ
=
limô
; 
	}
}

188 
skùPªvious
();

189 
uöt8_t
 
¥eviousCC
();

191 
UCh¨
 *
	gcodePoötSèπ
, *
	gcodePoötLimô
;

194 ˛as†
	cU_COMMON_API
 
	mN‹mÆizî2Im∂
 : 
public
 
UMem‹y
 {

195 
public
:

196 
	$N‹mÆizî2Im∂
(Ë: 
	`mem‹y
(
NULL
), 
	$n‹mTrõ
(
NULL
) {

197 
fcdTrõSögÀt⁄
.
fIn°™˚
=
NULL
;

198 
ˇn⁄IãrD©aSögÀt⁄
.
fIn°™˚
=
NULL
;

200 ~
	`N‹mÆizî2Im∂
();

202 
	`lﬂd
(c⁄° *
∑ckageName
, c⁄° *
«me
, 
UEº‹Code
 &
îr‹Code
);

204 
	$addPr›îtySèπs
(c⁄° 
USëAddî
 *
ß
, 
UEº‹Code
 &
îr‹Code
) const;

205 
	$addC™⁄IãrPr›îtySèπs
(c⁄° 
USëAddî
 *
ß
, 
UEº‹Code
 &
îr‹Code
) const;

209 c⁄° 
UTrõ2
 *
	$gëN‹mTrõ
(Ëc⁄° {  
n‹mTrõ
; 
	}
}

210 c⁄° 
UTrõ2
 *
	$gëFCDTrõ
(
UEº‹Code
 &
îr‹Code
) const ;

212 
UBoﬁ
 
	$ísuªC™⁄IãrD©a
(
UEº‹Code
 &
îr‹Code
) const;

214 
uöt16_t
 
	$gëN‹m16
(
UCh¨32
 
c
Ëc⁄° {  
	`UTRIE2_GET16
(
n‹mTrõ
, c); 
	}
}

216 
UN‹mÆiz©i⁄CheckResu…
 
	$gëCompQuickCheck
(
uöt16_t
 
n‹m16
) const {

217 if(
n‹m16
<
möNoNo
 || 
MIN_YES_YES_WITH_CC
<=norm16) {

218  
UNORM_YES
;

219 } if(
möMaybeYes
<=
n‹m16
) {

220  
UNORM_MAYBE
;

222  
UNORM_NO
;

224 
	}
}

225 
UBoﬁ
 
	$isCompNo
(
uöt16_t
 
n‹m16
Ëc⁄° {  
möNoNo
<Ú‹m16 &&Ç‹m16<
möMaybeYes
; 
	}
}

226 
UBoﬁ
 
	$isDecompYes
(
uöt16_t
 
n‹m16
Ëc⁄° { Ç‹m16<
möYesNo
 || 
möMaybeYes
<Ú‹m16; 
	}
}

228 
uöt8_t
 
	$gëCC
(
uöt16_t
 
n‹m16
) const {

229 if(
n‹m16
>=
MIN_NORMAL_MAYBE_YES
) {

230  (
uöt8_t
)
n‹m16
;

232 if(
n‹m16
<
möNoNo
 || 
limôNoNo
<=norm16) {

235  
	`gëCCFromNoNo
(
n‹m16
);

236 
	}
}

237 
uöt8_t
 
	$gëCCFromYesOrMaybe
(
uöt16_t
 
n‹m16
) {

238  
n‹m16
>=
MIN_NORMAL_MAYBE_YES
 ? (
uöt8_t
)norm16 : 0;

239 
	}
}

241 
uöt16_t
 
	$gëFCD16
(
UCh¨32
 
c
Ëc⁄° {  
	`UTRIE2_GET16
(
	`fcdTrõ
(), c); 
	}
}

242 
uöt16_t
 
	$gëFCD16FromSögÀLód
(
UCh¨
 
c
) const {

243  
	`UTRIE2_GET16_FROM_U16_SINGLE_LEAD
(
	`fcdTrõ
(), 
c
);

244 
	}
}

245 
uöt16_t
 
	$gëFCD16FromSuµÀmíèry
(
UCh¨32
 
c
) const {

246  
	`UTRIE2_GET16_FROM_SUPP
(
	`fcdTrõ
(), 
c
);

247 
	}
}

248 
uöt16_t
 
	$gëFCD16FromSuºog©ePaú
(
UCh¨
 
c
, UCh¨ 
c2
) const {

249  
	`gëFCD16FromSuµÀmíèry
(
	`U16_GET_SUPPLEMENTARY
(
c
, 
c2
));

250 
	}
}

252 
	$£tFCD16FromN‹m16
(
UCh¨32
 
°¨t
, UCh¨32 
íd
, 
uöt16_t
 
n‹m16
,

253 
UTrõ2
 *
√wFCDTrõ
, 
UEº‹Code
 &
îr‹Code
) const;

255 
	$makeC™⁄IãrD©aFromN‹m16
(
UCh¨32
 
°¨t
, UCh¨32 
íd
, 
uöt16_t
 
n‹m16
,

256 
C™⁄IãrD©a
 &
√wD©a
, 
UEº‹Code
 &
îr‹Code
) const;

265 c⁄° 
UCh¨
 *
	$gëDecomposôi⁄
(
UCh¨32
 
c
, 
UCh¨
 
buf„r
[4], 
öt32_t
 &
Àngth
) const;

267 
UBoﬁ
 
	$isC™⁄SegmítSèπî
(
UCh¨32
 
c
) const;

268 
UBoﬁ
 
	$gëC™⁄SèπSë
(
UCh¨32
 
c
, 
UnicodeSë
 &
£t
) const;

271 
MIN_CCC_LCCC_CP
=0x300

272 
	}
};

275 
	gMIN_YES_YES_WITH_CC
=0xff01,

276 
	gJAMO_VT
=0xff00,

277 
	gMIN_NORMAL_MAYBE_YES
=0xfe00,

278 
	gJAMO_L
=1,

279 
	gMAX_DELTA
=0x40

284 
	gIX_NORM_TRIE_OFFSET
,

285 
	gIX_EXTRA_DATA_OFFSET
,

286 
	gIX_RESERVED2_OFFSET
,

287 
	gIX_RESERVED3_OFFSET
,

288 
	gIX_RESERVED4_OFFSET
,

289 
	gIX_RESERVED5_OFFSET
,

290 
	gIX_RESERVED6_OFFSET
,

291 
	gIX_TOTAL_SIZE
,

294 
	gIX_MIN_DECOMP_NO_CP
,

295 
	gIX_MIN_COMP_NO_MAYBE_CP
,

298 
	gIX_MIN_YES_NO
,

299 
	gIX_MIN_NO_NO
,

300 
	gIX_LIMIT_NO_NO
,

301 
	gIX_MIN_MAYBE_YES
,

303 
	gIX_RESERVED14
,

304 
	gIX_RESERVED15
,

305 
	gIX_COUNT


309 
	gMAPPING_HAS_CCC_LCCC_WORD
=0x80,

310 
	gMAPPING_PLUS_COMPOSITION_LIST
=0x40,

311 
	gMAPPING_NO_COMP_BOUNDARY_AFTER
=0x20,

312 
	gMAPPING_LENGTH_MASK
=0x1f

316 
	gCOMP_1_LAST_TUPLE
=0x8000,

317 
	gCOMP_1_TRIPLE
=1,

318 
	gCOMP_1_TRAIL_LIMIT
=0x3400,

319 
	gCOMP_1_TRAIL_MASK
=0x7ffe,

320 
	gCOMP_1_TRAIL_SHIFT
=9,

321 
	gCOMP_2_TRAIL_SHIFT
=6,

322 
	gCOMP_2_TRAIL_MASK
=0xffc0

327 c⁄° 
UCh¨
 *
	$decompo£
(c⁄° 
UCh¨
 *
§c
, c⁄° UCh¨ *
limô
,

328 
Re‹dîögBuf„r
 *
buf„r
, 
UEº‹Code
 &
îr‹Code
) const;

329 
	$decompo£AndAµíd
(c⁄° 
UCh¨
 *
§c
, c⁄° UCh¨ *
limô
,

330 
UBoﬁ
 
doDecompo£
,

331 
Re‹dîögBuf„r
 &
buf„r
,

332 
UEº‹Code
 &
îr‹Code
) const;

333 
UBoﬁ
 
	$compo£
(c⁄° 
UCh¨
 *
§c
, c⁄° UCh¨ *
limô
,

334 
UBoﬁ
 
⁄lyC⁄tiguous
,

335 
UBoﬁ
 
doCompo£
,

336 
Re‹dîögBuf„r
 &
buf„r
,

337 
UEº‹Code
 &
îr‹Code
) const;

338 c⁄° 
UCh¨
 *
	$compo£QuickCheck
(c⁄° 
UCh¨
 *
§c
, c⁄° UCh¨ *
limô
,

339 
UBoﬁ
 
⁄lyC⁄tiguous
,

340 
UN‹mÆiz©i⁄CheckResu…
 *
pQCResu…
) const;

341 
	$compo£AndAµíd
(c⁄° 
UCh¨
 *
§c
, c⁄° UCh¨ *
limô
,

342 
UBoﬁ
 
doCompo£
,

343 
UBoﬁ
 
⁄lyC⁄tiguous
,

344 
Re‹dîögBuf„r
 &
buf„r
,

345 
UEº‹Code
 &
îr‹Code
) const;

346 c⁄° 
UCh¨
 *
	$makeFCD
(c⁄° 
UCh¨
 *
§c
, c⁄° UCh¨ *
limô
,

347 
Re‹dîögBuf„r
 *
buf„r
, 
UEº‹Code
 &
îr‹Code
) const;

348 
	$makeFCDAndAµíd
(c⁄° 
UCh¨
 *
§c
, c⁄° UCh¨ *
limô
,

349 
UBoﬁ
 
doMakeFCD
,

350 
Re‹dîögBuf„r
 &
buf„r
,

351 
UEº‹Code
 &
îr‹Code
) const;

353 
UBoﬁ
 
	$hasDecompBound¨y
(
UCh¨32
 
c
, 
UBoﬁ
 
bef‹e
) const;

354 
UBoﬁ
 
	$isDecompI√π
(
UCh¨32
 
c
Ëc⁄° {  
	`isDecompYesAndZîoCC
(
	`gëN‹m16
(c)); 
	}
}

356 
UBoﬁ
 
	$hasCompBound¨yBef‹e
(
UCh¨32
 
c
) const {

357  
c
<
möCompNoMaybeCP
 || 
	`hasCompBound¨yBef‹e
(c, 
	`gëN‹m16
(c));

358 
	}
}

359 
UBoﬁ
 
	$hasCompBound¨yA·î
(
UCh¨32
 
c
, 
UBoﬁ
 
⁄lyC⁄tiguous
, UBoﬁ 
ã°I√π
) const;

361 
UBoﬁ
 
	$hasFCDBound¨yBef‹e
(
UCh¨32
 
c
Ëc⁄° {  c<
MIN_CCC_LCCC_CP
 || 
	`gëFCD16
(c)<=0xff; 
	}
}

362 
UBoﬁ
 
	$hasFCDBound¨yA·î
(
UCh¨32
 
c
) const {

363 
uöt16_t
 
fcd16
=
	`gëFCD16
(
c
);

364  
fcd16
<=1 || (fcd16&0xff)==0;

365 
	}
}

366 
UBoﬁ
 
	$isFCDI√π
(
UCh¨32
 
c
Ëc⁄° {  
	`gëFCD16
(c)<=1; 
	}
}

367 
	g¥iv©e
:

368 
UBoﬁ
 
U_CALLCONV


369 
isAc˚±abÀ
(*
c⁄ãxt
, c⁄° *
ty≥
, c⁄° *
«me
, c⁄° 
UD©aInfo
 *
pInfo
);

371 
UBoﬁ
 
	$isMaybe
(
uöt16_t
 
n‹m16
Ëc⁄° {  
möMaybeYes
<Ú‹m16 &&Ç‹m16<=
JAMO_VT
; 
	}
}

372 
UBoﬁ
 
	$isMaybeOrN⁄ZîoCC
(
uöt16_t
 
n‹m16
Ëc⁄° { Ç‹m16>=
möMaybeYes
; 
	}
}

373 
UBoﬁ
 
	$isI√π
(
uöt16_t
 
n‹m16
Ë{ Ç‹m16==0; 
	}
}

375 
UBoﬁ
 
	$isJamoVT
(
uöt16_t
 
n‹m16
Ë{ Ç‹m16==
JAMO_VT
; 
	}
}

376 
UBoﬁ
 
	$isH™gul
(
uöt16_t
 
n‹m16
Ëc⁄° { Ç‹m16==
möYesNo
; 
	}
}

377 
UBoﬁ
 
	$isCompYesAndZîoCC
(
uöt16_t
 
n‹m16
Ëc⁄° { Ç‹m16<
möNoNo
; 
	}
}

387 
UBoﬁ
 
	$isDecompYesAndZîoCC
(
uöt16_t
 
n‹m16
) const {

388  
n‹m16
<
möYesNo
 ||

389 
n‹m16
==
JAMO_VT
 ||

390 (
möMaybeYes
<=
n‹m16
 &&Ç‹m16<=
MIN_NORMAL_MAYBE_YES
);

391 
	}
}

397 
UBoﬁ
 
	$isMo°DecompYesAndZîoCC
(
uöt16_t
 
n‹m16
) const {

398  
n‹m16
<
möYesNo
 ||Ç‹m16==
MIN_NORMAL_MAYBE_YES
 ||Ç‹m16==
JAMO_VT
;

399 
	}
}

400 
UBoﬁ
 
	$isDecompNoAlg‹ôhmic
(
uöt16_t
 
n‹m16
Ëc⁄° { Ç‹m16>=
limôNoNo
; 
	}
}

407 
uöt8_t
 
	$gëCCFromNoNo
(
uöt16_t
 
n‹m16
) const {

408 c⁄° 
uöt16_t
 *
m≠pög
=
	`gëM≠pög
(
n‹m16
);

409 if(*
m≠pög
&
MAPPING_HAS_CCC_LCCC_WORD
) {

410  (
uöt8_t
)
m≠pög
[1];

414 
	}
}

416 
uöt8_t
 
	$gëTøûCCFromCompYesAndZîoCC
(c⁄° 
UCh¨
 *
˝Sèπ
, c⁄° UCh¨ *
˝Limô
) const;

419 
UCh¨32
 
	$m≠Alg‹ôhmic
(
UCh¨32
 
c
, 
uöt16_t
 
n‹m16
) const {

420  
c
+
n‹m16
-(
möMaybeYes
-
MAX_DELTA
-1);

421 
	}
}

424 c⁄° 
uöt16_t
 *
	$gëM≠pög
(
uöt16_t
 
n‹m16
Ëc⁄° {  
exåaD©a
+n‹m16; 
	}
}

425 c⁄° 
uöt16_t
 *
	$gëComposôi⁄sLi°F‹DecompYes
(
uöt16_t
 
n‹m16
) const {

426 if(
n‹m16
==0 || 
MIN_NORMAL_MAYBE_YES
<=norm16) {

427  
NULL
;

428 } if(
n‹m16
<
möMaybeYes
) {

429  
exåaD©a
+
n‹m16
;

431  
maybeYesComposôi⁄s
+
n‹m16
-
möMaybeYes
;

433 
	}
}

434 c⁄° 
uöt16_t
 *
	$gëComposôi⁄sLi°F‹Composôe
(
uöt16_t
 
n‹m16
) const {

435 c⁄° 
uöt16_t
 *
li°
=
exåaD©a
+
n‹m16
;

436  
li°
+

438 (*
li°
&
MAPPING_LENGTH_MASK
)+

439 ((*
li°
>>7)&1);

440 
	}
}

445 c⁄° 
uöt16_t
 *
	$gëComposôi⁄sLi°
(
uöt16_t
 
n‹m16
) const {

446  
	`isDecompYes
(
n‹m16
) ?

447 
	`gëComposôi⁄sLi°F‹DecompYes
(
n‹m16
) :

448 
	`gëComposôi⁄sLi°F‹Composôe
(
n‹m16
);

449 
	}
}

451 c⁄° 
UCh¨
 *
	$c›yLowPªfixFromNulTîmö©ed
(c⁄° 
UCh¨
 *
§c
,

452 
UCh¨32
 
möNìdD©aCP
,

453 
Re‹dîögBuf„r
 *
buf„r
,

454 
UEº‹Code
 &
îr‹Code
) const;

455 
UBoﬁ
 
	$decompo£Sh‹t
(c⁄° 
UCh¨
 *
§c
, c⁄° UCh¨ *
limô
,

456 
Re‹dîögBuf„r
 &
buf„r
, 
UEº‹Code
 &
îr‹Code
) const;

457 
UBoﬁ
 
	$decompo£
(
UCh¨32
 
c
, 
uöt16_t
 
n‹m16
,

458 
Re‹dîögBuf„r
 &
buf„r
, 
UEº‹Code
 &
îr‹Code
) const;

460 
öt32_t
 
	`comböe
(c⁄° 
uöt16_t
 *
li°
, 
UCh¨32
 
åaû
);

461 
	$addComposôes
(c⁄° 
uöt16_t
 *
li°
, 
UnicodeSë
 &
£t
) const;

462 
	$ªcompo£
(
Re‹dîögBuf„r
 &
buf„r
, 
öt32_t
 
ªcompo£SèπIndex
,

463 
UBoﬁ
 
⁄lyC⁄tiguous
) const;

465 
UBoﬁ
 
	$hasCompBound¨yBef‹e
(
UCh¨32
 
c
, 
uöt16_t
 
n‹m16
) const;

466 c⁄° 
UCh¨
 *
	$födPªviousCompBound¨y
(c⁄° 
UCh¨
 *
°¨t
, c⁄° UCh¨ *
p
) const;

467 c⁄° 
UCh¨
 *
	$födNextCompBound¨y
(c⁄° 
UCh¨
 *
p
, c⁄° UCh¨ *
limô
) const;

469 c⁄° 
UTrõ2
 *
	$fcdTrõ
(Ëc⁄° {  (c⁄° 
UTrõ2
 *)
fcdTrõSögÀt⁄
.
fIn°™˚
; 
	}
}

471 c⁄° 
UCh¨
 *
	$födPªviousFCDBound¨y
(c⁄° 
UCh¨
 *
°¨t
, c⁄° UCh¨ *
p
) const;

472 c⁄° 
UCh¨
 *
	$födNextFCDBound¨y
(c⁄° 
UCh¨
 *
p
, c⁄° UCh¨ *
limô
) const;

474 
öt32_t
 
	$gëC™⁄VÆue
(
UCh¨32
 
c
) const;

475 c⁄° 
UnicodeSë
 &
	$gëC™⁄SèπSë
(
öt32_t
 
n
) const;

477 
UD©aMem‹y
 *
mem‹y
;

478 
UVîsi⁄Info
 
d©aVîsi⁄
;

481 
UCh¨32
 
möDecompNoCP
;

482 
UCh¨32
 
möCompNoMaybeCP
;

485 
uöt16_t
 
möYesNo
;

486 
uöt16_t
 
möNoNo
;

487 
uöt16_t
 
limôNoNo
;

488 
uöt16_t
 
möMaybeYes
;

490 
UTrõ2
 *
n‹mTrõ
;

491 c⁄° 
uöt16_t
 *
maybeYesComposôi⁄s
;

492 c⁄° 
uöt16_t
 *
exåaD©a
;

494 
Sim∂eSögÀt⁄
 
fcdTrõSögÀt⁄
;

495 
Sim∂eSögÀt⁄
 
ˇn⁄IãrD©aSögÀt⁄
;

496 
	}
};

499 
	#CANON_NOT_SEGMENT_STARTER
 0x80000000

	)

500 
	#CANON_HAS_COMPOSITIONS
 0x40000000

	)

501 
	#CANON_HAS_SET
 0x200000

	)

502 
	#CANON_VALUE_MASK
 0x1fffff

	)

507 ˛as†
	cU_COMMON_API
 
	mN‹mÆizî2Fa˘‹y
 {

508 
	mpublic
:

509 c⁄° 
N‹mÆizî2
 *
gëNFCIn°™˚
(
UEº‹Code
 &
îr‹Code
);

510 c⁄° 
N‹mÆizî2
 *
gëNFDIn°™˚
(
UEº‹Code
 &
îr‹Code
);

511 c⁄° 
N‹mÆizî2
 *
gëFCDIn°™˚
(
UEº‹Code
 &
îr‹Code
);

512 c⁄° 
N‹mÆizî2
 *
gëFCCIn°™˚
(
UEº‹Code
 &
îr‹Code
);

513 c⁄° 
N‹mÆizî2
 *
gëNFKCIn°™˚
(
UEº‹Code
 &
îr‹Code
);

514 c⁄° 
N‹mÆizî2
 *
gëNFKDIn°™˚
(
UEº‹Code
 &
îr‹Code
);

515 c⁄° 
N‹mÆizî2
 *
gëNFKC_CFIn°™˚
(
UEº‹Code
 &
îr‹Code
);

516 c⁄° 
N‹mÆizî2
 *
gëNo›In°™˚
(
UEº‹Code
 &
îr‹Code
);

518 c⁄° 
N‹mÆizî2
 *
gëIn°™˚
(
UN‹mÆiz©i⁄Mode
 
mode
, 
UEº‹Code
 &
îr‹Code
);

520 c⁄° 
N‹mÆizî2Im∂
 *
gëNFCIm∂
(
UEº‹Code
 &
îr‹Code
);

521 c⁄° 
N‹mÆizî2Im∂
 *
gëNFKCIm∂
(
UEº‹Code
 &
îr‹Code
);

522 c⁄° 
N‹mÆizî2Im∂
 *
gëNFKC_CFIm∂
(
UEº‹Code
 &
îr‹Code
);

526 c⁄° 
N‹mÆizî2Im∂
 *
gëIm∂
(c⁄° 
N‹mÆizî2
 *
n‹m2
);

528 c⁄° 
UTrõ2
 *
gëFCDTrõ
(
UEº‹Code
 &
îr‹Code
);

529 
	m¥iv©e
:

530 
N‹mÆizî2Fa˘‹y
();

533 
U_NAMESPACE_END


535 
U_CAPI
 
öt32_t
 
U_EXPORT2


536 
un‹m2_sw≠
(c⁄° 
UD©aSw≠≥r
 *
ds
,

537 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

538 
UEº‹Code
 *
pEº‹Code
);

544 
U_CFUNC
 
UN‹mÆiz©i⁄CheckResu…
 
U_EXPORT2


545 
un‹m_gëQuickCheck
(
UCh¨32
 
c
, 
UN‹mÆiz©i⁄Mode
 
mode
);

556 
U_CAPI
 c⁄° 
uöt16_t
 * 
U_EXPORT2


557 
un‹m_gëFCDTrõIndex
(
UCh¨32
 &
fcdHighSèπ
, 
UEº‹Code
 *
pEº‹Code
);

570 
ölöe
 
uöt16_t


571 
	$un‹m_gëFCD16
(c⁄° 
uöt16_t
 *
fcdTrõIndex
, 
UCh¨
 
c
) {

572  
fcdTrõIndex
[
	`_UTRIE2_INDEX_FROM_U16_SINGLE_LEAD
(fcdTrõIndex, 
c
)];

573 
	}
}

583 
ölöe
 
uöt16_t


584 
	$un‹m_√xtFCD16
(c⁄° 
uöt16_t
 *
fcdTrõIndex
, 
UCh¨32
 
fcdHighSèπ
,

585 c⁄° 
UCh¨
 *&
s
, c⁄° UCh¨ *
limô
) {

586 
UCh¨32
 
c
=*
s
++;

587 
uöt16_t
 
fcd
=
fcdTrõIndex
[
	`_UTRIE2_INDEX_FROM_U16_SINGLE_LEAD
(fcdTrõIndex, 
c
)];

588 if(
fcd
!=0 && 
	`U16_IS_LEAD
(
c
)) {

589 
UCh¨
 
c2
;

590 if(
s
!=
limô
 && 
	`U16_IS_TRAIL
(
c2
=*s)) {

591 ++
s
;

592 
c
=
	`U16_GET_SUPPLEMENTARY
(c, 
c2
);

593 if(
c
<
fcdHighSèπ
) {

594 
fcd
=
fcdTrõIndex
[
	`_UTRIE2_INDEX_FROM_SUPP
(fcdTrõIndex, 
c
)];

596 
fcd
=0;

599 
fcd
=0;

602  
fcd
;

603 
	}
}

613 
ölöe
 
uöt16_t


614 
	$un‹m_¥evFCD16
(c⁄° 
uöt16_t
 *
fcdTrõIndex
, 
UCh¨32
 
fcdHighSèπ
,

615 c⁄° 
UCh¨
 *
°¨t
, c⁄° UCh¨ *&
s
) {

616 
UCh¨32
 
c
=*--
s
;

617 
uöt16_t
 
fcd
;

618 if(!
	`U16_IS_SURROGATE
(
c
)) {

619 
fcd
=
fcdTrõIndex
[
	`_UTRIE2_INDEX_FROM_U16_SINGLE_LEAD
(fcdTrõIndex, 
c
)];

621 
UCh¨
 
c2
;

622 if(
	`U16_IS_SURROGATE_TRAIL
(
c
Ë&& 
s
!=
°¨t
 && 
	`U16_IS_LEAD
(
c2
=*(s-1))) {

623 --
s
;

624 
c
=
	`U16_GET_SUPPLEMENTARY
(
c2
, c);

625 if(
c
<
fcdHighSèπ
) {

626 
fcd
=
fcdTrõIndex
[
	`_UTRIE2_INDEX_FROM_SUPP
(fcdTrõIndex, 
c
)];

628 
fcd
=0;

631 
fcd
=0;

634  
fcd
;

635 
	}
}

	@normlzr.cpp

9 
	~"unicode/uty≥s.h
"

11 #i‡!
UCONFIG_NO_NORMALIZATION


13 
	~"unicode/uni£t.h
"

14 
	~"unicode/uni°r.h
"

15 
	~"unicode/ch¨ôî.h
"

16 
	~"unicode/schrôî.h
"

17 
	~"unicode/uchrôî.h
"

18 
	~"unicode/n‹mlzr.h
"

19 
	~"cmem‹y.h
"

20 
	~"n‹mÆizî2im∂.h
"

21 
	~"u¥›s.h
"

23 
U_NAMESPACE_BEGIN


25 
	$UOBJECT_DEFINE_RTTI_IMPLEMENTATION
(
N‹mÆizî
)

31 
N‹mÆizî
::
	$N‹mÆizî
(c⁄° 
UnicodeSåög
& 
°r
, 
UN‹mÆiz©i⁄Mode
 
mode
) :

32 
	`UObje˘
(), 
	`fFûãªdN‹m2
(
NULL
), 
	`fN‹m2
(NULL), 
	`fUMode
(
mode
), 
	`fO±i⁄s
(0),

33 
	`ãxt
(
√w
 
	`SåögCh¨a˘îIãøt‹
(
°r
)),

34 
	`cuºítIndex
(0), 
	`√xtIndex
(0),

35 
	`buf„r
(), 
	$buf„rPos
(0)

37 
	`öô
();

38 
	}
}

40 
	gN‹mÆizî
::
	$N‹mÆizî
(c⁄° 
UCh¨
 *
°r
, 
öt32_t
 
Àngth
, 
UN‹mÆiz©i⁄Mode
 
mode
) :

41 
	`UObje˘
(), 
	`fFûãªdN‹m2
(
NULL
), 
	`fN‹m2
(NULL), 
	`fUMode
(
mode
), 
	`fO±i⁄s
(0),

42 
	`ãxt
(
√w
 
	`UCh¨Ch¨a˘îIãøt‹
(
°r
, 
Àngth
)),

43 
	`cuºítIndex
(0), 
	`√xtIndex
(0),

44 
	`buf„r
(), 
	$buf„rPos
(0)

46 
	`öô
();

47 
	}
}

49 
	gN‹mÆizî
::
	$N‹mÆizî
(c⁄° 
Ch¨a˘îIãøt‹
& 
ôî
, 
UN‹mÆiz©i⁄Mode
 
mode
) :

50 
	`UObje˘
(), 
	`fFûãªdN‹m2
(
NULL
), 
	`fN‹m2
(NULL), 
	`fUMode
(
mode
), 
	`fO±i⁄s
(0),

51 
	`ãxt
(
ôî
.
	`˛⁄e
()),

52 
	`cuºítIndex
(0), 
	`√xtIndex
(0),

53 
	`buf„r
(), 
	$buf„rPos
(0)

55 
	`öô
();

56 
	}
}

58 
	gN‹mÆizî
::
	$N‹mÆizî
(c⁄° 
N‹mÆizî
 &
c›y
) :

59 
	`UObje˘
(
c›y
), 
	`fFûãªdN‹m2
(
NULL
), 
	`fN‹m2
(NULL), 
	`fUMode
(c›y.
fUMode
), 
	`fO±i⁄s
(c›y.
fO±i⁄s
),

60 
	`ãxt
(
c›y
.
ãxt
->
	`˛⁄e
()),

61 
	`cuºítIndex
(
c›y
.
cuºítIndex
), 
	`√xtIndex
(c›y.
√xtIndex
),

62 
	`buf„r
(
c›y
.
buf„r
), 
	$buf„rPos
(
c›y
.
buf„rPos
)

64 
	`öô
();

65 
	}
}

67 c⁄° 
UCh¨
 
	g_NUL
=0;

70 
	gN‹mÆizî
::
	$öô
() {

71 
UEº‹Code
 
îr‹Code
=
U_ZERO_ERROR
;

72 
fN‹m2
=
N‹mÆizî2Fa˘‹y
::
	`gëIn°™˚
(
fUMode
, 
îr‹Code
);

73 if(
fO±i⁄s
&
UNORM_UNICODE_3_2
) {

74 
dñëe
 
fFûãªdN‹m2
;

75 
fN‹m2
=
fFûãªdN‹m2
=

76 
√w
 
	`FûãªdN‹mÆizî2
(*
fN‹m2
, *
	`uni£t_gëUnicode32In°™˚
(
îr‹Code
));

78 if(
	`U_FAILURE
(
îr‹Code
)) {

79 
îr‹Code
=
U_ZERO_ERROR
;

80 
fN‹m2
=
N‹mÆizî2Fa˘‹y
::
	`gëNo›In°™˚
(
îr‹Code
);

82 
	}
}

84 
	gN‹mÆizî
::~
	$N‹mÆizî
()

86 
dñëe
 
fFûãªdN‹m2
;

87 
dñëe
 
ãxt
;

88 
	}
}

90 
N‹mÆizî
*

91 
	gN‹mÆizî
::
	$˛⁄e
() const

93  
√w
 
	`N‹mÆizî
(*
this
);

94 
	}
}

99 
öt32_t
 
	gN‹mÆizî
::
	$hashCode
() const

101  
ãxt
->
	`hashCode
(Ë+ 
fUMode
 + 
fO±i⁄s
 + 
buf„r
.hashCode(Ë+ 
buf„rPos
 + 
cuºítIndex
 + 
√xtIndex
;

102 
	}
}

104 
UBoﬁ
 
	gN‹mÆizî
::
›î©‹
==(c⁄° 
N‹mÆizî
& 
th©
) const

107 
this
==&
th©
 ||

108 (
fUMode
==
th©
.fUMode &&

109 
fO±i⁄s
==
th©
.fOptions &&

110 *
ãxt
==*
th©
.text &&

111 
buf„r
==
th©
.buffer &&

112 
buf„rPos
==
th©
.bufferPos &&

113 
√xtIndex
==
th©
.nextIndex);

120 
U_EXPORT2


121 
	gN‹mÆizî
::
	$n‹mÆize
(c⁄° 
UnicodeSåög
& 
sour˚
,

122 
UN‹mÆiz©i⁄Mode
 
mode
, 
öt32_t
 
›ti⁄s
,

123 
UnicodeSåög
& 
ªsu…
,

124 
UEº‹Code
 &
°©us
) {

125 if(
sour˚
.
	`isBogus
(Ë|| 
	`U_FAILURE
(
°©us
)) {

126 
ªsu…
.
	`£tToBogus
();

127 if(
	`U_SUCCESS
(
°©us
)) {

128 
°©us
=
U_ILLEGAL_ARGUMENT_ERROR
;

131 
UnicodeSåög
 
loˇlDe°
;

132 
UnicodeSåög
 *
de°
;

134 if(&
sour˚
!=&
ªsu…
) {

135 
de°
=&
ªsu…
;

138 
de°
=&
loˇlDe°
;

140 c⁄° 
N‹mÆizî2
 *
n2
=
N‹mÆizî2Fa˘‹y
::
	`gëIn°™˚
(
mode
, 
°©us
);

141 if(
	`U_SUCCESS
(
°©us
)) {

142 if(
›ti⁄s
&
UNORM_UNICODE_3_2
) {

143 
	`FûãªdN‹mÆizî2
(*
n2
, *
	`uni£t_gëUnicode32In°™˚
(
°©us
)).

144 
	`n‹mÆize
(
sour˚
, *
de°
, 
°©us
);

146 
n2
->
	`n‹mÆize
(
sour˚
, *
de°
, 
°©us
);

149 if(
de°
==&
loˇlDe°
 && 
	`U_SUCCESS
(
°©us
)) {

150 
ªsu…
=*
de°
;

153 
	}
}

155 
U_EXPORT2


156 
	gN‹mÆizî
::
	$compo£
(c⁄° 
UnicodeSåög
& 
sour˚
,

157 
UBoﬁ
 
com∑t
, 
öt32_t
 
›ti⁄s
,

158 
UnicodeSåög
& 
ªsu…
,

159 
UEº‹Code
 &
°©us
) {

160 
	`n‹mÆize
(
sour˚
, 
com∑t
 ? 
UNORM_NFKC
 : 
UNORM_NFC
, 
›ti⁄s
, 
ªsu…
, 
°©us
);

161 
	}
}

163 
U_EXPORT2


164 
	gN‹mÆizî
::
	$decompo£
(c⁄° 
UnicodeSåög
& 
sour˚
,

165 
UBoﬁ
 
com∑t
, 
öt32_t
 
›ti⁄s
,

166 
UnicodeSåög
& 
ªsu…
,

167 
UEº‹Code
 &
°©us
) {

168 
	`n‹mÆize
(
sour˚
, 
com∑t
 ? 
UNORM_NFKD
 : 
UNORM_NFD
, 
›ti⁄s
, 
ªsu…
, 
°©us
);

169 
	}
}

171 
UN‹mÆiz©i⁄CheckResu…


172 
	gN‹mÆizî
::
	$quickCheck
(c⁄° 
UnicodeSåög
& 
sour˚
,

173 
UN‹mÆiz©i⁄Mode
 
mode
, 
öt32_t
 
›ti⁄s
,

174 
UEº‹Code
 &
°©us
) {

175 c⁄° 
N‹mÆizî2
 *
n2
=
N‹mÆizî2Fa˘‹y
::
	`gëIn°™˚
(
mode
, 
°©us
);

176 if(
	`U_SUCCESS
(
°©us
)) {

177 if(
›ti⁄s
&
UNORM_UNICODE_3_2
) {

178  
	`FûãªdN‹mÆizî2
(*
n2
, *
	`uni£t_gëUnicode32In°™˚
(
°©us
)).

179 
	`quickCheck
(
sour˚
, 
°©us
);

181  
n2
->
	`quickCheck
(
sour˚
, 
°©us
);

184  
UNORM_MAYBE
;

186 
	}
}

188 
UBoﬁ


189 
	gN‹mÆizî
::
	$isN‹mÆized
(c⁄° 
UnicodeSåög
& 
sour˚
,

190 
UN‹mÆiz©i⁄Mode
 
mode
, 
öt32_t
 
›ti⁄s
,

191 
UEº‹Code
 &
°©us
) {

192 c⁄° 
N‹mÆizî2
 *
n2
=
N‹mÆizî2Fa˘‹y
::
	`gëIn°™˚
(
mode
, 
°©us
);

193 if(
	`U_SUCCESS
(
°©us
)) {

194 if(
›ti⁄s
&
UNORM_UNICODE_3_2
) {

195  
	`FûãªdN‹mÆizî2
(*
n2
, *
	`uni£t_gëUnicode32In°™˚
(
°©us
)).

196 
	`isN‹mÆized
(
sour˚
, 
°©us
);

198  
n2
->
	`isN‹mÆized
(
sour˚
, 
°©us
);

201  
FALSE
;

203 
	}
}

205 
	gUnicodeSåög
 & 
U_EXPORT2


206 
	gN‹mÆizî
::
	$c⁄ˇã«ã
(
UnicodeSåög
 &
À·
, UnicodeSåög &
right
,

207 
UnicodeSåög
 &
ªsu…
,

208 
UN‹mÆiz©i⁄Mode
 
mode
, 
öt32_t
 
›ti⁄s
,

209 
UEº‹Code
 &
îr‹Code
) {

210 if(
À·
.
	`isBogus
(Ë|| 
right
.isBogus(Ë|| 
	`U_FAILURE
(
îr‹Code
)) {

211 
ªsu…
.
	`£tToBogus
();

212 if(
	`U_SUCCESS
(
îr‹Code
)) {

213 
îr‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

216 
UnicodeSåög
 
loˇlDe°
;

217 
UnicodeSåög
 *
de°
;

219 if(&
right
!=&
ªsu…
) {

220 
de°
=&
ªsu…
;

223 
de°
=&
loˇlDe°
;

225 *
de°
=
À·
;

226 c⁄° 
N‹mÆizî2
 *
n2
=
N‹mÆizî2Fa˘‹y
::
	`gëIn°™˚
(
mode
, 
îr‹Code
);

227 if(
	`U_SUCCESS
(
îr‹Code
)) {

228 if(
›ti⁄s
&
UNORM_UNICODE_3_2
) {

229 
	`FûãªdN‹mÆizî2
(*
n2
, *
	`uni£t_gëUnicode32In°™˚
(
îr‹Code
)).

230 
	`≠≥nd
(*
de°
, 
right
, 
îr‹Code
);

232 
n2
->
	`≠≥nd
(*
de°
, 
right
, 
îr‹Code
);

235 if(
de°
==&
loˇlDe°
 && 
	`U_SUCCESS
(
îr‹Code
)) {

236 
ªsu…
=*
de°
;

239  
ªsu…
;

240 
	}
}

249 
UCh¨32
 
	gN‹mÆizî
::
	$cuºít
() {

250 if(
buf„rPos
<
buf„r
.
	`Àngth
(Ë|| 
	`√xtN‹mÆize
()) {

251  
buf„r
.
	`ch¨32At
(
buf„rPos
);

253  
DONE
;

255 
	}
}

262 
UCh¨32
 
	gN‹mÆizî
::
	$√xt
() {

263 if(
buf„rPos
<
buf„r
.
	`Àngth
(Ë|| 
	`√xtN‹mÆize
()) {

264 
UCh¨32
 
c
=
buf„r
.
	`ch¨32At
(
buf„rPos
);

265 
buf„rPos
+=
	`UTF_CHAR_LENGTH
(
c
);

266  
c
;

268  
DONE
;

270 
	}
}

277 
UCh¨32
 
	gN‹mÆizî
::
	$¥evious
() {

278 if(
buf„rPos
>0 || 
	`¥eviousN‹mÆize
()) {

279 
UCh¨32
 
c
=
buf„r
.
	`ch¨32At
(
buf„rPos
-1);

280 
buf„rPos
-=
	`UTF_CHAR_LENGTH
(
c
);

281  
c
;

283  
DONE
;

285 
	}
}

287 
	gN‹mÆizî
::
	$ª£t
() {

288 
cuºítIndex
=
√xtIndex
=
ãxt
->
	`£tToSèπ
();

289 
	`˛órBuf„r
();

290 
	}
}

293 
	gN‹mÆizî
::
	$£tIndexO∆y
(
öt32_t
 
ödex
) {

294 
ãxt
->
	`£tIndex
(
ödex
);

295 
cuºítIndex
=
√xtIndex
=
ãxt
->
	`gëIndex
();

296 
	`˛órBuf„r
();

297 
	}
}

303 
UCh¨32
 
	gN‹mÆizî
::
	$fú°
() {

304 
	`ª£t
();

305  
	`√xt
();

306 
	}
}

313 
UCh¨32
 
	gN‹mÆizî
::
	$œ°
() {

314 
cuºítIndex
=
√xtIndex
=
ãxt
->
	`£tToEnd
();

315 
	`˛órBuf„r
();

316  
	`¥evious
();

317 
	}
}

333 
öt32_t
 
	gN‹mÆizî
::
	$gëIndex
() const {

334 if(
buf„rPos
<
buf„r
.
	`Àngth
()) {

335  
cuºítIndex
;

337  
√xtIndex
;

339 
	}
}

346 
öt32_t
 
	gN‹mÆizî
::
	$°¨tIndex
() const {

347  
ãxt
->
	`°¨tIndex
();

348 
	}
}

355 
öt32_t
 
	gN‹mÆizî
::
	$ídIndex
() const {

356  
ãxt
->
	`ídIndex
();

357 
	}
}

364 
	gN‹mÆizî
::
	$£tMode
(
UN‹mÆiz©i⁄Mode
 
√wMode
)

366 
fUMode
 = 
√wMode
;

367 
	`öô
();

368 
	}
}

370 
UN‹mÆiz©i⁄Mode


371 
	gN‹mÆizî
::
	$gëUMode
() const

373  
fUMode
;

374 
	}
}

377 
	gN‹mÆizî
::
	$£tO±i⁄
(
öt32_t
 
›ti⁄
,

378 
UBoﬁ
 
vÆue
)

380 i‡(
vÆue
) {

381 
fO±i⁄s
 |
›ti⁄
;

383 
fO±i⁄s
 &(~
›ti⁄
);

385 
	`öô
();

386 
	}
}

388 
UBoﬁ


389 
	gN‹mÆizî
::
	$gëO±i⁄
(
öt32_t
 
›ti⁄
) const

391  (
fO±i⁄s
 & 
›ti⁄
) != 0;

392 
	}
}

399 
	gN‹mÆizî
::
	$£tText
(c⁄° 
UnicodeSåög
& 
√wText
,

400 
UEº‹Code
 &
°©us
)

402 i‡(
	`U_FAILURE
(
°©us
)) {

405 
Ch¨a˘îIãøt‹
 *
√wIãr
 = 
√w
 
	`SåögCh¨a˘îIãøt‹
(
√wText
);

406 i‡(
√wIãr
 =
NULL
) {

407 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

410 
dñëe
 
ãxt
;

411 
ãxt
 = 
√wIãr
;

412 
	`ª£t
();

413 
	}
}

420 
	gN‹mÆizî
::
	$£tText
(c⁄° 
Ch¨a˘îIãøt‹
& 
√wText
,

421 
UEº‹Code
 &
°©us
)

423 i‡(
	`U_FAILURE
(
°©us
)) {

426 
Ch¨a˘îIãøt‹
 *
√wIãr
 = 
√wText
.
	`˛⁄e
();

427 i‡(
√wIãr
 =
NULL
) {

428 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

431 
dñëe
 
ãxt
;

432 
ãxt
 = 
√wIãr
;

433 
	`ª£t
();

434 
	}
}

437 
	gN‹mÆizî
::
	$£tText
(c⁄° 
UCh¨
* 
√wText
,

438 
öt32_t
 
Àngth
,

439 
UEº‹Code
 &
°©us
)

441 i‡(
	`U_FAILURE
(
°©us
)) {

444 
Ch¨a˘îIãøt‹
 *
√wIãr
 = 
√w
 
	`UCh¨Ch¨a˘îIãøt‹
(
√wText
, 
Àngth
);

445 i‡(
√wIãr
 =
NULL
) {

446 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

449 
dñëe
 
ãxt
;

450 
ãxt
 = 
√wIãr
;

451 
	`ª£t
();

452 
	}
}

459 
	gN‹mÆizî
::
	$gëText
(
UnicodeSåög
& 
ªsu…
)

461 
ãxt
->
	`gëText
(
ªsu…
);

462 
	}
}

468 
	gN‹mÆizî
::
	$˛órBuf„r
() {

469 
buf„r
.
	`ªmove
();

470 
buf„rPos
=0;

471 
	}
}

473 
UBoﬁ


474 
	gN‹mÆizî
::
	$√xtN‹mÆize
() {

475 
	`˛órBuf„r
();

476 
cuºítIndex
=
√xtIndex
;

477 
ãxt
->
	`£tIndex
(
√xtIndex
);

478 if(!
ãxt
->
	`hasNext
()) {

479  
FALSE
;

482 
UnicodeSåög
 
	`£gmít
(
ãxt
->
	`√xt32Po°Inc
());

483 
ãxt
->
	`hasNext
()) {

484 
UCh¨32
 
c
;

485 if(
fN‹m2
->
	`hasBound¨yBef‹e
(
c
=
ãxt
->
	`√xt32Po°Inc
())) {

486 
ãxt
->
	`move32
(-1, 
Ch¨a˘îIãøt‹
::
kCuºít
);

489 
£gmít
.
	`≠≥nd
(
c
);

491 
√xtIndex
=
ãxt
->
	`gëIndex
();

492 
UEº‹Code
 
îr‹Code
=
U_ZERO_ERROR
;

493 
fN‹m2
->
	`n‹mÆize
(
£gmít
, 
buf„r
, 
îr‹Code
);

494  
	`U_SUCCESS
(
îr‹Code
Ë&& !
buf„r
.
	`isEm±y
();

495 
	}
}

497 
UBoﬁ


498 
	gN‹mÆizî
::
	$¥eviousN‹mÆize
() {

499 
	`˛órBuf„r
();

500 
√xtIndex
=
cuºítIndex
;

501 
ãxt
->
	`£tIndex
(
cuºítIndex
);

502 if(!
ãxt
->
	`hasPªvious
()) {

503  
FALSE
;

505 
UnicodeSåög
 
£gmít
;

506 
ãxt
->
	`hasPªvious
()) {

507 
UCh¨32
 
c
=
ãxt
->
	`¥evious32
();

508 
£gmít
.
	`ö£π
(0, 
c
);

509 if(
fN‹m2
->
	`hasBound¨yBef‹e
(
c
)) {

513 
cuºítIndex
=
ãxt
->
	`gëIndex
();

514 
UEº‹Code
 
îr‹Code
=
U_ZERO_ERROR
;

515 
fN‹m2
->
	`n‹mÆize
(
£gmít
, 
buf„r
, 
îr‹Code
);

516 
buf„rPos
=
buf„r
.
	`Àngth
();

517  
	`U_SUCCESS
(
îr‹Code
Ë&& !
buf„r
.
	`isEm±y
();

518 
	}
}

520 
	gU_NAMESPACE_END


	@parsepos.cpp

8 
	~"unicode/∑r£pos.h
"

10 
U_NAMESPACE_BEGIN


12 
	$UOBJECT_DEFINE_RTTI_IMPLEMENTATION
(
P¨£Posôi⁄
)

14 
P¨£Posôi⁄
::~
	$P¨£Posôi⁄
(Ë{
	}
}

16 
P¨£Posôi⁄
 *

17 
P¨£Posôi⁄
::
	$˛⁄e
() const {

18  
√w
 
	`P¨£Posôi⁄
(*
this
);

19 
	}
}

21 
	gU_NAMESPACE_END


	@propname.cpp

11 
	~"¥›«me.h
"

12 
	~"unicode/uch¨.h
"

13 
	~"unicode/ud©a.h
"

14 
	~"umuãx.h
"

15 
	~"cmem‹y.h
"

16 
	~"c°rög.h
"

17 
	~"u˛n_cmn.h
"

18 
	~"u¨rs‹t.h
"

20 
U_CDECL_BEGIN


27 
ölöe
 
öt32_t


28 
	$gëASCIIPr›îtyNameCh¨
(c⁄° *
«me
) {

29 
öt32_t
 
i
;

30 
c
;

33 
i
=0;

34 (
c
=
«me
[
i
++])==0x2d || c==0x5f ||

35 
c
==0x20 || (0x09<=c && c<=0x0d);

38 if(
c
!=0) {

39  (
i
<<8)|(
uöt8_t
)
	`u¥v_asciôﬁowî
(()
c
);

41  
i
<<8;

43 
	}
}

50 
ölöe
 
öt32_t


51 
	$gëEBCDICPr›îtyNameCh¨
(c⁄° *
«me
) {

52 
öt32_t
 
i
;

53 
c
;

56 
i
=0;

57 (
c
=
«me
[
i
++])==0x60 || c==0x6d ||

58 
c
==0x40 || c==0x05 || c==0x15 || c==0x25 || c==0x0b || c==0x0c || c==0x0d;

61 if(
c
!=0) {

62  (
i
<<8)|(
uöt8_t
)
	`u¥v_ebcdi˘ﬁowî
(()
c
);

64  
i
<<8;

66 
	}
}

85 
U_CAPI
 
öt32_t
 
U_EXPORT2


86 
	$u¥v_com∑ªASCIIPr›îtyNames
(c⁄° *
«me1
, c⁄° *
«me2
) {

87 
öt32_t
 
rc
, 
r1
, 
r2
;

90 
r1
=
	`gëASCIIPr›îtyNameCh¨
(
«me1
);

91 
r2
=
	`gëASCIIPr›îtyNameCh¨
(
«me2
);

94 if(((
r1
|
r2
)&0xff)==0) {

99 if(
r1
!=
r2
) {

100 
rc
=(
r1
&0xff)-(
r2
&0xff);

101 if(
rc
!=0) {

102  
rc
;

106 
«me1
+=
r1
>>8;

107 
«me2
+=
r2
>>8;

109 
	}
}

111 
U_CAPI
 
öt32_t
 
U_EXPORT2


112 
	$u¥v_com∑ªEBCDICPr›îtyNames
(c⁄° *
«me1
, c⁄° *
«me2
) {

113 
öt32_t
 
rc
, 
r1
, 
r2
;

116 
r1
=
	`gëEBCDICPr›îtyNameCh¨
(
«me1
);

117 
r2
=
	`gëEBCDICPr›îtyNameCh¨
(
«me2
);

120 if(((
r1
|
r2
)&0xff)==0) {

125 if(
r1
!=
r2
) {

126 
rc
=(
r1
&0xff)-(
r2
&0xff);

127 if(
rc
!=0) {

128  
rc
;

132 
«me1
+=
r1
>>8;

133 
«me2
+=
r2
>>8;

135 
	}
}

137 
U_CDECL_END


139 
U_NAMESPACE_BEGIN


145 
	gPr›îtyAlü£s
::
	$choo£NameInGroup
(
Off£t
 
off£t
,

146 
UPr›îtyNameChoi˚
 
choi˚
) const {

147 
öt32_t
 
c
 = 
choi˚
;

148 i‡(!
off£t
 || 
c
 < 0) {

149  
NULL
;

151 c⁄° 
Off£t
* 
p
 = (c⁄° Off£t*Ë
	`gëPoöãr
(
off£t
);

152 
c
-- > 0) {

153 i‡(*
p
++ < 0Ë 
NULL
;

155 
Off£t
 
a
 = *
p
;

156 i‡(
a
 < 0)á = -a;

157  (c⁄° *Ë
	`gëPoöãrNuŒ
(
a
);

158 
	}
}

160 c⁄° 
VÆueM≠
*

161 
	gPr›îtyAlü£s
::
	$gëVÆueM≠
(
EnumVÆue
 
¥›
) const {

162 
N⁄C⁄tiguousEnumToOff£t
* 
e2o
 = (N⁄C⁄tiguousEnumToOff£t*Ë
	`gëPoöãr
(
íumToVÆue_off£t
);

163 
Off£t
 
a
 = 
e2o
->
	`gëOff£t
(
¥›
);

164  (c⁄° 
VÆueM≠
*Ë(
a
 ? 
	`gëPoöãrNuŒ
◊Ë: 
NULL
);

165 
	}
}

167 
ölöe
 const *

168 
	gPr›îtyAlü£s
::
	$gëPr›îtyName
(
EnumVÆue
 
¥›
,

169 
UPr›îtyNameChoi˚
 
choi˚
) const {

170 
N⁄C⁄tiguousEnumToOff£t
* 
e2n
 = (N⁄C⁄tiguousEnumToOff£t*Ë
	`gëPoöãr
(
íumToName_off£t
);

171  
	`choo£NameInGroup
(
e2n
->
	`gëOff£t
(
¥›
), 
choi˚
);

172 
	}
}

174 
ölöe
 
EnumVÆue


175 
	gPr›îtyAlü£s
::
	$gëPr›îtyEnum
(c⁄° * 
Æüs
) const {

176 
NameToEnum
* 
n2e
 = (NameToEnum*Ë
	`gëPoöãr
(
«meToEnum_off£t
);

177  
n2e
->
	`gëEnum
(
Æüs
, *
this
);

178 
	}
}

180 
ölöe
 const *

181 
	gPr›îtyAlü£s
::
	$gëPr›îtyVÆueName
(
EnumVÆue
 
¥›
,

182 
EnumVÆue
 
vÆue
,

183 
UPr›îtyNameChoi˚
 
choi˚
) const {

184 c⁄° 
VÆueM≠
* 
vm
 = 
	`gëVÆueM≠
(
¥›
);

185 i‡(!
vm
Ë 
NULL
;

186 
Off£t
 
a
;

187 i‡(
vm
->
íumToName_off£t
) {

188 
a
 = ((
EnumToOff£t
*Ë
	`gëPoöãr
(
vm
->
íumToName_off£t
))->

189 
	`gëOff£t
(
vÆue
);

191 
a
 = ((
N⁄C⁄tiguousEnumToOff£t
*Ë
	`gëPoöãr
(
vm
->
ncEnumToName_off£t
))->

192 
	`gëOff£t
(
vÆue
);

194  
	`choo£NameInGroup
(
a
, 
choi˚
);

195 
	}
}

197 
ölöe
 
EnumVÆue


198 
	gPr›îtyAlü£s
::
	$gëPr›îtyVÆueEnum
(
EnumVÆue
 
¥›
,

199 c⁄° * 
Æüs
) const {

200 c⁄° 
VÆueM≠
* 
vm
 = 
	`gëVÆueM≠
(
¥›
);

201 i‡(!
vm
Ë 
UCHAR_INVALID_CODE
;

202 
NameToEnum
* 
n2e
 = (NameToEnum*Ë
	`gëPoöãr
(
vm
->
«meToEnum_off£t
);

203  
n2e
->
	`gëEnum
(
Æüs
, *
this
);

204 
	}
}

206 
U_NAMESPACE_END


207 
U_NAMESPACE_USE


212 c⁄° 
Pr›îtyAlü£s
* 
	gPNAME
 = 
NULL
;

213 
UD©aMem‹y
* 
	gUDATA
 = 
NULL
;

221 
U_CDECL_BEGIN


222 
UBoﬁ
 
U_CALLCONV


223 
	$isPNameAc˚±abÀ
(* ,

225 c⁄° 
UD©aInfo
* 
öfo
) {

227 
öfo
->
size
 >(
UD©aInfo
) &&

228 
öfo
->
isBigEndün
 =
U_IS_BIG_ENDIAN
 &&

229 
öfo
->
ch¨£tFamûy
 =
U_CHARSET_FAMILY
 &&

230 
öfo
->
d©aF‹m©
[0] =
PNAME_SIG_0
 &&

231 
öfo
->
d©aF‹m©
[1] =
PNAME_SIG_1
 &&

232 
öfo
->
d©aF‹m©
[2] =
PNAME_SIG_2
 &&

233 
öfo
->
d©aF‹m©
[3] =
PNAME_SIG_3
 &&

234 
öfo
->
f‹m©Vîsi⁄
[0] =
PNAME_FORMAT_VERSION
;

235 
	}
}

237 
UBoﬁ
 
U_CALLCONV
 
	$≤ame_˛ónup
() {

238 i‡(
UDATA
) {

239 
	`ud©a_˛o£
(
UDATA
);

240 
UDATA
 = 
NULL
;

242 
PNAME
 = 
NULL
;

243  
TRUE
;

244 
	}
}

245 
U_CDECL_END


252 
UBoﬁ
 
	$_lﬂd
() {

253 
UEº‹Code
 
ec
 = 
U_ZERO_ERROR
;

254 
UD©aMem‹y
* 
d©a
 =

255 
	`ud©a_›íChoi˚
(0, 
PNAME_DATA_TYPE
, 
PNAME_DATA_NAME
,

256 
isPNameAc˚±abÀ
, 0, &
ec
);

257 i‡(
	`U_SUCCESS
(
ec
)) {

258 
	`umtx_lock
(
NULL
);

259 i‡(
UDATA
 =
NULL
) {

260 
UDATA
 = 
d©a
;

261 
PNAME
 = (c⁄° 
Pr›îtyAlü£s
*Ë
	`ud©a_gëMem‹y
(
UDATA
);

262 
	`u˛n_comm⁄_ªgi°îCÀ™up
(
UCLN_COMMON_PNAME
, 
≤ame_˛ónup
);

263 
d©a
 = 
NULL
;

265 
	`umtx_u∆ock
(
NULL
);

267 i‡(
d©a
) {

268 
	`ud©a_˛o£
(
d©a
);

270  
PNAME
!=
NULL
;

271 
	}
}

279 
ölöe
 
UBoﬁ
 
	$lﬂd
() {

280 
UBoﬁ
 
f
;

281 
	`UMTX_CHECK
(
NULL
, (
PNAME
!=NULL), 
f
);

282  
f
 || 
	`_lﬂd
();

283 
	}
}

293 
U_CAPI
 c⁄° * 
U_EXPORT2


294 
	$u_gëPr›îtyName
(
UPr›îty
 
¥›îty
,

295 
UPr›îtyNameChoi˚
 
«meChoi˚
) {

296  
	`lﬂd
(Ë? 
PNAME
->
	`gëPr›îtyName
(
¥›îty
, 
«meChoi˚
)

297 : 
NULL
;

298 
	}
}

300 
U_CAPI
 
UPr›îty
 
U_EXPORT2


301 
	$u_gëPr›îtyEnum
(c⁄° * 
Æüs
) {

302 
UPr›îty
 
p
 = 
	`lﬂd
(Ë? (UPr›îtyË
PNAME
->
	`gëPr›îtyEnum
(
Æüs
)

303 : 
UCHAR_INVALID_CODE
;

304  
p
;

305 
	}
}

307 
U_CAPI
 c⁄° * 
U_EXPORT2


308 
	$u_gëPr›îtyVÆueName
(
UPr›îty
 
¥›îty
,

309 
öt32_t
 
vÆue
,

310 
UPr›îtyNameChoi˚
 
«meChoi˚
) {

311  
	`lﬂd
(Ë? 
PNAME
->
	`gëPr›îtyVÆueName
(
¥›îty
, 
vÆue
, 
«meChoi˚
)

312 : 
NULL
;

313 
	}
}

315 
U_CAPI
 
öt32_t
 
U_EXPORT2


316 
	$u_gëPr›îtyVÆueEnum
(
UPr›îty
 
¥›îty
,

317 c⁄° * 
Æüs
) {

318  
	`lﬂd
(Ë? 
PNAME
->
	`gëPr›îtyVÆueEnum
(
¥›îty
, 
Æüs
)

319 : (
öt32_t
)
UCHAR_INVALID_CODE
;

320 
	}
}

332 
öt32_t


333 
	gEnumToOff£t
::
	$sw≠
(c⁄° 
UD©aSw≠≥r
 *
ds
,

334 c⁄° 
uöt8_t
 *
öByãs
, 
öt32_t
 
Àngth
, uöt8_à*
outByãs
,

335 
uöt8_t
 *
ãmp
, 
öt32_t
 
pos
,

336 
UEº‹Code
 *
pEº‹Code
) {

337 c⁄° 
EnumToOff£t
 *
öM≠
;

338 
EnumToOff£t
 *
outM≠
, *
ãmpM≠
;

339 
öt32_t
 
size
;

341 
ãmpM≠
=(
EnumToOff£t
 *)(
ãmp
+
pos
);

342 if(
ãmpM≠
->
íumSèπ
!=0 ||ÅempM≠->
íumLimô
!=0) {

344 
size
=
ãmpM≠
->
	`gëSize
();

345  
size
;

348 
öM≠
=(c⁄° 
EnumToOff£t
 *)(
öByãs
+
pos
);

349 
outM≠
=(
EnumToOff£t
 *)(
outByãs
+
pos
);

351 
ãmpM≠
->
íumSèπ
=
	`ud©a_ªadI¡32
(
ds
, 
öM≠
->enumStart);

352 
ãmpM≠
->
íumLimô
=
	`ud©a_ªadI¡32
(
ds
, 
öM≠
->enumLimit);

353 
size
=
ãmpM≠
->
	`gëSize
();

355 if(
Àngth
>=0) {

356 if(
Àngth
<(
pos
+
size
)) {

357 if(
Àngth
<(
öt32_t
)(
Pr›îtyAlü£s
)) {

358 
	`ud©a_¥ötEº‹
(
ds
, "upname_swap(EnumToOffset):Åoo few bytes (%dáfter header)\n"

360 
Àngth
, 
ãmpM≠
->
íumSèπ
,ÅempM≠->
íumLimô
, 
pos
);

361 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

367 
ds
->
	`sw≠Aºay32
(ds, 
öM≠
, 2*(
EnumVÆue
), 
outM≠
, 
pEº‹Code
);

370 
ds
->
	`sw≠Aºay16
(ds, 
öM≠
->
	`gëOff£tAºay
(), (
ãmpM≠
->
íumLimô
-ãmpM≠->
íumSèπ
)*(
Off£t
),

371 
outM≠
->
	`gëOff£tAºay
(), 
pEº‹Code
);

374  
size
;

375 
	}
}

377 
öt32_t


378 
	gN⁄C⁄tiguousEnumToOff£t
::
	$sw≠
(c⁄° 
UD©aSw≠≥r
 *
ds
,

379 c⁄° 
uöt8_t
 *
öByãs
, 
öt32_t
 
Àngth
, uöt8_à*
outByãs
,

380 
uöt8_t
 *
ãmp
, 
öt32_t
 
pos
,

381 
UEº‹Code
 *
pEº‹Code
) {

382 c⁄° 
N⁄C⁄tiguousEnumToOff£t
 *
öM≠
;

383 
N⁄C⁄tiguousEnumToOff£t
 *
outM≠
, *
ãmpM≠
;

384 
öt32_t
 
size
;

386 
ãmpM≠
=(
N⁄C⁄tiguousEnumToOff£t
 *)(
ãmp
+
pos
);

387 if(
ãmpM≠
->
cou¡
!=0) {

389 
size
=
ãmpM≠
->
	`gëSize
();

390  
size
;

393 
öM≠
=(c⁄° 
N⁄C⁄tiguousEnumToOff£t
 *)(
öByãs
+
pos
);

394 
outM≠
=(
N⁄C⁄tiguousEnumToOff£t
 *)(
outByãs
+
pos
);

396 
ãmpM≠
->
cou¡
=
	`ud©a_ªadI¡32
(
ds
, 
öM≠
->count);

397 
size
=
ãmpM≠
->
	`gëSize
();

399 if(
Àngth
>=0) {

400 if(
Àngth
<(
pos
+
size
)) {

401 if(
Àngth
<(
öt32_t
)(
Pr›îtyAlü£s
)) {

402 
	`ud©a_¥ötEº‹
(
ds
, "upname_swap(NonContiguousEnumToOffset):Åoo few bytes (%dáfter header)\n"

404 
Àngth
, 
ãmpM≠
->
cou¡
, 
pos
);

405 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

411 
Àngth
=(1+
ãmpM≠
->
cou¡
)*(
EnumVÆue
);

412 
ds
->
	`sw≠Aºay32
(ds, 
öM≠
, 
Àngth
,

413 
outM≠
, 
pEº‹Code
);

416 
pos
+=
Àngth
;

417 
ds
->
	`sw≠Aºay16
(ds, 
öByãs
+
pos
, 
ãmpM≠
->
cou¡
*(
Off£t
),

418 
outByãs
+
pos
, 
pEº‹Code
);

421  
size
;

422 
	}
}

424 
	sNameAndIndex
 {

425 
Off£t
 
	m«me
, 
	mödex
;

428 
U_CDECL_BEGIN


429 
öt32_t
 
	tU_CALLCONV
 
	tPr›NameCom∑ªFn
(c⁄° *
	t«me1
, c⁄° *
	t«me2
);

431 
	sCom∑ªC⁄ãxt
 {

432 c⁄° *
	mch¨s
;

433 
Pr›NameCom∑ªFn
 *
	m¥›Com∑ª
;

436 
öt32_t
 
U_CALLCONV


437 
	$u≤ame_com∑ªRows
(c⁄° *
c⁄ãxt
, c⁄° *
À·
, c⁄° *
right
) {

438 
Com∑ªC⁄ãxt
 *
cmp
=(Com∑ªC⁄ãxà*)
c⁄ãxt
;

439  
cmp
->
	`¥›Com∑ª
(cmp->
ch¨s
+((c⁄° 
NameAndIndex
 *)
À·
)->
«me
,

440 
cmp
->
ch¨s
+((c⁄° 
NameAndIndex
 *)
right
)->
«me
);

441 
	}
}

442 
U_CDECL_END


444 
öt32_t


445 
	gNameToEnum
::
	$sw≠
(c⁄° 
UD©aSw≠≥r
 *
ds
,

446 c⁄° 
uöt8_t
 *
öByãs
, 
öt32_t
 
Àngth
, uöt8_à*
outByãs
,

447 
uöt8_t
 *
ãmp
, 
öt32_t
 
pos
,

448 
UEº‹Code
 *
pEº‹Code
) {

449 c⁄° 
NameToEnum
 *
öM≠
;

450 
NameToEnum
 *
outM≠
, *
ãmpM≠
;

452 c⁄° 
EnumVÆue
 *
öEnumAºay
;

453 
EnumVÆue
 *
outEnumAºay
;

455 c⁄° 
Off£t
 *
öNameAºay
;

456 
Off£t
 *
outNameAºay
;

458 
NameAndIndex
 *
s‹tAºay
;

459 
Com∑ªC⁄ãxt
 
cmp
;

461 
öt32_t
 
i
, 
size
, 
ﬁdIndex
;

463 
ãmpM≠
=(
NameToEnum
 *)(
ãmp
+
pos
);

464 if(
ãmpM≠
->
cou¡
!=0) {

466 
size
=
ãmpM≠
->
	`gëSize
();

467  
size
;

470 
öM≠
=(c⁄° 
NameToEnum
 *)(
öByãs
+
pos
);

471 
outM≠
=(
NameToEnum
 *)(
outByãs
+
pos
);

473 
ãmpM≠
->
cou¡
=
	`ud©a_ªadI¡32
(
ds
, 
öM≠
->count);

474 
size
=
ãmpM≠
->
	`gëSize
();

476 if(
Àngth
>=0) {

477 if(
Àngth
<(
pos
+
size
)) {

478 if(
Àngth
<(
öt32_t
)(
Pr›îtyAlü£s
)) {

479 
	`ud©a_¥ötEº‹
(
ds
, "upname_swap(NameToEnum):Åoo few bytes (%dáfter header)\n"

481 
Àngth
, 
ãmpM≠
->
cou¡
, 
pos
);

482 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

488 
ds
->
	`sw≠Aºay32
(ds, 
öM≠
, 4, 
outM≠
, 
pEº‹Code
);

490 
öEnumAºay
=
öM≠
->
	`gëEnumAºay
();

491 
outEnumAºay
=
outM≠
->
	`gëEnumAºay
();

493 
öNameAºay
=(c⁄° 
Off£t
 *)(
öEnumAºay
+
ãmpM≠
->
cou¡
);

494 
outNameAºay
=(
Off£t
 *)(
outEnumAºay
+
ãmpM≠
->
cou¡
);

496 if(
ds
->
öCh¨£t
==ds->
outCh¨£t
) {

498 
ds
->
	`sw≠Aºay32
(ds, 
öEnumAºay
, 
ãmpM≠
->
cou¡
*4, 
outEnumAºay
, 
pEº‹Code
);

499 
ds
->
	`sw≠Aºay16
(ds, 
öNameAºay
, 
ãmpM≠
->
cou¡
*2, 
outNameAºay
, 
pEº‹Code
);

500  
size
;

512 
s‹tAºay
=(
NameAndIndex
 *)
ãmpM≠
->
	`gëEnumAºay
();

513 
i
=0; i<
ãmpM≠
->
cou¡
; ++i) {

514 
s‹tAºay
[
i
].
«me
=
	`ud©a_ªadI¡16
(
ds
, 
öNameAºay
[i]);

515 
s‹tAºay
[
i
].
ödex
=(
Off£t
)i;

522 
cmp
.
ch¨s
=(c⁄° *)
outByãs
;

523 i‡(
ds
->
outCh¨£t
==
U_ASCII_FAMILY
) {

524 
cmp
.
¥›Com∑ª
=
u¥v_com∑ªASCIIPr›îtyNames
;

527 
cmp
.
¥›Com∑ª
=
u¥v_com∑ªEBCDICPr›îtyNames
;

529 
	`u¥v_s‹tAºay
(
s‹tAºay
, 
ãmpM≠
->
cou¡
, (
NameAndIndex
),

530 
u≤ame_com∑ªRows
, &
cmp
,

531 
TRUE
, 
pEº‹Code
);

532 if(
	`U_FAILURE
(*
pEº‹Code
)) {

533 
	`ud©a_¥ötEº‹
(
ds
, "upname_swap(NameToEnum).uprv_sortArray(%d items) failed\n",

534 
ãmpM≠
->
cou¡
);

539 if(
öEnumAºay
!=
outEnumAºay
) {

540 
i
=0; i<
ãmpM≠
->
cou¡
; ++i) {

541 
ﬁdIndex
=
s‹tAºay
[
i
].
ödex
;

542 
ds
->
	`sw≠Aºay32
(ds, 
öEnumAºay
+
ﬁdIndex
, 4, 
outEnumAºay
+
i
, 
pEº‹Code
);

543 
ds
->
	`sw≠Aºay16
(ds, 
öNameAºay
+
ﬁdIndex
, 2, 
outNameAºay
+
i
, 
pEº‹Code
);

550 
EnumVÆue
 *
ãmpEnumAºay
;

551 
Off£t
 *
ﬁdIndexes
;

554 
i
=0; i<
ãmpM≠
->
cou¡
; ++i) {

555 
ds
->
	`wrôeUI¡16
((
uöt16_t
 *)
outNameAºay
+
i
, (uöt16_t)
s‹tAºay
[i].
«me
);

568 
ãmpEnumAºay
=(
EnumVÆue
 *)
s‹tAºay
;

569 
ﬁdIndexes
=(
Off£t
 *)(
s‹tAºay
+
ãmpM≠
->
cou¡
);

572 
i
=0; i<
ãmpM≠
->
cou¡
; ++i) {

573 
ﬁdIndexes
[
i
]=
s‹tAºay
[i].
ödex
;

577 
i
=0; i<
ãmpM≠
->
cou¡
; ++i) {

578 
ds
->
	`sw≠Aºay32
(ds, 
öEnumAºay
+
ﬁdIndexes
[
i
], 4, 
ãmpEnumAºay
+i, 
pEº‹Code
);

582 
	`u¥v_mem˝y
(
outEnumAºay
, 
ãmpEnumAºay
, 
ãmpM≠
->
cou¡
*4);

586  
size
;

587 
	}
}

589 
öt32_t


590 
	gPr›îtyAlü£s
::
	$sw≠
(c⁄° 
UD©aSw≠≥r
 *
ds
,

591 c⁄° 
uöt8_t
 *
öByãs
, 
öt32_t
 
Àngth
, uöt8_à*
outByãs
,

592 
UEº‹Code
 *
pEº‹Code
) {

593 c⁄° 
Pr›îtyAlü£s
 *
öAlü£s
;

594 
Pr›îtyAlü£s
 *
outAlü£s
;

595 
Pr›îtyAlü£s
 
Æü£s
;

597 c⁄° 
VÆueM≠
 *
öVÆueM≠s
;

598 
VÆueM≠
 *
outVÆueM≠s
;

599 
VÆueM≠
 
vÆueM≠
;

601 
öt32_t
 
i
;

603 
öAlü£s
=(c⁄° 
Pr›îtyAlü£s
 *)
öByãs
;

604 
outAlü£s
=(
Pr›îtyAlü£s
 *)
outByãs
;

607 
i
=0; i<(
öt32_t
)(
Pr›îtyAlü£s
)/2; ++i) {

608 ((
uöt16_t
 *)&
Æü£s
)[
i
]=
ds
->
	`ªadUI¡16
(((c⁄° uöt16_à*)
öByãs
)[i]);

611 if(
Àngth
>=0) {

612 if(
Àngth
<
Æü£s
.
tŸÆ_size
) {

613 
	`ud©a_¥ötEº‹
(
ds
, "upname_swap():Åoo few bytes (%dáfter header) foráll ofÖnames.icu\n",

614 
Àngth
);

615 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

620 if(
öByãs
!=
outByãs
) {

621 
	`u¥v_mem˝y
(
outByãs
, 
öByãs
, 
Æü£s
.
tŸÆ_size
);

625 
ds
->
	`sw≠Aºay16
(ds, 
öAlü£s
, (
Pr›îtyAlü£s
), 
outAlü£s
, 
pEº‹Code
);

628 
ds
->
	`sw≠Aºay16
(ds, 
öByãs
+
Æü£s
.
«meGroupPoﬁ_off£t
,

629 
Æü£s
.
°rögPoﬁ_off£t
-Æü£s.
«meGroupPoﬁ_off£t
,

630 
outByãs
+
Æü£s
.
«meGroupPoﬁ_off£t
, 
pEº‹Code
);

633 
	`ud©a_sw≠InvSåögBlock
(
ds
, 
öByãs
+
Æü£s
.
°rögPoﬁ_off£t
,

634 
Æü£s
.
tŸÆ_size
-Æü£s.
°rögPoﬁ_off£t
,

635 
outByãs
+
Æü£s
.
°rögPoﬁ_off£t
, 
pEº‹Code
);

648 
LoˇlMem‹y
<
uöt8_t
> 
ãmp
;

649 if(
ãmp
.
	`ÆloˇãIn°ódAndRe£t
(
Æü£s
.
tŸÆ_size
)==
NULL
) {

650 
	`ud©a_¥ötEº‹
(
ds
, "upname_swap(): unableÅoállocateÅemp memory (%d bytes)\n",

651 
Æü£s
.
tŸÆ_size
);

652 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

657 
N⁄C⁄tiguousEnumToOff£t
::
	`sw≠
(
ds
, 
öByãs
, 
Àngth
, 
outByãs
,

658 
ãmp
.
	`gëAlüs
(), 
Æü£s
.
íumToName_off£t
, 
pEº‹Code
);

661 
NameToEnum
::
	`sw≠
(
ds
, 
öByãs
, 
Àngth
, 
outByãs
,

662 
ãmp
.
	`gëAlüs
(), 
Æü£s
.
«meToEnum_off£t
, 
pEº‹Code
);

665 
N⁄C⁄tiguousEnumToOff£t
::
	`sw≠
(
ds
, 
öByãs
, 
Àngth
, 
outByãs
,

666 
ãmp
.
	`gëAlüs
(), 
Æü£s
.
íumToVÆue_off£t
, 
pEº‹Code
);

669 
öVÆueM≠s
=(c⁄° 
VÆueM≠
 *)(
öByãs
+
Æü£s
.
vÆueM≠_off£t
);

670 
outVÆueM≠s
=(
VÆueM≠
 *)(
outByãs
+
Æü£s
.
vÆueM≠_off£t
);

672 
i
=0; i<
Æü£s
.
vÆueM≠_cou¡
; ++i) {

673 
vÆueM≠
.
íumToName_off£t
=
	`ud©a_ªadI¡16
(
ds
, 
öVÆueM≠s
[
i
].enumToName_offset);

674 
vÆueM≠
.
ncEnumToName_off£t
=
	`ud©a_ªadI¡16
(
ds
, 
öVÆueM≠s
[
i
].ncEnumToName_offset);

675 
vÆueM≠
.
«meToEnum_off£t
=
	`ud©a_ªadI¡16
(
ds
, 
öVÆueM≠s
[
i
].nameToEnum_offset);

677 if(
vÆueM≠
.
íumToName_off£t
!=0) {

678 
EnumToOff£t
::
	`sw≠
(
ds
, 
öByãs
, 
Àngth
, 
outByãs
,

679 
ãmp
.
	`gëAlüs
(), 
vÆueM≠
.
íumToName_off£t
,

680 
pEº‹Code
);

681 } if(
vÆueM≠
.
ncEnumToName_off£t
!=0) {

682 
N⁄C⁄tiguousEnumToOff£t
::
	`sw≠
(
ds
, 
öByãs
, 
Àngth
, 
outByãs
,

683 
ãmp
.
	`gëAlüs
(), 
vÆueM≠
.
ncEnumToName_off£t
,

684 
pEº‹Code
);

686 if(
vÆueM≠
.
«meToEnum_off£t
!=0) {

687 
NameToEnum
::
	`sw≠
(
ds
, 
öByãs
, 
Àngth
, 
outByãs
,

688 
ãmp
.
	`gëAlüs
(), 
vÆueM≠
.
«meToEnum_off£t
,

689 
pEº‹Code
);

694 
ds
->
	`sw≠Aºay16
(ds, 
öVÆueM≠s
, 
Æü£s
.
vÆueM≠_cou¡
*(
VÆueM≠
),

695 
outVÆueM≠s
, 
pEº‹Code
);

700  
Æü£s
.
tŸÆ_size
;

701 
	}
}

703 
U_CAPI
 
öt32_t
 
U_EXPORT2


704 
	$u≤ame_sw≠
(c⁄° 
UD©aSw≠≥r
 *
ds
,

705 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

706 
UEº‹Code
 *
pEº‹Code
) {

707 c⁄° 
UD©aInfo
 *
pInfo
;

708 
öt32_t
 
hódîSize
;

710 c⁄° 
uöt8_t
 *
öByãs
;

711 
uöt8_t
 *
outByãs
;

714 
hódîSize
=
	`ud©a_sw≠D©aHódî
(
ds
, 
öD©a
, 
Àngth
, 
outD©a
, 
pEº‹Code
);

715 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

720 
pInfo
=(c⁄° 
UD©aInfo
 *)((c⁄° *)
öD©a
+4);

722 
pInfo
->
d©aF‹m©
[0]==0x70 &&

723 
pInfo
->
d©aF‹m©
[1]==0x6e &&

724 
pInfo
->
d©aF‹m©
[2]==0x61 &&

725 
pInfo
->
d©aF‹m©
[3]==0x6d &&

726 
pInfo
->
f‹m©Vîsi⁄
[0]==1

728 
	`ud©a_¥ötEº‹
(
ds
, "upname_swap(): data format %02x.%02x.%02x.%02x (format version %02x) isÇotÑecognizedásÖnames.icu\n",

729 
pInfo
->
d©aF‹m©
[0],ÖInfo->dataFormat[1],

730 
pInfo
->
d©aF‹m©
[2],ÖInfo->dataFormat[3],

731 
pInfo
->
f‹m©Vîsi⁄
[0]);

732 *
pEº‹Code
=
U_UNSUPPORTED_ERROR
;

736 
öByãs
=(c⁄° 
uöt8_t
 *)
öD©a
+
hódîSize
;

737 
outByãs
=(
uöt8_t
 *)
outD©a
+
hódîSize
;

739 if(
Àngth
>=0) {

740 
Àngth
-=
hódîSize
;

741 if(
Àngth
<(
öt32_t
)(
Pr›îtyAlü£s
)) {

742 
	`ud©a_¥ötEº‹
(
ds
, "upname_swap():Åoo few bytes (%dáfter header) forÖnames.icu\n",

743 
Àngth
);

744 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

749  
hódîSize
+
Pr›îtyAlü£s
::
	`sw≠
(
ds
, 
öByãs
, 
Àngth
, 
outByãs
, 
pEº‹Code
);

750 
	}
}

	@propname.h

11 #i‚de‡
PROPNAME_H


12 
	#PROPNAME_H


	)

14 
	~"unicode/uty≥s.h
"

15 
	~"unicode/uch¨.h
"

16 
	~"ud©aswp.h
"

17 
	~"u¥›s.h
"

29 
U_CDECL_BEGIN


49 
U_CAPI
 
öt32_t
 
U_EXPORT2


50 
u¥v_com∑ªASCIIPr›îtyNames
(c⁄° *
«me1
, c⁄° *
«me2
);

52 
U_CAPI
 
öt32_t
 
U_EXPORT2


53 
u¥v_com∑ªEBCDICPr›îtyNames
(c⁄° *
«me1
, c⁄° *
«me2
);

55 #i‡
U_CHARSET_FAMILY
==
U_ASCII_FAMILY


56 
	#u¥v_com∑ªPr›îtyNames
 
u¥v_com∑ªASCIIPr›îtyNames


	)

57 #ñi‡
U_CHARSET_FAMILY
==
U_EBCDIC_FAMILY


58 
	#u¥v_com∑ªPr›îtyNames
 
u¥v_com∑ªEBCDICPr›îtyNames


	)

60 #îr‹ 
U_CHARSET_FAMILY
 
is
 
nŸ
 
vÆid


63 
	gU_CDECL_END


67 
	#PNAME_DATA_NAME
 "≤ames"

	)

68 
	#PNAME_DATA_TYPE
 "icu"

	)

73 
	#PNAME_SIG_0
 ((
uöt8_t
)0x70Ë

	)

74 
	#PNAME_SIG_1
 ((
uöt8_t
)0x6EË

	)

75 
	#PNAME_SIG_2
 ((
uöt8_t
)0x61Ë

	)

76 
	#PNAME_SIG_3
 ((
uöt8_t
)0x6DË

	)

78 
	#PNAME_FORMAT_VERSION
 ((
öt8_t
)1Ë

	)

84 
U_CAPI
 
öt32_t
 
U_EXPORT2


85 
u≤ame_sw≠
(c⁄° 
UD©aSw≠≥r
 *
ds
,

86 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

87 
UEº‹Code
 *
pEº‹Code
);

90 #ifde‡
XP_CPLUSPLUS


92 
˛ass
 
	gBuûdî
;

94 
U_NAMESPACE_BEGIN


103 
öt16_t
 
	tOff£t
;

105 
	#MAX_OFFSET
 0x7FFF

	)

116 
öt32_t
 
	tEnumVÆue
;

135 
	sVÆueM≠
 {

140 
Off£t
 
	míumToName_off£t
;

141 
Off£t
 
	mncEnumToName_off£t
;

143 
Off£t
 
	m«meToEnum_off£t
;

159 ˛as†
	cPr›îtyAlü£s
 {

164 
Off£t
 
	míumToName_off£t
;

167 
Off£t
 
	m«meToEnum_off£t
;

171 
Off£t
 
	míumToVÆue_off£t
;

175 
öt16_t
 
	mtŸÆ_size
;

176 
Off£t
 
	mvÆueM≠_off£t
;

177 
öt16_t
 
	mvÆueM≠_cou¡
;

178 
Off£t
 
	m«meGroupPoﬁ_off£t
;

179 
öt16_t
 
	m«meGroupPoﬁ_cou¡
;

180 
Off£t
 
	m°rögPoﬁ_off£t
;

181 
öt16_t
 
	m°rögPoﬁ_cou¡
;

185 
‰õnd
 
	m˛ass
 ::
Buûdî
;

187 c⁄° 
VÆueM≠
* 
	$gëVÆueM≠
(
EnumVÆue
 
¥›
) const;

189 c⁄° * 
	$choo£NameInGroup
(
Off£t
 
off£t
,

190 
UPr›îtyNameChoi˚
 
choi˚
) const;

192 
public
:

194 
ölöe
 c⁄° 
öt8_t
* 
	$gëPoöãr
(
Off£t
 
o
) const {

195  ((c⁄° 
öt8_t
*Ë
this
Ë+ 
o
;

198 
ölöe
 c⁄° 
öt8_t
* 
	$gëPoöãrNuŒ
(
Off£t
 
o
) const {

199  
o
 ? 
	`gëPoöãr
(oË: 
NULL
;

200 
	}
}

202 
ölöe
 c⁄° * 
	$gëPr›îtyName
(
EnumVÆue
 
¥›
,

203 
UPr›îtyNameChoi˚
 
choi˚
) const;

205 
ölöe
 
EnumVÆue
 
	$gëPr›îtyEnum
(c⁄° * 
Æüs
) const;

207 
ölöe
 c⁄° * 
	$gëPr›îtyVÆueName
(
EnumVÆue
 
¥›
, EnumVÆuê
vÆue
,

208 
UPr›îtyNameChoi˚
 
choi˚
) const;

210 
ölöe
 
EnumVÆue
 
	$gëPr›îtyVÆueEnum
(
EnumVÆue
 
¥›
,

211 c⁄° * 
Æüs
) const;

213 
öt32_t


214 
	`sw≠
(c⁄° 
UD©aSw≠≥r
 *
ds
,

215 c⁄° 
uöt8_t
 *
öByãs
, 
öt32_t
 
Àngth
, uöt8_à*
outByãs
,

216 
UEº‹Code
 *
pEº‹Code
);

217 
	}
};

227 ˛as†
	cEnumToOff£t
 {

230 
EnumVÆue
 
	míumSèπ
;

231 
EnumVÆue
 
	míumLimô
;

232 
Off£t
 
	m_off£tAºay
;

235 
‰õnd
 
	m˛ass
 ::
Buûdî
;

237 
Off£t
* 
	$gëOff£tAºay
() {

238  &
_off£tAºay
;

241 c⁄° 
Off£t
* 
	$gëOff£tAºay
() const {

242  &
_off£tAºay
;

243 
	}
}

245 
öt32_t
 
	$gëSize
(
öt32_t
 
n
) {

246  (
EnumToOff£t
Ë+ (
Off£t
Ë* (
n
 - 1);

247 
	}
}

249 
öt32_t
 
	$gëSize
() {

250  
	`gëSize
(
íumLimô
 - 
íumSèπ
);

251 
	}
}

253 
	gpublic
:

255 
Off£t
 
	$gëOff£t
(
EnumVÆue
 
íumProbe
) const {

256 i‡(
íumProbe
 < 
íumSèπ
 ||

257 
íumProbe
 >
íumLimô
) {

260 c⁄° 
Off£t
* 
p
 = 
	`gëOff£tAºay
();

261  
p
[
íumProbe
 - 
íumSèπ
];

262 
	}
}

264 
öt32_t


265 
sw≠
(c⁄° 
UD©aSw≠≥r
 *
ds
,

266 c⁄° 
uöt8_t
 *
öByãs
, 
öt32_t
 
Àngth
, uöt8_à*
outByãs
,

267 
uöt8_t
 *
ãmp
, 
öt32_t
 
pos
,

268 
UEº‹Code
 *
pEº‹Code
);

279 ˛as†
	cN⁄C⁄tiguousEnumToOff£t
 {

282 
öt32_t
 
	mcou¡
;

283 
EnumVÆue
 
	m_íumAºay
;

287 
‰õnd
 
	m˛ass
 ::
Buûdî
;

289 
EnumVÆue
* 
	$gëEnumAºay
() {

290  &
_íumAºay
;

293 c⁄° 
EnumVÆue
* 
	$gëEnumAºay
() const {

294  &
_íumAºay
;

295 
	}
}

297 
Off£t
* 
	$gëOff£tAºay
() {

298  (
Off£t
*Ë(
	`gëEnumAºay
(Ë+ 
cou¡
);

299 
	}
}

301 c⁄° 
Off£t
* 
	$gëOff£tAºay
() const {

302  (
Off£t
*Ë(
	`gëEnumAºay
(Ë+ 
cou¡
);

303 
	}
}

305 
öt32_t
 
	$gëSize
(
öt32_t
 
n
) {

306  (
öt32_t
Ë+ ((
EnumVÆue
Ë+ (
Off£t
)Ë* 
n
;

307 
	}
}

309 
öt32_t
 
	$gëSize
() {

310  
	`gëSize
(
cou¡
);

311 
	}
}

313 
	gpublic
:

315 
Off£t
 
	$gëOff£t
(
EnumVÆue
 
íumProbe
) const {

316 c⁄° 
EnumVÆue
* 
e
 = 
	`gëEnumAºay
();

317 c⁄° 
Off£t
* 
p
 = 
	`gëOff£tAºay
();

320 
öt32_t
 
i
=0; i<
cou¡
; ++i) {

321 i‡(
e
[
i
] < 
íumProbe
) ;

322 i‡(
e
[
i
] > 
íumProbe
) ;

323  
p
[
i
];

326 
	}
}

328 
öt32_t


329 
sw≠
(c⁄° 
UD©aSw≠≥r
 *
ds
,

330 c⁄° 
uöt8_t
 *
öByãs
, 
öt32_t
 
Àngth
, uöt8_à*
outByãs
,

331 
uöt8_t
 *
ãmp
, 
öt32_t
 
pos
,

332 
UEº‹Code
 *
pEº‹Code
);

341 ˛as†
	cNameToEnum
 {

344 
öt32_t
 
	mcou¡
;

345 
EnumVÆue
 
	m_íumAºay
;

349 
‰õnd
 
	m˛ass
 ::
Buûdî
;

351 
EnumVÆue
* 
	$gëEnumAºay
() {

352  &
_íumAºay
;

355 c⁄° 
EnumVÆue
* 
	$gëEnumAºay
() const {

356  &
_íumAºay
;

357 
	}
}

359 
Off£t
* 
	$gëNameAºay
() {

360  (
Off£t
*Ë(
	`gëEnumAºay
(Ë+ 
cou¡
);

361 
	}
}

363 c⁄° 
Off£t
* 
	$gëNameAºay
() const {

364  (
Off£t
*Ë(
	`gëEnumAºay
(Ë+ 
cou¡
);

365 
	}
}

367 
öt32_t
 
	$gëSize
(
öt32_t
 
n
) {

368  (
öt32_t
Ë+ ((
Off£t
Ë+ (
EnumVÆue
)Ë* 
n
;

369 
	}
}

371 
öt32_t
 
	$gëSize
() {

372  
	`gëSize
(
cou¡
);

373 
	}
}

375 
	gpublic
:

377 
EnumVÆue
 
	$gëEnum
(c⁄° * 
Æüs
, c⁄° 
Pr›îtyAlü£s
& 
d©a
) const {

379 c⁄° 
Off£t
* 
n
 = 
	`gëNameAºay
();

380 c⁄° 
EnumVÆue
* 
e
 = 
	`gëEnumAºay
();

384 
öt32_t
 
i
=0; i<
cou¡
; ++i) {

385 c⁄° * 
«me
 = (c⁄° *Ë
d©a
.
	`gëPoöãr
(
n
[
i
]);

386 
öt32_t
 
c
 = 
	`u¥v_com∑ªPr›îtyNames
(
Æüs
, 
«me
);

387 i‡(
c
 > 0) ;

388 i‡(
c
 < 0) ;

389  
e
[
i
];

392  
UCHAR_INVALID_CODE
;

393 
	}
}

395 
öt32_t


396 
sw≠
(c⁄° 
UD©aSw≠≥r
 *
ds
,

397 c⁄° 
uöt8_t
 *
öByãs
, 
öt32_t
 
Àngth
, uöt8_à*
outByãs
,

398 
uöt8_t
 *
ãmp
, 
öt32_t
 
pos
,

399 
UEº‹Code
 *
pEº‹Code
);

511 
	gU_NAMESPACE_END


	@propsvec.c

19 
	~<°dlib.h
>

20 
	~"unicode/uty≥s.h
"

21 
	~"cmem‹y.h
"

22 
	~"uåõ.h
"

23 
	~"uåõ2.h
"

24 
	~"u¨rs‹t.h
"

25 
	~"¥›svec.h
"

27 
	sUPr›sVe˘‹s
 {

28 
uöt32_t
 *
	mv
;

29 
öt32_t
 
	mcﬁumns
;

30 
öt32_t
 
	mmaxRows
;

31 
öt32_t
 
	mrows
;

32 
öt32_t
 
	m¥evRow
;

33 
UBoﬁ
 
	misCom∑˘ed
;

36 
	#UPVEC_INITIAL_ROWS
 (1<<12)

	)

37 
	#UPVEC_MEDIUM_ROWS
 ((
öt32_t
)1<<16)

	)

38 
	#UPVEC_MAX_ROWS
 (
UPVEC_MAX_CP
+1)

	)

40 
U_CAPI
 
UPr›sVe˘‹s
 * 
U_EXPORT2


41 
	$upvec_›í
(
öt32_t
 
cﬁumns
, 
UEº‹Code
 *
pEº‹Code
) {

42 
UPr›sVe˘‹s
 *
pv
;

43 
uöt32_t
 *
v
, *
row
;

44 
uöt32_t
 
˝
;

46 if(
	`U_FAILURE
(*
pEº‹Code
)) {

47  
NULL
;

49 if(
cﬁumns
<1) {

50 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

51  
NULL
;

53 
cﬁumns
+=2;

55 
pv
=(
UPr›sVe˘‹s
 *)
	`u¥v_mÆloc
((UPropsVectors));

56 
v
=(
uöt32_t
 *)
	`u¥v_mÆloc
(
UPVEC_INITIAL_ROWS
*
cﬁumns
*4);

57 if(
pv
==
NULL
 || 
v
==NULL) {

58 
	`u¥v_‰ì
(
pv
);

59 
	`u¥v_‰ì
(
v
);

60 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

61  
NULL
;

63 
	`u¥v_mem£t
(
pv
, 0, (
UPr›sVe˘‹s
));

64 
pv
->
v
=v;

65 
pv
->
cﬁumns
=columns;

66 
pv
->
maxRows
=
UPVEC_INITIAL_ROWS
;

67 
pv
->
rows
=2+(
UPVEC_MAX_CP
-
UPVEC_FIRST_SPECIAL_CP
);

70 
row
=
pv
->
v
;

71 
	`u¥v_mem£t
(
row
, 0, 
pv
->
rows
*
cﬁumns
*4);

72 
row
[0]=0;

73 
row
[1]=0x110000;

74 
row
+=
cﬁumns
;

75 
˝
=
UPVEC_FIRST_SPECIAL_CP
; cp<=
UPVEC_MAX_CP
; ++cp) {

76 
row
[0]=
˝
;

77 
row
[1]=
˝
+1;

78 
row
+=
cﬁumns
;

80  
pv
;

81 
	}
}

83 
U_CAPI
 
U_EXPORT2


84 
	$upvec_˛o£
(
UPr›sVe˘‹s
 *
pv
) {

85 if(
pv
!=
NULL
) {

86 
	`u¥v_‰ì
(
pv
->
v
);

87 
	`u¥v_‰ì
(
pv
);

89 
	}
}

91 
uöt32_t
 *

92 
	$_födRow
(
UPr›sVe˘‹s
 *
pv
, 
UCh¨32
 
øngeSèπ
) {

93 
uöt32_t
 *
row
;

94 
öt32_t
 
cﬁumns
, 
i
, 
°¨t
, 
limô
, 
¥evRow
, 
rows
;

96 
cﬁumns
=
pv
->columns;

97 
rows
=
limô
=
pv
->rows;

98 
¥evRow
=
pv
->prevRow;

101 
row
=
pv
->
v
+
¥evRow
*
cﬁumns
;

102 if(
øngeSèπ
>=(
UCh¨32
)
row
[0]) {

103 if(
øngeSèπ
<(
UCh¨32
)
row
[1]) {

105  
row
;

106 } if(
øngeSèπ
<(
UCh¨32
)(
row
+=
cﬁumns
)[1]) {

108 
pv
->
¥evRow
=prevRow+1;

109  
row
;

110 } if(
øngeSèπ
<(
UCh¨32
)(
row
+=
cﬁumns
)[1]) {

112 
pv
->
¥evRow
=prevRow+2;

113  
row
;

114 } if((
øngeSèπ
-(
UCh¨32
)
row
[1])<10) {

116 
¥evRow
+=2;

118 ++
¥evRow
;

119 
row
+=
cﬁumns
;

120 } 
øngeSèπ
>=(
UCh¨32
)
row
[1]);

121 
pv
->
¥evRow
=prevRow;

122  
row
;

124 } if(
øngeSèπ
<(
UCh¨32
)
pv
->
v
[1]) {

126 
pv
->
¥evRow
=0;

127  
pv
->
v
;

131 
°¨t
=0;

132 
°¨t
<
limô
-1) {

133 
i
=(
°¨t
+
limô
)/2;

134 
row
=
pv
->
v
+
i
*
cﬁumns
;

135 if(
øngeSèπ
<(
UCh¨32
)
row
[0]) {

136 
limô
=
i
;

137 } if(
øngeSèπ
<(
UCh¨32
)
row
[1]) {

138 
pv
->
¥evRow
=
i
;

139  
row
;

141 
°¨t
=
i
;

146 
pv
->
¥evRow
=
°¨t
;

147  
pv
->
v
+
°¨t
*
cﬁumns
;

148 
	}
}

150 
U_CAPI
 
U_EXPORT2


151 
	$upvec_£tVÆue
(
UPr›sVe˘‹s
 *
pv
,

152 
UCh¨32
 
°¨t
, UCh¨32 
íd
,

153 
öt32_t
 
cﬁumn
,

154 
uöt32_t
 
vÆue
, uöt32_à
mask
,

155 
UEº‹Code
 *
pEº‹Code
) {

156 
uöt32_t
 *
fú°Row
, *
œ°Row
;

157 
öt32_t
 
cﬁumns
;

158 
UCh¨32
 
limô
;

159 
UBoﬁ
 
•lôFú°Row
, 
•lôLa°Row
;

162 if(
	`U_FAILURE
(*
pEº‹Code
)) {

165 if–
pv
==
NULL
 ||

166 
°¨t
<0 || sèπ>
íd
 ||Énd>
UPVEC_MAX_CP
 ||

167 
cﬁumn
<0 || cﬁumn>=(
pv
->
cﬁumns
-2)

169 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

172 if(
pv
->
isCom∑˘ed
) {

173 *
pEº‹Code
=
U_NO_WRITE_PERMISSION
;

176 
limô
=
íd
+1;

179 
cﬁumns
=
pv
->columns;

180 
cﬁumn
+=2;

181 
vÆue
&=
mask
;

186 
fú°Row
=
	`_födRow
(
pv
, 
°¨t
);

187 
œ°Row
=
	`_födRow
(
pv
, 
íd
);

194 
•lôFú°Row
(
UBoﬁ
)(
°¨t
!=(
UCh¨32
)
fú°Row
[0] && 
vÆue
!=(fú°Row[
cﬁumn
]&
mask
));

195 
•lôLa°Row
(
UBoﬁ
)(
limô
!=(
UCh¨32
)
œ°Row
[1] && 
vÆue
!=÷a°Row[
cﬁumn
]&
mask
));

198 if(
•lôFú°Row
 || 
•lôLa°Row
) {

199 
öt32_t
 
cou¡
, 
rows
;

201 
rows
=
pv
->rows;

202 if((
rows
+
•lôFú°Row
+
•lôLa°Row
)>
pv
->
maxRows
) {

203 
uöt32_t
 *
√wVe˘‹s
;

204 
öt32_t
 
√wMaxRows
;

206 if(
pv
->
maxRows
<
UPVEC_MEDIUM_ROWS
) {

207 
√wMaxRows
=
UPVEC_MEDIUM_ROWS
;

208 } if(
pv
->
maxRows
<
UPVEC_MAX_ROWS
) {

209 
√wMaxRows
=
UPVEC_MAX_ROWS
;

212 *
pEº‹Code
=
U_INTERNAL_PROGRAM_ERROR
;

215 
√wVe˘‹s
=(
uöt32_t
 *)
	`u¥v_mÆloc
(
√wMaxRows
*
cﬁumns
*4);

216 if(
√wVe˘‹s
==
NULL
) {

217 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

220 
	`u¥v_mem˝y
(
√wVe˘‹s
, 
pv
->
v
, 
rows
*
cﬁumns
*4);

221 
fú°Row
=
√wVe˘‹s
+(fú°Row-
pv
->
v
);

222 
œ°Row
=
√wVe˘‹s
+÷a°Row-
pv
->
v
);

223 
	`u¥v_‰ì
(
pv
->
v
);

224 
pv
->
v
=
√wVe˘‹s
;

225 
pv
->
maxRows
=
√wMaxRows
;

229 
cou¡
 = (
öt32_t
)((
pv
->
v
+
rows
*
cﬁumns
)-(
œ°Row
+columns));

230 if(
cou¡
>0) {

231 
	`u¥v_memmove
(

232 
œ°Row
+(1+
•lôFú°Row
+
•lôLa°Row
)*
cﬁumns
,

233 
œ°Row
+
cﬁumns
,

234 
cou¡
*4);

236 
pv
->
rows
Ùows+
•lôFú°Row
+
•lôLa°Row
;

239 if(
•lôFú°Row
) {

241 
cou¡
 = (
öt32_t
)((
œ°Row
-
fú°Row
)+
cﬁumns
);

242 
	`u¥v_memmove
(
fú°Row
+
cﬁumns
, fú°Row, 
cou¡
*4);

243 
œ°Row
+=
cﬁumns
;

246 
fú°Row
[1]=fú°Row[
cﬁumns
]=(
uöt32_t
)
°¨t
;

247 
fú°Row
+=
cﬁumns
;

251 if(
•lôLa°Row
) {

253 
	`u¥v_mem˝y
(
œ°Row
+
cﬁumns
,ÜastRow, columns*4);

256 
œ°Row
[1]ˆa°Row[
cﬁumns
]=(
uöt32_t
)
limô
;

261 
pv
->
¥evRow
=(
öt32_t
)((
œ°Row
-’v->
v
))/
cﬁumns
);

264 
fú°Row
+=
cﬁumn
;

265 
œ°Row
+=
cﬁumn
;

266 
mask
=~mask;

268 *
fú°Row
=(*fú°Row&
mask
)|
vÆue
;

269 if(
fú°Row
==
œ°Row
) {

272 
fú°Row
+=
cﬁumns
;

274 
	}
}

276 
U_CAPI
 
uöt32_t
 
U_EXPORT2


277 
	$upvec_gëVÆue
(c⁄° 
UPr›sVe˘‹s
 *
pv
, 
UCh¨32
 
c
, 
öt32_t
 
cﬁumn
) {

278 
uöt32_t
 *
row
;

279 
UPr›sVe˘‹s
 *
n˝v
;

281 if(
pv
->
isCom∑˘ed
 || 
c
<0 || c>
UPVEC_MAX_CP
 || 
cﬁumn
<0 || cﬁumn>=’v->
cﬁumns
-2)) {

284 
n˝v
=(
UPr›sVe˘‹s
 *)
pv
;

285 
row
=
	`_födRow
(
n˝v
, 
c
);

286  
row
[2+
cﬁumn
];

287 
	}
}

289 
U_CAPI
 
uöt32_t
 * 
U_EXPORT2


290 
	$upvec_gëRow
(c⁄° 
UPr›sVe˘‹s
 *
pv
, 
öt32_t
 
rowIndex
,

291 
UCh¨32
 *
pR™geSèπ
, UCh¨32 *
pR™geEnd
) {

292 
uöt32_t
 *
row
;

293 
öt32_t
 
cﬁumns
;

295 if(
pv
->
isCom∑˘ed
 || 
rowIndex
<0 ||ÑowIndex>ıv->
rows
) {

296  
NULL
;

299 
cﬁumns
=
pv
->columns;

300 
row
=
pv
->
v
+
rowIndex
*
cﬁumns
;

301 if(
pR™geSèπ
!=
NULL
) {

302 *
pR™geSèπ
=(
UCh¨32
)
row
[0];

304 if(
pR™geEnd
!=
NULL
) {

305 *
pR™geEnd
=(
UCh¨32
)
row
[1]-1;

307  
row
+2;

308 
	}
}

310 
öt32_t
 
U_CALLCONV


311 
	$upvec_com∑ªRows
(c⁄° *
c⁄ãxt
, c⁄° *
l
, c⁄° *
r
) {

312 c⁄° 
uöt32_t
 *
À·
=(c⁄° uöt32_à*)
l
, *
right
=(c⁄° uöt32_à*)
r
;

313 c⁄° 
UPr›sVe˘‹s
 *
pv
=(c⁄° UPr›sVe˘‹†*)
c⁄ãxt
;

314 
öt32_t
 
i
, 
cou¡
, 
cﬁumns
;

316 
cou¡
=
cﬁumns
=
pv
->columns;

319 
i
=2;

321 if(
À·
[
i
]!=
right
[i]) {

322  
À·
[
i
]<
right
[i] ? -1 : 1;

324 if(++
i
==
cﬁumns
) {

325 
i
=0;

327 } --
cou¡
>0);

330 
	}
}

332 
U_CAPI
 
U_EXPORT2


333 
	$upvec_com∑˘
(
UPr›sVe˘‹s
 *
pv
, 
UPVecCom∑˘H™dÀr
 *
h™dÀr
, *
c⁄ãxt
, 
UEº‹Code
 *
pEº‹Code
) {

334 
uöt32_t
 *
row
;

335 
öt32_t
 
i
, 
cﬁumns
, 
vÆueCﬁumns
, 
rows
, 
cou¡
;

336 
UCh¨32
 
°¨t
, 
limô
;

339 if(
	`U_FAILURE
(*
pEº‹Code
)) {

342 if(
h™dÀr
==
NULL
) {

343 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

346 if(
pv
->
isCom∑˘ed
) {

351 
pv
->
isCom∑˘ed
=
TRUE
;

353 
rows
=
pv
->rows;

354 
cﬁumns
=
pv
->columns;

355 
vÆueCﬁumns
=
cﬁumns
-2;

358 
	`u¥v_s‹tAºay
(
pv
->
v
, 
rows
, 
cﬁumns
*4,

359 
upvec_com∑ªRows
, 
pv
, 
FALSE
, 
pEº‹Code
);

360 if(
	`U_FAILURE
(*
pEº‹Code
)) {

369 
row
=
pv
->
v
;

370 
cou¡
=-
vÆueCﬁumns
;

371 
i
=0; i<
rows
; ++i) {

372 
°¨t
=(
UCh¨32
)
row
[0];

375 if(
cou¡
<0 || 0!=
	`u¥v_memcmp
(
row
+2,Ñow-
vÆueCﬁumns
, valueColumns*4)) {

376 
cou¡
+=
vÆueCﬁumns
;

379 if(
°¨t
>=
UPVEC_FIRST_SPECIAL_CP
) {

380 
	`h™dÀr
(
c⁄ãxt
, 
°¨t
, sèπ, 
cou¡
, 
row
+2, 
vÆueCﬁumns
, 
pEº‹Code
);

381 if(
	`U_FAILURE
(*
pEº‹Code
)) {

386 
row
+=
cﬁumns
;

390 
cou¡
+=
vÆueCﬁumns
;

393 
	`h™dÀr
(
c⁄ãxt
, 
UPVEC_START_REAL_VALUES_CP
, UPVEC_START_REAL_VALUES_CP,

394 
cou¡
, 
row
-
vÆueCﬁumns
, vÆueCﬁumns, 
pEº‹Code
);

395 if(
	`U_FAILURE
(*
pEº‹Code
)) {

406 
row
=
pv
->
v
;

407 
cou¡
=-
vÆueCﬁumns
;

408 
i
=0; i<
rows
; ++i) {

410 
°¨t
=(
UCh¨32
)
row
[0];

411 
limô
=(
UCh¨32
)
row
[1];

414 if(
cou¡
<0 || 0!=
	`u¥v_memcmp
(
row
+2, 
pv
->
v
+cou¡, 
vÆueCﬁumns
*4)) {

415 
cou¡
+=
vÆueCﬁumns
;

416 
	`u¥v_memmove
(
pv
->
v
+
cou¡
, 
row
+2, 
vÆueCﬁumns
*4);

419 if(
°¨t
<
UPVEC_FIRST_SPECIAL_CP
) {

420 
	`h™dÀr
(
c⁄ãxt
, 
°¨t
, 
limô
-1, 
cou¡
, 
pv
->
v
+cou¡, 
vÆueCﬁumns
, 
pEº‹Code
);

421 if(
	`U_FAILURE
(*
pEº‹Code
)) {

426 
row
+=
cﬁumns
;

430 
pv
->
rows
=
cou¡
/
vÆueCﬁumns
+1;

431 
	}
}

433 
U_CAPI
 c⁄° 
uöt32_t
 * 
U_EXPORT2


434 
	$upvec_gëAºay
(c⁄° 
UPr›sVe˘‹s
 *
pv
, 
öt32_t
 *
pRows
, i¡32_à*
pCﬁumns
) {

435 if(!
pv
->
isCom∑˘ed
) {

436  
NULL
;

438 if(
pRows
!=
NULL
) {

439 *
pRows
=
pv
->
rows
;

441 if(
pCﬁumns
!=
NULL
) {

442 *
pCﬁumns
=
pv
->
cﬁumns
-2;

444  
pv
->
v
;

445 
	}
}

447 
U_CAPI
 
uöt32_t
 * 
U_EXPORT2


448 
	$upvec_˛⁄eAºay
(c⁄° 
UPr›sVe˘‹s
 *
pv
,

449 
öt32_t
 *
pRows
, i¡32_à*
pCﬁumns
, 
UEº‹Code
 *
pEº‹Code
) {

450 
uöt32_t
 *
˛⁄edAºay
;

451 
öt32_t
 
byãLígth
;

453 if(
	`U_FAILURE
(*
pEº‹Code
)) {

454  
NULL
;

456 if(!
pv
->
isCom∑˘ed
) {

457 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

458  
NULL
;

460 
byãLígth
=
pv
->
rows
*’v->
cﬁumns
-2)*4;

461 
˛⁄edAºay
=(
uöt32_t
 *)
	`u¥v_mÆloc
(
byãLígth
);

462 if(
˛⁄edAºay
==
NULL
) {

463 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

464  
NULL
;

466 
	`u¥v_mem˝y
(
˛⁄edAºay
, 
pv
->
v
, 
byãLígth
);

467 if(
pRows
!=
NULL
) {

468 *
pRows
=
pv
->
rows
;

470 if(
pCﬁumns
!=
NULL
) {

471 *
pCﬁumns
=
pv
->
cﬁumns
-2;

473  
˛⁄edAºay
;

474 
	}
}

476 
U_CAPI
 
UTrõ2
 * 
U_EXPORT2


477 
	$upvec_com∑˘ToUTrõ2WôhRowIndexes
(
UPr›sVe˘‹s
 *
pv
, 
UEº‹Code
 *
pEº‹Code
) {

478 
UPVecToUTrõ2C⁄ãxt
 
toUTrõ2
={ 
NULL
 };

479 
	`upvec_com∑˘
(
pv
, 
upvec_com∑˘ToUTrõ2H™dÀr
, &
toUTrõ2
, 
pEº‹Code
);

480 
	`uåõ2_‰ìze
(
toUTrõ2
.
åõ
, 
UTRIE2_16_VALUE_BITS
, 
pEº‹Code
);

481 if(
	`U_FAILURE
(*
pEº‹Code
)) {

482 
	`uåõ2_˛o£
(
toUTrõ2
.
åõ
);

483 
toUTrõ2
.
åõ
=
NULL
;

485  
toUTrõ2
.
åõ
;

486 
	}
}

493 
U_CAPI
 
U_CALLCONV


494 
	$upvec_com∑˘ToUTrõ2H™dÀr
(*
c⁄ãxt
,

495 
UCh¨32
 
°¨t
, UCh¨32 
íd
,

496 
öt32_t
 
rowIndex
, 
uöt32_t
 *
row
, i¡32_à
cﬁumns
,

497 
UEº‹Code
 *
pEº‹Code
) {

498 
UPVecToUTrõ2C⁄ãxt
 *
toUTrõ2
=(UPVecToUTrõ2C⁄ãxà*)
c⁄ãxt
;

499 if(
°¨t
<
UPVEC_FIRST_SPECIAL_CP
) {

500 
	`uåõ2_£tR™ge32
(
toUTrõ2
->
åõ
, 
°¨t
, 
íd
, (
uöt32_t
)
rowIndex
, 
TRUE
, 
pEº‹Code
);

502 
°¨t
) {

503 
UPVEC_INITIAL_VALUE_CP
:

504 
toUTrõ2
->
öôülVÆue
=
rowIndex
;

506 
UPVEC_ERROR_VALUE_CP
:

507 
toUTrõ2
->
îr‹VÆue
=
rowIndex
;

509 
UPVEC_START_REAL_VALUES_CP
:

510 
toUTrõ2
->
maxVÆue
=
rowIndex
;

511 if(
rowIndex
>0xffff) {

513 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

515 
toUTrõ2
->
åõ
=
	`uåõ2_›í
—oUTrõ2->
öôülVÆue
,

516 
toUTrõ2
->
îr‹VÆue
, 
pEº‹Code
);

523 
	}
}

	@propsvec.h

19 #i‚de‡
__UPROPSVEC_H__


20 
	#__UPROPSVEC_H__


	)

22 
	~"unicode/uty≥s.h
"

23 
	~"uåõ.h
"

24 
	~"uåõ2.h
"

26 
U_CDECL_BEGIN


50 
	gUPr›sVe˘‹s
;

51 
UPr›sVe˘‹s
 
	tUPr›sVe˘‹s
;

57 
	#UPVEC_FIRST_SPECIAL_CP
 0x110000

	)

58 
	#UPVEC_INITIAL_VALUE_CP
 0x110000

	)

59 
	#UPVEC_ERROR_VALUE_CP
 0x110001

	)

60 
	#UPVEC_MAX_CP
 0x110001

	)

67 
	#UPVEC_START_REAL_VALUES_CP
 0x200000

	)

73 
U_CAPI
 
UPr›sVe˘‹s
 * 
U_EXPORT2


74 
upvec_›í
(
öt32_t
 
cﬁumns
, 
UEº‹Code
 *
pEº‹Code
);

76 
U_CAPI
 
U_EXPORT2


77 
upvec_˛o£
(
UPr›sVe˘‹s
 *
pv
);

85 
U_CAPI
 
U_EXPORT2


86 
upvec_£tVÆue
(
UPr›sVe˘‹s
 *
pv
,

87 
UCh¨32
 
°¨t
, UCh¨32 
íd
,

88 
öt32_t
 
cﬁumn
,

89 
uöt32_t
 
vÆue
, uöt32_à
mask
,

90 
UEº‹Code
 *
pEº‹Code
);

96 
U_CAPI
 
uöt32_t
 
U_EXPORT2


97 
upvec_gëVÆue
(c⁄° 
UPr›sVe˘‹s
 *
pv
, 
UCh¨32
 
c
, 
öt32_t
 
cﬁumn
);

104 
U_CAPI
 
uöt32_t
 * 
U_EXPORT2


105 
upvec_gëRow
(c⁄° 
UPr›sVe˘‹s
 *
pv
, 
öt32_t
 
rowIndex
,

106 
UCh¨32
 *
pR™geSèπ
, UCh¨32 *
pR™geEnd
);

126 
	tU_CALLCONV


127 
	tUPVecCom∑˘H™dÀr
(*
	tc⁄ãxt
,

128 
	tUCh¨32
 
	t°¨t
, UCh¨32 
	tíd
,

129 
	töt32_t
 
	trowIndex
, 
	tuöt32_t
 *
	trow
, i¡32_à
	tcﬁumns
,

130 
	tUEº‹Code
 *
	tpEº‹Code
);

132 
U_CAPI
 
U_EXPORT2


133 
upvec_com∑˘
(
UPr›sVe˘‹s
 *
pv
, 
UPVecCom∑˘H™dÀr
 *
h™dÀr
, *
c⁄ãxt
, 
UEº‹Code
 *
pEº‹Code
);

140 
U_CAPI
 c⁄° 
uöt32_t
 * 
U_EXPORT2


141 
upvec_gëAºay
(c⁄° 
UPr›sVe˘‹s
 *
pv
, 
öt32_t
 *
pRows
, i¡32_à*
pCﬁumns
);

148 
U_CAPI
 
uöt32_t
 * 
U_EXPORT2


149 
upvec_˛⁄eAºay
(c⁄° 
UPr›sVe˘‹s
 *
pv
,

150 
öt32_t
 *
pRows
, i¡32_à*
pCﬁumns
, 
UEº‹Code
 *
pEº‹Code
);

156 
U_CAPI
 
UTrõ2
 * 
U_EXPORT2


157 
upvec_com∑˘ToUTrõ2WôhRowIndexes
(
UPr›sVe˘‹s
 *
pv
, 
UEº‹Code
 *
pEº‹Code
);

159 
	sUPVecToUTrõ2C⁄ãxt
 {

160 
UTrõ2
 *
	måõ
;

161 
öt32_t
 
	möôülVÆue
;

162 
öt32_t
 
	mîr‹VÆue
;

163 
öt32_t
 
	mmaxVÆue
;

165 
UPVecToUTrõ2C⁄ãxt
 
	tUPVecToUTrõ2C⁄ãxt
;

168 
U_CAPI
 
U_CALLCONV


169 
upvec_com∑˘ToUTrõ2H™dÀr
(*
c⁄ãxt
,

170 
UCh¨32
 
°¨t
, UCh¨32 
íd
,

171 
öt32_t
 
rowIndex
, 
uöt32_t
 *
row
, i¡32_à
cﬁumns
,

172 
UEº‹Code
 *
pEº‹Code
);

174 
	gU_CDECL_END


	@punycode.c

45 
	~"unicode/uty≥s.h
"

47 #i‡!
UCONFIG_NO_IDNA


49 
	~"u°r_imp.h
"

50 
	~"c°rög.h
"

51 
	~"cmem‹y.h
"

52 
	~"punycode.h
"

53 
	~"unicode/u°rög.h
"

59 
	#BASE
 36

	)

60 
	#TMIN
 1

	)

61 
	#TMAX
 26

	)

62 
	#SKEW
 38

	)

63 
	#DAMP
 700

	)

64 
	#INITIAL_BIAS
 72

	)

65 
	#INITIAL_N
 0x80

	)

68 
	#_HYPHEN
 0X2d

	)

69 
	#DELIMITER
 
_HYPHEN


	)

71 
	#_ZERO_
 0X30

	)

72 
	#_NINE
 0x39

	)

74 
	#_SMALL_A
 0X61

	)

75 
	#_SMALL_Z
 0X7a

	)

77 
	#_CAPITAL_A
 0X41

	)

78 
	#_CAPITAL_Z
 0X5a

	)

80 
	#IS_BASIC
(
c
Ë((c)<0x80)

	)

81 
	#IS_BASIC_UPPERCASE
(
c
Ë(
_CAPITAL_A
<=(cË&& (c)<=
_CAPITAL_Z
)

	)

89 
U_INLINE
 

90 
	$digôToBasic
(
öt32_t
 
digô
, 
UBoﬁ
 
uµîˇ£
) {

93 if(
digô
<26) {

94 if(
uµîˇ£
) {

95  ()(
_CAPITAL_A
+
digô
);

97  ()(
_SMALL_A
+
digô
);

100  ()((
_ZERO_
-26)+
digô
);

102 
	}
}

109 c⁄° 
öt8_t


110 
	gbasicToDigô
[256]={

136 
U_INLINE
 

137 
	$asciiCa£M≠
(
b
, 
UBoﬁ
 
uµîˇ£
) {

138 if(
uµîˇ£
) {

139 if(
_SMALL_A
<=
b
 && b<=
_SMALL_Z
) {

140 
b
-=(
_SMALL_A
-
_CAPITAL_A
);

143 if(
_CAPITAL_A
<=
b
 && b<=
_CAPITAL_Z
) {

144 
b
+=(
_SMALL_A
-
_CAPITAL_A
);

147  
b
;

148 
	}
}

158 
öt32_t


159 
	$ad≠tBüs
(
öt32_t
 
dñè
, i¡32_à
Àngth
, 
UBoﬁ
 
fú°Time
) {

160 
öt32_t
 
cou¡
;

162 if(
fú°Time
) {

163 
dñè
/=
DAMP
;

165 
dñè
/=2;

168 
dñè
+=dñè/
Àngth
;

169 
cou¡
=0; 
dñè
>((
BASE
-
TMIN
)*
TMAX
)/2; count+=BASE) {

170 
dñè
/=(
BASE
-
TMIN
);

173  
cou¡
+(((
BASE
-
TMIN
+1)*
dñè
)/(dñè+
SKEW
));

174 
	}
}

176 
	#MAX_CP_COUNT
 200

	)

178 
U_CFUNC
 
öt32_t


179 
	$u_°rToPunycode
(c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

180 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

181 c⁄° 
UBoﬁ
 *
ˇ£Fœgs
,

182 
UEº‹Code
 *
pEº‹Code
) {

184 
öt32_t
 
˝Buf„r
[
MAX_CP_COUNT
];

185 
öt32_t
 
n
, 
dñè
, 
h™dÀdCPCou¡
, 
basicLígth
, 
de°Lígth
, 
büs
, 
j
, 
m
, 
q
, 
k
, 
t
, 
§cCPCou¡
;

186 
UCh¨
 
c
, 
c2
;

189 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

193 if(
§c
==
NULL
 || 
§cLígth
<-1 || (
de°
==NULL && 
de°C≠acôy
!=0)) {

194 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

202 
§cCPCou¡
=
de°Lígth
=0;

203 if(
§cLígth
==-1) {

205 
j
=0; ; ++j) {

206 if((
c
=
§c
[
j
])==0) {

209 if(
§cCPCou¡
==
MAX_CP_COUNT
) {

211 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

214 if(
	`IS_BASIC
(
c
)) {

215 
˝Buf„r
[
§cCPCou¡
++]=0;

216 if(
de°Lígth
<
de°C≠acôy
) {

217 
de°
[
de°Lígth
]=

218 
ˇ£Fœgs
!=
NULL
 ?

219 
	`asciiCa£M≠
(()
c
, 
ˇ£Fœgs
[
j
]) :

220 ()
c
;

222 ++
de°Lígth
;

224 
n
=(
ˇ£Fœgs
!=
NULL
 && ca£Fœgs[
j
])<<31L;

225 if(
	`UTF_IS_SINGLE
(
c
)) {

226 
n
|=
c
;

227 } if(
	`UTF_IS_LEAD
(
c
Ë&& 
	`UTF_IS_TRAIL
(
c2
=
§c
[
j
+1])) {

228 ++
j
;

229 
n
|=(
öt32_t
)
	`UTF16_GET_PAIR_VALUE
(
c
, 
c2
);

232 *
pEº‹Code
=
U_INVALID_CHAR_FOUND
;

235 
˝Buf„r
[
§cCPCou¡
++]=
n
;

240 
j
=0; j<
§cLígth
; ++j) {

241 if(
§cCPCou¡
==
MAX_CP_COUNT
) {

243 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

246 
c
=
§c
[
j
];

247 if(
	`IS_BASIC
(
c
)) {

248 
˝Buf„r
[
§cCPCou¡
++]=0;

249 if(
de°Lígth
<
de°C≠acôy
) {

250 
de°
[
de°Lígth
]=

251 
ˇ£Fœgs
!=
NULL
 ?

252 
	`asciiCa£M≠
(()
c
, 
ˇ£Fœgs
[
j
]) :

253 ()
c
;

255 ++
de°Lígth
;

257 
n
=(
ˇ£Fœgs
!=
NULL
 && ca£Fœgs[
j
])<<31L;

258 if(
	`UTF_IS_SINGLE
(
c
)) {

259 
n
|=
c
;

260 } if(
	`UTF_IS_LEAD
(
c
Ë&& (
j
+1)<
§cLígth
 && 
	`UTF_IS_TRAIL
(
c2
=
§c
[j+1])) {

261 ++
j
;

262 
n
|=(
öt32_t
)
	`UTF16_GET_PAIR_VALUE
(
c
, 
c2
);

265 *
pEº‹Code
=
U_INVALID_CHAR_FOUND
;

268 
˝Buf„r
[
§cCPCou¡
++]=
n
;

274 
basicLígth
=
de°Lígth
;

275 if(
basicLígth
>0) {

276 if(
de°Lígth
<
de°C≠acôy
) {

277 
de°
[
de°Lígth
]=
DELIMITER
;

279 ++
de°Lígth
;

289 
n
=
INITIAL_N
;

290 
dñè
=0;

291 
büs
=
INITIAL_BIAS
;

294 
h™dÀdCPCou¡
=
basicLígth
; h™dÀdCPCou¡<
§cCPCou¡
; ) {

299 
m
=0x7fffffff, 
j
=0; j<
§cCPCou¡
; ++j) {

300 
q
=
˝Buf„r
[
j
]&0x7fffffff;

301 if(
n
<=
q
 && q<
m
) {

302 
m
=
q
;

310 if(
m
-
n
>(0x7fffffff-
MAX_CP_COUNT
-
dñè
)/(
h™dÀdCPCou¡
+1)) {

311 *
pEº‹Code
=
U_INTERNAL_PROGRAM_ERROR
;

314 
dñè
+=(
m
-
n
)*(
h™dÀdCPCou¡
+1);

315 
n
=
m
;

318 
j
=0; j<
§cCPCou¡
; ++j) {

319 
q
=
˝Buf„r
[
j
]&0x7fffffff;

320 if(
q
<
n
) {

321 ++
dñè
;

322 } if(
q
==
n
) {

324 
q
=
dñè
, 
k
=
BASE
; ; k+=BASE) {

336 
t
=
k
-
büs
;

337 if(
t
<
TMIN
) {

338 
t
=
TMIN
;

339 } if(
k
>=(
büs
+
TMAX
)) {

340 
t
=
TMAX
;

343 if(
q
<
t
) {

347 if(
de°Lígth
<
de°C≠acôy
) {

348 
de°
[
de°Lígth
]=
	`digôToBasic
(
t
+(
q
-t)%(
BASE
-t), 0);

350 ++
de°Lígth
;

351 
q
=(q-
t
)/(
BASE
-t);

354 if(
de°Lígth
<
de°C≠acôy
) {

355 
de°
[
de°Lígth
]=
	`digôToBasic
(
q
, (
UBoﬁ
)(
˝Buf„r
[
j
]<0));

357 ++
de°Lígth
;

358 
büs
=
	`ad≠tBüs
(
dñè
, 
h™dÀdCPCou¡
+1, (
UBoﬁ
)(h™dÀdCPCou¡==
basicLígth
));

359 
dñè
=0;

360 ++
h™dÀdCPCou¡
;

364 ++
dñè
;

365 ++
n
;

368  
	`u_ãrmö©eUCh¨s
(
de°
, 
de°C≠acôy
, 
de°Lígth
, 
pEº‹Code
);

369 
	}
}

371 
U_CFUNC
 
öt32_t


372 
	$u_°rFromPunycode
(c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

373 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

374 
UBoﬁ
 *
ˇ£Fœgs
,

375 
UEº‹Code
 *
pEº‹Code
) {

376 
öt32_t
 
n
, 
de°Lígth
, 
i
, 
büs
, 
basicLígth
, 
j
, 
ö
, 
ﬁdi
, 
w
, 
k
, 
digô
, 
t
,

377 
de°CPCou¡
, 
fú°SuµÀmíèryIndex
, 
˝Lígth
;

378 
UCh¨
 
b
;

381 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

385 if(
§c
==
NULL
 || 
§cLígth
<-1 || (
de°
==NULL && 
de°C≠acôy
!=0)) {

386 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

390 if(
§cLígth
==-1) {

391 
§cLígth
=
	`u_°æí
(
§c
);

402 
j
=
§cLígth
; j>0;) {

403 if(
§c
[--
j
]==
DELIMITER
) {

407 
de°Lígth
=
basicLígth
=
de°CPCou¡
=
j
;

409 
j
>0) {

410 
b
=
§c
[--
j
];

411 if(!
	`IS_BASIC
(
b
)) {

412 *
pEº‹Code
=
U_INVALID_CHAR_FOUND
;

416 if(
j
<
de°C≠acôy
) {

417 
de°
[
j
]=(
UCh¨
)
b
;

419 if(
ˇ£Fœgs
!=
NULL
) {

420 
ˇ£Fœgs
[
j
]=
	`IS_BASIC_UPPERCASE
(
b
);

426 
n
=
INITIAL_N
;

427 
i
=0;

428 
büs
=
INITIAL_BIAS
;

429 
fú°SuµÀmíèryIndex
=1000000000;

436 
ö
=
basicLígth
>0 ? basicLígth+1 : 0; in<
§cLígth
; ) {

446 
ﬁdi
=
i
, 
w
=1, 
k
=
BASE
; ; k+=BASE) {

447 if(
ö
>=
§cLígth
) {

448 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

452 
digô
=
basicToDigô
[(
uöt8_t
)
§c
[
ö
++]];

453 if(
digô
<0) {

454 *
pEº‹Code
=
U_INVALID_CHAR_FOUND
;

457 if(
digô
>(0x7fffffff-
i
)/
w
) {

459 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

463 
i
+=
digô
*
w
;

472 
t
=
k
-
büs
;

473 if(
t
<
TMIN
) {

474 
t
=
TMIN
;

475 } if(
k
>=(
büs
+
TMAX
)) {

476 
t
=
TMAX
;

478 if(
digô
<
t
) {

482 if(
w
>0x7fffffff/(
BASE
-
t
)) {

484 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

487 
w
*=
BASE
-
t
;

495 ++
de°CPCou¡
;

496 
büs
=
	`ad≠tBüs
(
i
-
ﬁdi
, 
de°CPCou¡
, (
UBoﬁ
)(oldi==0));

502 if(
i
/
de°CPCou¡
>(0x7fffffff-
n
)) {

504 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

508 
n
+=
i
/
de°CPCou¡
;

509 
i
%=
de°CPCou¡
;

513 if(
n
>0x10fff‡|| 
	`UTF_IS_SURROGATE
(n)) {

515 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

520 
˝Lígth
=
	`UTF_CHAR_LENGTH
(
n
);

521 if((
de°Lígth
+
˝Lígth
)<=
de°C≠acôy
) {

522 
öt32_t
 
codeUnôIndex
;

534 if(
i
<=
fú°SuµÀmíèryIndex
) {

535 
codeUnôIndex
=
i
;

536 if(
˝Lígth
>1) {

537 
fú°SuµÀmíèryIndex
=
codeUnôIndex
;

539 ++
fú°SuµÀmíèryIndex
;

542 
codeUnôIndex
=
fú°SuµÀmíèryIndex
;

543 
	`UTF_FWD_N
(
de°
, 
codeUnôIndex
, 
de°Lígth
, 
i
-codeUnitIndex);

547 if(
codeUnôIndex
<
de°Lígth
) {

548 
	`u¥v_memmove
(
de°
+
codeUnôIndex
+
˝Lígth
,

549 
de°
+
codeUnôIndex
,

550 (
de°Lígth
-
codeUnôIndex
)*
U_SIZEOF_UCHAR
);

551 if(
ˇ£Fœgs
!=
NULL
) {

552 
	`u¥v_memmove
(
ˇ£Fœgs
+
codeUnôIndex
+
˝Lígth
,

553 
ˇ£Fœgs
+
codeUnôIndex
,

554 
de°Lígth
-
codeUnôIndex
);

557 if(
˝Lígth
==1) {

559 
de°
[
codeUnôIndex
]=(
UCh¨
)
n
;

562 
de°
[
codeUnôIndex
]=
	`UTF16_LEAD
(
n
);

563 
de°
[
codeUnôIndex
+1]=
	`UTF16_TRAIL
(
n
);

565 if(
ˇ£Fœgs
!=
NULL
) {

567 
ˇ£Fœgs
[
codeUnôIndex
]=
	`IS_BASIC_UPPERCASE
(
§c
[
ö
-1]);

568 if(
˝Lígth
==2) {

569 
ˇ£Fœgs
[
codeUnôIndex
+1]=
FALSE
;

573 
de°Lígth
+=
˝Lígth
;

574 ++
i
;

577  
	`u_ãrmö©eUCh¨s
(
de°
, 
de°C≠acôy
, 
de°Lígth
, 
pEº‹Code
);

578 
	}
}

	@punycode.h

25 #i‚de‡
__PUNYCODE_H__


26 
	#__PUNYCODE_H__


	)

28 
	~"unicode/uty≥s.h
"

30 #i‡!
UCONFIG_NO_IDNA


66 
U_CFUNC
 
öt32_t


67 
u_°rToPunycode
(c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

68 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

69 c⁄° 
UBoﬁ
 *
ˇ£Fœgs
,

70 
UEº‹Code
 *
pEº‹Code
);

101 
U_CFUNC
 
öt32_t


102 
u_°rFromPunycode
(c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

103 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

104 
UBoﬁ
 *
ˇ£Fœgs
,

105 
UEº‹Code
 *
pEº‹Code
);

	@putil.c

42 #i‡!
deföed
(
_XOPEN_SOURCE
)

43 #i‡
__STDC_VERSION__
 >= 199901L

45 
	#_XOPEN_SOURCE
 600

	)

47 
	#_XOPEN_SOURCE
 4

	)

55 #i‡!
deföed
(
_XOPEN_SOURCE_EXTENDED
Ë&& ((!deföed(
__STDC_VERSION__
Ë|| __STDC_VERSION__ >199901LË|| deföed(
__xlc__
))

56 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

60 
	~"unicode/uty≥s.h
"

61 
	~"unicode/putû.h
"

62 
	~"unicode/u°rög.h
"

63 
	~"putûimp.h
"

64 
	~"uas£π.h
"

65 
	~"umuãx.h
"

66 
	~"cmem‹y.h
"

67 
	~"c°rög.h
"

68 
	~"locm≠.h
"

69 
	~"u˛n_cmn.h
"

72 
	~<°dio.h
>

73 
	~<°dlib.h
>

74 
	~<°rög.h
>

75 
	~<m©h.h
>

76 
	~<loˇÀ.h
>

77 
	~<Êﬂt.h
>

78 
	~<time.h
>

81 #ifde‡
U_WINDOWS


82 
	#WIN32_LEAN_AND_MEAN


	)

83 
	#VC_EXTRALEAN


	)

84 
	#NOUSER


	)

85 
	#NOSERVICE


	)

86 
	#NOIME


	)

87 
	#NOMCX


	)

88 
	~<wödows.h
>

89 
	~"wötz.h
"

90 #ñi‡
deföed
(
U_CYGWIN
Ë&& deföed(
__STRICT_ANSI__
)

92 #unde‡
__STRICT_ANSI__


93 #ñi‡
deföed
(
OS400
)

94 
	~<Êﬂt.h
>

95 
	~<qu£c.h
>

96 
	~<qu§jobi.h
>

97 
	~<qlõ±.h
>

98 
	~<mih/ã°±r.h
>

99 #ñi‡
deföed
(
XP_MAC
)

100 
	~<Fûes.h
>

101 
	~<I¡lResour˚s.h
>

102 
	~<S¸ùt.h
>

103 
	~<Fﬁdîs.h
>

104 
	~<MacTy≥s.h
>

105 
	~<TextUtûs.h
>

106 
	#ICU_NO_USER_DATA_OVERRIDE
 1

	)

107 #ñi‡
deföed
(
OS390
)

108 
	~"unicode/u˙v.h
"

109 #ñi‡
deföed
(
U_DARWIN
Ë|| deföed(
U_LINUX
Ë|| deföed(
U_BSD
)

110 
	~<limôs.h
>

111 
	~<uni°d.h
>

112 #ñi‡
deföed
(
U_QNX
)

113 
	~<sys/√uåöo.h
>

114 #ñi‡
deföed
(
U_SOLARIS
)

115 #i‚de‡
_XPG4_2


116 
	#_XPG4_2


	)

121 #i‡
deföed
(
U_DARWIN
)

122 
	~<T¨gëC⁄dôi⁄Æs.h
>

125 #i‚de‡
U_WINDOWS


126 
	~<sys/time.h
>

135 #i‡
U_HAVE_NL_LANGINFO_CODESET


136 
	~<œngöfo.h
>

143 #i‡
deföed
(
HAVE_CONFIG_H
)

144 
	~"icucfg.h
"

148 
	#DATA_TYPE
 "d©"

	)

151 c⁄° 
	gc›yright
[] = 
U_COPYRIGHT_STRING
;

156 
	#SIGN
 0x80000000U

	)

160 
öt64_t
 
	mi64
;

161 
	md64
;

162 } 
	tBôP©ã∫C⁄vîsi⁄
;

163 c⁄° 
BôP©ã∫C⁄vîsi⁄
 
	ggN™
 = { (
öt64_t
Ë
INT64_C
(0x7FF8000000000000) };

164 c⁄° 
BôP©ã∫C⁄vîsi⁄
 
	ggInf
 = { (
öt64_t
Ë
INT64_C
(0x7FF0000000000000) };

174 #i‡
deföed
(
U_WINDOWS
Ë|| deföed(
XP_MAC
Ë|| deföed(
OS400
)

175 #unde‡
U_POSIX_LOCALE


177 
	#U_POSIX_LOCALE
 1

	)

184 #i‡!
IEEE_754


186 
	$u_t›NByãsOfDoubÀ
(* 
d
, 
n
)

188 #i‡
U_IS_BIG_ENDIAN


189  (*)
d
;

191  (*)(
d
 + 1Ë- 
n
;

193 
	}
}

196 
	$u_bŸtomNByãsOfDoubÀ
(* 
d
, 
n
)

198 #i‡
U_IS_BIG_ENDIAN


199  (*)(
d
 + 1Ë- 
n
;

201  (*)
d
;

203 
	}
}

206 #i‡
IEEE_754


207 
UBoﬁ


208 
	$u_signBô
(
d
) {

209 
uöt8_t
 
hiByã
;

210 #i‡
U_IS_BIG_ENDIAN


211 
hiByã
 = *(
uöt8_t
 *)&
d
;

213 
hiByã
 = *(((
uöt8_t
 *)&
d
) + () - 1);

215  (
hiByã
 & 0x80) != 0;

216 
	}
}

221 #i‡
deföed
 (
U_DEBUG_FAKETIME
)

225 
UD©e
 
	gÁkeClock_t0
 = 0;

226 
UD©e
 
	gÁkeClock_dt
 = 0;

227 
UBoﬁ
 
	gÁkeClock_£t
 = 
FALSE
;

228 
UMTX
 
	gÁkeClockMuãx
 = 
NULL
;

230 
UD©e
 
	$gëUTCtime_ªÆ
() {

231 
timevÆ
 
posixTime
;

232 
	`gëtimeofday
(&
posixTime
, 
NULL
);

233  (
UD©e
)(((
öt64_t
)
posixTime
.
tv_£c
 * 
U_MILLIS_PER_SECOND
Ë+ (posixTime.
tv_u£c
/1000));

234 
	}
}

236 
UD©e
 
	$gëUTCtime_Áke
() {

237 
	`umtx_lock
(&
ÁkeClockMuãx
);

238 if(!
ÁkeClock_£t
) {

239 
UD©e
 
ªÆ
 = 
	`gëUTCtime_ªÆ
();

240 c⁄° *
Áke_°¨t
 = 
	`gëív
("U_FAKETIME_START");

241 if((
Áke_°¨t
!=
NULL
) && (fake_start[0]!=0)) {

242 
	`ssˇnf
(
Áke_°¨t
,"%lf",&
ÁkeClock_t0
);

243 
ÁkeClock_dt
 = 
ÁkeClock_t0
 - 
ªÆ
;

244 
	`Ârötf
(
°dîr
,"U_DEBUG_FAKETIME was setát compileÅime, soÅhe ICU clock will startátáÖreset value\n"

246 
ÁkeClock_t0
, 
Áke_°¨t
, 
ÁkeClock_dt
, 
ªÆ
);

248 
ÁkeClock_dt
 = 0;

249 
	`Ârötf
(
°dîr
,"U_DEBUG_FAKETIME was setát compileÅime, but U_FAKETIME_START wasÇot set.\n"

252 
ÁkeClock_£t
 = 
TRUE
;

254 
	`umtx_u∆ock
(&
ÁkeClockMuãx
);

256  
	`gëUTCtime_ªÆ
(Ë+ 
ÁkeClock_dt
;

257 
	}
}

260 #i‡
deföed
(
U_WINDOWS
)

262 
öt64_t
 
	möt64
;

263 
FILETIME
 
	mfûeTime
;

264 } 
	tFûeTimeC⁄vîsi⁄
;

267 
	#EPOCH_BIAS
 
	`INT64_C
(116444736000000000)

	)

268 
	#HECTONANOSECOND_PER_MILLISECOND
 10000

	)

279 
U_CAPI
 
UD©e
 
U_EXPORT2


280 
	$u¥v_gëUTCtime
()

282 #i‡
	`deföed
(
U_DEBUG_FAKETIME
)

283  
	`gëUTCtime_Áke
();

285  
	`u¥v_gëRawUTCtime
();

287 
	}
}

290 
U_CAPI
 
UD©e
 
U_EXPORT2


291 
	$u¥v_gëRawUTCtime
()

293 #i‡
	`deföed
(
XP_MAC
)

294 
time_t
 
t
, 
t1
, 
t2
;

295 
tm
 
tmªc
;

297 
	`u¥v_mem£t
–&
tmªc
, 0, (tmrec) );

298 
tmªc
.
tm_yór
 = 70;

299 
tmªc
.
tm_m⁄
 = 0;

300 
tmªc
.
tm_mday
 = 1;

301 
t1
 = 
	`mktime
(&
tmªc
);

303 
	`time
(&
t
);

304 
	`u¥v_mem˝y
–&
tmªc
, 
	`gmtime
(&
t
), (tmrec) );

305 
t2
 = 
	`mktime
(&
tmªc
);

306  (
UD©e
)(
t2
 - 
t1
Ë* 
U_MILLIS_PER_SECOND
;

307 #ñi‡
	`deföed
(
U_WINDOWS
)

309 
FûeTimeC⁄vîsi⁄
 
wöTime
;

310 
	`GëSy°emTimeAsFûeTime
(&
wöTime
.
fûeTime
);

311  (
UD©e
)((
wöTime
.
öt64
 - 
EPOCH_BIAS
Ë/ 
HECTONANOSECOND_PER_MILLISECOND
);

314 #i‡
	`deföed
(
HAVE_GETTIMEOFDAY
)

315 
timevÆ
 
posixTime
;

316 
	`gëtimeofday
(&
posixTime
, 
NULL
);

317  (
UD©e
)(((
öt64_t
)
posixTime
.
tv_£c
 * 
U_MILLIS_PER_SECOND
Ë+ (posixTime.
tv_u£c
/1000));

319 
time_t
 
ïochtime
;

320 
	`time
(&
ïochtime
);

321  (
UD©e
)
ïochtime
 * 
U_MILLIS_PER_SECOND
;

325 
	}
}

337 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


338 
	$u¥v_isNaN
(
numbî
)

340 #i‡
IEEE_754


341 
BôP©ã∫C⁄vîsi⁄
 
c⁄vîãdNumbî
;

342 
c⁄vîãdNumbî
.
d64
 = 
numbî
;

344  (
UBoﬁ
)((
c⁄vîãdNumbî
.
i64
 & 
U_INT64_MAX
Ë> 
gInf
.i64);

346 #ñi‡
	`deföed
(
OS390
)

347 
uöt32_t
 
highBôs
 = *(uöt32_t*)
	`u_t›NByãsOfDoubÀ
(&
numbî
,

348 (
uöt32_t
));

349 
uöt32_t
 
lowBôs
 = *(uöt32_t*)
	`u_bŸtomNByãsOfDoubÀ
(&
numbî
,

350 (
uöt32_t
));

352  ((
highBôs
 & 0x7F080000L) == 0x7F080000L) &&

353 (
lowBôs
 == 0x00000000L);

359  
numbî
 !=Çumber;

361 
	}
}

363 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


364 
	$u¥v_isInföôe
(
numbî
)

366 #i‡
IEEE_754


367 
BôP©ã∫C⁄vîsi⁄
 
c⁄vîãdNumbî
;

368 
c⁄vîãdNumbî
.
d64
 = 
numbî
;

370  (
UBoﬁ
)((
c⁄vîãdNumbî
.
i64
 & 
U_INT64_MAX
Ë=
gInf
.i64);

371 #ñi‡
	`deföed
(
OS390
)

372 
uöt32_t
 
highBôs
 = *(uöt32_t*)
	`u_t›NByãsOfDoubÀ
(&
numbî
,

373 (
uöt32_t
));

374 
uöt32_t
 
lowBôs
 = *(uöt32_t*)
	`u_bŸtomNByãsOfDoubÀ
(&
numbî
,

375 (
uöt32_t
));

377  ((
highBôs
 & ~
SIGN
Ë=0x70FF0000LË&& (
lowBôs
 == 0x00000000L);

383  
numbî
 == (2.0 *Çumber);

385 
	}
}

387 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


388 
	$u¥v_isPosôiveInföôy
(
numbî
)

390 #i‡
IEEE_754
 || 
	`deföed
(
OS390
)

391  (
UBoﬁ
)(
numbî
 > 0 && 
	`u¥v_isInföôe
(number));

393  
	`u¥v_isInföôe
(
numbî
);

395 
	}
}

397 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


398 
	$u¥v_isNeg©iveInföôy
(
numbî
)

400 #i‡
IEEE_754
 || 
	`deföed
(
OS390
)

401  (
UBoﬁ
)(
numbî
 < 0 && 
	`u¥v_isInföôe
(number));

404 
uöt32_t
 
highBôs
 = *(uöt32_t*)
	`u_t›NByãsOfDoubÀ
(&
numbî
,

405 (
uöt32_t
));

406 ((
highBôs
 & 
SIGN
Ë&& 
	`u¥v_isInföôe
(
numbî
));

409 
	}
}

411 
U_CAPI
 
U_EXPORT2


412 
	$u¥v_gëNaN
()

414 #i‡
IEEE_754
 || 
	`deföed
(
OS390
)

415  
gN™
.
d64
;

422 
	}
}

424 
U_CAPI
 
U_EXPORT2


425 
	$u¥v_gëInföôy
()

427 #i‡
IEEE_754
 || 
	`deföed
(
OS390
)

428  
gInf
.
d64
;

435 
	}
}

437 
U_CAPI
 
U_EXPORT2


438 
	$u¥v_Êo‹
(
x
)

440  
	`Êo‹
(
x
);

441 
	}
}

443 
U_CAPI
 
U_EXPORT2


444 
	$u¥v_˚û
(
x
)

446  
	`˚û
(
x
);

447 
	}
}

449 
U_CAPI
 
U_EXPORT2


450 
	$u¥v_round
(
x
)

452  
	`u¥v_Êo‹
(
x
 + 0.5);

453 
	}
}

455 
U_CAPI
 
U_EXPORT2


456 
	$u¥v_Ábs
(
x
)

458  
	`Ábs
(
x
);

459 
	}
}

461 
U_CAPI
 
U_EXPORT2


462 
	$u¥v_modf
(
x
, * 
y
)

464  
	`modf
(
x
, 
y
);

465 
	}
}

467 
U_CAPI
 
U_EXPORT2


468 
	$u¥v_fmod
(
x
, 
y
)

470  
	`fmod
(
x
, 
y
);

471 
	}
}

473 
U_CAPI
 
U_EXPORT2


474 
	$u¥v_pow
(
x
, 
y
)

477  
	`pow
(
x
, 
y
);

478 
	}
}

480 
U_CAPI
 
U_EXPORT2


481 
	$u¥v_pow10
(
öt32_t
 
x
)

483  
	`pow
(10.0, ()
x
);

484 
	}
}

486 
U_CAPI
 
U_EXPORT2


487 
	$u¥v_fmax
(
x
, 
y
)

489 #i‡
IEEE_754


491 if(
	`u¥v_isNaN
(
x
Ë|| u¥v_isNaN(
y
))

492  
	`u¥v_gëNaN
();

495 if(
x
 =0.0 && 
y
 =0.0 && 
	`u_signBô
(x))

496  
y
;

501  (
x
 > 
y
 ? x : y);

502 
	}
}

504 
U_CAPI
 
U_EXPORT2


505 
	$u¥v_fmö
(
x
, 
y
)

507 #i‡
IEEE_754


509 if(
	`u¥v_isNaN
(
x
Ë|| u¥v_isNaN(
y
))

510  
	`u¥v_gëNaN
();

513 if(
x
 =0.0 && 
y
 =0.0 && 
	`u_signBô
(y))

514  
y
;

519  (
x
 > 
y
 ? y : x);

520 
	}
}

529 
U_CAPI
 
U_EXPORT2


530 
	$u¥v_åunc
(
d
)

532 #i‡
IEEE_754


534 if(
	`u¥v_isNaN
(
d
))

535  
	`u¥v_gëNaN
();

536 if(
	`u¥v_isInföôe
(
d
))

537  
	`u¥v_gëInföôy
();

539 if(
	`u_signBô
(
d
))

540  
	`˚û
(
d
);

542  
	`Êo‹
(
d
);

545  
d
 >0 ? 
	`Êo‹
(dË: 
	`˚û
(d);

548 
	}
}

554 
U_CAPI
 
U_EXPORT2


555 
	$u¥v_maxM™tisß
()

557  
	`pow
(2.0, 
DBL_MANT_DIG
 + 1.0) - 1.0;

558 
	}
}

560 
U_CAPI
 
U_EXPORT2


561 
	$u¥v_log
(
d
)

563  
	`log
(
d
);

564 
	}
}

566 
U_CAPI
 * 
U_EXPORT2


567 
	$u¥v_maximumPå
(* 
ba£
)

569 #i‡
	`deföed
(
OS400
)

587 i‡((
ba£
 !
NULL
Ë&& (
	`_TESTPTR
(ba£, 
_C_TERASPACE_CHECK
))) {

589  ((*)(((*)
ba£
)-((
uöt32_t
)(base))+((uint32_t)0x7fffefff)));

592  ((*)(((*)
ba£
)-((
uöt32_t
)(base))+((uint32_t)0xffefff)));

595  
	`U_MAX_PTR
(
ba£
);

597 
	}
}

608 
U_CAPI
 
U_EXPORT2


609 
	$u¥v_tz£t
()

611 #ifde‡
U_TZSET


612 
	`U_TZSET
();

616 
	}
}

618 
U_CAPI
 
öt32_t
 
U_EXPORT2


619 
	$u¥v_timez⁄e
()

621 #ifde‡
U_TIMEZONE


622  
U_TIMEZONE
;

624 
time_t
 
t
, 
t1
, 
t2
;

625 
tm
 
tmªc
;

626 
UBoﬁ
 
d°_checked
;

627 
öt32_t
 
tdiff
 = 0;

629 
	`time
(&
t
);

630 
	`u¥v_mem˝y
–&
tmªc
, 
	`loˇ…ime
(&
t
), (tmrec) );

631 
d°_checked
 = (
tmªc
.
tm_isd°
 != 0);

632 
t1
 = 
	`mktime
(&
tmªc
);

633 
	`u¥v_mem˝y
–&
tmªc
, 
	`gmtime
(&
t
), (tmrec) );

634 
t2
 = 
	`mktime
(&
tmªc
);

635 
tdiff
 = 
t2
 - 
t1
;

638 i‡(
d°_checked
)

639 
tdiff
 += 3600;

640  
tdiff
;

642 
	}
}

647 #i‡
deföed
(
U_TZNAME
Ë&& (deföed(
U_IRIX
Ë|| deföed(
U_DARWIN
Ë|| deföed(
U_CYGWIN
))

649 
U_IMPORT
 *
U_TZNAME
[];

652 #i‡!
UCONFIG_NO_FILE_IO
 && (
deföed
(
U_DARWIN
Ë|| deföed(
U_LINUX
Ë|| deföed(
U_BSD
))

654 
	#CHECK_LOCALTIME_LINK
 1

	)

655 #i‡
deföed
(
U_DARWIN
)

656 
	~<tzfûe.h
>

657 
	#TZZONEINFO
 (
TZDIR
 "/")

	)

659 
	#TZDEFAULT
 "/ëc/loˇ…ime"

	)

660 
	#TZZONEINFO
 "/u§/sh¨e/z⁄eöfo/"

	)

662 #i‡
U_HAVE_DIRENT_H


663 
	#TZFILE_SKIP
 "posixruÀs"

	)

667 
	#TZFILE_SKIP2
 "loˇ…ime"

	)

668 
	#SEARCH_TZFILE


	)

669 
	~<dúít.h
>

671 
	ggTimeZ⁄eBuf„r
[
PATH_MAX
];

672 *
	ggTimeZ⁄eBuf„rPå
 = 
NULL
;

675 #i‚de‡
U_WINDOWS


676 
	#isN⁄Digô
(
ch
Ë(ch < '0' || '9' < ch)

	)

677 
UBoﬁ
 
	$isVÆidOls⁄ID
(c⁄° *
id
) {

678 
öt32_t
 
idx
 = 0;

682 
id
[
idx
] && 
	`isN⁄Digô
(id[idx]) && id[idx] != ',') {

683 
idx
++;

690  (
UBoﬁ
)(
id
[
idx
] == 0

691 || 
	`u¥v_°rcmp
(
id
, "PST8PDT") == 0

692 || 
	`u¥v_°rcmp
(
id
, "MST7MDT") == 0

693 || 
	`u¥v_°rcmp
(
id
, "CST6CDT") == 0

694 || 
	`u¥v_°rcmp
(
id
, "EST5EDT") == 0);

695 
	}
}

709 
	$skùZ⁄eIDPªfix
(c⁄° ** 
id
) {

710 i‡(
	`u¥v_°∫cmp
(*
id
, "posix/", 6) == 0

711 || 
	`u¥v_°∫cmp
(*
id
, "right/", 6) == 0)

713 *
id
 += 6;

715 
	}
}

718 #i‡
deföed
(
U_TZNAME
Ë&& !deföed(
U_WINDOWS
)

720 
	#CONVERT_HOURS_TO_SECONDS
(
off£t
Ë(
öt32_t
)(off£t*3600)

	)

721 
	sOff£tZ⁄eM≠pög
 {

722 
öt32_t
 
	moff£tSec⁄ds
;

723 
öt32_t
 
	mdaylightTy≥
;

724 c⁄° *
	m°dID
;

725 c⁄° *
	md°ID
;

726 c⁄° *
	mﬁs⁄ID
;

727 } 
	tOff£tZ⁄eM≠pög
;

738 c⁄° 
Off£tZ⁄eM≠pög
 
	gOFFSET_ZONE_MAPPINGS
[] = {

802 c⁄° * 
	$ªm≠Sh‹tTimeZ⁄e
(c⁄° *
°dID
, c⁄° *
d°ID
, 
öt32_t
 
daylightTy≥
, i¡32_à
off£t
)

804 
öt32_t
 
idx
;

805 #ifde‡
DEBUG_TZNAME


806 
	`Ârötf
(
°dîr
, "TZ=%†°d=%†d°=%†daylight=%d off£t=%d\n", 
	`gëív
("TZ"), 
°dID
, 
d°ID
, 
daylightTy≥
, 
off£t
);

808 
idx
 = 0; idx < (
öt32_t
)(
OFFSET_ZONE_MAPPINGS
)/(OFFSET_ZONE_MAPPINGS[0]); idx++)

810 i‡(
off£t
 =
OFFSET_ZONE_MAPPINGS
[
idx
].
off£tSec⁄ds


811 && 
daylightTy≥
 =
OFFSET_ZONE_MAPPINGS
[
idx
].daylightType

812 && 
	`°rcmp
(
OFFSET_ZONE_MAPPINGS
[
idx
].
°dID
, stdID) == 0

813 && 
	`°rcmp
(
OFFSET_ZONE_MAPPINGS
[
idx
].
d°ID
, dstID) == 0)

815  
OFFSET_ZONE_MAPPINGS
[
idx
].
ﬁs⁄ID
;

818  
NULL
;

819 
	}
}

822 #ifde‡
SEARCH_TZFILE


823 
	#MAX_PATH_SIZE
 
PATH_MAX


	)

824 
	#MAX_READ_SIZE
 512

	)

826 
	sDeÁu…TZInfo
 {

827 * 
	mdeÁu…TZBuf„r
;

828 
öt64_t
 
	mdeÁu…TZFûeSize
;

829 
FILE
* 
	mdeÁu…TZFûePå
;

830 
UBoﬁ
 
	mdeÁu…TZ°©us
;

831 
öt32_t
 
	mdeÁu…TZPosôi⁄
;

832 } 
	tDeÁu…TZInfo
;

838 
UBoﬁ
 
	$com∑ªBö¨yFûes
(c⁄° * 
deÁu…TZFûeName
, c⁄° * 
TZFûeName
, 
DeÁu…TZInfo
* 
tzInfo
) {

839 
FILE
* 
fûe
;

840 
öt64_t
 
sizeFûe
;

841 
öt64_t
 
sizeFûeLe·
;

842 
öt32_t
 
sizeFûeRód
;

843 
öt32_t
 
sizeFûeToRód
;

844 
buf„rFûe
[
MAX_READ_SIZE
];

845 
UBoﬁ
 
ªsu…
 = 
TRUE
;

847 i‡(
tzInfo
->
deÁu…TZFûePå
 =
NULL
) {

848 
tzInfo
->
deÁu…TZFûePå
 = 
	`f›í
(
deÁu…TZFûeName
, "r");

850 
fûe
 = 
	`f›í
(
TZFûeName
, "r");

852 
tzInfo
->
deÁu…TZPosôi⁄
 = 0;

854 i‡(
fûe
 !
NULL
 && 
tzInfo
->
deÁu…TZFûePå
 != NULL) {

856 i‡(
tzInfo
->
deÁu…TZFûeSize
 == 0) {

857 
	`f£ek
(
tzInfo
->
deÁu…TZFûePå
, 0, 
SEEK_END
);

858 
tzInfo
->
deÁu…TZFûeSize
 = 
	`·ñl
—zInfo->
deÁu…TZFûePå
);

860 
	`f£ek
(
fûe
, 0, 
SEEK_END
);

861 
sizeFûe
 = 
	`·ñl
(
fûe
);

862 
sizeFûeLe·
 = 
sizeFûe
;

864 i‡(
sizeFûe
 !
tzInfo
->
deÁu…TZFûeSize
) {

865 
ªsu…
 = 
FALSE
;

870 i‡(
tzInfo
->
deÁu…TZBuf„r
 =
NULL
) {

871 
	`ªwöd
(
tzInfo
->
deÁu…TZFûePå
);

872 
tzInfo
->
deÁu…TZBuf„r
 = (*)
	`u¥v_mÆloc
((Ë*ÅzInfo->
deÁu…TZFûeSize
);

873 
	`‰ód
(
tzInfo
->
deÁu…TZBuf„r
, 1,ÅzInfo->
deÁu…TZFûeSize
,ÅzInfo->
deÁu…TZFûePå
);

875 
	`ªwöd
(
fûe
);

876 
sizeFûeLe·
 > 0) {

877 
	`u¥v_mem£t
(
buf„rFûe
, 0, 
MAX_READ_SIZE
);

878 
sizeFûeToRód
 = 
sizeFûeLe·
 < 
MAX_READ_SIZE
 ? sizeFileLeft : MAX_READ_SIZE;

880 
sizeFûeRód
 = 
	`‰ód
(
buf„rFûe
, 1, 
sizeFûeToRód
, 
fûe
);

881 i‡(
	`memcmp
(
tzInfo
->
deÁu…TZBuf„r
 +ÅzInfo->
deÁu…TZPosôi⁄
, 
buf„rFûe
, 
sizeFûeRód
) != 0) {

882 
ªsu…
 = 
FALSE
;

885 
sizeFûeLe·
 -
sizeFûeRód
;

886 
tzInfo
->
deÁu…TZPosôi⁄
 +
sizeFûeRód
;

890 
ªsu…
 = 
FALSE
;

893 i‡(
fûe
 !
NULL
) {

894 
	`f˛o£
(
fûe
);

897  
ªsu…
;

898 
	}
}

903 
	#SKIP1
 "."

	)

904 
	#SKIP2
 ".."

	)

905 
	gSEARCH_TZFILE_RESULT
[
MAX_PATH_SIZE
] = "";

906 * 
	$£¨chF‹TZFûe
(c⁄° * 
∑th
, 
DeÁu…TZInfo
* 
tzInfo
) {

907 
cuΩ©h
[
MAX_PATH_SIZE
];

908 
DIR
* 
dúp
 = 
	`›ídú
(
∑th
);

909 
DIR
* 
subDúp
 = 
NULL
;

910 
dúít
* 
dúE¡ry
 = 
NULL
;

912 * 
ªsu…
 = 
NULL
;

913 i‡(
dúp
 =
NULL
) {

914  
ªsu…
;

918 
	`u¥v_mem£t
(
cuΩ©h
, 0, 
MAX_PATH_SIZE
);

919 
	`u¥v_°r˝y
(
cuΩ©h
, 
∑th
);

922 (
dúE¡ry
 = 
	`ªaddú
(
dúp
)Ë!
NULL
) {

923 c⁄° * 
dúName
 = 
dúE¡ry
->
d_«me
;

924 i‡(
	`u¥v_°rcmp
(
dúName
, 
SKIP1
Ë!0 && u¥v_°rcmp(dúName, 
SKIP2
) != 0) {

926 
√w∑th
[
MAX_PATH_SIZE
];

927 
	`u¥v_°r˝y
(
√w∑th
, 
cuΩ©h
);

928 
	`u¥v_°rˇt
(
√w∑th
, 
dúName
);

930 i‡((
subDúp
 = 
	`›ídú
(
√w∑th
)Ë!
NULL
) {

932 
	`˛o£dú
(
subDúp
);

933 
	`u¥v_°rˇt
(
√w∑th
, "/");

934 
ªsu…
 = 
	`£¨chF‹TZFûe
(
√w∑th
, 
tzInfo
);

943 i‡(
ªsu…
 !
NULL
)

945 } i‡(
	`u¥v_°rcmp
(
TZFILE_SKIP
, 
dúName
Ë!0 && u¥v_°rcmp(
TZFILE_SKIP2
, dirName) != 0) {

946 if(
	`com∑ªBö¨yFûes
(
TZDEFAULT
, 
√w∑th
, 
tzInfo
)) {

947 c⁄° * 
z⁄eid
 = 
√w∑th
 + ((
TZZONEINFO
)) - 1;

948 
	`skùZ⁄eIDPªfix
(&
z⁄eid
);

949 
	`u¥v_°r˝y
(
SEARCH_TZFILE_RESULT
, 
z⁄eid
);

950 
ªsu…
 = 
SEARCH_TZFILE_RESULT
;

957 
	`˛o£dú
(
dúp
);

958  
ªsu…
;

959 
	}
}

961 
U_CAPI
 c⁄° * 
U_EXPORT2


962 
	$u¥v_tz«me
(
n
)

964 c⁄° *
tzid
 = 
NULL
;

965 #ifde‡
U_WINDOWS


966 
tzid
 = 
	`u¥v_dëe˘WödowsTimeZ⁄e
();

968 i‡(
tzid
 !
NULL
) {

969  
tzid
;

983 #i‚de‡
DEBUG_TZNAME


984 
tzid
 = 
	`gëív
("TZ");

985 i‡(
tzid
 !
NULL
 && 
	`isVÆidOls⁄ID
(tzid))

988 
	`skùZ⁄eIDPªfix
(&
tzid
);

989  
tzid
;

994 #i‡
	`deföed
(
CHECK_LOCALTIME_LINK
)

996 i‡(
gTimeZ⁄eBuf„rPå
 =
NULL
) {

1002 
öt32_t
 
ªt
 = (öt32_t)
	`ªadlök
(
TZDEFAULT
, 
gTimeZ⁄eBuf„r
, (gTimeZoneBuffer));

1003 i‡(0 < 
ªt
) {

1004 
öt32_t
 
tzZ⁄eInfoLí
 = 
	`u¥v_°æí
(
TZZONEINFO
);

1005 
gTimeZ⁄eBuf„r
[
ªt
] = 0;

1006 i‡(
	`u¥v_°∫cmp
(
gTimeZ⁄eBuf„r
, 
TZZONEINFO
, 
tzZ⁄eInfoLí
) == 0

1007 && 
	`isVÆidOls⁄ID
(
gTimeZ⁄eBuf„r
 + 
tzZ⁄eInfoLí
))

1009  (
gTimeZ⁄eBuf„rPå
 = 
gTimeZ⁄eBuf„r
 + 
tzZ⁄eInfoLí
);

1012 #i‡
	`deföed
(
SEARCH_TZFILE
)

1013 
DeÁu…TZInfo
* 
tzInfo
 = (DeÁu…TZInfo*)
	`u¥v_mÆloc
((DefaultTZInfo));

1014 i‡(
tzInfo
 !
NULL
) {

1015 
tzInfo
->
deÁu…TZBuf„r
 = 
NULL
;

1016 
tzInfo
->
deÁu…TZFûeSize
 = 0;

1017 
tzInfo
->
deÁu…TZFûePå
 = 
NULL
;

1018 
tzInfo
->
deÁu…TZ°©us
 = 
FALSE
;

1019 
tzInfo
->
deÁu…TZPosôi⁄
 = 0;

1021 
gTimeZ⁄eBuf„rPå
 = 
	`£¨chF‹TZFûe
(
TZZONEINFO
, 
tzInfo
);

1024 i‡(
tzInfo
->
deÁu…TZBuf„r
 !
NULL
) {

1025 
	`u¥v_‰ì
(
tzInfo
->
deÁu…TZBuf„r
);

1027 i‡(
tzInfo
->
deÁu…TZFûePå
 !
NULL
) {

1028 
	`f˛o£
(
tzInfo
->
deÁu…TZFûePå
);

1030 
	`u¥v_‰ì
(
tzInfo
);

1033 i‡(
gTimeZ⁄eBuf„rPå
 !
NULL
 && 
	`isVÆidOls⁄ID
(gTimeZoneBufferPtr)) {

1034  
gTimeZ⁄eBuf„rPå
;

1040  
gTimeZ⁄eBuf„rPå
;

1045 #ifde‡
U_TZNAME


1046 #ifde‡
U_WINDOWS


1049  
	`u¥v_°rdup
(
U_TZNAME
[
n
]);

1060 
tm
 
ju√Sﬁ
, 
de˚mbîSﬁ
;

1061 
daylightTy≥
;

1062 c⁄° 
time_t
 
ju√Sﬁ°i˚
=1182478260;

1063 c⁄° 
time_t
 
de˚mbîSﬁ°i˚
=1198332540;

1066 
	`loˇ…ime_r
(&
ju√Sﬁ°i˚
, &
ju√Sﬁ
);

1067 
	`loˇ…ime_r
(&
de˚mbîSﬁ°i˚
, &
de˚mbîSﬁ
);

1068 
daylightTy≥
 = ((
de˚mbîSﬁ
.
tm_isd°
 > 0Ë<< 1Ë| (
ju√Sﬁ
.tm_isdst > 0);

1069 
tzid
 = 
	`ªm≠Sh‹tTimeZ⁄e
(
U_TZNAME
[0], U_TZNAME[1], 
daylightTy≥
, 
	`u¥v_timez⁄e
());

1070 i‡(
tzid
 !
NULL
) {

1071  
tzid
;

1074  
U_TZNAME
[
n
];

1079 
	}
}

1083 *
	ggD©aDúe˘‹y
 = 
NULL
;

1084 #i‡
U_POSIX_LOCALE


1085 *
	ggC‹ª˘edPOSIXLoˇÀ
 = 
NULL
;

1088 
UBoﬁ
 
U_CALLCONV
 
	$putû_˛ónup
()

1090 i‡(
gD©aDúe˘‹y
 && *gDataDirectory) {

1091 
	`u¥v_‰ì
(
gD©aDúe˘‹y
);

1093 
gD©aDúe˘‹y
 = 
NULL
;

1094 #i‡
U_POSIX_LOCALE


1095 i‡(
gC‹ª˘edPOSIXLoˇÀ
) {

1096 
	`u¥v_‰ì
(
gC‹ª˘edPOSIXLoˇÀ
);

1097 
gC‹ª˘edPOSIXLoˇÀ
 = 
NULL
;

1100  
TRUE
;

1101 
	}
}

1108 
U_CAPI
 
U_EXPORT2


1109 
	$u_£tD©aDúe˘‹y
(c⁄° *
dúe˘‹y
) {

1110 *
√wD©aDú
;

1111 
öt32_t
 
Àngth
;

1113 if(
dúe˘‹y
==
NULL
 || *directory==0) {

1118 
√wD©aDú
 = (*)"";

1121 
Àngth
=(
öt32_t
)
	`u¥v_°æí
(
dúe˘‹y
);

1122 
√wD©aDú
 = (*)
	`u¥v_mÆloc
(
Àngth
 + 2);

1124 i‡(
√wD©aDú
 =
NULL
) {

1127 
	`u¥v_°r˝y
(
√wD©aDú
, 
dúe˘‹y
);

1129 #i‡(
U_FILE_SEP_CHAR
 !
U_FILE_ALT_SEP_CHAR
)

1131 *
p
;

1132 
p
 = 
	`u¥v_°rchr
(
√wD©aDú
, 
U_FILE_ALT_SEP_CHAR
)) {

1133 *
p
 = 
U_FILE_SEP_CHAR
;

1139 
	`umtx_lock
(
NULL
);

1140 i‡(
gD©aDúe˘‹y
 && *gDataDirectory) {

1141 
	`u¥v_‰ì
(
gD©aDúe˘‹y
);

1143 
gD©aDúe˘‹y
 = 
√wD©aDú
;

1144 
	`u˛n_comm⁄_ªgi°îCÀ™up
(
UCLN_COMMON_PUTIL
, 
putû_˛ónup
);

1145 
	`umtx_u∆ock
(
NULL
);

1146 
	}
}

1148 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


1149 
	$u¥v_∑thIsAbsﬁuã
(c⁄° *
∑th
)

1151 if(!
∑th
 || !*path) {

1152  
FALSE
;

1155 if(*
∑th
 =
U_FILE_SEP_CHAR
) {

1156  
TRUE
;

1159 #i‡(
U_FILE_SEP_CHAR
 !
U_FILE_ALT_SEP_CHAR
)

1160 if(*
∑th
 =
U_FILE_ALT_SEP_CHAR
) {

1161  
TRUE
;

1165 #i‡
	`deföed
(
U_WINDOWS
)

1166 if–(((
∑th
[0] >= 'A') && (path[0] <= 'Z')) ||

1167 ((
∑th
[0] >= 'a') && (path[0] <= 'z'))) &&

1168 
∑th
[1] == ':' ) {

1169  
TRUE
;

1173  
FALSE
;

1174 
	}
}

1178 #i‡
deföed
(
U_DARWIN
Ë&& 
TARGET_IPHONE_SIMULATOR


1179 #i‡!
deföed
(
ICU_DATA_DIR_PREFIX_ENV_VAR
)

1180 
	#ICU_DATA_DIR_PREFIX_ENV_VAR
 "IPHONE_SIMULATOR_ROOT"

	)

1184 
U_CAPI
 c⁄° * 
U_EXPORT2


1185 
	$u_gëD©aDúe˘‹y
() {

1186 c⁄° *
∑th
 = 
NULL
;

1187 #i‡
	`deföed
(
ICU_DATA_DIR_PREFIX_ENV_VAR
)

1188 
d©adú_∑th_buf„r
[
PATH_MAX
];

1192 
	`UMTX_CHECK
(
NULL
, 
gD©aDúe˘‹y
, 
∑th
);

1194 if(
∑th
) {

1195  
∑th
;

1211 #i‡!
	`deföed
(
ICU_NO_USER_DATA_OVERRIDE
Ë&& !
UCONFIG_NO_FILE_IO


1213 
∑th
=
	`gëív
("ICU_DATA");

1223 #i‡
	`deföed
(
ICU_DATA_DIR
Ë|| deföed(
U_ICU_DATA_DEFAULT_DIR
)

1224 if(
∑th
==
NULL
 || *path==0) {

1225 #i‡
	`deföed
(
ICU_DATA_DIR_PREFIX_ENV_VAR
)

1226 c⁄° *
¥efix
 = 
	`gëív
(
ICU_DATA_DIR_PREFIX_ENV_VAR
);

1228 #ifde‡
ICU_DATA_DIR


1229 
∑th
=
ICU_DATA_DIR
;

1231 
∑th
=
U_ICU_DATA_DEFAULT_DIR
;

1233 #i‡
	`deföed
(
ICU_DATA_DIR_PREFIX_ENV_VAR
)

1234 i‡(
¥efix
 !
NULL
) {

1235 
	`¢¥ötf
(
d©adú_∑th_buf„r
, 
PATH_MAX
, "%s%s", 
¥efix
, 
∑th
);

1236 
∑th
=
d©adú_∑th_buf„r
;

1242 if(
∑th
==
NULL
) {

1244 
∑th
 = "";

1247 
	`u_£tD©aDúe˘‹y
(
∑th
);

1248  
gD©aDúe˘‹y
;

1249 
	}
}

1256 #ifde‡
XP_MAC


1259 
öt32_t
 
	ms¸ùt
;

1260 
öt32_t
 
	mªgi⁄
;

1261 
öt32_t
 
	mœng
;

1262 
öt32_t
 
	md©e_ªgi⁄
;

1263 c⁄° * 
	mposixID
;

1264 } 
	tmac_lc_ªc
;

1268 
	#MAC_LC_MAGIC_NUMBER
 -5

	)

1269 
	#MAC_LC_INIT_NUMBER
 -9

	)

1271 c⁄° 
mac_lc_ªc
 
	gmac_lc_ªcs
[] = {

1272 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 0, "en_US",

1274 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 1, "fr_FR",

1276 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 2, "en_GB",

1278 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 3, "de_DE",

1280 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 4, "it_IT",

1282 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 5, "nl_NL",

1284 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 6, "fr_BE",

1286 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 7, "sv_SE",

1288 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 9, "da_DK",

1290 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 10, "pt_PT",

1292 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 11, "fr_CA",

1294 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 13, "is_IS",

1296 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 14, "ja_JP",

1298 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 15, "en_AU",

1300 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 16, "ar_AE",

1302 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 17, "fi_FI",

1304 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 18, "fr_CH",

1306 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 19, "de_CH",

1308 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 20, "el_GR",

1310 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 21, "is_IS",

1316 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 24, "tr_TR",

1318 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 25, "sh_YU",

1324 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 41, "lt_LT",

1326 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 42, "pl_PL",

1328 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 43, "hu_HU",

1330 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 44, "et_EE",

1332 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 45, "lv_LV",

1338 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 48, "fa_IR",

1340 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 49, "ru_RU",

1342 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 50, "en_IE",

1344 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 51, "ko_KR",

1346 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 52, "zh_CN",

1348 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 53, "zh_TW",

1350 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER, 54, "th_TH",

1354 
MAC_LC_MAGIC_NUMBER
, MAC_LC_MAGIC_NUMBER, MAC_LC_MAGIC_NUMBER,

1355 
MAC_LC_MAGIC_NUMBER
, "en_US"

1360 #i‡
U_POSIX_LOCALE


1365 c⁄° *
	$u¥v_gëPOSIXIDF‹C©eg‹y
(
ˇãg‹y
)

1367 c⁄° * 
posixID
 = 
NULL
;

1368 i‡(
ˇãg‹y
 =
LC_MESSAGES
 || c©eg‹y =
LC_CTYPE
) {

1387 
posixID
 = 
	`£éoˇÀ
(
ˇãg‹y
, 
NULL
);

1388 i‡((
posixID
 == 0)

1389 || (
	`u¥v_°rcmp
("C", 
posixID
) == 0)

1390 || (
	`u¥v_°rcmp
("POSIX", 
posixID
) == 0))

1393 
posixID
 = 
	`gëív
("LC_ALL");

1394 i‡(
posixID
 == 0) {

1395 
posixID
 = 
	`gëív
(
ˇãg‹y
 =
LC_MESSAGES
 ? "LC_MESSAGES" : "LC_CTYPE");

1396 i‡(
posixID
 == 0) {

1397 
posixID
 = 
	`gëív
("LANG");

1402 i‡((
posixID
==0)

1403 || (
	`u¥v_°rcmp
("C", 
posixID
) == 0)

1404 || (
	`u¥v_°rcmp
("POSIX", 
posixID
) == 0))

1407 
posixID
 = "en_US_POSIX";

1409  
posixID
;

1410 
	}
}

1415 c⁄° *
	$u¥v_gëPOSIXIDF‹DeÁu…LoˇÀ
()

1417 c⁄° * 
posixID
 = 
NULL
;

1418 i‡(
posixID
 == 0) {

1419 
posixID
 = 
	`u¥v_gëPOSIXIDF‹C©eg‹y
(
LC_MESSAGES
);

1421  
posixID
;

1422 
	}
}

1427 c⁄° *
	$u¥v_gëPOSIXIDF‹DeÁu…Codïage
()

1429 c⁄° * 
posixID
 = 
NULL
;

1430 i‡(
posixID
 == 0) {

1431 
posixID
 = 
	`u¥v_gëPOSIXIDF‹C©eg‹y
(
LC_CTYPE
);

1433  
posixID
;

1434 
	}
}

1438 
U_CAPI
 c⁄° * 
U_EXPORT2


1439 
	$u¥v_gëDeÁu…LoˇÀID
()

1441 #i‡
U_POSIX_LOCALE


1464 *
c‹ª˘edPOSIXLoˇÀ
 = 0;

1465 c⁄° * 
posixID
 = 
	`u¥v_gëPOSIXIDF‹DeÁu…LoˇÀ
();

1466 c⁄° *
p
;

1467 c⁄° *
q
;

1468 
öt32_t
 
Àn
;

1476 i‡(
gC‹ª˘edPOSIXLoˇÀ
 !
NULL
) {

1477  
gC‹ª˘edPOSIXLoˇÀ
;

1480 i‡((
p
 = 
	`u¥v_°rchr
(
posixID
, '.')Ë!
NULL
) {

1482 
c‹ª˘edPOSIXLoˇÀ
 = 
	`u¥v_mÆloc
(
	`u¥v_°æí
(
posixID
)+1);

1484 i‡(
c‹ª˘edPOSIXLoˇÀ
 =
NULL
) {

1485  
NULL
;

1487 
	`u¥v_°∫˝y
(
c‹ª˘edPOSIXLoˇÀ
, 
posixID
, 
p
-posixID);

1488 
c‹ª˘edPOSIXLoˇÀ
[
p
-
posixID
] = 0;

1491 i‡((
p
 = 
	`u¥v_°rchr
(
c‹ª˘edPOSIXLoˇÀ
, '@')Ë!
NULL
) {

1492 
c‹ª˘edPOSIXLoˇÀ
[
p
-correctedPOSIXLocale] = 0;

1497 i‡((
p
 = 
	`u¥v_°ºchr
(
posixID
, '@')Ë!
NULL
) {

1498 i‡(
c‹ª˘edPOSIXLoˇÀ
 =
NULL
) {

1499 
c‹ª˘edPOSIXLoˇÀ
 = 
	`u¥v_mÆloc
(
	`u¥v_°æí
(
posixID
)+1);

1501 i‡(
c‹ª˘edPOSIXLoˇÀ
 =
NULL
) {

1502  
NULL
;

1504 
	`u¥v_°∫˝y
(
c‹ª˘edPOSIXLoˇÀ
, 
posixID
, 
p
-posixID);

1505 
c‹ª˘edPOSIXLoˇÀ
[
p
-
posixID
] = 0;

1507 
p
++;

1510 i‡(!
	`u¥v_°rcmp
(
p
, "nynorsk")) {

1511 
p
 = "NY";

1515 i‡(
	`u¥v_°rchr
(
c‹ª˘edPOSIXLoˇÀ
,'_'Ë=
NULL
) {

1516 
	`u¥v_°rˇt
(
c‹ª˘edPOSIXLoˇÀ
, "__");

1519 
	`u¥v_°rˇt
(
c‹ª˘edPOSIXLoˇÀ
, "_");

1522 i‡((
q
 = 
	`u¥v_°rchr
(
p
, '.')Ë!
NULL
) {

1524 
Àn
 = (
öt32_t
)(
	`u¥v_°æí
(
c‹ª˘edPOSIXLoˇÀ
Ë+ (
q
-
p
));

1525 
	`u¥v_°∫ˇt
(
c‹ª˘edPOSIXLoˇÀ
, 
p
, 
q
-p);

1526 
c‹ª˘edPOSIXLoˇÀ
[
Àn
] = 0;

1530 
	`u¥v_°rˇt
(
c‹ª˘edPOSIXLoˇÀ
, 
p
);

1541 i‡(
c‹ª˘edPOSIXLoˇÀ
 !
NULL
) {

1542 
posixID
 = 
c‹ª˘edPOSIXLoˇÀ
;

1546 
c‹ª˘edPOSIXLoˇÀ
 = (*)
	`u¥v_mÆloc
(
	`u¥v_°æí
(
posixID
) + 1);

1548 i‡(
c‹ª˘edPOSIXLoˇÀ
 =
NULL
) {

1549  
NULL
;

1551 
posixID
 = 
	`u¥v_°r˝y
(
c‹ª˘edPOSIXLoˇÀ
,ÖosixID);

1554 i‡(
gC‹ª˘edPOSIXLoˇÀ
 =
NULL
) {

1555 
gC‹ª˘edPOSIXLoˇÀ
 = 
c‹ª˘edPOSIXLoˇÀ
;

1556 
	`u˛n_comm⁄_ªgi°îCÀ™up
(
UCLN_COMMON_PUTIL
, 
putû_˛ónup
);

1557 
c‹ª˘edPOSIXLoˇÀ
 = 
NULL
;

1560 i‡(
c‹ª˘edPOSIXLoˇÀ
 !
NULL
) {

1561 
	`u¥v_‰ì
(
c‹ª˘edPOSIXLoˇÀ
);

1564  
posixID
;

1566 #ñi‡
	`deföed
(
U_WINDOWS
)

1567 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

1568 
LCID
 
id
 = 
	`GëThªadLoˇÀ
();

1569 c⁄° * 
locID
 = 
	`u¥v_c⁄vîtToPosix
(
id
, &
°©us
);

1571 i‡(
	`U_FAILURE
(
°©us
)) {

1572 
locID
 = "en_US";

1574  
locID
;

1576 #ñi‡
	`deföed
(
XP_MAC
)

1577 
öt32_t
 
s¸ùt
 = 
MAC_LC_INIT_NUMBER
;

1579 
öt32_t
 
ªgi⁄
 = 
MAC_LC_INIT_NUMBER
;

1581 
öt32_t
 
œng
 = 
MAC_LC_INIT_NUMBER
;

1583 
öt32_t
 
d©e_ªgi⁄
 = 
MAC_LC_INIT_NUMBER
;

1584 c⁄° * 
posixID
 = 0;

1585 
öt32_t
 
cou¡
 = (
mac_lc_ªcs
Ë/ (
mac_lc_ªc
);

1586 
öt32_t
 
i
;

1587 
I¡l1Hndl
 
ih
;

1589 
ih
 = (
I¡l1Hndl
Ë
	`GëI¡lResour˚
(1);

1590 i‡(
ih
)

1591 
d©e_ªgi⁄
 = ((
uöt16_t
)(*
ih
)->
öé1Vîs
) >> 8;

1593 
i
 = 0; i < 
cou¡
; i++) {

1594 i‡–((
mac_lc_ªcs
[
i
].
s¸ùt
 =
MAC_LC_MAGIC_NUMBER
)

1595 || (
mac_lc_ªcs
[
i
].
s¸ùt
 == script))

1596 && ((
mac_lc_ªcs
[
i
].
ªgi⁄
 =
MAC_LC_MAGIC_NUMBER
)

1597 || (
mac_lc_ªcs
[
i
].
ªgi⁄
 ==Ñegion))

1598 && ((
mac_lc_ªcs
[
i
].
œng
 =
MAC_LC_MAGIC_NUMBER
)

1599 || (
mac_lc_ªcs
[
i
].
œng
 ==Üang))

1600 && ((
mac_lc_ªcs
[
i
].
d©e_ªgi⁄
 =
MAC_LC_MAGIC_NUMBER
)

1601 || (
mac_lc_ªcs
[
i
].
d©e_ªgi⁄
 == date_region))

1604 
posixID
 = 
mac_lc_ªcs
[
i
].posixID;

1609  
posixID
;

1611 #ñi‡
	`deföed
(
OS400
)

1613 
c‹ª˘edLoˇÀ
[64];

1614 c⁄° *
loˇÀID
 = 
	`gëív
("LC_ALL");

1615 *
p
;

1617 i‡(
loˇÀID
 =
NULL
)

1618 
loˇÀID
 = 
	`gëív
("LANG");

1619 i‡(
loˇÀID
 =
NULL
)

1620 
loˇÀID
 = 
	`£éoˇÀ
(
LC_ALL
, 
NULL
);

1622 i‡(
loˇÀID
 =
NULL
)

1626 if((
p
 = 
	`u¥v_°ºchr
(
loˇÀID
, '/')Ë!
NULL
)

1629 
p
++;

1630 
loˇÀID
 = 
p
;

1634 
	`u¥v_°r˝y
(
c‹ª˘edLoˇÀ
, 
loˇÀID
);

1637 if((
p
 = 
	`u¥v_°rchr
(
c‹ª˘edLoˇÀ
, '.')Ë!
NULL
) {

1638 *
p
 = 0;

1642 
	`T_CSåög_toUµîCa£
(
c‹ª˘edLoˇÀ
);

1651 i‡((
	`u¥v_°rcmp
("C", 
c‹ª˘edLoˇÀ
) == 0) ||

1652 (
	`u¥v_°rcmp
("POSIX", 
c‹ª˘edLoˇÀ
) == 0) ||

1653 (
	`u¥v_°∫cmp
("QLGPGCMA", 
c‹ª˘edLoˇÀ
, 8) == 0))

1655 
	`u¥v_°r˝y
(
c‹ª˘edLoˇÀ
, "en_US_POSIX");

1659 
öt16_t
 
LoˇÀLí
;

1662 
p
 = 
c‹ª˘edLoˇÀ
; *p != 0 && *p != '_';Ö++)

1664 *
p
 = 
	`u¥v_tﬁowî
(*p);

1668 
LoˇÀLí
 = 
	`u¥v_°æí
(
c‹ª˘edLoˇÀ
);

1669 i‡(
c‹ª˘edLoˇÀ
[
LoˇÀLí
 - 2] == '_' &&

1670 
c‹ª˘edLoˇÀ
[
LoˇÀLí
 - 1] == 'E')

1672 
	`u¥v_°rˇt
(
c‹ª˘edLoˇÀ
, "URO");

1678 i‡(
c‹ª˘edLoˇÀ
[
LoˇÀLí
 - 2] == '_' &&

1679 
c‹ª˘edLoˇÀ
[
LoˇÀLí
 - 1] == 'L')

1681 
c‹ª˘edLoˇÀ
[
LoˇÀLí
 - 2] = 0;

1687 i‡(
	`u¥v_°∫cmp
(
c‹ª˘edLoˇÀ
, "zh_HK", 5) == 0)

1689 
	`u¥v_°r˝y
(
c‹ª˘edLoˇÀ
, "zh_HK");

1694 i‡(
	`u¥v_°rcmp
(
c‹ª˘edLoˇÀ
, "zh_CN_GBK") == 0)

1696 
	`u¥v_°r˝y
(
c‹ª˘edLoˇÀ
, "zh_CN");

1701  
c‹ª˘edLoˇÀ
;

1704 
	}
}

1706 #i‡!
U_CHARSET_IS_UTF8


1707 #i‡
U_POSIX_LOCALE


1716 
	$ªm≠Pœtf‹mDïídítCodïage
(c⁄° *
loˇÀ
, c⁄° *
«me
) {

1717 i‡(
loˇÀ
 !
NULL
 && *locale == 0) {

1719 
loˇÀ
 = 
NULL
;

1721 i‡(
«me
 =
NULL
) {

1722  
NULL
;

1724 #i‡
	`deföed
(
U_AIX
)

1725 i‡(
	`u¥v_°rcmp
(
«me
, "IBM-943") == 0) {

1727 
«me
 = "Shift-JIS";

1729 i‡(
	`u¥v_°rcmp
(
«me
, "IBM-1252") == 0) {

1731 
«me
 = "IBM-5348";

1733 #ñi‡
	`deföed
(
U_SOLARIS
)

1734 i‡(
loˇÀ
 !
NULL
 && 
	`u¥v_°rcmp
(
«me
, "EUC") == 0) {

1736 i‡(
	`u¥v_°rcmp
(
loˇÀ
, "zh_CN") == 0) {

1737 
«me
 = "EUC-CN";

1739 i‡(
	`u¥v_°rcmp
(
loˇÀ
, "zh_TW") == 0) {

1740 
«me
 = "EUC-TW";

1742 i‡(
	`u¥v_°rcmp
(
loˇÀ
, "ko_KR") == 0) {

1743 
«me
 = "EUC-KR";

1746 i‡(
	`u¥v_°rcmp
(
«me
, "eucJP") == 0) {

1751 
«me
 = "eucjis";

1753 i‡(
	`u¥v_°rcmp
(
«me
, "646") == 0) {

1758 
«me
 = "ISO-8859-1";

1760 #ñi‡
	`deföed
(
U_DARWIN
)

1761 i‡(
loˇÀ
 =
NULL
 && *
«me
 == 0) {

1767 
«me
 = "UTF-8";

1769 i‡(
	`u¥v_°rcmp
(
«me
, "CP949") == 0) {

1771 
«me
 = "EUC-KR";

1773 i‡(
loˇÀ
 !
NULL
 && 
	`u¥v_°rcmp
÷oˇÀ, "í_US_POSIX"Ë!0 && u¥v_°rcmp(
«me
, "US-ASCII") == 0) {

1777 
«me
 = "UTF-8";

1779 #ñi‡
	`deföed
(
U_BSD
)

1780 i‡(
	`u¥v_°rcmp
(
«me
, "CP949") == 0) {

1782 
«me
 = "EUC-KR";

1784 #ñi‡
	`deföed
(
U_HPUX
)

1785 i‡(
loˇÀ
 !
NULL
 && 
	`u¥v_°rcmp
÷oˇÀ, "zh_HK"Ë=0 && u¥v_°rcmp(
«me
, "big5") == 0) {

1788 
«me
 = "hkbig5";

1790 i‡(
	`u¥v_°rcmp
(
«me
, "eucJP") == 0) {

1796 
«me
 = "eucjis";

1798 #ñi‡
	`deföed
(
U_LINUX
)

1799 i‡(
loˇÀ
 !
NULL
 && 
	`u¥v_°rcmp
(
«me
, "euc") == 0) {

1801 i‡(
	`u¥v_°rcmp
(
loˇÀ
, "korean") == 0) {

1802 
«me
 = "EUC-KR";

1804 i‡(
	`u¥v_°rcmp
(
loˇÀ
, "japanese") == 0) {

1806 
«me
 = "eucjis";

1809 i‡(
	`u¥v_°rcmp
(
«me
, "eucjp") == 0) {

1815 
«me
 = "eucjis";

1817 i‡(
loˇÀ
 !
NULL
 && 
	`u¥v_°rcmp
(locale, "en_US_POSIX") != 0 &&

1818 (
	`u¥v_°rcmp
(
«me
, "ANSI_X3.4-1968") == 0 || uprv_strcmp(name, "US-ASCII") == 0)) {

1822 
«me
 = "UTF-8";

1831 i‡(*
«me
 == 0) {

1832 
«me
 = 
NULL
;

1834  
«me
;

1835 
	}
}

1838 
	$gëCodïageFromPOSIXID
(c⁄° *
loˇÀName
, * 
buf„r
, 
öt32_t
 
buffC≠acôy
)

1840 
loˇÀBuf
[100];

1841 c⁄° *
«me
 = 
NULL
;

1842 *
v¨ü¡
 = 
NULL
;

1844 i‡(
loˇÀName
 !
NULL
 && (
«me
 = (
	`u¥v_°rchr
(localeName, '.'))) != NULL) {

1845 
size_t
 
loˇÀC≠acôy
 = 
	`u¥v_mö
((
loˇÀBuf
), (
«me
-
loˇÀName
)+1);

1846 
	`u¥v_°∫˝y
(
loˇÀBuf
, 
loˇÀName
, 
loˇÀC≠acôy
);

1847 
loˇÀBuf
[
loˇÀC≠acôy
-1] = 0;

1848 
«me
 = 
	`u¥v_°∫˝y
(
buf„r
,Çame+1, 
buffC≠acôy
);

1849 
buf„r
[
buffC≠acôy
-1] = 0;

1850 i‡((
v¨ü¡
 = (
	`u¥v_°rchr
(
«me
, '@'))Ë!
NULL
) {

1851 *
v¨ü¡
 = 0;

1853 
«me
 = 
	`ªm≠Pœtf‹mDïídítCodïage
(
loˇÀBuf
,Çame);

1855  
«me
;

1856 
	}
}

1860 
	$öt_gëDeÁu…Codïage
()

1862 #i‡
	`deföed
(
OS400
)

1863 
uöt32_t
 
ccsid
 = 37;

1864 
codïage
[64];

1865 
Qwc_JOBI0400_t
 
joböfo
;

1866 
Qus_EC_t
 
îr‹
 = { (Qus_EC_t) };

1868 
	`EPT_CALL
(
QUSRJOBI
)(&
joböfo
, (jobinfo), "JOBI0400",

1869 "* ", " ", &
îr‹
);

1871 i‡(
îr‹
.
Byãs_AvaûabÀ
 == 0) {

1872 i‡(
joböfo
.
Coded_Ch¨_Së_ID
 != 0xFFFF) {

1873 
ccsid
 = (
uöt32_t
)
joböfo
.
Coded_Ch¨_Së_ID
;

1875 i‡(
joböfo
.
DeÁu…_Coded_Ch¨_Së_Id
 != 0xFFFF) {

1876 
ccsid
 = (
uöt32_t
)
joböfo
.
DeÁu…_Coded_Ch¨_Së_Id
;

1880 
	`•rötf
(
codïage
,"ibm-%d", 
ccsid
);

1881  
codïage
;

1883 #ñi‡
	`deföed
(
OS390
)

1884 
codïage
[64];

1886 
	`°∫˝y
(
codïage
, 
	`∆_œngöfo
(
CODESET
),63-
	`°æí
(
UCNV_SWAP_LFNL_OPTION_STRING
));

1887 
	`°rˇt
(
codïage
,
UCNV_SWAP_LFNL_OPTION_STRING
);

1888 
codïage
[63] = 0;

1890  
codïage
;

1892 #ñi‡
	`deföed
(
XP_MAC
)

1895 #ñi‡
	`deföed
(
U_WINDOWS
)

1896 
codïage
[64];

1897 
	`•rötf
(
codïage
, "wödows-%d", 
	`GëACP
());

1898  
codïage
;

1900 #ñi‡
U_POSIX_LOCALE


1901 
code£tName
[100];

1902 c⁄° *
loˇÀName
 = 
NULL
;

1903 c⁄° *
«me
 = 
NULL
;

1905 
loˇÀName
 = 
	`u¥v_gëPOSIXIDF‹DeÁu…Codïage
();

1906 
	`u¥v_mem£t
(
code£tName
, 0, (codesetName));

1907 #i‡
U_HAVE_NL_LANGINFO_CODESET


1912 c⁄° *
code£t
 = 
	`∆_œngöfo
(
U_NL_LANGINFO_CODESET
);

1913 #i‡
	`deföed
(
U_DARWIN
Ë|| deföed(
U_LINUX
)

1918 i‡(
	`u¥v_°rcmp
(
loˇÀName
, "en_US_POSIX") != 0) {

1919 
code£t
 = 
	`ªm≠Pœtf‹mDïídítCodïage
(
loˇÀName
, codeset);

1923 
code£t
 = 
	`ªm≠Pœtf‹mDïídítCodïage
(
NULL
, codeset);

1926 i‡(
code£t
 !
NULL
) {

1927 
	`u¥v_°∫˝y
(
code£tName
, 
code£t
, (codesetName));

1928 
code£tName
[(codesetName)-1] = 0;

1929  
code£tName
;

1937 
	`u¥v_mem£t
(
code£tName
, 0, (codesetName));

1938 
«me
 = 
	`gëCodïageFromPOSIXID
(
loˇÀName
, 
code£tName
, (codesetName));

1939 i‡(
«me
) {

1941  
«me
;

1944 i‡(*
code£tName
 == 0)

1947 ()
	`u¥v_°r˝y
(
code£tName
, "US-ASCII");

1949  
code£tName
;

1953 
	}
}

1956 
U_CAPI
 c⁄° * 
U_EXPORT2


1957 
	$u¥v_gëDeÁu…Codïage
()

1959 c⁄° *
«me
 = 
NULL
;

1960 
	`umtx_lock
(
NULL
);

1961 i‡(
«me
 =
NULL
) {

1962 
«me
 = 
	`öt_gëDeÁu…Codïage
();

1964 
	`umtx_u∆ock
(
NULL
);

1965  
«me
;

1966 
	}
}

1974 
U_CAPI
 
U_EXPORT2


1975 
	$u_vîsi⁄FromSåög
(
UVîsi⁄Info
 
vîsi⁄Aºay
, c⁄° *
vîsi⁄Såög
) {

1976 *
íd
;

1977 
uöt16_t
 
∑π
=0;

1979 if(
vîsi⁄Aºay
==
NULL
) {

1983 if(
vîsi⁄Såög
!=
NULL
) {

1985 
vîsi⁄Aºay
[
∑π
]=(
uöt8_t
)
	`u¥v_°πoul
(
vîsi⁄Såög
, &
íd
, 10);

1986 if(
íd
==
vîsi⁄Såög
 || ++
∑π
==
U_MAX_VERSION_LENGTH
 || *íd!=
U_VERSION_DELIMITER
) {

1989 
vîsi⁄Såög
=
íd
+1;

1993 
∑π
<
U_MAX_VERSION_LENGTH
) {

1994 
vîsi⁄Aºay
[
∑π
++]=0;

1996 
	}
}

1998 
U_CAPI
 
U_EXPORT2


1999 
	$u_vîsi⁄FromUSåög
(
UVîsi⁄Info
 
vîsi⁄Aºay
, c⁄° 
UCh¨
 *
vîsi⁄Såög
) {

2000 if(
vîsi⁄Aºay
!=
NULL
 && 
vîsi⁄Såög
!=NULL) {

2001 
vîsi⁄Ch¨s
[
U_MAX_VERSION_STRING_LENGTH
+1];

2002 
öt32_t
 
Àn
 = 
	`u_°æí
(
vîsi⁄Såög
);

2003 if(
Àn
>
U_MAX_VERSION_STRING_LENGTH
) {

2004 
Àn
 = 
U_MAX_VERSION_STRING_LENGTH
;

2006 
	`u_UCh¨sToCh¨s
(
vîsi⁄Såög
, 
vîsi⁄Ch¨s
, 
Àn
);

2007 
vîsi⁄Ch¨s
[
Àn
]=0;

2008 
	`u_vîsi⁄FromSåög
(
vîsi⁄Aºay
, 
vîsi⁄Ch¨s
);

2010 
	}
}

2012 
U_CAPI
 
U_EXPORT2


2013 
	$u_vîsi⁄ToSåög
(
UVîsi⁄Info
 
vîsi⁄Aºay
, *
vîsi⁄Såög
) {

2014 
uöt16_t
 
cou¡
, 
∑π
;

2015 
uöt8_t
 
fõld
;

2017 if(
vîsi⁄Såög
==
NULL
) {

2021 if(
vîsi⁄Aºay
==
NULL
) {

2022 
vîsi⁄Såög
[0]=0;

2027 
cou¡
=4; cou¡>0 && 
vîsi⁄Aºay
[count-1]==0; --count) {

2030 if(
cou¡
 <= 1) {

2031 
cou¡
 = 2;

2036 
fõld
=
vîsi⁄Aºay
[0];

2037 if(
fõld
>=100) {

2038 *
vîsi⁄Såög
++=()('0'+
fõld
/100);

2039 
fõld
%=100;

2041 if(
fõld
>=10) {

2042 *
vîsi⁄Såög
++=()('0'+
fõld
/10);

2043 
fõld
%=10;

2045 *
vîsi⁄Såög
++=()('0'+
fõld
);

2048 
∑π
=1;Ö¨t<
cou¡
; ++part) {

2050 *
vîsi⁄Såög
++=
U_VERSION_DELIMITER
;

2053 
fõld
=
vîsi⁄Aºay
[
∑π
];

2054 if(
fõld
>=100) {

2055 *
vîsi⁄Såög
++=()('0'+
fõld
/100);

2056 
fõld
%=100;

2058 if(
fõld
>=10) {

2059 *
vîsi⁄Såög
++=()('0'+
fõld
/10);

2060 
fõld
%=10;

2062 *
vîsi⁄Såög
++=()('0'+
fõld
);

2066 *
vîsi⁄Såög
=0;

2067 
	}
}

2069 
U_CAPI
 
U_EXPORT2


2070 
	$u_gëVîsi⁄
(
UVîsi⁄Info
 
vîsi⁄Aºay
) {

2071 
	`u_vîsi⁄FromSåög
(
vîsi⁄Aºay
, 
U_ICU_VERSION
);

2072 
	}
}

2078 #i‡
U_ENABLE_DYLOAD


2080 #i‡
deföed
(
U_CHECK_DYLOAD
)

2082 #i‡
deföed
(
HAVE_DLOPEN
)

2084 #ifde‡
HAVE_DLFCN_H


2085 #ifde‡
__MVS__


2086 #i‚de‡
__SUSV3


2087 
	#__SUSV3
 1

	)

2090 
	~<dlf˙.h
>

2093 
U_INTERNAL
 * 
U_EXPORT2


2094 
	$u¥v_dl_›í
(c⁄° *
libName
, 
UEº‹Code
 *
°©us
) {

2095 *
ªt
 = 
NULL
;

2096 if(
	`U_FAILURE
(*
°©us
)Ë 
ªt
;

2097 
ªt
 = 
	`dl›í
(
libName
, 
RTLD_NOW
|
RTLD_GLOBAL
);

2098 if(
ªt
==
NULL
) {

2099 #i‚de‡
U_TRACE_DYLOAD


2100 
	`≥º‹
("dlopen");

2102 *
°©us
 = 
U_MISSING_RESOURCE_ERROR
;

2104  
ªt
;

2105 
	}
}

2107 
U_INTERNAL
 
U_EXPORT2


2108 
	$u¥v_dl_˛o£
(*
lib
, 
UEº‹Code
 *
°©us
) {

2109 if(
	`U_FAILURE
(*
°©us
)) ;

2110 
	`dl˛o£
(
lib
);

2111 
	}
}

2113 
U_INTERNAL
 * 
U_EXPORT2


2114 
	$u¥v_dl_sym
(*
lib
, c⁄° * 
sym
, 
UEº‹Code
 *
°©us
) {

2115 *
ªt
 = 
NULL
;

2116 if(
	`U_FAILURE
(*
°©us
)Ë 
ªt
;

2117 
ªt
 = 
	`dlsym
(
lib
, 
sym
);

2118 if(
ªt
 =
NULL
) {

2119 *
°©us
 = 
U_MISSING_RESOURCE_ERROR
;

2121  
ªt
;

2122 
	}
}

2128 
U_INTERNAL
 * 
U_EXPORT2


2129 
	$u¥v_dl_›í
(c⁄° *
libName
, 
UEº‹Code
 *
°©us
) {

2130 if(
	`U_FAILURE
(*
°©us
)Ë 
NULL
;

2131 *
°©us
 = 
U_UNSUPPORTED_ERROR
;

2132  
NULL
;

2133 
	}
}

2135 
U_INTERNAL
 
U_EXPORT2


2136 
	$u¥v_dl_˛o£
(*
lib
, 
UEº‹Code
 *
°©us
) {

2137 if(
	`U_FAILURE
(*
°©us
)) ;

2138 *
°©us
 = 
U_UNSUPPORTED_ERROR
;

2140 
	}
}

2143 
U_INTERNAL
 * 
U_EXPORT2


2144 
	$u¥v_dl_sym
(*
lib
, c⁄° * 
sym
, 
UEº‹Code
 *
°©us
) {

2145 if(
	`U_FAILURE
(*
°©us
)Ë 
NULL
;

2146 *
°©us
 = 
U_UNSUPPORTED_ERROR
;

2147  
NULL
;

2148 
	}
}

2154 #ñi‡
deföed
 
U_WINDOWS


2156 
U_INTERNAL
 * 
U_EXPORT2


2157 
	$u¥v_dl_›í
(c⁄° *
libName
, 
UEº‹Code
 *
°©us
) {

2158 
HMODULE
 
lib
 = 
NULL
;

2160 if(
	`U_FAILURE
(*
°©us
)Ë 
NULL
;

2162 
lib
 = 
	`LﬂdLibøry
(
libName
);

2164 if(
lib
==
NULL
) {

2165 *
°©us
 = 
U_MISSING_RESOURCE_ERROR
;

2168  (*)
lib
;

2169 
	}
}

2171 
U_INTERNAL
 
U_EXPORT2


2172 
	$u¥v_dl_˛o£
(*
lib
, 
UEº‹Code
 *
°©us
) {

2173 
HMODULE
 
h™dÀ
 = (HMODULE)
lib
;

2174 if(
	`U_FAILURE
(*
°©us
)) ;

2176 
	`FªeLibøry
(
h™dÀ
);

2179 
	}
}

2182 
U_INTERNAL
 * 
U_EXPORT2


2183 
	$u¥v_dl_sym
(*
lib
, c⁄° * 
sym
, 
UEº‹Code
 *
°©us
) {

2184 
HMODULE
 
h™dÀ
 = (HMODULE)
lib
;

2185 * 
addr
 = 
NULL
;

2187 if(
	`U_FAILURE
(*
°©us
Ë|| 
lib
==
NULL
)  NULL;

2189 
addr
 = 
	`GëProcAddªss
(
h™dÀ
, 
sym
);

2191 if(
addr
==
NULL
) {

2192 
DWORD
 
œ°Eº‹
 = 
	`GëLa°Eº‹
();

2193 if(
œ°Eº‹
 =
ERROR_PROC_NOT_FOUND
) {

2194 *
°©us
 = 
U_MISSING_RESOURCE_ERROR
;

2196 *
°©us
 = 
U_UNSUPPORTED_ERROR
;

2200  
addr
;

2201 
	}
}

2208 
U_INTERNAL
 * 
U_EXPORT2


2209 
	$u¥v_dl_›í
(c⁄° *
libName
, 
UEº‹Code
 *
°©us
) {

2210 if(
	`U_FAILURE
(*
°©us
)Ë 
NULL
;

2211 *
°©us
 = 
U_UNSUPPORTED_ERROR
;

2212  
NULL
;

2213 
	}
}

2215 
U_INTERNAL
 
U_EXPORT2


2216 
	$u¥v_dl_˛o£
(*
lib
, 
UEº‹Code
 *
°©us
) {

2217 if(
	`U_FAILURE
(*
°©us
)) ;

2218 *
°©us
 = 
U_UNSUPPORTED_ERROR
;

2220 
	}
}

2223 
U_INTERNAL
 * 
U_EXPORT2


2224 
	$u¥v_dl_sym
(*
lib
, c⁄° * 
sym
, 
UEº‹Code
 *
°©us
) {

2225 if(
	`U_FAILURE
(*
°©us
)Ë 
NULL
;

2226 *
°©us
 = 
U_UNSUPPORTED_ERROR
;

2227  
NULL
;

2228 
	}
}

2237 
U_CAPI
 
U_EXPORT2


2238 
	$__cxa_bad_ˇ°
 ()

2240 
	`ab‹t
();

2241 
	}
}

2243 
U_CAPI
 
U_EXPORT2


2244 
	$__cxa_bad_ty≥id
 ()

2246 
	`ab‹t
();

2247 
	}
}

	@putilimp.h

16 #i‚de‡
PUTILIMP_H


17 
	#PUTILIMP_H


	)

19 
	~"unicode/uty≥s.h
"

20 
	~"unicode/putû.h
"

36 
U_INTERNAL
 
UBoﬁ
 
U_EXPORT2
 
u¥v_isNaN
(
d
);

41 
U_INTERNAL
 
UBoﬁ
 
U_EXPORT2
 
u¥v_isInföôe
(
d
);

46 
U_INTERNAL
 
UBoﬁ
 
U_EXPORT2
 
u¥v_isPosôiveInföôy
(
d
);

51 
U_INTERNAL
 
UBoﬁ
 
U_EXPORT2
 
u¥v_isNeg©iveInföôy
(
d
);

56 
U_INTERNAL
 
U_EXPORT2
 
u¥v_gëNaN
();

61 
U_INTERNAL
 
U_EXPORT2
 
u¥v_gëInföôy
();

67 
U_INTERNAL
 
U_EXPORT2
 
u¥v_åunc
(
d
);

72 
U_INTERNAL
 
U_EXPORT2
 
u¥v_Êo‹
(
d
);

77 
U_INTERNAL
 
U_EXPORT2
 
u¥v_˚û
(
d
);

82 
U_INTERNAL
 
U_EXPORT2
 
u¥v_Ábs
(
d
);

87 
U_INTERNAL
 
U_EXPORT2
 
u¥v_modf
(
d
, * 
pöãgî
);

92 
U_INTERNAL
 
U_EXPORT2
 
u¥v_fmod
(
d
, 
y
);

97 
U_INTERNAL
 
U_EXPORT2
 
u¥v_pow
(
d
, 
exp⁄ít
);

102 
U_INTERNAL
 
U_EXPORT2
 
u¥v_pow10
(
öt32_t
 
exp⁄ít
);

107 
U_INTERNAL
 
U_EXPORT2
 
u¥v_fmax
(
d
, 
y
);

112 
U_INTERNAL
 
U_EXPORT2
 
u¥v_fmö
(
d
, 
y
);

117 
U_INTERNAL
 
öt32_t
 
U_EXPORT2
 
u¥v_max
(öt32_à
d
, i¡32_à
y
);

122 
U_INTERNAL
 
öt32_t
 
U_EXPORT2
 
u¥v_mö
(öt32_à
d
, i¡32_à
y
);

124 #i‡
U_IS_BIG_ENDIAN


125 
	#u¥v_isNeg©ive
(
numbî
Ë(*((sig√d *)&“umbî))<0)

	)

127 
	#u¥v_isNeg©ive
(
numbî
Ë(*((sig√d *)&“umbî)+“umbî)-1)<0)

	)

135 
U_INTERNAL
 
U_EXPORT2
 
u¥v_maxM™tisß
();

141 
U_INTERNAL
 
U_EXPORT2
 
u¥v_log
(
d
);

149 
U_INTERNAL
 
U_EXPORT2
 
u¥v_round
(
x
);

194 
U_INTERNAL
 
U_EXPORT2
 
u¥v_tz£t
();

202 
U_INTERNAL
 
öt32_t
 
U_EXPORT2
 
u¥v_timez⁄e
();

212 
U_INTERNAL
 c⁄° * 
U_EXPORT2
 
u¥v_tz«me
(
n
);

220 
U_INTERNAL
 
UD©e
 
U_EXPORT2
 
u¥v_gëUTCtime
();

229 
U_INTERNAL
 
UD©e
 
U_EXPORT2
 
u¥v_gëRawUTCtime
();

237 
U_INTERNAL
 
UBoﬁ
 
U_EXPORT2
 
u¥v_∑thIsAbsﬁuã
(c⁄° *
∑th
);

245 
U_INTERNAL
 * 
U_EXPORT2
 
u¥v_maximumPå
(*
ba£
);

261 #i‚de‡
U_MAX_PTR


262 #i‡
deföed
(
OS390
Ë&& !deföed(
_LP64
)

264 
	#U_MAX_PTR
(
ba£
Ë((*)0x7fffffff)

	)

265 #ñi‡
deföed
(
OS400
)

266 
	#U_MAX_PTR
(
ba£
Ë
	`u¥v_maximumPå
((*)ba£)

	)

267 #ñi‡
deföed
(
__GNUC__
) && __GNUC__ >= 4

275 
	#U_MAX_PTR
(
ba£
) \

276 ((*)(((
uöçå_t
)(
ba£
)+0x7fffffffu) > (uintptr_t)(base) \

277 ? ((
uöçå_t
)(
ba£
)+0x7fffffffu) \

278 : (
uöçå_t
)-1))

	)

280 
	#U_MAX_PTR
(
ba£
) \

281 ((*)(((*)(
ba£
)+0x7fffffffu) > (*)(base) \

282 ? ((*)(
ba£
)+0x7fffffffu) \

283 : (*)-1))

	)

287 #i‡
U_ENABLE_DYLOAD


294 
U_INTERNAL
 * 
U_EXPORT2
 
u¥v_dl_›í
(c⁄° *
libName
, 
UEº‹Code
 *
°©us
);

300 
U_INTERNAL
 
U_EXPORT2
 
u¥v_dl_˛o£
–*
lib
, 
UEº‹Code
 *
°©us
);

306 
U_INTERNAL
 * 
U_EXPORT2
 
u¥v_dl_sym
–*
lib
, c⁄° *
symbﬁName
, 
UEº‹Code
 *
°©us
);

	@rbbi.cpp

13 
	~<ty≥öfo
>

15 
	~"unicode/uty≥s.h
"

17 #i‡!
UCONFIG_NO_BREAK_ITERATION


19 
	~"unicode/rbbi.h
"

20 
	~"unicode/schrôî.h
"

21 
	~"unicode/uchrôî.h
"

22 
	~"unicode/ud©a.h
"

23 
	~"unicode/u˛ón.h
"

24 
	~"rbbid©a.h
"

25 
	~"rbbúb.h
"

26 
	~"cmem‹y.h
"

27 
	~"c°rög.h
"

28 
	~"umuãx.h
"

29 
	~"u˛n_cmn.h
"

30 
	~"brkíg.h
"

32 
	~"uas£π.h
"

33 
	~"uve˘‹.h
"

36 #i‡
U_LOCAL_SERVICE_HOOK


37 
	~"loˇlsvc.h
"

40 #ifde‡
RBBI_DEBUG


41 
UBoﬁ
 
	gfTø˚
 = 
FALSE
;

44 
	gU_NAMESPACE_BEGIN


47 
	#START_STATE
 1

	)

50 
	#STOP_STATE
 0

	)

53 
	$UOBJECT_DEFINE_RTTI_IMPLEMENTATION
(
RuÀBa£dBªakIãøt‹
)

64 
RuÀBa£dBªakIãøt‹
::
	$RuÀBa£dBªakIãøt‹
(
RBBID©aHódî
* 
d©a
, 
UEº‹Code
 &
°©us
)

66 
	`öô
();

67 
fD©a
 = 
√w
 
	`RBBID©aWøµî
(
d©a
, 
°©us
);

68 i‡(
	`U_FAILURE
(
°©us
)) {;}

69 if(
fD©a
 == 0) {

70 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

73 
	}
}

78 
	gRuÀBa£dBªakIãøt‹
::
	$RuÀBa£dBªakIãøt‹
(c⁄° 
RBBID©aHódî
* 
d©a
, 
ED⁄tAd›t
, 
UEº‹Code
 &
°©us
)

80 
	`öô
();

81 
fD©a
 = 
√w
 
	`RBBID©aWøµî
(
d©a
, 
RBBID©aWøµî
::
kD⁄tAd›t
, 
°©us
);

82 i‡(
	`U_FAILURE
(
°©us
)) {;}

83 if(
fD©a
 == 0) {

84 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

87 
	}
}

95 
	gRuÀBa£dBªakIãøt‹
::
	$RuÀBa£dBªakIãøt‹
(
UD©aMem‹y
* 
udm
, 
UEº‹Code
 &
°©us
)

97 
	`öô
();

98 
fD©a
 = 
√w
 
	`RBBID©aWøµî
(
udm
, 
°©us
);

99 i‡(
	`U_FAILURE
(
°©us
)) {;}

100 if(
fD©a
 == 0) {

101 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

104 
	}
}

113 
	gRuÀBa£dBªakIãøt‹
::
	$RuÀBa£dBªakIãøt‹
–c⁄° 
UnicodeSåög
 &
ruÀs
,

114 
UP¨£Eº‹
 &
∑r£Eº‹
,

115 
UEº‹Code
 &
°©us
)

117 
	`öô
();

118 i‡(
	`U_FAILURE
(
°©us
)) {;}

119 
RuÀBa£dBªakIãøt‹
 *
bi
 = (RuleBasedBreakIterator *)

120 
RBBIRuÀBuûdî
::
	`¸óãRuÀBa£dBªakIãøt‹
(
ruÀs
, &
∑r£Eº‹
, 
°©us
);

125 i‡(
	`U_SUCCESS
(
°©us
)) {

126 *
this
 = *
bi
;

127 
dñëe
 
bi
;

129 
	}
}

138 
	gRuÀBa£dBªakIãøt‹
::
	$RuÀBa£dBªakIãøt‹
() {

139 
	`öô
();

140 
	}
}

149 
	gRuÀBa£dBªakIãøt‹
::
	$RuÀBa£dBªakIãøt‹
(c⁄° 
RuÀBa£dBªakIãøt‹
& 
Ÿhî
)

150 : 
	$BªakIãøt‹
(
Ÿhî
)

152 
this
->
	`öô
();

153 *
this
 = 
Ÿhî
;

154 
	}
}

160 
	gRuÀBa£dBªakIãøt‹
::~
	$RuÀBa£dBªakIãøt‹
() {

161 i‡(
fCh¨Iãr
!=
fSCh¨Iãr
 && fCh¨Iãr!=
fDCh¨Iãr
) {

163 
dñëe
 
fCh¨Iãr
;

165 
fCh¨Iãr
 = 
NULL
;

166 
dñëe
 
fSCh¨Iãr
;

167 
fCh¨Iãr
 = 
NULL
;

168 
dñëe
 
fDCh¨Iãr
;

169 
fDCh¨Iãr
 = 
NULL
;

171 
	`uãxt_˛o£
(
fText
);

173 i‡(
fD©a
 !
NULL
) {

174 
fD©a
->
	`ªmoveRe„ªn˚
();

175 
fD©a
 = 
NULL
;

177 i‡(
fCachedBªakPosôi⁄s
) {

178 
	`u¥v_‰ì
(
fCachedBªakPosôi⁄s
);

179 
fCachedBªakPosôi⁄s
 = 
NULL
;

181 i‡(
fL™guageBªakEngöes
) {

182 
dñëe
 
fL™guageBªakEngöes
;

183 
fL™guageBªakEngöes
 = 
NULL
;

185 i‡(
fUnh™dÀdBªakEngöe
) {

186 
dñëe
 
fUnh™dÀdBªakEngöe
;

187 
fUnh™dÀdBªakEngöe
 = 
NULL
;

189 
	}
}

195 
	gRuÀBa£dBªakIãøt‹
&

196 
	gRuÀBa£dBªakIãøt‹
::
›î©‹
=(c⁄° 
RuÀBa£dBªakIãøt‹
& 
th©
) {

197 i‡(
this
 =&
th©
) {

198  *
this
;

200 
ª£t
();

201 
	gfBªakTy≥
 = 
th©
.
fBªakTy≥
;

202 i‡(
	gfL™guageBªakEngöes
 !
NULL
) {

203 
dñëe
 
fL™guageBªakEngöes
;

204 
	gfL™guageBªakEngöes
 = 
NULL
;

207 
UEº‹Code
 
	g°©us
 = 
U_ZERO_ERROR
;

208 
	gfText
 = 
uãxt_˛⁄e
(
fText
, 
th©
.fText, 
FALSE
, 
TRUE
, &
°©us
);

210 i‡(
	gfCh¨Iãr
!=
fSCh¨Iãr
 && 
fCh¨Iãr
!=
fDCh¨Iãr
) {

211 
dñëe
 
fCh¨Iãr
;

213 
	gfCh¨Iãr
 = 
NULL
;

215 i‡(
	gth©
.
	gfCh¨Iãr
 !
NULL
 ) {

219 
fCh¨Iãr
 = 
th©
.fCh¨Iãr->
˛⁄e
();

222 i‡(
	gfD©a
 !
NULL
) {

223 
fD©a
->
ªmoveRe„ªn˚
();

224 
	gfD©a
 = 
NULL
;

226 i‡(
	gth©
.
	gfD©a
 !
NULL
) {

227 
fD©a
 = 
th©
.fD©a->
addRe„ªn˚
();

230  *
	gthis
;

241 
	gRuÀBa£dBªakIãøt‹
::
	$öô
() {

242 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

243 
fBuf„rCl⁄e
 = 
FALSE
;

244 
fText
 = 
	`uãxt_›íUCh¨s
(
NULL
, NULL, 0, &
°©us
);

245 
fCh¨Iãr
 = 
NULL
;

246 
fSCh¨Iãr
 = 
NULL
;

247 
fDCh¨Iãr
 = 
NULL
;

248 
fD©a
 = 
NULL
;

249 
fLa°RuÀSètusIndex
 = 0;

250 
fLa°SètusIndexVÆid
 = 
TRUE
;

251 
fDi˘i⁄¨yCh¨Cou¡
 = 0;

252 
fBªakTy≥
 = 
UBRK_WORD
;

257 
fCachedBªakPosôi⁄s
 = 
NULL
;

258 
fL™guageBªakEngöes
 = 
NULL
;

259 
fUnh™dÀdBªakEngöe
 = 
NULL
;

260 
fNumCachedBªakPosôi⁄s
 = 0;

261 
fPosôi⁄InCache
 = 0;

263 #ifde‡
RBBI_DEBUG


264 
UBoﬁ
 
debugInôD⁄e
 = 
FALSE
;

265 i‡(
debugInôD⁄e
 =
FALSE
) {

266 *
debugEnv
 = 
	`gëív
("U_RBBIDEBUG");

267 i‡(
debugEnv
 && 
	`u¥v_°r°r
(debugEnv, "trace")) {

268 
fTø˚
 = 
TRUE
;

270 
debugInôD⁄e
 = 
TRUE
;

273 
	}
}

284 
BªakIãøt‹
*

285 
	gRuÀBa£dBªakIãøt‹
::
	$˛⁄e
() const {

286  
√w
 
	`RuÀBa£dBªakIãøt‹
(*
this
);

287 
	}
}

293 
UBoﬁ


294 
	gRuÀBa£dBªakIãøt‹
::
›î©‹
==(c⁄° 
BªakIãøt‹
& 
th©
) const {

295 i‡(
ty≥id
(*
this
Ë!ty≥id(
th©
)) {

296  
FALSE
;

299 c⁄° 
	gRuÀBa£dBªakIãøt‹
& 
	gth©2
 = (c⁄° 
RuÀBa£dBªakIãøt‹
&Ë
th©
;

301 i‡(!
uãxt_equÆs
(
fText
, 
th©2
.fText)) {

304  
	gFALSE
;

309 i‡(
	gth©2
.
	gfD©a
 =
fD©a
 ||

310 (
fD©a
 !
NULL
 && 
th©2
.fData != NULL && *that2.fData == *fData)) {

312  
TRUE
;

314  
	gFALSE
;

321 
öt32_t


322 
	gRuÀBa£dBªakIãøt‹
::
	$hashCode
() const {

323 
öt32_t
 
hash
 = 0;

324 i‡(
fD©a
 !
NULL
) {

325 
hash
 = 
fD©a
->
	`hashCode
();

327  
hash
;

328 
	}
}

331 
	gRuÀBa£dBªakIãøt‹
::
	$£tText
(
UText
 *
ut
, 
UEº‹Code
 &
°©us
) {

332 i‡(
	`U_FAILURE
(
°©us
)) {

335 
	`ª£t
();

336 
fText
 = 
	`uãxt_˛⁄e
(fText, 
ut
, 
FALSE
, 
TRUE
, &
°©us
);

344 i‡(
fDCh¨Iãr
 =
NULL
) {

345 c⁄° 
UCh¨
 
c
 = 0;

346 
fDCh¨Iãr
 = 
√w
 
	`UCh¨Ch¨a˘îIãøt‹
(&
c
, 0);

347 i‡(
fDCh¨Iãr
 =
NULL
) {

348 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

353 i‡(
fCh¨Iãr
!=
fSCh¨Iãr
 && fCh¨Iãr!=
fDCh¨Iãr
) {

355 
dñëe
 
fCh¨Iãr
;

357 
fCh¨Iãr
 = 
fDCh¨Iãr
;

359 
this
->
	`fú°
();

360 
	}
}

363 
UText
 *
	gRuÀBa£dBªakIãøt‹
::
	$gëUText
(
UText
 *
fûlIn
, 
UEº‹Code
 &
°©us
) const {

364 
UText
 *
ªsu…
 = 
	`uãxt_˛⁄e
(
fûlIn
, 
fText
, 
FALSE
, 
TRUE
, &
°©us
);

365  
ªsu…
;

366 
	}
}

373 c⁄° 
	gUnicodeSåög
&

374 
	gRuÀBa£dBªakIãøt‹
::
	$gëRuÀs
() const {

375 i‡(
fD©a
 !
NULL
) {

376  
fD©a
->
	`gëRuÀSour˚Såög
();

378 c⁄° 
UnicodeSåög
 *
s
;

379 i‡(
s
 =
NULL
) {

384 
s
 = 
√w
 
UnicodeSåög
;

386  *
s
;

388 
	}
}

397 
	gCh¨a˘îIãøt‹
&

398 
	gRuÀBa£dBªakIãøt‹
::
	$gëText
() const {

399  *
fCh¨Iãr
;

400 
	}
}

408 
	gRuÀBa£dBªakIãøt‹
::
	$ad›tText
(
Ch¨a˘îIãøt‹
* 
√wText
) {

411 i‡(
fCh¨Iãr
!=
fSCh¨Iãr
 && fCh¨Iãr!=
fDCh¨Iãr
) {

412 
dñëe
 
fCh¨Iãr
;

415 
fCh¨Iãr
 = 
√wText
;

416 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

417 
	`ª£t
();

418 i‡(
√wText
==
NULL
 ||ÇewText->
	`°¨tIndex
() != 0) {

421 
fText
 = 
	`uãxt_›íUCh¨s
(fText, 
NULL
, 0, &
°©us
);

423 
fText
 = 
	`uãxt_›íCh¨a˘îIãøt‹
(fText, 
√wText
, &
°©us
);

425 
this
->
	`fú°
();

426 
	}
}

434 
	gRuÀBa£dBªakIãøt‹
::
	$£tText
(c⁄° 
UnicodeSåög
& 
√wText
) {

435 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

436 
	`ª£t
();

437 
fText
 = 
	`uãxt_›íC⁄°UnicodeSåög
(fText, &
√wText
, &
°©us
);

443 i‡(
fSCh¨Iãr
 =
NULL
) {

444 
fSCh¨Iãr
 = 
√w
 
	`SåögCh¨a˘îIãøt‹
(
√wText
);

446 
fSCh¨Iãr
->
	`£tText
(
√wText
);

449 i‡(
fCh¨Iãr
!=
fSCh¨Iãr
 && fCh¨Iãr!=
fDCh¨Iãr
) {

451 
dñëe
 
fCh¨Iãr
;

453 
fCh¨Iãr
 = 
fSCh¨Iãr
;

455 
this
->
	`fú°
();

456 
	}
}

464 
öt32_t
 
	gRuÀBa£dBªakIãøt‹
::
	$fú°
() {

465 
	`ª£t
();

466 
fLa°RuÀSètusIndex
 = 0;

467 
fLa°SètusIndexVÆid
 = 
TRUE
;

471 
	`uãxt_£tN©iveIndex
(
fText
, 0);

473 
	}
}

479 
öt32_t
 
	gRuÀBa£dBªakIãøt‹
::
	$œ°
() {

480 
	`ª£t
();

481 i‡(
fText
 =
NULL
) {

482 
fLa°RuÀSètusIndex
 = 0;

483 
fLa°SètusIndexVÆid
 = 
TRUE
;

484  
BªakIãøt‹
::
DONE
;

487 
fLa°SètusIndexVÆid
 = 
FALSE
;

488 
öt32_t
 
pos
 = (öt32_t)
	`uãxt_«tiveLígth
(
fText
);

489 
	`uãxt_£tN©iveIndex
(
fText
, 
pos
);

490  
pos
;

491 
	}
}

502 
öt32_t
 
	gRuÀBa£dBªakIãøt‹
::
	$√xt
(
öt32_t
 
n
) {

503 
öt32_t
 
ªsu…
 = 
	`cuºít
();

504 
n
 > 0) {

505 
ªsu…
 = 
	`√xt
();

506 --
n
;

508 
n
 < 0) {

509 
ªsu…
 = 
	`¥evious
();

510 ++
n
;

512  
ªsu…
;

513 
	}
}

519 
öt32_t
 
	gRuÀBa£dBªakIãøt‹
::
	$√xt
() {

522 i‡(
fCachedBªakPosôi⁄s
 !
NULL
) {

523 i‡(
fPosôi⁄InCache
 < 
fNumCachedBªakPosôi⁄s
 - 1) {

524 ++
fPosôi⁄InCache
;

525 
öt32_t
 
pos
 = 
fCachedBªakPosôi⁄s
[
fPosôi⁄InCache
];

526 
	`uãxt_£tN©iveIndex
(
fText
, 
pos
);

527  
pos
;

530 
	`ª£t
();

534 
öt32_t
 
°¨tPos
 = 
	`cuºít
();

535 
öt32_t
 
ªsu…
 = 
	`h™dÀNext
(
fD©a
->
fF‹w¨dTabÀ
);

536 i‡(
fDi˘i⁄¨yCh¨Cou¡
 > 0) {

537 
ªsu…
 = 
	`checkDi˘i⁄¨y
(
°¨tPos
,Ñesu…, 
FALSE
);

539  
ªsu…
;

540 
	}
}

546 
öt32_t
 
	gRuÀBa£dBªakIãøt‹
::
	$¥evious
() {

547 
öt32_t
 
ªsu…
;

548 
öt32_t
 
°¨tPos
;

552 i‡(
fCachedBªakPosôi⁄s
 !
NULL
) {

553 i‡(
fPosôi⁄InCache
 > 0) {

554 --
fPosôi⁄InCache
;

557 i‡(
fPosôi⁄InCache
 <= 0) {

558 
fLa°SètusIndexVÆid
 = 
FALSE
;

560 
öt32_t
 
pos
 = 
fCachedBªakPosôi⁄s
[
fPosôi⁄InCache
];

561 
	`uãxt_£tN©iveIndex
(
fText
, 
pos
);

562  
pos
;

565 
	`ª£t
();

570 i‡(
fText
 =
NULL
 || (
°¨tPos
 = 
	`cuºít
()) == 0) {

571 
fLa°RuÀSètusIndex
 = 0;

572 
fLa°SètusIndexVÆid
 = 
TRUE
;

573  
BªakIãøt‹
::
DONE
;

576 i‡(
fD©a
->
fSa„RevTabÀ
 !
NULL
 || fD©a->
fSa„FwdTabÀ
 != NULL) {

577 
ªsu…
 = 
	`h™dÀPªvious
(
fD©a
->
fRevî£TabÀ
);

578 i‡(
fDi˘i⁄¨yCh¨Cou¡
 > 0) {

579 
ªsu…
 = 
	`checkDi˘i⁄¨y
‘esu…, 
°¨tPos
, 
TRUE
);

581  
ªsu…
;

592 
öt32_t
 
°¨t
 = 
	`cuºít
();

594 
	`UTEXT_PREVIOUS32
(
fText
);

595 
öt32_t
 
œ°Resu…
 = 
	`h™dÀPªvious
(
fD©a
->
fRevî£TabÀ
);

596 i‡(
œ°Resu…
 =
UBRK_DONE
) {

597 
œ°Resu…
 = 0;

598 
	`uãxt_£tN©iveIndex
(
fText
, 0);

600 
ªsu…
 = 
œ°Resu…
;

601 
öt32_t
 
œ°Tag
 = 0;

602 
UBoﬁ
 
bªakTagVÆid
 = 
FALSE
;

609 
ªsu…
 = 
	`√xt
();

610 i‡(
ªsu…
 =
BªakIãøt‹
::
DONE
 ||Ñesu… >
°¨t
) {

613 
œ°Resu…
 = 
ªsu…
;

614 
œ°Tag
 = 
fLa°RuÀSètusIndex
;

615 
bªakTagVÆid
 = 
TRUE
;

627 
	`uãxt_£tN©iveIndex
(
fText
, 
œ°Resu…
);

628 
fLa°RuÀSètusIndex
 = 
œ°Tag
;

629 
fLa°SètusIndexVÆid
 = 
bªakTagVÆid
;

634  
œ°Resu…
;

635 
	}
}

643 
öt32_t
 
	gRuÀBa£dBªakIãøt‹
::
	$fﬁlowög
(
öt32_t
 
off£t
) {

648 i‡(
fCachedBªakPosôi⁄s
 !
NULL
) {

649 i‡(
off£t
 >
fCachedBªakPosôi⁄s
[0]

650 && 
off£t
 < 
fCachedBªakPosôi⁄s
[
fNumCachedBªakPosôi⁄s
 - 1]) {

651 
fPosôi⁄InCache
 = 0;

653 
off£t
 >
fCachedBªakPosôi⁄s
[
fPosôi⁄InCache
]) {

654 ++
fPosôi⁄InCache
;

656 
öt32_t
 
pos
 = 
fCachedBªakPosôi⁄s
[
fPosôi⁄InCache
];

657 
	`uãxt_£tN©iveIndex
(
fText
, 
pos
);

658  
pos
;

661 
	`ª£t
();

668 
fLa°RuÀSètusIndex
 = 0;

669 
fLa°SètusIndexVÆid
 = 
TRUE
;

670 i‡(
fText
 =
NULL
 || 
off£t
 >
	`uãxt_«tiveLígth
(fText)) {

671 
	`œ°
();

672  
	`√xt
();

674 i‡(
off£t
 < 0) {

675  
	`fú°
();

682 
öt32_t
 
ªsu…
 = 0;

684 i‡(
fD©a
->
fSa„RevTabÀ
 !
NULL
) {

686 
	`uãxt_£tN©iveIndex
(
fText
, 
off£t
);

690 
	`UTEXT_NEXT32
(
fText
);

692 
	`h™dÀPªvious
(
fD©a
->
fSa„RevTabÀ
);

693 
öt32_t
 
ªsu…
 = 
	`√xt
();

694 
ªsu…
 <
off£t
) {

695 
ªsu…
 = 
	`√xt
();

697  
ªsu…
;

699 i‡(
fD©a
->
fSa„FwdTabÀ
 !
NULL
) {

701 
	`uãxt_£tN©iveIndex
(
fText
, 
off£t
);

702 
	`UTEXT_PREVIOUS32
(
fText
);

704 
	`h™dÀNext
(
fD©a
->
fSa„FwdTabÀ
);

708 
öt32_t
 
ﬁdªsu…
 = 
	`¥evious
();

709 
ﬁdªsu…
 > 
off£t
) {

710 
öt32_t
 
ªsu…
 = 
	`¥evious
();

711 i‡(
ªsu…
 <
off£t
) {

712  
ﬁdªsu…
;

714 
ﬁdªsu…
 = 
ªsu…
;

716 
öt32_t
 
ªsu…
 = 
	`√xt
();

717 i‡(
ªsu…
 <
off£t
) {

718  
	`√xt
();

720  
ªsu…
;

731 
	`uãxt_£tN©iveIndex
(
fText
, 
off£t
);

732 i‡(
off£t
==0 ||

733 (
off£t
==1 && 
	`uãxt_gëN©iveIndex
(
fText
)==0)) {

734  
	`√xt
();

736 
ªsu…
 = 
	`¥evious
();

738 
ªsu…
 !
BªakIãøt‹
::
DONE
 &&Ñesu… <
off£t
) {

739 
ªsu…
 = 
	`√xt
();

742  
ªsu…
;

743 
	}
}

751 
öt32_t
 
	gRuÀBa£dBªakIãøt‹
::
	$¥e˚dög
(
öt32_t
 
off£t
) {

754 i‡(
fCachedBªakPosôi⁄s
 !
NULL
) {

757 i‡(
off£t
 > 
fCachedBªakPosôi⁄s
[0]

758 && 
off£t
 <
fCachedBªakPosôi⁄s
[
fNumCachedBªakPosôi⁄s
 - 1]) {

759 
fPosôi⁄InCache
 = 0;

760 
fPosôi⁄InCache
 < 
fNumCachedBªakPosôi⁄s


761 && 
off£t
 > 
fCachedBªakPosôi⁄s
[
fPosôi⁄InCache
])

762 ++
fPosôi⁄InCache
;

763 --
fPosôi⁄InCache
;

766 i‡(
fPosôi⁄InCache
 <= 0) {

767 
fLa°SètusIndexVÆid
 = 
FALSE
;

769 
	`uãxt_£tN©iveIndex
(
fText
, 
fCachedBªakPosôi⁄s
[
fPosôi⁄InCache
]);

770  
fCachedBªakPosôi⁄s
[
fPosôi⁄InCache
];

773 
	`ª£t
();

780 i‡(
fText
 =
NULL
 || 
off£t
 > 
	`uãxt_«tiveLígth
(fText)) {

782  
	`œ°
();

784 i‡(
off£t
 < 0) {

785  
	`fú°
();

792 i‡(
fD©a
->
fSa„FwdTabÀ
 !
NULL
) {

794 
	`uãxt_£tN©iveIndex
(
fText
, 
off£t
);

795 
öt32_t
 
√wOff£t
 = (öt32_t)
	`UTEXT_GETNATIVEINDEX
(
fText
);

796 i‡(
√wOff£t
 !
off£t
) {

802 
	`UTEXT_NEXT32
(
fText
);

803 
off£t
 = (
öt32_t
)
	`UTEXT_GETNATIVEINDEX
(
fText
);

811 
	`UTEXT_PREVIOUS32
(
fText
);

812 
	`h™dÀNext
(
fD©a
->
fSa„FwdTabÀ
);

813 
öt32_t
 
ªsu…
 = (öt32_t)
	`UTEXT_GETNATIVEINDEX
(
fText
);

814 
ªsu…
 >
off£t
) {

815 
ªsu…
 = 
	`¥evious
();

817  
ªsu…
;

819 i‡(
fD©a
->
fSa„RevTabÀ
 !
NULL
) {

825 
	`uãxt_£tN©iveIndex
(
fText
, 
off£t
);

826 
	`UTEXT_NEXT32
(
fText
);

829 
	`h™dÀPªvious
(
fD©a
->
fSa„RevTabÀ
);

834 
öt32_t
 
ﬁdªsu…
 = 
	`√xt
();

835 
ﬁdªsu…
 < 
off£t
) {

836 
öt32_t
 
ªsu…
 = 
	`√xt
();

837 i‡(
ªsu…
 >
off£t
) {

838  
ﬁdªsu…
;

840 
ﬁdªsu…
 = 
ªsu…
;

842 
öt32_t
 
ªsu…
 = 
	`¥evious
();

843 i‡(
ªsu…
 >
off£t
) {

844  
	`¥evious
();

846  
ªsu…
;

850 
	`uãxt_£tN©iveIndex
(
fText
, 
off£t
);

851  
	`¥evious
();

852 
	}
}

861 
UBoﬁ
 
	gRuÀBa£dBªakIãøt‹
::
	$isBound¨y
(
öt32_t
 
off£t
) {

863 i‡(
off£t
 == 0) {

864 
	`fú°
();

865  
TRUE
;

868 i‡(
off£t
 =(
öt32_t
)
	`uãxt_«tiveLígth
(
fText
)) {

869 
	`œ°
();

870  
TRUE
;

874 i‡(
off£t
 < 0) {

875 
	`fú°
();

876  
FALSE
;

879 i‡(
off£t
 > 
	`uãxt_«tiveLígth
(
fText
)) {

880 
	`œ°
();

881  
FALSE
;

887 
	`uãxt_¥evious32From
(
fText
, 
off£t
);

888 
öt32_t
 
backO√
 = (öt32_t)
	`UTEXT_GETNATIVEINDEX
(
fText
);

889 
UBoﬁ
 
ªsu…
 = 
	`fﬁlowög
(
backO√
Ë=
off£t
;

890  
ªsu…
;

891 
	}
}

897 
öt32_t
 
	gRuÀBa£dBªakIãøt‹
::
	$cuºít
() const {

898 
öt32_t
 
pos
 = (öt32_t)
	`UTEXT_GETNATIVEINDEX
(
fText
);

899  
pos
;

900 
	}
}

911 
	eRBBIRunMode
 {

912 
	mRBBI_START
,

913 
	mRBBI_RUN
,

914 
	mRBBI_END


928 
öt32_t
 
	gRuÀBa£dBªakIãøt‹
::
	$h™dÀNext
(c⁄° 
RBBISèãTabÀ
 *
°©ëabÀ
) {

929 
öt32_t
 
°©e
;

930 
öt16_t
 
ˇãg‹y
 = 0;

931 
RBBIRunMode
 
mode
;

933 
RBBISèãTabÀRow
 *
row
;

934 
UCh¨32
 
c
;

935 
öt32_t
 
lookahódSètus
 = 0;

936 
öt32_t
 
lookahódTagIdx
 = 0;

937 
öt32_t
 
ªsu…
 = 0;

938 
öt32_t
 
öôülPosôi⁄
 = 0;

939 
öt32_t
 
lookahódResu…
 = 0;

940 
UBoﬁ
 
lookAhódH¨dBªak
 = (
°©ëabÀ
->
fFœgs
 & 
RBBI_LOOKAHEAD_HARD_BREAK
) != 0;

941 c⁄° *
èbÀD©a
 = 
°©ëabÀ
->
fTabÀD©a
;

942 
uöt32_t
 
èbÀRowLí
 = 
°©ëabÀ
->
fRowLí
;

944 #ifde‡
RBBI_DEBUG


945 i‡(
fTø˚
) {

946 
	`RBBIDebugPuts
("Handle NextÖos char state category");

951 
fLa°SètusIndexVÆid
 = 
TRUE
;

952 
fLa°RuÀSètusIndex
 = 0;

955 
öôülPosôi⁄
 = (
öt32_t
)
	`UTEXT_GETNATIVEINDEX
(
fText
);

956 
ªsu…
 = 
öôülPosôi⁄
;

957 
c
 = 
	`UTEXT_NEXT32
(
fText
);

958 i‡(
fD©a
 =
NULL
 || 
c
==
U_SENTINEL
) {

959  
BªakIãøt‹
::
DONE
;

963 
°©e
 = 
START_STATE
;

964 
row
 = (
RBBISèãTabÀRow
 *)

966 (
èbÀD©a
 + 
èbÀRowLí
 * 
°©e
);

969 
mode
 = 
RBBI_RUN
;

970 i‡(
°©ëabÀ
->
fFœgs
 & 
RBBI_BOF_REQUIRED
) {

971 
ˇãg‹y
 = 2;

972 
mode
 = 
RBBI_START
;

979 i‡(
c
 =
U_SENTINEL
) {

981 i‡(
mode
 =
RBBI_END
) {

985 i‡(
lookahódResu…
 > 
ªsu…
) {

989 
ªsu…
 = 
lookahódResu…
;

990 
fLa°RuÀSètusIndex
 = 
lookahódTagIdx
;

991 
lookahódSètus
 = 0;

996 
mode
 = 
RBBI_END
;

997 
ˇãg‹y
 = 1;

1005 i‡(
mode
 =
RBBI_RUN
) {

1011 
	`UTRIE_GET16
(&
fD©a
->
fTrõ
, 
c
, 
ˇãg‹y
);

1018 i‡((
ˇãg‹y
 & 0x4000) != 0) {

1019 
fDi˘i⁄¨yCh¨Cou¡
++;

1021 
ˇãg‹y
 &= ~0x4000;

1025 #ifde‡
RBBI_DEBUG


1026 i‡(
fTø˚
) {

1027 
	`RBBIDebugPrötf
(" %4ld ", 
	`uãxt_gëN©iveIndex
(
fText
));

1028 i‡(0x20<=
c
 && c<0x7f) {

1029 
	`RBBIDebugPrötf
("\"%c\" ", 
c
);

1031 
	`RBBIDebugPrötf
("%5x ", 
c
);

1033 
	`RBBIDebugPrötf
("%3d %3d\n", 
°©e
, 
ˇãg‹y
);

1039 
°©e
 = 
row
->
fNextSèã
[
ˇãg‹y
];

1040 
row
 = (
RBBISèãTabÀRow
 *)

1042 (
èbÀD©a
 + 
èbÀRowLí
 * 
°©e
);

1045 i‡(
row
->
fAc˚±ög
 == -1) {

1047 i‡(
mode
 !
RBBI_START
) {

1048 
ªsu…
 = (
öt32_t
)
	`UTEXT_GETNATIVEINDEX
(
fText
);

1050 
fLa°RuÀSètusIndex
 = 
row
->
fTagIdx
;

1053 i‡(
row
->
fLookAhód
 != 0) {

1054 i‡(
lookahódSètus
 != 0

1055 && 
row
->
fAc˚±ög
 =
lookahódSètus
) {

1057 
ªsu…
 = 
lookahódResu…
;

1058 
fLa°RuÀSètusIndex
 = 
lookahódTagIdx
;

1059 
lookahódSètus
 = 0;

1061 i‡(
lookAhódH¨dBªak
) {

1062 
	`UTEXT_SETNATIVEINDEX
(
fText
, 
ªsu…
);

1063  
ªsu…
;

1067 
c⁄töueOn
;

1070 
öt32_t
 
r
 = (öt32_t)
	`UTEXT_GETNATIVEINDEX
(
fText
);

1071 
lookahódResu…
 = 
r
;

1072 
lookahódSètus
 = 
row
->
fLookAhód
;

1073 
lookahódTagIdx
 = 
row
->
fTagIdx
;

1074 
c⁄töueOn
;

1078 i‡(
row
->
fAc˚±ög
 != 0) {

1081 
lookahódSètus
 = 0;

1084 
c⁄töueOn
:

1085 i‡(
°©e
 =
STOP_STATE
) {

1096 i‡(
mode
 =
RBBI_RUN
) {

1097 
c
 = 
	`UTEXT_NEXT32
(
fText
);

1099 i‡(
mode
 =
RBBI_START
) {

1100 
mode
 = 
RBBI_RUN
;

1112 i‡(
ªsu…
 =
öôülPosôi⁄
) {

1113 
	`UTEXT_SETNATIVEINDEX
(
fText
, 
öôülPosôi⁄
);

1114 
	`UTEXT_NEXT32
(
fText
);

1115 
ªsu…
 = (
öt32_t
)
	`UTEXT_GETNATIVEINDEX
(
fText
);

1119 
	`UTEXT_SETNATIVEINDEX
(
fText
, 
ªsu…
);

1120 #ifde‡
RBBI_DEBUG


1121 i‡(
fTø˚
) {

1122 
	`RBBIDebugPrötf
("ªsu… = %d\n\n", 
ªsu…
);

1125  
ªsu…
;

1126 
	}
}

1140 
öt32_t
 
	gRuÀBa£dBªakIãøt‹
::
	$h™dÀPªvious
(c⁄° 
RBBISèãTabÀ
 *
°©ëabÀ
) {

1141 
öt32_t
 
°©e
;

1142 
öt16_t
 
ˇãg‹y
 = 0;

1143 
RBBIRunMode
 
mode
;

1144 
RBBISèãTabÀRow
 *
row
;

1145 
UCh¨32
 
c
;

1146 
öt32_t
 
lookahódSètus
 = 0;

1147 
öt32_t
 
ªsu…
 = 0;

1148 
öt32_t
 
öôülPosôi⁄
 = 0;

1149 
öt32_t
 
lookahódResu…
 = 0;

1150 
UBoﬁ
 
lookAhódH¨dBªak
 = (
°©ëabÀ
->
fFœgs
 & 
RBBI_LOOKAHEAD_HARD_BREAK
) != 0;

1152 #ifde‡
RBBI_DEBUG


1153 i‡(
fTø˚
) {

1154 
	`RBBIDebugPuts
("Handle PreviousÖos char state category");

1162 
fLa°SètusIndexVÆid
 = 
FALSE
;

1163 
fLa°RuÀSètusIndex
 = 0;

1166 i‡(
fText
 =
NULL
 || 
fD©a
 =NULL || 
	`UTEXT_GETNATIVEINDEX
(fText)==0) {

1167  
BªakIãøt‹
::
DONE
;

1171 
öôülPosôi⁄
 = (
öt32_t
)
	`UTEXT_GETNATIVEINDEX
(
fText
);

1172 
ªsu…
 = 
öôülPosôi⁄
;

1173 
c
 = 
	`UTEXT_PREVIOUS32
(
fText
);

1176 
°©e
 = 
START_STATE
;

1177 
row
 = (
RBBISèãTabÀRow
 *)

1178 (
°©ëabÀ
->
fTabÀD©a
 + (°©ëabÀ->
fRowLí
 * 
°©e
));

1179 
ˇãg‹y
 = 3;

1180 
mode
 = 
RBBI_RUN
;

1181 i‡(
°©ëabÀ
->
fFœgs
 & 
RBBI_BOF_REQUIRED
) {

1182 
ˇãg‹y
 = 2;

1183 
mode
 = 
RBBI_START
;

1190 i‡(
c
 =
U_SENTINEL
) {

1192 i‡(
mode
 =
RBBI_END
) {

1196 i‡(
lookahódResu…
 < 
ªsu…
) {

1200 
ªsu…
 = 
lookahódResu…
;

1201 
lookahódSètus
 = 0;

1202 } i‡(
ªsu…
 =
öôülPosôi⁄
) {

1205 
	`UTEXT_SETNATIVEINDEX
(
fText
, 
öôülPosôi⁄
);

1206 
	`UTEXT_PREVIOUS32
(
fText
);

1211 
mode
 = 
RBBI_END
;

1212 
ˇãg‹y
 = 1;

1220 i‡(
mode
 =
RBBI_RUN
) {

1226 
	`UTRIE_GET16
(&
fD©a
->
fTrõ
, 
c
, 
ˇãg‹y
);

1233 i‡((
ˇãg‹y
 & 0x4000) != 0) {

1234 
fDi˘i⁄¨yCh¨Cou¡
++;

1236 
ˇãg‹y
 &= ~0x4000;

1240 #ifde‡
RBBI_DEBUG


1241 i‡(
fTø˚
) {

1242 
	`RBBIDebugPrötf
(" %4d ", (
öt32_t
)
	`uãxt_gëN©iveIndex
(
fText
));

1243 i‡(0x20<=
c
 && c<0x7f) {

1244 
	`RBBIDebugPrötf
("\"%c\" ", 
c
);

1246 
	`RBBIDebugPrötf
("%5x ", 
c
);

1248 
	`RBBIDebugPrötf
("%3d %3d\n", 
°©e
, 
ˇãg‹y
);

1254 
°©e
 = 
row
->
fNextSèã
[
ˇãg‹y
];

1255 
row
 = (
RBBISèãTabÀRow
 *)

1256 (
°©ëabÀ
->
fTabÀD©a
 + (°©ëabÀ->
fRowLí
 * 
°©e
));

1258 i‡(
row
->
fAc˚±ög
 == -1) {

1260 
ªsu…
 = (
öt32_t
)
	`UTEXT_GETNATIVEINDEX
(
fText
);

1263 i‡(
row
->
fLookAhód
 != 0) {

1264 i‡(
lookahódSètus
 != 0

1265 && 
row
->
fAc˚±ög
 =
lookahódSètus
) {

1267 
ªsu…
 = 
lookahódResu…
;

1268 
lookahódSètus
 = 0;

1270 i‡(
lookAhódH¨dBªak
) {

1271 
	`UTEXT_SETNATIVEINDEX
(
fText
, 
ªsu…
);

1272  
ªsu…
;

1276 
c⁄töueOn
;

1279 
öt32_t
 
r
 = (öt32_t)
	`UTEXT_GETNATIVEINDEX
(
fText
);

1280 
lookahódResu…
 = 
r
;

1281 
lookahódSètus
 = 
row
->
fLookAhód
;

1282 
c⁄töueOn
;

1286 i‡(
row
->
fAc˚±ög
 != 0) {

1289 
lookahódSètus
 = 0;

1292 
c⁄töueOn
:

1293 i‡(
°©e
 =
STOP_STATE
) {

1304 i‡(
mode
 =
RBBI_RUN
) {

1305 
c
 = 
	`UTEXT_PREVIOUS32
(
fText
);

1307 i‡(
mode
 =
RBBI_START
) {

1308 
mode
 = 
RBBI_RUN
;

1318 i‡(
ªsu…
 =
öôülPosôi⁄
) {

1319 
	`UTEXT_SETNATIVEINDEX
(
fText
, 
öôülPosôi⁄
);

1320 
	`UTEXT_PREVIOUS32
(
fText
);

1321 
ªsu…
 = (
öt32_t
)
	`UTEXT_GETNATIVEINDEX
(
fText
);

1325 
	`UTEXT_SETNATIVEINDEX
(
fText
, 
ªsu…
);

1326 #ifde‡
RBBI_DEBUG


1327 i‡(
fTø˚
) {

1328 
	`RBBIDebugPrötf
("ªsu… = %d\n\n", 
ªsu…
);

1331  
ªsu…
;

1332 
	}
}

1336 
	gRuÀBa£dBªakIãøt‹
::
	$ª£t
()

1338 i‡(
fCachedBªakPosôi⁄s
) {

1339 
	`u¥v_‰ì
(
fCachedBªakPosôi⁄s
);

1341 
fCachedBªakPosôi⁄s
 = 
NULL
;

1342 
fNumCachedBªakPosôi⁄s
 = 0;

1343 
fDi˘i⁄¨yCh¨Cou¡
 = 0;

1344 
fPosôi⁄InCache
 = 0;

1345 
	}
}

1362 
	gRuÀBa£dBªakIãøt‹
::
	$makeRuÀSètusVÆid
() {

1363 i‡(
fLa°SètusIndexVÆid
 =
FALSE
) {

1365 i‡(
fText
 =
NULL
 || 
	`cuºít
() == 0) {

1367 
fLa°RuÀSètusIndex
 = 0;

1368 
fLa°SètusIndexVÆid
 = 
TRUE
;

1371 
öt32_t
 
∑
 = 
	`cuºít
();

1372 
	`¥evious
();

1373 i‡(
fNumCachedBªakPosôi⁄s
 > 0) {

1374 
	`ª£t
();

1376 
öt32_t
 
pb
 = 
	`√xt
();

1377 i‡(
∑
 !
pb
) {

1380 
	`U_ASSERT
(
∑
 =
pb
);

1384 
	`U_ASSERT
(
fLa°RuÀSètusIndex
 >0 && fLa°RuÀSètusIndex < 
fD©a
->
fSètusMaxIdx
);

1385 
	}
}

1388 
öt32_t
 
	gRuÀBa£dBªakIãøt‹
::
	$gëRuÀSètus
() const {

1389 
RuÀBa£dBªakIãøt‹
 *
n⁄C⁄°This
 = (RuÀBa£dBªakIãøt‹ *)
this
;

1390 
n⁄C⁄°This
->
	`makeRuÀSètusVÆid
();

1395 
öt32_t
 
idx
 = 
fLa°RuÀSètusIndex
 + 
fD©a
->
fRuÀSètusTabÀ
[fLastRuleStatusIndex];

1396 
öt32_t
 
ègVÆ
 = 
fD©a
->
fRuÀSètusTabÀ
[
idx
];

1398  
ègVÆ
;

1399 
	}
}

1404 
öt32_t
 
	gRuÀBa£dBªakIãøt‹
::
	$gëRuÀSètusVec
(

1405 
öt32_t
 *
fûlInVec
, i¡32_à
ˇ∑côy
, 
UEº‹Code
 &
°©us
)

1407 i‡(
	`U_FAILURE
(
°©us
)) {

1411 
RuÀBa£dBªakIãøt‹
 *
n⁄C⁄°This
 = (RuÀBa£dBªakIãøt‹ *)
this
;

1412 
n⁄C⁄°This
->
	`makeRuÀSètusVÆid
();

1413 
öt32_t
 
numVÆs
 = 
fD©a
->
fRuÀSètusTabÀ
[
fLa°RuÀSètusIndex
];

1414 
öt32_t
 
numVÆsToC›y
 = 
numVÆs
;

1415 i‡(
numVÆs
 > 
ˇ∑côy
) {

1416 
°©us
 = 
U_BUFFER_OVERFLOW_ERROR
;

1417 
numVÆsToC›y
 = 
ˇ∑côy
;

1419 
i
;

1420 
i
=0; i<
numVÆsToC›y
; i++) {

1421 
fûlInVec
[
i
] = 
fD©a
->
fRuÀSètusTabÀ
[
fLa°RuÀSètusIndex
 + i + 1];

1423  
numVÆs
;

1424 
	}
}

1435 c⁄° 
uöt8_t
 *
	gRuÀBa£dBªakIãøt‹
::
	$gëBö¨yRuÀs
(
uöt32_t
 &
Àngth
) {

1436 c⁄° 
uöt8_t
 *
ªtPå
 = 
NULL
;

1437 
Àngth
 = 0;

1439 i‡(
fD©a
 !
NULL
) {

1440 
ªtPå
 = (c⁄° 
uöt8_t
 *)
fD©a
->
fHódî
;

1441 
Àngth
 = 
fD©a
->
fHódî
->
fLígth
;

1443  
ªtPå
;

1444 
	}
}

1459 
BªakIãøt‹
 * 
	gRuÀBa£dBªakIãøt‹
::
	$¸óãBuf„rCl⁄e
(*
°ackBuf„r
,

1460 
öt32_t
 &
buf„rSize
,

1461 
UEº‹Code
 &
°©us
)

1463 i‡(
	`U_FAILURE
(
°©us
)){

1464  
NULL
;

1471 i‡(
buf„rSize
 == 0) {

1472 
buf„rSize
 = (
RuÀBa£dBªakIãøt‹
Ë+ 
	`U_ALIGNMENT_OFFSET_UP
(0);

1473  
NULL
;

1481 *
buf
 = (*)
°ackBuf„r
;

1482 
uöt32_t
 
s
 = 
buf„rSize
;

1484 i‡(
°ackBuf„r
 =
NULL
) {

1485 
s
 = 0;

1487 i‡(
	`U_ALIGNMENT_OFFSET
(
°ackBuf„r
) != 0) {

1488 
uöt32_t
 
off£tUp
 = (uöt32_t)
	`U_ALIGNMENT_OFFSET_UP
(
buf
);

1489 
s
 -
off£tUp
;

1490 
buf
 +
off£tUp
;

1492 i‡(
s
 < (
RuÀBa£dBªakIãøt‹
)) {

1496 
RuÀBa£dBªakIãøt‹
 *
˛⁄edBI
 = 
√w
 
	`RuÀBa£dBªakIãøt‹
(*
this
);

1497 i‡(
˛⁄edBI
 == 0) {

1498 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

1500 
°©us
 = 
U_SAFECLONE_ALLOCATED_WARNING
;

1502  
˛⁄edBI
;

1515 
RuÀBa£dBªakIãøt‹
 
loˇlIãr
;

1516 
RuÀBa£dBªakIãøt‹
 *
˛⁄e
 = (RuÀBa£dBªakIãøt‹ *)
buf
;

1517 
	`u¥v_mem˝y
(
˛⁄e
, &
loˇlIãr
, (
RuÀBa£dBªakIãøt‹
));

1518 
˛⁄e
->
	`öô
();

1519 *
˛⁄e
 = *
this
;

1520 
˛⁄e
->
fBuf„rCl⁄e
 = 
TRUE
;

1522  
˛⁄e
;

1523 
	}
}

1554 
öt32_t
 
	gRuÀBa£dBªakIãøt‹
::
	$checkDi˘i⁄¨y
(
öt32_t
 
°¨tPos
,

1555 
öt32_t
 
ídPos
,

1556 
UBoﬁ
 
ªvî£
) {

1558 
uöt32_t
 
di˘i⁄¨yCou¡
 = 
fDi˘i⁄¨yCh¨Cou¡
;

1559 
	`ª£t
();

1561 i‡(
di˘i⁄¨yCou¡
 <1 || (
ídPos
 - 
°¨tPos
) <= 1) {

1562  (
ªvî£
 ? 
°¨tPos
 : 
ídPos
);

1576 c⁄° *
uãxt_utf8Funcs
;

1577 i‡(
uãxt_utf8Funcs
 =
NULL
) {

1579 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

1580 
UText
 
ãmpUText
 = 
UTEXT_INITIALIZER
;

1581 
	`uãxt_›íUTF8
(&
ãmpUText
, 
NULL
, 0, &
°©us
);

1582 
uãxt_utf8Funcs
 = 
ãmpUText
.
pFuncs
;

1583 
	`uãxt_˛o£
(&
ãmpUText
);

1585 i‡(
fText
->
pFuncs
 =
uãxt_utf8Funcs
) {

1586  (
ªvî£
 ? 
°¨tPos
 : 
ídPos
);

1592 
	`uãxt_£tN©iveIndex
(
fText
, 
ªvî£
 ? 
ídPos
 : 
°¨tPos
);

1593 i‡(
ªvî£
) {

1594 
	`UTEXT_PREVIOUS32
(
fText
);

1597 
öt32_t
 
øngeSèπ
 = 
°¨tPos
;

1598 
öt32_t
 
øngeEnd
 = 
ídPos
;

1600 
uöt16_t
 
ˇãg‹y
;

1601 
öt32_t
 
cuºít
;

1602 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

1603 
USèck
 
	`bªaks
(
°©us
);

1604 
öt32_t
 
foundBªakCou¡
 = 0;

1605 
UCh¨32
 
c
 = 
	`uãxt_cuºít32
(
fText
);

1607 
	`UTRIE_GET16
(&
fD©a
->
fTrõ
, 
c
, 
ˇãg‹y
);

1614 i‡(
ˇãg‹y
 & 0x4000) {

1615 i‡(
ªvî£
) {

1617 
	`uãxt_√xt32
(
fText
);

1618 
c
 = 
	`uãxt_cuºít32
(
fText
);

1619 
	`UTRIE_GET16
(&
fD©a
->
fTrõ
, 
c
, 
ˇãg‹y
);

1620 } 
c
 !
U_SENTINEL
 && (
ˇãg‹y
 & 0x4000));

1622 
øngeEnd
 = (
öt32_t
)
	`UTEXT_GETNATIVEINDEX
(
fText
);

1623 i‡(
c
 =
U_SENTINEL
) {

1626 
c
 = 
	`UTEXT_PREVIOUS32
(
fText
);

1629 
c
 = 
	`UTEXT_PREVIOUS32
(
fText
);

1634 
c
 = 
	`UTEXT_PREVIOUS32
(
fText
);

1635 
	`UTRIE_GET16
(&
fD©a
->
fTrõ
, 
c
, 
ˇãg‹y
);

1637 
c
 !
U_SENTINEL
 && (
ˇãg‹y
 & 0x4000));

1639 i‡(
c
 =
U_SENTINEL
) {

1641 
c
 = 
	`uãxt_cuºít32
(
fText
);

1644 
	`uãxt_√xt32
(
fText
);

1645 
c
 = 
	`uãxt_cuºít32
(
fText
);

1647 
øngeSèπ
 = (
öt32_t
)
	`UTEXT_GETNATIVEINDEX
(
fText
);;

1649 
	`UTRIE_GET16
(&
fD©a
->
fTrõ
, 
c
, 
ˇãg‹y
);

1657 i‡(
ªvî£
) {

1658 
	`uãxt_£tN©iveIndex
(
fText
, 
øngeSèπ
);

1659 
c
 = 
	`uãxt_cuºít32
(
fText
);

1660 
	`UTRIE_GET16
(&
fD©a
->
fTrõ
, 
c
, 
ˇãg‹y
);

1662 
	`U_SUCCESS
(
°©us
)) {

1663 (
cuºít
 = (
öt32_t
)
	`UTEXT_GETNATIVEINDEX
(
fText
)Ë< 
øngeEnd
 && (
ˇãg‹y
 & 0x4000) == 0) {

1664 
	`uãxt_√xt32
(
fText
);

1665 
c
 = 
	`uãxt_cuºít32
(
fText
);

1666 
	`UTRIE_GET16
(&
fD©a
->
fTrõ
, 
c
, 
ˇãg‹y
);

1668 i‡(
cuºít
 >
øngeEnd
) {

1674 c⁄° 
L™guageBªakEngöe
 *
lbe
 = 
	`gëL™guageBªakEngöe
(
c
);

1678 i‡(
lbe
 !
NULL
) {

1679 
foundBªakCou¡
 +
lbe
->
	`födBªaks
(
fText
, 
øngeSèπ
, 
øngeEnd
, 
FALSE
, 
fBªakTy≥
, 
bªaks
);

1683 
c
 = 
	`uãxt_cuºít32
(
fText
);

1684 
	`UTRIE_GET16
(&
fD©a
->
fTrõ
, 
c
, 
ˇãg‹y
);

1689 i‡(
foundBªakCou¡
 > 0) {

1690 
öt32_t
 
tŸÆBªaks
 = 
foundBªakCou¡
;

1691 i‡(
°¨tPos
 < 
bªaks
.
	`ñemítAti
(0)) {

1692 
tŸÆBªaks
 += 1;

1694 i‡(
ídPos
 > 
bªaks
.
	`≥eki
()) {

1695 
tŸÆBªaks
 += 1;

1697 
fCachedBªakPosôi⁄s
 = (
öt32_t
 *)
	`u¥v_mÆloc
(
tŸÆBªaks
 * (int32_t));

1698 i‡(
fCachedBªakPosôi⁄s
 !
NULL
) {

1699 
öt32_t
 
out
 = 0;

1700 
fNumCachedBªakPosôi⁄s
 = 
tŸÆBªaks
;

1701 i‡(
°¨tPos
 < 
bªaks
.
	`ñemítAti
(0)) {

1702 
fCachedBªakPosôi⁄s
[
out
++] = 
°¨tPos
;

1704 
öt32_t
 
i
 = 0; i < 
foundBªakCou¡
; ++i) {

1705 
fCachedBªakPosôi⁄s
[
out
++] = 
bªaks
.
	`ñemítAti
(
i
);

1707 i‡(
ídPos
 > 
fCachedBªakPosôi⁄s
[
out
-1]) {

1708 
fCachedBªakPosôi⁄s
[
out
] = 
ídPos
;

1713 i‡(
ªvî£
) {

1714  
	`¥e˚dög
(
ídPos
 - 1);

1717  
	`fﬁlowög
(
°¨tPos
);

1725 
	`uãxt_£tN©iveIndex
(
fText
, 
ªvî£
 ? 
°¨tPos
 : 
ídPos
);

1726  (
ªvî£
 ? 
°¨tPos
 : 
ídPos
);

1727 
	}
}

1729 
U_NAMESPACE_END


1733 
U_NAMESPACE_QUALIFIER
 
USèck
 *
	ggL™guageBªakFa˘‹õs
 = 
NULL
;

1738 
U_CDECL_BEGIN


1739 
UBoﬁ
 
U_CALLCONV
 
	$bªakôî©‹_˛ónup_di˘
() {

1740 i‡(
gL™guageBªakFa˘‹õs
) {

1741 
dñëe
 
gL™guageBªakFa˘‹õs
;

1742 
gL™guageBªakFa˘‹õs
 = 
NULL
;

1744  
TRUE
;

1745 
	}
}

1746 
U_CDECL_END


1748 
U_CDECL_BEGIN


1749 
U_CALLCONV
 
	$_dñëeFa˘‹y
(*
obj
) {

1750 
	`dñëe
 (
U_NAMESPACE_QUALIFIER
 
L™guageBªakFa˘‹y
 *Ë
obj
;

1751 
	}
}

1752 
U_CDECL_END


1753 
U_NAMESPACE_BEGIN


1755 c⁄° 
L™guageBªakEngöe
*

1756 
	$gëL™guageBªakEngöeFromFa˘‹y
(
UCh¨32
 
c
, 
öt32_t
 
bªakTy≥
)

1758 
UBoﬁ
 
√edsInô
;

1759 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

1760 
	`UMTX_CHECK
(
NULL
, (
UBoﬁ
)(
gL™guageBªakFa˘‹õs
 =NULL), 
√edsInô
);

1762 i‡(
√edsInô
) {

1763 
USèck
 *
Á˘‹õs
 = 
√w
 
	`USèck
(
_dñëeFa˘‹y
, 
NULL
, 
°©us
);

1764 i‡(
Á˘‹õs
 !
NULL
 && 
	`U_SUCCESS
(
°©us
)) {

1765 
ICUL™guageBªakFa˘‹y
 *
buûtIn
 = 
√w
 
	`ICUL™guageBªakFa˘‹y
(
°©us
);

1766 
Á˘‹õs
->
	`push
(
buûtIn
, 
°©us
);

1767 #ifde‡
U_LOCAL_SERVICE_HOOK


1768 
L™guageBªakFa˘‹y
 *
exåa
 = (L™guageBªakFa˘‹y *)
	`u¥v_svc_hook
("œnguageBªakFa˘‹y", &
°©us
);

1769 i‡(
exåa
 !
NULL
) {

1770 
Á˘‹õs
->
	`push
(
exåa
, 
°©us
);

1774 
	`umtx_lock
(
NULL
);

1775 i‡(
gL™guageBªakFa˘‹õs
 =
NULL
) {

1776 
gL™guageBªakFa˘‹õs
 = 
Á˘‹õs
;

1777 
Á˘‹õs
 = 
NULL
;

1778 
	`u˛n_comm⁄_ªgi°îCÀ™up
(
UCLN_COMMON_BREAKITERATOR_DICT
, 
bªakôî©‹_˛ónup_di˘
);

1780 
	`umtx_u∆ock
(
NULL
);

1781 
dñëe
 
Á˘‹õs
;

1784 i‡(
gL™guageBªakFa˘‹õs
 =
NULL
) {

1785  
NULL
;

1788 
öt32_t
 
i
 = 
gL™guageBªakFa˘‹õs
->
	`size
();

1789 c⁄° 
L™guageBªakEngöe
 *
lbe
 = 
NULL
;

1790 --
i
 >= 0) {

1791 
L™guageBªakFa˘‹y
 *
Á˘‹y
 = (L™guageBªakFa˘‹y *)(
gL™guageBªakFa˘‹õs
->
	`ñemítAt
(
i
));

1792 
lbe
 = 
Á˘‹y
->
	`gëEngöeF‹
(
c
, 
bªakTy≥
);

1793 i‡(
lbe
 !
NULL
) {

1797  
lbe
;

1798 
	}
}

1807 c⁄° 
L™guageBªakEngöe
 *

1808 
	gRuÀBa£dBªakIãøt‹
::
	$gëL™guageBªakEngöe
(
UCh¨32
 
c
) {

1809 c⁄° 
L™guageBªakEngöe
 *
lbe
 = 
NULL
;

1810 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

1812 i‡(
fL™guageBªakEngöes
 =
NULL
) {

1813 
fL™guageBªakEngöes
 = 
√w
 
	`USèck
(
°©us
);

1814 i‡(
fL™guageBªakEngöes
 =
NULL
 || 
	`U_FAILURE
(
°©us
)) {

1815 
dñëe
 
fL™guageBªakEngöes
;

1816 
fL™guageBªakEngöes
 = 0;

1817  
NULL
;

1821 
öt32_t
 
i
 = 
fL™guageBªakEngöes
->
	`size
();

1822 --
i
 >= 0) {

1823 
lbe
 = (c⁄° 
L™guageBªakEngöe
 *)(
fL™guageBªakEngöes
->
	`ñemítAt
(
i
));

1824 i‡(
lbe
->
	`h™dÀs
(
c
, 
fBªakTy≥
)) {

1825  
lbe
;

1831 
lbe
 = 
	`gëL™guageBªakEngöeFromFa˘‹y
(
c
, 
fBªakTy≥
);

1834 i‡(
lbe
 !
NULL
) {

1835 
fL™guageBªakEngöes
->
	`push
((*)
lbe
, 
°©us
);

1838  
lbe
;

1843 i‡(
fUnh™dÀdBªakEngöe
 =
NULL
) {

1844 
fUnh™dÀdBªakEngöe
 = 
√w
 
	`Unh™dÀdEngöe
(
°©us
);

1845 i‡(
	`U_SUCCESS
(
°©us
Ë&& 
fUnh™dÀdBªakEngöe
 =
NULL
) {

1846 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

1850 
fL™guageBªakEngöes
->
	`ö£πEÀmítAt
(
fUnh™dÀdBªakEngöe
, 0, 
°©us
);

1852 i‡(
	`U_FAILURE
(
°©us
)) {

1853 
dñëe
 
fUnh™dÀdBªakEngöe
;

1854 
fUnh™dÀdBªakEngöe
 = 0;

1855  
NULL
;

1861 
fUnh™dÀdBªakEngöe
->
	`h™dÀCh¨a˘î
(
c
, 
fBªakTy≥
);

1863  
fUnh™dÀdBªakEngöe
;

1864 
	}
}

1872 
	gRuÀBa£dBªakIãøt‹
::
	$£tBªakTy≥
(
öt32_t
 
ty≥
) {

1873 
fBªakTy≥
 = 
ty≥
;

1874 
	`ª£t
();

1875 
	}
}

1877 
	gU_NAMESPACE_END


	@rbbidata.cpp

8 
	~"unicode/uty≥s.h
"

10 #i‡!
UCONFIG_NO_BREAK_ITERATION


12 
	~"unicode/uty≥s.h
"

13 
	~"rbbid©a.h
"

14 
	~"rbbúb.h
"

15 
	~"uåõ.h
"

16 
	~"ud©amem.h
"

17 
	~"cmem‹y.h
"

18 
	~"c°rög.h
"

19 
	~"umuãx.h
"

21 
	~"uas£π.h
"

29 
U_CDECL_BEGIN


30 
öt32_t
 
U_CALLCONV


31 
	$gëFﬁdögOff£t
(
uöt32_t
 
d©a
) {

33 if(
d©a
&0x8000) {

34  (
öt32_t
)(
d©a
&0x7fff);

38 
	}
}

39 
U_CDECL_END


41 
U_NAMESPACE_BEGIN


48 
	gRBBID©aWøµî
::
	$RBBID©aWøµî
(c⁄° 
RBBID©aHódî
 *
d©a
, 
UEº‹Code
 &
°©us
) {

49 
	`öô
(
d©a
, 
°©us
);

50 
	}
}

52 
	gRBBID©aWøµî
::
	$RBBID©aWøµî
(c⁄° 
RBBID©aHódî
 *
d©a
, 
ED⁄tAd›t
, 
UEº‹Code
 &
°©us
) {

53 
	`öô
(
d©a
, 
°©us
);

54 
fD⁄tFªeD©a
 = 
TRUE
;

55 
	}
}

57 
	gRBBID©aWøµî
::
	$RBBID©aWøµî
(
UD©aMem‹y
* 
udm
, 
UEº‹Code
 &
°©us
) {

58 c⁄° 
RBBID©aHódî
 *
d
 = (const RBBIDataHeader *)

61 ((*)(
udm
->
pHódî
Ë+ udm->pHódî->
d©aHódî
.
hódîSize
);

62 
	`öô
(
d
, 
°©us
);

63 
fUD©aMem
 = 
udm
;

64 
	}
}

72 
	gRBBID©aWøµî
::
	$öô
(c⁄° 
RBBID©aHódî
 *
d©a
, 
UEº‹Code
 &
°©us
) {

73 i‡(
	`U_FAILURE
(
°©us
)) {

76 
fHódî
 = 
d©a
;

77 i‡(
fHódî
->
fMagic
 !0xb1a0 || fHódî->
fF‹m©Vîsi⁄
[0] != 3)

79 
°©us
 = 
U_INVALID_FORMAT_ERROR
;

86 
fD⁄tFªeD©a
 = 
FALSE
;

87 
fUD©aMem
 = 
NULL
;

88 
fRevî£TabÀ
 = 
NULL
;

89 
fSa„FwdTabÀ
 = 
NULL
;

90 
fSa„RevTabÀ
 = 
NULL
;

91 i‡(
d©a
->
fFTabÀLí
 != 0) {

92 
fF‹w¨dTabÀ
 = (
RBBISèãTabÀ
 *)((*)
d©a
 + 
fHódî
->
fFTabÀ
);

94 i‡(
d©a
->
fRTabÀLí
 != 0) {

95 
fRevî£TabÀ
 = (
RBBISèãTabÀ
 *)((*)
d©a
 + 
fHódî
->
fRTabÀ
);

97 i‡(
d©a
->
fSFTabÀLí
 != 0) {

98 
fSa„FwdTabÀ
 = (
RBBISèãTabÀ
 *)((*)
d©a
 + 
fHódî
->
fSFTabÀ
);

100 i‡(
d©a
->
fSRTabÀLí
 != 0) {

101 
fSa„RevTabÀ
 = (
RBBISèãTabÀ
 *)((*)
d©a
 + 
fHódî
->
fSRTabÀ
);

105 
	`uåõ_un£rülize
(&
fTrõ
,

106 (
uöt8_t
 *)
d©a
 + 
fHódî
->
fTrõ
,

107 
fHódî
->
fTrõLí
,

108 &
°©us
);

109 i‡(
	`U_FAILURE
(
°©us
)) {

112 
fTrõ
.
gëFﬁdögOff£t
=getFoldingOffset;

115 
fRuÀSour˚
 = (
UCh¨
 *)((*)
d©a
 + 
fHódî
->fRuleSource);

116 
fRuÀSåög
.
	`£tTo
(
TRUE
, 
fRuÀSour˚
, -1);

117 
	`U_ASSERT
(
d©a
->
fRuÀSour˚Lí
 > 0);

119 
fRuÀSètusTabÀ
 = (
öt32_t
 *)((*)
d©a
 + 
fHódî
->
fSètusTabÀ
);

120 
fSètusMaxIdx
 = 
d©a
->
fSètusTabÀLí
 / (
öt32_t
);

122 
fRefCou¡
 = 1;

124 #ifde‡
RBBI_DEBUG


125 *
debugEnv
 = 
	`gëív
("U_RBBIDEBUG");

126 i‡(
debugEnv
 && 
	`u¥v_°r°r
(debugEnv, "d©a")Ë{
this
->
	`¥ötD©a
();}

128 
	}
}

136 
	gRBBID©aWøµî
::~
	$RBBID©aWøµî
() {

137 
	`U_ASSERT
(
fRefCou¡
 == 0);

138 i‡(
fUD©aMem
) {

139 
	`ud©a_˛o£
(
fUD©aMem
);

140 } i‡(!
fD⁄tFªeD©a
) {

141 
	`u¥v_‰ì
((*)
fHódî
);

143 
	}
}

157 
UBoﬁ
 
	gRBBID©aWøµî
::
›î©‹
 ==(c⁄° 
RBBID©aWøµî
 &
Ÿhî
) const {

158 i‡(
fHódî
 =
Ÿhî
.fHeader) {

159  
TRUE
;

161 i‡(
	gfHódî
->
	gfLígth
 !
Ÿhî
.
fHódî
->
fLígth
) {

162  
FALSE
;

164 i‡(
u¥v_memcmp
(
fHódî
, 
Ÿhî
.fHódî, fHódî->
fLígth
) == 0) {

165  
TRUE
;

167  
	gFALSE
;

170 
öt32_t
 
	gRBBID©aWøµî
::
	$hashCode
() {

171  
fHódî
->
fFTabÀLí
;

172 
	}
}

183 
	gRBBID©aWøµî
::
	$ªmoveRe„ªn˚
() {

184 i‡(
	`umtx_©omic_dec
(&
fRefCou¡
) == 0) {

185 
dñëe
 
this
;

187 
	}
}

190 
RBBID©aWøµî
 *
	gRBBID©aWøµî
::
	$addRe„ªn˚
() {

191 
	`umtx_©omic_öc
(&
fRefCou¡
);

192  
this
;

193 
	}
}

202 c⁄° 
	gUnicodeSåög
 &
	gRBBID©aWøµî
::
	$gëRuÀSour˚Såög
() const {

203  
fRuÀSåög
;

204 
	}
}

212 #ifde‡
RBBI_DEBUG


213 
	gRBBID©aWøµî
::
	$¥ötTabÀ
(c⁄° *
hódög
, c⁄° 
RBBISèãTabÀ
 *
èbÀ
) {

214 
uöt32_t
 
c
;

215 
uöt32_t
 
s
;

217 
	`RBBIDebugPrötf
(" %s\n", 
hódög
);

219 
	`RBBIDebugPrötf
("State | Acc LA TagIx");

220 
c
=0; c<
fHódî
->
fC©Cou¡
; c++Ë{
	`RBBIDebugPrötf
("%3d ", c);}

221 
	`RBBIDebugPrötf
("\n------|---------------"); 
c
=0;c<
fHódî
->
fC©Cou¡
; c++) {

222 
	`RBBIDebugPrötf
("----");

224 
	`RBBIDebugPrötf
("\n");

226 i‡(
èbÀ
 =
NULL
) {

227 
	`RBBIDebugPrötf
(" N U L L T A B L E\n\n");

230 
s
=0; s<
èbÀ
->
fNumSèãs
; s++) {

231 
RBBISèãTabÀRow
 *
row
 = (RBBIStateTableRow *)

232 (
èbÀ
->
fTabÀD©a
 + (èbÀ->
fRowLí
 * 
s
));

233 
	`RBBIDebugPrötf
("%4d | %3d %3d %3d ", 
s
, 
row
->
fAc˚±ög
,Ñow->
fLookAhód
,Ñow->
fTagIdx
);

234 
c
=0; c<
fHódî
->
fC©Cou¡
; c++) {

235 
	`RBBIDebugPrötf
("%3d ", 
row
->
fNextSèã
[
c
]);

237 
	`RBBIDebugPrötf
("\n");

239 
	`RBBIDebugPrötf
("\n");

240 
	}
}

244 #ifde‡
RBBI_DEBUG


245 
	gRBBID©aWøµî
::
	$¥ötD©a
() {

246 
	`RBBIDebugPrötf
("RBBI D©®© %p\n", (*)
fHódî
);

247 
	`RBBIDebugPrötf
(" Vîsi⁄ = {%d %d %d %d}\n", 
fHódî
->
fF‹m©Vîsi⁄
[0], fHeader->fFormatVersion[1],

248 
fHódî
->
fF‹m©Vîsi⁄
[2], fHeader->fFormatVersion[3]);

249 
	`RBBIDebugPrötf
("ÅŸÆÜígth o‡d©® = %d\n", 
fHódî
->
fLígth
);

250 
	`RBBIDebugPrötf
("Çumbî o‡ch¨a˘î c©eg‹õ†%d\n\n", 
fHódî
->
fC©Cou¡
);

252 
	`¥ötTabÀ
("F‹w¨d Sèã Tønsôi⁄ TabÀ", 
fF‹w¨dTabÀ
);

253 
	`¥ötTabÀ
("Revî£ Sèã Tønsôi⁄ TabÀ", 
fRevî£TabÀ
);

254 
	`¥ötTabÀ
("Sa„ F‹w¨d Sèã Tønsôi⁄ TabÀ", 
fSa„FwdTabÀ
);

255 
	`¥ötTabÀ
("Sa„ Revî£ Sèã Tønsôi⁄ TabÀ", 
fSa„RevTabÀ
);

257 
	`RBBIDebugPrötf
("\nOrignal Rules source:\n");

258 
öt32_t
 
c
=0; 
fRuÀSour˚
[c] != 0; c++) {

259 
	`RBBIDebugPrötf
("%c", 
fRuÀSour˚
[
c
]);

261 
	`RBBIDebugPrötf
("\n\n");

262 
	}
}

266 
U_NAMESPACE_END


267 
U_NAMESPACE_USE


275 
U_CAPI
 
öt32_t
 
U_EXPORT2


276 
	$ubrk_sw≠
(c⁄° 
UD©aSw≠≥r
 *
ds
, c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

277 
UEº‹Code
 *
°©us
) {

279 i‡(
°©us
 =
NULL
 || 
	`U_FAILURE
(*status)) {

282 if(
ds
==
NULL
 || 
öD©a
==NULL || 
Àngth
<-1 || (Àngth>0 && 
outD©a
==NULL)) {

283 *
°©us
=
U_ILLEGAL_ARGUMENT_ERROR
;

291 c⁄° 
UD©aInfo
 *
pInfo
 = (c⁄° UD©aInfÿ*)((c⁄° *)
öD©a
+4);

292 if(!–
pInfo
->
d©aF‹m©
[0]==0x42 &&

293 
pInfo
->
d©aF‹m©
[1]==0x72 &&

294 
pInfo
->
d©aF‹m©
[2]==0x6b &&

295 
pInfo
->
d©aF‹m©
[3]==0x20 &&

296 
pInfo
->
f‹m©Vîsi⁄
[0]==3 )) {

297 
	`ud©a_¥ötEº‹
(
ds
, "ubrk_swap(): data format %02x.%02x.%02x.%02x (format version %02x) isÇotÑecognized\n",

298 
pInfo
->
d©aF‹m©
[0],ÖInfo->dataFormat[1],

299 
pInfo
->
d©aF‹m©
[2],ÖInfo->dataFormat[3],

300 
pInfo
->
f‹m©Vîsi⁄
[0]);

301 *
°©us
=
U_UNSUPPORTED_ERROR
;

311 
öt32_t
 
hódîSize
=
	`ud©a_sw≠D©aHódî
(
ds
, 
öD©a
, 
Àngth
, 
outD©a
, 
°©us
);

322 c⁄° 
uöt8_t
 *
öByãs
 =(c⁄° uöt8_à*)
öD©a
+
hódîSize
;

323 
RBBID©aHódî
 *
rbbiDH
 = (RBBID©aHódî *)
öByãs
;

324 i‡(
ds
->
	`ªadUI¡32
(
rbbiDH
->
fMagic
) != 0xb1a0 ||

325 
rbbiDH
->
fF‹m©Vîsi⁄
[0] != 3 ||

326 
ds
->
	`ªadUI¡32
(
rbbiDH
->
fLígth
Ë< (
RBBID©aHódî
))

328 
	`ud©a_¥ötEº‹
(
ds
, "ubrk_swap(): RBBI Data header is invalid.\n");

329 *
°©us
=
U_UNSUPPORTED_ERROR
;

336 
öt32_t
 
bªakD©aLígth
 = 
ds
->
	`ªadUI¡32
(
rbbiDH
->
fLígth
);

337 
öt32_t
 
tŸÆSize
 = 
hódîSize
 + 
bªakD©aLígth
;

338 i‡(
Àngth
 < 0) {

339  
tŸÆSize
;

345 i‡(
Àngth
 < 
tŸÆSize
) {

346 
	`ud©a_¥ötEº‹
(
ds
, "ubrk_swap():Åoo few bytes (%dáfter ICU Data header) for break data.\n",

347 
bªakD©aLígth
);

348 *
°©us
=
U_INDEX_OUTOFBOUNDS_ERROR
;

358 
uöt8_t
 *
outByãs
 = (uöt8_à*)
outD©a
 + 
hódîSize
;

359 
RBBID©aHódî
 *
ouçutDH
 = (RBBID©aHódî *)
outByãs
;

361 
öt32_t
 
èbÀSèπOff£t
;

362 
öt32_t
 
èbÀLígth
;

369 i‡(
öByãs
 !
outByãs
) {

370 
	`u¥v_mem£t
(
outByãs
, 0, 
bªakD©aLígth
);

377 
öt32_t
 
t›Size
 = 
	`off£tof
(
RBBISèãTabÀ
, 
fTabÀD©a
);

380 
èbÀSèπOff£t
 = 
ds
->
	`ªadUI¡32
(
rbbiDH
->
fFTabÀ
);

381 
èbÀLígth
 = 
ds
->
	`ªadUI¡32
(
rbbiDH
->
fFTabÀLí
);

383 i‡(
èbÀLígth
 > 0) {

384 
ds
->
	`sw≠Aºay32
(ds, 
öByãs
+
èbÀSèπOff£t
, 
t›Size
,

385 
outByãs
+
èbÀSèπOff£t
, 
°©us
);

386 
ds
->
	`sw≠Aºay16
(ds, 
öByãs
+
èbÀSèπOff£t
+
t›Size
, 
èbÀLígth
-topSize,

387 
outByãs
+
èbÀSèπOff£t
+
t›Size
, 
°©us
);

391 
èbÀSèπOff£t
 = 
ds
->
	`ªadUI¡32
(
rbbiDH
->
fRTabÀ
);

392 
èbÀLígth
 = 
ds
->
	`ªadUI¡32
(
rbbiDH
->
fRTabÀLí
);

394 i‡(
èbÀLígth
 > 0) {

395 
ds
->
	`sw≠Aºay32
(ds, 
öByãs
+
èbÀSèπOff£t
, 
t›Size
,

396 
outByãs
+
èbÀSèπOff£t
, 
°©us
);

397 
ds
->
	`sw≠Aºay16
(ds, 
öByãs
+
èbÀSèπOff£t
+
t›Size
, 
èbÀLígth
-topSize,

398 
outByãs
+
èbÀSèπOff£t
+
t›Size
, 
°©us
);

402 
èbÀSèπOff£t
 = 
ds
->
	`ªadUI¡32
(
rbbiDH
->
fSFTabÀ
);

403 
èbÀLígth
 = 
ds
->
	`ªadUI¡32
(
rbbiDH
->
fSFTabÀLí
);

405 i‡(
èbÀLígth
 > 0) {

406 
ds
->
	`sw≠Aºay32
(ds, 
öByãs
+
èbÀSèπOff£t
, 
t›Size
,

407 
outByãs
+
èbÀSèπOff£t
, 
°©us
);

408 
ds
->
	`sw≠Aºay16
(ds, 
öByãs
+
èbÀSèπOff£t
+
t›Size
, 
èbÀLígth
-topSize,

409 
outByãs
+
èbÀSèπOff£t
+
t›Size
, 
°©us
);

413 
èbÀSèπOff£t
 = 
ds
->
	`ªadUI¡32
(
rbbiDH
->
fSRTabÀ
);

414 
èbÀLígth
 = 
ds
->
	`ªadUI¡32
(
rbbiDH
->
fSRTabÀLí
);

416 i‡(
èbÀLígth
 > 0) {

417 
ds
->
	`sw≠Aºay32
(ds, 
öByãs
+
èbÀSèπOff£t
, 
t›Size
,

418 
outByãs
+
èbÀSèπOff£t
, 
°©us
);

419 
ds
->
	`sw≠Aºay16
(ds, 
öByãs
+
èbÀSèπOff£t
+
t›Size
, 
èbÀLígth
-topSize,

420 
outByãs
+
èbÀSèπOff£t
+
t›Size
, 
°©us
);

424 
	`uåõ_sw≠
(
ds
, 
öByãs
+ds->
	`ªadUI¡32
(
rbbiDH
->
fTrõ
), ds->ªadUI¡32‘bbiDH->
fTrõLí
),

425 
outByãs
+
ds
->
	`ªadUI¡32
(
rbbiDH
->
fTrõ
), 
°©us
);

428 
ds
->
	`sw≠Aºay16
(ds, 
öByãs
+ds->
	`ªadUI¡32
(
rbbiDH
->
fRuÀSour˚
), ds->ªadUI¡32‘bbiDH->
fRuÀSour˚Lí
),

429 
outByãs
+
ds
->
	`ªadUI¡32
(
rbbiDH
->
fRuÀSour˚
), 
°©us
);

432 
ds
->
	`sw≠Aºay32
(ds, 
öByãs
+ds->
	`ªadUI¡32
(
rbbiDH
->
fSètusTabÀ
), ds->ªadUI¡32‘bbiDH->
fSètusTabÀLí
),

433 
outByãs
+
ds
->
	`ªadUI¡32
(
rbbiDH
->
fSètusTabÀ
), 
°©us
);

439 
ds
->
	`sw≠Aºay32
(ds, 
öByãs
, (
RBBID©aHódî
), 
outByãs
, 
°©us
);

440 
ds
->
	`sw≠Aºay32
(ds, 
ouçutDH
->
fF‹m©Vîsi⁄
, 4, ouçutDH->fF‹m©Vîsi⁄, 
°©us
);

442  
tŸÆSize
;

443 
	}
}

	@rbbidata.h

32 #i‚de‡
__RBBIDATA_H__


33 
	#__RBBIDATA_H__


	)

35 
	~"unicode/uty≥s.h
"

36 
	~"unicode/ud©a.h
"

37 
	~"ud©aswp.h
"

43 
U_CAPI
 
öt32_t
 
U_EXPORT2


44 
ubrk_sw≠
(c⁄° 
UD©aSw≠≥r
 *
ds
,

45 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

46 
UEº‹Code
 *
pEº‹Code
);

48 #ifde‡
XP_CPLUSPLUS


50 
	~"unicode/uobje˘.h
"

51 
	~"unicode/uni°r.h
"

52 
	~"uåõ.h
"

54 
U_NAMESPACE_BEGIN


59 
	sRBBID©aHódî
 {

60 
uöt32_t
 
	mfMagic
;

61 
uöt8_t
 
	mfF‹m©Vîsi⁄
[4];

67 
uöt32_t
 
	mfLígth
;

69 
uöt32_t
 
	mfC©Cou¡
;

76 
uöt32_t
 
	mfFTabÀ
;

77 
uöt32_t
 
	mfFTabÀLí
;

78 
uöt32_t
 
	mfRTabÀ
;

79 
uöt32_t
 
	mfRTabÀLí
;

80 
uöt32_t
 
	mfSFTabÀ
;

81 
uöt32_t
 
	mfSFTabÀLí
;

82 
uöt32_t
 
	mfSRTabÀ
;

83 
uöt32_t
 
	mfSRTabÀLí
;

84 
uöt32_t
 
	mfTrõ
;

85 
uöt32_t
 
	mfTrõLí
;

86 
uöt32_t
 
	mfRuÀSour˚
;

87 
uöt32_t
 
	mfRuÀSour˚Lí
;

88 
uöt32_t
 
	mfSètusTabÀ
;

89 
uöt32_t
 
	mfSètusTabÀLí
;

91 
uöt32_t
 
	mfRe£rved
[6];

97 
	sRBBISèãTabÀRow
 {

98 
öt16_t
 
	mfAc˚±ög
;

105 
öt16_t
 
	mfLookAhód
;

110 
öt16_t
 
	mfTagIdx
;

114 
öt16_t
 
	mfRe£rved
;

115 
uöt16_t
 
	mfNextSèã
[2];

123 
	sRBBISèãTabÀ
 {

124 
uöt32_t
 
	mfNumSèãs
;

125 
uöt32_t
 
	mfRowLí
;

126 
uöt32_t
 
	mfFœgs
;

127 
uöt32_t
 
	mfRe£rved
;

128 
	mfTabÀD©a
[4];

134 
	mRBBI_LOOKAHEAD_HARD_BREAK
 = 1,

135 
	mRBBI_BOF_REQUIRED
 = 2

136 } 
	tRBBISèãTabÀFœgs
;

142 ˛as†
	cRBBID©aWøµî
 : 
public
 
UMem‹y
 {

143 
public
:

144 
	eED⁄tAd›t
 {

145 
kD⁄tAd›t


147 
RBBID©aWøµî
(c⁄° 
RBBID©aHódî
 *
d©a
, 
UEº‹Code
 &
°©us
);

148 
RBBID©aWøµî
(c⁄° 
RBBID©aHódî
 *
d©a
, 
ED⁄tAd›t
 
d⁄tAd›t
, 
UEº‹Code
 &
°©us
);

149 
RBBID©aWøµî
(
UD©aMem‹y
* 
udm
, 
UEº‹Code
 &
°©us
);

150 ~
RBBID©aWøµî
();

152 
öô
(c⁄° 
RBBID©aHódî
 *
d©a
, 
UEº‹Code
 &
°©us
);

153 
RBBID©aWøµî
 *
addRe„ªn˚
();

154 
ªmoveRe„ªn˚
();

155 
UBoﬁ
 
	g›î©‹
 ==(c⁄° 
RBBID©aWøµî
 &
Ÿhî
) const;

156 
öt32_t
 
hashCode
();

157 c⁄° 
	gUnicodeSåög
 &
	$gëRuÀSour˚Såög
() const;

158 #ifde‡
RBBI_DEBUG


159 
	`¥ötD©a
();

160 
	`¥ötTabÀ
(c⁄° *
hódög
, c⁄° 
RBBISèãTabÀ
 *
èbÀ
);

162 
	#¥ötD©a
()

	)

163 
	#¥ötTabÀ
(
hódög
, 
èbÀ
)

	)

169 c⁄° 
RBBID©aHódî
 *
fHódî
;

170 c⁄° 
RBBISèãTabÀ
 *
fF‹w¨dTabÀ
;

171 c⁄° 
RBBISèãTabÀ
 *
fRevî£TabÀ
;

172 c⁄° 
RBBISèãTabÀ
 *
fSa„FwdTabÀ
;

173 c⁄° 
RBBISèãTabÀ
 *
fSa„RevTabÀ
;

174 c⁄° 
UCh¨
 *
fRuÀSour˚
;

175 c⁄° 
öt32_t
 *
fRuÀSètusTabÀ
;

178 
öt32_t
 
fSètusMaxIdx
;

180 
UTrõ
 
fTrõ
;

182 
¥iv©e
:

183 
öt32_t
 
fRefCou¡
;

184 
UD©aMem‹y
 *
fUD©aMem
;

185 
UnicodeSåög
 
fRuÀSåög
;

186 
UBoﬁ
 
fD⁄tFªeD©a
;

188 
	`RBBID©aWøµî
(c⁄° 
RBBID©aWøµî
 &
Ÿhî
);

189 
RBBID©aWøµî
 &
›î©‹
=(c⁄° RBBID©aWøµî &
Ÿhî
);

190 
	}
};

194 
	gU_NAMESPACE_END


	@rbbinode.cpp

18 
	~"unicode/uty≥s.h
"

20 #i‡!
UCONFIG_NO_BREAK_ITERATION


22 
	~"unicode/uni°r.h
"

23 
	~"unicode/uni£t.h
"

24 
	~"unicode/uch¨.h
"

25 
	~"unicode/∑r£pos.h
"

26 
	~"uve˘‹.h
"

28 
	~"rbbúb.h
"

29 
	~"rbböode.h
"

31 
	~"uas£π.h
"

34 
	gU_NAMESPACE_BEGIN


36 #ifde‡
RBBI_DEBUG


37 
	ggLa°Sîül
 = 0;

46 
	gRBBINode
::
	$RBBINode
(
NodeTy≥
 
t
Ë: 
	$UMem‹y
() {

47 #ifde‡
RBBI_DEBUG


48 
fSîülNum
 = ++
gLa°Sîül
;

50 
fTy≥
 = 
t
;

51 
fP¨ít
 = 
NULL
;

52 
fLe·Chûd
 = 
NULL
;

53 
fRightChûd
 = 
NULL
;

54 
fI≈utSë
 = 
NULL
;

55 
fFú°Pos
 = 0;

56 
fLa°Pos
 = 0;

57 
fNuŒabÀ
 = 
FALSE
;

58 
fLookAhódEnd
 = 
FALSE
;

59 
fVÆ
 = 0;

60 
fPª˚dí˚
 = 
¥ecZîo
;

62 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

63 
fFú°PosSë
 = 
√w
 
	`UVe˘‹
(
°©us
);

64 
fLa°PosSë
 = 
√w
 
	`UVe˘‹
(
°©us
);

65 
fFﬁlowPos
 = 
√w
 
	`UVe˘‹
(
°©us
);

66 i‡(
t
==
›C©
Ë{
fPª˚dí˚
 = 
¥ecOpC©
;}

67 i‡(
t
==
›Or
Ë{
fPª˚dí˚
 = 
¥ecOpOr
;}

68 i‡(
t
==
›Sèπ
Ë{
fPª˚dí˚
 = 
¥ecSèπ
;}

69 i‡(
t
==
›LP¨í
Ë{
fPª˚dí˚
 = 
¥ecLP¨í
;}

71 
	}
}

74 
	gRBBINode
::
	$RBBINode
(c⁄° 
RBBINode
 &
Ÿhî
Ë: 
	$UMem‹y
(
Ÿhî
) {

75 #ifde‡
RBBI_DEBUG


76 
fSîülNum
 = ++
gLa°Sîül
;

78 
fTy≥
 = 
Ÿhî
.fType;

79 
fP¨ít
 = 
NULL
;

80 
fLe·Chûd
 = 
NULL
;

81 
fRightChûd
 = 
NULL
;

82 
fI≈utSë
 = 
Ÿhî
.fInputSet;

83 
fPª˚dí˚
 = 
Ÿhî
.fPrecedence;

84 
fText
 = 
Ÿhî
.fText;

85 
fFú°Pos
 = 
Ÿhî
.fFirstPos;

86 
fLa°Pos
 = 
Ÿhî
.fLastPos;

87 
fNuŒabÀ
 = 
Ÿhî
.fNullable;

88 
fVÆ
 = 
Ÿhî
.fVal;

89 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

90 
fFú°PosSë
 = 
√w
 
	`UVe˘‹
(
°©us
);

91 
fLa°PosSë
 = 
√w
 
	`UVe˘‹
(
°©us
);

92 
fFﬁlowPos
 = 
√w
 
	`UVe˘‹
(
°©us
);

93 
	}
}

105 
	gRBBINode
::~
	$RBBINode
() {

107 
dñëe
 
fI≈utSë
;

108 
fI≈utSë
 = 
NULL
;

110 
this
->
fTy≥
) {

111 
v¨Ref
:

112 
£tRef
:

118 
dñëe
 
fLe·Chûd
;

119 
fLe·Chûd
 = 
NULL
;

120 
dñëe
 
fRightChûd
;

121 
fRightChûd
 = 
NULL
;

125 
dñëe
 
fFú°PosSë
;

126 
dñëe
 
fLa°PosSë
;

127 
dñëe
 
fFﬁlowPos
;

129 
	}
}

141 
RBBINode
 *
	gRBBINode
::
	$˛⁄eTªe
() {

142 
RBBINode
 *
n
;

144 i‡(
fTy≥
 =
RBBINode
::
v¨Ref
) {

147 
n
 = 
fLe·Chûd
->
	`˛⁄eTªe
();

148 } i‡(
fTy≥
 =
RBBINode
::
u£t
) {

149 
n
 = 
this
;

151 
n
 = 
√w
 
	`RBBINode
(*
this
);

153 i‡(
n
 !
NULL
) {

154 i‡(
fLe·Chûd
 !
NULL
) {

155 
n
->
fLe·Chûd
 = fLe·Chûd->
	`˛⁄eTªe
();

156 
n
->
fLe·Chûd
->
fP¨ít
 =Ç;

158 i‡(
fRightChûd
 !
NULL
) {

159 
n
->
fRightChûd
 = fRightChûd->
	`˛⁄eTªe
();

160 
n
->
fRightChûd
->
fP¨ít
 =Ç;

164  
n
;

165 
	}
}

187 
RBBINode
 *
	gRBBINode
::
	$Ê©ãnV¨übÀs
() {

188 i‡(
fTy≥
 =
v¨Ref
) {

189 
RBBINode
 *
ªtNode
 = 
fLe·Chûd
->
	`˛⁄eTªe
();

190 
dñëe
 
this
;

191  
ªtNode
;

194 i‡(
fLe·Chûd
 !
NULL
) {

195 
fLe·Chûd
 = fLe·Chûd->
	`Ê©ãnV¨übÀs
();

196 
fLe·Chûd
->
fP¨ít
 = 
this
;

198 i‡(
fRightChûd
 !
NULL
) {

199 
fRightChûd
 = fRightChûd->
	`Ê©ãnV¨übÀs
();

200 
fRightChûd
->
fP¨ít
 = 
this
;

202  
this
;

203 
	}
}

214 
	gRBBINode
::
	$Ê©ãnSës
() {

215 
	`U_ASSERT
(
fTy≥
 !
£tRef
);

217 i‡(
fLe·Chûd
 !
NULL
) {

218 i‡(
fLe·Chûd
->
fTy≥
==
£tRef
) {

219 
RBBINode
 *
£tRefNode
 = 
fLe·Chûd
;

220 
RBBINode
 *
u£tNode
 = 
£tRefNode
->
fLe·Chûd
;

221 
RBBINode
 *
ª∂Tªe
 = 
u£tNode
->
fLe·Chûd
;

222 
fLe·Chûd
 = 
ª∂Tªe
->
	`˛⁄eTªe
();

223 
fLe·Chûd
->
fP¨ít
 = 
this
;

224 
dñëe
 
£tRefNode
;

226 
fLe·Chûd
->
	`Ê©ãnSës
();

230 i‡(
fRightChûd
 !
NULL
) {

231 i‡(
fRightChûd
->
fTy≥
==
£tRef
) {

232 
RBBINode
 *
£tRefNode
 = 
fRightChûd
;

233 
RBBINode
 *
u£tNode
 = 
£tRefNode
->
fLe·Chûd
;

234 
RBBINode
 *
ª∂Tªe
 = 
u£tNode
->
fLe·Chûd
;

235 
fRightChûd
 = 
ª∂Tªe
->
	`˛⁄eTªe
();

236 
fRightChûd
->
fP¨ít
 = 
this
;

237 
dñëe
 
£tRefNode
;

239 
fRightChûd
->
	`Ê©ãnSës
();

242 
	}
}

252 
	gRBBINode
::
födNodes
(
UVe˘‹
 *
de°
, 
RBBINode
::
NodeTy≥
 
köd
, 
UEº‹Code
 &
°©us
) {

254 i‡(
U_FAILURE
(
°©us
)) {

257 i‡(
	gfTy≥
 =
köd
) {

258 
de°
->
addEÀmít
(
this
, 
°©us
);

260 i‡(
	gfLe·Chûd
 !
NULL
) {

261 
fLe·Chûd
->
födNodes
(
de°
, 
köd
, 
°©us
);

263 i‡(
	gfRightChûd
 !
NULL
) {

264 
fRightChûd
->
födNodes
(
de°
, 
köd
, 
°©us
);

274 #ifde‡
RBBI_DEBUG


275 
	gRBBINode
::
	$¥ötNode
() {

276 c⁄° * c⁄° 
nodeTy≥Names
[] = {

295 i‡(
this
==
NULL
) {

296 
	`RBBIDebugPrötf
("%10p", (*)
this
);

298 
	`RBBIDebugPrötf
("%10p %12s %10p %10p %10p %4d %6d %d ",

299 (*)
this
, 
nodeTy≥Names
[
fTy≥
], (*)
fP¨ít
, (*)
fLe·Chûd
, (*)
fRightChûd
,

300 
fSîülNum
, 
fFú°Pos
, 
fVÆ
);

301 i‡(
fTy≥
 =
v¨Ref
) {

302 
	`RBBI_DEBUG_¥ötUnicodeSåög
(
fText
);

305 
	`RBBIDebugPrötf
("\n");

306 
	}
}

310 #ifde‡
RBBI_DEBUG


311 
U_CFUNC
 
	$RBBI_DEBUG_¥ötUnicodeSåög
(c⁄° 
UnicodeSåög
 &
s
, 
möWidth
)

313 
i
;

314 
i
=0; i<
s
.
	`Àngth
(); i++) {

315 
	`RBBIDebugPrötf
("%c", 
s
.
	`ch¨At
(
i
));

318 
i
=
s
.
	`Àngth
(); i<
möWidth
; i++) {

319 
	`RBBIDebugPrötf
(" ");

321 
	}
}

330 #ifde‡
RBBI_DEBUG


331 
	gRBBINode
::
	$¥ötTªe
(
UBoﬁ
 
¥ötHódög
) {

332 i‡(
¥ötHódög
) {

333 
	`RBBIDebugPrötf
( "-------------------------------------------------------------------\n"

337 
this
->
	`¥ötNode
();

338 i‡(
this
 !
NULL
) {

341 i‡(
fTy≥
 !
v¨Ref
) {

342 i‡(
fLe·Chûd
 !
NULL
) {

343 
fLe·Chûd
->
	`¥ötTªe
(
FALSE
);

346 i‡(
fRightChûd
 !
NULL
) {

347 
fRightChûd
->
	`¥ötTªe
(
FALSE
);

351 
	}
}

356 
	gU_NAMESPACE_END


	@rbbinode.h

7 #i‚de‡
RBBINODE_H


8 
	#RBBINODE_H


	)

10 
	~"unicode/uty≥s.h
"

11 
	~"unicode/uobje˘.h
"

20 
U_NAMESPACE_BEGIN


22 
˛ass
 
	gUnicodeSë
;

23 
˛ass
 
	gUVe˘‹
;

25 ˛as†
	cRBBINode
 : 
public
 
UMem‹y
 {

26 
public
:

27 
	eNodeTy≥
 {

28 
£tRef
,

29 
	mu£t
,

30 
	mv¨Ref
,

31 
	mÀafCh¨
,

32 
	mlookAhód
,

33 
	mèg
,

34 
	mídM¨k
,

35 
	m›Sèπ
,

36 
	m›C©
,

37 
	m›Or
,

38 
	m›Sèr
,

39 
	m›Plus
,

40 
	m›Que°i⁄
,

41 
	m›Bªak
,

42 
	m›Revî£
,

43 
	m›LP¨í


46 
	eOpPª˚dí˚
 {

47 
	g¥ecZîo
,

48 
	g¥ecSèπ
,

49 
	g¥ecLP¨í
,

50 
	g¥ecOpOr
,

51 
	g¥ecOpC©


54 
NodeTy≥
 
	gfTy≥
;

55 
RBBINode
 *
	gfP¨ít
;

56 
RBBINode
 *
	gfLe·Chûd
;

57 
RBBINode
 *
	gfRightChûd
;

58 
UnicodeSë
 *
	gfI≈utSë
;

59 
OpPª˚dí˚
 
	gfPª˚dí˚
;

61 
UnicodeSåög
 
	gfText
;

64 
	gfFú°Pos
;

68 
	gfLa°Pos
;

73 
UBoﬁ
 
	gfNuŒabÀ
;

74 
öt32_t
 
	gfVÆ
;

79 
UBoﬁ
 
	gfLookAhódEnd
;

82 
UVe˘‹
 *
	gfFú°PosSë
;

83 
UVe˘‹
 *
	gfLa°PosSë
;

84 
UVe˘‹
 *
	gfFﬁlowPos
;

87 
RBBINode
(
NodeTy≥
 
t
);

88 
RBBINode
(c⁄° RBBINodê&
Ÿhî
);

89 ~
RBBINode
();

91 
RBBINode
 *
˛⁄eTªe
();

92 
RBBINode
 *
Ê©ãnV¨übÀs
();

93 
Ê©ãnSës
();

94 
födNodes
(
UVe˘‹
 *
de°
, 
RBBINode
::
NodeTy≥
 
köd
, 
UEº‹Code
 &
°©us
);

96 #ifde‡
RBBI_DEBUG


97 
¥ötNode
();

98 
¥ötTªe
(
UBoﬁ
 
wôhHódög
);

101 
	g¥iv©e
:

102 
RBBINode
 &
›î©‹
 = (c⁄° RBBINodê&
Ÿhî
);

103 
UBoﬁ
 
	g›î©‹
 =(c⁄° 
RBBINode
 &
Ÿhî
);

105 #ifde‡
RBBI_DEBUG


106 
	gfSîülNum
;

110 #ifde‡
RBBI_DEBUG


111 
U_CFUNC
 

112 
RBBI_DEBUG_¥ötUnicodeSåög
(c⁄° 
UnicodeSåög
 &
s
, 
möWidth
=0);

115 
	gU_NAMESPACE_END


	@rbbirb.cpp

12 
	~"unicode/uty≥s.h
"

14 #i‡!
UCONFIG_NO_BREAK_ITERATION


16 
	~"unicode/brkôî.h
"

17 
	~"unicode/rbbi.h
"

18 
	~"unicode/ubrk.h
"

19 
	~"unicode/uni°r.h
"

20 
	~"unicode/uni£t.h
"

21 
	~"unicode/uch¨.h
"

22 
	~"unicode/uchrôî.h
"

23 
	~"unicode/∑r£pos.h
"

24 
	~"unicode/∑r£îr.h
"

25 
	~"cmem‹y.h
"

26 
	~"c°rög.h
"

28 
	~"rbbúb.h
"

29 
	~"rbböode.h
"

31 
	~"rbbisˇn.h
"

32 
	~"rbbi£tb.h
"

33 
	~"rbbôblb.h
"

34 
	~"rbbid©a.h
"

37 
U_NAMESPACE_BEGIN


45 
	gRBBIRuÀBuûdî
::
	$RBBIRuÀBuûdî
(c⁄° 
UnicodeSåög
 &
ruÀs
,

46 
UP¨£Eº‹
 *
∑r£Eº
,

47 
UEº‹Code
 &
°©us
)

48 : 
	$fRuÀs
(
ruÀs
)

50 
fSètus
 = &
°©us
;

51 
fP¨£Eº‹
 = 
∑r£Eº
;

52 
fDebugEnv
 = 
NULL
;

53 #ifde‡
RBBI_DEBUG


54 
fDebugEnv
 = 
	`gëív
("U_RBBIDEBUG");

58 
fF‹w¨dTªe
 = 
NULL
;

59 
fRevî£Tªe
 = 
NULL
;

60 
fSa„FwdTªe
 = 
NULL
;

61 
fSa„RevTªe
 = 
NULL
;

62 
fDeÁu…Tªe
 = &
fF‹w¨dTªe
;

63 
fF‹w¨dTabÀs
 = 
NULL
;

64 
fRevî£TabÀs
 = 
NULL
;

65 
fSa„FwdTabÀs
 = 
NULL
;

66 
fSa„RevTabÀs
 = 
NULL
;

67 
fRuÀSètusVÆs
 = 
NULL
;

68 
fChaöRuÀs
 = 
FALSE
;

69 
fLBCMNoChaö
 = 
FALSE
;

70 
fLookAhódH¨dBªak
 = 
FALSE
;

71 
fUSëNodes
 = 
NULL
;

72 
fRuÀSètusVÆs
 = 
NULL
;

73 
fSˇ¬î
 = 
NULL
;

74 
fSëBuûdî
 = 
NULL
;

75 i‡(
∑r£Eº
) {

76 
	`u¥v_mem£t
(
∑r£Eº
, 0, (
UP¨£Eº‹
));

79 i‡(
	`U_FAILURE
(
°©us
)) {

83 
fUSëNodes
 = 
√w
 
	`UVe˘‹
(
°©us
);

84 
fRuÀSètusVÆs
 = 
√w
 
	`UVe˘‹
(
°©us
);

85 
fSˇ¬î
 = 
√w
 
	`RBBIRuÀSˇ¬î
(
this
);

86 
fSëBuûdî
 = 
√w
 
	`RBBISëBuûdî
(
this
);

87 i‡(
	`U_FAILURE
(
°©us
)) {

90 if(
fSëBuûdî
 =0 || 
fSˇ¬î
 =0 || 
fUSëNodes
 =0 || 
fRuÀSètusVÆs
 == 0) {

91 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

93 
	}
}

102 
	gRBBIRuÀBuûdî
::~
	$RBBIRuÀBuûdî
() {

104 
i
;

105 
i
=0; ; i++) {

106 
RBBINode
 *
n
 = (RBBINodê*)
fUSëNodes
->
	`ñemítAt
(
i
);

107 i‡(
n
==
NULL
) {

110 
dñëe
 
n
;

113 
dñëe
 
fUSëNodes
;

114 
dñëe
 
fSëBuûdî
;

115 
dñëe
 
fF‹w¨dTabÀs
;

116 
dñëe
 
fRevî£TabÀs
;

117 
dñëe
 
fSa„FwdTabÀs
;

118 
dñëe
 
fSa„RevTabÀs
;

120 
dñëe
 
fF‹w¨dTªe
;

121 
dñëe
 
fRevî£Tªe
;

122 
dñëe
 
fSa„FwdTªe
;

123 
dñëe
 
fSa„RevTªe
;

124 
dñëe
 
fSˇ¬î
;

125 
dñëe
 
fRuÀSètusVÆs
;

126 
	}
}

139 
öt32_t
 
	$Æign8
(
öt32_t
 
i
Ë{ (i+7Ë& 0xfffffff8;
	}
}

141 
RBBID©aHódî
 *
	gRBBIRuÀBuûdî
::
	$Ê©ãnD©a
() {

142 
öt32_t
 
i
;

144 i‡(
	`U_FAILURE
(*
fSètus
)) {

145  
NULL
;

149 
UnicodeSåög
 
	`°rù≥dRuÀs
((c⁄° UnicodeSåög&)
RBBIRuÀSˇ¬î
::
	`°rùRuÀs
(
fRuÀs
));

156 
öt32_t
 
hódîSize
 = 
	`Æign8
((
RBBID©aHódî
));

157 
öt32_t
 
f‹w¨dTabÀSize
 = 
	`Æign8
(
fF‹w¨dTabÀs
->
	`gëTabÀSize
());

158 
öt32_t
 
ªvî£TabÀSize
 = 
	`Æign8
(
fRevî£TabÀs
->
	`gëTabÀSize
());

159 
öt32_t
 
ß„FwdTabÀSize
 = 
	`Æign8
(
fSa„FwdTabÀs
->
	`gëTabÀSize
());

160 
öt32_t
 
ß„RevTabÀSize
 = 
	`Æign8
(
fSa„RevTabÀs
->
	`gëTabÀSize
());

161 
öt32_t
 
åõSize
 = 
	`Æign8
(
fSëBuûdî
->
	`gëTrõSize
());

162 
öt32_t
 
°©usTabÀSize
 = 
	`Æign8
(
fRuÀSètusVÆs
->
	`size
() * (int32_t));

163 
öt32_t
 
ruÀsSize
 = 
	`Æign8
((
°rù≥dRuÀs
.
	`Àngth
()+1Ë* (
UCh¨
));

165 
öt32_t
 
tŸÆSize
 = 
hódîSize
 + 
f‹w¨dTabÀSize
 + 
ªvî£TabÀSize


166 + 
ß„FwdTabÀSize
 + 
ß„RevTabÀSize


167 + 
°©usTabÀSize
 + 
åõSize
 + 
ruÀsSize
;

169 
RBBID©aHódî
 *
d©a
 = (RBBID©aHódî *)
	`u¥v_mÆloc
(
tŸÆSize
);

170 i‡(
d©a
 =
NULL
) {

171 *
fSètus
 = 
U_MEMORY_ALLOCATION_ERROR
;

172  
NULL
;

174 
	`u¥v_mem£t
(
d©a
, 0, 
tŸÆSize
);

177 
d©a
->
fMagic
 = 0xb1a0;

178 
d©a
->
fF‹m©Vîsi⁄
[0] = 3;

179 
d©a
->
fF‹m©Vîsi⁄
[1] = 1;

180 
d©a
->
fF‹m©Vîsi⁄
[2] = 0;

181 
d©a
->
fF‹m©Vîsi⁄
[3] = 0;

182 
d©a
->
fLígth
 = 
tŸÆSize
;

183 
d©a
->
fC©Cou¡
 = 
fSëBuûdî
->
	`gëNumCh¨C©eg‹õs
();

185 
d©a
->
fFTabÀ
 = 
hódîSize
;

186 
d©a
->
fFTabÀLí
 = 
f‹w¨dTabÀSize
;

187 
d©a
->
fRTabÀ
 = d©a->
fFTabÀ
 + 
f‹w¨dTabÀSize
;

188 
d©a
->
fRTabÀLí
 = 
ªvî£TabÀSize
;

189 
d©a
->
fSFTabÀ
 = d©a->
fRTabÀ
 + 
ªvî£TabÀSize
;

190 
d©a
->
fSFTabÀLí
 = 
ß„FwdTabÀSize
;

191 
d©a
->
fSRTabÀ
 = d©a->
fSFTabÀ
 + 
ß„FwdTabÀSize
;

192 
d©a
->
fSRTabÀLí
 = 
ß„RevTabÀSize
;

194 
d©a
->
fTrõ
 = d©a->
fSRTabÀ
 + 
ß„RevTabÀSize
;

195 
d©a
->
fTrõLí
 = 
fSëBuûdî
->
	`gëTrõSize
();

196 
d©a
->
fSètusTabÀ
 = d©a->
fTrõ
 + 
åõSize
;

197 
d©a
->
fSètusTabÀLí

°©usTabÀSize
;

198 
d©a
->
fRuÀSour˚
 = d©a->
fSètusTabÀ
 + 
°©usTabÀSize
;

199 
d©a
->
fRuÀSour˚Lí
 = 
°rù≥dRuÀs
.
	`Àngth
(Ë* (
UCh¨
);

201 
	`u¥v_mem£t
(
d©a
->
fRe£rved
, 0, (data->fReserved));

203 
fF‹w¨dTabÀs
->
	`exp‹tTabÀ
((
uöt8_t
 *)
d©a
 + d©a->
fFTabÀ
);

204 
fRevî£TabÀs
->
	`exp‹tTabÀ
((
uöt8_t
 *)
d©a
 + d©a->
fRTabÀ
);

205 
fSa„FwdTabÀs
->
	`exp‹tTabÀ
((
uöt8_t
 *)
d©a
 + d©a->
fSFTabÀ
);

206 
fSa„RevTabÀs
->
	`exp‹tTabÀ
((
uöt8_t
 *)
d©a
 + d©a->
fSRTabÀ
);

207 
fSëBuûdî
->
	`£rülizeTrõ
 ((
uöt8_t
 *)
d©a
 + d©a->
fTrõ
);

209 
öt32_t
 *
ruÀSètusTabÀ
 = (öt32_à*)((
uöt8_t
 *)
d©a
 + d©a->
fSètusTabÀ
);

210 
i
=0; i<
fRuÀSètusVÆs
->
	`size
(); i++) {

211 
ruÀSètusTabÀ
[
i
] = 
fRuÀSètusVÆs
->
	`ñemítAti
(i);

214 
°rù≥dRuÀs
.
	`exåa˘
((
UCh¨
 *)((
uöt8_t
 *)
d©a
+d©a->
fRuÀSour˚
), 
ruÀsSize
/2+1, *
fSètus
);

216  
d©a
;

217 
	}
}

230 
BªakIãøt‹
 *

231 
	gRBBIRuÀBuûdî
::
	$¸óãRuÀBa£dBªakIãøt‹
–c⁄° 
UnicodeSåög
 &
ruÀs
,

232 
UP¨£Eº‹
 *
∑r£Eº‹
,

233 
UEº‹Code
 &
°©us
)

241 
RBBIRuÀBuûdî
 
	`buûdî
(
ruÀs
, 
∑r£Eº‹
, 
°©us
);

242 i‡(
	`U_FAILURE
(
°©us
)) {

243  
NULL
;

245 
buûdî
.
fSˇ¬î
->
	`∑r£
();

253 
buûdî
.
fSëBuûdî
->
	`buûd
();

259 
buûdî
.
fF‹w¨dTabÀs
 = 
√w
 
	`RBBITabÀBuûdî
(&buûdî, &buûdî.
fF‹w¨dTªe
);

260 
buûdî
.
fRevî£TabÀs
 = 
√w
 
	`RBBITabÀBuûdî
(&buûdî, &buûdî.
fRevî£Tªe
);

261 
buûdî
.
fSa„FwdTabÀs
 = 
√w
 
	`RBBITabÀBuûdî
(&buûdî, &buûdî.
fSa„FwdTªe
);

262 
buûdî
.
fSa„RevTabÀs
 = 
√w
 
	`RBBITabÀBuûdî
(&buûdî, &buûdî.
fSa„RevTªe
);

263 i‡(
	`U_SUCCESS
(
°©us
)

264 && (
buûdî
.
fF‹w¨dTabÀs
 =
NULL
 || buûdî.
fRevî£TabÀs
 == NULL ||

265 
buûdî
.
fSa„FwdTabÀs
 =
NULL
 || buûdî.
fSa„RevTabÀs
 == NULL))

267 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

271 i‡(
	`U_FAILURE
(
°©us
)) {

272 
dñëe
 
buûdî
.
fF‹w¨dTabÀs
; buûdî.fF‹w¨dTabÀ†
NULL
;

273 
dñëe
 
buûdî
.
fRevî£TabÀs
; buûdî.fRevî£TabÀ†
NULL
;

274 
dñëe
 
buûdî
.
fSa„FwdTabÀs
; buûdî.fSa„FwdTabÀ†
NULL
;

275 
dñëe
 
buûdî
.
fSa„RevTabÀs
; buûdî.fSa„RevTabÀ†
NULL
;

276  
NULL
;

279 
buûdî
.
fF‹w¨dTabÀs
->
	`buûd
();

280 
buûdî
.
fRevî£TabÀs
->
	`buûd
();

281 
buûdî
.
fSa„FwdTabÀs
->
	`buûd
();

282 
buûdî
.
fSa„RevTabÀs
->
	`buûd
();

284 #ifde‡
RBBI_DEBUG


285 i‡(
buûdî
.
fDebugEnv
 && 
	`u¥v_°r°r
(builder.fDebugEnv, "states")) {

286 
buûdî
.
fF‹w¨dTabÀs
->
	`¥ötRuÀSètusTabÀ
();

294 
RBBID©aHódî
 *
d©a
 = 
buûdî
.
	`Ê©ãnD©a
();

295 i‡(
	`U_FAILURE
(*
buûdî
.
fSètus
)) {

296  
NULL
;

310 
RuÀBa£dBªakIãøt‹
 *
This
 = 
√w
 
	`RuÀBa£dBªakIãøt‹
(
d©a
, 
°©us
);

311 i‡(
	`U_FAILURE
(
°©us
)) {

312 
dñëe
 
This
;

313 
This
 = 
NULL
;

315 if(
This
 =
NULL
) {

316 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

318  
This
;

319 
	}
}

321 
	gU_NAMESPACE_END


	@rbbirb.h

12 #i‚de‡
RBBIRB_H


13 
	#RBBIRB_H


	)

15 
	~"unicode/uty≥s.h
"

16 
	~"unicode/uobje˘.h
"

17 
	~"unicode/rbbi.h
"

18 
	~"unicode/uni£t.h
"

19 
	~"unicode/∑r£îr.h
"

20 
	~"uhash.h
"

21 
	~"uve˘‹.h
"

22 
	~"unicode/symèbÀ.h
"

27 
U_NAMESPACE_BEGIN


29 
˛ass
 
	gRBBIRuÀSˇ¬î
;

30 
	gRBBIRuÀTabÀEl
;

31 
˛ass
 
	gRBBISëBuûdî
;

32 
˛ass
 
	gRBBINode
;

33 
˛ass
 
	gRBBITabÀBuûdî
;

43 ˛as†
	cRBBISymbﬁTabÀE¡ry
 : 
public
 
UMem‹y
 {

44 
public
:

45 
RBBISymbﬁTabÀE¡ry
();

46 
UnicodeSåög
 
	mkey
;

47 
RBBINode
 *
	mvÆ
;

48 ~
RBBISymbﬁTabÀE¡ry
();

50 
	m¥iv©e
:

51 
RBBISymbﬁTabÀE¡ry
(c⁄° RBBISymbﬁTabÀE¡ry &
Ÿhî
);

52 
	mRBBISymbﬁTabÀE¡ry
 &
	m›î©‹
=(c⁄° 
RBBISymbﬁTabÀE¡ry
 &
Ÿhî
);

56 
˛ass
 
	gRBBISymbﬁTabÀ
 : 
public
 
UMem‹y
,Öubli¯
	gSymbﬁTabÀ
 {

57 
	g¥iv©e
:

58 c⁄° 
UnicodeSåög
 &
fRuÀs
;

59 
UHashèbÀ
 *
	gfHashTabÀ
;

60 
RBBIRuÀSˇ¬î
 *
	gfRuÀSˇ¬î
;

65 c⁄° 
UnicodeSåög
 
	gffffSåög
;

66 
UnicodeSë
 *
	gfCachedSëLookup
;

68 
	gpublic
:

70 
vútuÆ
 c⁄° 
UnicodeSåög
* 
lookup
(c⁄° UnicodeSåög& 
s
) const;

71 
vútuÆ
 c⁄° 
UnicodeFun˘‹
* 
lookupM©chî
(
UCh¨32
 
ch
) const;

72 
vútuÆ
 
UnicodeSåög
 
∑r£Re„ªn˚
(c⁄° UnicodeSåög& 
ãxt
,

73 
P¨£Posôi⁄
& 
pos
, 
öt32_t
 
limô
) const;

76 
RBBISymbﬁTabÀ
(
RBBIRuÀSˇ¬î
 *, c⁄° 
UnicodeSåög
 &
fRuÀs
, 
UEº‹Code
 &
°©us
);

77 
	gvútuÆ
 ~
RBBISymbﬁTabÀ
();

79 
vútuÆ
 
RBBINode
 *
lookupNode
(c⁄° 
UnicodeSåög
 &
key
) const;

80 
vútuÆ
 
addE¡ry
 (c⁄° 
UnicodeSåög
 &
key
, 
RBBINode
 *
vÆ
, 
UEº‹Code
 &
îr
);

82 #ifde‡
RBBI_DEBUG


83 
vútuÆ
 
rbbiSymèbÀPröt
() const;

87 
öt32_t
 
	gfFakeFõld
;

88 
	#rbbiSymèbÀPröt
(Ë
fFakeFõld
=0;

	)

91 
	g¥iv©e
:

92 
RBBISymbﬁTabÀ
(c⁄° RBBISymbﬁTabÀ &
Ÿhî
);

93 
	gRBBISymbﬁTabÀ
 &
	g›î©‹
=(c⁄° 
RBBISymbﬁTabÀ
 &
Ÿhî
);

102 ˛as†
	cRBBIRuÀBuûdî
 : 
public
 
UMem‹y
 {

103 
public
:

109 
BªakIãøt‹
 * 
¸óãRuÀBa£dBªakIãøt‹
–c⁄° 
UnicodeSåög
 &
ruÀs
,

110 
UP¨£Eº‹
 *
∑r£Eº‹
,

111 
UEº‹Code
 &
°©us
);

113 
	mpublic
:

118 
RBBIRuÀBuûdî
(c⁄° 
UnicodeSåög
 &
ruÀs
,

119 
UP¨£Eº‹
 *
∑r£Eº
,

120 
UEº‹Code
 &
°©us


123 
	mvútuÆ
 ~
RBBIRuÀBuûdî
();

124 *
	mfDebugEnv
;

125 
UEº‹Code
 *
	mfSètus
;

126 
UP¨£Eº‹
 *
	mfP¨£Eº‹
;

127 c⁄° 
	mUnicodeSåög
 &
	mfRuÀs
;

129 
RBBIRuÀSˇ¬î
 *
	mfSˇ¬î
;

130 
RBBINode
 *
	mfF‹w¨dTªe
;

131 
RBBINode
 *
	mfRevî£Tªe
;

132 
RBBINode
 *
	mfSa„FwdTªe
;

133 
RBBINode
 *
	mfSa„RevTªe
;

135 
RBBINode
 **
	mfDeÁu…Tªe
;

138 
UBoﬁ
 
	mfChaöRuÀs
;

141 
UBoﬁ
 
	mfLBCMNoChaö
;

144 
UBoﬁ
 
	mfLookAhódH¨dBªak
;

148 
RBBISëBuûdî
 *
	mfSëBuûdî
;

149 
UVe˘‹
 *
	mfUSëNodes
;

151 
RBBITabÀBuûdî
 *
	mfF‹w¨dTabÀs
;

152 
RBBITabÀBuûdî
 *
	mfRevî£TabÀs
;

153 
RBBITabÀBuûdî
 *
	mfSa„FwdTabÀs
;

154 
RBBITabÀBuûdî
 *
	mfSa„RevTabÀs
;

156 
UVe˘‹
 *
	mfRuÀSètusVÆs
;

159 
RBBID©aHódî
 *
Ê©ãnD©a
();

161 
	m¥iv©e
:

162 
RBBIRuÀBuûdî
(c⁄° RBBIRuÀBuûdî &
Ÿhî
);

163 
	mRBBIRuÀBuûdî
 &
	m›î©‹
=(c⁄° 
RBBIRuÀBuûdî
 &
Ÿhî
);

184 
	sRBBISëTabÀEl
 {

185 
UnicodeSåög
 *
	mkey
;

186 
RBBINode
 *
	mvÆ
;

198 #ifde‡
RBBI_DEBUG


199 
	~<°dio.h
>

200 
	#RBBIDebugPrötf
 
¥ötf


	)

201 
	#RBBIDebugPuts
 
puts


	)

203 #unde‡
RBBIDebugPrötf


204 
	#RBBIDebugPuts
(
¨g
)

	)

207 
	gU_NAMESPACE_END


	@rbbirpt.h

13 #i‚de‡
RBBIRPT_H


14 
	#RBBIRPT_H


	)

16 
U_NAMESPACE_BEGIN


20 c⁄° 
uöt8_t
 
	gkRuÀSë_digô_ch¨
 = 128;

21 c⁄° 
uöt8_t
 
	gkRuÀSë_«me_ch¨
 = 129;

22 c⁄° 
uöt8_t
 
	gkRuÀSë_«me_°¨t_ch¨
 = 130;

23 c⁄° 
uöt8_t
 
	gkRuÀSë_ruÀ_ch¨
 = 131;

24 c⁄° 
uöt8_t
 
	gkRuÀSë_whôe_•a˚
 = 132;

27 
	eRBBI_RuÀP¨£A˘i⁄
 {

28 
	mdoCheckV¨Def
,

29 
	mdoDŸAny
,

30 
	mdoEndAssign
,

31 
	mdoEndOfRuÀ
,

32 
	mdoEndV¨übÀName
,

33 
	mdoExô
,

34 
	mdoEx¥C©O≥øt‹
,

35 
	mdoEx¥Föished
,

36 
	mdoEx¥OrO≥øt‹
,

37 
	mdoEx¥RP¨í
,

38 
	mdoEx¥Sèπ
,

39 
	mdoLP¨í
,

40 
	mdoNOP
,

41 
	mdoO±i⁄End
,

42 
	mdoO±i⁄Sèπ
,

43 
	mdoRevî£Dú
,

44 
	mdoRuÀCh¨
,

45 
	mdoRuÀEº‹
,

46 
	mdoRuÀEº‹AssignEx¥
,

47 
	mdoSˇnUnicodeSë
,

48 
	mdoSœsh
,

49 
	mdoSèπAssign
,

50 
	mdoSèπTagVÆue
,

51 
	mdoSèπV¨übÀName
,

52 
	mdoTagDigô
,

53 
	mdoTagEx≥˘edEº‹
,

54 
	mdoTagVÆue
,

55 
	mdoU«ryOpPlus
,

56 
	mdoU«ryOpQue°i⁄
,

57 
	mdoU«ryOpSèr
,

58 
	mdoV¨übÀNameEx≥˘edEº
,

59 
	mrbbiLa°A˘i⁄
};

66 
	sRBBIRuÀTabÀEl
 {

67 
RBBI_RuÀP¨£A˘i⁄
 
	mfA˘i⁄
;

68 
uöt8_t
 
	mfCh¨Cœss
;

70 
uöt8_t
 
	mfNextSèã
;

72 
uöt8_t
 
	mfPushSèã
;

73 
UBoﬁ
 
	mfNextCh¨
;

76 c⁄° 
RBBIRuÀTabÀEl
 
	ggRuÀP¨£SèãTabÀ
[] = {

77 {
doNOP
, 0, 0, 0, 
TRUE
}

78 , {
doEx¥Sèπ
, 254, 21, 8, 
FALSE
}

79 , {
doNOP
, 132, 1,0, 
TRUE
}

80 , {
doEx¥Sèπ
, 36 , 80, 90, 
FALSE
}

81 , {
doNOP
, 33 , 11,0, 
TRUE
}

82 , {
doNOP
, 59 , 1,0, 
TRUE
}

83 , {
doNOP
, 252, 0,0, 
FALSE
}

84 , {
doEx¥Sèπ
, 255, 21, 8, 
FALSE
}

85 , {
doEndOfRuÀ
, 59 , 1,0, 
TRUE
}

86 , {
doNOP
, 132, 8,0, 
TRUE
}

87 , {
doRuÀEº‹
, 255, 95,0, 
FALSE
}

88 , {
doNOP
, 33 , 13,0, 
TRUE
}

89 , {
doRevî£Dú
, 255, 20, 8, 
FALSE
}

90 , {
doO±i⁄Sèπ
, 130, 15,0, 
TRUE
}

91 , {
doRuÀEº‹
, 255, 95,0, 
FALSE
}

92 , {
doNOP
, 129, 15,0, 
TRUE
}

93 , {
doO±i⁄End
, 255, 17,0, 
FALSE
}

94 , {
doNOP
, 59 , 1,0, 
TRUE
}

95 , {
doNOP
, 132, 17,0, 
TRUE
}

96 , {
doRuÀEº‹
, 255, 95,0, 
FALSE
}

97 , {
doEx¥Sèπ
, 255, 21, 8, 
FALSE
}

98 , {
doRuÀCh¨
, 254, 30,0, 
TRUE
}

99 , {
doNOP
, 132, 21,0, 
TRUE
}

100 , {
doRuÀCh¨
, 131, 30,0, 
TRUE
}

101 , {
doNOP
, 91 , 86, 30, 
FALSE
}

102 , {
doLP¨í
, 40 , 21, 30, 
TRUE
}

103 , {
doNOP
, 36 , 80, 29, 
FALSE
}

104 , {
doDŸAny
, 46 , 30,0, 
TRUE
}

105 , {
doRuÀEº‹
, 255, 95,0, 
FALSE
}

106 , {
doCheckV¨Def
, 255, 30,0, 
FALSE
}

107 , {
doNOP
, 132, 30,0, 
TRUE
}

108 , {
doU«ryOpSèr
, 42 , 35,0, 
TRUE
}

109 , {
doU«ryOpPlus
, 43 , 35,0, 
TRUE
}

110 , {
doU«ryOpQue°i⁄
, 63 , 35,0, 
TRUE
}

111 , {
doNOP
, 255, 35,0, 
FALSE
}

112 , {
doEx¥C©O≥øt‹
, 254, 21,0, 
FALSE
}

113 , {
doNOP
, 132, 35,0, 
TRUE
}

114 , {
doEx¥C©O≥øt‹
, 131, 21,0, 
FALSE
}

115 , {
doEx¥C©O≥øt‹
, 91 , 21,0, 
FALSE
}

116 , {
doEx¥C©O≥øt‹
, 40 , 21,0, 
FALSE
}

117 , {
doEx¥C©O≥øt‹
, 36 , 21,0, 
FALSE
}

118 , {
doEx¥C©O≥øt‹
, 46 , 21,0, 
FALSE
}

119 , {
doEx¥C©O≥øt‹
, 47 , 47,0, 
FALSE
}

120 , {
doEx¥C©O≥øt‹
, 123 , 59,0, 
TRUE
}

121 , {
doEx¥OrO≥øt‹
, 124 , 21,0, 
TRUE
}

122 , {
doEx¥RP¨í
, 41 , 255,0, 
TRUE
}

123 , {
doEx¥Föished
, 255, 255,0, 
FALSE
}

124 , {
doSœsh
, 47 , 49,0, 
TRUE
}

125 , {
doNOP
, 255, 95,0, 
FALSE
}

126 , {
doEx¥C©O≥øt‹
, 254, 21,0, 
FALSE
}

127 , {
doNOP
, 132, 35,0, 
TRUE
}

128 , {
doEx¥C©O≥øt‹
, 131, 21,0, 
FALSE
}

129 , {
doEx¥C©O≥øt‹
, 91 , 21,0, 
FALSE
}

130 , {
doEx¥C©O≥øt‹
, 40 , 21,0, 
FALSE
}

131 , {
doEx¥C©O≥øt‹
, 36 , 21,0, 
FALSE
}

132 , {
doEx¥C©O≥øt‹
, 46 , 21,0, 
FALSE
}

133 , {
doEx¥OrO≥øt‹
, 124 , 21,0, 
TRUE
}

134 , {
doEx¥RP¨í
, 41 , 255,0, 
TRUE
}

135 , {
doEx¥Föished
, 255, 255,0, 
FALSE
}

136 , {
doNOP
, 132, 59,0, 
TRUE
}

137 , {
doSèπTagVÆue
, 128, 62,0, 
FALSE
}

138 , {
doTagEx≥˘edEº‹
, 255, 95,0, 
FALSE
}

139 , {
doNOP
, 132, 66,0, 
TRUE
}

140 , {
doNOP
, 125 , 66,0, 
FALSE
}

141 , {
doTagDigô
, 128, 62,0, 
TRUE
}

142 , {
doTagEx≥˘edEº‹
, 255, 95,0, 
FALSE
}

143 , {
doNOP
, 132, 66,0, 
TRUE
}

144 , {
doTagVÆue
, 125 , 69,0, 
TRUE
}

145 , {
doTagEx≥˘edEº‹
, 255, 95,0, 
FALSE
}

146 , {
doEx¥C©O≥øt‹
, 254, 21,0, 
FALSE
}

147 , {
doNOP
, 132, 69,0, 
TRUE
}

148 , {
doEx¥C©O≥øt‹
, 131, 21,0, 
FALSE
}

149 , {
doEx¥C©O≥øt‹
, 91 , 21,0, 
FALSE
}

150 , {
doEx¥C©O≥øt‹
, 40 , 21,0, 
FALSE
}

151 , {
doEx¥C©O≥øt‹
, 36 , 21,0, 
FALSE
}

152 , {
doEx¥C©O≥øt‹
, 46 , 21,0, 
FALSE
}

153 , {
doEx¥C©O≥øt‹
, 47 , 47,0, 
FALSE
}

154 , {
doEx¥OrO≥øt‹
, 124 , 21,0, 
TRUE
}

155 , {
doEx¥RP¨í
, 41 , 255,0, 
TRUE
}

156 , {
doEx¥Föished
, 255, 255,0, 
FALSE
}

157 , {
doSèπV¨übÀName
, 36 , 82,0, 
TRUE
}

158 , {
doNOP
, 255, 95,0, 
FALSE
}

159 , {
doNOP
, 130, 84,0, 
TRUE
}

160 , {
doV¨übÀNameEx≥˘edEº
, 255, 95,0, 
FALSE
}

161 , {
doNOP
, 129, 84,0, 
TRUE
}

162 , {
doEndV¨übÀName
, 255, 255,0, 
FALSE
}

163 , {
doSˇnUnicodeSë
, 91 , 255,0, 
TRUE
}

164 , {
doSˇnUnicodeSë
, 112 , 255,0, 
TRUE
}

165 , {
doSˇnUnicodeSë
, 80 , 255,0, 
TRUE
}

166 , {
doNOP
, 255, 95,0, 
FALSE
}

167 , {
doNOP
, 132, 90,0, 
TRUE
}

168 , {
doSèπAssign
, 61 , 21, 93, 
TRUE
}

169 , {
doNOP
, 255, 29, 8, 
FALSE
}

170 , {
doEndAssign
, 59 , 1,0, 
TRUE
}

171 , {
doRuÀEº‹AssignEx¥
, 255, 95,0, 
FALSE
}

172 , {
doExô
, 255, 95,0, 
TRUE
}

174 #ifde‡
RBBI_DEBUG


175 c⁄° * c⁄° 
	gRBBIRuÀSèãNames
[] = { 0,

274 
	gU_NAMESPACE_END


	@rbbiscan.cpp

16 
	~"unicode/uty≥s.h
"

18 #i‡!
UCONFIG_NO_BREAK_ITERATION


20 
	~"unicode/uni°r.h
"

21 
	~"unicode/uni£t.h
"

22 
	~"unicode/uch¨.h
"

23 
	~"unicode/uchrôî.h
"

24 
	~"unicode/∑r£pos.h
"

25 
	~"unicode/∑r£îr.h
"

26 
	~"utû.h
"

27 
	~"cmem‹y.h
"

28 
	~"c°rög.h
"

30 
	~"rbbú±.h
"

32 
	~"rbbúb.h
"

33 
	~"rbböode.h
"

34 
	~"rbbisˇn.h
"

35 
	~"rbbôblb.h
"

37 
	~"uas£π.h
"

50 c⁄° 
UCh¨
 
	ggRuÀSë_ruÀ_ch¨_∑âîn
[] = {

58 c⁄° 
UCh¨
 
	ggRuÀSë_«me_ch¨_∑âîn
[] = {

62 c⁄° 
UCh¨
 
	ggRuÀSë_digô_ch¨_∑âîn
[] = {

66 c⁄° 
UCh¨
 
	ggRuÀSë_«me_°¨t_ch¨_∑âîn
[] = {

70 c⁄° 
UCh¨
 
	gkAny
[] = {0x61, 0x6e, 0x79, 0x00};

73 
U_CDECL_BEGIN


74 
U_CALLCONV
 
	$RBBISëTabÀ_dñëî
(*
p
) {

75 
U_NAMESPACE_QUALIFIER
 
RBBISëTabÀEl
 *
px
 = (U_NAMESPACE_QUALIFIER RBBISëTabÀE»*)
p
;

76 
dñëe
 
px
->
key
;

79 
	`u¥v_‰ì
(
px
);

80 
	}
}

81 
U_CDECL_END


83 
U_NAMESPACE_BEGIN


90 
	gRBBIRuÀSˇ¬î
::
	$RBBIRuÀSˇ¬î
(
RBBIRuÀBuûdî
 *
rb
)

92 
fRB
 = 
rb
;

93 
fSèckPå
 = 0;

94 
fSèck
[
fSèckPå
] = 0;

95 
fNodeSèckPå
 = 0;

96 
fRuÀNum
 = 0;

97 
fNodeSèck
[0] = 
NULL
;

99 
fSymbﬁTabÀ
 = 
NULL
;

100 
fSëTabÀ
 = 
NULL
;

102 
fSˇnIndex
 = 0;

103 
fNextIndex
 = 0;

105 
fRevî£RuÀ
 = 
FALSE
;

106 
fLookAhódRuÀ
 = 
FALSE
;

108 
fLöeNum
 = 1;

109 
fCh¨Num
 = 0;

110 
fQuŸeMode
 = 
FALSE
;

114 i‡(
	`U_FAILURE
(*
rb
->
fSètus
)) {

124 
fRuÀSës
[
kRuÀSë_ruÀ_ch¨
-128] = 
	`UnicodeSë
(
gRuÀSë_ruÀ_ch¨_∑âîn
, *
rb
->
fSètus
);

125 
UnicodeSë
 *
whôe•a˚Së
 = 
	`u¥v_›íRuÀWhôeS∑˚Së
(
rb
->
fSètus
);

126 i‡(
	`U_FAILURE
(*
rb
->
fSètus
)) {

129 
fRuÀSës
[
kRuÀSë_whôe_•a˚
-128] = *
whôe•a˚Së
;

130 
dñëe
 
whôe•a˚Së
;

131 
fRuÀSës
[
kRuÀSë_«me_ch¨
-128] = 
	`UnicodeSë
(
gRuÀSë_«me_ch¨_∑âîn
, *
rb
->
fSètus
);

132 
fRuÀSës
[
kRuÀSë_«me_°¨t_ch¨
-128] = 
	`UnicodeSë
(
gRuÀSë_«me_°¨t_ch¨_∑âîn
, *
rb
->
fSètus
);

133 
fRuÀSës
[
kRuÀSë_digô_ch¨
-128] = 
	`UnicodeSë
(
gRuÀSë_digô_ch¨_∑âîn
, *
rb
->
fSètus
);

134 i‡(*
rb
->
fSètus
 =
U_ILLEGAL_ARGUMENT_ERROR
) {

138 *
rb
->
fSètus
 = 
U_BRK_INIT_ERROR
;

140 i‡(
	`U_FAILURE
(*
rb
->
fSètus
)) {

144 
fSymbﬁTabÀ
 = 
√w
 
	`RBBISymbﬁTabÀ
(
this
, 
rb
->
fRuÀs
, *rb->
fSètus
);

145 i‡(
fSymbﬁTabÀ
 =
NULL
) {

146 *
rb
->
fSètus
 = 
U_MEMORY_ALLOCATION_ERROR
;

149 
fSëTabÀ
 = 
	`uhash_›í
(
uhash_hashUnicodeSåög
, 
uhash_com∑ªUnicodeSåög
, 
NULL
, 
rb
->
fSètus
);

150 i‡(
	`U_FAILURE
(*
rb
->
fSètus
)) {

153 
	`uhash_£tVÆueDñëî
(
fSëTabÀ
, 
RBBISëTabÀ_dñëî
);

154 
	}
}

163 
	gRBBIRuÀSˇ¬î
::~
	$RBBIRuÀSˇ¬î
() {

164 
dñëe
 
fSymbﬁTabÀ
;

165 i‡(
fSëTabÀ
 !
NULL
) {

166 
	`uhash_˛o£
(
fSëTabÀ
);

167 
fSëTabÀ
 = 
NULL
;

175 
fNodeSèckPå
 > 0) {

176 
dñëe
 
fNodeSèck
[
fNodeSèckPå
];

177 
fNodeSèckPå
--;

180 
	}
}

196 
UBoﬁ
 
	gRBBIRuÀSˇ¬î
::
	$doP¨£A˘i⁄s
(
öt32_t
 
a˘i⁄
)

198 
RBBINode
 *
n
 = 
NULL
;

200 
UBoﬁ
 
ªtu∫VÆ
 = 
TRUE
;

202 
a˘i⁄
) {

204 
doEx¥Sèπ
:

205 
	`pushNewNode
(
RBBINode
::
›Sèπ
);

206 
fRuÀNum
++;

210 
doEx¥OrO≥øt‹
:

212 
	`fixOpSèck
(
RBBINode
::
¥ecOpC©
);

213 
RBBINode
 *
›î™dNode
 = 
fNodeSèck
[
fNodeSèckPå
--];

214 
RBBINode
 *
‹Node
 = 
	`pushNewNode
(RBBINode::
›Or
);

215 
‹Node
->
fLe·Chûd
 = 
›î™dNode
;

216 
›î™dNode
->
fP¨ít
 = 
‹Node
;

220 
doEx¥C©O≥øt‹
:

226 
	`fixOpSèck
(
RBBINode
::
¥ecOpC©
);

227 
RBBINode
 *
›î™dNode
 = 
fNodeSèck
[
fNodeSèckPå
--];

228 
RBBINode
 *
ˇtNode
 = 
	`pushNewNode
(RBBINode::
›C©
);

229 
ˇtNode
->
fLe·Chûd
 = 
›î™dNode
;

230 
›î™dNode
->
fP¨ít
 = 
ˇtNode
;

234 
doLP¨í
:

240 
	`pushNewNode
(
RBBINode
::
›LP¨í
);

243 
doEx¥RP¨í
:

244 
	`fixOpSèck
(
RBBINode
::
¥ecLP¨í
);

247 
doNOP
:

250 
doSèπAssign
:

258 
n
 = 
fNodeSèck
[
fNodeSèckPå
-1];

259 
n
->
fFú°Pos
 = 
fNextIndex
;

263 
	`pushNewNode
(
RBBINode
::
›Sèπ
);

269 
doEndAssign
:

275 
	`fixOpSèck
(
RBBINode
::
¥ecSèπ
);

277 
RBBINode
 *
°¨tEx¥Node
 = 
fNodeSèck
[
fNodeSèckPå
-2];

278 
RBBINode
 *
v¨RefNode
 = 
fNodeSèck
[
fNodeSèckPå
-1];

279 
RBBINode
 *
RHSEx¥Node
 = 
fNodeSèck
[
fNodeSèckPå
];

283 
RHSEx¥Node
->
fFú°Pos
 = 
°¨tEx¥Node
->fFirstPos;

284 
RHSEx¥Node
->
fLa°Pos
 = 
fSˇnIndex
;

285 
fRB
->
fRuÀs
.
	`exåa˘Bëwìn
(
RHSEx¥Node
->
fFú°Pos
, RHSEx¥Node->
fLa°Pos
, RHSEx¥Node->
fText
);

288 
v¨RefNode
->
fLe·Chûd
 = 
RHSEx¥Node
;

289 
RHSEx¥Node
->
fP¨ít
 = 
v¨RefNode
;

292 
fSymbﬁTabÀ
->
	`addE¡ry
(
v¨RefNode
->
fText
, v¨RefNode, *
fRB
->
fSètus
);

293 i‡(
	`U_FAILURE
(*
fRB
->
fSètus
)) {

296 
UEº‹Code
 
t
 = *
fRB
->
fSètus
;

297 *
fRB
->
fSètus
 = 
U_ZERO_ERROR
;

298 
	`îr‹
(
t
);

302 
dñëe
 
°¨tEx¥Node
;

303 
fNodeSèckPå
-=3;

307 
doEndOfRuÀ
:

309 
	`fixOpSèck
(
RBBINode
::
¥ecSèπ
);

310 i‡(
	`U_FAILURE
(*
fRB
->
fSètus
)) {

313 #ifde‡
RBBI_DEBUG


314 i‡(
fRB
->
fDebugEnv
 && 
	`u¥v_°r°r
(fRB->fDebugEnv, "πªe")Ë{
	`¥ötNodeSèck
("end ofÑule");}

316 
	`U_ASSERT
(
fNodeSèckPå
 == 1);

320 i‡(
fLookAhódRuÀ
) {

321 
RBBINode
 *
thisRuÀ
 = 
fNodeSèck
[
fNodeSèckPå
];

322 
RBBINode
 *
ídNode
 = 
	`pushNewNode
(RBBINode::
ídM¨k
);

323 
RBBINode
 *
ˇtNode
 = 
	`pushNewNode
(RBBINode::
›C©
);

324 
fNodeSèckPå
 -= 2;

325 
ˇtNode
->
fLe·Chûd
 = 
thisRuÀ
;

326 
ˇtNode
->
fRightChûd
 = 
ídNode
;

327 
fNodeSèck
[
fNodeSèckPå
] = 
ˇtNode
;

328 
ídNode
->
fVÆ
 = 
fRuÀNum
;

329 
ídNode
->
fLookAhódEnd
 = 
TRUE
;

340 
RBBINode
 **
de°RuÀs
 = (
fRevî£RuÀ
? &
fRB
->
fRevî£Tªe
 : fRB->
fDeÁu…Tªe
);

342 i‡(*
de°RuÀs
 !
NULL
) {

348 
RBBINode
 *
thisRuÀ
 = 
fNodeSèck
[
fNodeSèckPå
];

349 
RBBINode
 *
¥evRuÀs
 = *
de°RuÀs
;

350 
RBBINode
 *
‹Node
 = 
	`pushNewNode
(RBBINode::
›Or
);

351 
‹Node
->
fLe·Chûd
 = 
¥evRuÀs
;

352 
¥evRuÀs
->
fP¨ít
 = 
‹Node
;

353 
‹Node
->
fRightChûd
 = 
thisRuÀ
;

354 
thisRuÀ
->
fP¨ít
 = 
‹Node
;

355 *
de°RuÀs
 = 
‹Node
;

361 *
de°RuÀs
 = 
fNodeSèck
[
fNodeSèckPå
];

363 
fRevî£RuÀ
 = 
FALSE
;

364 
fLookAhódRuÀ
 = 
FALSE
;

365 
fNodeSèckPå
 = 0;

370 
doRuÀEº‹
:

371 
	`îr‹
(
U_BRK_RULE_SYNTAX
);

372 
ªtu∫VÆ
 = 
FALSE
;

376 
doV¨übÀNameEx≥˘edEº
:

377 
	`îr‹
(
U_BRK_RULE_SYNTAX
);

387 
doU«ryOpPlus
:

389 
RBBINode
 *
›î™dNode
 = 
fNodeSèck
[
fNodeSèckPå
--];

390 
RBBINode
 *
∂usNode
 = 
	`pushNewNode
(RBBINode::
›Plus
);

391 
∂usNode
->
fLe·Chûd
 = 
›î™dNode
;

392 
›î™dNode
->
fP¨ít
 = 
∂usNode
;

396 
doU«ryOpQue°i⁄
:

398 
RBBINode
 *
›î™dNode
 = 
fNodeSèck
[
fNodeSèckPå
--];

399 
RBBINode
 *
qNode
 = 
	`pushNewNode
(RBBINode::
›Que°i⁄
);

400 
qNode
->
fLe·Chûd
 = 
›î™dNode
;

401 
›î™dNode
->
fP¨ít
 = 
qNode
;

405 
doU«ryOpSèr
:

407 
RBBINode
 *
›î™dNode
 = 
fNodeSèck
[
fNodeSèckPå
--];

408 
RBBINode
 *
°¨Node
 = 
	`pushNewNode
(RBBINode::
›Sèr
);

409 
°¨Node
->
fLe·Chûd
 = 
›î™dNode
;

410 
›î™dNode
->
fP¨ít
 = 
°¨Node
;

414 
doRuÀCh¨
:

421 
n
 = 
	`pushNewNode
(
RBBINode
::
£tRef
);

422 
	`födSëF‹
(
fC
.
fCh¨
, 
n
);

423 
n
->
fFú°Pos
 = 
fSˇnIndex
;

424 
n
->
fLa°Pos
 = 
fNextIndex
;

425 
fRB
->
fRuÀs
.
	`exåa˘Bëwìn
(
n
->
fFú°Pos
,Ç->
fLa°Pos
,Ç->
fText
);

429 
doDŸAny
:

432 
n
 = 
	`pushNewNode
(
RBBINode
::
£tRef
);

433 
	`födSëF‹
(
kAny
, 
n
);

434 
n
->
fFú°Pos
 = 
fSˇnIndex
;

435 
n
->
fLa°Pos
 = 
fNextIndex
;

436 
fRB
->
fRuÀs
.
	`exåa˘Bëwìn
(
n
->
fFú°Pos
,Ç->
fLa°Pos
,Ç->
fText
);

440 
doSœsh
:

442 
n
 = 
	`pushNewNode
(
RBBINode
::
lookAhód
);

443 
n
->
fVÆ
 = 
fRuÀNum
;

444 
n
->
fFú°Pos
 = 
fSˇnIndex
;

445 
n
->
fLa°Pos
 = 
fNextIndex
;

446 
fRB
->
fRuÀs
.
	`exåa˘Bëwìn
(
n
->
fFú°Pos
,Ç->
fLa°Pos
,Ç->
fText
);

447 
fLookAhódRuÀ
 = 
TRUE
;

451 
doSèπTagVÆue
:

453 
n
 = 
	`pushNewNode
(
RBBINode
::
èg
);

454 
n
->
fVÆ
 = 0;

455 
n
->
fFú°Pos
 = 
fSˇnIndex
;

456 
n
->
fLa°Pos
 = 
fNextIndex
;

459 
doTagDigô
:

462 
n
 = 
fNodeSèck
[
fNodeSèckPå
];

463 
uöt32_t
 
v
 = 
	`u_ch¨DigôVÆue
(
fC
.
fCh¨
);

464 
	`U_ASSERT
(
v
 < 10);

465 
n
->
fVÆ
 =Ç->fVÆ*10 + 
v
;

469 
doTagVÆue
:

470 
n
 = 
fNodeSèck
[
fNodeSèckPå
];

471 
n
->
fLa°Pos
 = 
fNextIndex
;

472 
fRB
->
fRuÀs
.
	`exåa˘Bëwìn
(
n
->
fFú°Pos
,Ç->
fLa°Pos
,Ç->
fText
);

475 
doTagEx≥˘edEº‹
:

476 
	`îr‹
(
U_BRK_MALFORMED_RULE_TAG
);

477 
ªtu∫VÆ
 = 
FALSE
;

480 
doO±i⁄Sèπ
:

482 
fO±i⁄Sèπ
 = 
fSˇnIndex
;

485 
doO±i⁄End
:

487 
UnicodeSåög
 
	`›t
(
fRB
->
fRuÀs
, 
fO±i⁄Sèπ
, 
fSˇnIndex
-fOptionStart);

488 i‡(
›t
 =
	`UNICODE_STRING
("chain", 5)) {

489 
fRB
->
fChaöRuÀs
 = 
TRUE
;

490 } i‡(
›t
 =
	`UNICODE_STRING
("LBCMNoChain", 11)) {

491 
fRB
->
fLBCMNoChaö
 = 
TRUE
;

492 } i‡(
›t
 =
	`UNICODE_STRING
("forward", 7)) {

493 
fRB
->
fDeÁu…Tªe
 = &fRB->
fF‹w¨dTªe
;

494 } i‡(
›t
 =
	`UNICODE_STRING
("reverse", 7)) {

495 
fRB
->
fDeÁu…Tªe
 = &fRB->
fRevî£Tªe
;

496 } i‡(
›t
 =
	`UNICODE_STRING
("safe_forward", 12)) {

497 
fRB
->
fDeÁu…Tªe
 = &fRB->
fSa„FwdTªe
;

498 } i‡(
›t
 =
	`UNICODE_STRING
("safe_reverse", 12)) {

499 
fRB
->
fDeÁu…Tªe
 = &fRB->
fSa„RevTªe
;

500 } i‡(
›t
 =
	`UNICODE_STRING
("lookAheadHardBreak", 18)) {

501 
fRB
->
fLookAhódH¨dBªak
 = 
TRUE
;

503 
	`îr‹
(
U_BRK_UNRECOGNIZED_OPTION
);

508 
doRevî£Dú
:

509 
fRevî£RuÀ
 = 
TRUE
;

512 
doSèπV¨übÀName
:

513 
n
 = 
	`pushNewNode
(
RBBINode
::
v¨Ref
);

514 i‡(
	`U_FAILURE
(*
fRB
->
fSètus
)) {

517 
n
->
fFú°Pos
 = 
fSˇnIndex
;

520 
doEndV¨übÀName
:

521 
n
 = 
fNodeSèck
[
fNodeSèckPå
];

522 i‡(
n
==
NULL
 ||Ç->
fTy≥
 !
RBBINode
::
v¨Ref
) {

523 
	`îr‹
(
U_BRK_INTERNAL_ERROR
);

526 
n
->
fLa°Pos
 = 
fSˇnIndex
;

527 
fRB
->
fRuÀs
.
	`exåa˘Bëwìn
(
n
->
fFú°Pos
+1,Ç->
fLa°Pos
,Ç->
fText
);

532 
n
->
fLe·Chûd
 = 
fSymbﬁTabÀ
->
	`lookupNode
“->
fText
);

535 
doCheckV¨Def
:

536 
n
 = 
fNodeSèck
[
fNodeSèckPå
];

537 i‡(
n
->
fLe·Chûd
 =
NULL
) {

538 
	`îr‹
(
U_BRK_UNDEFINED_VARIABLE
);

539 
ªtu∫VÆ
 = 
FALSE
;

543 
doEx¥Föished
:

546 
doRuÀEº‹AssignEx¥
:

547 
	`îr‹
(
U_BRK_ASSIGN_ERROR
);

548 
ªtu∫VÆ
 = 
FALSE
;

551 
doExô
:

552 
ªtu∫VÆ
 = 
FALSE
;

555 
doSˇnUnicodeSë
:

556 
	`sˇnSë
();

560 
	`îr‹
(
U_BRK_INTERNAL_ERROR
);

561 
ªtu∫VÆ
 = 
FALSE
;

564  
ªtu∫VÆ
;

565 
	}
}

576 
	gRBBIRuÀSˇ¬î
::
	$îr‹
(
UEº‹Code
 
e
) {

577 i‡(
	`U_SUCCESS
(*
fRB
->
fSètus
)) {

578 *
fRB
->
fSètus
 = 
e
;

579 i‡(
fRB
->
fP¨£Eº‹
) {

580 
fRB
->
fP¨£Eº‹
->
löe
 = 
fLöeNum
;

581 
fRB
->
fP¨£Eº‹
->
off£t
 = 
fCh¨Num
;

582 
fRB
->
fP¨£Eº‹
->
¥eC⁄ãxt
[0] = 0;

583 
fRB
->
fP¨£Eº‹
->
¥eC⁄ãxt
[0] = 0;

586 
	}
}

606 
	gRBBIRuÀSˇ¬î
::
fixOpSèck
(
RBBINode
::
OpPª˚dí˚
 
p
) {

607 
RBBINode
 *
n
;

610 
	gn
 = 
fNodeSèck
[
fNodeSèckPå
-1];

611 i‡(
	gn
->
	gfPª˚dí˚
 == 0) {

612 
RBBIDebugPuts
("RBBIRuleScanner::fixOpStack, bad operatorÇode");

613 
îr‹
(
U_BRK_INTERNAL_ERROR
);

617 i‡(
	gn
->
	gfPª˚dí˚
 < 
	gp
 ||Ç->fPª˚dí˚ <
RBBINode
::
¥ecLP¨í
) {

625 
	gn
->
	gfRightChûd
 = 
fNodeSèck
[
fNodeSèckPå
];

626 
	gfNodeSèck
[
fNodeSèckPå
]->
	gfP¨ít
 = 
n
;

627 
	gfNodeSèckPå
--;

631 i‡(
	gp
 <
RBBINode
::
¥ecLP¨í
) {

636 i‡(
n
->
fPª˚dí˚
 !
p
) {

639 
îr‹
(
U_BRK_MISMATCHED_PAREN
);

641 
	gfNodeSèck
[
fNodeSèckPå
-1] = 
fNodeSèck
[fNodeStackPtr];

642 
	gfNodeSèckPå
--;

644 
dñëe
 
	gn
;

668 
	gRBBIRuÀSˇ¬î
::
	$födSëF‹
(c⁄° 
UnicodeSåög
 &
s
, 
RBBINode
 *
node
, 
UnicodeSë
 *
£tToAd›t
) {

670 
RBBISëTabÀEl
 *
ñ
;

675 
ñ
 = (
RBBISëTabÀEl
 *)
	`uhash_gë
(
fSëTabÀ
, &
s
);

676 i‡(
ñ
 !
NULL
) {

677 
dñëe
 
£tToAd›t
;

678 
node
->
fLe·Chûd
 = 
ñ
->
vÆ
;

679 
	`U_ASSERT
(
node
->
fLe·Chûd
->
fTy≥
 =
RBBINode
::
u£t
);

686 i‡(
£tToAd›t
 =
NULL
) {

687 i‡(
s
.
	`com∑ª
(
kAny
, -1) == 0) {

688 
£tToAd›t
 = 
√w
 
	`UnicodeSë
(0x000000, 0x10ffff);

690 
UCh¨32
 
c
;

691 
c
 = 
s
.
	`ch¨32At
(0);

692 
£tToAd›t
 = 
√w
 
	`UnicodeSë
(
c
, c);

700 
RBBINode
 *
u£tNode
 = 
√w
 
	`RBBINode
(RBBINode::
u£t
);

701 i‡(
u£tNode
 =
NULL
) {

702 
	`îr‹
(
U_MEMORY_ALLOCATION_ERROR
);

705 
u£tNode
->
fI≈utSë
 = 
£tToAd›t
;

706 
u£tNode
->
fP¨ít
 = 
node
;

707 
node
->
fLe·Chûd
 = 
u£tNode
;

708 
u£tNode
->
fText
 = 
s
;

714 
fRB
->
fUSëNodes
->
	`addEÀmít
(
u£tNode
, *fRB->
fSètus
);

720 
ñ
 = (
RBBISëTabÀEl
 *)
	`u¥v_mÆloc
((RBBISetTableEl));

721 
UnicodeSåög
 *
tkey
 = 
√w
 
	`UnicodeSåög
(
s
);

722 i‡(
tkey
 =
NULL
 || 
ñ
 =NULL || 
£tToAd›t
 == NULL) {

724 
dñëe
 
tkey
;

725 
tkey
 = 
NULL
;

726 
	`u¥v_‰ì
(
ñ
);

727 
ñ
 = 
NULL
;

728 
dñëe
 
£tToAd›t
;

729 
£tToAd›t
 = 
NULL
;

731 
	`îr‹
(
U_MEMORY_ALLOCATION_ERROR
);

734 
ñ
->
key
 = 
tkey
;

735 
ñ
->
vÆ
 = 
u£tNode
;

736 
	`uhash_put
(
fSëTabÀ
, 
ñ
->
key
,Él, 
fRB
->
fSètus
);

739 
	}
}

748 c⁄° 
UCh¨
 
	gchCR
 = 0x0d;

749 c⁄° 
UCh¨
 
	gchLF
 = 0x0a;

750 c⁄° 
UCh¨
 
	gchNEL
 = 0x85;

751 c⁄° 
UCh¨
 
	gchLS
 = 0x2028;

752 c⁄° 
UCh¨
 
	gchApos
 = 0x27;

753 c⁄° 
UCh¨
 
	gchPound
 = 0x23;

754 c⁄° 
UCh¨
 
	gchBackSœsh
 = 0x5c;

755 c⁄° 
UCh¨
 
	gchLP¨í
 = 0x28;

756 c⁄° 
UCh¨
 
	gchRP¨í
 = 0x29;

765 
UnicodeSåög
 
	gRBBIRuÀSˇ¬î
::
	$°rùRuÀs
(c⁄° 
UnicodeSåög
 &
ruÀs
) {

766 
UnicodeSåög
 
°rù≥dRuÀs
;

767 
ruÀsLígth
 = 
ruÀs
.
	`Àngth
();

768 
idx
 = 0; idx < 
ruÀsLígth
; ) {

769 
UCh¨
 
ch
 = 
ruÀs
[
idx
++];

770 i‡(
ch
 =
chPound
) {

771 
idx
 < 
ruÀsLígth


772 && 
ch
 !
chCR
 && ch !
chLF
 && ch !
chNEL
)

774 
ch
 = 
ruÀs
[
idx
++];

777 i‡(!
	`u_isISOC⁄åﬁ
(
ch
)) {

778 
°rù≥dRuÀs
.
	`≠≥nd
(
ch
);

782  
°rù≥dRuÀs
;

783 
	}
}

793 
UCh¨32
 
	gRBBIRuÀSˇ¬î
::
	$√xtCh¨LL
() {

794 
UCh¨32
 
ch
;

796 i‡(
fNextIndex
 >
fRB
->
fRuÀs
.
	`Àngth
()) {

797  (
UCh¨32
)-1;

799 
ch
 = 
fRB
->
fRuÀs
.
	`ch¨32At
(
fNextIndex
);

800 
fNextIndex
 = 
fRB
->
fRuÀs
.
	`moveIndex32
(fNextIndex, 1);

802 i‡(
ch
 =
chCR
 ||

803 
ch
 =
chNEL
 ||

804 
ch
 =
chLS
 ||

805 (
ch
 =
chLF
 && 
fLa°Ch¨
 !
chCR
)) {

808 
fLöeNum
++;

809 
fCh¨Num
=0;

810 i‡(
fQuŸeMode
) {

811 
	`îr‹
(
U_BRK_NEW_LINE_IN_QUOTED_STRING
);

812 
fQuŸeMode
 = 
FALSE
;

818 i‡(
ch
 !
chLF
) {

819 
fCh¨Num
++;

822 
fLa°Ch¨
 = 
ch
;

823  
ch
;

824 
	}
}

834 
	gRBBIRuÀSˇ¬î
::
	$√xtCh¨
(
RBBIRuÀCh¨
 &
c
) {

839 
fSˇnIndex
 = 
fNextIndex
;

840 
c
.
fCh¨
 = 
	`√xtCh¨LL
();

841 
c
.
fEsˇ≥d
 = 
FALSE
;

847 i‡(
c
.
fCh¨
 =
chApos
) {

848 i‡(
fRB
->
fRuÀs
.
	`ch¨32At
(
fNextIndex
Ë=
chApos
) {

849 
c
.
fCh¨
 = 
	`√xtCh¨LL
();

850 
c
.
fEsˇ≥d
 = 
TRUE
;

857 
fQuŸeMode
 = !fQuoteMode;

858 i‡(
fQuŸeMode
 =
TRUE
) {

859 
c
.
fCh¨
 = 
chLP¨í
;

861 
c
.
fCh¨
 = 
chRP¨í
;

863 
c
.
fEsˇ≥d
 = 
FALSE
;

868 i‡(
fQuŸeMode
) {

869 
c
.
fEsˇ≥d
 = 
TRUE
;

875 i‡(
c
.
fCh¨
 =
chPound
) {

882 
c
.
fCh¨
 = 
	`√xtCh¨LL
();

883 i‡(
c
.
fCh¨
 =(
UCh¨32
)-1 ||

884 
c
.
fCh¨
 =
chCR
 ||

885 
c
.
fCh¨
 =
chLF
 ||

886 
c
.
fCh¨
 =
chNEL
 ||

887 
c
.
fCh¨
 =
chLS
) {;}

890 i‡(
c
.
fCh¨
 =(
UCh¨32
)-1) {

898 i‡(
c
.
fCh¨
 =
chBackSœsh
) {

899 
c
.
fEsˇ≥d
 = 
TRUE
;

900 
öt32_t
 
°¨tX
 = 
fNextIndex
;

901 
c
.
fCh¨
 = 
fRB
->
fRuÀs
.
	`u√sˇ≥At
(
fNextIndex
);

902 i‡(
fNextIndex
 =
°¨tX
) {

903 
	`îr‹
(
U_BRK_HEX_DIGITS_EXPECTED
);

905 
fCh¨Num
 +
fNextIndex
-
°¨tX
;

909 
	}
}

919 
	gRBBIRuÀSˇ¬î
::
	$∑r£
() {

920 
uöt16_t
 
°©e
;

921 c⁄° 
RBBIRuÀTabÀEl
 *
èbÀEl
;

923 i‡(
	`U_FAILURE
(*
fRB
->
fSètus
)) {

927 
°©e
 = 1;

928 
	`√xtCh¨
(
fC
);

940 i‡(
	`U_FAILURE
(*
fRB
->
fSètus
)) {

946 i‡(
°©e
 == 0) {

956 
èbÀEl
 = &
gRuÀP¨£SèãTabÀ
[
°©e
];

957 #ifde‡
RBBI_DEBUG


958 i‡(
fRB
->
fDebugEnv
 && 
	`u¥v_°r°r
(fRB->fDebugEnv, "scan")) {

959 
	`RBBIDebugPrötf
("char,Üine, col = (\'%c\', %d, %d) state=%s ",

960 
fC
.
fCh¨
, 
fLöeNum
, 
fCh¨Num
, 
RBBIRuÀSèãNames
[
°©e
]);

965 #ifde‡
RBBI_DEBUG


966 i‡(
fRB
->
fDebugEnv
 && 
	`u¥v_°r°r
(fRB->fDebugEnv, "sˇn")Ë{ 
	`RBBIDebugPrötf
(".");}

968 i‡(
èbÀEl
->
fCh¨Cœss
 < 127 && 
fC
.
fEsˇ≥d
 =
FALSE
 &&ÅabÀEl->fCh¨Cœs†=fC.
fCh¨
) {

974 i‡(
èbÀEl
->
fCh¨Cœss
 == 255) {

978 i‡(
èbÀEl
->
fCh¨Cœss
 =254 && 
fC
.
fEsˇ≥d
) {

982 i‡(
èbÀEl
->
fCh¨Cœss
 =253 && 
fC
.
fEsˇ≥d
 &&

983 (
fC
.
fCh¨
 == 0x50 || fC.fChar == 0x70 )) {

987 i‡(
èbÀEl
->
fCh¨Cœss
 =252 && 
fC
.
fCh¨
 =(
UCh¨32
)-1) {

992 i‡(
èbÀEl
->
fCh¨Cœss
 >= 128 &&ÅableEl->fCharClass < 240 &&

993 
fC
.
fEsˇ≥d
 =
FALSE
 &&

994 
fC
.
fCh¨
 !(
UCh¨32
)-1) {

995 i‡(
fRuÀSës
[
èbÀEl
->
fCh¨Cœss
-128].
	`c⁄èös
(
fC
.
fCh¨
)) {

1003 
èbÀEl
++;

1005 i‡(
fRB
->
fDebugEnv
 && 
	`u¥v_°r°r
(fRB->fDebugEnv, "sˇn")Ë{ 
	`RBBIDebugPuts
("");}

1011 i‡(
	`doP¨£A˘i⁄s
((
öt32_t
)
èbÀEl
->
fA˘i⁄
Ë=
FALSE
) {

1018 i‡(
èbÀEl
->
fPushSèã
 != 0) {

1019 
fSèckPå
++;

1020 i‡(
fSèckPå
 >
kSèckSize
) {

1021 
	`îr‹
(
U_BRK_INTERNAL_ERROR
);

1022 
	`RBBIDebugPuts
("RBBIRuleScanner::parse() - state stack overflow.");

1023 
fSèckPå
--;

1025 
fSèck
[
fSèckPå
] = 
èbÀEl
->
fPushSèã
;

1028 i‡(
èbÀEl
->
fNextCh¨
) {

1029 
	`√xtCh¨
(
fC
);

1034 i‡(
èbÀEl
->
fNextSèã
 != 255) {

1035 
°©e
 = 
èbÀEl
->
fNextSèã
;

1037 
°©e
 = 
fSèck
[
fSèckPå
];

1038 
fSèckPå
--;

1039 i‡(
fSèckPå
 < 0) {

1040 
	`îr‹
(
U_BRK_INTERNAL_ERROR
);

1041 
	`RBBIDebugPuts
("RBBIRuleScanner::parse() - state stack underflow.");

1042 
fSèckPå
++;

1051 i‡(
fRB
->
fRevî£Tªe
 =
NULL
) {

1052 
fRB
->
fRevî£Tªe
 = 
	`pushNewNode
(
RBBINode
::
›Sèr
);

1053 
RBBINode
 *
›î™d
 = 
	`pushNewNode
(RBBINode::
£tRef
);

1054 
	`födSëF‹
(
kAny
, 
›î™d
);

1055 
fRB
->
fRevî£Tªe
->
fLe·Chûd
 = 
›î™d
;

1056 
›î™d
->
fP¨ít
 = 
fRB
->
fRevî£Tªe
;

1057 
fNodeSèckPå
 -= 2;

1066 #ifde‡
RBBI_DEBUG


1067 i‡(
fRB
->
fDebugEnv
 && 
	`u¥v_°r°r
(fRB->fDebugEnv, "symbﬁs")Ë{
fSymbﬁTabÀ
->
	`rbbiSymèbÀPröt
();}

1068 i‡(
fRB
->
fDebugEnv
 && 
	`u¥v_°r°r
(fRB->fDebugEnv, "ptree"))

1070 
	`RBBIDebugPrötf
("Completed Forward Rules Parse Tree...\n");

1071 
fRB
->
fF‹w¨dTªe
->
	`¥ötTªe
(
TRUE
);

1072 
	`RBBIDebugPrötf
("\nCompleted Reverse Rules Parse Tree...\n");

1073 
fRB
->
fRevî£Tªe
->
	`¥ötTªe
(
TRUE
);

1074 
	`RBBIDebugPrötf
("\nCompleted Safe Point Forward Rules Parse Tree...\n");

1075 
fRB
->
fSa„FwdTªe
->
	`¥ötTªe
(
TRUE
);

1076 
	`RBBIDebugPrötf
("\nCompleted Safe Point Reverse Rules Parse Tree...\n");

1077 
fRB
->
fSa„RevTªe
->
	`¥ötTªe
(
TRUE
);

1080 
	}
}

1088 #ifde‡
RBBI_DEBUG


1089 
	gRBBIRuÀSˇ¬î
::
	$¥ötNodeSèck
(c⁄° *
tôÀ
) {

1090 
i
;

1091 
	`RBBIDebugPrötf
("%s. DumpögÇodê°ack...\n", 
tôÀ
);

1092 
i
=
fNodeSèckPå
; i>0; i--Ë{
fNodeSèck
[i]->
	`¥ötTªe
(
TRUE
);}

1093 
	}
}

1105 
RBBINode
 *
	gRBBIRuÀSˇ¬î
::
pushNewNode
(RBBINode::
NodeTy≥
 
t
) {

1106 
fNodeSèckPå
++;

1107 i‡(
	gfNodeSèckPå
 >
kSèckSize
) {

1108 
îr‹
(
U_BRK_INTERNAL_ERROR
);

1109 
RBBIDebugPuts
("RBBIRuleScanner::pushNewNode - stack overflow.");

1110 *
	gfRB
->
	gfSètus
 = 
U_BRK_INTERNAL_ERROR
;

1111  
	gNULL
;

1113 
	gfNodeSèck
[
fNodeSèckPå
] = 
√w
 
RBBINode
(
t
);

1114 i‡(
	gfNodeSèck
[
fNodeSèckPå
] =
NULL
) {

1115 *
fRB
->
fSètus
 = 
U_MEMORY_ALLOCATION_ERROR
;

1117  
	gfNodeSèck
[
fNodeSèckPå
];

1136 
	gRBBIRuÀSˇ¬î
::
	$sˇnSë
() {

1137 
UnicodeSë
 *
u£t
;

1138 
P¨£Posôi⁄
 
pos
;

1139 
°¨tPos
;

1140 
i
;

1142 i‡(
	`U_FAILURE
(*
fRB
->
fSètus
)) {

1146 
pos
.
	`£tIndex
(
fSˇnIndex
);

1147 
°¨tPos
 = 
fSˇnIndex
;

1148 
UEº‹Code
 
loˇlSètus
 = 
U_ZERO_ERROR
;

1149 
u£t
 = 
√w
 
	`UnicodeSë
(
fRB
->
fRuÀs
, 
pos
, 
USET_IGNORE_SPACE
,

1150 
fSymbﬁTabÀ
,

1151 
loˇlSètus
);

1152 i‡(
u£t
 =
NULL
) {

1153 
loˇlSètus
 = 
U_MEMORY_ALLOCATION_ERROR
;

1155 i‡(
	`U_FAILURE
(
loˇlSètus
)) {

1158 #ifde‡
RBBI_DEBUG


1159 
	`RBBIDebugPrötf
("UnicodeSëÖ¨£Öo°i⁄.Eº‹Index = %d\n", 
pos
.
	`gëIndex
());

1161 
	`îr‹
(
loˇlSètus
);

1162 
dñëe
 
u£t
;

1168 i‡(
u£t
->
	`isEm±y
()) {

1173 
	`îr‹
(
U_BRK_RULE_EMPTY_SET
);

1174 
dñëe
 
u£t
;

1182 
i
 = 
pos
.
	`gëIndex
();

1184 i‡(
fNextIndex
 >
i
) {

1187 
	`√xtCh¨LL
();

1190 i‡(
	`U_SUCCESS
(*
fRB
->
fSètus
)) {

1191 
RBBINode
 *
n
;

1193 
n
 = 
	`pushNewNode
(
RBBINode
::
£tRef
);

1194 
n
->
fFú°Pos
 = 
°¨tPos
;

1195 
n
->
fLa°Pos
 = 
fNextIndex
;

1196 
fRB
->
fRuÀs
.
	`exåa˘Bëwìn
(
n
->
fFú°Pos
,Ç->
fLa°Pos
,Ç->
fText
);

1203 
	`födSëF‹
(
n
->
fText
,Ç, 
u£t
);

1206 
	}
}

1208 
	gU_NAMESPACE_END


	@rbbiscan.h

11 #i‚de‡
RBBISCAN_H


12 
	#RBBISCAN_H


	)

14 
	~"unicode/uty≥s.h
"

15 
	~"unicode/uobje˘.h
"

16 
	~"unicode/rbbi.h
"

17 
	~"unicode/uni£t.h
"

18 
	~"unicode/∑r£îr.h
"

19 
	~"uhash.h
"

20 
	~"uve˘‹.h
"

21 
	~"unicode/symèbÀ.h
"

23 
	~"rbböode.h
"

28 
U_NAMESPACE_BEGIN


30 
˛ass
 
	gRBBIRuÀBuûdî
;

31 
˛ass
 
	gRBBISymbﬁTabÀ
;

45 ˛as†
	cRBBIRuÀSˇ¬î
 : 
public
 
UMem‹y
 {

46 
public
:

49 
kSèckSize
 = 100

54 
	sRBBIRuÀCh¨
 {

55 
UCh¨32
 
	gfCh¨
;

56 
UBoﬁ
 
	gfEsˇ≥d
;

59 
RBBIRuÀSˇ¬î
(
RBBIRuÀBuûdî
 *
rb
);

62 
	gvútuÆ
 ~
RBBIRuÀSˇ¬î
();

64 
√xtCh¨
(
RBBIRuÀCh¨
 &
c
);

67 
UBoﬁ
 
push
(c⁄° 
RBBIRuÀCh¨
 &
c
);

70 
∑r£
();

79 
UnicodeSåög
 
°rùRuÀs
(c⁄° UnicodeSåög &
ruÀs
);

80 
	g¥iv©e
:

82 
UBoﬁ
 
doP¨£A˘i⁄s
(
öt32_t
 
a
);

83 
îr‹
(
UEº‹Code
 
e
);

84 
fixOpSèck
(
RBBINode
::
OpPª˚dí˚
 
p
);

86 
födSëF‹
(c⁄° 
UnicodeSåög
 &
s
, 
RBBINode
 *
node
, 
UnicodeSë
 *
£tToAd›t
 = 
NULL
);

88 
UCh¨32
 
√xtCh¨LL
();

89 #ifde‡
RBBI_DEBUG


90 
¥ötNodeSèck
(c⁄° *
tôÀ
);

92 
RBBINode
 *
pushNewNode
(RBBINode::
NodeTy≥
 
t
);

93 
sˇnSë
();

96 
RBBIRuÀBuûdî
 *
	gfRB
;

98 
öt32_t
 
	gfSˇnIndex
;

100 
öt32_t
 
	gfNextIndex
;

102 
UBoﬁ
 
	gfQuŸeMode
;

103 
öt32_t
 
	gfLöeNum
;

104 
öt32_t
 
	gfCh¨Num
;

105 
UCh¨32
 
	gfLa°Ch¨
;

108 
RBBIRuÀCh¨
 
	gfC
;

110 
UnicodeSåög
 
	gfV¨Name
;

113 
RBBIRuÀTabÀEl
 **
	gfSèãTabÀ
;

116 
uöt16_t
 
	gfSèck
[
kSèckSize
];

117 
öt32_t
 
	gfSèckPå
;

120 
RBBINode
 *
	gfNodeSèck
[
kSèckSize
];

122 
öt32_t
 
	gfNodeSèckPå
;

125 
UBoﬁ
 
	gfRevî£RuÀ
;

129 
UBoﬁ
 
	gfLookAhódRuÀ
;

132 
RBBISymbﬁTabÀ
 *
	gfSymbﬁTabÀ
;

135 
UHashèbÀ
 *
	gfSëTabÀ
;

140 
UnicodeSë
 
	gfRuÀSës
[10];

146 
öt32_t
 
	gfRuÀNum
;

148 
öt32_t
 
	gfO±i⁄Sèπ
;

151 
UnicodeSë
 *
	ggRuÀSë_ruÀ_ch¨
;

152 
UnicodeSë
 *
	ggRuÀSë_whôe_•a˚
;

153 
UnicodeSë
 *
	ggRuÀSë_«me_ch¨
;

154 
UnicodeSë
 *
	ggRuÀSë_«me_°¨t_ch¨
;

156 
RBBIRuÀSˇ¬î
(c⁄° RBBIRuÀSˇ¬î &
Ÿhî
);

157 
	gRBBIRuÀSˇ¬î
 &
	g›î©‹
=(c⁄° 
RBBIRuÀSˇ¬î
 &
Ÿhî
);

160 
	gU_NAMESPACE_END


	@rbbisetb.cpp

31 
	~"unicode/uty≥s.h
"

33 #i‡!
UCONFIG_NO_BREAK_ITERATION


35 
	~"unicode/uni£t.h
"

36 
	~"uåõ.h
"

37 
	~"uve˘‹.h
"

38 
	~"uas£π.h
"

39 
	~"cmem‹y.h
"

40 
	~"c°rög.h
"

42 
	~"rbbi£tb.h
"

43 
	~"rbböode.h
"

56 
U_CDECL_BEGIN


57 
uöt32_t
 
U_CALLCONV


58 
	$gëFﬁdedRBBIVÆue
(
UNewTrõ
 *
åõ
, 
UCh¨32
 
°¨t
, 
öt32_t
 
off£t
) {

59 
uöt32_t
 
vÆue
;

60 
UCh¨32
 
limô
;

61 
UBoﬁ
 
öBlockZîo
;

63 
limô
=
°¨t
+0x400;

64 
°¨t
<
limô
) {

65 
vÆue
=
	`uåõ_gë32
(
åõ
, 
°¨t
, &
öBlockZîo
);

66 if(
öBlockZîo
) {

67 
°¨t
+=
UTRIE_DATA_BLOCK_LENGTH
;

68 } if(
vÆue
!=0) {

69  (
uöt32_t
)(
off£t
|0x8000);

71 ++
°¨t
;

75 
	}
}

78 
U_CDECL_END


82 
U_NAMESPACE_BEGIN


89 
	gRBBISëBuûdî
::
	$RBBISëBuûdî
(
RBBIRuÀBuûdî
 *
rb
)

91 
fRB
 = 
rb
;

92 
fSètus
 = 
rb
->fStatus;

93 
fR™geLi°
 = 0;

94 
fTrõ
 = 0;

95 
fTrõSize
 = 0;

96 
fGroupCou¡
 = 0;

97 
fSawBOF
 = 
FALSE
;

98 
	}
}

106 
	gRBBISëBuûdî
::~
	$RBBISëBuûdî
()

108 
R™geDes¸ùt‹
 *
√xtR™geDesc
;

111 
√xtR™geDesc
 = 
fR™geLi°
;ÇextR™geDesc!=
NULL
;) {

112 
R™geDes¸ùt‹
 *
r
 = 
√xtR™geDesc
;

113 
√xtR™geDesc
 = 
r
->
fNext
;

114 
dñëe
 
r
;

117 
	`uåõ_˛o£
(
fTrõ
);

118 
	}
}

129 
	gRBBISëBuûdî
::
	$buûd
() {

130 
RBBINode
 *
u£tNode
;

131 
R™geDes¸ùt‹
 *
æR™ge
;

133 i‡(
fRB
->
fDebugEnv
 && 
	`u¥v_°r°r
(fRB->fDebugEnv, "u£ts")Ë{
	`¥ötSës
();}

139 
fR™geLi°
 = 
√w
 
	`R™geDes¸ùt‹
(*
fSètus
);

140 i‡(
fR™geLi°
 =
NULL
) {

141 *
fSètus
 = 
U_MEMORY_ALLOCATION_ERROR
;

144 
fR™geLi°
->
fSèπCh¨
 = 0;

145 
fR™geLi°
->
fEndCh¨
 = 0x10ffff;

147 i‡(
	`U_FAILURE
(*
fSètus
)) {

154 
ni
;

155 
ni
=0; ;Çi++) {

156 
u£tNode
 = (
RBBINode
 *)
this
->
fRB
->
fUSëNodes
->
	`ñemítAt
(
ni
);

157 i‡(
u£tNode
==
NULL
) {

161 
UnicodeSë
 *
öputSë
 = 
u£tNode
->
fI≈utSë
;

162 
öt32_t
 
öputSëR™geCou¡
 = 
öputSë
->
	`gëR™geCou¡
();

163 
öputSëR™geIndex
 = 0;

164 
æR™ge
 = 
fR™geLi°
;

167 i‡(
öputSëR™geIndex
 >
öputSëR™geCou¡
) {

170 
UCh¨32
 
öputSëR™geBegö
 = 
öputSë
->
	`gëR™geSèπ
(
öputSëR™geIndex
);

171 
UCh¨32
 
öputSëR™geEnd
 = 
öputSë
->
	`gëR™geEnd
(
öputSëR™geIndex
);

175 
æR™ge
->
fEndCh¨
 < 
öputSëR™geBegö
) {

176 
æR™ge
 =ÑlR™ge->
fNext
;

185 i‡(
æR™ge
->
fSèπCh¨
 < 
öputSëR™geBegö
) {

186 
æR™ge
->
	`•lô
(
öputSëR™geBegö
, *
fSètus
);

187 i‡(
	`U_FAILURE
(*
fSètus
)) {

198 i‡(
æR™ge
->
fEndCh¨
 > 
öputSëR™geEnd
) {

199 
æR™ge
->
	`•lô
(
öputSëR™geEnd
+1, *
fSètus
);

200 i‡(
	`U_FAILURE
(*
fSètus
)) {

207 i‡(
æR™ge
->
fIn˛udesSës
->
	`ödexOf
(
u£tNode
) == -1) {

208 
æR™ge
->
fIn˛udesSës
->
	`addEÀmít
(
u£tNode
, *
fSètus
);

209 i‡(
	`U_FAILURE
(*
fSètus
)) {

215 i‡(
öputSëR™geEnd
 =
æR™ge
->
fEndCh¨
) {

216 
öputSëR™geIndex
++;

218 
æR™ge
 =ÑlR™ge->
fNext
;

222 i‡(
fRB
->
fDebugEnv
 && 
	`u¥v_°r°r
(fRB->fDebugEnv, "ønge")Ë{ 
	`¥ötR™ges
();}

235 
R™geDes¸ùt‹
 *
æSórchR™ge
;

236 
æR™ge
 = 
fR™geLi°
;ÑlR™ge!=0;ÑlR™geÙlR™ge->
fNext
) {

237 
æSórchR™ge
=
fR™geLi°
;ÑlSórchR™gê!
æR™ge
;ÑlSórchR™geÙlSórchR™ge->
fNext
) {

238 i‡(
æR™ge
->
fIn˛udesSës
->
	`equÆs
(*
æSórchR™ge
->fIncludesSets)) {

239 
æR™ge
->
fNum
 = 
æSórchR™ge
->fNum;

243 i‡(
æR™ge
->
fNum
 == 0) {

244 
fGroupCou¡
 ++;

245 
æR™ge
->
fNum
 = 
fGroupCou¡
+2;

246 
æR™ge
->
	`£tDi˘i⁄¨yFœg
();

247 
	`addVÆToSës
(
æR™ge
->
fIn˛udesSës
, 
fGroupCou¡
+2);

260 c⁄° 
UCh¨
 
eofUSåög
[] = {0x65, 0x6f, 0x66, 0};

261 c⁄° 
UCh¨
 
bofUSåög
[] = {0x62, 0x6f, 0x66, 0};

263 
UnicodeSåög
 
	`eofSåög
(
eofUSåög
);

264 
UnicodeSåög
 
	`bofSåög
(
bofUSåög
);

265 
ni
=0; ;Çi++) {

266 
u£tNode
 = (
RBBINode
 *)
this
->
fRB
->
fUSëNodes
->
	`ñemítAt
(
ni
);

267 i‡(
u£tNode
==
NULL
) {

270 
UnicodeSë
 *
öputSë
 = 
u£tNode
->
fI≈utSë
;

271 i‡(
öputSë
->
	`c⁄èös
(
eofSåög
)) {

272 
	`addVÆToSë
(
u£tNode
, 1);

274 i‡(
öputSë
->
	`c⁄èös
(
bofSåög
)) {

275 
	`addVÆToSë
(
u£tNode
, 2);

276 
fSawBOF
 = 
TRUE
;

281 i‡(
fRB
->
fDebugEnv
 && 
	`u¥v_°r°r
(fRB->fDebugEnv, "rgroup")Ë{
	`¥ötR™geGroups
();}

282 i‡(
fRB
->
fDebugEnv
 && 
	`u¥v_°r°r
(fRB->fDebugEnv, "e£ts")Ë{
	`¥ötSës
();}

288 
fTrõ
 = 
	`uåõ_›í
(
NULL
,

289 
NULL
,

293 
TRUE
);

296 
æR™ge
 = 
fR™geLi°
;ÑlR™ge!=0;ÑlR™geÙlR™ge->
fNext
) {

297 
	`uåõ_£tR™ge32
(
fTrõ
, 
æR™ge
->
fSèπCh¨
,ÑlR™ge->
fEndCh¨
+1,ÑlR™ge->
fNum
, 
TRUE
);

299 
	}
}

308 
öt32_t
 
	gRBBISëBuûdî
::
	$gëTrõSize
() {

309 
fTrõSize
 = 
	`uåõ_£rülize
(
fTrõ
,

310 
NULL
,

312 
gëFﬁdedRBBIVÆue
,

313 
TRUE
,

314 
fSètus
);

316  
fTrõSize
;

317 
	}
}

327 
	gRBBISëBuûdî
::
	$£rülizeTrõ
(
uöt8_t
 *
whîe
) {

328 
	`uåõ_£rülize
(
fTrõ
,

329 
whîe
,

330 
fTrõSize
,

331 
gëFﬁdedRBBIVÆue
,

332 
TRUE
,

333 
fSètus
);

334 
	}
}

350 
	gRBBISëBuûdî
::
	$addVÆToSës
(
UVe˘‹
 *
£ts
, 
uöt32_t
 
vÆ
) {

351 
öt32_t
 
ix
;

353 
ix
=0; ix<
£ts
->
	`size
(); ix++) {

354 
RBBINode
 *
u£tNode
 = (RBBINodê*)
£ts
->
	`ñemítAt
(
ix
);

355 
	`addVÆToSë
(
u£tNode
, 
vÆ
);

357 
	}
}

359 
	gRBBISëBuûdî
::
	$addVÆToSë
(
RBBINode
 *
u£tNode
, 
uöt32_t
 
vÆ
) {

360 
RBBINode
 *
ÀafNode
 = 
√w
 
	`RBBINode
(RBBINode::
ÀafCh¨
);

361 i‡(
ÀafNode
 =
NULL
) {

362 *
fSètus
 = 
U_MEMORY_ALLOCATION_ERROR
;

365 
ÀafNode
->
fVÆ
 = ()
vÆ
;

366 i‡(
u£tNode
->
fLe·Chûd
 =
NULL
) {

367 
u£tNode
->
fLe·Chûd
 = 
ÀafNode
;

368 
ÀafNode
->
fP¨ít
 = 
u£tNode
;

373 
RBBINode
 *
‹Node
 = 
√w
 
	`RBBINode
(RBBINode::
›Or
);

374 i‡(
‹Node
 =
NULL
) {

375 *
fSètus
 = 
U_MEMORY_ALLOCATION_ERROR
;

378 
‹Node
->
fLe·Chûd
 = 
u£tNode
->fLeftChild;

379 
‹Node
->
fRightChûd
 = 
ÀafNode
;

380 
‹Node
->
fLe·Chûd
->
fP¨ít
 = orNode;

381 
‹Node
->
fRightChûd
->
fP¨ít
 = orNode;

382 
u£tNode
->
fLe·Chûd
 = 
‹Node
;

383 
‹Node
->
fP¨ít
 = 
u£tNode
;

385 
	}
}

393 
öt32_t
 
	gRBBISëBuûdî
::
	$gëNumCh¨C©eg‹õs
() const {

394  
fGroupCou¡
 + 3;

395 
	}
}

403 
UBoﬁ
 
	gRBBISëBuûdî
::
	$ßwBOF
() const {

404  
fSawBOF
;

405 
	}
}

414 
UCh¨32
 
	gRBBISëBuûdî
::
	$gëFú°Ch¨
(
öt32_t
 
ˇãg‹y
) const {

415 
R™geDes¸ùt‹
 *
æR™ge
;

416 
UCh¨32
 
ªtVÆ
 = (UChar32)-1;

417 
æR™ge
 = 
fR™geLi°
;ÑlR™ge!=0;ÑlR™geÙlR™ge->
fNext
) {

418 i‡(
æR™ge
->
fNum
 =
ˇãg‹y
) {

419 
ªtVÆ
 = 
æR™ge
->
fSèπCh¨
;

423  
ªtVÆ
;

424 
	}
}

434 #ifde‡
RBBI_DEBUG


435 
	gRBBISëBuûdî
::
	$¥ötR™ges
() {

436 
R™geDes¸ùt‹
 *
æR™ge
;

437 
i
;

439 
	`RBBIDebugPrötf
("\n\n Nonoverlapping Ranges ...\n");

440 
æR™ge
 = 
fR™geLi°
;ÑlR™ge!=0;ÑlR™geÙlR™ge->
fNext
) {

441 
	`RBBIDebugPrötf
("%2ò %4x-%4x ", 
æR™ge
->
fNum
,ÑlR™ge->
fSèπCh¨
,ÑlR™ge->
fEndCh¨
);

443 
i
=0; i<
æR™ge
->
fIn˛udesSës
->
	`size
(); i++) {

444 
RBBINode
 *
u£tNode
 = (RBBINodê*)
æR™ge
->
fIn˛udesSës
->
	`ñemítAt
(
i
);

445 
UnicodeSåög
 
£tName
 = 
	`UNICODE_STRING
("anon", 4);

446 
RBBINode
 *
£tRef
 = 
u£tNode
->
fP¨ít
;

447 i‡(
£tRef
 !
NULL
) {

448 
RBBINode
 *
v¨Ref
 = 
£tRef
->
fP¨ít
;

449 i‡(
v¨Ref
 !
NULL
 && v¨Ref->
fTy≥
 =
RBBINode
::varRef) {

450 
£tName
 = 
v¨Ref
->
fText
;

453 
	`RBBI_DEBUG_¥ötUnicodeSåög
(
£tName
); 
	`RBBIDebugPrötf
(" ");

455 
	`RBBIDebugPrötf
("\n");

457 
	}
}

467 #ifde‡
RBBI_DEBUG


468 
	gRBBISëBuûdî
::
	$¥ötR™geGroups
() {

469 
R™geDes¸ùt‹
 *
æR™ge
;

470 
R™geDes¸ùt‹
 *
tR™ge
;

471 
i
;

472 
œ°PröãdGroupNum
 = 0;

474 
	`RBBIDebugPrötf
("\nRanges grouped by Unicode Set Membership...\n");

475 
æR™ge
 = 
fR™geLi°
;ÑlR™ge!=0;ÑlR™geÙlR™ge->
fNext
) {

476 
groupNum
 = 
æR™ge
->
fNum
 & 0xbfff;

477 i‡(
groupNum
 > 
œ°PröãdGroupNum
) {

478 
œ°PröãdGroupNum
 = 
groupNum
;

479 
	`RBBIDebugPrötf
("%2ò ", 
groupNum
);

481 i‡(
æR™ge
->
fNum
 & 0x4000Ë{ 
	`RBBIDebugPrötf
(" <DICT> ");}

483 
i
=0; i<
æR™ge
->
fIn˛udesSës
->
	`size
(); i++) {

484 
RBBINode
 *
u£tNode
 = (RBBINodê*)
æR™ge
->
fIn˛udesSës
->
	`ñemítAt
(
i
);

485 
UnicodeSåög
 
£tName
 = 
	`UNICODE_STRING
("anon", 4);

486 
RBBINode
 *
£tRef
 = 
u£tNode
->
fP¨ít
;

487 i‡(
£tRef
 !
NULL
) {

488 
RBBINode
 *
v¨Ref
 = 
£tRef
->
fP¨ít
;

489 i‡(
v¨Ref
 !
NULL
 && v¨Ref->
fTy≥
 =
RBBINode
::varRef) {

490 
£tName
 = 
v¨Ref
->
fText
;

493 
	`RBBI_DEBUG_¥ötUnicodeSåög
(
£tName
); 
	`RBBIDebugPrötf
(" ");

496 
i
 = 0;

497 
tR™ge
 = 
æR™ge
;ÅR™gê!0;ÅR™gêtR™ge->
fNext
) {

498 i‡(
tR™ge
->
fNum
 =
æR™ge
->fNum) {

499 i‡(
i
++ % 5 == 0) {

500 
	`RBBIDebugPrötf
("\n ");

502 
	`RBBIDebugPrötf
(" %05x-%05x", 
tR™ge
->
fSèπCh¨
,ÅR™ge->
fEndCh¨
);

505 
	`RBBIDebugPrötf
("\n");

508 
	`RBBIDebugPrötf
("\n");

509 
	}
}

519 #ifde‡
RBBI_DEBUG


520 
	gRBBISëBuûdî
::
	$¥ötSës
() {

521 
i
;

523 
	`RBBIDebugPrötf
("\n\nUnicode Sets List\n------------------\n");

524 
i
=0; ; i++) {

525 
RBBINode
 *
u£tNode
;

526 
RBBINode
 *
£tRef
;

527 
RBBINode
 *
v¨Ref
;

528 
UnicodeSåög
 
£tName
;

530 
u£tNode
 = (
RBBINode
 *)
fRB
->
fUSëNodes
->
	`ñemítAt
(
i
);

531 i‡(
u£tNode
 =
NULL
) {

535 
	`RBBIDebugPrötf
("%3d ", 
i
);

536 
£tName
 = 
	`UNICODE_STRING
("anonymous", 9);

537 
£tRef
 = 
u£tNode
->
fP¨ít
;

538 i‡(
£tRef
 !
NULL
) {

539 
v¨Ref
 = 
£tRef
->
fP¨ít
;

540 i‡(
v¨Ref
 !
NULL
 && v¨Ref->
fTy≥
 =
RBBINode
::varRef) {

541 
£tName
 = 
v¨Ref
->
fText
;

544 
	`RBBI_DEBUG_¥ötUnicodeSåög
(
£tName
);

545 
	`RBBIDebugPrötf
(" ");

546 
	`RBBI_DEBUG_¥ötUnicodeSåög
(
u£tNode
->
fText
);

547 
	`RBBIDebugPrötf
("\n");

548 i‡(
u£tNode
->
fLe·Chûd
 !
NULL
) {

549 
u£tNode
->
fLe·Chûd
->
	`¥ötTªe
(
TRUE
);

552 
	`RBBIDebugPrötf
("\n");

553 
	}
}

564 
	gR™geDes¸ùt‹
::
	$R™geDes¸ùt‹
(c⁄° 
R™geDes¸ùt‹
 &
Ÿhî
, 
UEº‹Code
 &
°©us
) {

565 
i
;

567 
this
->
fSèπCh¨
 = 
Ÿhî
.fStartChar;

568 
this
->
fEndCh¨
 = 
Ÿhî
.fEndChar;

569 
this
->
fNum
 = 
Ÿhî
.fNum;

570 
this
->
fNext
 = 
NULL
;

571 
UEº‹Code
 
ﬁd°©us
 = 
°©us
;

572 
this
->
fIn˛udesSës
 = 
√w
 
	`UVe˘‹
(
°©us
);

573 i‡(
	`U_FAILURE
(
ﬁd°©us
)) {

574 
°©us
 = 
ﬁd°©us
;

576 i‡(
	`U_FAILURE
(
°©us
)) {

580 i‡(
this
->
fIn˛udesSës
 == 0) {

581 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

585 
i
=0; i<
Ÿhî
.
fIn˛udesSës
->
	`size
(); i++) {

586 
this
->
fIn˛udesSës
->
	`addEÀmít
(
Ÿhî
.fIn˛udesSës->
	`ñemítAt
(
i
), 
°©us
);

588 
	}
}

596 
	gR™geDes¸ùt‹
::
	$R™geDes¸ùt‹
(
UEº‹Code
 &
°©us
) {

597 
this
->
fSèπCh¨
 = 0;

598 
this
->
fEndCh¨
 = 0;

599 
this
->
fNum
 = 0;

600 
this
->
fNext
 = 
NULL
;

601 
UEº‹Code
 
ﬁd°©us
 = 
°©us
;

602 
this
->
fIn˛udesSës
 = 
√w
 
	`UVe˘‹
(
°©us
);

603 i‡(
	`U_FAILURE
(
ﬁd°©us
)) {

604 
°©us
 = 
ﬁd°©us
;

606 i‡(
	`U_FAILURE
(
°©us
)) {

610 if(
this
->
fIn˛udesSës
 == 0) {

611 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

615 
	}
}

623 
	gR™geDes¸ùt‹
::~
	$R™geDes¸ùt‹
() {

624 
dñëe
 
fIn˛udesSës
;

625 
fIn˛udesSës
 = 
NULL
;

626 
	}
}

633 
	gR™geDes¸ùt‹
::
	$•lô
(
UCh¨32
 
whîe
, 
UEº‹Code
 &
°©us
) {

634 
	`U_ASSERT
(
whîe
>
fSèπCh¨
 && whîe<=
fEndCh¨
);

635 
R™geDes¸ùt‹
 *
ƒ
 = 
√w
 
	`R™geDes¸ùt‹
(*
this
, 
°©us
);

636 if(
ƒ
 == 0) {

637 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

640 i‡(
	`U_FAILURE
(
°©us
)) {

641 
dñëe
 
ƒ
;

646 
ƒ
->
fSèπCh¨
 = 
whîe
;

647 
this
->
fEndCh¨
 = 
whîe
-1;

648 
ƒ
->
fNext
 = 
this
->fNext;

649 
this
->
fNext
 = 
ƒ
;

650 
	}
}

671 
	gR™geDes¸ùt‹
::
	$£tDi˘i⁄¨yFœg
() {

672 
i
;

674 
i
=0; i<
this
->
fIn˛udesSës
->
	`size
(); i++) {

675 
RBBINode
 *
u£tNode
 = (RBBINodê*)
fIn˛udesSës
->
	`ñemítAt
(
i
);

676 
UnicodeSåög
 
£tName
;

677 
RBBINode
 *
£tRef
 = 
u£tNode
->
fP¨ít
;

678 i‡(
£tRef
 !
NULL
) {

679 
RBBINode
 *
v¨Ref
 = 
£tRef
->
fP¨ít
;

680 i‡(
v¨Ref
 !
NULL
 && v¨Ref->
fTy≥
 =
RBBINode
::varRef) {

681 
£tName
 = 
v¨Ref
->
fText
;

684 i‡(
£tName
.
	`com∑ª
(
	`UNICODE_STRING
("dictionary", 10)) == 0) {

685 
this
->
fNum
 |= 0x4000;

689 
	}
}

693 
	gU_NAMESPACE_END


	@rbbisetb.h

10 #i‚de‡
RBBISETB_H


11 
	#RBBISETB_H


	)

13 
	~"unicode/uty≥s.h
"

14 
	~"unicode/uobje˘.h
"

15 
	~"rbbúb.h
"

16 
	~"uve˘‹.h
"

18 
	gUNewTrõ
;

20 
U_NAMESPACE_BEGIN


37 ˛as†
	cR™geDes¸ùt‹
 : 
public
 
UMem‹y
 {

38 
public
:

39 
UCh¨32
 
fSèπCh¨
;

40 
UCh¨32
 
	mfEndCh¨
;

41 
öt32_t
 
	mfNum
;

42 
UVe˘‹
 *
	mfIn˛udesSës
;

45 
R™geDes¸ùt‹
 *
	mfNext
;

47 
R™geDes¸ùt‹
(
UEº‹Code
 &
°©us
);

48 
R™geDes¸ùt‹
(c⁄° R™geDes¸ùt‹ &
Ÿhî
, 
UEº‹Code
 &
°©us
);

49 ~
R™geDes¸ùt‹
();

50 
•lô
(
UCh¨32
 
whîe
, 
UEº‹Code
 &
°©us
);

52 
£tDi˘i⁄¨yFœg
();

55 
	m¥iv©e
:

56 
R™geDes¸ùt‹
(c⁄° R™geDes¸ùt‹ &
Ÿhî
);

57 
	mR™geDes¸ùt‹
 &
	m›î©‹
=(c⁄° 
R™geDes¸ùt‹
 &
Ÿhî
);

76 ˛as†
	cRBBISëBuûdî
 : 
public
 
UMem‹y
 {

77 
public
:

78 
RBBISëBuûdî
(
RBBIRuÀBuûdî
 *
rb
);

79 ~
RBBISëBuûdî
();

81 
buûd
();

82 
addVÆToSës
(
UVe˘‹
 *
£ts
, 
uöt32_t
 
vÆ
);

83 
addVÆToSë
 (
RBBINode
 *
u£tNode
, 
uöt32_t
 
vÆ
);

84 
öt32_t
 
	$gëNumCh¨C©eg‹õs
() const;

87 
öt32_t
 
	`gëTrõSize
() ;

88 
	`£rülizeTrõ
(
uöt8_t
 *
whîe
);

89 
UCh¨32
 
	$gëFú°Ch¨
(
öt32_t
 
vÆ
) const;

90 
UBoﬁ
 
	$ßwBOF
() const;

92 #ifde‡
RBBI_DEBUG


93 
	`¥ötSës
();

94 
	`¥ötR™ges
();

95 
	`¥ötR™geGroups
();

97 
	#¥ötSës
()

	)

98 
	#¥ötR™ges
()

	)

99 
	#¥ötR™geGroups
()

	)

102 
¥iv©e
:

103 
	`numbîSës
();

105 
RBBIRuÀBuûdî
 *
fRB
;

106 
UEº‹Code
 *
fSètus
;

108 
R™geDes¸ùt‹
 *
fR™geLi°
;

110 
UNewTrõ
 *
fTrõ
;

111 
uöt32_t
 
fTrõSize
;

119 
öt32_t
 
fGroupCou¡
;

121 
UBoﬁ
 
fSawBOF
;

123 
	`RBBISëBuûdî
(c⁄° 
RBBISëBuûdî
 &
Ÿhî
);

124 
RBBISëBuûdî
 &
›î©‹
=(c⁄° RBBISëBuûdî &
Ÿhî
);

129 
U_NAMESPACE_END


	@rbbistbl.cpp

11 
	~"unicode/uty≥s.h
"

13 #i‡!
UCONFIG_NO_BREAK_ITERATION


15 
	~"unicode/uni°r.h
"

16 
	~"unicode/uni£t.h
"

17 
	~"unicode/uch¨.h
"

18 
	~"unicode/∑r£pos.h
"

20 
	~"umuãx.h
"

22 
	~"rbbúb.h
"

23 
	~"rbböode.h
"

30 
U_CDECL_BEGIN


31 
U_CALLCONV
 
	$RBBISymbﬁTabÀE¡ry_dñëî
(*
p
) {

32 
U_NAMESPACE_QUALIFIER
 
RBBISymbﬁTabÀE¡ry
 *
px
 = (U_NAMESPACE_QUALIFIER RBBISymbﬁTabÀE¡ry *)
p
;

33 
dñëe
 
px
;

34 
	}
}

35 
U_CDECL_END


39 
U_NAMESPACE_BEGIN


41 
	gRBBISymbﬁTabÀ
::
	$RBBISymbﬁTabÀ
(
RBBIRuÀSˇ¬î
 *
rs
, c⁄° 
UnicodeSåög
 &
ruÀs
, 
UEº‹Code
 &
°©us
)

42 :
	`fRuÀs
(
ruÀs
), 
	`fRuÀSˇ¬î
(
rs
), 
	`ffffSåög
(
	$UCh¨
(0xffff))

44 
fHashTabÀ
 = 
NULL
;

45 
fCachedSëLookup
 = 
NULL
;

47 
fHashTabÀ
 = 
	`uhash_›í
(
uhash_hashUnicodeSåög
, 
uhash_com∑ªUnicodeSåög
, 
NULL
, &
°©us
);

49 i‡(
	`U_FAILURE
(
°©us
)) {

52 
	`uhash_£tVÆueDñëî
(
fHashTabÀ
, 
RBBISymbﬁTabÀE¡ry_dñëî
);

53 
	}
}

57 
	gRBBISymbﬁTabÀ
::~
	$RBBISymbﬁTabÀ
()

59 
	`uhash_˛o£
(
fHashTabÀ
);

60 
	}
}

70 c⁄° 
UnicodeSåög
 *
	gRBBISymbﬁTabÀ
::
	$lookup
(c⁄° 
UnicodeSåög
& 
s
) const

72 
RBBISymbﬁTabÀE¡ry
 *
ñ
;

73 
RBBINode
 *
v¨RefNode
;

74 
RBBINode
 *
ex¥Node
;

75 
RBBINode
 *
u£tNode
;

76 c⁄° 
UnicodeSåög
 *
ªtSåög
;

77 
RBBISymbﬁTabÀ
 *
This
 = (RBBISymbﬁTabÀ *)
this
;

79 
ñ
 = (
RBBISymbﬁTabÀE¡ry
 *)
	`uhash_gë
(
fHashTabÀ
, &
s
);

80 i‡(
ñ
 =
NULL
) {

81  
NULL
;

84 
v¨RefNode
 = 
ñ
->
vÆ
;

85 
ex¥Node
 = 
v¨RefNode
->
fLe·Chûd
;

86 i‡(
ex¥Node
->
fTy≥
 =
RBBINode
::
£tRef
) {

90 
u£tNode
 = 
ex¥Node
->
fLe·Chûd
;

91 
This
->
fCachedSëLookup
 = 
u£tNode
->
fI≈utSë
;

92 
ªtSåög
 = &
ffffSåög
;

98 
ªtSåög
 = &
ex¥Node
->
fText
;

99 
This
->
fCachedSëLookup
 = 
NULL
;

101  
ªtSåög
;

102 
	}
}

117 c⁄° 
UnicodeFun˘‹
 *
	gRBBISymbﬁTabÀ
::
	$lookupM©chî
(
UCh¨32
 
ch
) const

119 
UnicodeSë
 *
ªtVÆ
 = 
NULL
;

120 
RBBISymbﬁTabÀ
 *
This
 = (RBBISymbﬁTabÀ *)
this
;

121 i‡(
ch
 == 0xffff) {

122 
ªtVÆ
 = 
fCachedSëLookup
;

123 
This
->
fCachedSëLookup
 = 0;

125  
ªtVÆ
;

126 
	}
}

138 
UnicodeSåög
 
	gRBBISymbﬁTabÀ
::
	$∑r£Re„ªn˚
(c⁄° 
UnicodeSåög
& 
ãxt
,

139 
P¨£Posôi⁄
& 
pos
, 
öt32_t
 
limô
) const

141 
öt32_t
 
°¨t
 = 
pos
.
	`gëIndex
();

142 
öt32_t
 
i
 = 
°¨t
;

143 
UnicodeSåög
 
ªsu…
;

144 
i
 < 
limô
) {

145 
UCh¨
 
c
 = 
ãxt
.
	`ch¨At
(
i
);

146 i‡((
i
==
°¨t
 && !
	`u_isIDSèπ
(
c
)Ë|| !
	`u_isIDP¨t
(c)) {

149 ++
i
;

151 i‡(
i
 =
°¨t
) {

152  
ªsu…
;

154 
pos
.
	`£tIndex
(
i
);

155 
ãxt
.
	`exåa˘Bëwìn
(
°¨t
, 
i
, 
ªsu…
);

156  
ªsu…
;

157 
	}
}

166 
RBBINode
 *
	gRBBISymbﬁTabÀ
::
	$lookupNode
(c⁄° 
UnicodeSåög
 &
key
) const{

168 
RBBINode
 *
ªtNode
 = 
NULL
;

169 
RBBISymbﬁTabÀE¡ry
 *
ñ
;

171 
ñ
 = (
RBBISymbﬁTabÀE¡ry
 *)
	`uhash_gë
(
fHashTabÀ
, &
key
);

172 i‡(
ñ
 !
NULL
) {

173 
ªtNode
 = 
ñ
->
vÆ
;

175  
ªtNode
;

176 
	}
}

185 
	gRBBISymbﬁTabÀ
::
	$addE¡ry
 (c⁄° 
UnicodeSåög
 &
key
, 
RBBINode
 *
vÆ
, 
UEº‹Code
 &
îr
) {

186 
RBBISymbﬁTabÀE¡ry
 *
e
;

188 i‡(
	`U_FAILURE
(
îr
)) {

191 
e
 = (
RBBISymbﬁTabÀE¡ry
 *)
	`uhash_gë
(
fHashTabÀ
, &
key
);

192 i‡(
e
 !
NULL
) {

193 
îr
 = 
U_BRK_VARIABLE_REDFINITION
;

197 
e
 = 
√w
 
RBBISymbﬁTabÀE¡ry
;

198 i‡(
e
 =
NULL
) {

199 
îr
 = 
U_MEMORY_ALLOCATION_ERROR
;

202 
e
->
key
 = key;

203 
e
->
vÆ
 = val;

204 
	`uhash_put
–
fHashTabÀ
, &
e
->
key
,É, &
îr
);

205 
	}
}

208 
	gRBBISymbﬁTabÀE¡ry
::
	$RBBISymbﬁTabÀE¡ry
(Ë: 
	`UMem‹y
(), 
	`key
(), 
	$vÆ
(
NULL
Ë{
	}
}

210 
	gRBBISymbﬁTabÀE¡ry
::~
	$RBBISymbﬁTabÀE¡ry
() {

215 
dñëe
 
vÆ
->
fLe·Chûd
;

216 
vÆ
->
fLe·Chûd
 = 
NULL
;

218 
dñëe
 
vÆ
;

221 
	}
}

227 #ifde‡
RBBI_DEBUG


228 
	gRBBISymbﬁTabÀ
::
	$rbbiSymèbÀPröt
() const {

229 
	`RBBIDebugPrötf
("Variable Definitions\n"

233 
öt32_t
 
pos
 = -1;

234 c⁄° 
UHashEÀmít
 *
e
 = 
NULL
;

236 
e
 = 
	`uhash_√xtEÀmít
(
fHashTabÀ
, &
pos
);

237 i‡(
e
 =
NULL
 ) {

240 
RBBISymbﬁTabÀE¡ry
 *
s
 = (RBBISymbﬁTabÀE¡ry *)
e
->
vÆue
.
poöãr
;

242 
	`RBBI_DEBUG_¥ötUnicodeSåög
(
s
->
key
, 15);

243 
	`RBBIDebugPrötf
(" %8∞ ", (*)
s
->
vÆ
);

244 
	`RBBI_DEBUG_¥ötUnicodeSåög
(
s
->
vÆ
->
fLe·Chûd
->
fText
);

245 
	`RBBIDebugPrötf
("\n");

248 
	`RBBIDebugPrötf
("\nParsed Variable Definitions\n");

249 
pos
 = -1;

251 
e
 = 
	`uhash_√xtEÀmít
(
fHashTabÀ
, &
pos
);

252 i‡(
e
 =
NULL
 ) {

255 
RBBISymbﬁTabÀE¡ry
 *
s
 = (RBBISymbﬁTabÀE¡ry *)
e
->
vÆue
.
poöãr
;

256 
	`RBBI_DEBUG_¥ötUnicodeSåög
(
s
->
key
);

257 
s
->
vÆ
->
fLe·Chûd
->
	`¥ötTªe
(
TRUE
);

258 
	`RBBIDebugPrötf
("\n");

260 
	}
}

267 
	gU_NAMESPACE_END


	@rbbitblb.cpp

12 
	~"unicode/uty≥s.h
"

14 #i‡!
UCONFIG_NO_BREAK_ITERATION


16 
	~"unicode/uni°r.h
"

17 
	~"rbbôblb.h
"

18 
	~"rbbúb.h
"

19 
	~"rbbi£tb.h
"

20 
	~"rbbid©a.h
"

21 
	~"c°rög.h
"

22 
	~"uas£π.h
"

23 
	~"cmem‹y.h
"

25 
U_NAMESPACE_BEGIN


27 
	gRBBITabÀBuûdî
::
	$RBBITabÀBuûdî
(
RBBIRuÀBuûdî
 *
rb
, 
RBBINode
 **
roŸNode
) :

28 
	$fTªe
(*
roŸNode
) {

29 
fRB
 = 
rb
;

30 
fSètus
 = 
fRB
->fStatus;

31 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

32 
fDSèãs
 = 
√w
 
	`UVe˘‹
(
°©us
);

33 i‡(
	`U_FAILURE
(*
fSètus
)) {

36 i‡(
	`U_FAILURE
(
°©us
)) {

37 *
fSètus
 = 
°©us
;

40 i‡(
fDSèãs
 =
NULL
) {

41 *
fSètus
 = 
U_MEMORY_ALLOCATION_ERROR
;;

43 
	}
}

47 
	gRBBITabÀBuûdî
::~
	$RBBITabÀBuûdî
() {

48 
i
;

49 
i
=0; i<
fDSèãs
->
	`size
(); i++) {

50 
	`dñëe
 (
RBBISèãDes¸ùt‹
 *)
fDSèãs
->
	`ñemítAt
(
i
);

52 
dñëe
 
fDSèãs
;

53 
	}
}

62 
	gRBBITabÀBuûdî
::
	$buûd
() {

64 i‡(
	`U_FAILURE
(*
fSètus
)) {

70 i‡(
fTªe
==
NULL
) {

78 
fTªe
 = fTªe->
	`Ê©ãnV¨übÀs
();

79 #ifde‡
RBBI_DEBUG


80 i‡(
fRB
->
fDebugEnv
 && 
	`u¥v_°r°r
(fRB->fDebugEnv, "ftree")) {

81 
	`RBBIDebugPuts
("ParseÅreeáfter flattening variableÑeferences.");

82 
fTªe
->
	`¥ötTªe
(
TRUE
);

92 i‡(
fRB
->
fSëBuûdî
->
	`ßwBOF
()) {

93 
RBBINode
 *
bofT›
 = 
√w
 
	`RBBINode
(RBBINode::
›C©
);

94 
RBBINode
 *
bofLóf
 = 
√w
 
	`RBBINode
(RBBINode::
ÀafCh¨
);

96 i‡(
bofT›
 =
NULL
 || 
bofLóf
 == NULL) {

97 *
fSètus
 = 
U_MEMORY_ALLOCATION_ERROR
;

98 
dñëe
 
bofT›
;

99 
dñëe
 
bofLóf
;

102 
bofT›
->
fLe·Chûd
 = 
bofLóf
;

103 
bofT›
->
fRightChûd
 = 
fTªe
;

104 
bofLóf
->
fP¨ít
 = 
bofT›
;

105 
bofLóf
->
fVÆ
 = 2;

106 
fTªe
 = 
bofT›
;

114 
RBBINode
 *
˙
 = 
√w
 
	`RBBINode
(RBBINode::
›C©
);

116 i‡(
˙
 =
NULL
) {

117 *
fSètus
 = 
U_MEMORY_ALLOCATION_ERROR
;

120 
˙
->
fLe·Chûd
 = 
fTªe
;

121 
fTªe
->
fP¨ít
 = 
˙
;

122 
˙
->
fRightChûd
 = 
√w
 
	`RBBINode
(
RBBINode
::
ídM¨k
);

124 i‡(
˙
->
fRightChûd
 =
NULL
) {

125 *
fSètus
 = 
U_MEMORY_ALLOCATION_ERROR
;

126 
dñëe
 
˙
;

129 
˙
->
fRightChûd
->
fP¨ít
 = cn;

130 
fTªe
 = 
˙
;

136 
fTªe
->
	`Ê©ãnSës
();

137 #ifde‡
RBBI_DEBUG


138 i‡(
fRB
->
fDebugEnv
 && 
	`u¥v_°r°r
(fRB->fDebugEnv, "stree")) {

139 
	`RBBIDebugPuts
("ParseÅreeáfter flattening Unicode SetÑeferences.");

140 
fTªe
->
	`¥ötTªe
(
TRUE
);

152 
	`ˇlcNuŒabÀ
(
fTªe
);

153 
	`ˇlcFú°Pos
(
fTªe
);

154 
	`ˇlcLa°Pos
(
fTªe
);

155 
	`ˇlcFﬁlowPos
(
fTªe
);

156 i‡(
fRB
->
fDebugEnv
 && 
	`u¥v_°r°r
(fRB->fDebugEnv, "pos")) {

157 
	`RBBIDebugPuts
("\n");

158 
	`¥ötPosSës
(
fTªe
);

164 i‡(
fRB
->
fChaöRuÀs
) {

165 
	`ˇlcChaöedFﬁlowPos
(
fTªe
);

171 i‡(
fRB
->
fSëBuûdî
->
	`ßwBOF
()) {

172 
	`bofFixup
();

178 
	`buûdSèãTabÀ
();

179 
	`ÊagAc˚±ögSèãs
();

180 
	`ÊagLookAhódSèãs
();

181 
	`ÊagTaggedSèãs
();

188 
	`mîgeRuÀSètusVÆs
();

190 i‡(
fRB
->
fDebugEnv
 && 
	`u¥v_°r°r
(fRB->fDebugEnv, "°©es")Ë{
	`¥ötSèãs
();};

191 
	}
}

200 
	gRBBITabÀBuûdî
::
	$ˇlcNuŒabÀ
(
RBBINode
 *
n
) {

201 i‡(
n
 =
NULL
) {

204 i‡(
n
->
fTy≥
 =
RBBINode
::
£tRef
 ||

205 
n
->
fTy≥
 =
RBBINode
::
ídM¨k
 ) {

207 
n
->
fNuŒabÀ
 = 
FALSE
;

211 i‡(
n
->
fTy≥
 =
RBBINode
::
lookAhód
 ||Ç->fTy≥ =RBBINode::
èg
) {

214 
n
->
fNuŒabÀ
 = 
TRUE
;

221 
	`ˇlcNuŒabÀ
(
n
->
fLe·Chûd
);

222 
	`ˇlcNuŒabÀ
(
n
->
fRightChûd
);

225 i‡(
n
->
fTy≥
 =
RBBINode
::
›Or
) {

226 
n
->
fNuŒabÀ
 =Ç->
fLe·Chûd
->fNuŒabÀ ||Ç->
fRightChûd
->fNullable;

228 i‡(
n
->
fTy≥
 =
RBBINode
::
›C©
) {

229 
n
->
fNuŒabÀ
 =Ç->
fLe·Chûd
->fNuŒabÀ &&Ç->
fRightChûd
->fNullable;

231 i‡(
n
->
fTy≥
 =
RBBINode
::
›Sèr
 ||Ç->fTy≥ =RBBINode::
›Que°i⁄
) {

232 
n
->
fNuŒabÀ
 = 
TRUE
;

235 
n
->
fNuŒabÀ
 = 
FALSE
;

237 
	}
}

247 
	gRBBITabÀBuûdî
::
	$ˇlcFú°Pos
(
RBBINode
 *
n
) {

248 i‡(
n
 =
NULL
) {

251 i‡(
n
->
fTy≥
 =
RBBINode
::
ÀafCh¨
 ||

252 
n
->
fTy≥
 =
RBBINode
::
ídM¨k
 ||

253 
n
->
fTy≥
 =
RBBINode
::
lookAhód
 ||

254 
n
->
fTy≥
 =
RBBINode
::
èg
) {

259 
n
->
fFú°PosSë
->
	`addEÀmít
“, *
fSètus
);

265 
	`ˇlcFú°Pos
(
n
->
fLe·Chûd
);

266 
	`ˇlcFú°Pos
(
n
->
fRightChûd
);

269 i‡(
n
->
fTy≥
 =
RBBINode
::
›Or
) {

270 
	`£tAdd
(
n
->
fFú°PosSë
,Ç->
fLe·Chûd
->fFirstPosSet);

271 
	`£tAdd
(
n
->
fFú°PosSë
,Ç->
fRightChûd
->fFirstPosSet);

273 i‡(
n
->
fTy≥
 =
RBBINode
::
›C©
) {

274 
	`£tAdd
(
n
->
fFú°PosSë
,Ç->
fLe·Chûd
->fFirstPosSet);

275 i‡(
n
->
fLe·Chûd
->
fNuŒabÀ
) {

276 
	`£tAdd
(
n
->
fFú°PosSë
,Ç->
fRightChûd
->fFirstPosSet);

279 i‡(
n
->
fTy≥
 =
RBBINode
::
›Sèr
 ||

280 
n
->
fTy≥
 =
RBBINode
::
›Que°i⁄
 ||

281 
n
->
fTy≥
 =
RBBINode
::
›Plus
) {

282 
	`£tAdd
(
n
->
fFú°PosSë
,Ç->
fLe·Chûd
->fFirstPosSet);

284 
	}
}

293 
	gRBBITabÀBuûdî
::
	$ˇlcLa°Pos
(
RBBINode
 *
n
) {

294 i‡(
n
 =
NULL
) {

297 i‡(
n
->
fTy≥
 =
RBBINode
::
ÀafCh¨
 ||

298 
n
->
fTy≥
 =
RBBINode
::
ídM¨k
 ||

299 
n
->
fTy≥
 =
RBBINode
::
lookAhód
 ||

300 
n
->
fTy≥
 =
RBBINode
::
èg
) {

305 
n
->
fLa°PosSë
->
	`addEÀmít
“, *
fSètus
);

311 
	`ˇlcLa°Pos
(
n
->
fLe·Chûd
);

312 
	`ˇlcLa°Pos
(
n
->
fRightChûd
);

315 i‡(
n
->
fTy≥
 =
RBBINode
::
›Or
) {

316 
	`£tAdd
(
n
->
fLa°PosSë
,Ç->
fLe·Chûd
->fLastPosSet);

317 
	`£tAdd
(
n
->
fLa°PosSë
,Ç->
fRightChûd
->fLastPosSet);

319 i‡(
n
->
fTy≥
 =
RBBINode
::
›C©
) {

320 
	`£tAdd
(
n
->
fLa°PosSë
,Ç->
fRightChûd
->fLastPosSet);

321 i‡(
n
->
fRightChûd
->
fNuŒabÀ
) {

322 
	`£tAdd
(
n
->
fLa°PosSë
,Ç->
fLe·Chûd
->fLastPosSet);

325 i‡(
n
->
fTy≥
 =
RBBINode
::
›Sèr
 ||

326 
n
->
fTy≥
 =
RBBINode
::
›Que°i⁄
 ||

327 
n
->
fTy≥
 =
RBBINode
::
›Plus
) {

328 
	`£tAdd
(
n
->
fLa°PosSë
,Ç->
fLe·Chûd
->fLastPosSet);

330 
	}
}

339 
	gRBBITabÀBuûdî
::
	$ˇlcFﬁlowPos
(
RBBINode
 *
n
) {

340 i‡(
n
 =
NULL
 ||

341 
n
->
fTy≥
 =
RBBINode
::
ÀafCh¨
 ||

342 
n
->
fTy≥
 =
RBBINode
::
ídM¨k
) {

346 
	`ˇlcFﬁlowPos
(
n
->
fLe·Chûd
);

347 
	`ˇlcFﬁlowPos
(
n
->
fRightChûd
);

350 i‡(
n
->
fTy≥
 =
RBBINode
::
›C©
) {

351 
RBBINode
 *
i
;

352 
uöt32_t
 
ix
;

354 
UVe˘‹
 *
La°PosOfLe·Chûd
 = 
n
->
fLe·Chûd
->
fLa°PosSë
;

356 
ix
=0; ix<(
uöt32_t
)
La°PosOfLe·Chûd
->
	`size
(); ix++) {

357 
i
 = (
RBBINode
 *)
La°PosOfLe·Chûd
->
	`ñemítAt
(
ix
);

358 
	`£tAdd
(
i
->
fFﬁlowPos
, 
n
->
fRightChûd
->
fFú°PosSë
);

363 i‡(
n
->
fTy≥
 =
RBBINode
::
›Sèr
 ||

364 
n
->
fTy≥
 =
RBBINode
::
›Plus
) {

365 
RBBINode
 *
i
;

366 
uöt32_t
 
ix
;

368 
ix
=0; ix<(
uöt32_t
)
n
->
fLa°PosSë
->
	`size
(); ix++) {

369 
i
 = (
RBBINode
 *)
n
->
fLa°PosSë
->
	`ñemítAt
(
ix
);

370 
	`£tAdd
(
i
->
fFﬁlowPos
, 
n
->
fFú°PosSë
);

376 
	}
}

385 
	gRBBITabÀBuûdî
::
	$ˇlcChaöedFﬁlowPos
(
RBBINode
 *
åì
) {

387 
UVe˘‹
 
	`ídM¨kîNodes
(*
fSètus
);

388 
UVe˘‹
 
	`ÀafNodes
(*
fSètus
);

389 
öt32_t
 
i
;

391 i‡(
	`U_FAILURE
(*
fSètus
)) {

396 
åì
->
	`födNodes
(&
ídM¨kîNodes
, 
RBBINode
::
ídM¨k
, *
fSètus
);

399 
åì
->
	`födNodes
(&
ÀafNodes
, 
RBBINode
::
ÀafCh¨
, *
fSètus
);

400 i‡(
	`U_FAILURE
(*
fSètus
)) {

407 
RBBINode
 *
u£rRuÀRoŸ
 = 
åì
;

408 i‡(
fRB
->
fSëBuûdî
->
	`ßwBOF
()) {

409 
u£rRuÀRoŸ
 = 
åì
->
fLe·Chûd
->
fRightChûd
;

411 
	`U_ASSERT
(
u£rRuÀRoŸ
 !
NULL
);

412 
UVe˘‹
 *
m©chSèπNodes
 = 
u£rRuÀRoŸ
->
fFú°PosSë
;

417 
öt32_t
 
ídNodeIx
;

418 
öt32_t
 
°¨tNodeIx
;

420 
ídNodeIx
=0;ÉndNodeIx<
ÀafNodes
.
	`size
();ÉndNodeIx++) {

421 
RBBINode
 *
tNode
 = (RBBINodê*)
ÀafNodes
.
	`ñemítAt
(
ídNodeIx
);

422 
RBBINode
 *
ídNode
 = 
NULL
;

426 
i
=0; i<
ídM¨kîNodes
.
	`size
(); i++) {

427 i‡(
tNode
->
fFﬁlowPos
->
	`c⁄èös
(
ídM¨kîNodes
.
	`ñemítAt
(
i
))) {

428 
ídNode
 = 
tNode
;

432 i‡(
ídNode
 =
NULL
) {

443 i‡(
fRB
->
fLBCMNoChaö
) {

444 
UCh¨32
 
c
 = 
this
->
fRB
->
fSëBuûdî
->
	`gëFú°Ch¨
(
ídNode
->
fVÆ
);

445 i‡(
c
 != -1) {

447 
ULöeBªak
 
cLBPr›
 = (ULöeBªak)
	`u_gëI¡Pr›îtyVÆue
(
c
, 
UCHAR_LINE_BREAK
);

448 i‡(
cLBPr›
 =
U_LB_COMBINING_MARK
) {

457 
RBBINode
 *
°¨tNode
;

458 
°¨tNodeIx
 = 0; sèπNodeIx<
m©chSèπNodes
->
	`size
(); startNodeIx++) {

459 
°¨tNode
 = (
RBBINode
 *)
m©chSèπNodes
->
	`ñemítAt
(
°¨tNodeIx
);

460 i‡(
°¨tNode
->
fTy≥
 !
RBBINode
::
ÀafCh¨
) {

464 i‡(
ídNode
->
fVÆ
 =
°¨tNode
->fVal) {

472 
	`£tAdd
(
ídNode
->
fFﬁlowPos
, 
°¨tNode
->fFollowPos);

476 
	}
}

489 
	gRBBITabÀBuûdî
::
	$bofFixup
() {

491 i‡(
	`U_FAILURE
(*
fSètus
)) {

505 
RBBINode
 *
bofNode
 = 
fTªe
->
fLe·Chûd
->fLeftChild;

506 
	`U_ASSERT
(
bofNode
->
fTy≥
 =
RBBINode
::
ÀafCh¨
);

507 
	`U_ASSERT
(
bofNode
->
fVÆ
 == 2);

514 
UVe˘‹
 *
m©chSèπNodes
 = 
fTªe
->
fLe·Chûd
->
fRightChûd
->
fFú°PosSë
;

516 
RBBINode
 *
°¨tNode
;

517 
°¨tNodeIx
;

518 
°¨tNodeIx
 = 0; sèπNodeIx<
m©chSèπNodes
->
	`size
(); startNodeIx++) {

519 
°¨tNode
 = (
RBBINode
 *)
m©chSèπNodes
->
	`ñemítAt
(
°¨tNodeIx
);

520 i‡(
°¨tNode
->
fTy≥
 !
RBBINode
::
ÀafCh¨
) {

524 i‡(
°¨tNode
->
fVÆ
 =
bofNode
->fVal) {

530 
	`£tAdd
(
bofNode
->
fFﬁlowPos
, 
°¨tNode
->fFollowPos);

533 
	}
}

544 
	gRBBITabÀBuûdî
::
	$buûdSèãTabÀ
() {

545 i‡(
	`U_FAILURE
(*
fSètus
)) {

548 
RBBISèãDes¸ùt‹
 *
ÁûSèã
;

550 
RBBISèãDes¸ùt‹
 *
öôülSèã
 = 
NULL
;

553 
œ°I≈utSymbﬁ
 = 
fRB
->
fSëBuûdî
->
	`gëNumCh¨C©eg‹õs
() - 1;

554 
ÁûSèã
 = 
√w
 
	`RBBISèãDes¸ùt‹
(
œ°I≈utSymbﬁ
, 
fSètus
);

555 i‡(
ÁûSèã
 =
NULL
) {

556 *
fSètus
 = 
U_MEMORY_ALLOCATION_ERROR
;

557 
ExôBuûdSTdñëóŒ
;

559 
ÁûSèã
->
fPosôi⁄s
 = 
√w
 
	`UVe˘‹
(*
fSètus
);

560 i‡(
ÁûSèã
->
fPosôi⁄s
 =
NULL
) {

561 *
fSètus
 = 
U_MEMORY_ALLOCATION_ERROR
;

563 i‡(
ÁûSèã
->
fPosôi⁄s
 =
NULL
 || 
	`U_FAILURE
(*
fSètus
)) {

564 
ExôBuûdSTdñëóŒ
;

566 
fDSèãs
->
	`addEÀmít
(
ÁûSèã
, *
fSètus
);

567 i‡(
	`U_FAILURE
(*
fSètus
)) {

568 
ExôBuûdSTdñëóŒ
;

573 
öôülSèã
 = 
√w
 
	`RBBISèãDes¸ùt‹
(
œ°I≈utSymbﬁ
, 
fSètus
);

574 i‡(
öôülSèã
 =
NULL
) {

575 *
fSètus
 = 
U_MEMORY_ALLOCATION_ERROR
;

577 i‡(
	`U_FAILURE
(*
fSètus
)) {

578 
ExôBuûdSTdñëóŒ
;

580 
öôülSèã
->
fPosôi⁄s
 = 
√w
 
	`UVe˘‹
(*
fSètus
);

581 i‡(
öôülSèã
->
fPosôi⁄s
 =
NULL
) {

582 *
fSètus
 = 
U_MEMORY_ALLOCATION_ERROR
;

584 i‡(
	`U_FAILURE
(*
fSètus
)) {

585 
ExôBuûdSTdñëóŒ
;

587 
	`£tAdd
(
öôülSèã
->
fPosôi⁄s
, 
fTªe
->
fFú°PosSë
);

588 
fDSèãs
->
	`addEÀmít
(
öôülSèã
, *
fSètus
);

589 i‡(
	`U_FAILURE
(*
fSètus
)) {

590 
ExôBuûdSTdñëóŒ
;

595 
RBBISèãDes¸ùt‹
 *
T
 = 
NULL
;

596 
öt32_t
 
tx
;

597 
tx
=1;Åx<
fDSèãs
->
	`size
();Åx++) {

598 
RBBISèãDes¸ùt‹
 *
ãmp
;

599 
ãmp
 = (
RBBISèãDes¸ùt‹
 *)
fDSèãs
->
	`ñemítAt
(
tx
);

600 i‡(
ãmp
->
fM¨ked
 =
FALSE
) {

601 
T
 = 
ãmp
;

605 i‡(
T
 =
NULL
) {

610 
T
->
fM¨ked
 = 
TRUE
;

613 
öt32_t
 
a
;

614 
a
 = 1;á<=
œ°I≈utSymbﬁ
;á++) {

618 
UVe˘‹
 *
U
 = 
NULL
;

619 
RBBINode
 *
p
;

620 
öt32_t
 
px
;

621 
px
=0;Öx<
T
->
fPosôi⁄s
->
	`size
();Öx++) {

622 
p
 = (
RBBINode
 *)
T
->
fPosôi⁄s
->
	`ñemítAt
(
px
);

623 i‡((
p
->
fTy≥
 =
RBBINode
::
ÀafCh¨
Ë&& (p->
fVÆ
 =
a
)) {

624 i‡(
U
 =
NULL
) {

625 
U
 = 
√w
 
	`UVe˘‹
(*
fSètus
);

626 i‡(
U
 =
NULL
) {

627 *
fSètus
 = 
U_MEMORY_ALLOCATION_ERROR
;

628 
ExôBuûdSTdñëóŒ
;

631 
	`£tAdd
(
U
, 
p
->
fFﬁlowPos
);

636 
öt32_t
 
ux
 = 0;

637 
UBoﬁ
 
UöD°©es
 = 
FALSE
;

638 i‡(
U
 !
NULL
) {

639 
	`U_ASSERT
(
U
->
	`size
() > 0);

640 
ix
;

641 
ix
=0; ix<
fDSèãs
->
	`size
(); ix++) {

642 
RBBISèãDes¸ùt‹
 *
ãmp2
;

643 
ãmp2
 = (
RBBISèãDes¸ùt‹
 *)
fDSèãs
->
	`ñemítAt
(
ix
);

644 i‡(
	`£tEquÆs
(
U
, 
ãmp2
->
fPosôi⁄s
)) {

645 
dñëe
 
U
;

646 
U
 = 
ãmp2
->
fPosôi⁄s
;

647 
ux
 = 
ix
;

648 
UöD°©es
 = 
TRUE
;

654 i‡(!
UöD°©es
)

656 
RBBISèãDes¸ùt‹
 *
√wSèã
 = 
√w
 
	`RBBISèãDes¸ùt‹
(
œ°I≈utSymbﬁ
, 
fSètus
);

657 i‡(
√wSèã
 =
NULL
) {

658 *
fSètus
 = 
U_MEMORY_ALLOCATION_ERROR
;

660 i‡(
	`U_FAILURE
(*
fSètus
)) {

661 
ExôBuûdSTdñëóŒ
;

663 
√wSèã
->
fPosôi⁄s
 = 
U
;

664 
fDSèãs
->
	`addEÀmít
(
√wSèã
, *
fSètus
);

665 i‡(
	`U_FAILURE
(*
fSètus
)) {

668 
ux
 = 
fDSèãs
->
	`size
()-1;

672 
T
->
fDå™
->
	`£tEÀmítAt
(
ux
, 
a
);

678 
ExôBuûdSTdñëóŒ
:

679 
dñëe
 
öôülSèã
;

680 
dñëe
 
ÁûSèã
;

681 
	}
}

694 
	gRBBITabÀBuûdî
::
	$ÊagAc˚±ögSèãs
() {

695 i‡(
	`U_FAILURE
(*
fSètus
)) {

698 
UVe˘‹
 
	`ídM¨kîNodes
(*
fSètus
);

699 
RBBINode
 *
ídM¨kî
;

700 
öt32_t
 
i
;

701 
öt32_t
 
n
;

703 i‡(
	`U_FAILURE
(*
fSètus
)) {

707 
fTªe
->
	`födNodes
(&
ídM¨kîNodes
, 
RBBINode
::
ídM¨k
, *
fSètus
);

708 i‡(
	`U_FAILURE
(*
fSètus
)) {

712 
i
=0; i<
ídM¨kîNodes
.
	`size
(); i++) {

713 
ídM¨kî
 = (
RBBINode
 *)
ídM¨kîNodes
.
	`ñemítAt
(
i
);

714 
n
=0;Ç<
fDSèãs
->
	`size
();Ç++) {

715 
RBBISèãDes¸ùt‹
 *
sd
 = (RBBISèãDes¸ùt‹ *)
fDSèãs
->
	`ñemítAt
(
n
);

716 i‡(
sd
->
fPosôi⁄s
->
	`ödexOf
(
ídM¨kî
) >= 0) {

721 i‡(
sd
->
fAc˚±ög
==0) {

723 
sd
->
fAc˚±ög
 = 
ídM¨kî
->
fVÆ
;

724 i‡(
sd
->
fAc˚±ög
 == 0) {

725 
sd
->
fAc˚±ög
 = -1;

728 i‡(
sd
->
fAc˚±ög
==-1 && 
ídM¨kî
->
fVÆ
 != 0) {

732 
sd
->
fAc˚±ög
 = 
ídM¨kî
->
fVÆ
;

739 i‡(
ídM¨kî
->
fLookAhódEnd
) {

743 
sd
->
fLookAhód
 = sd->
fAc˚±ög
;

748 
	}
}

756 
	gRBBITabÀBuûdî
::
	$ÊagLookAhódSèãs
() {

757 i‡(
	`U_FAILURE
(*
fSètus
)) {

760 
UVe˘‹
 
	`lookAhódNodes
(*
fSètus
);

761 
RBBINode
 *
lookAhódNode
;

762 
öt32_t
 
i
;

763 
öt32_t
 
n
;

765 
fTªe
->
	`födNodes
(&
lookAhódNodes
, 
RBBINode
::
lookAhód
, *
fSètus
);

766 i‡(
	`U_FAILURE
(*
fSètus
)) {

769 
i
=0; i<
lookAhódNodes
.
	`size
(); i++) {

770 
lookAhódNode
 = (
RBBINode
 *)
lookAhódNodes
.
	`ñemítAt
(
i
);

772 
n
=0;Ç<
fDSèãs
->
	`size
();Ç++) {

773 
RBBISèãDes¸ùt‹
 *
sd
 = (RBBISèãDes¸ùt‹ *)
fDSèãs
->
	`ñemítAt
(
n
);

774 i‡(
sd
->
fPosôi⁄s
->
	`ödexOf
(
lookAhódNode
) >= 0) {

775 
sd
->
fLookAhód
 = 
lookAhódNode
->
fVÆ
;

779 
	}
}

789 
	gRBBITabÀBuûdî
::
	$ÊagTaggedSèãs
() {

790 i‡(
	`U_FAILURE
(*
fSètus
)) {

793 
UVe˘‹
 
	`ègNodes
(*
fSètus
);

794 
RBBINode
 *
ègNode
;

795 
öt32_t
 
i
;

796 
öt32_t
 
n
;

798 i‡(
	`U_FAILURE
(*
fSètus
)) {

801 
fTªe
->
	`födNodes
(&
ègNodes
, 
RBBINode
::
èg
, *
fSètus
);

802 i‡(
	`U_FAILURE
(*
fSètus
)) {

805 
i
=0; i<
ègNodes
.
	`size
(); i++) {

806 
ègNode
 = (
RBBINode
 *)
ègNodes
.
	`ñemítAt
(
i
);

808 
n
=0;Ç<
fDSèãs
->
	`size
();Ç++) {

809 
RBBISèãDes¸ùt‹
 *
sd
 = (RBBISèãDes¸ùt‹ *)
fDSèãs
->
	`ñemítAt
(
n
);

810 i‡(
sd
->
fPosôi⁄s
->
	`ödexOf
(
ègNode
) >= 0) {

811 
	`s‹ãdAdd
(&
sd
->
fTagVÆs
, 
ègNode
->
fVÆ
);

815 
	}
}

829 
	gRBBITabÀBuûdî
::
	$mîgeRuÀSètusVÆs
() {

840 
i
;

841 
n
;

845 i‡(
fRB
->
fRuÀSètusVÆs
->
	`size
() == 0) {

846 
fRB
->
fRuÀSètusVÆs
->
	`addEÀmít
(1, *
fSètus
);

847 
fRB
->
fRuÀSètusVÆs
->
	`addEÀmít
((
öt32_t
)0, *
fSètus
);

851 
n
=0;Ç<
fDSèãs
->
	`size
();Ç++) {

852 
RBBISèãDes¸ùt‹
 *
sd
 = (RBBISèãDes¸ùt‹ *)
fDSèãs
->
	`ñemítAt
(
n
);

853 
UVe˘‹
 *
thisSèãsTagVÆues
 = 
sd
->
fTagVÆs
;

854 i‡(
thisSèãsTagVÆues
 =
NULL
) {

857 
sd
->
fTagsIdx
 = 0;

864 
sd
->
fTagsIdx
 = -1;

865 
öt32_t
 
thisTagGroupSèπ
 = 0;

866 
öt32_t
 
√xtTagGroupSèπ
 = 0;

869 
√xtTagGroupSèπ
 < 
fRB
->
fRuÀSètusVÆs
->
	`size
()) {

870 
thisTagGroupSèπ
 = 
√xtTagGroupSèπ
;

871 
√xtTagGroupSèπ
 +
fRB
->
fRuÀSètusVÆs
->
	`ñemítAti
(
thisTagGroupSèπ
) + 1;

872 i‡(
thisSèãsTagVÆues
->
	`size
(Ë!
fRB
->
fRuÀSètusVÆs
->
	`ñemítAti
(
thisTagGroupSèπ
)) {

880 
i
=0; i<
thisSèãsTagVÆues
->
	`size
(); i++) {

881 i‡(
thisSèãsTagVÆues
->
	`ñemítAti
(
i
) !=

882 
fRB
->
fRuÀSètusVÆs
->
	`ñemítAti
(
thisTagGroupSèπ
 + 1 + 
i
) ) {

888 i‡(
i
 =
thisSèãsTagVÆues
->
	`size
()) {

891 
sd
->
fTagsIdx
 = 
thisTagGroupSèπ
;

896 i‡(
sd
->
fTagsIdx
 == -1) {

898 
sd
->
fTagsIdx
 = 
fRB
->
fRuÀSètusVÆs
->
	`size
();

899 
fRB
->
fRuÀSètusVÆs
->
	`addEÀmít
(
thisSèãsTagVÆues
->
	`size
(), *
fSètus
);

900 
i
=0; i<
thisSèãsTagVÆues
->
	`size
(); i++) {

901 
fRB
->
fRuÀSètusVÆs
->
	`addEÀmít
(
thisSèãsTagVÆues
->
	`ñemítAti
(
i
), *
fSètus
);

905 
	}
}

921 
	gRBBITabÀBuûdî
::
	$s‹ãdAdd
(
UVe˘‹
 **
ve˘‹
, 
öt32_t
 
vÆ
) {

922 
öt32_t
 
i
;

924 i‡(*
ve˘‹
 =
NULL
) {

925 *
ve˘‹
 = 
√w
 
	`UVe˘‹
(*
fSètus
);

927 i‡(*
ve˘‹
 =
NULL
 || 
	`U_FAILURE
(*
fSètus
)) {

930 
UVe˘‹
 *
vec
 = *
ve˘‹
;

931 
öt32_t
 
vSize
 = 
vec
->
	`size
();

932 
i
=0; i<
vSize
; i++) {

933 
öt32_t
 
vÆAtI
 = 
vec
->
	`ñemítAti
(
i
);

934 i‡(
vÆAtI
 =
vÆ
) {

938 i‡(
vÆAtI
 > 
vÆ
) {

942 
vec
->
	`ö£πEÀmítAt
(
vÆ
, 
i
, *
fSètus
);

943 
	}
}

954 
	gRBBITabÀBuûdî
::
	$£tAdd
(
UVe˘‹
 *
de°
, UVe˘‹ *
sour˚
) {

955 
öt32_t
 
de°OrigöÆSize
 = 
de°
->
	`size
();

956 
öt32_t
 
sour˚Size
 = 
sour˚
->
	`size
();

957 
öt32_t
 
di
 = 0;

958 
MaybeSèckAºay
<*, 16> 
de°Aºay
, 
sour˚Aºay
;

959 **
de°På
, **
sour˚På
;

960 **
de°Lim
, **
sour˚Lim
;

962 i‡(
de°OrigöÆSize
 > 
de°Aºay
.
	`gëC≠acôy
()) {

963 i‡(
de°Aºay
.
	`ªsize
(
de°OrigöÆSize
Ë=
NULL
) {

967 
de°På
 = 
de°Aºay
.
	`gëAlüs
();

968 
de°Lim
 = 
de°På
 + 
de°OrigöÆSize
;

970 i‡(
sour˚Size
 > 
sour˚Aºay
.
	`gëC≠acôy
()) {

971 i‡(
sour˚Aºay
.
	`ªsize
(
sour˚Size
Ë=
NULL
) {

975 
sour˚På
 = 
sour˚Aºay
.
	`gëAlüs
();

976 
sour˚Lim
 = 
sour˚På
 + 
sour˚Size
;

979 (Ë
de°
->
	`toAºay
(
de°På
);

980 (Ë
sour˚
->
	`toAºay
(
sour˚På
);

982 
de°
->
	`£tSize
(
sour˚Size
+
de°OrigöÆSize
, *
fSètus
);

984 
sour˚På
 < 
sour˚Lim
 && 
de°På
 < 
de°Lim
) {

985 i‡(*
de°På
 =*
sour˚På
) {

986 
de°
->
	`£tEÀmítAt
(*
sour˚På
++, 
di
++);

987 
de°På
++;

991 i‡(
	`u¥v_memcmp
(
de°På
, 
sour˚På
, (*)) < 0) {

992 
de°
->
	`£tEÀmítAt
(*
de°På
++, 
di
++);

995 
de°
->
	`£tEÀmítAt
(*
sour˚På
++, 
di
++);

1000 
de°På
 < 
de°Lim
) {

1001 
de°
->
	`£tEÀmítAt
(*
de°På
++, 
di
++);

1003 
sour˚På
 < 
sour˚Lim
) {

1004 
de°
->
	`£tEÀmítAt
(*
sour˚På
++, 
di
++);

1007 
de°
->
	`£tSize
(
di
, *
fSètus
);

1008 
	}
}

1019 
UBoﬁ
 
	gRBBITabÀBuûdî
::
	$£tEquÆs
(
UVe˘‹
 *
a
, UVe˘‹ *
b
) {

1020  
a
->
	`equÆs
(*
b
);

1021 
	}
}

1030 #ifde‡
RBBI_DEBUG


1031 
	gRBBITabÀBuûdî
::
	$¥ötPosSës
(
RBBINode
 *
n
) {

1032 i‡(
n
==
NULL
) {

1035 
n
->
	`¥ötNode
();

1036 
	`RBBIDebugPrötf
(" NuŒabÀ: %s\n", 
n
->
fNuŒabÀ
?"TRUE":"FALSE");

1038 
	`RBBIDebugPrötf
(" firstpos: ");

1039 
	`¥ötSë
(
n
->
fFú°PosSë
);

1041 
	`RBBIDebugPrötf
("Üastpos: ");

1042 
	`¥ötSë
(
n
->
fLa°PosSë
);

1044 
	`RBBIDebugPrötf
(" followpos: ");

1045 
	`¥ötSë
(
n
->
fFﬁlowPos
);

1047 
	`¥ötPosSës
(
n
->
fLe·Chûd
);

1048 
	`¥ötPosSës
(
n
->
fRightChûd
);

1049 
	}
}

1060 
öt32_t
 
	gRBBITabÀBuûdî
::
	$gëTabÀSize
() const {

1061 
öt32_t
 
size
 = 0;

1062 
öt32_t
 
numRows
;

1063 
öt32_t
 
numCﬁs
;

1064 
öt32_t
 
rowSize
;

1066 i‡(
fTªe
 =
NULL
) {

1070 
size
 = (
RBBISèãTabÀ
) - 4;

1072 
numRows
 = 
fDSèãs
->
	`size
();

1073 
numCﬁs
 = 
fRB
->
fSëBuûdî
->
	`gëNumCh¨C©eg‹õs
();

1078 
rowSize
 = (
RBBISèãTabÀRow
Ë+ (
uöt16_t
)*(
numCﬁs
-2);

1079 
size
 +
numRows
 * 
rowSize
;

1080  
size
;

1081 
	}
}

1092 
	gRBBITabÀBuûdî
::
	$exp‹tTabÀ
(*
whîe
) {

1093 
RBBISèãTabÀ
 *
èbÀ
 = (RBBISèãTabÀ *)
whîe
;

1094 
uöt32_t
 
°©e
;

1095 
cﬁ
;

1097 i‡(
	`U_FAILURE
(*
fSètus
Ë|| 
fTªe
 =
NULL
) {

1101 i‡(
fRB
->
fSëBuûdî
->
	`gëNumCh¨C©eg‹õs
() > 0x7fff ||

1102 
fDSèãs
->
	`size
() > 0x7fff) {

1103 *
fSètus
 = 
U_BRK_INTERNAL_ERROR
;

1107 
èbÀ
->
fRowLí
 = (
RBBISèãTabÀRow
) +

1108 (
uöt16_t
Ë* (
fRB
->
fSëBuûdî
->
	`gëNumCh¨C©eg‹õs
() - 2);

1109 
èbÀ
->
fNumSèãs
 = 
fDSèãs
->
	`size
();

1110 
èbÀ
->
fFœgs
 = 0;

1111 i‡(
fRB
->
fLookAhódH¨dBªak
) {

1112 
èbÀ
->
fFœgs
 |
RBBI_LOOKAHEAD_HARD_BREAK
;

1114 i‡(
fRB
->
fSëBuûdî
->
	`ßwBOF
()) {

1115 
èbÀ
->
fFœgs
 |
RBBI_BOF_REQUIRED
;

1117 
èbÀ
->
fRe£rved
 = 0;

1119 
°©e
=0; sèã<
èbÀ
->
fNumSèãs
; state++) {

1120 
RBBISèãDes¸ùt‹
 *
sd
 = (RBBISèãDes¸ùt‹ *)
fDSèãs
->
	`ñemítAt
(
°©e
);

1121 
RBBISèãTabÀRow
 *
row
 = (RBBISèãTabÀRow *)(
èbÀ
->
fTabÀD©a
 + 
°©e
*èbÀ->
fRowLí
);

1122 
	`U_ASSERT
 (-32768 < 
sd
->
fAc˚±ög
 && sd->fAccepting <= 32767);

1123 
	`U_ASSERT
 (-32768 < 
sd
->
fLookAhód
 && sd->fLookAhead <= 32767);

1124 
row
->
fAc˚±ög
 = (
öt16_t
)
sd
->fAccepting;

1125 
row
->
fLookAhód
 = (
öt16_t
)
sd
->fLookAhead;

1126 
row
->
fTagIdx
 = (
öt16_t
)
sd
->
fTagsIdx
;

1127 
cﬁ
=0; cﬁ<
fRB
->
fSëBuûdî
->
	`gëNumCh¨C©eg‹õs
(); col++) {

1128 
row
->
fNextSèã
[
cﬁ
] = (
uöt16_t
)
sd
->
fDå™
->
	`ñemítAti
(col);

1131 
	}
}

1140 #ifde‡
RBBI_DEBUG


1141 
	gRBBITabÀBuûdî
::
	$¥ötSë
(
UVe˘‹
 *
s
) {

1142 
öt32_t
 
i
;

1143 
i
=0; i<
s
->
	`size
(); i++) {

1144 *
v
 = 
s
->
	`ñemítAt
(
i
);

1145 
	`RBBIDebugPrötf
("%10p", 
v
);

1147 
	`RBBIDebugPrötf
("\n");

1148 
	}
}

1157 #ifde‡
RBBI_DEBUG


1158 
	gRBBITabÀBuûdî
::
	$¥ötSèãs
() {

1159 
c
;

1160 
n
;

1162 
	`RBBIDebugPrötf
("state | iÇÖ uÅ s y m b oÜ s \n");

1163 
	`RBBIDebugPrötf
(" | Acc LA Tag");

1164 
c
=0; c<
fRB
->
fSëBuûdî
->
	`gëNumCh¨C©eg‹õs
(); c++) {

1165 
	`RBBIDebugPrötf
(" %2d", 
c
);

1167 
	`RBBIDebugPrötf
("\n");

1168 
	`RBBIDebugPrötf
(" |---------------");

1169 
c
=0; c<
fRB
->
fSëBuûdî
->
	`gëNumCh¨C©eg‹õs
(); c++) {

1170 
	`RBBIDebugPrötf
("---");

1172 
	`RBBIDebugPrötf
("\n");

1174 
n
=0;Ç<
fDSèãs
->
	`size
();Ç++) {

1175 
RBBISèãDes¸ùt‹
 *
sd
 = (RBBISèãDes¸ùt‹ *)
fDSèãs
->
	`ñemítAt
(
n
);

1176 
	`RBBIDebugPrötf
(" %3d | " , 
n
);

1177 
	`RBBIDebugPrötf
("%3d %3d %5d ", 
sd
->
fAc˚±ög
, sd->
fLookAhód
, sd->
fTagsIdx
);

1178 
c
=0; c<
fRB
->
fSëBuûdî
->
	`gëNumCh¨C©eg‹õs
(); c++) {

1179 
	`RBBIDebugPrötf
(" %2d", 
sd
->
fDå™
->
	`ñemítAti
(
c
));

1181 
	`RBBIDebugPrötf
("\n");

1183 
	`RBBIDebugPrötf
("\n\n");

1184 
	}
}

1194 #ifde‡
RBBI_DEBUG


1195 
	gRBBITabÀBuûdî
::
	$¥ötRuÀSètusTabÀ
() {

1196 
öt32_t
 
thisRec‹d
 = 0;

1197 
öt32_t
 
√xtRec‹d
 = 0;

1198 
i
;

1199 
UVe˘‹
 *
tbl
 = 
fRB
->
fRuÀSètusVÆs
;

1201 
	`RBBIDebugPrötf
("index |Åags \n");

1202 
	`RBBIDebugPrötf
("-------------------\n");

1204 
√xtRec‹d
 < 
tbl
->
	`size
()) {

1205 
thisRec‹d
 = 
√xtRec‹d
;

1206 
√xtRec‹d
 = 
thisRec‹d
 + 
tbl
->
	`ñemítAti
(thisRecord) + 1;

1207 
	`RBBIDebugPrötf
("%4d ", 
thisRec‹d
);

1208 
i
=
thisRec‹d
+1; i<
√xtRec‹d
; i++) {

1209 
	`RBBIDebugPrötf
(" %5d", 
tbl
->
	`ñemítAti
(
i
));

1211 
	`RBBIDebugPrötf
("\n");

1213 
	`RBBIDebugPrötf
("\n\n");

1214 
	}
}

1225 
	gRBBISèãDes¸ùt‹
::
	$RBBISèãDes¸ùt‹
(
œ°I≈utSymbﬁ
, 
UEº‹Code
 *
fSètus
) {

1226 
fM¨ked
 = 
FALSE
;

1227 
fAc˚±ög
 = 0;

1228 
fLookAhód
 = 0;

1229 
fTagsIdx
 = 0;

1230 
fTagVÆs
 = 
NULL
;

1231 
fPosôi⁄s
 = 
NULL
;

1232 
fDå™
 = 
NULL
;

1234 
fDå™
 = 
√w
 
	`UVe˘‹
(
œ°I≈utSymbﬁ
+1, *
fSètus
);

1235 i‡(
	`U_FAILURE
(*
fSètus
)) {

1238 i‡(
fDå™
 =
NULL
) {

1239 *
fSètus
 = 
U_MEMORY_ALLOCATION_ERROR
;

1242 
fDå™
->
	`£tSize
(
œ°I≈utSymbﬁ
+1, *
fSètus
);

1246 
	}
}

1249 
	gRBBISèãDes¸ùt‹
::~
	$RBBISèãDes¸ùt‹
() {

1250 
dñëe
 
fPosôi⁄s
;

1251 
dñëe
 
fDå™
;

1252 
dñëe
 
fTagVÆs
;

1253 
fPosôi⁄s
 = 
NULL
;

1254 
fDå™
 = 
NULL
;

1255 
fTagVÆs
 = 
NULL
;

1256 
	}
}

1258 
	gU_NAMESPACE_END


	@rbbitblb.h

12 #i‚de‡
RBBITBLB_H


13 
	#RBBITBLB_H


	)

15 
	~"unicode/uty≥s.h
"

16 
	~"unicode/uobje˘.h
"

17 
	~"unicode/rbbi.h
"

18 
	~"rbböode.h
"

21 
U_NAMESPACE_BEGIN


23 
˛ass
 
	gRBBIRuÀSˇ¬î
;

24 
˛ass
 
	gRBBIRuÀBuûdî
;

35 ˛as†
	cRBBITabÀBuûdî
 : 
public
 
UMem‹y
 {

36 
public
:

37 
RBBITabÀBuûdî
(
RBBIRuÀBuûdî
 *
rb
, 
RBBINode
 **
roŸNode
);

38 ~
RBBITabÀBuûdî
();

40 
buûd
();

41 
öt32_t
 
	$gëTabÀSize
() const;

43 
	`exp‹tTabÀ
(*
whîe
);

48 
¥iv©e
:

49 
	`ˇlcNuŒabÀ
(
RBBINode
 *
n
);

50 
	`ˇlcFú°Pos
(
RBBINode
 *
n
);

51 
	`ˇlcLa°Pos
(
RBBINode
 *
n
);

52 
	`ˇlcFﬁlowPos
(
RBBINode
 *
n
);

53 
	`ˇlcChaöedFﬁlowPos
(
RBBINode
 *
n
);

54 
	`bofFixup
();

55 
	`buûdSèãTabÀ
();

56 
	`ÊagAc˚±ögSèãs
();

57 
	`ÊagLookAhódSèãs
();

58 
	`ÊagTaggedSèãs
();

59 
	`mîgeRuÀSètusVÆs
();

64 
	`£tAdd
(
UVe˘‹
 *
de°
, UVe˘‹ *
sour˚
);

65 
UBoﬁ
 
	`£tEquÆs
(
UVe˘‹
 *
a
, UVe˘‹ *
b
);

67 
	`s‹ãdAdd
(
UVe˘‹
 **
de°
, 
öt32_t
 
vÆ
);

69 
public
:

70 #ifde‡
RBBI_DEBUG


71 
	`¥ötSë
(
UVe˘‹
 *
s
);

72 
	`¥ötPosSës
(
RBBINode
 *
n
 );

73 
	`¥ötSèãs
();

74 
	`¥ötRuÀSètusTabÀ
();

76 
	#¥ötSë
(
s
)

	)

77 
	#¥ötPosSës
(
n
)

	)

78 
	#¥ötSèãs
()

	)

79 
	#¥ötRuÀSètusTabÀ
()

	)

82 
¥iv©e
:

83 
RBBIRuÀBuûdî
 *
fRB
;

84 
RBBINode
 *&
fTªe
;

86 
UEº‹Code
 *
fSètus
;

88 
UVe˘‹
 *
fDSèãs
;

93 
	`RBBITabÀBuûdî
(c⁄° 
RBBITabÀBuûdî
 &
Ÿhî
);

94 
RBBITabÀBuûdî
 &
›î©‹
=(c⁄° RBBITabÀBuûdî &
Ÿhî
);

100 ˛as†
	cRBBISèãDes¸ùt‹
 : 
public
 
UMem‹y
 {

101 
public
:

102 
UBoﬁ
 
fM¨ked
;

103 
öt32_t
 
fAc˚±ög
;

104 
öt32_t
 
fLookAhód
;

105 
UVe˘‹
 *
fTagVÆs
;

106 
öt32_t
 
fTagsIdx
;

107 
UVe˘‹
 *
fPosôi⁄s
;

111 
UVe˘‹
 *
fDå™
;

116 
	`RBBISèãDes¸ùt‹
(
maxI≈utSymbﬁ
, 
UEº‹Code
 *
fSètus
);

117 ~
	`RBBISèãDes¸ùt‹
();

119 
¥iv©e
:

120 
	`RBBISèãDes¸ùt‹
(c⁄° 
RBBISèãDes¸ùt‹
 &
Ÿhî
);

121 
RBBISèãDes¸ùt‹
 &
›î©‹
=(c⁄° RBBISèãDes¸ùt‹ &
Ÿhî
);

126 
U_NAMESPACE_END


	@resbund.cpp

49 
	~"unicode/uty≥s.h
"

50 
	~"unicode/ªsbund.h
"

51 
	~"umuãx.h
"

53 
	~"uªsimp.h
"

55 
U_NAMESPACE_BEGIN


171 
	$UOBJECT_DEFINE_RTTI_IMPLEMENTATION
(
Resour˚BundÀ
)

173 
Resour˚BundÀ
::
	$Resour˚BundÀ
(
UEº‹Code
 &
îr
)

174 :
	`UObje˘
(), 
	$fLoˇÀ
(
NULL
)

176 
fResour˚
 = 
	`uªs_›í
(0, 
LoˇÀ
::
	`gëDeÁu…
().
	`gëName
(), &
îr
);

177 
	}
}

179 
	gResour˚BundÀ
::
	$Resour˚BundÀ
(c⁄° 
Resour˚BundÀ
 &
Ÿhî
)

180 :
	`UObje˘
(
Ÿhî
), 
	$fLoˇÀ
(
NULL
)

182 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

184 i‡(
Ÿhî
.
fResour˚
) {

185 
fResour˚
 = 
	`uªs_c›yResb
(0, 
Ÿhî
.fResour˚, &
°©us
);

188 
fResour˚
 = 
NULL
;

190 
	}
}

192 
	gResour˚BundÀ
::
	$Resour˚BundÀ
(
UResour˚BundÀ
 *
ªs
, 
UEº‹Code
& 
îr
)

193 :
	`UObje˘
(), 
	$fLoˇÀ
(
NULL
)

195 i‡(
ªs
) {

196 
fResour˚
 = 
	`uªs_c›yResb
(0, 
ªs
, &
îr
);

199 
fResour˚
 = 
NULL
;

201 
	}
}

203 
	gResour˚BundÀ
::
	$Resour˚BundÀ
(c⁄° * 
∑th
, c⁄° 
LoˇÀ
& 
loˇÀ
, 
UEº‹Code
& 
îr
)

204 :
	`UObje˘
(), 
	$fLoˇÀ
(
NULL
)

206 
fResour˚
 = 
	`uªs_›í
(
∑th
, 
loˇÀ
.
	`gëName
(), &
îr
);

207 
	}
}

210 
	gResour˚BundÀ
& Resour˚BundÀ::
›î©‹
=(c⁄° 
Resour˚BundÀ
& 
Ÿhî
)

212 if(
this
 =&
Ÿhî
) {

213  *
this
;

215 if(
	gfResour˚
 != 0) {

216 
uªs_˛o£
(
fResour˚
);

217 
	gfResour˚
 = 
NULL
;

219 
UEº‹Code
 
	g°©us
 = 
U_ZERO_ERROR
;

220 i‡(
	gŸhî
.
	gfResour˚
) {

221 
	gfResour˚
 = 
uªs_c›yResb
(0, 
Ÿhî
.
fResour˚
, &
°©us
);

224 
	gfResour˚
 = 
NULL
;

226  *
	gthis
;

229 
	gResour˚BundÀ
::~
	$Resour˚BundÀ
()

231 if(
fResour˚
 != 0) {

232 
	`uªs_˛o£
(
fResour˚
);

234 if(
fLoˇÀ
 !
NULL
) {

235 
	`dñëe
(
fLoˇÀ
);

237 
	}
}

239 
Resour˚BundÀ
 *

240 
	gResour˚BundÀ
::
	$˛⁄e
() const {

241  
√w
 
	`Resour˚BundÀ
(*
this
);

242 
	}
}

244 
UnicodeSåög
 
	gResour˚BundÀ
::
	$gëSåög
(
UEº‹Code
& 
°©us
) const {

245 
öt32_t
 
Àn
 = 0;

246 c⁄° 
UCh¨
 *
r
 = 
	`uªs_gëSåög
(
fResour˚
, &
Àn
, &
°©us
);

247  
	`UnicodeSåög
(
TRUE
, 
r
, 
Àn
);

248 
	}
}

250 c⁄° 
uöt8_t
 *
	gResour˚BundÀ
::
	$gëBö¨y
(
öt32_t
& 
Àn
, 
UEº‹Code
& 
°©us
) const {

251  
	`uªs_gëBö¨y
(
fResour˚
, &
Àn
, &
°©us
);

252 
	}
}

254 c⁄° 
öt32_t
 *
	gResour˚BundÀ
::
	$gëI¡Ve˘‹
(
öt32_t
& 
Àn
, 
UEº‹Code
& 
°©us
) const {

255  
	`uªs_gëI¡Ve˘‹
(
fResour˚
, &
Àn
, &
°©us
);

256 
	}
}

258 
uöt32_t
 
	gResour˚BundÀ
::
	$gëUI¡
(
UEº‹Code
& 
°©us
) const {

259  
	`uªs_gëUI¡
(
fResour˚
, &
°©us
);

260 
	}
}

262 
öt32_t
 
	gResour˚BundÀ
::
	$gëI¡
(
UEº‹Code
& 
°©us
) const {

263  
	`uªs_gëI¡
(
fResour˚
, &
°©us
);

264 
	}
}

266 c⁄° *
	gResour˚BundÀ
::
	$gëName
() const {

267  
	`uªs_gëName
(
fResour˚
);

268 
	}
}

270 c⁄° *
	gResour˚BundÀ
::
	$gëKey
() const {

271  
	`uªs_gëKey
(
fResour˚
);

272 
	}
}

274 
UResTy≥
 
	gResour˚BundÀ
::
	$gëTy≥
() const {

275  
	`uªs_gëTy≥
(
fResour˚
);

276 
	}
}

278 
öt32_t
 
	gResour˚BundÀ
::
	$gëSize
() const {

279  
	`uªs_gëSize
(
fResour˚
);

280 
	}
}

282 
UBoﬁ
 
	gResour˚BundÀ
::
	$hasNext
() const {

283  
	`uªs_hasNext
(
fResour˚
);

284 
	}
}

286 
	gResour˚BundÀ
::
	$ª£tIãøt‹
() {

287 
	`uªs_ª£tIãøt‹
(
fResour˚
);

288 
	}
}

290 
Resour˚BundÀ
 
	gResour˚BundÀ
::
	$gëNext
(
UEº‹Code
& 
°©us
) {

291 
UResour˚BundÀ
 
r
;

293 
	`uªs_öôSèckObje˘
(&
r
);

294 
	`uªs_gëNextResour˚
(
fResour˚
, &
r
, &
°©us
);

295 
Resour˚BundÀ
 
	`ªs
(&
r
, 
°©us
);

296 i‡(
	`U_SUCCESS
(
°©us
)) {

297 
	`uªs_˛o£
(&
r
);

299  
ªs
;

300 
	}
}

302 
UnicodeSåög
 
	gResour˚BundÀ
::
	$gëNextSåög
(
UEº‹Code
& 
°©us
) {

303 
öt32_t
 
Àn
 = 0;

304 c⁄° 
UCh¨
* 
r
 = 
	`uªs_gëNextSåög
(
fResour˚
, &
Àn
, 0, &
°©us
);

305  
	`UnicodeSåög
(
TRUE
, 
r
, 
Àn
);

306 
	}
}

308 
UnicodeSåög
 
	gResour˚BundÀ
::
	$gëNextSåög
(c⁄° ** 
key
, 
UEº‹Code
& 
°©us
) {

309 
öt32_t
 
Àn
 = 0;

310 c⁄° 
UCh¨
* 
r
 = 
	`uªs_gëNextSåög
(
fResour˚
, &
Àn
, 
key
, &
°©us
);

311  
	`UnicodeSåög
(
TRUE
, 
r
, 
Àn
);

312 
	}
}

314 
Resour˚BundÀ
 
	gResour˚BundÀ
::
	$gë
(
öt32_t
 
ödexR
, 
UEº‹Code
& 
°©us
) const {

315 
UResour˚BundÀ
 
r
;

317 
	`uªs_öôSèckObje˘
(&
r
);

318 
	`uªs_gëByIndex
(
fResour˚
, 
ödexR
, &
r
, &
°©us
);

319 
Resour˚BundÀ
 
	`ªs
(&
r
, 
°©us
);

320 i‡(
	`U_SUCCESS
(
°©us
)) {

321 
	`uªs_˛o£
(&
r
);

323  
ªs
;

324 
	}
}

326 
UnicodeSåög
 
	gResour˚BundÀ
::
	$gëSåögEx
(
öt32_t
 
ödexS
, 
UEº‹Code
& 
°©us
) const {

327 
öt32_t
 
Àn
 = 0;

328 c⁄° 
UCh¨
* 
r
 = 
	`uªs_gëSåögByIndex
(
fResour˚
, 
ödexS
, &
Àn
, &
°©us
);

329  
	`UnicodeSåög
(
TRUE
, 
r
, 
Àn
);

330 
	}
}

332 
Resour˚BundÀ
 
	gResour˚BundÀ
::
	$gë
(c⁄° * 
key
, 
UEº‹Code
& 
°©us
) const {

333 
UResour˚BundÀ
 
r
;

335 
	`uªs_öôSèckObje˘
(&
r
);

336 
	`uªs_gëByKey
(
fResour˚
, 
key
, &
r
, &
°©us
);

337 
Resour˚BundÀ
 
	`ªs
(&
r
, 
°©us
);

338 i‡(
	`U_SUCCESS
(
°©us
)) {

339 
	`uªs_˛o£
(&
r
);

341  
ªs
;

342 
	}
}

344 
Resour˚BundÀ
 
	gResour˚BundÀ
::
	$gëWôhFÆlback
(c⁄° * 
key
, 
UEº‹Code
& 
°©us
){

345 
UResour˚BundÀ
 
r
;

346 
	`uªs_öôSèckObje˘
(&
r
);

347 
	`uªs_gëByKeyWôhFÆlback
(
fResour˚
, 
key
, &
r
, &
°©us
);

348 
Resour˚BundÀ
 
	`ªs
(&
r
, 
°©us
);

349 if(
	`U_SUCCESS
(
°©us
)){

350 
	`uªs_˛o£
(&
r
);

352  
ªs
;

353 
	}
}

354 
UnicodeSåög
 
	gResour˚BundÀ
::
	$gëSåögEx
(c⁄° * 
key
, 
UEº‹Code
& 
°©us
) const {

355 
öt32_t
 
Àn
 = 0;

356 c⁄° 
UCh¨
* 
r
 = 
	`uªs_gëSåögByKey
(
fResour˚
, 
key
, &
Àn
, &
°©us
);

357  
	`UnicodeSåög
(
TRUE
, 
r
, 
Àn
);

358 
	}
}

361 
	gResour˚BundÀ
::
	$gëVîsi⁄Numbî
() const

363  
	`uªs_gëVîsi⁄NumbîI¡î«l
(
fResour˚
);

364 
	}
}

366 
	gResour˚BundÀ
::
	$gëVîsi⁄
(
UVîsi⁄Info
 
vîsi⁄Info
) const {

367 
	`uªs_gëVîsi⁄
(
fResour˚
, 
vîsi⁄Info
);

368 
	}
}

370 c⁄° 
	gLoˇÀ
 &
	gResour˚BundÀ
::
	$gëLoˇÀ
() const

372 
UBoﬁ
 
√edInô
;

373 
	`UMTX_CHECK
(
NULL
, (
fLoˇÀ
 =NULL), 
√edInô
);

374 if(
√edInô
) {

375 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

376 c⁄° *
loˇÀName
 = 
	`uªs_gëLoˇÀI¡î«l
(
fResour˚
, &
°©us
);

377 
LoˇÀ
 *
tLoˇÀ
 = 
√w
 
	`LoˇÀ
(
loˇÀName
);

379 i‡(
tLoˇÀ
 =
NULL
) {

380  
LoˇÀ
::
	`gëDeÁu…
();

382 
	`umtx_lock
(
NULL
);

383 
Resour˚BundÀ
 *
me
 = (Resour˚BundÀ *)
this
;

384 i‡(
me
->
fLoˇÀ
 =
NULL
) {

385 
me
->
fLoˇÀ
 = 
tLoˇÀ
;

386 
tLoˇÀ
 = 
NULL
;

388 
	`umtx_u∆ock
(
NULL
);

389 
dñëe
 
tLoˇÀ
;

391  *
fLoˇÀ
;

392 
	}
}

394 c⁄° 
LoˇÀ
 
	gResour˚BundÀ
::
	$gëLoˇÀ
(
ULocD©aLoˇÀTy≥
 
ty≥
, 
UEº‹Code
 &
°©us
) const

396  
	`uªs_gëLoˇÀByTy≥
(
fResour˚
, 
ty≥
, &
°©us
);

397 
	}
}

400 
	gU_NAMESPACE_END


	@resbund_cnv.cpp

19 
	~"unicode/uty≥s.h
"

20 
	~"unicode/ªsbund.h
"

21 
	~"uövch¨.h
"

23 
U_NAMESPACE_BEGIN


25 
	gResour˚BundÀ
::
	$Resour˚BundÀ
–c⁄° 
UnicodeSåög
& 
∑th
,

26 c⁄° 
LoˇÀ
& 
loˇÀ
,

27 
UEº‹Code
& 
îr‹
)

28 :
	`UObje˘
(), 
	$fLoˇÀ
(
NULL
)

30 
	`c⁄°ru˘F‹LoˇÀ
(
∑th
, 
loˇÀ
, 
îr‹
);

31 
	}
}

33 
	gResour˚BundÀ
::
	$Resour˚BundÀ
–c⁄° 
UnicodeSåög
& 
∑th
,

34 
UEº‹Code
& 
îr‹
)

35 :
	`UObje˘
(), 
	$fLoˇÀ
(
NULL
)

37 
	`c⁄°ru˘F‹LoˇÀ
(
∑th
, 
LoˇÀ
::
	`gëDeÁu…
(), 
îr‹
);

38 
	}
}

41 
	gResour˚BundÀ
::
	$c⁄°ru˘F‹LoˇÀ
(c⁄° 
UnicodeSåög
& 
∑th
,

42 c⁄° 
LoˇÀ
& 
loˇÀ
,

43 
UEº‹Code
& 
îr‹
)

45 i‡(
∑th
.
	`isEm±y
()) {

46 
fResour˚
 = 
	`uªs_›í
(
NULL
, 
loˇÀ
.
	`gëName
(), &
îr‹
);

49 
UnicodeSåög
 
	`nuŒTîmö©edP©h
(
∑th
);

50 
nuŒTîmö©edP©h
.
	`≠≥nd
((
UCh¨
)0);

51 
fResour˚
 = 
	`uªs_›íU
(
nuŒTîmö©edP©h
.
	`gëBuf„r
(), 
loˇÀ
.
	`gëName
(), &
îr‹
);

53 
	}
}

55 
	gU_NAMESPACE_END


	@ruleiter.cpp

11 
	~"ruÀôî.h
"

12 
	~"unicode/∑r£pos.h
"

13 
	~"unicode/uni°r.h
"

14 
	~"unicode/symèbÀ.h
"

15 
	~"utû.h
"

18 
	#MAX_U_NOTATION_LEN
 12

	)

20 
U_NAMESPACE_BEGIN


22 
	gRuÀCh¨a˘îIãøt‹
::
	$RuÀCh¨a˘îIãøt‹
(c⁄° 
UnicodeSåög
& 
theText
, c⁄° 
SymbﬁTabÀ
* 
theSym
,

23 
P¨£Posôi⁄
& 
thePos
) :

24 
	`ãxt
(
theText
),

25 
	`pos
(
thePos
),

26 
	`sym
(
theSym
),

27 
	`buf
(0),

28 
	$bufPos
(0)

29 {
	}
}

31 
UBoﬁ
 
	gRuÀCh¨a˘îIãøt‹
::
	$©End
() const {

32  
buf
 =0 && 
pos
.
	`gëIndex
(Ë=
ãxt
.
	`Àngth
();

33 
	}
}

35 
UCh¨32
 
	gRuÀCh¨a˘îIãøt‹
::
	$√xt
(
öt32_t
 
›ti⁄s
, 
UBoﬁ
& 
isEsˇ≥d
, 
UEº‹Code
& 
ec
) {

36 i‡(
	`U_FAILURE
(
ec
)Ë 
DONE
;

38 
UCh¨32
 
c
 = 
DONE
;

39 
isEsˇ≥d
 = 
FALSE
;

42 
c
 = 
	`_cuºít
();

43 
	`_adv™˚
(
	`UTF_CHAR_LENGTH
(
c
));

45 i‡(
c
 =
SymbﬁTabÀ
::
SYMBOL_REF
 && 
buf
 == 0 &&

46 (
›ti⁄s
 & 
PARSE_VARIABLES
Ë!0 && 
sym
 != 0) {

47 
UnicodeSåög
 
«me
 = 
sym
->
	`∑r£Re„ªn˚
(
ãxt
, 
pos
,Åext.
	`Àngth
());

50 i‡(
«me
.
	`Àngth
() == 0) {

53 
bufPos
 = 0;

54 
buf
 = 
sym
->
	`lookup
(
«me
);

55 i‡(
buf
 == 0) {

56 
ec
 = 
U_UNDEFINED_VARIABLE
;

57  
DONE
;

60 i‡(
buf
->
	`Àngth
() == 0) {

61 
buf
 = 0;

66 i‡((
›ti⁄s
 & 
SKIP_WHITESPACE
) != 0 &&

67 
	`u¥v_isRuÀWhôeS∑˚
(
c
)) {

71 i‡(
c
 =0x5C && (
›ti⁄s
 & 
PARSE_ESCAPES
) != 0) {

72 
UnicodeSåög
 
ãmpEsˇ≥
;

73 
öt32_t
 
off£t
 = 0;

74 
c
 = 
	`lookahód
(
ãmpEsˇ≥
, 
MAX_U_NOTATION_LEN
).
	`u√sˇ≥At
(
off£t
);

75 
	`jum∑hód
(
off£t
);

76 
isEsˇ≥d
 = 
TRUE
;

77 i‡(
c
 < 0) {

78 
ec
 = 
U_MALFORMED_UNICODE_ESCAPE
;

79  
DONE
;

86  
c
;

87 
	}
}

89 
	gRuÀCh¨a˘îIãøt‹
::
gëPos
(
RuÀCh¨a˘îIãøt‹
::
Pos
& 
p
) const {

90 
p
.
buf
 = buf;

91 
	gp
.
	gpos
 = 
pos
.
gëIndex
();

92 
	gp
.
	gbufPos
 = 
bufPos
;

95 
	gRuÀCh¨a˘îIãøt‹
::
£tPos
(c⁄° 
RuÀCh¨a˘îIãøt‹
::
Pos
& 
p
) {

96 
buf
 = 
p
.buf;

97 
	gpos
.
£tIndex
(
p
.
pos
);

98 
	gbufPos
 = 
p
.
bufPos
;

101 
	gRuÀCh¨a˘îIãøt‹
::
	$skùIgn‹ed
(
öt32_t
 
›ti⁄s
) {

102 i‡((
›ti⁄s
 & 
SKIP_WHITESPACE
) != 0) {

104 
UCh¨32
 
a
 = 
	`_cuºít
();

105 i‡(!
	`u¥v_isRuÀWhôeS∑˚
(
a
)) ;

106 
	`_adv™˚
(
	`UTF_CHAR_LENGTH
(
a
));

109 
	}
}

111 
	gUnicodeSåög
& 
	gRuÀCh¨a˘îIãøt‹
::
	$lookahód
(
UnicodeSåög
& 
ªsu…
, 
öt32_t
 
maxLookAhód
) const {

112 i‡(
maxLookAhód
 < 0) {

113 
maxLookAhód
 = 0x7FFFFFFF;

115 i‡(
buf
 != 0) {

116 
buf
->
	`exåa˘
(
bufPos
, 
maxLookAhód
, 
ªsu…
);

118 
ãxt
.
	`exåa˘
(
pos
.
	`gëIndex
(), 
maxLookAhód
, 
ªsu…
);

120  
ªsu…
;

121 
	}
}

123 
	gRuÀCh¨a˘îIãøt‹
::
	$jum∑hód
(
öt32_t
 
cou¡
) {

124 
	`_adv™˚
(
cou¡
);

125 
	}
}

135 
UCh¨32
 
	gRuÀCh¨a˘îIãøt‹
::
	$_cuºít
() const {

136 i‡(
buf
 != 0) {

137  
buf
->
	`ch¨32At
(
bufPos
);

139 
i
 = 
pos
.
	`gëIndex
();

140  (
i
 < 
ãxt
.
	`Àngth
()Ë?Åext.
	`ch¨32At
(iË: (
UCh¨32
)
DONE
;

142 
	}
}

144 
	gRuÀCh¨a˘îIãøt‹
::
	$_adv™˚
(
öt32_t
 
cou¡
) {

145 i‡(
buf
 != 0) {

146 
bufPos
 +
cou¡
;

147 i‡(
bufPos
 =
buf
->
	`Àngth
()) {

148 
buf
 = 0;

151 
pos
.
	`£tIndex
’os.
	`gëIndex
(Ë+ 
cou¡
);

152 i‡(
pos
.
	`gëIndex
(Ë> 
ãxt
.
	`Àngth
()) {

153 
pos
.
	`£tIndex
(
ãxt
.
	`Àngth
());

156 
	}
}

158 
	gU_NAMESPACE_END


	@ruleiter.h

11 #i‚de‡
_RULEITER_H_


12 
	#_RULEITER_H_


	)

14 
	~"unicode/uobje˘.h
"

16 
U_NAMESPACE_BEGIN


18 
˛ass
 
	gUnicodeSåög
;

19 
˛ass
 
	gP¨£Posôi⁄
;

20 
˛ass
 
	gSymbﬁTabÀ
;

29 ˛as†
	cRuÀCh¨a˘îIãøt‹
 : 
public
 
UMem‹y
 {

37 
¥iv©e
:

41 c⁄° 
UnicodeSåög
& 
ãxt
;

46 
	mP¨£Posôi⁄
& 
	mpos
;

51 c⁄° 
SymbﬁTabÀ
* 
	msym
;

56 c⁄° 
UnicodeSåög
* 
	mbuf
;

61 
öt32_t
 
	mbufPos
;

63 
	mpublic
:

67 íum { 
DONE
 = -1 };

74 íum { 
	gPARSE_VARIABLES
 = 1 };

81 íum { 
	gPARSE_ESCAPES
 = 2 };

89 íum { 
	gSKIP_WHITESPACE
 = 4 };

102 
RuÀCh¨a˘îIãøt‹
(c⁄° 
UnicodeSåög
& 
ãxt
, c⁄° 
SymbﬁTabÀ
* 
sym
,

103 
P¨£Posôi⁄
& 
pos
);

108 
UBoﬁ
 
	$©End
() const;

124 
UCh¨32
 
	`√xt
(
öt32_t
 
›ti⁄s
, 
UBoﬁ
& 
isEsˇ≥d
, 
UEº‹Code
& 
ec
);

129 
ölöe
 
UBoﬁ
 
	$öV¨übÀ
() const;

134 
Pos
 : 
public
 
UMem‹y
 {

135 
¥iv©e
:

136 c⁄° 
UnicodeSåög
* 
buf
;

137 
öt32_t
 
pos
;

138 
öt32_t
 
bufPos
;

139 
‰õnd
 
˛ass
 
RuÀCh¨a˘îIãøt‹
;

140 
	}
};

159 
	$gëPos
(
Pos
& 
p
) const;

166 
	`£tPos
(c⁄° 
Pos
& 
p
);

176 
	`skùIgn‹ed
(
öt32_t
 
›ti⁄s
);

192 
UnicodeSåög
& 
	`lookahód
(UnicodeSåög& 
ªsu…
, 
öt32_t
 
maxLookAhód
 = -1) const;

199 
	`jum∑hód
(
öt32_t
 
cou¡
);

210 
¥iv©e
:

216 
UCh¨32
 
	$_cuºít
() const;

222 
	`_adv™˚
(
öt32_t
 
cou¡
);

223 
	}
};

225 
ölöe
 
UBoﬁ
 
	gRuÀCh¨a˘îIãøt‹
::
	$öV¨übÀ
() const {

226  
buf
 != 0;

227 
	}
}

229 
	gU_NAMESPACE_END


	@schriter.cpp

16 
	~<ty≥öfo
>

18 
	~"unicode/ch¨ôî.h
"

19 
	~"unicode/schrôî.h
"

21 
U_NAMESPACE_BEGIN


23 
	$UOBJECT_DEFINE_RTTI_IMPLEMENTATION
(
SåögCh¨a˘îIãøt‹
)

25 
SåögCh¨a˘îIãøt‹
::
	$SåögCh¨a˘îIãøt‹
()

26 : 
	`UCh¨Ch¨a˘îIãøt‹
(),

27 
	$ãxt
()

30 
	}
}

32 
	gSåögCh¨a˘îIãøt‹
::
	$SåögCh¨a˘îIãøt‹
(c⁄° 
UnicodeSåög
& 
ãxtSå
)

33 : 
	`UCh¨Ch¨a˘îIãøt‹
(
ãxtSå
.
	`gëBuf„r
(),ÅextSå.
	`Àngth
()),

34 
	$ãxt
(
ãxtSå
)

37 
UCh¨Ch¨a˘îIãøt‹
::
ãxt
 = 
this
->ãxt.
	`gëBuf„r
();

38 
	}
}

40 
	gSåögCh¨a˘îIãøt‹
::
	$SåögCh¨a˘îIãøt‹
(c⁄° 
UnicodeSåög
& 
ãxtSå
,

41 
öt32_t
 
ãxtPos
)

42 : 
	`UCh¨Ch¨a˘îIãøt‹
(
ãxtSå
.
	`gëBuf„r
(),ÅextSå.
	`Àngth
(), 
ãxtPos
),

43 
	$ãxt
(
ãxtSå
)

46 
UCh¨Ch¨a˘îIãøt‹
::
ãxt
 = 
this
->ãxt.
	`gëBuf„r
();

47 
	}
}

49 
	gSåögCh¨a˘îIãøt‹
::
	$SåögCh¨a˘îIãøt‹
(c⁄° 
UnicodeSåög
& 
ãxtSå
,

50 
öt32_t
 
ãxtBegö
,

51 
öt32_t
 
ãxtEnd
,

52 
öt32_t
 
ãxtPos
)

53 : 
	`UCh¨Ch¨a˘îIãøt‹
(
ãxtSå
.
	`gëBuf„r
(),ÅextSå.
	`Àngth
(), 
ãxtBegö
, 
ãxtEnd
, 
ãxtPos
),

54 
	$ãxt
(
ãxtSå
)

57 
UCh¨Ch¨a˘îIãøt‹
::
ãxt
 = 
this
->ãxt.
	`gëBuf„r
();

58 
	}
}

60 
	gSåögCh¨a˘îIãøt‹
::
	$SåögCh¨a˘îIãøt‹
(c⁄° 
SåögCh¨a˘îIãøt‹
& 
th©
)

61 : 
	`UCh¨Ch¨a˘îIãøt‹
(
th©
),

62 
	$ãxt
(
th©
.
ãxt
)

65 
UCh¨Ch¨a˘îIãøt‹
::
ãxt
 = 
this
->ãxt.
	`gëBuf„r
();

66 
	}
}

68 
	gSåögCh¨a˘îIãøt‹
::~
	$SåögCh¨a˘îIãøt‹
() {

69 
	}
}

71 
SåögCh¨a˘îIãøt‹
&

72 
SåögCh¨a˘îIãøt‹
::
›î©‹
=(c⁄° SåögCh¨a˘îIãøt‹& 
th©
) {

73 
UCh¨Ch¨a˘îIãøt‹
::
›î©‹
=(
th©
);

74 
	gãxt
 = 
th©
.
ãxt
;

76 
	gUCh¨Ch¨a˘îIãøt‹
::
ãxt
 = 
this
->ãxt.
gëBuf„r
();

77  *
	gthis
;

80 
UBoﬁ


81 
	gSåögCh¨a˘îIãøt‹
::
›î©‹
==(c⁄° 
F‹w¨dCh¨a˘îIãøt‹
& 
th©
) const {

82 i‡(
this
 =&
th©
) {

83  
TRUE
;

90 i‡(
ty≥id
(*
this
Ë!ty≥id(
th©
)) {

91  
FALSE
;

94 
	gSåögCh¨a˘îIãøt‹
& 
	gªÆTh©
 = (
SåögCh¨a˘îIãøt‹
&)
th©
;

96  
	gãxt
 =
ªÆTh©
.
ãxt


97 && 
pos
 =
ªÆTh©
.pos

98 && 
begö
 =
ªÆTh©
.begin

99 && 
íd
 =
ªÆTh©
.end;

102 
Ch¨a˘îIãøt‹
*

103 
	gSåögCh¨a˘îIãøt‹
::
	$˛⁄e
() const {

104  
√w
 
	`SåögCh¨a˘îIãøt‹
(*
this
);

105 
	}
}

108 
	gSåögCh¨a˘îIãøt‹
::
	$£tText
(c⁄° 
UnicodeSåög
& 
√wText
) {

109 
ãxt
 = 
√wText
;

110 
UCh¨Ch¨a˘îIãøt‹
::
	`£tText
(
ãxt
.
	`gëBuf„r
(),Åext.
	`Àngth
());

111 
	}
}

114 
	gSåögCh¨a˘îIãøt‹
::
	$gëText
(
UnicodeSåög
& 
ªsu…
) {

115 
ªsu…
 = 
ãxt
;

116 
	}
}

117 
	gU_NAMESPACE_END


	@serv.cpp

8 
	~"unicode/uty≥s.h
"

10 #i‡!
UCONFIG_NO_SERVICE


12 
	~"£rv.h
"

13 
	~"umuãx.h
"

15 #unde‡
SERVICE_REFCOUNT


19 
U_NAMESPACE_BEGIN


25 c⁄° 
UCh¨
 
	gICUSîvi˚Key
::
PREFIX_DELIMITER
 = 0x002F;

27 
	gICUSîvi˚Key
::
	$ICUSîvi˚Key
(c⁄° 
UnicodeSåög
& 
id
)

28 : 
	$_id
(
id
) {

29 
	}
}

31 
ICUSîvi˚Key
::~
	$ICUSîvi˚Key
()

33 
	}
}

35 c⁄° 
UnicodeSåög
&

36 
ICUSîvi˚Key
::
	$gëID
() const

38  
_id
;

39 
	}
}

41 
	gUnicodeSåög
&

42 
	gICUSîvi˚Key
::
	$ˇn⁄iˇlID
(
UnicodeSåög
& 
ªsu…
) const

44  
ªsu…
.
	`≠≥nd
(
_id
);

45 
	}
}

47 
	gUnicodeSåög
&

48 
	gICUSîvi˚Key
::
	$cuºítID
(
UnicodeSåög
& 
ªsu…
) const

50  
	`ˇn⁄iˇlID
(
ªsu…
);

51 
	}
}

53 
	gUnicodeSåög
&

54 
	gICUSîvi˚Key
::
	$cuºítDes¸ùt‹
(
UnicodeSåög
& 
ªsu…
) const

56 
	`¥efix
(
ªsu…
);

57 
ªsu…
.
	`≠≥nd
(
PREFIX_DELIMITER
);

58  
	`cuºítID
(
ªsu…
);

59 
	}
}

61 
UBoﬁ


62 
	gICUSîvi˚Key
::
	$ÁŒback
()

64  
FALSE
;

65 
	}
}

67 
UBoﬁ


68 
	gICUSîvi˚Key
::
	$isFÆlbackOf
(c⁄° 
UnicodeSåög
& 
id
) const

70  
id
 =
_id
;

71 
	}
}

73 
	gUnicodeSåög
&

74 
	gICUSîvi˚Key
::
	$¥efix
(
UnicodeSåög
& 
ªsu…
) const

76  
ªsu…
;

77 
	}
}

79 
	gUnicodeSåög
&

80 
	gICUSîvi˚Key
::
	$∑r£Pªfix
(
UnicodeSåög
& 
ªsu…
)

82 
öt32_t
 
n
 = 
ªsu…
.
	`ödexOf
(
PREFIX_DELIMITER
);

83 i‡(
n
 < 0) {

84 
n
 = 0;

86 
ªsu…
.
	`ªmove
(
n
);

87  
ªsu…
;

88 
	}
}

90 
	gUnicodeSåög
&

91 
	gICUSîvi˚Key
::
	$∑r£Suffix
(
UnicodeSåög
& 
ªsu…
)

93 
öt32_t
 
n
 = 
ªsu…
.
	`ödexOf
(
PREFIX_DELIMITER
);

94 i‡(
n
 >= 0) {

95 
ªsu…
.
	`ªmove
(0, 
n
+1);

97  
ªsu…
;

98 
	}
}

100 #ifde‡
SERVICE_DEBUG


101 
	gUnicodeSåög
&

102 
	gICUSîvi˚Key
::
	$debug
(
UnicodeSåög
& 
ªsu…
) const

104 
	`debugCœss
(
ªsu…
);

105 
ªsu…
.
	`≠≥nd
(" id: ");

106 
ªsu…
.
	`≠≥nd
(
_id
);

107  
ªsu…
;

108 
	}
}

110 
	gUnicodeSåög
&

111 
	gICUSîvi˚Key
::
	$debugCœss
(
UnicodeSåög
& 
ªsu…
) const

113  
ªsu…
.
	`≠≥nd
("ICUServiceKey");

114 
	}
}

117 
	$UOBJECT_DEFINE_RTTI_IMPLEMENTATION
(
ICUSîvi˚Key
)

123 
Sim∂eFa˘‹y
::
	$Sim∂eFa˘‹y
(
UObje˘
* 
ö°™˚ToAd›t
, c⁄° 
UnicodeSåög
& 
id
, 
UBoﬁ
 
visibÀ
)

124 : 
	`_ö°™˚
(
ö°™˚ToAd›t
), 
	`_id
(
id
), 
	$_visibÀ
(
visibÀ
)

126 
	}
}

128 
	gSim∂eFa˘‹y
::~
	$Sim∂eFa˘‹y
()

130 
dñëe
 
_ö°™˚
;

131 
	}
}

133 
UObje˘
*

134 
	gSim∂eFa˘‹y
::
	$¸óã
(c⁄° 
ICUSîvi˚Key
& 
key
, c⁄° 
ICUSîvi˚
* 
£rvi˚
, 
UEº‹Code
& 
°©us
) const

136 i‡(
	`U_SUCCESS
(
°©us
)) {

137 
UnicodeSåög
 
ãmp
;

138 i‡(
_id
 =
key
.
	`cuºítID
(
ãmp
)) {

139  
£rvi˚
->
	`˛⁄eIn°™˚
(
_ö°™˚
);

142  
NULL
;

143 
	}
}

146 
	gSim∂eFa˘‹y
::
	$upd©eVisibÀIDs
(
HashèbÀ
& 
ªsu…
, 
UEº‹Code
& 
°©us
) const

148 i‡(
_visibÀ
) {

149 
ªsu…
.
	`put
(
_id
, (*)
this
, 
°©us
);

151 
ªsu…
.
	`ªmove
(
_id
);

153 
	}
}

155 
	gUnicodeSåög
&

156 
	gSim∂eFa˘‹y
::
	$gëDi•œyName
(c⁄° 
UnicodeSåög
& 
id
, c⁄° 
LoˇÀ
& , UnicodeSåög& 
ªsu…
) const

158 i‡(
_visibÀ
 && 
_id
 =
id
) {

159 
ªsu…
 = 
_id
;

161 
ªsu…
.
	`£tToBogus
();

163  
ªsu…
;

164 
	}
}

166 #ifde‡
SERVICE_DEBUG


167 
	gUnicodeSåög
&

168 
	gSim∂eFa˘‹y
::
	$debug
(
UnicodeSåög
& 
toAµídTo
) const

170 
	`debugCœss
(
toAµídTo
);

171 
toAµídTo
.
	`≠≥nd
(" id: ");

172 
toAµídTo
.
	`≠≥nd
(
_id
);

173 
toAµídTo
.
	`≠≥nd
(", visible: ");

174 
toAµídTo
.
	`≠≥nd
(
_visibÀ
 ? "T" : "F");

175  
toAµídTo
;

176 
	}
}

178 
	gUnicodeSåög
&

179 
	gSim∂eFa˘‹y
::
	$debugCœss
(
UnicodeSåög
& 
toAµídTo
) const

181  
toAµídTo
.
	`≠≥nd
("SimpleFactory");

182 
	}
}

185 
	$UOBJECT_DEFINE_RTTI_IMPLEMENTATION
(
Sim∂eFa˘‹y
)

191 
	$UOBJECT_DEFINE_RTTI_IMPLEMENTATION
(
Sîvi˚Li°íî
)

199 ˛as†
	cCacheE¡ry
 : 
public
 
UMem‹y
 {

200 
¥iv©e
:

201 
öt32_t
 
ªfcou¡
;

203 
public
:

204 
UnicodeSåög
 
a˘uÆDes¸ùt‹
;

205 
UObje˘
* 
£rvi˚
;

210 ~
	$CacheE¡ry
() {

211 
dñëe
 
£rvi˚
;

214 
	$CacheE¡ry
(c⁄° 
UnicodeSåög
& 
_a˘uÆDes¸ùt‹
, 
UObje˘
* 
_£rvi˚
)

215 : 
	`ªfcou¡
(1), 
	`a˘uÆDes¸ùt‹
(
_a˘uÆDes¸ùt‹
), 
	$£rvi˚
(
_£rvi˚
) {

216 
	}
}

224 
CacheE¡ry
* 
	$ªf
() {

225 ++
ªfcou¡
;

226  
this
;

227 
	}
}

236 
CacheE¡ry
* 
	$uƒef
() {

237 i‡((--
ªfcou¡
) == 0) {

238 
dñëe
 
this
;

239  
NULL
;

241  
this
;

242 
	}
}

248 
UBoﬁ
 
	$isSh¨ed
() const {

249  
ªfcou¡
 > 1;

250 
	}
}

254 
U_CDECL_BEGIN


255 
U_CALLCONV


256 
	$ˇcheDñëî
(* 
obj
) {

257 
	`U_NAMESPACE_USE
 ((
CacheE¡ry
*)
obj
)->
	`uƒef
();

258 
	}
}

263 
U_CALLCONV


264 
	$dñëeUObje˘
(*
obj
) {

265 
U_NAMESPACE_USE
 
	`dñëe
 (
UObje˘
*Ë
obj
;

266 
	}
}

267 
U_CDECL_END


273 ˛as†
	cDNCache
 : 
public
 
UMem‹y
 {

274 
public
:

275 
HashèbÀ
 
ˇche
;

276 c⁄° 
LoˇÀ
 
	mloˇÀ
;

278 
	$DNCache
(c⁄° 
LoˇÀ
& 
_loˇÀ
)

279 : 
	`ˇche
(), 
	$loˇÀ
(
_loˇÀ
)

283 
	}
};

290 
SåögPaú
*

291 
	gSåögPaú
::
	$¸óã
(c⁄° 
UnicodeSåög
& 
di•œyName
,

292 c⁄° 
UnicodeSåög
& 
id
,

293 
UEº‹Code
& 
°©us
)

295 i‡(
	`U_SUCCESS
(
°©us
)) {

296 
SåögPaú
* 
•
 = 
√w
 
	`SåögPaú
(
di•œyName
, 
id
);

297 i‡(
•
 =
NULL
 || sp->
	`isBogus
()) {

298 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

299 
dñëe
 
•
;

300  
NULL
;

302  
•
;

304  
NULL
;

305 
	}
}

307 
UBoﬁ


308 
	gSåögPaú
::
	$isBogus
() const {

309  
di•œyName
.
	`isBogus
(Ë|| 
id
.isBogus();

310 
	}
}

312 
	gSåögPaú
::
	$SåögPaú
(c⁄° 
UnicodeSåög
& 
_di•œyName
,

313 c⁄° 
UnicodeSåög
& 
_id
)

314 : 
	`di•œyName
(
_di•œyName
)

315 , 
	$id
(
_id
)

317 
	}
}

319 
U_CDECL_BEGIN


320 
U_CALLCONV


321 
	$u£rv_dñëeSåögPaú
(*
obj
) {

322 
U_NAMESPACE_USE
 
	`dñëe
 (
SåögPaú
*Ë
obj
;

323 
	}
}

324 
U_CDECL_END


330 
	gICUSîvi˚
::
	$ICUSîvi˚
()

331 : 
	`«me
()

332 , 
	`lock
(0)

333 , 
	`time°amp
(0)

334 , 
	`Á˘‹õs
(
NULL
)

335 , 
	`£rvi˚Cache
(
NULL
)

336 , 
	`idCache
(
NULL
)

337 , 
	$dnCache
(
NULL
)

339 
	`umtx_öô
(&
lock
);

340 
	}
}

342 
	gICUSîvi˚
::
	$ICUSîvi˚
(c⁄° 
UnicodeSåög
& 
√wName
)

343 : 
	`«me
(
√wName
)

344 , 
	`lock
(0)

345 , 
	`time°amp
(0)

346 , 
	`Á˘‹õs
(
NULL
)

347 , 
	`£rvi˚Cache
(
NULL
)

348 , 
	`idCache
(
NULL
)

349 , 
	$dnCache
(
NULL
)

351 
	`umtx_öô
(&
lock
);

352 
	}
}

354 
	gICUSîvi˚
::~
	$ICUSîvi˚
()

357 
Muãx
 
	`muãx
(&
lock
);

358 
	`˛órCaches
();

359 
dñëe
 
Á˘‹õs
;

360 
Á˘‹õs
 = 
NULL
;

362 
	`umtx_de°roy
(&
lock
);

363 
	}
}

365 
UObje˘
*

366 
	gICUSîvi˚
::
	$gë
(c⁄° 
UnicodeSåög
& 
des¸ùt‹
, 
UEº‹Code
& 
°©us
) const

368  
	`gë
(
des¸ùt‹
, 
NULL
, 
°©us
);

369 
	}
}

371 
UObje˘
*

372 
	gICUSîvi˚
::
	$gë
(c⁄° 
UnicodeSåög
& 
des¸ùt‹
, UnicodeSåög* 
a˘uÆRëu∫
, 
UEº‹Code
& 
°©us
) const

374 
UObje˘
* 
ªsu…
 = 
NULL
;

375 
ICUSîvi˚Key
* 
key
 = 
	`¸óãKey
(&
des¸ùt‹
, 
°©us
);

376 i‡(
key
) {

377 
ªsu…
 = 
	`gëKey
(*
key
, 
a˘uÆRëu∫
, 
°©us
);

378 
dñëe
 
key
;

380  
ªsu…
;

381 
	}
}

383 
UObje˘
*

384 
	gICUSîvi˚
::
	$gëKey
(
ICUSîvi˚Key
& 
key
, 
UEº‹Code
& 
°©us
) const

386  
	`gëKey
(
key
, 
NULL
, 
°©us
);

387 
	}
}

392 
UObje˘
*

393 
	gICUSîvi˚
::
	$gëKey
(
ICUSîvi˚Key
& 
key
, 
UnicodeSåög
* 
a˘uÆRëu∫
, 
UEº‹Code
& 
°©us
) const

395  
	`gëKey
(
key
, 
a˘uÆRëu∫
, 
NULL
, 
°©us
);

396 
	}
}

401 ˛as†
	cXMuãx
 : 
public
 
UMem‹y
 {

402 
public
:

403 
ölöe
 
	$XMuãx
(
UMTX
 *
muãx
, 
UBoﬁ
 
ªíãrög
)

404 : 
	`fMuãx
(
muãx
)

405 , 
	`fA˘ive
(!
ªíãrög
)

407 i‡(
fA˘ive
Ë
	`umtx_lock
(
fMuãx
);

409 
ölöe
 ~
	$XMuãx
() {

410 i‡(
fA˘ive
Ë
	`umtx_u∆ock
(
fMuãx
);

411 
	}
}

413 
	g¥iv©e
:

414 
UMTX
 *
fMuãx
;

415 
UBoﬁ
 
	gfA˘ive
;

418 
	sUVe˘‹Dñëî
 {

419 
UVe˘‹
* 
	m_obj
;

420 
UVe˘‹Dñëî
(Ë: 
_obj
(
NULL
) {}

421 ~
UVe˘‹Dñëî
(Ë{ 
dñëe
 
_obj
; }

425 
UObje˘
*

426 
	gICUSîvi˚
::
	$gëKey
(
ICUSîvi˚Key
& 
key
, 
UnicodeSåög
* 
a˘uÆRëu∫
, c⁄° 
ICUSîvi˚Fa˘‹y
* 
Á˘‹y
, 
UEº‹Code
& 
°©us
) const

428 i‡(
	`U_FAILURE
(
°©us
)) {

429  
NULL
;

432 i‡(
	`isDeÁu…
()) {

433  
	`h™dÀDeÁu…
(
key
, 
a˘uÆRëu∫
, 
°©us
);

436 
ICUSîvi˚
* 
n˘his
 = (ICUSîvi˚*)
this
;

438 
CacheE¡ry
* 
ªsu…
 = 
NULL
;

449 
XMuãx
 
	`muãx
(&
n˘his
->
lock
, 
Á˘‹y
 !
NULL
);

451 i‡(
£rvi˚Cache
 =
NULL
) {

452 
n˘his
->
£rvi˚Cache
 = 
√w
 
	`HashèbÀ
(
°©us
);

453 i‡(
n˘his
->
£rvi˚Cache
 =
NULL
) {

454  
NULL
;

456 i‡(
	`U_FAILURE
(
°©us
)) {

457 
dñëe
 
£rvi˚Cache
;

458  
NULL
;

460 
£rvi˚Cache
->
	`£tVÆueDñëî
(
ˇcheDñëî
);

463 
UnicodeSåög
 
cuºítDes¸ùt‹
;

464 
UVe˘‹Dñëî
 
ˇcheDes¸ùt‹Li°
;

465 
UBoﬁ
 
putInCache
 = 
FALSE
;

467 
öt32_t
 
°¨tIndex
 = 0;

468 
öt32_t
 
limô
 = 
Á˘‹õs
->
	`size
();

469 
UBoﬁ
 
ˇcheResu…
 = 
TRUE
;

471 i‡(
Á˘‹y
 !
NULL
) {

472 
öt32_t
 
i
 = 0; i < 
limô
; ++i) {

473 i‡(
Á˘‹y
 =(c⁄° 
ICUSîvi˚Fa˘‹y
*)
Á˘‹õs
->
	`ñemítAt
(
i
)) {

474 
°¨tIndex
 = 
i
 + 1;

478 i‡(
°¨tIndex
 == 0) {

480 
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

481  
NULL
;

483 
ˇcheResu…
 = 
FALSE
;

487 
cuºítDes¸ùt‹
.
	`ªmove
();

488 
key
.
	`cuºítDes¸ùt‹
(
cuºítDes¸ùt‹
);

489 
ªsu…
 = (
CacheE¡ry
*)
£rvi˚Cache
->
	`gë
(
cuºítDes¸ùt‹
);

490 i‡(
ªsu…
 !
NULL
) {

497 
putInCache
 = 
TRUE
;

499 
öt32_t
 
ödex
 = 
°¨tIndex
;

500 
ödex
 < 
limô
) {

501 
ICUSîvi˚Fa˘‹y
* 
f
 = (ICUSîvi˚Fa˘‹y*)
Á˘‹õs
->
	`ñemítAt
(
ödex
++);

502 
UObje˘
* 
£rvi˚
 = 
f
->
	`¸óã
(
key
, 
this
, 
°©us
);

503 i‡(
	`U_FAILURE
(
°©us
)) {

504 
dñëe
 
£rvi˚
;

505  
NULL
;

507 i‡(
£rvi˚
 !
NULL
) {

508 
ªsu…
 = 
√w
 
	`CacheE¡ry
(
cuºítDes¸ùt‹
, 
£rvi˚
);

509 i‡(
ªsu…
 =
NULL
) {

510 
dñëe
 
£rvi˚
;

511 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

512  
NULL
;

515 
ouãrEnd
;

524 i‡(
ˇcheDes¸ùt‹Li°
.
_obj
 =
NULL
) {

525 
ˇcheDes¸ùt‹Li°
.
_obj
 = 
√w
 
	`UVe˘‹
(
uhash_dñëeUnicodeSåög
, 
NULL
, 5, 
°©us
);

526 i‡(
	`U_FAILURE
(
°©us
)) {

527  
NULL
;

530 
UnicodeSåög
* 
idToCache
 = 
√w
 
	`UnicodeSåög
(
cuºítDes¸ùt‹
);

531 i‡(
idToCache
 =
NULL
 || idToCache->
	`isBogus
()) {

532 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

533  
NULL
;

536 
ˇcheDes¸ùt‹Li°
.
_obj
->
	`addEÀmít
(
idToCache
, 
°©us
);

537 i‡(
	`U_FAILURE
(
°©us
)) {

538  
NULL
;

540 } 
key
.
	`ÁŒback
());

541 
ouãrEnd
:

543 i‡(
ªsu…
 !
NULL
) {

544 i‡(
putInCache
 && 
ˇcheResu…
) {

545 
£rvi˚Cache
->
	`put
(
ªsu…
->
a˘uÆDes¸ùt‹
,Ñesu…, 
°©us
);

546 i‡(
	`U_FAILURE
(
°©us
)) {

547 
dñëe
 
ªsu…
;

548  
NULL
;

551 i‡(
ˇcheDes¸ùt‹Li°
.
_obj
 !
NULL
) {

552 
öt32_t
 
i
 = 
ˇcheDes¸ùt‹Li°
.
_obj
->
	`size
(); --i >= 0;) {

553 
UnicodeSåög
* 
desc
 = (UnicodeSåög*)
ˇcheDes¸ùt‹Li°
.
_obj
->
	`ñemítAt
(
i
);

554 
£rvi˚Cache
->
	`put
(*
desc
, 
ªsu…
, 
°©us
);

555 i‡(
	`U_FAILURE
(
°©us
)) {

556 
dñëe
 
ªsu…
;

557  
NULL
;

560 
ªsu…
->
	`ªf
();

561 
ˇcheDes¸ùt‹Li°
.
_obj
->
	`ªmoveEÀmítAt
(
i
);

566 i‡(
a˘uÆRëu∫
 !
NULL
) {

568 i‡(
ªsu…
->
a˘uÆDes¸ùt‹
.
	`ödexOf
((
UCh¨
)0x2f) == 0) {

569 
a˘uÆRëu∫
->
	`ªmove
();

570 
a˘uÆRëu∫
->
	`≠≥nd
(
ªsu…
->
a˘uÆDes¸ùt‹
,

572 
ªsu…
->
a˘uÆDes¸ùt‹
.
	`Àngth
() - 1);

574 *
a˘uÆRëu∫
 = 
ªsu…
->
a˘uÆDes¸ùt‹
;

577 i‡(
a˘uÆRëu∫
->
	`isBogus
()) {

578 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

579 
dñëe
 
ªsu…
;

580  
NULL
;

584 
UObje˘
* 
£rvi˚
 = 
	`˛⁄eIn°™˚
(
ªsu…
->service);

585 i‡(
putInCache
 && !
ˇcheResu…
) {

586 
dñëe
 
ªsu…
;

588  
£rvi˚
;

592  
	`h™dÀDeÁu…
(
key
, 
a˘uÆRëu∫
, 
°©us
);

593 
	}
}

595 
UObje˘
*

596 
	gICUSîvi˚
::
	$h™dÀDeÁu…
(c⁄° 
ICUSîvi˚Key
& , 
UnicodeSåög
* , 
UEº‹Code
& ) const

598  
NULL
;

599 
	}
}

601 
	gUVe˘‹
&

602 
	gICUSîvi˚
::
	$gëVisibÀIDs
(
UVe˘‹
& 
ªsu…
, 
UEº‹Code
& 
°©us
) const {

603  
	`gëVisibÀIDs
(
ªsu…
, 
NULL
, 
°©us
);

604 
	}
}

606 
	gUVe˘‹
&

607 
	gICUSîvi˚
::
	$gëVisibÀIDs
(
UVe˘‹
& 
ªsu…
, c⁄° 
UnicodeSåög
* 
m©chID
, 
UEº‹Code
& 
°©us
) const

609 
ªsu…
.
	`ªmoveAŒEÀmíts
();

611 i‡(
	`U_FAILURE
(
°©us
)) {

612  
ªsu…
;

615 
ICUSîvi˚
 * 
n˘his
 = (ICUSîvi˚*)
this
;

617 
Muãx
 
	`muãx
(&
n˘his
->
lock
);

618 c⁄° 
HashèbÀ
* 
m≠
 = 
	`gëVisibÀIDM≠
(
°©us
);

619 i‡(
m≠
 !
NULL
) {

620 
ICUSîvi˚Key
* 
ÁŒbackKey
 = 
	`¸óãKey
(
m©chID
, 
°©us
);

622 
öt32_t
 
pos
 = -1;;) {

623 c⁄° 
UHashEÀmít
* 
e
 = 
m≠
->
	`√xtEÀmít
(
pos
);

624 i‡(
e
 =
NULL
) {

628 c⁄° 
UnicodeSåög
* 
id
 = (c⁄° UnicodeSåög*)
e
->
key
.
poöãr
;

629 i‡(
ÁŒbackKey
 !
NULL
) {

630 i‡(!
ÁŒbackKey
->
	`isFÆlbackOf
(*
id
)) {

635 
UnicodeSåög
* 
idCl⁄e
 = 
√w
 
	`UnicodeSåög
(*
id
);

636 i‡(
idCl⁄e
 =
NULL
 || idCl⁄e->
	`isBogus
()) {

637 
dñëe
 
idCl⁄e
;

638 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

641 
ªsu…
.
	`addEÀmít
(
idCl⁄e
, 
°©us
);

642 i‡(
	`U_FAILURE
(
°©us
)) {

643 
dñëe
 
idCl⁄e
;

647 
dñëe
 
ÁŒbackKey
;

650 i‡(
	`U_FAILURE
(
°©us
)) {

651 
ªsu…
.
	`ªmoveAŒEÀmíts
();

653  
ªsu…
;

654 
	}
}

656 c⁄° 
HashèbÀ
*

657 
	gICUSîvi˚
::
	$gëVisibÀIDM≠
(
UEº‹Code
& 
°©us
) const {

658 i‡(
	`U_FAILURE
(
°©us
)Ë 
NULL
;

662 
ICUSîvi˚
* 
n˘his
 = (ICUSîvi˚*)
this
;

663 i‡(
idCache
 =
NULL
) {

664 
n˘his
->
idCache
 = 
√w
 
	`HashèbÀ
(
°©us
);

665 i‡(
idCache
 =
NULL
) {

666 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

667 } i‡(
Á˘‹õs
 !
NULL
) {

668 
öt32_t
 
pos
 = 
Á˘‹õs
->
	`size
(); --pos >= 0;) {

669 
ICUSîvi˚Fa˘‹y
* 
f
 = (ICUSîvi˚Fa˘‹y*)
Á˘‹õs
->
	`ñemítAt
(
pos
);

670 
f
->
	`upd©eVisibÀIDs
(*
idCache
, 
°©us
);

672 i‡(
	`U_FAILURE
(
°©us
)) {

673 
dñëe
 
idCache
;

674 
n˘his
->
idCache
 = 
NULL
;

679  
idCache
;

680 
	}
}

683 
	gUnicodeSåög
&

684 
	gICUSîvi˚
::
	$gëDi•œyName
(c⁄° 
UnicodeSåög
& 
id
, UnicodeSåög& 
ªsu…
) const

686  
	`gëDi•œyName
(
id
, 
ªsu…
, 
LoˇÀ
::
	`gëDeÁu…
());

687 
	}
}

689 
	gUnicodeSåög
&

690 
	gICUSîvi˚
::
	$gëDi•œyName
(c⁄° 
UnicodeSåög
& 
id
, UnicodeSåög& 
ªsu…
, c⁄° 
LoˇÀ
& 
loˇÀ
) const

693 
ICUSîvi˚
* 
n˘his
 = (ICUSîvi˚*)
this
;

694 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

695 
Muãx
 
	`muãx
(&
n˘his
->
lock
);

696 c⁄° 
HashèbÀ
* 
m≠
 = 
	`gëVisibÀIDM≠
(
°©us
);

697 i‡(
m≠
 !
NULL
) {

698 
ICUSîvi˚Fa˘‹y
* 
f
 = (ICUSîvi˚Fa˘‹y*)
m≠
->
	`gë
(
id
);

699 i‡(
f
 !
NULL
) {

700 
f
->
	`gëDi•œyName
(
id
, 
loˇÀ
, 
ªsu…
);

701  
ªsu…
;

705 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

706 
ICUSîvi˚Key
* 
ÁŒbackKey
 = 
	`¸óãKey
(&
id
, 
°©us
);

707 
ÁŒbackKey
->
	`ÁŒback
()) {

708 
UnicodeSåög
 
us
;

709 
ÁŒbackKey
->
	`cuºítID
(
us
);

710 
f
 = (
ICUSîvi˚Fa˘‹y
*)
m≠
->
	`gë
(
us
);

711 i‡(
f
 !
NULL
) {

712 
f
->
	`gëDi•œyName
(
id
, 
loˇÀ
, 
ªsu…
);

713 
dñëe
 
ÁŒbackKey
;

714  
ªsu…
;

717 
dñëe
 
ÁŒbackKey
;

720 
ªsu…
.
	`£tToBogus
();

721  
ªsu…
;

722 
	}
}

724 
	gUVe˘‹
&

725 
	gICUSîvi˚
::
	$gëDi•œyNames
(
UVe˘‹
& 
ªsu…
, 
UEº‹Code
& 
°©us
) const

727  
	`gëDi•œyNames
(
ªsu…
, 
LoˇÀ
::
	`gëDeÁu…
(), 
NULL
, 
°©us
);

728 
	}
}

731 
	gUVe˘‹
&

732 
	gICUSîvi˚
::
	$gëDi•œyNames
(
UVe˘‹
& 
ªsu…
, c⁄° 
LoˇÀ
& 
loˇÀ
, 
UEº‹Code
& 
°©us
) const

734  
	`gëDi•œyNames
(
ªsu…
, 
loˇÀ
, 
NULL
, 
°©us
);

735 
	}
}

737 
	gUVe˘‹
&

738 
	gICUSîvi˚
::
	$gëDi•œyNames
(
UVe˘‹
& 
ªsu…
,

739 c⁄° 
LoˇÀ
& 
loˇÀ
,

740 c⁄° 
UnicodeSåög
* 
m©chID
,

741 
UEº‹Code
& 
°©us
) const

743 
ªsu…
.
	`ªmoveAŒEÀmíts
();

744 
ªsu…
.
	`£tDñëî
(
u£rv_dñëeSåögPaú
);

745 i‡(
	`U_SUCCESS
(
°©us
)) {

746 
ICUSîvi˚
* 
n˘his
 = (ICUSîvi˚*)
this
;

747 
Muãx
 
	`muãx
(&
n˘his
->
lock
);

749 i‡(
dnCache
 !
NULL
 && dnCache->
loˇÀ
 !=Üocale) {

750 
dñëe
 
dnCache
;

751 
n˘his
->
dnCache
 = 
NULL
;

754 i‡(
dnCache
 =
NULL
) {

755 c⁄° 
HashèbÀ
* 
m
 = 
	`gëVisibÀIDM≠
(
°©us
);

756 i‡(
m
 !
NULL
) {

757 
n˘his
->
dnCache
 = 
√w
 
	`DNCache
(
loˇÀ
);

758 i‡(
dnCache
 =
NULL
) {

759 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

760  
ªsu…
;

763 
öt32_t
 
pos
 = -1;

764 c⁄° 
UHashEÀmít
* 
íåy
 = 
NULL
;

765 (
íåy
 = 
m
->
	`√xtEÀmít
(
pos
)Ë!
NULL
) {

766 c⁄° 
UnicodeSåög
* 
id
 = (c⁄° UnicodeSåög*)
íåy
->
key
.
poöãr
;

767 
ICUSîvi˚Fa˘‹y
* 
f
 = (ICUSîvi˚Fa˘‹y*)
íåy
->
vÆue
.
poöãr
;

768 
UnicodeSåög
 
d«me
;

769 
f
->
	`gëDi•œyName
(*
id
, 
loˇÀ
, 
d«me
);

770 i‡(
d«me
.
	`isBogus
()) {

771 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

773 
dnCache
->
ˇche
.
	`put
(
d«me
, (*)
id
, 
°©us
);

774 i‡(
	`U_SUCCESS
(
°©us
)) {

778 
dñëe
 
dnCache
;

779 
n˘his
->
dnCache
 = 
NULL
;

780  
ªsu…
;

786 
ICUSîvi˚Key
* 
m©chKey
 = 
	`¸óãKey
(
m©chID
, 
°©us
);

791 
öt32_t
 
pos
 = -1;

792 c⁄° 
UHashEÀmít
 *
íåy
 = 
NULL
;

793 (
íåy
 = 
dnCache
->
ˇche
.
	`√xtEÀmít
(
pos
)Ë!
NULL
) {

794 c⁄° 
UnicodeSåög
* 
id
 = (c⁄° UnicodeSåög*)
íåy
->
vÆue
.
poöãr
;

795 i‡(
m©chKey
 !
NULL
 && !m©chKey->
	`isFÆlbackOf
(*
id
)) {

798 c⁄° 
UnicodeSåög
* 
dn
 = (c⁄° UnicodeSåög*)
íåy
->
key
.
poöãr
;

799 
SåögPaú
* 
•
 = SåögPaú::
	`¸óã
(*
id
, *
dn
, 
°©us
);

800 
ªsu…
.
	`addEÀmít
(
•
, 
°©us
);

801 i‡(
	`U_FAILURE
(
°©us
)) {

802 
ªsu…
.
	`ªmoveAŒEÀmíts
();

806 
dñëe
 
m©chKey
;

808  
ªsu…
;

809 
	}
}

811 
URegi°ryKey


812 
	gICUSîvi˚
::
	$ªgi°îIn°™˚
(
UObje˘
* 
objToAd›t
, c⁄° 
UnicodeSåög
& 
id
, 
UEº‹Code
& 
°©us
)

814  
	`ªgi°îIn°™˚
(
objToAd›t
, 
id
, 
TRUE
, 
°©us
);

815 
	}
}

817 
URegi°ryKey


818 
	gICUSîvi˚
::
	$ªgi°îIn°™˚
(
UObje˘
* 
objToAd›t
, c⁄° 
UnicodeSåög
& 
id
, 
UBoﬁ
 
visibÀ
, 
UEº‹Code
& 
°©us
)

820 
ICUSîvi˚Key
* 
key
 = 
	`¸óãKey
(&
id
, 
°©us
);

821 i‡(
key
 !
NULL
) {

822 
UnicodeSåög
 
ˇn⁄iˇlID
;

823 
key
->
	`ˇn⁄iˇlID
(
ˇn⁄iˇlID
);

824 
dñëe
 
key
;

826 
ICUSîvi˚Fa˘‹y
* 
f
 = 
	`¸óãSim∂eFa˘‹y
(
objToAd›t
, 
ˇn⁄iˇlID
, 
visibÀ
, 
°©us
);

827 i‡(
f
 !
NULL
) {

828  
	`ªgi°îFa˘‹y
(
f
, 
°©us
);

831 
dñëe
 
objToAd›t
;

832  
NULL
;

833 
	}
}

835 
ICUSîvi˚Fa˘‹y
*

836 
	gICUSîvi˚
::
	$¸óãSim∂eFa˘‹y
(
UObje˘
* 
objToAd›t
, c⁄° 
UnicodeSåög
& 
id
, 
UBoﬁ
 
visibÀ
, 
UEº‹Code
& 
°©us
)

838 i‡(
	`U_SUCCESS
(
°©us
)) {

839 i‡((
objToAd›t
 !
NULL
Ë&& (!
id
.
	`isBogus
())) {

840  
√w
 
	`Sim∂eFa˘‹y
(
objToAd›t
, 
id
, 
visibÀ
);

842 
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

844  
NULL
;

845 
	}
}

847 
URegi°ryKey


848 
	gICUSîvi˚
::
	$ªgi°îFa˘‹y
(
ICUSîvi˚Fa˘‹y
* 
Á˘‹yToAd›t
, 
UEº‹Code
& 
°©us
)

850 i‡(
	`U_SUCCESS
(
°©us
Ë&& 
Á˘‹yToAd›t
 !
NULL
) {

851 
Muãx
 
	`muãx
(&
lock
);

853 i‡(
Á˘‹õs
 =
NULL
) {

854 
Á˘‹õs
 = 
√w
 
	`UVe˘‹
(
dñëeUObje˘
, 
NULL
, 
°©us
);

855 i‡(
	`U_FAILURE
(
°©us
)) {

856 
dñëe
 
Á˘‹õs
;

857  
NULL
;

860 
Á˘‹õs
->
	`ö£πEÀmítAt
(
Á˘‹yToAd›t
, 0, 
°©us
);

861 i‡(
	`U_SUCCESS
(
°©us
)) {

862 
	`˛órCaches
();

864 
dñëe
 
Á˘‹yToAd›t
;

865 
Á˘‹yToAd›t
 = 
NULL
;

869 i‡(
Á˘‹yToAd›t
 !
NULL
) {

870 
	`nŸifyCh™ged
();

873  (
URegi°ryKey
)
Á˘‹yToAd›t
;

874 
	}
}

876 
UBoﬁ


877 
	gICUSîvi˚
::
	$uƒegi°î
(
URegi°ryKey
 
rkey
, 
UEº‹Code
& 
°©us
)

879 
ICUSîvi˚Fa˘‹y
 *
Á˘‹y
 = (ICUSîvi˚Fa˘‹y*)
rkey
;

880 
UBoﬁ
 
ªsu…
 = 
FALSE
;

881 i‡(
Á˘‹y
 !
NULL
 && 
Á˘‹õs
 != NULL) {

882 
Muãx
 
	`muãx
(&
lock
);

884 i‡(
Á˘‹õs
->
	`ªmoveEÀmít
(
Á˘‹y
)) {

885 
	`˛órCaches
();

886 
ªsu…
 = 
TRUE
;

888 
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

889 
dñëe
 
Á˘‹y
;

892 i‡(
ªsu…
) {

893 
	`nŸifyCh™ged
();

895  
ªsu…
;

896 
	}
}

899 
	gICUSîvi˚
::
	$ª£t
()

902 
Muãx
 
	`muãx
(&
lock
);

903 
	`ªInôülizeFa˘‹õs
();

904 
	`˛órCaches
();

906 
	`nŸifyCh™ged
();

907 
	}
}

910 
	gICUSîvi˚
::
	$ªInôülizeFa˘‹õs
()

912 i‡(
Á˘‹õs
 !
NULL
) {

913 
Á˘‹õs
->
	`ªmoveAŒEÀmíts
();

915 
	}
}

917 
UBoﬁ


918 
	gICUSîvi˚
::
	$isDeÁu…
() const

920  
	`cou¡Fa˘‹õs
() == 0;

921 
	}
}

923 
ICUSîvi˚Key
*

924 
	gICUSîvi˚
::
	$¸óãKey
(c⁄° 
UnicodeSåög
* 
id
, 
UEº‹Code
& 
°©us
) const

926  (
	`U_FAILURE
(
°©us
Ë|| 
id
 =
NULL
Ë? NULL : 
√w
 
	`ICUSîvi˚Key
(*id);

927 
	}
}

930 
	gICUSîvi˚
::
	$˛órCaches
()

933 ++
time°amp
;

934 
dñëe
 
dnCache
;

935 
dnCache
 = 
NULL
;

936 
dñëe
 
idCache
;

937 
idCache
 = 
NULL
;

938 
dñëe
 
£rvi˚Cache
; sîvi˚Cachê
NULL
;

939 
	}
}

942 
	gICUSîvi˚
::
	$˛órSîvi˚Cache
()

945 
dñëe
 
£rvi˚Cache
; sîvi˚Cachê
NULL
;

946 
	}
}

948 
UBoﬁ


949 
	gICUSîvi˚
::
	$ac˚±sLi°íî
(c⁄° 
EvítLi°íî
& 
l
) const

951  
dy«mic_ˇ°
<c⁄° 
Sîvi˚Li°íî
*>(&
l
Ë!
NULL
;

952 
	}
}

955 
	gICUSîvi˚
::
	$nŸifyLi°íî
(
EvítLi°íî
& 
l
) const

957 ((
Sîvi˚Li°íî
&)
l
).
	`£rvi˚Ch™ged
(*
this
);

958 
	}
}

960 
	gUnicodeSåög
&

961 
	gICUSîvi˚
::
	$gëName
(
UnicodeSåög
& 
ªsu…
) const

963  
ªsu…
.
	`≠≥nd
(
«me
);

964 
	}
}

966 
öt32_t


967 
	gICUSîvi˚
::
	$cou¡Fa˘‹õs
() const

969  
Á˘‹õs
 =
NULL
 ? 0 : fa˘‹õs->
	`size
();

970 
	}
}

972 
öt32_t


973 
	gICUSîvi˚
::
	$gëTime°amp
() const

975  
time°amp
;

976 
	}
}

978 
	gU_NAMESPACE_END


	@serv.h

8 #i‚de‡
ICUSERV_H


9 
	#ICUSERV_H


	)

11 
	~"unicode/uty≥s.h
"

13 #i‡
UCONFIG_NO_SERVICE


15 
U_NAMESPACE_BEGIN


21 
˛ass
 
	gICUSîvi˚
;

23 
	gU_NAMESPACE_END


27 
	~"unicode/uni°r.h
"

28 
	~"unicode/locid.h
"

29 
	~"unicode/umisc.h
"

31 
	~"hash.h
"

32 
	~"uve˘‹.h
"

33 
	~"£rvnŸf.h
"

35 
˛ass
 
	gICUSîvi˚Te°
;

37 
U_NAMESPACE_BEGIN


39 
˛ass
 
	gICUSîvi˚Key
;

40 
˛ass
 
	gICUSîvi˚Fa˘‹y
;

41 
˛ass
 
	gSim∂eFa˘‹y
;

42 
˛ass
 
	gSîvi˚Li°íî
;

43 
˛ass
 
	gICUSîvi˚
;

45 
˛ass
 
	gDNCache
;

70 ˛as†
	cU_COMMON_API
 
	mICUSîvi˚Key
 : 
public
 
UObje˘
 {

71 
¥iv©e
:

72 c⁄° 
UnicodeSåög
 
_id
;

74 
	m¥Ÿe˘ed
:

75 c⁄° 
UCh¨
 
PREFIX_DELIMITER
;

77 
	mpublic
:

84 
ICUSîvi˚Key
(c⁄° 
UnicodeSåög
& 
id
);

89 
	mvútuÆ
 ~
ICUSîvi˚Key
();

96 
vútuÆ
 c⁄° 
	mUnicodeSåög
& 
	$gëID
() const;

105 
vútuÆ
 
UnicodeSåög
& 
	$ˇn⁄iˇlID
(
UnicodeSåög
& 
ªsu…
) const;

114 
vútuÆ
 
UnicodeSåög
& 
	$cuºítID
(
UnicodeSåög
& 
ªsu…
) const;

130 
vútuÆ
 
UnicodeSåög
& 
	$cuºítDes¸ùt‹
(
UnicodeSåög
& 
ªsu…
) const;

141 
vútuÆ
 
UBoﬁ
 
	`ÁŒback
();

150 
vútuÆ
 
UBoﬁ
 
	$isFÆlbackOf
(c⁄° 
UnicodeSåög
& 
id
) const;

159 
vútuÆ
 
UnicodeSåög
& 
	$¥efix
(
UnicodeSåög
& 
ªsu…
) const;

170 
UnicodeSåög
& 
	`∑r£Pªfix
(UnicodeSåög& 
ªsu…
);

181 
UnicodeSåög
& 
	`∑r£Suffix
(UnicodeSåög& 
ªsu…
);

183 
public
:

187 
UCœssID
 
U_EXPORT2
 
	`gëSèticCœssID
();

192 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const;

194 #ifde‡
SERVICE_DEBUG


195 
public
:

196 
vútuÆ
 
UnicodeSåög
& 
	$debug
(
UnicodeSåög
& 
ªsu…
) const;

197 
vútuÆ
 
UnicodeSåög
& 
	$debugCœss
(
UnicodeSåög
& 
ªsu…
) const;

212 ˛as†
	cU_COMMON_API
 
ICUSîvi˚Fa˘‹y
 : 
public
 
UObje˘
 {

213 
public
:

232 
vútuÆ
 
UObje˘
* 
	$¸óã
(c⁄° 
ICUSîvi˚Key
& 
key
, c⁄° 
ICUSîvi˚
* 
£rvi˚
, 
UEº‹Code
& 
°©us
) const = 0;

250 
vútuÆ
 
	$upd©eVisibÀIDs
(
HashèbÀ
& 
ªsu…
, 
UEº‹Code
& 
°©us
) const = 0;

265 
vútuÆ
 
UnicodeSåög
& 
	$gëDi•œyName
(c⁄° 
UnicodeSåög
& 
id
, c⁄° 
LoˇÀ
& 
loˇÀ
, UnicodeSåög& 
ªsu…
) const = 0;

282 ˛as†
	cU_COMMON_API
 
Sim∂eFa˘‹y
 : 
public
 
ICUSîvi˚Fa˘‹y
 {

283 
¥Ÿe˘ed
:

284 
UObje˘
* 
_ö°™˚
;

285 c⁄° 
UnicodeSåög
 
_id
;

286 c⁄° 
UBoﬁ
 
_visibÀ
;

288 
public
:

299 
	`Sim∂eFa˘‹y
(
UObje˘
* 
ö°™˚ToAd›t
, c⁄° 
UnicodeSåög
& 
id
, 
UBoﬁ
 
visibÀ
 = 
TRUE
);

304 
vútuÆ
 ~
	`Sim∂eFa˘‹y
();

315 
vútuÆ
 
UObje˘
* 
	$¸óã
(c⁄° 
ICUSîvi˚Key
& 
key
, c⁄° 
ICUSîvi˚
* 
£rvi˚
, 
UEº‹Code
& 
°©us
) const;

324 
vútuÆ
 
	$upd©eVisibÀIDs
(
HashèbÀ
& 
ªsu…
, 
UEº‹Code
& 
°©us
) const;

336 
vútuÆ
 
UnicodeSåög
& 
	$gëDi•œyName
(c⁄° 
UnicodeSåög
& 
id
, c⁄° 
LoˇÀ
& 
loˇÀ
, UnicodeSåög& 
ªsu…
) const;

338 
public
:

342 
UCœssID
 
U_EXPORT2
 
	`gëSèticCœssID
();

347 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const;

349 #ifde‡
SERVICE_DEBUG


350 
public
:

351 
vútuÆ
 
UnicodeSåög
& 
	$debug
(
UnicodeSåög
& 
toAµídTo
) const;

352 
vútuÆ
 
UnicodeSåög
& 
	$debugCœss
(
UnicodeSåög
& 
toAµídTo
) const;

368 ˛as†
	cU_COMMON_API
 
Sîvi˚Li°íî
 : 
public
 
EvítLi°íî
 {

369 
public
:

377 
vútuÆ
 
	$£rvi˚Ch™ged
(c⁄° 
ICUSîvi˚
& 
£rvi˚
) const = 0;

379 
public
:

383 
UCœssID
 
U_EXPORT2
 
	`gëSèticCœssID
();

388 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const;

400 ˛as†
	cU_COMMON_API
 
SåögPaú
 : 
public
 
UMem‹y
 {

401 
public
:

405 c⁄° 
UnicodeSåög
 
di•œyName
;

410 c⁄° 
UnicodeSåög
 
id
;

420 
SåögPaú
* 
	`¸óã
(c⁄° 
UnicodeSåög
& 
di•œyName
,

421 c⁄° 
UnicodeSåög
& 
id
,

422 
UEº‹Code
& 
°©us
);

428 
UBoﬁ
 
	$isBogus
() const;

430 
¥iv©e
:

431 
	`SåögPaú
(c⁄° 
UnicodeSåög
& 
di•œyName
, c⁄° UnicodeSåög& 
id
);

521 ˛as†
	cU_COMMON_API
 
ICUSîvi˚
 : 
public
 
ICUNŸifõr
 {

522 
¥Ÿe˘ed
:

526 c⁄° 
UnicodeSåög
 
«me
;

528 
¥iv©e
:

533 
UMTX
 
lock
;

538 
uöt32_t
 
time°amp
;

543 
UVe˘‹
* 
Á˘‹õs
;

548 
HashèbÀ
* 
£rvi˚Cache
;

553 
HashèbÀ
* 
idCache
;

558 
DNCache
* 
dnCache
;

563 
public
:

567 
	`ICUSîvi˚
();

574 
	`ICUSîvi˚
(c⁄° 
UnicodeSåög
& 
«me
);

579 
vútuÆ
 ~
	`ICUSîvi˚
();

588 
UnicodeSåög
& 
	$gëName
(
UnicodeSåög
& 
ªsu…
) const;

598 
UObje˘
* 
	$gë
(c⁄° 
UnicodeSåög
& 
des¸ùt‹
, 
UEº‹Code
& 
°©us
) const;

609 
UObje˘
* 
	$gë
(c⁄° 
UnicodeSåög
& 
des¸ùt‹
, UnicodeSåög* 
a˘uÆRëu∫
, 
UEº‹Code
& 
°©us
) const;

618 
UObje˘
* 
	$gëKey
(
ICUSîvi˚Key
& 
key
, 
UEº‹Code
& 
°©us
) const;

642 
vútuÆ
 
UObje˘
* 
	$gëKey
(
ICUSîvi˚Key
& 
key
, 
UnicodeSåög
* 
a˘uÆRëu∫
, 
UEº‹Code
& 
°©us
) const;

656 
UObje˘
* 
	$gëKey
(
ICUSîvi˚Key
& 
key
, 
UnicodeSåög
* 
a˘uÆRëu∫
, c⁄° 
ICUSîvi˚Fa˘‹y
* 
Á˘‹y
, 
UEº‹Code
& 
°©us
) const;

666 
UVe˘‹
& 
	$gëVisibÀIDs
(
UVe˘‹
& 
ªsu…
, 
UEº‹Code
& 
°©us
) const;

688 
UVe˘‹
& 
	$gëVisibÀIDs
(
UVe˘‹
& 
ªsu…
, c⁄° 
UnicodeSåög
* 
m©chID
, 
UEº‹Code
& 
°©us
) const;

698 
UnicodeSåög
& 
	$gëDi•œyName
(c⁄° 
UnicodeSåög
& 
id
, UnicodeSåög& 
ªsu…
) const;

710 
UnicodeSåög
& 
	$gëDi•œyName
(c⁄° 
UnicodeSåög
& 
id
, UnicodeSåög& 
ªsu…
, c⁄° 
LoˇÀ
& 
loˇÀ
) const;

721 
UVe˘‹
& 
	$gëDi•œyNames
(
UVe˘‹
& 
ªsu…
, 
UEº‹Code
& 
°©us
) const;

732 
UVe˘‹
& 
	$gëDi•œyNames
(
UVe˘‹
& 
ªsu…
, c⁄° 
LoˇÀ
& 
loˇÀ
, 
UEº‹Code
& 
°©us
) const;

757 
UVe˘‹
& 
	$gëDi•œyNames
(
UVe˘‹
& 
ªsu…
,

758 c⁄° 
LoˇÀ
& 
loˇÀ
,

759 c⁄° 
UnicodeSåög
* 
m©chID
,

760 
UEº‹Code
& 
°©us
) const;

772 
URegi°ryKey
 
	`ªgi°îIn°™˚
(
UObje˘
* 
objToAd›t
, c⁄° 
UnicodeSåög
& 
id
, 
UEº‹Code
& 
°©us
);

792 
vútuÆ
 
URegi°ryKey
 
	`ªgi°îIn°™˚
(
UObje˘
* 
objToAd›t
, c⁄° 
UnicodeSåög
& 
id
, 
UBoﬁ
 
visibÀ
, 
UEº‹Code
& 
°©us
);

810 
vútuÆ
 
URegi°ryKey
 
	`ªgi°îFa˘‹y
(
ICUSîvi˚Fa˘‹y
* 
Á˘‹yToAd›t
, 
UEº‹Code
& 
°©us
);

825 
vútuÆ
 
UBoﬁ
 
	`uƒegi°î
(
URegi°ryKey
 
rkey
, 
UEº‹Code
& 
°©us
);

833 
vútuÆ
 
	`ª£t
();

841 
vútuÆ
 
UBoﬁ
 
	$isDeÁu…
() const;

854 
vútuÆ
 
ICUSîvi˚Key
* 
	$¸óãKey
(c⁄° 
UnicodeSåög
* 
id
, 
UEº‹Code
& 
°©us
) const;

864 
vútuÆ
 
UObje˘
* 
	$˛⁄eIn°™˚
(
UObje˘
* 
ö°™˚
) const = 0;

871 
¥Ÿe˘ed
:

884 
vútuÆ
 
ICUSîvi˚Fa˘‹y
* 
	`¸óãSim∂eFa˘‹y
(
UObje˘
* 
ö°™˚ToAd›t
, c⁄° 
UnicodeSåög
& 
id
, 
UBoﬁ
 
visibÀ
, 
UEº‹Code
& 
°©us
);

898 
vútuÆ
 
	`ªInôülizeFa˘‹õs
();

911 
vútuÆ
 
UObje˘
* 
	$h™dÀDeÁu…
(c⁄° 
ICUSîvi˚Key
& 
key
, 
UnicodeSåög
* 
a˘uÆRëu∫
, 
UEº‹Code
& 
°©us
) const;

921 
vútuÆ
 
	`˛órCaches
();

933 
vútuÆ
 
UBoﬁ
 
	$ac˚±sLi°íî
(c⁄° 
EvítLi°íî
& 
l
) const;

944 
vútuÆ
 
	$nŸifyLi°íî
(
EvítLi°íî
& 
l
) const;

958 
	`˛órSîvi˚Cache
();

968 c⁄° 
HashèbÀ
* 
	$gëVisibÀIDM≠
(
UEº‹Code
& 
°©us
) const;

975 
öt32_t
 
	$gëTime°amp
() const;

982 
öt32_t
 
	$cou¡Fa˘‹õs
() const;

984 
¥iv©e
:

986 
‰õnd
 
˛ass
 ::
ICUSîvi˚Te°
;

989 
U_NAMESPACE_END


	@servlk.cpp

9 
	~"unicode/uty≥s.h
"

11 #i‡!
UCONFIG_NO_SERVICE


13 
	~"unicode/ªsbund.h
"

14 
	~"uªsimp.h
"

15 
	~"cmem‹y.h
"

16 
	~"£rvloc.h
"

17 
	~"u°rfmt.h
"

18 
	~"uhash.h
"

19 
	~"ch¨°r.h
"

20 
	~"u˛n_cmn.h
"

21 
	~"uas£π.h
"

23 
	#UNDERSCORE_CHAR
 ((
UCh¨
)0x005f)

	)

24 
	#AT_SIGN_CHAR
 ((
UCh¨
)64)

	)

25 
	#PERIOD_CHAR
 ((
UCh¨
)46)

	)

27 
U_NAMESPACE_BEGIN


29 
LoˇÀKey
*

30 
	gLoˇÀKey
::
	$¸óãWôhC™⁄iˇlFÆlback
(c⁄° 
UnicodeSåög
* 
¥im¨yID
,

31 c⁄° 
UnicodeSåög
* 
ˇn⁄iˇlFÆlbackID
,

32 
UEº‹Code
& 
°©us
)

34  
LoˇÀKey
::
	`¸óãWôhC™⁄iˇlFÆlback
(
¥im¨yID
, 
ˇn⁄iˇlFÆlbackID
, 
KIND_ANY
, 
°©us
);

35 
	}
}

37 
LoˇÀKey
*

38 
	gLoˇÀKey
::
	$¸óãWôhC™⁄iˇlFÆlback
(c⁄° 
UnicodeSåög
* 
¥im¨yID
,

39 c⁄° 
UnicodeSåög
* 
ˇn⁄iˇlFÆlbackID
,

40 
öt32_t
 
köd
,

41 
UEº‹Code
& 
°©us
)

43 i‡(
¥im¨yID
 =
NULL
 || 
	`U_FAILURE
(
°©us
)) {

44  
NULL
;

46 
UnicodeSåög
 
ˇn⁄iˇlPrim¨yID
;

47 
LoˇÀUtûôy
::
	`ˇn⁄iˇlLoˇÀSåög
(
¥im¨yID
, 
ˇn⁄iˇlPrim¨yID
);

48  
√w
 
	`LoˇÀKey
(*
¥im¨yID
, 
ˇn⁄iˇlPrim¨yID
, 
ˇn⁄iˇlFÆlbackID
, 
köd
);

49 
	}
}

51 
	gLoˇÀKey
::
	$LoˇÀKey
(c⁄° 
UnicodeSåög
& 
¥im¨yID
,

52 c⁄° 
UnicodeSåög
& 
ˇn⁄iˇlPrim¨yID
,

53 c⁄° 
UnicodeSåög
* 
ˇn⁄iˇlFÆlbackID
,

54 
öt32_t
 
köd
)

55 : 
	`ICUSîvi˚Key
(
¥im¨yID
)

56 , 
	`_köd
(
köd
)

57 , 
	`_¥im¨yID
(
ˇn⁄iˇlPrim¨yID
)

58 , 
	`_ÁŒbackID
()

59 , 
	$_cuºítID
()

61 
_ÁŒbackID
.
	`£tToBogus
();

62 i‡(
_¥im¨yID
.
	`Àngth
() != 0) {

63 i‡(
ˇn⁄iˇlFÆlbackID
 !
NULL
 && 
_¥im¨yID
 != *canonicalFallbackID) {

64 
_ÁŒbackID
 = *
ˇn⁄iˇlFÆlbackID
;

68 
_cuºítID
 = 
_¥im¨yID
;

69 
	}
}

71 
	gLoˇÀKey
::~
	$LoˇÀKey
(Ë{
	}
}

73 
UnicodeSåög
&

74 
LoˇÀKey
::
	$¥efix
(
UnicodeSåög
& 
ªsu…
) const {

75 i‡(
_köd
 !
KIND_ANY
) {

76 
UCh¨
 
buf„r
[64];

77 
	`u¥v_ôou
(
buf„r
, 64, 
_köd
, 10, 0);

78 
UnicodeSåög
 
	`ãmp
(
buf„r
);

79 
ªsu…
.
	`≠≥nd
(
ãmp
);

81  
ªsu…
;

82 
	}
}

84 
öt32_t


85 
	gLoˇÀKey
::
	$köd
() const {

86  
_köd
;

87 
	}
}

89 
	gUnicodeSåög
&

90 
	gLoˇÀKey
::
	$ˇn⁄iˇlID
(
UnicodeSåög
& 
ªsu…
) const {

91  
ªsu…
.
	`≠≥nd
(
_¥im¨yID
);

92 
	}
}

94 
	gUnicodeSåög
&

95 
	gLoˇÀKey
::
	$cuºítID
(
UnicodeSåög
& 
ªsu…
) const {

96 i‡(!
_cuºítID
.
	`isBogus
()) {

97 
ªsu…
.
	`≠≥nd
(
_cuºítID
);

99  
ªsu…
;

100 
	}
}

102 
	gUnicodeSåög
&

103 
	gLoˇÀKey
::
	$cuºítDes¸ùt‹
(
UnicodeSåög
& 
ªsu…
) const {

104 i‡(!
_cuºítID
.
	`isBogus
()) {

105 
	`¥efix
(
ªsu…
).
	`≠≥nd
(
PREFIX_DELIMITER
).≠≥nd(
_cuºítID
);

107 
ªsu…
.
	`£tToBogus
();

109  
ªsu…
;

110 
	}
}

112 
	gLoˇÀ
&

113 
	gLoˇÀKey
::
	$ˇn⁄iˇlLoˇÀ
(
LoˇÀ
& 
ªsu…
) const {

114  
LoˇÀUtûôy
::
	`öôLoˇÀFromName
(
_¥im¨yID
, 
ªsu…
);

115 
	}
}

117 
	gLoˇÀ
&

118 
	gLoˇÀKey
::
	$cuºítLoˇÀ
(
LoˇÀ
& 
ªsu…
) const {

119  
LoˇÀUtûôy
::
	`öôLoˇÀFromName
(
_cuºítID
, 
ªsu…
);

120 
	}
}

122 
UBoﬁ


123 
	gLoˇÀKey
::
	$ÁŒback
() {

124 i‡(!
_cuºítID
.
	`isBogus
()) {

125 
x
 = 
_cuºítID
.
	`œ°IndexOf
(
UNDERSCORE_CHAR
);

126 i‡(
x
 != -1) {

127 
_cuºítID
.
	`ªmove
(
x
);

128  
TRUE
;

131 i‡(!
_ÁŒbackID
.
	`isBogus
()) {

132 
_cuºítID
 = 
_ÁŒbackID
;

133 
_ÁŒbackID
.
	`£tToBogus
();

134  
TRUE
;

137 i‡(
_cuºítID
.
	`Àngth
() > 0) {

138 
_cuºítID
.
	`ªmove
(0);

139  
TRUE
;

142 
_cuºítID
.
	`£tToBogus
();

145  
FALSE
;

146 
	}
}

148 
UBoﬁ


149 
	gLoˇÀKey
::
	$isFÆlbackOf
(c⁄° 
UnicodeSåög
& 
id
) const {

150 
UnicodeSåög
 
	`ãmp
(
id
);

151 
	`∑r£Suffix
(
ãmp
);

152  
ãmp
.
	`ödexOf
(
_¥im¨yID
) == 0 &&

153 (
ãmp
.
	`Àngth
(Ë=
_¥im¨yID
.length() ||

154 
ãmp
.
	`ch¨At
(
_¥im¨yID
.
	`Àngth
()Ë=
UNDERSCORE_CHAR
);

155 
	}
}

157 #ifde‡
SERVICE_DEBUG


158 
	gUnicodeSåög
&

159 
	gLoˇÀKey
::
	$debug
(
UnicodeSåög
& 
ªsu…
) const

161 
ICUSîvi˚Key
::
	`debug
(
ªsu…
);

162 
ªsu…
.
	`≠≥nd
(" kind: ");

163 
ªsu…
.
	`≠≥nd
(
_köd
);

164 
ªsu…
.
	`≠≥nd
("ÖrimaryID: ");

165 
ªsu…
.
	`≠≥nd
(
_¥im¨yID
);

166 
ªsu…
.
	`≠≥nd
(" fallbackID: ");

167 
ªsu…
.
	`≠≥nd
(
_ÁŒbackID
);

168 
ªsu…
.
	`≠≥nd
(" currentID: ");

169 
ªsu…
.
	`≠≥nd
(
_cuºítID
);

170  
ªsu…
;

171 
	}
}

173 
	gUnicodeSåög
&

174 
	gLoˇÀKey
::
	$debugCœss
(
UnicodeSåög
& 
ªsu…
) const

176  
ªsu…
.
	`≠≥nd
("LocaleKey ");

177 
	}
}

180 
	$UOBJECT_DEFINE_RTTI_IMPLEMENTATION
(
LoˇÀKey
)

182 
U_NAMESPACE_END


	@servlkf.cpp

9 
	~"unicode/uty≥s.h
"

11 #i‡!
UCONFIG_NO_SERVICE


13 
	~"unicode/ªsbund.h
"

14 
	~"uªsimp.h
"

15 
	~"cmem‹y.h
"

16 
	~"£rvloc.h
"

17 
	~"u°rfmt.h
"

18 
	~"uhash.h
"

19 
	~"ch¨°r.h
"

20 
	~"u˛n_cmn.h
"

21 
	~"uas£π.h
"

23 
	#UNDERSCORE_CHAR
 ((
UCh¨
)0x005f)

	)

24 
	#AT_SIGN_CHAR
 ((
UCh¨
)64)

	)

25 
	#PERIOD_CHAR
 ((
UCh¨
)46)

	)

28 
U_NAMESPACE_BEGIN


30 
	gLoˇÀKeyFa˘‹y
::
	$LoˇÀKeyFa˘‹y
(
öt32_t
 
covîage
)

31 : 
	`_«me
()

32 , 
	$_covîage
(
covîage
)

34 
	}
}

36 
	gLoˇÀKeyFa˘‹y
::
	$LoˇÀKeyFa˘‹y
(
öt32_t
 
covîage
, c⁄° 
UnicodeSåög
& 
«me
)

37 : 
	`_«me
(
«me
)

38 , 
	$_covîage
(
covîage
)

40 
	}
}

42 
	gLoˇÀKeyFa˘‹y
::~
	$LoˇÀKeyFa˘‹y
() {

43 
	}
}

45 
UObje˘
*

46 
LoˇÀKeyFa˘‹y
::
	$¸óã
(c⁄° 
ICUSîvi˚Key
& 
key
, c⁄° 
ICUSîvi˚
* 
£rvi˚
, 
UEº‹Code
& 
°©us
) const {

47 i‡(
	`h™dÀsKey
(
key
, 
°©us
)) {

48 c⁄° 
LoˇÀKey
& 
lkey
 = (c⁄° LoˇÀKey&)
key
;

49 
öt32_t
 
köd
 = 
lkey
.
	`köd
();

50 
LoˇÀ
 
loc
;

51 
lkey
.
	`cuºítLoˇÀ
(
loc
);

53  
	`h™dÀCª©e
(
loc
, 
köd
, 
£rvi˚
, 
°©us
);

55  
NULL
;

56 
	}
}

58 
UBoﬁ


59 
	gLoˇÀKeyFa˘‹y
::
	$h™dÀsKey
(c⁄° 
ICUSîvi˚Key
& 
key
, 
UEº‹Code
& 
°©us
) const {

60 c⁄° 
HashèbÀ
* 
suµ‹ãd
 = 
	`gëSuµ‹ãdIDs
(
°©us
);

61 i‡(
suµ‹ãd
) {

62 
UnicodeSåög
 
id
;

63 
key
.
	`cuºítID
(
id
);

64  
suµ‹ãd
->
	`gë
(
id
Ë!
NULL
;

66  
FALSE
;

67 
	}
}

70 
	gLoˇÀKeyFa˘‹y
::
	$upd©eVisibÀIDs
(
HashèbÀ
& 
ªsu…
, 
UEº‹Code
& 
°©us
) const {

71 c⁄° 
HashèbÀ
* 
suµ‹ãd
 = 
	`gëSuµ‹ãdIDs
(
°©us
);

72 i‡(
suµ‹ãd
) {

73 
UBoﬁ
 
visibÀ
 = (
_covîage
 & 0x1) == 0;

75 c⁄° 
UHashEÀmít
* 
ñem
 = 
NULL
;

76 
öt32_t
 
pos
 = 0;

77 (
ñem
 = 
suµ‹ãd
->
	`√xtEÀmít
(
pos
)Ë!
NULL
) {

78 c⁄° 
UnicodeSåög
& 
id
 = *((c⁄° UnicodeSåög*)
ñem
->
key
.
poöãr
);

79 i‡(!
visibÀ
) {

80 
ªsu…
.
	`ªmove
(
id
);

82 
ªsu…
.
	`put
(
id
, (*)
this
, 
°©us
);

83 i‡(
	`U_FAILURE
(
°©us
)) {

89 
	}
}

91 
	gUnicodeSåög
&

92 
	gLoˇÀKeyFa˘‹y
::
	$gëDi•œyName
(c⁄° 
UnicodeSåög
& 
id
, c⁄° 
LoˇÀ
& 
loˇÀ
, UnicodeSåög& 
ªsu…
) const {

93 i‡((
_covîage
 & 0x1) == 0) {

97 
LoˇÀ
 
loc
;

98 
LoˇÀUtûôy
::
	`öôLoˇÀFromName
(
id
, 
loc
);

99  
loc
.
	`gëDi•œyName
(
loˇÀ
, 
ªsu…
);

102 
ªsu…
.
	`£tToBogus
();

103  
ªsu…
;

104 
	}
}

106 
UObje˘
*

107 
	gLoˇÀKeyFa˘‹y
::
	$h™dÀCª©e
(c⁄° 
LoˇÀ
& ,

108 
öt32_t
 ,

109 c⁄° 
ICUSîvi˚
* ,

110 
UEº‹Code
& ) const {

111  
NULL
;

112 
	}
}

120 c⁄° 
HashèbÀ
*

121 
	gLoˇÀKeyFa˘‹y
::
	$gëSuµ‹ãdIDs
(
UEº‹Code
& ) const {

122  
NULL
;

123 
	}
}

125 #ifde‡
SERVICE_DEBUG


126 
	gUnicodeSåög
&

127 
	gLoˇÀKeyFa˘‹y
::
	$debug
(
UnicodeSåög
& 
ªsu…
) const

129 
	`debugCœss
(
ªsu…
);

130 
ªsu…
.
	`≠≥nd
(",Çame: ");

131 
ªsu…
.
	`≠≥nd
(
_«me
);

132 
ªsu…
.
	`≠≥nd
(", coverage: ");

133 
ªsu…
.
	`≠≥nd
(
_covîage
);

134  
ªsu…
;

135 
	}
}

137 
	gUnicodeSåög
&

138 
	gLoˇÀKeyFa˘‹y
::
	$debugCœss
(
UnicodeSåög
& 
ªsu…
) const

140  
ªsu…
.
	`≠≥nd
("LocaleKeyFactory");

141 
	}
}

144 
	$UOBJECT_DEFINE_RTTI_IMPLEMENTATION
(
LoˇÀKeyFa˘‹y
)

146 
U_NAMESPACE_END


	@servloc.h

9 #i‚de‡
ICULSERV_H


10 
	#ICULSERV_H


	)

12 
	~"unicode/uty≥s.h
"

14 #i‡
UCONFIG_NO_SERVICE


16 
U_NAMESPACE_BEGIN


22 
˛ass
 
	gICULoˇÀSîvi˚
;

24 
	gU_NAMESPACE_END


28 
	~"unicode/uni°r.h
"

29 
	~"unicode/locid.h
"

30 
	~"unicode/°ªnum.h
"

32 
	~"hash.h
"

33 
	~"uve˘‹.h
"

35 
	~"£rv.h
"

36 
	~"locutû.h
"

38 
U_NAMESPACE_BEGIN


40 
˛ass
 
	gICULoˇÀSîvi˚
;

42 
˛ass
 
	gLoˇÀKey
;

43 
˛ass
 
	gLoˇÀKeyFa˘‹y
;

44 
˛ass
 
	gSim∂eLoˇÀKeyFa˘‹y
;

45 
˛ass
 
	gSîvi˚Li°íî
;

64 ˛as†
	cU_COMMON_API
 
	mLoˇÀKey
 : 
public
 
ICUSîvi˚Key
 {

65 
¥iv©e
:

66 
öt32_t
 
_köd
;

67 
UnicodeSåög
 
	m_¥im¨yID
;

68 
UnicodeSåög
 
	m_ÁŒbackID
;

69 
UnicodeSåög
 
	m_cuºítID
;

71 
	mpublic
:

73 
KIND_ANY
 = -1

79 
LoˇÀKey
* 
¸óãWôhC™⁄iˇlFÆlback
(c⁄° 
UnicodeSåög
* 
¥im¨yID
,

80 c⁄° 
UnicodeSåög
* 
ˇn⁄iˇlFÆlbackID
,

81 
UEº‹Code
& 
°©us
);

86 
LoˇÀKey
* 
¸óãWôhC™⁄iˇlFÆlback
(c⁄° 
UnicodeSåög
* 
¥im¨yID
,

87 c⁄° 
UnicodeSåög
* 
ˇn⁄iˇlFÆlbackID
,

88 
öt32_t
 
köd
,

89 
UEº‹Code
& 
°©us
);

91 
	g¥Ÿe˘ed
:

98 
LoˇÀKey
(c⁄° 
UnicodeSåög
& 
¥im¨yID
,

99 c⁄° 
UnicodeSåög
& 
ˇn⁄iˇlPrim¨yID
,

100 c⁄° 
UnicodeSåög
* 
ˇn⁄iˇlFÆlbackID
,

101 
öt32_t
 
köd
);

103 
	gpublic
:

107 
vútuÆ
 
UnicodeSåög
& 
	$¥efix
(
UnicodeSåög
& 
ªsu…
) const;

112 
vútuÆ
 
öt32_t
 
	$köd
() const;

117 
vútuÆ
 
UnicodeSåög
& 
	$ˇn⁄iˇlID
(
UnicodeSåög
& 
ªsu…
) const;

122 
vútuÆ
 
UnicodeSåög
& 
	$cuºítID
(
UnicodeSåög
& 
ªsu…
) const;

127 
vútuÆ
 
UnicodeSåög
& 
	$cuºítDes¸ùt‹
(
UnicodeSåög
& 
ªsu…
) const;

132 
vútuÆ
 
LoˇÀ
& 
	$ˇn⁄iˇlLoˇÀ
(
LoˇÀ
& 
ªsu…
) const;

137 
vútuÆ
 
LoˇÀ
& 
	$cuºítLoˇÀ
(
LoˇÀ
& 
ªsu…
) const;

148 
vútuÆ
 
UBoﬁ
 
	`ÁŒback
();

154 
vútuÆ
 
UBoﬁ
 
	$isFÆlbackOf
(c⁄° 
UnicodeSåög
& 
id
) const;

156 
public
:

160 
UCœssID
 
U_EXPORT2
 
	`gëSèticCœssID
();

162 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const;

167 
vútuÆ
 ~
	`LoˇÀKey
();

169 #ifde‡
SERVICE_DEBUG


170 
public
:

171 
vútuÆ
 
UnicodeSåög
& 
	$debug
(
UnicodeSåög
& 
ªsu…
) const;

172 
vútuÆ
 
UnicodeSåög
& 
	$debugCœss
(
UnicodeSåög
& 
ªsu…
) const;

175 
	}
};

195 ˛as†
	cU_COMMON_API
 
	mLoˇÀKeyFa˘‹y
 : 
public
 
ICUSîvi˚Fa˘‹y
 {

196 
¥Ÿe˘ed
:

197 c⁄° 
UnicodeSåög
 
_«me
;

198 c⁄° 
öt32_t
 
	m_covîage
;

200 
	mpublic
:

207 
VISIBLE
 = 0,

214 
	mINVISIBLE
 = 1

220 
	gvútuÆ
 ~
LoˇÀKeyFa˘‹y
();

222 
	g¥Ÿe˘ed
:

226 
LoˇÀKeyFa˘‹y
(
öt32_t
 
covîage
);

231 
LoˇÀKeyFa˘‹y
(
öt32_t
 
covîage
, c⁄° 
UnicodeSåög
& 
«me
);

238 
	gpublic
:

239 
vútuÆ
 
UObje˘
* 
	$¸óã
(c⁄° 
ICUSîvi˚Key
& 
key
, c⁄° 
ICUSîvi˚
* 
£rvi˚
, 
UEº‹Code
& 
°©us
) const;

241 
¥Ÿe˘ed
:

242 
vútuÆ
 
UBoﬁ
 
	$h™dÀsKey
(c⁄° 
ICUSîvi˚Key
& 
key
, 
UEº‹Code
& 
°©us
) const;

244 
public
:

249 
vútuÆ
 
	$upd©eVisibÀIDs
(
HashèbÀ
& 
ªsu…
, 
UEº‹Code
& 
°©us
) const;

254 
vútuÆ
 
UnicodeSåög
& 
	$gëDi•œyName
(c⁄° 
UnicodeSåög
& 
id
, c⁄° 
LoˇÀ
& 
loˇÀ
, UnicodeSåög& 
ªsu…
) const;

256 
¥Ÿe˘ed
:

261 
vútuÆ
 
UObje˘
* 
	$h™dÀCª©e
(c⁄° 
LoˇÀ
& 
loc
, 
öt32_t
 
köd
, c⁄° 
ICUSîvi˚
* 
£rvi˚
, 
UEº‹Code
& 
°©us
) const;

274 
vútuÆ
 c⁄° 
HashèbÀ
* 
	$gëSuµ‹ãdIDs
(
UEº‹Code
& 
°©us
) const;

276 
public
:

280 
UCœssID
 
U_EXPORT2
 
	`gëSèticCœssID
();

282 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const;

284 #ifde‡
SERVICE_DEBUG


285 
public
:

286 
vútuÆ
 
UnicodeSåög
& 
	$debug
(
UnicodeSåög
& 
ªsu…
) const;

287 
vútuÆ
 
UnicodeSåög
& 
	$debugCœss
(
UnicodeSåög
& 
ªsu…
) const;

290 
	}
};

300 ˛as†
	cU_COMMON_API
 
	mSim∂eLoˇÀKeyFa˘‹y
 : 
public
 
LoˇÀKeyFa˘‹y
 {

301 
¥iv©e
:

302 
UObje˘
* 
_obj
;

303 
UnicodeSåög
 
	m_id
;

304 c⁄° 
öt32_t
 
	m_köd
;

306 
	mpublic
:

307 
Sim∂eLoˇÀKeyFa˘‹y
(
UObje˘
* 
objToAd›t
,

308 c⁄° 
UnicodeSåög
& 
loˇÀ
,

309 
öt32_t
 
köd
,

310 
öt32_t
 
covîage
);

312 
Sim∂eLoˇÀKeyFa˘‹y
(
UObje˘
* 
objToAd›t
,

313 c⁄° 
LoˇÀ
& 
loˇÀ
,

314 
öt32_t
 
köd
,

315 
öt32_t
 
covîage
);

320 
	mvútuÆ
 ~
Sim∂eLoˇÀKeyFa˘‹y
();

325 
vútuÆ
 
UObje˘
* 
	$¸óã
(c⁄° 
ICUSîvi˚Key
& 
key
, c⁄° 
ICUSîvi˚
* 
£rvi˚
, 
UEº‹Code
& 
°©us
) const;

331 
vútuÆ
 
	$upd©eVisibÀIDs
(
HashèbÀ
& 
ªsu…
, 
UEº‹Code
& 
°©us
) const;

333 
¥Ÿe˘ed
:

340 
public
:

344 
UCœssID
 
U_EXPORT2
 
	`gëSèticCœssID
();

346 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const;

348 #ifde‡
SERVICE_DEBUG


349 
public
:

350 
vútuÆ
 
UnicodeSåög
& 
	$debug
(
UnicodeSåög
& 
ªsu…
) const;

351 
vútuÆ
 
UnicodeSåög
& 
	$debugCœss
(
UnicodeSåög
& 
ªsu…
) const;

367 ˛as†
	cU_COMMON_API
 
ICUResour˚BundÀFa˘‹y
 : 
public
 
LoˇÀKeyFa˘‹y


369 
¥Ÿe˘ed
:

370 
UnicodeSåög
 
_bundÀName
;

372 
public
:

376 
	`ICUResour˚BundÀFa˘‹y
();

384 
	`ICUResour˚BundÀFa˘‹y
(c⁄° 
UnicodeSåög
& 
bundÀName
);

389 
vútuÆ
 ~
	`ICUResour˚BundÀFa˘‹y
();

391 
¥Ÿe˘ed
:

395 
vútuÆ
 c⁄° 
HashèbÀ
* 
	$gëSuµ‹ãdIDs
(
UEº‹Code
& 
°©us
) const;

401 
vútuÆ
 
UObje˘
* 
	$h™dÀCª©e
(c⁄° 
LoˇÀ
& 
loc
, 
öt32_t
 
köd
, c⁄° 
ICUSîvi˚
* 
£rvi˚
, 
UEº‹Code
& 
°©us
) const;

403 
public
:

407 
UCœssID
 
U_EXPORT2
 
	`gëSèticCœssID
();

408 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const;

411 #ifde‡
SERVICE_DEBUG


412 
public
:

413 
vútuÆ
 
UnicodeSåög
& 
	$debug
(
UnicodeSåög
& 
ªsu…
) const;

414 
vútuÆ
 
UnicodeSåög
& 
	$debugCœss
(
UnicodeSåög
& 
ªsu…
) const;

423 ˛as†
	cU_COMMON_API
 
ICULoˇÀSîvi˚
 : 
public
 
ICUSîvi˚


425 
¥iv©e
:

426 
LoˇÀ
 
ÁŒbackLoˇÀ
;

427 
UnicodeSåög
 
ÁŒbackLoˇÀName
;

428 
UMTX
 
Œock
;

430 
public
:

434 
	`ICULoˇÀSîvi˚
();

439 
	`ICULoˇÀSîvi˚
(c⁄° 
UnicodeSåög
& 
«me
);

444 
vútuÆ
 ~
	`ICULoˇÀSîvi˚
();

450 
UObje˘
* 
	$gë
(c⁄° 
UnicodeSåög
& 
des¸ùt‹
, 
UEº‹Code
& 
°©us
) const {

451  
ICUSîvi˚
::
	`gë
(
des¸ùt‹
, 
°©us
);

454 
UObje˘
* 
	$gë
(c⁄° 
UnicodeSåög
& 
des¸ùt‹
, UnicodeSåög* 
a˘uÆRëu∫
, 
UEº‹Code
& 
°©us
) const {

455  
ICUSîvi˚
::
	`gë
(
des¸ùt‹
, 
a˘uÆRëu∫
, 
°©us
);

456 
	}
}

464 
UObje˘
* 
	$gë
(c⁄° 
LoˇÀ
& 
loˇÀ
, 
UEº‹Code
& 
°©us
) const;

470 
UObje˘
* 
	$gë
(c⁄° 
LoˇÀ
& 
loˇÀ
, 
öt32_t
 
köd
, 
UEº‹Code
& 
°©us
) const;

476 
UObje˘
* 
	$gë
(c⁄° 
LoˇÀ
& 
loˇÀ
, LoˇÀ* 
a˘uÆRëu∫
, 
UEº‹Code
& 
°©us
) const;

484 
UObje˘
* 
	$gë
(c⁄° 
LoˇÀ
& 
loˇÀ
, 
öt32_t
 
köd
, LoˇÀ* 
a˘uÆRëu∫
, 
UEº‹Code
& 
°©us
) const;

491 
vútuÆ
 
URegi°ryKey
 
	`ªgi°îIn°™˚
(
UObje˘
* 
objToAd›t
, c⁄° 
LoˇÀ
& 
loˇÀ
, 
UEº‹Code
& 
°©us
);

498 
vútuÆ
 
URegi°ryKey
 
	`ªgi°îIn°™˚
(
UObje˘
* 
objToAd›t
, c⁄° 
LoˇÀ
& 
loˇÀ
, 
öt32_t
 
köd
, 
UEº‹Code
& 
°©us
);

504 
vútuÆ
 
URegi°ryKey
 
	`ªgi°îIn°™˚
(
UObje˘
* 
objToAd›t
, c⁄° 
LoˇÀ
& 
loˇÀ
, 
öt32_t
 
köd
, i¡32_à
covîage
, 
UEº‹Code
& 
°©us
);

514 
vútuÆ
 
URegi°ryKey
 
	`ªgi°îIn°™˚
(
UObje˘
* 
objToAd›t
, c⁄° 
UnicodeSåög
& 
loˇÀ
, 
UBoﬁ
 
visibÀ
, 
UEº‹Code
& 
°©us
);

520 
vútuÆ
 
SåögEnumî©i⁄
* 
	$gëAvaûabÀLoˇÀs
() const;

522 
¥Ÿe˘ed
:

528 c⁄° 
UnicodeSåög
& 
	$vÆid©eFÆlbackLoˇÀ
() const;

533 
vútuÆ
 
ICUSîvi˚Key
* 
	$¸óãKey
(c⁄° 
UnicodeSåög
* 
id
, 
UEº‹Code
& 
°©us
) const;

538 
vútuÆ
 
ICUSîvi˚Key
* 
	$¸óãKey
(c⁄° 
UnicodeSåög
* 
id
, 
öt32_t
 
köd
, 
UEº‹Code
& 
°©us
) const;

540 
‰õnd
 
˛ass
 
Sîvi˚Enumî©i⁄
;

541 
	}
};

543 
	gU_NAMESPACE_END


	@servls.cpp

9 
	~"unicode/uty≥s.h
"

11 #i‡!
UCONFIG_NO_SERVICE


13 
	~"unicode/ªsbund.h
"

14 
	~"uªsimp.h
"

15 
	~"cmem‹y.h
"

16 
	~"£rvloc.h
"

17 
	~"u°rfmt.h
"

18 
	~"uhash.h
"

19 
	~"ch¨°r.h
"

20 
	~"u˛n_cmn.h
"

21 
	~"uas£π.h
"

23 
	#UNDERSCORE_CHAR
 ((
UCh¨
)0x005f)

	)

24 
	#AT_SIGN_CHAR
 ((
UCh¨
)64)

	)

25 
	#PERIOD_CHAR
 ((
UCh¨
)46)

	)

27 
U_NAMESPACE_BEGIN


29 
	gICULoˇÀSîvi˚
::
	$ICULoˇÀSîvi˚
()

30 : 
	`ÁŒbackLoˇÀ
(
LoˇÀ
::
	`gëDeÁu…
())

31 , 
	$Œock
(0)

33 
	`umtx_öô
(&
Œock
);

34 
	}
}

36 
	gICULoˇÀSîvi˚
::
	$ICULoˇÀSîvi˚
(c⁄° 
UnicodeSåög
& 
d«me
)

37 : 
	`ICUSîvi˚
(
d«me
)

38 , 
	`ÁŒbackLoˇÀ
(
LoˇÀ
::
	`gëDeÁu…
())

39 , 
	$Œock
(0)

41 
	`umtx_öô
(&
Œock
);

42 
	}
}

44 
	gICULoˇÀSîvi˚
::~
	$ICULoˇÀSîvi˚
()

46 
	`umtx_de°roy
(&
Œock
);

47 
	}
}

49 
UObje˘
*

50 
	gICULoˇÀSîvi˚
::
	$gë
(c⁄° 
LoˇÀ
& 
loˇÀ
, 
UEº‹Code
& 
°©us
) const

52  
	`gë
(
loˇÀ
, 
LoˇÀKey
::
KIND_ANY
, 
NULL
, 
°©us
);

53 
	}
}

55 
UObje˘
*

56 
	gICULoˇÀSîvi˚
::
	$gë
(c⁄° 
LoˇÀ
& 
loˇÀ
, 
öt32_t
 
köd
, 
UEº‹Code
& 
°©us
) const

58  
	`gë
(
loˇÀ
, 
köd
, 
NULL
, 
°©us
);

59 
	}
}

61 
UObje˘
*

62 
	gICULoˇÀSîvi˚
::
	$gë
(c⁄° 
LoˇÀ
& 
loˇÀ
, LoˇÀ* 
a˘uÆRëu∫
, 
UEº‹Code
& 
°©us
) const

64  
	`gë
(
loˇÀ
, 
LoˇÀKey
::
KIND_ANY
, 
a˘uÆRëu∫
, 
°©us
);

65 
	}
}

67 
UObje˘
*

68 
	gICULoˇÀSîvi˚
::
	$gë
(c⁄° 
LoˇÀ
& 
loˇÀ
, 
öt32_t
 
köd
, LoˇÀ* 
a˘uÆRëu∫
, 
UEº‹Code
& 
°©us
) const

70 
UObje˘
* 
ªsu…
 = 
NULL
;

71 i‡(
	`U_FAILURE
(
°©us
)) {

72  
ªsu…
;

75 
UnicodeSåög
 
	`locName
(
loˇÀ
.
	`gëName
(), -1, 
US_INV
);

76 i‡(
locName
.
	`isBogus
()) {

77 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

79 
ICUSîvi˚Key
* 
key
 = 
	`¸óãKey
(&
locName
, 
köd
, 
°©us
);

80 i‡(
key
) {

81 i‡(
a˘uÆRëu∫
 =
NULL
) {

82 
ªsu…
 = 
	`gëKey
(*
key
, 
°©us
);

84 
UnicodeSåög
 
ãmp
;

85 
ªsu…
 = 
	`gëKey
(*
key
, &
ãmp
, 
°©us
);

87 i‡(
ªsu…
 !
NULL
) {

88 
key
->
	`∑r£Suffix
(
ãmp
);

89 
LoˇÀUtûôy
::
	`öôLoˇÀFromName
(
ãmp
, *
a˘uÆRëu∫
);

92 
dñëe
 
key
;

95  
ªsu…
;

96 
	}
}

99 
URegi°ryKey


100 
	gICULoˇÀSîvi˚
::
	$ªgi°îIn°™˚
(
UObje˘
* 
objToAd›t
, c⁄° 
UnicodeSåög
& 
loˇÀ
,

101 
UBoﬁ
 
visibÀ
, 
UEº‹Code
& 
°©us
)

103 
LoˇÀ
 
loc
;

104 
LoˇÀUtûôy
::
	`öôLoˇÀFromName
(
loˇÀ
, 
loc
);

105  
	`ªgi°îIn°™˚
(
objToAd›t
, 
loc
, 
LoˇÀKey
::
KIND_ANY
,

106 
visibÀ
 ? 
LoˇÀKeyFa˘‹y
::
VISIBLE
 : LoˇÀKeyFa˘‹y::
INVISIBLE
, 
°©us
);

107 
	}
}

109 
URegi°ryKey


110 
	gICULoˇÀSîvi˚
::
	$ªgi°îIn°™˚
(
UObje˘
* 
objToAd›t
, c⁄° 
LoˇÀ
& 
loˇÀ
, 
UEº‹Code
& 
°©us
)

112  
	`ªgi°îIn°™˚
(
objToAd›t
, 
loˇÀ
, 
LoˇÀKey
::
KIND_ANY
, 
LoˇÀKeyFa˘‹y
::
VISIBLE
, 
°©us
);

113 
	}
}

115 
URegi°ryKey


116 
	gICULoˇÀSîvi˚
::
	$ªgi°îIn°™˚
(
UObje˘
* 
objToAd›t
, c⁄° 
LoˇÀ
& 
loˇÀ
, 
öt32_t
 
köd
, 
UEº‹Code
& 
°©us
)

118  
	`ªgi°îIn°™˚
(
objToAd›t
, 
loˇÀ
, 
köd
, 
LoˇÀKeyFa˘‹y
::
VISIBLE
, 
°©us
);

119 
	}
}

121 
URegi°ryKey


122 
	gICULoˇÀSîvi˚
::
	$ªgi°îIn°™˚
(
UObje˘
* 
objToAd›t
, c⁄° 
LoˇÀ
& 
loˇÀ
, 
öt32_t
 
köd
, i¡32_à
covîage
, 
UEº‹Code
& 
°©us
)

124 
ICUSîvi˚Fa˘‹y
 * 
Á˘‹y
 = 
√w
 
	`Sim∂eLoˇÀKeyFa˘‹y
(
objToAd›t
, 
loˇÀ
, 
köd
, 
covîage
);

125 i‡(
Á˘‹y
 !
NULL
) {

126  
	`ªgi°îFa˘‹y
(
Á˘‹y
, 
°©us
);

128 
dñëe
 
objToAd›t
;

129  
NULL
;

130 
	}
}

133 
URegi°ryKey


134 
	gICULoˇÀSîvi˚
::
	$ªgi°îIn°™˚
(
UObje˘
* 
objToAd›t
, c⁄° 
UnicodeSåög
& 
loˇÀ
, 
UEº‹Code
& 
°©us
)

136  
	`ªgi°îIn°™˚
(
objToAd›t
, 
loˇÀ
, 
LoˇÀKey
::
KIND_ANY
, 
LoˇÀKeyFa˘‹y
::
VISIBLE
, 
°©us
);

137 
	}
}

139 
URegi°ryKey


140 
	gICULoˇÀSîvi˚
::
	$ªgi°îIn°™˚
(
UObje˘
* 
objToAd›t
, c⁄° 
UnicodeSåög
& 
loˇÀ
, 
UBoﬁ
 
visibÀ
, 
UEº‹Code
& 
°©us
)

142  
	`ªgi°îIn°™˚
(
objToAd›t
, 
loˇÀ
, 
LoˇÀKey
::
KIND_ANY
,

143 
visibÀ
 ? 
LoˇÀKeyFa˘‹y
::
VISIBLE
 : LoˇÀKeyFa˘‹y::
INVISIBLE
,

144 
°©us
);

145 
	}
}

147 
URegi°ryKey


148 
	gICULoˇÀSîvi˚
::
	$ªgi°îIn°™˚
(
UObje˘
* 
objToAd›t
, c⁄° 
UnicodeSåög
& 
loˇÀ
, 
öt32_t
 
köd
, i¡32_à
covîage
, 
UEº‹Code
& 
°©us
)

150 
ICUSîvi˚Fa˘‹y
 * 
Á˘‹y
 = 
√w
 
	`Sim∂eLoˇÀKeyFa˘‹y
(
objToAd›t
, 
loˇÀ
, 
köd
, 
covîage
);

151 i‡(
Á˘‹y
 !
NULL
) {

152  
	`ªgi°îFa˘‹y
(
Á˘‹y
, 
°©us
);

154 
dñëe
 
objToAd›t
;

155  
NULL
;

156 
	}
}

159 ˛as†
	cSîvi˚Enumî©i⁄
 : 
public
 
SåögEnumî©i⁄
 {

160 
¥iv©e
:

161 c⁄° 
ICULoˇÀSîvi˚
* 
_£rvi˚
;

162 
öt32_t
 
	m_time°amp
;

163 
UVe˘‹
 
	m_ids
;

164 
öt32_t
 
	m_pos
;

166 
	m¥iv©e
:

167 
	$Sîvi˚Enumî©i⁄
(c⁄° 
ICULoˇÀSîvi˚
* 
£rvi˚
, 
UEº‹Code
 &
°©us
)

168 : 
	`_£rvi˚
(
£rvi˚
)

169 , 
	`_time°amp
(
£rvi˚
->
	`gëTime°amp
())

170 , 
	`_ids
(
uhash_dñëeUnicodeSåög
, 
NULL
, 
°©us
)

171 , 
	$_pos
(0)

173 
_£rvi˚
->
	`gëVisibÀIDs
(
_ids
, 
°©us
);

176 
	$Sîvi˚Enumî©i⁄
(c⁄° 
Sîvi˚Enumî©i⁄
 &
Ÿhî
, 
UEº‹Code
 &
°©us
)

177 : 
	`_£rvi˚
(
Ÿhî
.
_£rvi˚
)

178 , 
	`_time°amp
(
Ÿhî
.
_time°amp
)

179 , 
	`_ids
(
uhash_dñëeUnicodeSåög
, 
NULL
, 
°©us
)

180 , 
	$_pos
(0)

182 if(
	`U_SUCCESS
(
°©us
)) {

183 
öt32_t
 
i
, 
Àngth
;

185 
Àngth
 = 
Ÿhî
.
_ids
.
	`size
();

186 
i
 = 0; i < 
Àngth
; ++i) {

187 
_ids
.
	`addEÀmít
(((
UnicodeSåög
 *)
Ÿhî
._ids.
	`ñemítAt
(
i
))->
	`˛⁄e
(), 
°©us
);

190 if(
	`U_SUCCESS
(
°©us
)) {

191 
_pos
 = 
Ÿhî
._pos;

194 
	}
}

196 
	gpublic
:

197 
Sîvi˚Enumî©i⁄
* 
	$¸óã
(c⁄° 
ICULoˇÀSîvi˚
* 
£rvi˚
) {

198 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

199 
Sîvi˚Enumî©i⁄
* 
ªsu…
 = 
√w
 
	`Sîvi˚Enumî©i⁄
(
£rvi˚
, 
°©us
);

200 i‡(
	`U_SUCCESS
(
°©us
)) {

201  
ªsu…
;

203 
dñëe
 
ªsu…
;

204  
NULL
;

205 
	}
}

207 
	gvútuÆ
 ~
	$Sîvi˚Enumî©i⁄
(Ë{
	}
}

209 
vútuÆ
 
SåögEnumî©i⁄
 *
	$˛⁄e
() const {

210 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

211 
Sîvi˚Enumî©i⁄
 *
˛
 = 
√w
 
	`Sîvi˚Enumî©i⁄
(*
this
, 
°©us
);

212 if(
	`U_FAILURE
(
°©us
)) {

213 
dñëe
 
˛
;

214 
˛
 = 
NULL
;

216  
˛
;

217 
	}
}

219 
UBoﬁ
 
	$upToD©e
(
UEº‹Code
& 
°©us
) const {

220 i‡(
	`U_SUCCESS
(
°©us
)) {

221 i‡(
_time°amp
 =
_£rvi˚
->
	`gëTime°amp
()) {

222  
TRUE
;

224 
°©us
 = 
U_ENUM_OUT_OF_SYNC_ERROR
;

226  
FALSE
;

227 
	}
}

229 
vútuÆ
 
öt32_t
 
	$cou¡
(
UEº‹Code
& 
°©us
) const {

230  
	`upToD©e
(
°©us
Ë? 
_ids
.
	`size
() : 0;

231 
	}
}

233 
vútuÆ
 c⁄° 
UnicodeSåög
* 
	$¢ext
(
UEº‹Code
& 
°©us
) {

234 i‡(
	`upToD©e
(
°©us
Ë&& (
_pos
 < 
_ids
.
	`size
())) {

235  (c⁄° 
UnicodeSåög
*)
_ids
[
_pos
++];

237  
NULL
;

238 
	}
}

240 
vútuÆ
 
	$ª£t
(
UEº‹Code
& 
°©us
) {

241 i‡(
°©us
 =
U_ENUM_OUT_OF_SYNC_ERROR
) {

242 
°©us
 = 
U_ZERO_ERROR
;

244 i‡(
	`U_SUCCESS
(
°©us
)) {

245 
_time°amp
 = 
_£rvi˚
->
	`gëTime°amp
();

246 
_pos
 = 0;

247 
_£rvi˚
->
	`gëVisibÀIDs
(
_ids
, 
°©us
);

249 
	}
}

251 
	gpublic
:

252 
UCœssID
 
U_EXPORT2
 
gëSèticCœssID
();

253 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const;

254 
	}
};

256 
	$UOBJECT_DEFINE_RTTI_IMPLEMENTATION
(
Sîvi˚Enumî©i⁄
)

258 
SåögEnumî©i⁄
*

259 
ICULoˇÀSîvi˚
::
	$gëAvaûabÀLoˇÀs
() const

261  
Sîvi˚Enumî©i⁄
::
	`¸óã
(
this
);

262 
	}
}

264 c⁄° 
	gUnicodeSåög
&

265 
	gICULoˇÀSîvi˚
::
	$vÆid©eFÆlbackLoˇÀ
() const

267 c⁄° 
LoˇÀ
& 
loc
 = LoˇÀ::
	`gëDeÁu…
();

268 
ICULoˇÀSîvi˚
* 
ncThis
 = (ICULoˇÀSîvi˚*)
this
;

270 
Muãx
 
	`muãx
(&
ncThis
->
Œock
);

271 i‡(
loc
 !
ÁŒbackLoˇÀ
) {

272 
ncThis
->
ÁŒbackLoˇÀ
 = 
loc
;

273 
LoˇÀUtûôy
::
	`öôNameFromLoˇÀ
(
loc
, 
ncThis
->
ÁŒbackLoˇÀName
);

274 
ncThis
->
	`˛órSîvi˚Cache
();

277  
ÁŒbackLoˇÀName
;

278 
	}
}

280 
ICUSîvi˚Key
*

281 
	gICULoˇÀSîvi˚
::
	$¸óãKey
(c⁄° 
UnicodeSåög
* 
id
, 
UEº‹Code
& 
°©us
) const

283  
LoˇÀKey
::
	`¸óãWôhC™⁄iˇlFÆlback
(
id
, &
	`vÆid©eFÆlbackLoˇÀ
(), 
°©us
);

284 
	}
}

286 
ICUSîvi˚Key
*

287 
	gICULoˇÀSîvi˚
::
	$¸óãKey
(c⁄° 
UnicodeSåög
* 
id
, 
öt32_t
 
köd
, 
UEº‹Code
& 
°©us
) const

289  
LoˇÀKey
::
	`¸óãWôhC™⁄iˇlFÆlback
(
id
, &
	`vÆid©eFÆlbackLoˇÀ
(), 
köd
, 
°©us
);

290 
	}
}

292 
	gU_NAMESPACE_END


	@servnotf.cpp

8 
	~"unicode/uty≥s.h
"

10 #i‡!
UCONFIG_NO_SERVICE


12 
	~"£rvnŸf.h
"

13 #ifde‡
NOTIFIER_DEBUG


14 
	~<°dio.h
>

17 
U_NAMESPACE_BEGIN


19 
	gEvítLi°íî
::~
	$EvítLi°íî
(Ë{
	}
}

20 
	$UOBJECT_DEFINE_RTTI_IMPLEMENTATION
(
EvítLi°íî
)

22 
ICUNŸifõr
::
	$ICUNŸifõr
()

23 : 
	`nŸifyLock
(0), 
	$li°íîs
(
NULL
)

25 
	`umtx_öô
(&
nŸifyLock
);

26 
	}
}

28 
	gICUNŸifõr
::~
	$ICUNŸifõr
() {

30 
Muãx
 
	`lmx
(&
nŸifyLock
);

31 
dñëe
 
li°íîs
;

32 
li°íîs
 = 
NULL
;

34 
	`umtx_de°roy
(&
nŸifyLock
);

35 
	}
}

39 
	gICUNŸifõr
::
	$addLi°íî
(c⁄° 
EvítLi°íî
* 
l
, 
UEº‹Code
& 
°©us
)

41 i‡(
	`U_SUCCESS
(
°©us
)) {

42 i‡(
l
 =
NULL
) {

43 
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

47 i‡(
	`ac˚±sLi°íî
(*
l
)) {

48 
Muãx
 
	`lmx
(&
nŸifyLock
);

49 i‡(
li°íîs
 =
NULL
) {

50 
li°íîs
 = 
√w
 
	`UVe˘‹
(5, 
°©us
);

52 
i
 = 0, 
e
 = 
li°íîs
->
	`size
(); i <É; ++i) {

53 c⁄° 
EvítLi°íî
* 
ñ
 = (c⁄° EvítLi°íî*)(
li°íîs
->
	`ñemítAt
(
i
));

54 i‡(
l
 =
ñ
) {

60 
li°íîs
->
	`addEÀmít
((*)
l
, 
°©us
);

62 #ifde‡
NOTIFIER_DEBUG


64 
	`Ârötf
(
°dîr
, "Listener invalid forÅhisÇotifier.");

65 
	`exô
(1);

69 
	}
}

72 
	gICUNŸifõr
::
	$ªmoveLi°íî
(c⁄° 
EvítLi°íî
 *
l
, 
UEº‹Code
& 
°©us
)

74 i‡(
	`U_SUCCESS
(
°©us
)) {

75 i‡(
l
 =
NULL
) {

76 
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

81 
Muãx
 
	`lmx
(&
nŸifyLock
);

82 i‡(
li°íîs
 !
NULL
) {

84 
i
 = 0, 
e
 = 
li°íîs
->
	`size
(); i <É; ++i) {

85 c⁄° 
EvítLi°íî
* 
ñ
 = (c⁄° EvítLi°íî*)
li°íîs
->
	`ñemítAt
(
i
);

86 i‡(
l
 =
ñ
) {

87 
li°íîs
->
	`ªmoveEÀmítAt
(
i
);

88 i‡(
li°íîs
->
	`size
() == 0) {

89 
dñëe
 
li°íîs
;

90 
li°íîs
 = 
NULL
;

98 
	}
}

101 
	gICUNŸifõr
::
	$nŸifyCh™ged
()

103 i‡(
li°íîs
 !
NULL
) {

104 
Muãx
 
	`lmx
(&
nŸifyLock
);

105 i‡(
li°íîs
 !
NULL
) {

106 
i
 = 0, 
e
 = 
li°íîs
->
	`size
(); i <É; ++i) {

107 
EvítLi°íî
* 
ñ
 = (EvítLi°íî*)
li°íîs
->
	`ñemítAt
(
i
);

108 
	`nŸifyLi°íî
(*
ñ
);

112 
	}
}

114 
	gU_NAMESPACE_END


	@servnotf.h

7 #i‚de‡
ICUNOTIF_H


8 
	#ICUNOTIF_H


	)

10 
	~"unicode/uty≥s.h
"

12 #i‡
UCONFIG_NO_SERVICE


14 
U_NAMESPACE_BEGIN


20 
˛ass
 
	gICUNŸifõr
;

22 
	gU_NAMESPACE_END


26 
	~"unicode/uobje˘.h
"

27 
	~"unicode/uni°r.h
"

29 
	~"muãx.h
"

30 
	~"uve˘‹.h
"

32 
U_NAMESPACE_BEGIN


34 ˛as†
	cU_COMMON_API
 
	mEvítLi°íî
 : 
public
 
UObje˘
 {

35 
public
:

36 
vútuÆ
 ~
EvítLi°íî
();

38 
	mpublic
:

39 
UCœssID
 
U_EXPORT2
 
gëSèticCœssID
();

41 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const;

43 
public
:

44 #ifde‡
SERVICE_DEBUG


45 
vútuÆ
 
UnicodeSåög
& 
	$debug
(
UnicodeSåög
& 
ªsu…
) const {

46  
	`debugCœss
(
ªsu…
);

49 
vútuÆ
 
UnicodeSåög
& 
	$debugCœss
(
UnicodeSåög
& 
ªsu…
) const {

50  
ªsu…
.
	`≠≥nd
("Key");

51 
	}
}

72 ˛as†
	cU_COMMON_API
 
	mICUNŸifõr
 : 
public
 
UMem‹y
 {

73 
¥iv©e
: 
UMTX
 
nŸifyLock
;

74 
	m¥iv©e
: 
UVe˘‹
* 
li°íîs
;

76 
	mpublic
:

77 
ICUNŸifõr
();

79 
	mvútuÆ
 ~
ICUNŸifõr
();

88 
vútuÆ
 
addLi°íî
(c⁄° 
EvítLi°íî
* 
l
, 
UEº‹Code
& 
°©us
);

95 
vútuÆ
 
ªmoveLi°íî
(c⁄° 
EvítLi°íî
* 
l
, 
UEº‹Code
& 
°©us
);

103 
vútuÆ
 
nŸifyCh™ged
();

105 
	m¥Ÿe˘ed
:

110 
vútuÆ
 
UBoﬁ
 
	$ac˚±sLi°íî
(c⁄° 
EvítLi°íî
& 
l
) const = 0;

115 
vútuÆ
 
	$nŸifyLi°íî
(
EvítLi°íî
& 
l
) const = 0;

118 
U_NAMESPACE_END


	@servrbf.cpp

9 
	~"unicode/uty≥s.h
"

11 #i‡!
UCONFIG_NO_SERVICE


13 
	~"unicode/ªsbund.h
"

14 
	~"uªsimp.h
"

15 
	~"cmem‹y.h
"

16 
	~"£rvloc.h
"

17 
	~"u°rfmt.h
"

18 
	~"uhash.h
"

19 
	~"ch¨°r.h
"

20 
	~"u˛n_cmn.h
"

21 
	~"uas£π.h
"

23 
	#UNDERSCORE_CHAR
 ((
UCh¨
)0x005f)

	)

24 
	#AT_SIGN_CHAR
 ((
UCh¨
)64)

	)

25 
	#PERIOD_CHAR
 ((
UCh¨
)46)

	)

27 
U_NAMESPACE_BEGIN


29 
	gICUResour˚BundÀFa˘‹y
::
	$ICUResour˚BundÀFa˘‹y
()

30 : 
	`LoˇÀKeyFa˘‹y
(
VISIBLE
)

31 , 
	$_bundÀName
()

33 
	}
}

35 
	gICUResour˚BundÀFa˘‹y
::
	$ICUResour˚BundÀFa˘‹y
(c⁄° 
UnicodeSåög
& 
bundÀName
)

36 : 
	`LoˇÀKeyFa˘‹y
(
VISIBLE
)

37 , 
	$_bundÀName
(
bundÀName
)

39 
	}
}

41 
	gICUResour˚BundÀFa˘‹y
::~
	$ICUResour˚BundÀFa˘‹y
(Ë{
	}
}

43 c⁄° 
HashèbÀ
*

44 
ICUResour˚BundÀFa˘‹y
::
	$gëSuµ‹ãdIDs
(
UEº‹Code
& 
°©us
) const

46 i‡(
	`U_SUCCESS
(
°©us
)) {

47  
LoˇÀUtûôy
::
	`gëAvaûabÀLoˇÀNames
(
_bundÀName
);

49  
NULL
;

50 
	}
}

52 
UObje˘
*

53 
	gICUResour˚BundÀFa˘‹y
::
	$h™dÀCª©e
(c⁄° 
LoˇÀ
& 
loc
, 
öt32_t
 , c⁄° 
ICUSîvi˚
* , 
UEº‹Code
& 
°©us
) const

55 i‡(
	`U_SUCCESS
(
°©us
)) {

60 
pkg
[20];

61 
öt32_t
 
Àngth
;

62 
Àngth
=
_bundÀName
.
	`exåa˘
(0, 
INT32_MAX
, 
pkg
, (
öt32_t
)’kg), 
US_INV
);

63 if(
Àngth
>=(
öt32_t
)(
pkg
)) {

64  
NULL
;

66  
√w
 
	`Resour˚BundÀ
(
pkg
, 
loc
, 
°©us
);

68  
NULL
;

69 
	}
}

71 #ifde‡
SERVICE_DEBUG


72 
	gUnicodeSåög
&

73 
	gICUResour˚BundÀFa˘‹y
::
	$debug
(
UnicodeSåög
& 
ªsu…
) const

75 
LoˇÀKeyFa˘‹y
::
	`debug
(
ªsu…
);

76 
ªsu…
.
	`≠≥nd
(", bundle: ");

77  
ªsu…
.
	`≠≥nd
(
_bundÀName
);

78 
	}
}

80 
	gUnicodeSåög
&

81 
	gICUResour˚BundÀFa˘‹y
::
	$debugCœss
(
UnicodeSåög
& 
ªsu…
) const

83  
ªsu…
.
	`≠≥nd
("ICUResourceBundleFactory");

84 
	}
}

87 
	$UOBJECT_DEFINE_RTTI_IMPLEMENTATION
(
ICUResour˚BundÀFa˘‹y
)

89 
U_NAMESPACE_END


	@servslkf.cpp

9 
	~"unicode/uty≥s.h
"

11 #i‡!
UCONFIG_NO_SERVICE


13 
	~"unicode/ªsbund.h
"

14 
	~"uªsimp.h
"

15 
	~"cmem‹y.h
"

16 
	~"£rvloc.h
"

17 
	~"u°rfmt.h
"

18 
	~"uhash.h
"

19 
	~"ch¨°r.h
"

20 
	~"u˛n_cmn.h
"

21 
	~"uas£π.h
"

23 
	#UNDERSCORE_CHAR
 ((
UCh¨
)0x005f)

	)

24 
	#AT_SIGN_CHAR
 ((
UCh¨
)64)

	)

25 
	#PERIOD_CHAR
 ((
UCh¨
)46)

	)

27 
U_NAMESPACE_BEGIN


33 
	gSim∂eLoˇÀKeyFa˘‹y
::
	$Sim∂eLoˇÀKeyFa˘‹y
(
UObje˘
* 
objToAd›t
,

34 c⁄° 
UnicodeSåög
& 
loˇÀ
,

35 
öt32_t
 
köd
,

36 
öt32_t
 
covîage
)

37 : 
	`LoˇÀKeyFa˘‹y
(
covîage
)

38 , 
	`_obj
(
objToAd›t
)

39 , 
	`_id
(
loˇÀ
)

40 , 
	$_köd
(
köd
)

42 
	}
}

44 
	gSim∂eLoˇÀKeyFa˘‹y
::
	$Sim∂eLoˇÀKeyFa˘‹y
(
UObje˘
* 
objToAd›t
,

45 c⁄° 
LoˇÀ
& 
loˇÀ
,

46 
öt32_t
 
köd
,

47 
öt32_t
 
covîage
)

48 : 
	`LoˇÀKeyFa˘‹y
(
covîage
)

49 , 
	`_obj
(
objToAd›t
)

50 , 
	`_id
()

51 , 
	$_köd
(
köd
)

53 
LoˇÀUtûôy
::
	`öôNameFromLoˇÀ
(
loˇÀ
, 
_id
);

54 
	}
}

56 
	gSim∂eLoˇÀKeyFa˘‹y
::~
	$Sim∂eLoˇÀKeyFa˘‹y
()

58 
dñëe
 
_obj
;

59 
_obj
 = 
NULL
;

60 
	}
}

62 
UObje˘
*

63 
	gSim∂eLoˇÀKeyFa˘‹y
::
	$¸óã
(c⁄° 
ICUSîvi˚Key
& 
key
, c⁄° 
ICUSîvi˚
* 
£rvi˚
, 
UEº‹Code
& 
°©us
) const

65 i‡(
	`U_SUCCESS
(
°©us
)) {

66 c⁄° 
LoˇÀKey
& 
lkey
 = (c⁄° LoˇÀKey&)
key
;

67 i‡(
_köd
 =
LoˇÀKey
::
KIND_ANY
 || _köd =
lkey
.
	`köd
()) {

68 
UnicodeSåög
 
keyID
;

69 
lkey
.
	`cuºítID
(
keyID
);

70 i‡(
_id
 =
keyID
) {

71  
£rvi˚
->
	`˛⁄eIn°™˚
(
_obj
);

75  
NULL
;

76 
	}
}

85 
	gSim∂eLoˇÀKeyFa˘‹y
::
	$upd©eVisibÀIDs
(
HashèbÀ
& 
ªsu…
, 
UEº‹Code
& 
°©us
) const

87 i‡(
	`U_SUCCESS
(
°©us
)) {

88 i‡(
_covîage
 & 0x1) {

89 
ªsu…
.
	`ªmove
(
_id
);

91 
ªsu…
.
	`put
(
_id
, (*)
this
, 
°©us
);

94 
	}
}

96 #ifde‡
SERVICE_DEBUG


97 
	gUnicodeSåög
&

98 
	gSim∂eLoˇÀKeyFa˘‹y
::
	$debug
(
UnicodeSåög
& 
ªsu…
) const

100 
LoˇÀKeyFa˘‹y
::
	`debug
(
ªsu…
);

101 
ªsu…
.
	`≠≥nd
(", id: ");

102 
ªsu…
.
	`≠≥nd
(
_id
);

103 
ªsu…
.
	`≠≥nd
(", kind: ");

104 
ªsu…
.
	`≠≥nd
(
_köd
);

105  
ªsu…
;

106 
	}
}

108 
	gUnicodeSåög
&

109 
	gSim∂eLoˇÀKeyFa˘‹y
::
	$debugCœss
(
UnicodeSåög
& 
ªsu…
) const

111  
ªsu…
.
	`≠≥nd
("SimpleLocaleKeyFactory");

112 
	}
}

115 
	$UOBJECT_DEFINE_RTTI_IMPLEMENTATION
(
Sim∂eLoˇÀKeyFa˘‹y
)

117 
U_NAMESPACE_END


	@sprpimpl.h

17 #i‚de‡
SPRPIMPL_H


18 
	#SPRPIMPL_H


	)

20 
	~"unicode/uty≥s.h
"

22 #i‡!
UCONFIG_NO_IDNA


24 
	~"unicode/u°rög.h
"

25 
	~"unicode/∑r£îr.h
"

26 
	~"unicode/u•ªp.h
"

27 
	~"unicode/ud©a.h
"

28 
	~"uåõ.h
"

29 
	~"ud©aswp.h
"

30 
	~"ubidi_¥›s.h
"

32 
	#_SPREP_DATA_TYPE
 "•p"

	)

34 
	eUSåögPªpTy≥
{

35 
	mUSPREP_UNASSIGNED
 = 0x0000 ,

36 
	mUSPREP_MAP
 = 0x0001 ,

37 
	mUSPREP_PROHIBITED
 = 0x0002 ,

38 
	mUSPREP_DELETE
 = 0x0003 ,

39 
	mUSPREP_TYPE_LIMIT
 = 0x0004

42 
USåögPªpTy≥
 
	tUSåögPªpTy≥
;

44 #ifde‡
USPREP_TYPE_NAMES_ARRAY


45 c⁄° * 
	gu•ªpTy≥Names
[] ={

55 
	m_SPREP_NORMALIZATION_ON
 = 0x0001,

56 
	m_SPREP_CHECK_BIDI_ON
 = 0x0002

60 
	m_SPREP_TYPE_THRESHOLD
 = 0xFFF0,

61 
	m_SPREP_MAX_INDEX_VALUE
 = 0x3FBF,

62 
	m_SPREP_MAX_INDEX_TOP_LENGTH
 = 0x0003

67 
	m_SPREP_INDEX_TRIE_SIZE
 = 0,

68 
	m_SPREP_INDEX_MAPPING_DATA_SIZE
 = 1,

69 
	m_SPREP_NORM_CORRECTNS_LAST_UNI_VERSION
 = 2,

70 
	m_SPREP_ONE_UCHAR_MAPPING_INDEX_START
 = 3,

71 
	m_SPREP_TWO_UCHARS_MAPPING_INDEX_START
 = 4,

72 
	m_SPREP_THREE_UCHARS_MAPPING_INDEX_START
 = 5,

73 
	m_SPREP_FOUR_UCHARS_MAPPING_INDEX_START
 = 6,

74 
	m_SPREP_OPTIONS
 = 7,

75 
	m_SPREP_INDEX_TOP
=16

78 
USåögPªpKey
 
	tUSåögPªpKey
;

81 
	sUSåögPªpKey
{

82 * 
	m«me
;

83 * 
	m∑th
;

86 
	sUSåögPªpProfûe
{

87 
öt32_t
 
	mödexes
[
_SPREP_INDEX_TOP
];

88 
UTrõ
 
	m•ªpTrõ
;

89 c⁄° 
uöt16_t
* 
	mm≠pögD©a
;

90 
UD©aMem‹y
* 
	m•ªpD©a
;

91 c⁄° 
UBiDiPr›s
 *
	mbdp
;

92 
öt32_t
 
	mªfCou¡
;

93 
UBoﬁ
 
	misD©aLﬂded
;

94 
UBoﬁ
 
	mdoNFKC
;

95 
UBoﬁ
 
	mcheckBiDi
;

102 
U_CAPI
 
U_EXPORT2


103 
u¥v_sy¡axEº‹
(c⁄° 
UCh¨
* 
ruÀs
,

104 
öt32_t
 
pos
,

105 
öt32_t
 
ruÀsLí
,

106 
UP¨£Eº‹
* 
∑r£Eº‹
);

113 
U_CAPI
 
öt32_t
 
U_EXPORT2


114 
u•ªp_sw≠
(c⁄° 
UD©aSw≠≥r
 *
ds
,

115 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

116 
UEº‹Code
 *
pEº‹Code
);

	@stringpiece.cpp

9 
	~"unicode/uty≥s.h
"

10 
	~"unicode/°rögpõ˚.h
"

11 
	~"c°rög.h
"

12 
	~"cmem‹y.h
"

14 
U_NAMESPACE_BEGIN


16 
	gSåögPõ˚
::
	$SåögPõ˚
(c⁄° * 
°r
)

17 : 
	`±r_
(
°r
), 
	`Àngth_
((°∏=
NULL
Ë? 0 : 
°©ic_ˇ°
<
öt32_t
>(
	$u¥v_°æí
(
°r
))Ë{ 
	}
}

19 
SåögPõ˚
::
	$SåögPõ˚
(c⁄° 
SåögPõ˚
& 
x
, 
öt32_t
 
pos
) {

20 i‡(
pos
 < 0) {

21 
pos
 = 0;

22 } i‡(
pos
 > 
x
.
Àngth_
) {

23 
pos
 = 
x
.
Àngth_
;

25 
±r_
 = 
x
.±r_ + 
pos
;

26 
Àngth_
 = 
x
.Àngth_ - 
pos
;

27 
	}
}

29 
	gSåögPõ˚
::
	$SåögPõ˚
(c⁄° 
SåögPõ˚
& 
x
, 
öt32_t
 
pos
, i¡32_à
Àn
) {

30 i‡(
pos
 < 0) {

31 
pos
 = 0;

32 } i‡(
pos
 > 
x
.
Àngth_
) {

33 
pos
 = 
x
.
Àngth_
;

35 i‡(
Àn
 < 0) {

36 
Àn
 = 0;

37 } i‡(
Àn
 > 
x
.
Àngth_
 - 
pos
) {

38 
Àn
 = 
x
.
Àngth_
 - 
pos
;

40 
±r_
 = 
x
.±r_ + 
pos
;

41 
Àngth_
 = 
Àn
;

42 
	}
}

44 
	gSåögPõ˚
::
	$£t
(c⁄° * 
°r
) {

45 
±r_
 = 
°r
;

46 i‡(
°r
 !
NULL
)

47 
Àngth_
 = 
°©ic_ˇ°
<
öt32_t
>(
	`u¥v_°æí
(
°r
));

49 
Àngth_
 = 0;

50 
	}
}

52 
U_EXPORT
 
UBoﬁ
 
U_EXPORT2


53 
	g›î©‹
==(c⁄° 
SåögPõ˚
& 
x
, c⁄° 
	gSåögPõ˚
& 
	gy
) {

54 
öt32_t
 
	gÀn
 = 
x
.
size
();

55 i‡(
	gÀn
 !
y
.
size
()) {

56  
Ál£
;

58 i‡(
	gÀn
 == 0) {

59  
åue
;

61 c⁄° * 
	gp
 = 
x
.
d©a
();

62 c⁄° * 
	gp2
 = 
y
.
d©a
();

64 --
	gÀn
;

65 i‡(
	gp
[
Àn
] !
p2
[Àn]Ë 
Ál£
;

67  
u¥v_memcmp
(
p
, 
p2
, 
Àn
) == 0;

78 #i‡(!
deföed
(
_MSC_VER
Ë|| (_MSC_VER > 1500)Ë&& !deföed(
CYGWINMSVC
)

79 c⁄° 
öt32_t
 
	gSåögPõ˚
::
≈os
;

82 
	gU_NAMESPACE_END


	@triedict.cpp

8 
	~"unicode/uty≥s.h
"

10 #i‡!
UCONFIG_NO_BREAK_ITERATION


12 
	~"åõdi˘.h
"

13 
	~"unicode/ch¨ôî.h
"

14 
	~"unicode/uchrôî.h
"

15 
	~"unicode/°ªnum.h
"

16 
	~"unicode/uíum.h
"

17 
	~"unicode/ud©a.h
"

18 
	~"cmem‹y.h
"

19 
	~"ud©aswp.h
"

20 
	~"uve˘‹.h
"

21 
	~"uve˘r32.h
"

22 
	~"u¨rs‹t.h
"

26 #ifde‡
DEBUG_TRIE_DICT


27 
	~<sys/times.h
>

28 
	~<limôs.h
>

29 
	~<°dio.h
>

32 
U_NAMESPACE_BEGIN


38 
	gTrõW‹dDi˘i⁄¨y
::
	$TrõW‹dDi˘i⁄¨y
() {

39 
	}
}

41 
TrõW‹dDi˘i⁄¨y
::~
	$TrõW‹dDi˘i⁄¨y
() {

42 
	}
}

49 
Tî«ryNode
 : 
public
 
UMem‹y
 {

50 
UCh¨
 
ch
;

51 
uöt16_t
 
	gÊags
;

52 
Tî«ryNode
 *
	glow
;

53 
Tî«ryNode
 *
	gequÆ
;

54 
Tî«ryNode
 *
	ghigh
;

56 
Tî«ryNode
(
UCh¨
 
uc
);

57 ~
Tî«ryNode
();

60 
	eMuèbÀTrõNodeFœgs
 {

61 
	mkEndsW‹d
 = 0x0001

64 
ölöe


65 
	gTî«ryNode
::
	$Tî«ryNode
(
UCh¨
 
uc
) {

66 
ch
 = 
uc
;

67 
Êags
 = 0;

68 
low
 = 
NULL
;

69 
equÆ
 = 
NULL
;

70 
high
 = 
NULL
;

71 
	}
}

74 
	gTî«ryNode
::~
	$Tî«ryNode
() {

75 
dñëe
 
low
;

76 
dñëe
 
equÆ
;

77 
dñëe
 
high
;

78 
	}
}

80 
	gMuèbÀTrõDi˘i⁄¨y
::
	$MuèbÀTrõDi˘i⁄¨y
–
UCh¨
 
medün
, 
UEº‹Code
 &
°©us
 ) {

86 
fTrõ
 = 
√w
 
	`Tî«ryNode
(
medün
);

87 i‡(
fTrõ
 =
NULL
) {

88 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

90 
fIãr
 = 
	`uãxt_›íUCh¨s
(
NULL
, NULL, 0, &
°©us
);

91 i‡(
	`U_SUCCESS
(
°©us
Ë&& 
fIãr
 =
NULL
) {

92 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

94 
	}
}

96 
	gMuèbÀTrõDi˘i⁄¨y
::
	$MuèbÀTrõDi˘i⁄¨y
–
UEº‹Code
 &
°©us
 ) {

97 
fTrõ
 = 
NULL
;

98 
fIãr
 = 
	`uãxt_›íUCh¨s
(
NULL
, NULL, 0, &
°©us
);

99 i‡(
	`U_SUCCESS
(
°©us
Ë&& 
fIãr
 =
NULL
) {

100 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

102 
	}
}

104 
	gMuèbÀTrõDi˘i⁄¨y
::~
	$MuèbÀTrõDi˘i⁄¨y
() {

105 
dñëe
 
fTrõ
;

106 
	`uãxt_˛o£
(
fIãr
);

107 
	}
}

109 
öt32_t


110 
	gMuèbÀTrõDi˘i⁄¨y
::
	$£¨ch
–
UText
 *
ãxt
,

111 
öt32_t
 
maxLígth
,

112 
öt32_t
 *
Àngths
,

113 &
cou¡
,

114 
limô
,

115 
Tî«ryNode
 *&
∑ª¡
,

116 
UBoﬁ
 &
pM©ched
 ) const {

118 c⁄° 
Tî«ryNode
 *
up
 = 
NULL
;

119 c⁄° 
Tî«ryNode
 *
p
 = 
fTrõ
;

120 
mycou¡
 = 0;

121 
pM©ched
 = 
TRUE
;

122 
i
;

124 
UCh¨
 
uc
 = 
	`uãxt_cuºít32
(
ãxt
);

125 
i
 = 0; i < 
maxLígth
 && 
p
 !
NULL
; ++i) {

126 
p
 !
NULL
) {

127 i‡(
uc
 < 
p
->
ch
) {

128 
up
 = 
p
;

129 
p
 =Ö->
low
;

131 i‡(
uc
 =
p
->
ch
) {

135 
up
 = 
p
;

136 
p
 =Ö->
high
;

139 i‡(
p
 =
NULL
) {

140 
pM©ched
 = 
FALSE
;

144 i‡(
limô
 > 0 && (
p
->
Êags
 & 
kEndsW‹d
)) {

145 
Àngths
[
mycou¡
++] = 
i
+1;

146 --
limô
;

148 
up
 = 
p
;

149 
p
 =Ö->
equÆ
;

150 
uc
 = 
	`uãxt_√xt32
(
ãxt
);

151 
uc
 = 
	`uãxt_cuºít32
(
ãxt
);

156 
∑ª¡
 = (
Tî«ryNode
 *)
up
;

157 
cou¡
 = 
mycou¡
;

158  
i
;

159 
	}
}

162 
	gMuèbÀTrõDi˘i⁄¨y
::
	$addW‹d
–c⁄° 
UCh¨
 *
w‹d
,

163 
öt32_t
 
Àngth
,

164 
UEº‹Code
 &
°©us
 ) {

166 i‡(
Àngth
 <= 0) {

167 
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

171 
Tî«ryNode
 *
∑ª¡
;

172 
UBoﬁ
 
pM©ched
;

173 
cou¡
;

174 
fIãr
 = 
	`uãxt_›íUCh¨s
(fIãr, 
w‹d
, 
Àngth
, &
°©us
);

176 
m©ched
;

177 
m©ched
 = 
	`£¨ch
(
fIãr
, 
Àngth
, 
NULL
, 
cou¡
, 0, 
∑ª¡
, 
pM©ched
);

179 
m©ched
++ < 
Àngth
) {

180 
UCh¨32
 
uc
 = 
	`uãxt_√xt32
(
fIãr
);

181 
	`U_ASSERT
(
uc
 !
U_SENTINEL
);

182 
Tî«ryNode
 *
√wNode
 = 
√w
 
	`Tî«ryNode
(
uc
);

183 i‡(
√wNode
 =
NULL
) {

184 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

187 i‡(
pM©ched
) {

188 
∑ª¡
->
equÆ
 = 
√wNode
;

191 
pM©ched
 = 
TRUE
;

192 i‡(
uc
 < 
∑ª¡
->
ch
) {

193 
∑ª¡
->
low
 = 
√wNode
;

196 
∑ª¡
->
high
 = 
√wNode
;

199 
∑ª¡
 = 
√wNode
;

202 
∑ª¡
->
Êags
 |
kEndsW‹d
;

203 
	}
}

207 
	gMuèbÀTrõDi˘i⁄¨y
::
	$addW‹ds
–
UEnumî©i⁄
 *
w‹ds
,

208 
UEº‹Code
 &
°©us
 ) {

209 
öt32_t
 
Àngth
;

210 c⁄° 
UCh¨
 *
w‹d
;

211 (
w‹d
 = 
	`uíum_u√xt
(
w‹ds
, &
Àngth
, &
°©us
)Ë&& 
	`U_SUCCESS
(status)) {

212 
	`addW‹d
(
w‹d
, 
Àngth
, 
°©us
);

214 
	}
}

217 
öt32_t


218 
	gMuèbÀTrõDi˘i⁄¨y
::
	$m©ches
–
UText
 *
ãxt
,

219 
öt32_t
 
maxLígth
,

220 
öt32_t
 *
Àngths
,

221 &
cou¡
,

222 
limô
 ) const {

223 
Tî«ryNode
 *
∑ª¡
;

224 
UBoﬁ
 
pM©ched
;

225  
	`£¨ch
(
ãxt
, 
maxLígth
, 
Àngths
, 
cou¡
, 
limô
, 
∑ª¡
, 
pM©ched
);

226 
	}
}

229 ˛as†
	cMuèbÀTrõEnumî©i⁄
 : 
public
 
SåögEnumî©i⁄
 {

230 
¥iv©e
:

231 
USèck
 
fNodeSèck
;

232 
UVe˘‹32
 
	mfBønchSèck
;

233 
Tî«ryNode
 *
	mfRoŸ
;

234 
	eSèckBønch
 {

235 
	mkLessTh™
,

236 
	mkEquÆ
,

237 
	mkGª©îTh™
,

238 
	mkD⁄e


241 
	gpublic
:

242 
UCœssID
 
U_EXPORT2
 
gëSèticCœssID
();

243 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const;

244 
public
:

245 
	$MuèbÀTrõEnumî©i⁄
(
Tî«ryNode
 *
roŸ
, 
UEº‹Code
 &
°©us
)

246 : 
	`fNodeSèck
(
°©us
), 
	$fBønchSèck
(
°©us
) {

247 
fRoŸ
 = 
roŸ
;

248 
fNodeSèck
.
	`push
(
roŸ
, 
°©us
);

249 
fBønchSèck
.
	`push
(
kLessTh™
, 
°©us
);

250 
uni°r
.
	`ªmove
();

251 
	}
}

253 
	gvútuÆ
 ~
	$MuèbÀTrõEnumî©i⁄
() {

254 
	}
}

256 
vútuÆ
 
SåögEnumî©i⁄
 *
	$˛⁄e
() const {

257 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

258  
√w
 
	`MuèbÀTrõEnumî©i⁄
(
fRoŸ
, 
°©us
);

259 
	}
}

261 
vútuÆ
 c⁄° 
UnicodeSåög
 *
	$¢ext
(
UEº‹Code
 &
°©us
) {

262 i‡(
fNodeSèck
.
	`em±y
(Ë|| 
	`U_FAILURE
(
°©us
)) {

263  
NULL
;

265 
Tî«ryNode
 *
node
 = (Tî«ryNodê*Ë
fNodeSèck
.
	`≥ek
();

266 
SèckBønch
 
whîe
 = (SèckBønchË
fBønchSèck
.
	`≥eki
();

267 !
fNodeSèck
.
	`em±y
(Ë&& 
	`U_SUCCESS
(
°©us
)) {

268 
UBoﬁ
 
emô
;

269 
UBoﬁ
 
equÆ
;

271 
whîe
) {

272 
kLessTh™
:

273 i‡(
node
->
low
 !
NULL
) {

274 
fBønchSèck
.
	`£tEÀmítAt
(
kEquÆ
, fBønchSèck.
	`size
()-1);

275 
node
 = (
Tî«ryNode
 *Ë
fNodeSèck
.
	`push
“ode->
low
, 
°©us
);

276 
whîe
 = (
SèckBønch
Ë
fBønchSèck
.
	`push
(
kLessTh™
, 
°©us
);

279 
kEquÆ
:

280 
emô
 = (
node
->
Êags
 & 
kEndsW‹d
) != 0;

281 
equÆ
 = (
node
->equÆ !
NULL
);

286 i‡(
equÆ
 || 
emô
) {

287 
uni°r
.
	`≠≥nd
(
node
->
ch
);

288 
fBønchSèck
.
	`£tEÀmítAt
(
kGª©îTh™
, fBønchSèck.
	`size
()-1);

290 i‡(
equÆ
) {

291 
node
 = (
Tî«ryNode
 *Ë
fNodeSèck
.
	`push
“ode->
equÆ
, 
°©us
);

292 
whîe
 = (
SèckBønch
Ë
fBønchSèck
.
	`push
(
kLessTh™
, 
°©us
);

294 i‡(
emô
) {

295  &
uni°r
;

297 i‡(
equÆ
) {

300 
kGª©îTh™
:

302 i‡(
node
->
equÆ
 !
NULL
 || (node->
Êags
 & 
kEndsW‹d
)) {

303 
uni°r
.
	`åunˇã
(uni°r.
	`Àngth
()-1);

305 i‡(
node
->
high
 !
NULL
) {

306 
fBønchSèck
.
	`£tEÀmítAt
(
kD⁄e
, fBønchSèck.
	`size
()-1);

307 
node
 = (
Tî«ryNode
 *Ë
fNodeSèck
.
	`push
“ode->
high
, 
°©us
);

308 
whîe
 = (
SèckBønch
Ë
fBønchSèck
.
	`push
(
kLessTh™
, 
°©us
);

311 
kD⁄e
:

312 
fNodeSèck
.
	`p›
();

313 
fBønchSèck
.
	`p›i
();

314 
node
 = (
Tî«ryNode
 *Ë
fNodeSèck
.
	`≥ek
();

315 
whîe
 = (
SèckBønch
Ë
fBønchSèck
.
	`≥eki
();

318  
NULL
;

321  
NULL
;

322 
	}
}

325 
vútuÆ
 
öt32_t
 
	$cou¡
(
UEº‹Code
 &
°©us
) const {

326 
MuèbÀTrõEnumî©i⁄
 
	`cou¡î
(
fRoŸ
, 
°©us
);

327 
öt32_t
 
ªsu…
 = 0;

328 
cou¡î
.
	`¢ext
(
°©us
Ë!
NULL
 && 
	`U_SUCCESS
(status)) {

329 ++
ªsu…
;

331  
ªsu…
;

332 
	}
}

334 
vútuÆ
 
	$ª£t
(
UEº‹Code
 &
°©us
) {

335 
fNodeSèck
.
	`ªmoveAŒEÀmíts
();

336 
fBønchSèck
.
	`ªmoveAŒEÀmíts
();

337 
fNodeSèck
.
	`push
(
fRoŸ
, 
°©us
);

338 
fBønchSèck
.
	`push
(
kLessTh™
, 
°©us
);

339 
uni°r
.
	`ªmove
();

340 
	}
}

343 
	$UOBJECT_DEFINE_RTTI_IMPLEMENTATION
(
MuèbÀTrõEnumî©i⁄
)

345 
SåögEnumî©i⁄
 *

346 
MuèbÀTrõDi˘i⁄¨y
::
	$›íW‹ds
–
UEº‹Code
 &
°©us
 ) const {

347 i‡(
	`U_FAILURE
(
°©us
)) {

348  
NULL
;

350  
√w
 
	`MuèbÀTrõEnumî©i⁄
(
fTrõ
, 
°©us
);

351 
	}
}

357 
	sCom∑˘TrõHódî
 {

358 
uöt32_t
 
	msize
;

359 
uöt32_t
 
	mmagic
;

360 
uöt16_t
 
	mnodeCou¡
;

361 
uöt16_t
 
	mroŸ
;

362 
uöt32_t
 
	moff£ts
[1];

371 
	sCom∑˘TrõNode
 {

372 
uöt16_t
 
	mÊagscou¡
;

375 
	eCom∑˘TrõNodeFœgs
 {

376 
	mkVîtiˇlNode
 = 0x1000,

377 
	mkP¨ítEndsW‹d
 = 0x2000,

378 
	mkRe£rvedFœg1
 = 0x4000,

379 
	mkRe£rvedFœg2
 = 0x8000,

380 
	mkCou¡Mask
 = 0x0FFF,

381 
	mkFœgMask
 = 0xF000

386 
	sCom∑˘TrõH‹iz⁄èlE¡ry
 {

387 
uöt16_t
 
	mch
;

388 
uöt16_t
 
	mequÆ
;

394 
	sCom∑˘TrõH‹iz⁄èlNode
 {

395 
uöt16_t
 
	mÊagscou¡
;

396 
Com∑˘TrõH‹iz⁄èlE¡ry
 
	míåõs
[1];

399 
	sCom∑˘TrõVîtiˇlNode
 {

400 
uöt16_t
 
	mÊagscou¡
;

401 
uöt16_t
 
	mequÆ
;

402 
uöt16_t
 
	mch¨s
[1];

406 
	#COMPACT_TRIE_MAGIC_1
 0x44696301

	)

408 
	gCom∑˘TrõDi˘i⁄¨y
::
	$Com∑˘TrõDi˘i⁄¨y
(
UD©aMem‹y
 *
d©aObj
,

409 
UEº‹Code
 &
°©us
 )

410 : 
	$fUD©a
(
d©aObj
)

412 
fD©a
 = (c⁄° 
Com∑˘TrõHódî
 *Ë
	`ud©a_gëMem‹y
(
d©aObj
);

413 
fOwnD©a
 = 
FALSE
;

414 i‡(
fD©a
->
magic
 !
COMPACT_TRIE_MAGIC_1
) {

415 
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

416 
fD©a
 = 
NULL
;

418 
	}
}

419 
	gCom∑˘TrõDi˘i⁄¨y
::
	$Com∑˘TrõDi˘i⁄¨y
–c⁄° *
d©a
,

420 
UEº‹Code
 &
°©us
 )

421 : 
	$fUD©a
(
NULL
)

423 
fD©a
 = (c⁄° 
Com∑˘TrõHódî
 *Ë
d©a
;

424 
fOwnD©a
 = 
FALSE
;

425 i‡(
fD©a
->
magic
 !
COMPACT_TRIE_MAGIC_1
) {

426 
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

427 
fD©a
 = 
NULL
;

429 
	}
}

431 
	gCom∑˘TrõDi˘i⁄¨y
::
	$Com∑˘TrõDi˘i⁄¨y
–c⁄° 
MuèbÀTrõDi˘i⁄¨y
 &
di˘
,

432 
UEº‹Code
 &
°©us
 )

433 : 
	$fUD©a
(
NULL
)

435 
fD©a
 = 
	`com∑˘MuèbÀTrõDi˘i⁄¨y
(
di˘
, 
°©us
);

436 
fOwnD©a
 = !
	`U_FAILURE
(
°©us
);

437 
	}
}

439 
	gCom∑˘TrõDi˘i⁄¨y
::~
	$Com∑˘TrõDi˘i⁄¨y
() {

440 i‡(
fOwnD©a
) {

441 
	`u¥v_‰ì
((*)
fD©a
);

443 i‡(
fUD©a
) {

444 
	`ud©a_˛o£
(
fUD©a
);

446 
	}
}

448 
uöt32_t


449 
	gCom∑˘TrõDi˘i⁄¨y
::
	$d©aSize
() const {

450  
fD©a
->
size
;

451 
	}
}

454 
	gCom∑˘TrõDi˘i⁄¨y
::
	$d©a
() const {

455  
fD©a
;

456 
	}
}

459 
ölöe
 c⁄° 
Com∑˘TrõNode
 *

460 
	$gëCom∑˘Node
(c⁄° 
Com∑˘TrõHódî
 *
hódî
, 
uöt16_t
 
node
) {

461  (c⁄° 
Com∑˘TrõNode
 *)((c⁄° 
uöt8_t
 *)
hódî
 + hódî->
off£ts
[
node
]);

462 
	}
}

464 
öt32_t


465 
	gCom∑˘TrõDi˘i⁄¨y
::
	$m©ches
–
UText
 *
ãxt
,

466 
öt32_t
 
maxLígth
,

467 
öt32_t
 *
Àngths
,

468 &
cou¡
,

469 
limô
 ) const {

471 c⁄° 
Com∑˘TrõNode
 *
node
 = 
	`gëCom∑˘Node
(
fD©a
, fD©a->
roŸ
);

472 
mycou¡
 = 0;

474 
UCh¨
 
uc
 = 
	`uãxt_cuºít32
(
ãxt
);

475 
i
 = 0;

477 
node
 !
NULL
) {

479 i‡(
limô
 > 0 && (
node
->
Êagscou¡
 & 
kP¨ítEndsW‹d
)) {

480 
Àngths
[
mycou¡
++] = 
i
;

481 --
limô
;

486 i‡(
i
 >
maxLígth
) {

490 
nodeCou¡
 = (
node
->
Êagscou¡
 & 
kCou¡Mask
);

491 i‡(
nodeCou¡
 == 0) {

495 i‡(
node
->
Êagscou¡
 & 
kVîtiˇlNode
) {

497 c⁄° 
Com∑˘TrõVîtiˇlNode
 *
vnode
 = (c⁄° Com∑˘TrõVîtiˇlNodê*)
node
;

498 
j
 = 0; j < 
nodeCou¡
 && 
i
 < 
maxLígth
; ++j) {

499 i‡(
uc
 !
vnode
->
ch¨s
[
j
]) {

501 
exô
;

503 
	`uãxt_√xt32
(
ãxt
);

504 
uc
 = 
	`uãxt_cuºít32
(
ãxt
);

505 ++
i
;

510 
node
 = 
	`gëCom∑˘Node
(
fD©a
, 
vnode
->
equÆ
);

514 c⁄° 
Com∑˘TrõH‹iz⁄èlNode
 *
hnode
 = (c⁄° Com∑˘TrõH‹iz⁄èlNodê*)
node
;

515 
low
 = 0;

516 
high
 = 
nodeCou¡
-1;

517 
middÀ
;

518 
node
 = 
NULL
;

519 
high
 >
low
) {

520 
middÀ
 = (
high
+
low
)/2;

521 i‡(
uc
 =
hnode
->
íåõs
[
middÀ
].
ch
) {

523 
node
 = 
	`gëCom∑˘Node
(
fD©a
, 
hnode
->
íåõs
[
middÀ
].
equÆ
);

524 
	`uãxt_√xt32
(
ãxt
);

525 
uc
 = 
	`uãxt_cuºít32
(
ãxt
);

526 ++
i
;

529 i‡(
uc
 < 
hnode
->
íåõs
[
middÀ
].
ch
) {

530 
high
 = 
middÀ
-1;

533 
low
 = 
middÀ
+1;

538 
exô
:

539 
cou¡
 = 
mycou¡
;

540  
i
;

541 
	}
}

544 ˛as†
	cCom∑˘TrõEnumî©i⁄
 : 
public
 
SåögEnumî©i⁄
 {

545 
¥iv©e
:

546 
UVe˘‹32
 
fNodeSèck
;

547 
UVe˘‹32
 
	mfIndexSèck
;

548 c⁄° 
Com∑˘TrõHódî
 *
	mfHódî
;

550 
	mpublic
:

551 
UCœssID
 
U_EXPORT2
 
gëSèticCœssID
();

552 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const;

553 
public
:

554 
	$Com∑˘TrõEnumî©i⁄
(c⁄° 
Com∑˘TrõHódî
 *
hódî
, 
UEº‹Code
 &
°©us
)

555 : 
	`fNodeSèck
(
°©us
), 
	$fIndexSèck
(
°©us
) {

556 
fHódî
 = 
hódî
;

557 
fNodeSèck
.
	`push
(
hódî
->
roŸ
, 
°©us
);

558 
fIndexSèck
.
	`push
(0, 
°©us
);

559 
uni°r
.
	`ªmove
();

562 
vútuÆ
 ~
	$Com∑˘TrõEnumî©i⁄
() {

563 
	}
}

565 
vútuÆ
 
SåögEnumî©i⁄
 *
	$˛⁄e
() const {

566 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

567  
√w
 
	`Com∑˘TrõEnumî©i⁄
(
fHódî
, 
°©us
);

568 
	}
}

570 
vútuÆ
 c⁄° 
UnicodeSåög
 * 
¢ext
(
UEº‹Code
 &
°©us
);

573 
vútuÆ
 
öt32_t
 
	$cou¡
(
UEº‹Code
 &
°©us
) const {

574 
Com∑˘TrõEnumî©i⁄
 
	`cou¡î
(
fHódî
, 
°©us
);

575 
öt32_t
 
ªsu…
 = 0;

576 
cou¡î
.
	`¢ext
(
°©us
Ë!
NULL
 && 
	`U_SUCCESS
(status)) {

577 ++
ªsu…
;

579  
ªsu…
;

580 
	}
}

582 
vútuÆ
 
	$ª£t
(
UEº‹Code
 &
°©us
) {

583 
fNodeSèck
.
	`ªmoveAŒEÀmíts
();

584 
fIndexSèck
.
	`ªmoveAŒEÀmíts
();

585 
fNodeSèck
.
	`push
(
fHódî
->
roŸ
, 
°©us
);

586 
fIndexSèck
.
	`push
(0, 
°©us
);

587 
uni°r
.
	`ªmove
();

588 
	}
}

591 
	$UOBJECT_DEFINE_RTTI_IMPLEMENTATION
(
Com∑˘TrõEnumî©i⁄
)

593 c⁄° 
UnicodeSåög
 *

594 
Com∑˘TrõEnumî©i⁄
::
	$¢ext
(
UEº‹Code
 &
°©us
) {

595 i‡(
fNodeSèck
.
	`em±y
(Ë|| 
	`U_FAILURE
(
°©us
)) {

596  
NULL
;

598 c⁄° 
Com∑˘TrõNode
 *
node
 = 
	`gëCom∑˘Node
(
fHódî
, 
fNodeSèck
.
	`≥eki
());

599 
whîe
 = 
fIndexSèck
.
	`≥eki
();

600 !
fNodeSèck
.
	`em±y
(Ë&& 
	`U_SUCCESS
(
°©us
)) {

601 
nodeCou¡
 = (
node
->
Êagscou¡
 & 
kCou¡Mask
);

602 
UBoﬁ
 
goögDown
 = 
FALSE
;

603 i‡(
nodeCou¡
 == 0) {

605 
fNodeSèck
.
	`p›i
();

606 
fIndexSèck
.
	`p›i
();

607 
node
 = 
	`gëCom∑˘Node
(
fHódî
, 
fNodeSèck
.
	`≥eki
());

608 
whîe
 = 
fIndexSèck
.
	`≥eki
();

610 i‡(
node
->
Êagscou¡
 & 
kVîtiˇlNode
) {

612 c⁄° 
Com∑˘TrõVîtiˇlNode
 *
vnode
 = (c⁄° Com∑˘TrõVîtiˇlNodê*)
node
;

613 i‡(
whîe
 == 0) {

615 
uni°r
.
	`≠≥nd
((c⁄° 
UCh¨
 *)
vnode
->
ch¨s
, (
öt32_t
Ë
nodeCou¡
);

616 
fIndexSèck
.
	`£tEÀmítAt
(1, fIndexSèck.
	`size
()-1);

617 
node
 = 
	`gëCom∑˘Node
(
fHódî
, 
fNodeSèck
.
	`push
(
vnode
->
equÆ
, 
°©us
));

618 
whîe
 = 
fIndexSèck
.
	`push
(0, 
°©us
);

619 
goögDown
 = 
TRUE
;

623 
uni°r
.
	`åunˇã
(uni°r.
	`Àngth
()-
nodeCou¡
);

624 
fNodeSèck
.
	`p›i
();

625 
fIndexSèck
.
	`p›i
();

626 
node
 = 
	`gëCom∑˘Node
(
fHódî
, 
fNodeSèck
.
	`≥eki
());

627 
whîe
 = 
fIndexSèck
.
	`≥eki
();

632 c⁄° 
Com∑˘TrõH‹iz⁄èlNode
 *
hnode
 = (c⁄° Com∑˘TrõH‹iz⁄èlNodê*)
node
;

633 i‡(
whîe
 > 0) {

635 
uni°r
.
	`åunˇã
(uni°r.
	`Àngth
()-1);

637 i‡(
whîe
 < 
nodeCou¡
) {

639 
uni°r
.
	`≠≥nd
((
UCh¨
)
hnode
->
íåõs
[
whîe
].
ch
);

640 
fIndexSèck
.
	`£tEÀmítAt
(
whîe
+1, fIndexSèck.
	`size
()-1);

641 
node
 = 
	`gëCom∑˘Node
(
fHódî
, 
fNodeSèck
.
	`push
(
hnode
->
íåõs
[
whîe
].
equÆ
, 
°©us
));

642 
whîe
 = 
fIndexSèck
.
	`push
(0, 
°©us
);

643 
goögDown
 = 
TRUE
;

647 
fNodeSèck
.
	`p›i
();

648 
fIndexSèck
.
	`p›i
();

649 
node
 = 
	`gëCom∑˘Node
(
fHódî
, 
fNodeSèck
.
	`≥eki
());

650 
whîe
 = 
fIndexSèck
.
	`≥eki
();

655 i‡(
goögDown
 && (
node
->
Êagscou¡
 & 
kP¨ítEndsW‹d
)) {

656  &
uni°r
;

659  
NULL
;

660 
	}
}

662 
SåögEnumî©i⁄
 *

663 
	gCom∑˘TrõDi˘i⁄¨y
::
	$›íW‹ds
–
UEº‹Code
 &
°©us
 ) const {

664 i‡(
	`U_FAILURE
(
°©us
)) {

665  
NULL
;

667  
√w
 
	`Com∑˘TrõEnumî©i⁄
(
fD©a
, 
°©us
);

668 
	}
}

676 ˛as†
	cBuûdCom∑˘TrõNode
: 
public
 
UMem‹y
 {

677 
public
:

678 
UBoﬁ
 
fP¨ítEndsW‹d
;

679 
UBoﬁ
 
	mfVîtiˇl
;

680 
UBoﬁ
 
	mfHasDu∂iˇã
;

681 
öt32_t
 
	mfNodeID
;

682 
UnicodeSåög
 
	mfCh¨s
;

684 
	mpublic
:

685 
	$BuûdCom∑˘TrõNode
(
UBoﬁ
 
∑ª¡EndsW‹d
, UBoﬁ 
vîtiˇl
, 
USèck
 &
nodes
, 
UEº‹Code
 &
°©us
) {

686 
fP¨ítEndsW‹d
 = 
∑ª¡EndsW‹d
;

687 
fHasDu∂iˇã
 = 
FALSE
;

688 
fVîtiˇl
 = 
vîtiˇl
;

689 
fNodeID
 = 
nodes
.
	`size
();

690 
nodes
.
	`push
(
this
, 
°©us
);

693 
vútuÆ
 ~
	$BuûdCom∑˘TrõNode
() {

694 
	}
}

696 
vútuÆ
 
uöt32_t
 
	$size
() {

697  (
uöt16_t
);

698 
	}
}

700 
vútuÆ
 
	$wrôe
(
uöt8_t
 *
byãs
, 
uöt32_t
 &
off£t
, c⁄° 
UVe˘‹32
 & ) {

702 *((
uöt16_t
 *)(
byãs
+
off£t
)Ë(
fCh¨s
.
	`Àngth
(Ë& 
kCou¡Mask
)

703 | (
fVîtiˇl
 ? 
kVîtiˇlNode
 : 0Ë| (
fP¨ítEndsW‹d
 ? 
kP¨ítEndsW‹d
 : 0 );

704 
off£t
 +(
uöt16_t
);

705 
	}
}

708 ˛as†
	cBuûdCom∑˘TrõH‹iz⁄èlNode
: 
public
 
BuûdCom∑˘TrõNode
 {

709 
public
:

710 
USèck
 
fLöks
;

712 
	mpublic
:

713 
	$BuûdCom∑˘TrõH‹iz⁄èlNode
(
UBoﬁ
 
∑ª¡EndsW‹d
, 
USèck
 &
nodes
, 
UEº‹Code
 &
°©us
)

714 : 
	`BuûdCom∑˘TrõNode
(
∑ª¡EndsW‹d
, 
FALSE
, 
nodes
, 
°©us
), 
	$fLöks
(
°©us
) {

717 
vútuÆ
 ~
	$BuûdCom∑˘TrõH‹iz⁄èlNode
() {

718 
	}
}

720 
vútuÆ
 
uöt32_t
 
	$size
() {

721  
	`off£tof
(
Com∑˘TrõH‹iz⁄èlNode
,
íåõs
) +

722 (
fCh¨s
.
	`Àngth
()*(
Com∑˘TrõH‹iz⁄èlE¡ry
));

723 
	}
}

725 
vútuÆ
 
	$wrôe
(
uöt8_t
 *
byãs
, 
uöt32_t
 &
off£t
, c⁄° 
UVe˘‹32
 &
å™¶©e
) {

726 
BuûdCom∑˘TrõNode
::
	`wrôe
(
byãs
, 
off£t
, 
å™¶©e
);

727 
öt32_t
 
cou¡
 = 
fCh¨s
.
	`Àngth
();

728 
öt32_t
 
i
 = 0; i < 
cou¡
; ++i) {

729 
Com∑˘TrõH‹iz⁄èlE¡ry
 *
íåy
 = (Com∑˘TrõH‹iz⁄èlE¡ry *)(
byãs
+
off£t
);

730 
íåy
->
ch
 = 
fCh¨s
[
i
];

731 
íåy
->
equÆ
 = 
å™¶©e
.
	`ñemítAti
(((
BuûdCom∑˘TrõNode
 *)
fLöks
[
i
])->
fNodeID
);

732 #ifde‡
DEBUG_TRIE_DICT


733 i‡(
íåy
->
equÆ
 == 0) {

734 
	`Ârötf
(
°dîr
, "ERROR: horizontalÜink %d,ÜogicalÇode %d mapsÅoÖhysicalÇode zero\n",

735 
i
, ((
BuûdCom∑˘TrõNode
 *)
fLöks
[i])->
fNodeID
);

738 
off£t
 +(
Com∑˘TrõH‹iz⁄èlE¡ry
);

740 
	}
}

742 
	$addNode
(
UCh¨
 
ch
, 
BuûdCom∑˘TrõNode
 *
lök
, 
UEº‹Code
 &
°©us
) {

743 
fCh¨s
.
	`≠≥nd
(
ch
);

744 
fLöks
.
	`push
(
lök
, 
°©us
);

745 
	}
}

748 ˛as†
	cBuûdCom∑˘TrõVîtiˇlNode
: 
public
 
BuûdCom∑˘TrõNode
 {

749 
public
:

750 
BuûdCom∑˘TrõNode
 *
fEquÆ
;

752 
	mpublic
:

753 
	$BuûdCom∑˘TrõVîtiˇlNode
(
UBoﬁ
 
∑ª¡EndsW‹d
, 
USèck
 &
nodes
, 
UEº‹Code
 &
°©us
)

754 : 
	$BuûdCom∑˘TrõNode
(
∑ª¡EndsW‹d
, 
TRUE
, 
nodes
, 
°©us
) {

755 
fEquÆ
 = 
NULL
;

758 
vútuÆ
 ~
	$BuûdCom∑˘TrõVîtiˇlNode
() {

759 
	}
}

761 
vútuÆ
 
uöt32_t
 
	$size
() {

762  
	`off£tof
(
Com∑˘TrõVîtiˇlNode
,
ch¨s
Ë+ (
fCh¨s
.
	`Àngth
()*(
uöt16_t
));

763 
	}
}

765 
vútuÆ
 
	$wrôe
(
uöt8_t
 *
byãs
, 
uöt32_t
 &
off£t
, c⁄° 
UVe˘‹32
 &
å™¶©e
) {

766 
Com∑˘TrõVîtiˇlNode
 *
node
 = (Com∑˘TrõVîtiˇlNodê*)(
byãs
+
off£t
);

767 
BuûdCom∑˘TrõNode
::
	`wrôe
(
byãs
, 
off£t
, 
å™¶©e
);

768 
node
->
equÆ
 = 
å™¶©e
.
	`ñemítAti
(
fEquÆ
->
fNodeID
);

769 
off£t
 +(
node
->
equÆ
);

770 #ifde‡
DEBUG_TRIE_DICT


771 i‡(
node
->
equÆ
 == 0) {

772 
	`Ârötf
(
°dîr
, "ERROR: verticalÜink,ÜogicalÇode %d mapsÅoÖhysicalÇode zero\n",

773 
fEquÆ
->
fNodeID
);

776 
fCh¨s
.
	`exåa˘
(0, fCh¨s.
	`Àngth
(), (
UCh¨
 *)
node
->
ch¨s
);

777 
off£t
 +(
uöt16_t
)*
fCh¨s
.
	`Àngth
();

778 
	}
}

780 
	$addCh¨
(
UCh¨
 
ch
) {

781 
fCh¨s
.
	`≠≥nd
(
ch
);

782 
	}
}

784 
	$£tLök
(
BuûdCom∑˘TrõNode
 *
node
) {

785 
fEquÆ
 = 
node
;

786 
	}
}

790 
wÆkH‹iz⁄èl
(c⁄° 
Tî«ryNode
 *
node
,

791 
BuûdCom∑˘TrõH‹iz⁄èlNode
 *
buûdög
,

792 
USèck
 &
nodes
,

793 
UEº‹Code
 &
°©us
);

797 
BuûdCom∑˘TrõNode
 *

798 
	$com∑˘O√Node
(c⁄° 
Tî«ryNode
 *
node
, 
UBoﬁ
 
∑ª¡EndsW‹d
, 
USèck
 &
nodes
, 
UEº‹Code
 &
°©us
) {

799 i‡(
	`U_FAILURE
(
°©us
)) {

800  
NULL
;

802 
BuûdCom∑˘TrõNode
 *
ªsu…
 = 
NULL
;

803 
UBoﬁ
 
h‹iz⁄èl
 = (
node
->
low
 !
NULL
 ||Çode->
high
 != NULL);

804 i‡(
h‹iz⁄èl
) {

805 
BuûdCom∑˘TrõH‹iz⁄èlNode
 *
hResu…
 =

806 
√w
 
	`BuûdCom∑˘TrõH‹iz⁄èlNode
(
∑ª¡EndsW‹d
, 
nodes
, 
°©us
);

807 i‡(
hResu…
 =
NULL
) {

808 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

809  
NULL
;

811 i‡(
	`U_SUCCESS
(
°©us
)) {

812 
	`wÆkH‹iz⁄èl
(
node
, 
hResu…
, 
nodes
, 
°©us
);

813 
ªsu…
 = 
hResu…
;

817 
BuûdCom∑˘TrõVîtiˇlNode
 *
vResu…
 =

818 
√w
 
	`BuûdCom∑˘TrõVîtiˇlNode
(
∑ª¡EndsW‹d
, 
nodes
, 
°©us
);

819 i‡(
vResu…
 =
NULL
) {

820 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

822 i‡(
	`U_SUCCESS
(
°©us
)) {

823 
UBoﬁ
 
ídsW‹d
 = 
FALSE
;

826 
vResu…
->
	`addCh¨
(
node
->
ch
);

827 
ídsW‹d
 = (
node
->
Êags
 & 
kEndsW‹d
) != 0;

828 
node
 =Çode->
equÆ
;

830 
node
 !
NULL
 && !
ídsW‹d
 &&Çode->
low
 =NULL &&Çode->
high
 == NULL);

831 i‡(
node
 =
NULL
) {

832 i‡(!
ídsW‹d
) {

833 
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

836 
vResu…
->
	`£tLök
((
BuûdCom∑˘TrõNode
 *)
nodes
[1]);

840 
vResu…
->
	`£tLök
(
	`com∑˘O√Node
(
node
, 
ídsW‹d
, 
nodes
, 
°©us
));

842 
ªsu…
 = 
vResu…
;

845  
ªsu…
;

846 
	}
}

851 
	$wÆkH‹iz⁄èl
(c⁄° 
Tî«ryNode
 *
node
,

852 
BuûdCom∑˘TrõH‹iz⁄èlNode
 *
buûdög
,

853 
USèck
 &
nodes
,

854 
UEº‹Code
 &
°©us
) {

855 
	`U_SUCCESS
(
°©us
Ë&& 
node
 !
NULL
) {

856 i‡(
node
->
low
 !
NULL
) {

857 
	`wÆkH‹iz⁄èl
(
node
->
low
, 
buûdög
, 
nodes
, 
°©us
);

859 
BuûdCom∑˘TrõNode
 *
lök
 = 
NULL
;

860 i‡(
node
->
equÆ
 !
NULL
) {

861 
lök
 = 
	`com∑˘O√Node
(
node
->
equÆ
, (node->
Êags
 & 
kEndsW‹d
Ë!0, 
nodes
, 
°©us
);

863 i‡(
node
->
Êags
 & 
kEndsW‹d
) {

864 
lök
 = (
BuûdCom∑˘TrõNode
 *)
nodes
[1];

866 i‡(
	`U_SUCCESS
(
°©us
Ë&& 
lök
 !
NULL
) {

867 
buûdög
->
	`addNode
(
node
->
ch
, 
lök
, 
°©us
);

873 
node
 =Çode->
high
;

875 
	}
}

877 
U_NAMESPACE_END


878 
U_NAMESPACE_USE


879 
U_CDECL_BEGIN


880 
öt32_t
 
U_CALLCONV


881 
	$_s‹tBuûdNodes
(c⁄° * , c⁄° *
voidl
, c⁄° *
voidr
) {

882 
BuûdCom∑˘TrõNode
 *
À·
 = *(BuûdCom∑˘TrõNodê**)
voidl
;

883 
BuûdCom∑˘TrõNode
 *
right
 = *(BuûdCom∑˘TrõNodê**)
voidr
;

885 i‡(
À·
 =
right
) {

889 i‡(
À·
->
fVîtiˇl
 !
right
->fVertical) {

890  
À·
->
fVîtiˇl
 - 
right
->fVertical;

893 i‡(
À·
->
fP¨ítEndsW‹d
 !
right
->fParentEndsWord) {

894  
À·
->
fP¨ítEndsW‹d
 - 
right
->fParentEndsWord;

897 
öt32_t
 
ªsu…
 = 
À·
->
fCh¨s
.
	`com∑ª
(
right
->fChars);

898 i‡(
ªsu…
 != 0) {

899  
ªsu…
;

902 i‡(
À·
->
fVîtiˇl
) {

903 
ªsu…
 = ((
BuûdCom∑˘TrõVîtiˇlNode
 *)
À·
)->
fEquÆ
->
fNodeID


904 - ((
BuûdCom∑˘TrõVîtiˇlNode
 *)
right
)->
fEquÆ
->
fNodeID
;

911 
BuûdCom∑˘TrõH‹iz⁄èlNode
 *
hÀ·
, *
hright
;

912 
hÀ·
 = (
BuûdCom∑˘TrõH‹iz⁄èlNode
 *)
À·
;

913 
hright
 = (
BuûdCom∑˘TrõH‹iz⁄èlNode
 *)
right
;

914 
öt32_t
 
cou¡
 = 
hÀ·
->
fLöks
.
	`size
();

915 
öt32_t
 
i
 = 0; i < 
cou¡
 && 
ªsu…
 == 0; ++i) {

916 
ªsu…
 = ((
BuûdCom∑˘TrõNode
 *)(
hÀ·
->
fLöks
[
i
]))->
fNodeID
 -

917 ((
BuûdCom∑˘TrõNode
 *)(
hright
->
fLöks
[
i
]))->
fNodeID
;

921 i‡(
ªsu…
 == 0) {

922 
À·
->
fHasDu∂iˇã
 = 
TRUE
;

923 
right
->
fHasDu∂iˇã
 = 
TRUE
;

925  
ªsu…
;

926 
	}
}

927 
U_CDECL_END


928 
U_NAMESPACE_BEGIN


930 
	$cﬂÀs˚Du∂iˇãs
(
USèck
 &
nodes
, 
UEº‹Code
 &
°©us
) {

932 i‡(
	`U_FAILURE
(
°©us
)) {

935 
öt32_t
 
size
 = 
nodes
.
	`size
();

936 **
¨øy
 = (**)
	`u¥v_mÆloc
((*)*
size
);

937 i‡(
¨øy
 =
NULL
) {

938 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

941 (Ë
nodes
.
	`toAºay
(
¨øy
);

944 
öt32_t
 
du≥s
 = 0;

945 
∑ssCou¡
 = 0;

946 #ifde‡
DEBUG_TRIE_DICT


947 
tŸÆDu≥s
 = 0;

950 
BuûdCom∑˘TrõNode
 *
node
;

951 
BuûdCom∑˘TrõNode
 *
fú°
 = 
NULL
;

952 
BuûdCom∑˘TrõNode
 **
p
;

953 
BuûdCom∑˘TrõNode
 **
pFú°
 = 
NULL
;

954 
öt32_t
 
cou¡î
 = 
size
 - 2;

969 
	`u¥v_s‹tAºay
(
¨øy
+2, 
cou¡î
, (*), 
_s‹tBuûdNodes
, 
NULL
, (
∑ssCou¡
 > 0), &
°©us
);

970 
du≥s
 = 0;

971 
p
 = (
BuûdCom∑˘TrõNode
 **)
¨øy
 + 2; 
cou¡î
 > 0; --counter, ++p) {

972 
node
 = *
p
;

973 i‡(
node
->
fHasDu∂iˇã
) {

974 i‡(
fú°
 =
NULL
) {

975 
fú°
 = 
node
;

976 
pFú°
 = 
p
;

978 i‡(
	`_s‹tBuûdNodes
(
NULL
, 
pFú°
, 
p
) != 0) {

980 
fú°
 = 
node
;

981 
pFú°
 = 
p
;

983 i‡(
node
->
fNodeID
 !
fú°
->fNodeID) {

985 
node
->
fNodeID
 = 
fú°
->fNodeID;

986 
du≥s
 += 1;

991 
fú°
 = 
NULL
;

992 
pFú°
 = 
NULL
;

995 
∑ssCou¡
 += 1;

996 #ifde‡
DEBUG_TRIE_DICT


997 
tŸÆDu≥s
 +
du≥s
;

998 
	`Ârötf
(
°dîr
, "TrõÇodêdu≥ÑemovÆ,Öas†%d: %dÇode†ègged\n", 
∑ssCou¡
, 
du≥s
);

1001 
du≥s
 > 0);

1002 #ifde‡
DEBUG_TRIE_DICT


1003 
	`Ârötf
(
°dîr
, "TrõÇodêdu≥ÑemovÆ com∂ëe: %dÅagged i¿%dÖas£s\n", 
tŸÆDu≥s
, 
∑ssCou¡
);

1007 
	`u¥v_‰ì
(
¨øy
);

1008 
	}
}

1010 
U_NAMESPACE_END


1011 
U_CDECL_BEGIN


1012 
U_CALLCONV
 
	$_dñëeBuûdNode
(*
obj
) {

1013 
	`dñëe
 (
BuûdCom∑˘TrõNode
 *Ë
obj
;

1014 
	}
}

1015 
U_CDECL_END


1016 
U_NAMESPACE_BEGIN


1018 
Com∑˘TrõHódî
 *

1019 
	gCom∑˘TrõDi˘i⁄¨y
::
	$com∑˘MuèbÀTrõDi˘i⁄¨y
–c⁄° 
MuèbÀTrõDi˘i⁄¨y
 &
di˘
,

1020 
UEº‹Code
 &
°©us
 ) {

1021 i‡(
	`U_FAILURE
(
°©us
)) {

1022  
NULL
;

1024 #ifde‡
DEBUG_TRIE_DICT


1025 
tms
 
timög
;

1026 
tms
 
¥evious
;

1027 (Ë::
	`times
(&
¥evious
);

1029 
USèck
 
	`nodes
(
_dñëeBuûdNode
, 
NULL
, 
°©us
);

1032 
nodes
.
	`addEÀmít
((
öt32_t
)0, 
°©us
);

1037 i‡(
	`U_FAILURE
(
°©us
)) {

1038  
NULL
;

1040 
BuûdCom∑˘TrõNode
 *
ãrmöÆ
 = 
√w
 
	`BuûdCom∑˘TrõNode
(
TRUE
, 
FALSE
, 
nodes
, 
°©us
);

1041 i‡(
ãrmöÆ
 =
NULL
) {

1042 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

1047 
BuûdCom∑˘TrõNode
 *
roŸ
 = 
	`com∑˘O√Node
(
di˘
.
fTrõ
, 
FALSE
, 
nodes
, 
°©us
);

1048 #ifde‡
DEBUG_TRIE_DICT


1049 (Ë::
	`times
(&
timög
);

1050 
	`Ârötf
(
°dîr
, "CompactÅrie built, %dÇodes,Åime user %f system %f\n",

1051 
nodes
.
	`size
(), ()(
timög
.
tms_utime
-
¥evious
.tms_utime)/
CLK_TCK
,

1052 ()(
timög
.
tms_°ime
-
¥evious
.tms_°ime)/
CLK_TCK
);

1053 
¥evious
 = 
timög
;

1057 
	`cﬂÀs˚Du∂iˇãs
(
nodes
, 
°©us
);

1058 #ifde‡
DEBUG_TRIE_DICT


1059 (Ë::
	`times
(&
timög
);

1060 
	`Ârötf
(
°dîr
, "Duplicates coalesced,Åime user %f system %f\n",

1061 ()(
timög
.
tms_utime
-
¥evious
.tms_utime)/
CLK_TCK
,

1062 ()(
timög
.
tms_°ime
-
¥evious
.tms_°ime)/
CLK_TCK
);

1063 
¥evious
 = 
timög
;

1068 
uöt32_t
 
tŸÆSize
 = 
	`off£tof
(
Com∑˘TrõHódî
,
off£ts
);

1069 
öt32_t
 
cou¡
 = 
nodes
.
	`size
();

1070 
öt32_t
 
nodeCou¡
 = 1;

1071 
BuûdCom∑˘TrõNode
 *
node
;

1072 
öt32_t
 
i
;

1073 
UVe˘‹32
 
	`å™¶©e
(
cou¡
, 
°©us
);

1074 
å™¶©e
.
	`push
(0, 
°©us
);

1076 i‡(
	`U_FAILURE
(
°©us
)) {

1077  
NULL
;

1080 
i
 = 1; i < 
cou¡
; ++i) {

1081 
node
 = (
BuûdCom∑˘TrõNode
 *)
nodes
[
i
];

1082 i‡(
node
->
fNodeID
 =
i
) {

1084 i‡(
i
 >
å™¶©e
.
	`size
()) {

1086 
å™¶©e
.
	`£tSize
(
i
+1);

1088 
å™¶©e
.
	`£tEÀmítAt
(
nodeCou¡
++, 
i
);

1089 
tŸÆSize
 +
node
->
	`size
();

1094 i‡(
nodeCou¡
 > 0x10000) {

1095 
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1096  
NULL
;

1100 
tŸÆSize
 +
nodeCou¡
*(
uöt32_t
);

1101 #ifde‡
DEBUG_TRIE_DICT


1102 (Ë::
	`times
(&
timög
);

1103 
	`Ârötf
(
°dîr
, "Sizes/mapping done,Åime user %f system %f\n",

1104 ()(
timög
.
tms_utime
-
¥evious
.tms_utime)/
CLK_TCK
,

1105 ()(
timög
.
tms_°ime
-
¥evious
.tms_°ime)/
CLK_TCK
);

1106 
¥evious
 = 
timög
;

1107 
	`Ârötf
(
°dîr
, "%dÇodes, %d unique, %d byãs\n", 
nodes
.
	`size
(), 
nodeCou¡
, 
tŸÆSize
);

1109 
uöt8_t
 *
byãs
 = (uöt8_à*)
	`u¥v_mÆloc
(
tŸÆSize
);

1110 i‡(
byãs
 =
NULL
) {

1111 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

1112  
NULL
;

1115 
Com∑˘TrõHódî
 *
hódî
 = (Com∑˘TrõHódî *)
byãs
;

1116 
hódî
->
size
 = 
tŸÆSize
;

1117 
hódî
->
nodeCou¡
 =ÇodeCount;

1118 
hódî
->
off£ts
[0] = 0;

1119 
hódî
->
roŸ
 = 
å™¶©e
.
	`ñemítAti
‘oŸ->
fNodeID
);

1120 #ifde‡
DEBUG_TRIE_DICT


1121 i‡(
hódî
->
roŸ
 == 0) {

1122 
	`Ârötf
(
°dîr
, "ERROR:ÑoŸÇodê%dÅøn¶©êtÿphysiˇ»zîo\n", 
roŸ
->
fNodeID
);

1125 
uöt32_t
 
off£t
 = 
	`off£tof
(
Com∑˘TrõHódî
,
off£ts
)+(
nodeCou¡
*(uint32_t));

1126 
nodeCou¡
 = 1;

1128 
i
 = 1; i < 
cou¡
; ++i) {

1129 
node
 = (
BuûdCom∑˘TrõNode
 *)
nodes
[
i
];

1130 i‡(
node
->
fNodeID
 =
i
) {

1131 
hódî
->
off£ts
[
nodeCou¡
++] = 
off£t
;

1132 
node
->
	`wrôe
(
byãs
, 
off£t
, 
å™¶©e
);

1135 #ifde‡
DEBUG_TRIE_DICT


1136 (Ë::
	`times
(&
timög
);

1137 
	`Ârötf
(
°dîr
, "Trie built,Åime user %f system %f\n",

1138 ()(
timög
.
tms_utime
-
¥evious
.tms_utime)/
CLK_TCK
,

1139 ()(
timög
.
tms_°ime
-
¥evious
.tms_°ime)/
CLK_TCK
);

1140 
¥evious
 = 
timög
;

1141 
	`Ârötf
(
°dîr
, "FöÆ off£ài†%d\n", 
off£t
);

1144 
hCou¡
 = 0;

1145 
vCou¡
 = 0;

1146 
size_t
 
hSize
 = 0;

1147 
size_t
 
vSize
 = 0;

1148 
size_t
 
hIãmCou¡
 = 0;

1149 
size_t
 
vIãmCou¡
 = 0;

1150 
uöt32_t
 
¥eviousOff
 = 
off£t
;

1151 
uöt16_t
 
nodeIdx
 = 
nodeCou¡
-1;ÇodeIdx >= 2; --nodeIdx) {

1152 c⁄° 
Com∑˘TrõNode
 *
node
 = 
	`gëCom∑˘Node
(
hódî
, 
nodeIdx
);

1153 i‡(
node
->
Êagscou¡
 & 
kVîtiˇlNode
) {

1154 
vCou¡
 += 1;

1155 
vIãmCou¡
 +(
node
->
Êagscou¡
 & 
kCou¡Mask
);

1156 
vSize
 +
¥eviousOff
-
hódî
->
off£ts
[
nodeIdx
];

1159 
hCou¡
 += 1;

1160 
hIãmCou¡
 +(
node
->
Êagscou¡
 & 
kCou¡Mask
);

1161 
hSize
 +
¥eviousOff
-
hódî
->
off£ts
[
nodeIdx
];

1163 
¥eviousOff
 = 
hódî
->
off£ts
[
nodeIdx
];

1165 
	`Ârötf
(
°dîr
, "H‹iz⁄è»nodes: %dÅŸÆ,ávîagê%‡byã†wôh %‡ôems\n", 
hCou¡
,

1166 ()
hSize
/
hCou¡
, ()
hIãmCou¡
/hCount);

1167 
	`Ârötf
(
°dîr
, "Vîtiˇ»nodes: %dÅŸÆ,ávîagê%‡byã†wôh %‡ôems\n", 
vCou¡
,

1168 ()
vSize
/
vCou¡
, ()
vIãmCou¡
/vCount);

1171 i‡(
	`U_FAILURE
(
°©us
)) {

1172 
	`u¥v_‰ì
(
byãs
);

1173 
hódî
 = 
NULL
;

1176 
hódî
->
magic
 = 
COMPACT_TRIE_MAGIC_1
;

1178  
hódî
;

1179 
	}
}

1182 
Tî«ryNode
 *

1183 
u≈ackO√Node
–c⁄° 
Com∑˘TrõHódî
 *
hódî
, c⁄° 
Com∑˘TrõNode
 *
node
, 
UEº‹Code
 &
°©us
 );

1187 
Tî«ryNode
 *

1188 
	$u≈ackH‹iz⁄èlAºay
–c⁄° 
Com∑˘TrõHódî
 *
hódî
, c⁄° 
Com∑˘TrõH‹iz⁄èlE¡ry
 *
¨øy
,

1189 
low
, 
high
, 
UEº‹Code
 &
°©us
 ) {

1190 i‡(
	`U_FAILURE
(
°©us
Ë|| 
low
 > 
high
) {

1191  
NULL
;

1193 
middÀ
 = (
low
+
high
)/2;

1194 
Tî«ryNode
 *
ªsu…
 = 
√w
 
	`Tî«ryNode
(
¨øy
[
middÀ
].
ch
);

1195 i‡(
ªsu…
 =
NULL
) {

1196 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

1197  
NULL
;

1199 c⁄° 
Com∑˘TrõNode
 *
equÆ
 = 
	`gëCom∑˘Node
(
hódî
, 
¨øy
[
middÀ
].equal);

1200 i‡(
equÆ
->
Êagscou¡
 & 
kP¨ítEndsW‹d
) {

1201 
ªsu…
->
Êags
 |
kEndsW‹d
;

1203 
ªsu…
->
low
 = 
	`u≈ackH‹iz⁄èlAºay
(
hódî
, 
¨øy
,Üow, 
middÀ
-1, 
°©us
);

1204 
ªsu…
->
high
 = 
	`u≈ackH‹iz⁄èlAºay
(
hódî
, 
¨øy
, 
middÀ
+1, high, 
°©us
);

1205 
ªsu…
->
equÆ
 = 
	`u≈ackO√Node
(
hódî
,ÉquÆ, 
°©us
);

1206  
ªsu…
;

1207 
	}
}

1210 
Tî«ryNode
 *

1211 
	$u≈ackO√Node
–c⁄° 
Com∑˘TrõHódî
 *
hódî
, c⁄° 
Com∑˘TrõNode
 *
node
, 
UEº‹Code
 &
°©us
 ) {

1212 
nodeCou¡
 = (
node
->
Êagscou¡
 & 
kCou¡Mask
);

1213 i‡(
nodeCou¡
 =0 || 
	`U_FAILURE
(
°©us
)) {

1215  
NULL
;

1217 i‡(
node
->
Êagscou¡
 & 
kVîtiˇlNode
) {

1218 c⁄° 
Com∑˘TrõVîtiˇlNode
 *
vnode
 = (c⁄° Com∑˘TrõVîtiˇlNodê*)
node
;

1219 
Tî«ryNode
 *
hód
 = 
NULL
;

1220 
Tî«ryNode
 *
¥evious
 = 
NULL
;

1221 
Tî«ryNode
 *
œã°
 = 
NULL
;

1222 
i
 = 0; i < 
nodeCou¡
; ++i) {

1223 
œã°
 = 
√w
 
	`Tî«ryNode
(
vnode
->
ch¨s
[
i
]);

1224 i‡(
œã°
 =
NULL
) {

1225 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

1228 i‡(
hód
 =
NULL
) {

1229 
hód
 = 
œã°
;

1231 i‡(
¥evious
 !
NULL
) {

1232 
¥evious
->
equÆ
 = 
œã°
;

1234 
¥evious
 = 
œã°
;

1236 i‡(
œã°
 !
NULL
) {

1237 c⁄° 
Com∑˘TrõNode
 *
equÆ
 = 
	`gëCom∑˘Node
(
hódî
, 
vnode
->equal);

1238 i‡(
equÆ
->
Êagscou¡
 & 
kP¨ítEndsW‹d
) {

1239 
œã°
->
Êags
 |
kEndsW‹d
;

1241 
œã°
->
equÆ
 = 
	`u≈ackO√Node
(
hódî
,ÉquÆ, 
°©us
);

1243  
hód
;

1247 c⁄° 
Com∑˘TrõH‹iz⁄èlNode
 *
hnode
 = (c⁄° Com∑˘TrõH‹iz⁄èlNodê*)
node
;

1248  
	`u≈ackH‹iz⁄èlAºay
(
hódî
, &
hnode
->
íåõs
[0], 0, 
nodeCou¡
-1, 
°©us
);

1250 
	}
}

1252 
MuèbÀTrõDi˘i⁄¨y
 *

1253 
	gCom∑˘TrõDi˘i⁄¨y
::
	$˛⁄eMuèbÀ
–
UEº‹Code
 &
°©us
 ) const {

1254 
MuèbÀTrõDi˘i⁄¨y
 *
ªsu…
 = 
√w
 
	`MuèbÀTrõDi˘i⁄¨y
–
°©us
 );

1255 i‡(
ªsu…
 =
NULL
) {

1256 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

1257  
NULL
;

1259 
Tî«ryNode
 *
roŸ
 = 
	`u≈ackO√Node
(
fD©a
, 
	`gëCom∑˘Node
(fD©a, fD©a->roŸ), 
°©us
);

1260 i‡(
	`U_FAILURE
(
°©us
)) {

1261 
dñëe
 
roŸ
;

1262 
dñëe
 
ªsu…
;

1263  
NULL
;

1265 
ªsu…
->
fTrõ
 = 
roŸ
;

1266  
ªsu…
;

1267 
	}
}

1269 
U_NAMESPACE_END


1271 
U_CAPI
 
öt32_t
 
U_EXPORT2


1272 
	$åõdi˘_sw≠
(c⁄° 
UD©aSw≠≥r
 *
ds
, c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

1273 
UEº‹Code
 *
°©us
) {

1275 i‡(
°©us
 =
NULL
 || 
	`U_FAILURE
(*status)) {

1278 if(
ds
==
NULL
 || 
öD©a
==NULL || 
Àngth
<-1 || (Àngth>0 && 
outD©a
==NULL)) {

1279 *
°©us
=
U_ILLEGAL_ARGUMENT_ERROR
;

1287 c⁄° 
UD©aInfo
 *
pInfo
 = (c⁄° UD©aInfÿ*)((c⁄° 
uöt8_t
 *)
öD©a
+4);

1288 if(!–
pInfo
->
d©aF‹m©
[0]==0x54 &&

1289 
pInfo
->
d©aF‹m©
[1]==0x72 &&

1290 
pInfo
->
d©aF‹m©
[2]==0x44 &&

1291 
pInfo
->
d©aF‹m©
[3]==0x63 &&

1292 
pInfo
->
f‹m©Vîsi⁄
[0]==1 )) {

1293 
	`ud©a_¥ötEº‹
(
ds
, "triedict_swap(): data format %02x.%02x.%02x.%02x (format version %02x) isÇotÑecognized\n",

1294 
pInfo
->
d©aF‹m©
[0],ÖInfo->dataFormat[1],

1295 
pInfo
->
d©aF‹m©
[2],ÖInfo->dataFormat[3],

1296 
pInfo
->
f‹m©Vîsi⁄
[0]);

1297 *
°©us
=
U_UNSUPPORTED_ERROR
;

1307 
öt32_t
 
hódîSize
=
	`ud©a_sw≠D©aHódî
(
ds
, 
öD©a
, 
Àngth
, 
outD©a
, 
°©us
);

1312 c⁄° 
uöt8_t
 *
öByãs
 =(c⁄° uöt8_à*)
öD©a
+
hódîSize
;

1313 c⁄° 
Com∑˘TrõHódî
 *
hódî
 = (c⁄° Com∑˘TrõHódî *)
öByãs
;

1314 i‡(
ds
->
	`ªadUI¡32
(
hódî
->
magic
Ë!
COMPACT_TRIE_MAGIC_1


1315 || 
ds
->
	`ªadUI¡32
(
hódî
->
size
Ë< (
Com∑˘TrõHódî
))

1317 
	`ud©a_¥ötEº‹
(
ds
, "triedict_swap(): CompactTrieHeader is invalid.\n");

1318 *
°©us
=
U_UNSUPPORTED_ERROR
;

1325 
uöt32_t
 
tŸÆSize
 = 
ds
->
	`ªadUI¡32
(
hódî
->
size
);

1326 
öt32_t
 
sizeWôhUD©a
 = (öt32_t)
tŸÆSize
 + 
hódîSize
;

1327 i‡(
Àngth
 < 0) {

1328  
sizeWôhUD©a
;

1334 i‡(
Àngth
 < 
sizeWôhUD©a
) {

1335 
	`ud©a_¥ötEº‹
(
ds
, "triedict_swap():Åoo few bytes (%dáfter ICU Data header) forÅrie data.\n",

1336 
tŸÆSize
);

1337 *
°©us
=
U_INDEX_OUTOFBOUNDS_ERROR
;

1346 
uöt8_t
 *
outByãs
 = (uöt8_à*)
outD©a
 + 
hódîSize
;

1347 
Com∑˘TrõHódî
 *
ouçutHódî
 = (Com∑˘TrõHódî *)
outByãs
;

1353 i‡(
öByãs
 !
outByãs
) {

1354 
	`u¥v_mem£t
(
outByãs
, 0, 
tŸÆSize
);

1358 
uöt16_t
 
nodeCou¡
 = 
ds
->
	`ªadUI¡16
(
hódî
->nodeCount);

1360 
i
 = 1; i < 
nodeCou¡
; ++i) {

1361 
uöt32_t
 
nodeOff
 = 
ds
->
	`ªadUI¡32
(
hódî
->
off£ts
[
i
]);

1362 c⁄° 
Com∑˘TrõNode
 *
öNode
 = (c⁄° Com∑˘TrõNodê*)(
öByãs
 + 
nodeOff
);

1363 
Com∑˘TrõNode
 *
outNode
 = (Com∑˘TrõNodê*)(
outByãs
 + 
nodeOff
);

1364 
uöt16_t
 
Êagscou¡
 = 
ds
->
	`ªadUI¡16
(
öNode
->flagscount);

1365 
uöt16_t
 
ôemCou¡
 = 
Êagscou¡
 & 
kCou¡Mask
;

1366 
ds
->
	`wrôeUI¡16
(&
outNode
->
Êagscou¡
, flagscount);

1367 i‡(
ôemCou¡
 > 0) {

1368 i‡(
Êagscou¡
 & 
kVîtiˇlNode
) {

1369 
ds
->
	`sw≠Aºay16
(ds, 
öByãs
+
nodeOff
+
	`off£tof
(
Com∑˘TrõVîtiˇlNode
,
ch¨s
),

1370 
ôemCou¡
*(
uöt16_t
),

1371 
outByãs
+
nodeOff
+
	`off£tof
(
Com∑˘TrõVîtiˇlNode
,
ch¨s
), 
°©us
);

1372 
uöt16_t
 
equÆ
 = 
ds
->
	`ªadUI¡16
(
öByãs
+
nodeOff
+
	`off£tof
(
Com∑˘TrõVîtiˇlNode
,equal);

1373 
ds
->
	`wrôeUI¡16
(
outByãs
+
nodeOff
+
	`off£tof
(
Com∑˘TrõVîtiˇlNode
,
equÆ
));

1376 c⁄° 
Com∑˘TrõH‹iz⁄èlNode
 *
öHNode
 = (c⁄° Com∑˘TrõH‹iz⁄èlNodê*)
öNode
;

1377 
Com∑˘TrõH‹iz⁄èlNode
 *
outHNode
 = (Com∑˘TrõH‹iz⁄èlNodê*)
outNode
;

1378 
j
 = 0; j < 
ôemCou¡
; ++j) {

1379 
uöt16_t
 
w‹d
 = 
ds
->
	`ªadUI¡16
(
öHNode
->
íåõs
[
j
].
ch
);

1380 
ds
->
	`wrôeUI¡16
(&
outHNode
->
íåõs
[
j
].
ch
, 
w‹d
);

1381 
w‹d
 = 
ds
->
	`ªadUI¡16
(
öHNode
->
íåõs
[
j
].
equÆ
);

1382 
ds
->
	`wrôeUI¡16
(&
outHNode
->
íåõs
[
j
].
equÆ
, 
w‹d
);

1390 
uöt16_t
 
nodeCou¡
 = 
ds
->
	`ªadUI¡16
(
hódî
->nodeCount);

1391 
uöt32_t
 
nodesOff
 = 
	`off£tof
(
Com∑˘TrõHódî
,
off£ts
)+((uöt32_t)
nodeCou¡
*(uint32_t));

1392 
ds
->
	`sw≠Aºay16
(ds, 
öByãs
+
nodesOff
, 
tŸÆSize
-nodesOff, 
outByãs
+nodesOff, 
°©us
);

1395 
ds
->
	`wrôeUI¡32
(&
ouçutHódî
->
size
, 
tŸÆSize
);

1396 
uöt32_t
 
magic
 = 
ds
->
	`ªadUI¡32
(
hódî
->magic);

1397 
ds
->
	`wrôeUI¡32
(&
ouçutHódî
->
magic
, magic);

1398 
ds
->
	`wrôeUI¡16
(&
ouçutHódî
->
nodeCou¡
,ÇodeCount);

1399 
uöt16_t
 
roŸ
 = 
ds
->
	`ªadUI¡16
(
hódî
->root);

1400 
ds
->
	`wrôeUI¡16
(&
ouçutHódî
->
roŸ
,Ñoot);

1401 
ds
->
	`sw≠Aºay32
(ds, 
öByãs
+
	`off£tof
(
Com∑˘TrõHódî
,
off£ts
),

1402 (
uöt32_t
)*(
öt32_t
)
nodeCou¡
,

1403 
outByãs
+
	`off£tof
(
Com∑˘TrõHódî
,
off£ts
), 
°©us
);

1405  
sizeWôhUD©a
;

1406 
	}
}

	@triedict.h

8 #i‚de‡
TRIEDICT_H


9 
	#TRIEDICT_H


	)

11 
	~"unicode/uty≥s.h
"

12 
	~"unicode/uobje˘.h
"

13 
	~"unicode/uãxt.h
"

15 
	gUEnumî©i⁄
;

16 
	gUD©aSw≠≥r
;

17 
	gUD©aMem‹y
;

42 
U_CAPI
 
öt32_t
 
U_EXPORT2


43 
åõdi˘_sw≠
(c⁄° 
UD©aSw≠≥r
 *
ds
,

44 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

45 
UEº‹Code
 *
pEº‹Code
);

47 
U_NAMESPACE_BEGIN


49 
˛ass
 
	gSåögEnumî©i⁄
;

50 
	gCom∑˘TrõHódî
;

61 ˛as†
	cU_COMMON_API
 
	mTrõW‹dDi˘i⁄¨y
 : 
public
 
UMem‹y
 {

62 
public
:

68 
TrõW‹dDi˘i⁄¨y
();

73 
	mvútuÆ
 ~
TrõW‹dDi˘i⁄¨y
();

87 
vútuÆ
 
öt32_t
 
	$m©ches
–
UText
 *
ãxt
,

88 
öt32_t
 
maxLígth
,

89 
öt32_t
 *
Àngths
,

90 &
cou¡
,

91 
limô
 ) const = 0;

100 
vútuÆ
 
SåögEnumî©i⁄
 *
	$›íW‹ds
–
UEº‹Code
 &
°©us
 ) const = 0;

113 
Tî«ryNode
;

115 ˛as†
	cU_COMMON_API
 
MuèbÀTrõDi˘i⁄¨y
 : 
public
 
TrõW‹dDi˘i⁄¨y
 {

116 
¥iv©e
:

122 
Tî«ryNode
 *
fTrõ
;

129 
UText
 *
fIãr
;

131 
‰õnd
 
˛ass
 
Com∑˘TrõDi˘i⁄¨y
;

133 
public
:

142 
	`MuèbÀTrõDi˘i⁄¨y
–
UCh¨
 
medün
, 
UEº‹Code
 &
°©us
 );

147 
vútuÆ
 ~
	`MuèbÀTrõDi˘i⁄¨y
();

160 
vútuÆ
 
öt32_t
 
	$m©ches
–
UText
 *
ãxt
,

161 
öt32_t
 
maxLígth
,

162 
öt32_t
 *
Àngths
,

163 &
cou¡
,

164 
limô
 ) const;

173 
vútuÆ
 
SåögEnumî©i⁄
 *
	$›íW‹ds
–
UEº‹Code
 &
°©us
 ) const;

182 
vútuÆ
 
	`addW‹d
–c⁄° 
UCh¨
 *
w‹d
,

183 
öt32_t
 
Àngth
,

184 
UEº‹Code
 &
°©us
);

193 
vútuÆ
 
	`addW‹ds
–
UEnumî©i⁄
 *
w‹ds
, 
UEº‹Code
 &
°©us
 );

196 
¥Ÿe˘ed
:

210 
vútuÆ
 
öt32_t
 
	$£¨ch
–
UText
 *
ãxt
,

211 
öt32_t
 
maxLígth
,

212 
öt32_t
 *
Àngths
,

213 &
cou¡
,

214 
limô
,

215 
Tî«ryNode
 *&
∑ª¡
,

216 
UBoﬁ
 &
pM©ched
 ) const;

218 
¥iv©e
:

224 
	`MuèbÀTrõDi˘i⁄¨y
–
UEº‹Code
 &
°©us
 );

235 ˛as†
	cU_COMMON_API
 
Com∑˘TrõDi˘i⁄¨y
 : 
public
 
TrõW‹dDi˘i⁄¨y
 {

236 
¥iv©e
:

241 c⁄° 
Com∑˘TrõHódî
 *
fD©a
;

247 
UBoﬁ
 
fOwnD©a
;

249 
UD©aMem‹y
 *
fUD©a
;

250 
public
:

257 
	`Com∑˘TrõDi˘i⁄¨y
(
UD©aMem‹y
 *
d©aObj
, 
UEº‹Code
 &
°©us
);

265 
	`Com∑˘TrõDi˘i⁄¨y
(c⁄° *
d©aObj
, 
UEº‹Code
 &
°©us
);

273 
	`Com∑˘TrõDi˘i⁄¨y
–c⁄° 
MuèbÀTrõDi˘i⁄¨y
 &
di˘
, 
UEº‹Code
 &
°©us
 );

278 
vútuÆ
 ~
	`Com∑˘TrõDi˘i⁄¨y
();

291 
vútuÆ
 
öt32_t
 
	$m©ches
–
UText
 *
ãxt
,

292 
öt32_t
 
øngeEnd
,

293 
öt32_t
 *
Àngths
,

294 &
cou¡
,

295 
limô
 ) const;

304 
vútuÆ
 
SåögEnumî©i⁄
 *
	$›íW‹ds
–
UEº‹Code
 &
°©us
 ) const;

311 
vútuÆ
 
uöt32_t
 
	$d©aSize
() const;

319 
vútuÆ
 c⁄° *
	$d©a
() const;

327 
vútuÆ
 
MuèbÀTrõDi˘i⁄¨y
 *
	$˛⁄eMuèbÀ
–
UEº‹Code
 &
°©us
 ) const;

329 
¥iv©e
:

338 
Com∑˘TrõHódî
 *
	`com∑˘MuèbÀTrõDi˘i⁄¨y
–c⁄° 
MuèbÀTrõDi˘i⁄¨y
 &
di˘
,

339 
UEº‹Code
 &
°©us
 );

343 
U_NAMESPACE_END


	@uarrsort.c

19 
	~"unicode/uty≥s.h
"

20 
	~"cmem‹y.h
"

21 
	~"u¨rs‹t.h
"

24 
	mMIN_QSORT
=9,

25 
	mSTACK_ITEM_SIZE
=200

30 
U_CAPI
 
öt32_t
 
U_EXPORT2


31 
	$u¥v_uöt16Com∑øt‹
(c⁄° *
c⁄ãxt
, c⁄° *
À·
, c⁄° *
right
) {

32  (
öt32_t
)*(c⁄° 
uöt16_t
 *)
À·
 - (öt32_t)*(c⁄° uöt16_à*)
right
;

33 
	}
}

35 
U_CAPI
 
öt32_t
 
U_EXPORT2


36 
	$u¥v_öt32Com∑øt‹
(c⁄° *
c⁄ãxt
, c⁄° *
À·
, c⁄° *
right
) {

37  *(c⁄° 
öt32_t
 *)
À·
 - *(c⁄° i¡32_à*)
right
;

38 
	}
}

40 
U_CAPI
 
öt32_t
 
U_EXPORT2


41 
	$u¥v_uöt32Com∑øt‹
(c⁄° *
c⁄ãxt
, c⁄° *
À·
, c⁄° *
right
) {

42 
uöt32_t
 
l
=*(c⁄° uöt32_à*)
À·
, 
r
=*(c⁄° uöt32_à*)
right
;

45 if(
l
<
r
) {

47 } if(
l
==
r
) {

52 
	}
}

57 
	$doIn£πi⁄S‹t
(*
¨øy
, 
öt32_t
 
°¨t
, i¡32_à
limô
, i¡32_à
ôemSize
,

58 
UCom∑øt‹
 *
cmp
, c⁄° *
c⁄ãxt
, *
pv
) {

59 
öt32_t
 
i
, 
j
;

61 
j
=
°¨t
+1; j<
limô
; ++j) {

63 
	`u¥v_mem˝y
(
pv
, 
¨øy
+
j
*
ôemSize
, itemSize);

65 
i
=
j
; i>
°¨t
; --i) {

66 if–
	`cmp
(
c⁄ãxt
, 
pv
, 
¨øy
+(
i
-1)*
ôemSize
)>=0) {

71 
	`u¥v_mem˝y
(
¨øy
+
i
*
ôemSize
,árray+(i-1)*itemSize, itemSize);

74 if(
i
!=
j
) {

76 
	`u¥v_mem˝y
(
¨øy
+
i
*
ôemSize
, 
pv
, itemSize);

79 
	}
}

82 
	$ö£πi⁄S‹t
(*
¨øy
, 
öt32_t
 
Àngth
, i¡32_à
ôemSize
,

83 
UCom∑øt‹
 *
cmp
, c⁄° *
c⁄ãxt
, 
UEº‹Code
 *
pEº‹Code
) {

84 
UAlig√dMem‹y
 
v
[
STACK_ITEM_SIZE
/(UAlignedMemory)+1];

85 *
pv
;

88 if(
ôemSize
<=
STACK_ITEM_SIZE
) {

89 
pv
=
v
;

91 
pv
=
	`u¥v_mÆloc
(
ôemSize
);

92 if(
pv
==
NULL
) {

93 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

98 
	`doIn£πi⁄S‹t
(
¨øy
, 0, 
Àngth
, 
ôemSize
, 
cmp
, 
c⁄ãxt
, 
pv
);

100 if(
pv
!=
v
) {

101 
	`u¥v_‰ì
(
pv
);

103 
	}
}

120 
	$subQuickS‹t
(*
¨øy
, 
öt32_t
 
°¨t
, i¡32_à
limô
, i¡32_à
ôemSize
,

121 
UCom∑øt‹
 *
cmp
, c⁄° *
c⁄ãxt
,

122 *
px
, *
pw
) {

123 
öt32_t
 
À·
, 
right
;

127 if((
°¨t
+
MIN_QSORT
)>=
limô
) {

128 
	`doIn£πi⁄S‹t
(
¨øy
, 
°¨t
, 
limô
, 
ôemSize
, 
cmp
, 
c⁄ãxt
, 
px
);

132 
À·
=
°¨t
;

133 
right
=
limô
;

136 
	`u¥v_mem˝y
(
px
, 
¨øy
+((
°¨t
+
limô
)/2)*
ôemSize
, itemSize);

140 
	`cmp
(
c⁄ãxt
, 
¨øy
+
À·
*
ôemSize
, 
px
)<0

142 ++
À·
;

145 
	`cmp
(
c⁄ãxt
, 
px
, 
¨øy
+(
right
-1)*
ôemSize
)<0

147 --
right
;

151 if(
À·
<
right
) {

152 --
right
;

154 if(
À·
<
right
) {

155 
	`u¥v_mem˝y
(
pw
, 
¨øy
+
À·
*
ôemSize
, itemSize);

156 
	`u¥v_mem˝y
(
¨øy
+
À·
*
ôemSize
,áºay+
right
*itemSize, itemSize);

157 
	`u¥v_mem˝y
(
¨øy
+
right
*
ôemSize
, 
pw
, itemSize);

160 ++
À·
;

162 } 
À·
<
right
);

165 if((
right
-
°¨t
)<(
limô
-
À·
)) {

167 if(
°¨t
<(
right
-1)) {

168 
	`subQuickS‹t
(
¨øy
, 
°¨t
, 
right
, 
ôemSize
, 
cmp
, 
c⁄ãxt
, 
px
, 
pw
);

172 
°¨t
=
À·
;

175 if(
À·
<(
limô
-1)) {

176 
	`subQuickS‹t
(
¨øy
, 
À·
, 
limô
, 
ôemSize
, 
cmp
, 
c⁄ãxt
, 
px
, 
pw
);

180 
limô
=
right
;

182 } 
°¨t
<(
limô
-1));

183 
	}
}

186 
	$quickS‹t
(*
¨øy
, 
öt32_t
 
Àngth
, i¡32_à
ôemSize
,

187 
UCom∑øt‹
 *
cmp
, c⁄° *
c⁄ãxt
, 
UEº‹Code
 *
pEº‹Code
) {

188 
UAlig√dMem‹y
 
xw
[(2*
STACK_ITEM_SIZE
)/(UAlignedMemory)+1];

189 *
p
;

192 if(
ôemSize
<=
STACK_ITEM_SIZE
) {

193 
p
=
xw
;

195 
p
=
	`u¥v_mÆloc
(2*
ôemSize
);

196 if(
p
==
NULL
) {

197 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

202 
	`subQuickS‹t
(
¨øy
, 0, 
Àngth
, 
ôemSize
,

203 
cmp
, 
c⁄ãxt
, 
p
, (*Ì+
ôemSize
);

205 if(
p
!=
xw
) {

206 
	`u¥v_‰ì
(
p
);

208 
	}
}

216 
U_CAPI
 
U_EXPORT2


217 
	$u¥v_s‹tAºay
(*
¨øy
, 
öt32_t
 
Àngth
, i¡32_à
ôemSize
,

218 
UCom∑øt‹
 *
cmp
, c⁄° *
c⁄ãxt
,

219 
UBoﬁ
 
s‹tSèbÀ
, 
UEº‹Code
 *
pEº‹Code
) {

220 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

223 if((
Àngth
>0 && 
¨øy
==
NULL
Ë||Üígth<0 || 
ôemSize
<=0 || 
cmp
==NULL) {

224 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

228 if(
Àngth
<=1) {

230 } if(
Àngth
<
MIN_QSORT
 || 
s‹tSèbÀ
) {

231 
	`ö£πi⁄S‹t
((*)
¨øy
, 
Àngth
, 
ôemSize
, 
cmp
, 
c⁄ãxt
, 
pEº‹Code
);

234 
	`quickS‹t
((*)
¨øy
, 
Àngth
, 
ôemSize
, 
cmp
, 
c⁄ãxt
, 
pEº‹Code
);

236 
	}
}

	@uarrsort.h

19 #i‚de‡
__UARRSORT_H__


20 
	#__UARRSORT_H__


	)

22 
	~"unicode/uty≥s.h
"

24 
U_CDECL_BEGIN


39 
öt32_t
 
	tU_CALLCONV


40 
	tUCom∑øt‹
(c⁄° *
	tc⁄ãxt
, c⁄° *
	tÀ·
, c⁄° *
	tright
);

41 
U_CDECL_END


58 
U_CAPI
 
U_EXPORT2


59 
u¥v_s‹tAºay
(*
¨øy
, 
öt32_t
 
Àngth
, i¡32_à
ôemSize
,

60 
UCom∑øt‹
 *
cmp
, c⁄° *
c⁄ãxt
,

61 
UBoﬁ
 
s‹tSèbÀ
, 
UEº‹Code
 *
pEº‹Code
);

67 
U_CAPI
 
öt32_t
 
U_EXPORT2


68 
u¥v_uöt16Com∑øt‹
(c⁄° *
c⁄ãxt
, c⁄° *
À·
, c⁄° *
right
);

74 
U_CAPI
 
öt32_t
 
U_EXPORT2


75 
u¥v_öt32Com∑øt‹
(c⁄° *
c⁄ãxt
, c⁄° *
À·
, c⁄° *
right
);

81 
U_CAPI
 
öt32_t
 
U_EXPORT2


82 
u¥v_uöt32Com∑øt‹
(c⁄° *
c⁄ãxt
, c⁄° *
À·
, c⁄° *
right
);

	@uassert.h

20 #i‚de‡
U_ASSERT_H


21 
	#U_ASSERT_H


	)

23 
	~"unicode/uty≥s.h
"

24 #i‡
U_RELEASE


25 
	#U_ASSERT
(
exp
)

	)

27 
	~<as£π.h
>

28 
	#U_ASSERT
(
exp
Ë
	`as£π
”xp)

	)

	@ubidi.c

17 
	~"cmem‹y.h
"

18 
	~"unicode/uty≥s.h
"

19 
	~"unicode/u°rög.h
"

20 
	~"unicode/uch¨.h
"

21 
	~"unicode/ubidi.h
"

22 
	~"ubidi_¥›s.h
"

23 
	~"ubidiimp.h
"

24 
	~"uas£π.h
"

108 c⁄° 
Fœgs
 
	gÊagLR
[2]={ 
DIRPROP_FLAG
(
L
), DIRPROP_FLAG(
R
) };

109 c⁄° 
Fœgs
 
	gÊagE
[2]={ 
DIRPROP_FLAG
(
LRE
), DIRPROP_FLAG(
RLE
) };

110 c⁄° 
Fœgs
 
	gÊagO
[2]={ 
DIRPROP_FLAG
(
LRO
), DIRPROP_FLAG(
RLO
) };

112 
	#DIRPROP_FLAG_LR
(
Àvñ
Ë
ÊagLR
[÷evñ)&1]

	)

113 
	#DIRPROP_FLAG_E
(
Àvñ
Ë
ÊagE
[÷evñ)&1]

	)

114 
	#DIRPROP_FLAG_O
(
Àvñ
Ë
ÊagO
[÷evñ)&1]

	)

118 
U_CAPI
 
UBiDi
 * 
U_EXPORT2


119 
	$ubidi_›í
()

121 
UEº‹Code
 
îr‹Code
=
U_ZERO_ERROR
;

122  
	`ubidi_›íSized
(0, 0, &
îr‹Code
);

123 
	}
}

125 
U_CAPI
 
UBiDi
 * 
U_EXPORT2


126 
	$ubidi_›íSized
(
öt32_t
 
maxLígth
, i¡32_à
maxRunCou¡
, 
UEº‹Code
 *
pEº‹Code
) {

127 
UBiDi
 *
pBiDi
;

130 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

131  
NULL
;

132 } if(
maxLígth
<0 || 
maxRunCou¡
<0) {

133 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

134  
NULL
;

138 
pBiDi
=(
UBiDi
 *)
	`u¥v_mÆloc
((UBiDi));

139 if(
pBiDi
==
NULL
) {

140 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

141  
NULL
;

145 
	`u¥v_mem£t
(
pBiDi
, 0, (
UBiDi
));

148 
pBiDi
->
bdp
=
	`ubidi_gëSögÀt⁄
();

151 if(
maxLígth
>0) {

152 if–!
	`gëInôülDúPr›sMem‹y
(
pBiDi
, 
maxLígth
) ||

153 !
	`gëInôülLevñsMem‹y
(
pBiDi
, 
maxLígth
)

155 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

158 
pBiDi
->
mayAŒoˇãText
=
TRUE
;

161 if(
maxRunCou¡
>0) {

162 if(
maxRunCou¡
==1) {

164 
pBiDi
->
runsSize
=(
Run
);

165 } if(!
	`gëInôülRunsMem‹y
(
pBiDi
, 
maxRunCou¡
)) {

166 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

169 
pBiDi
->
mayAŒoˇãRuns
=
TRUE
;

172 if(
	`U_SUCCESS
(*
pEº‹Code
)) {

173  
pBiDi
;

175 
	`ubidi_˛o£
(
pBiDi
);

176  
NULL
;

178 
	}
}

193 
U_CFUNC
 
UBoﬁ


194 
	$ubidi_gëMem‹y
(
BidiMem‹yF‹AŒoˇti⁄
 *
bidiMem
, 
öt32_t
 *
pSize
, 
UBoﬁ
 
mayAŒoˇã
, i¡32_à
sizeNìded
) {

195 **
pMem‹y
 = (**)
bidiMem
;

197 if(*
pMem‹y
==
NULL
) {

199 if(
mayAŒoˇã
 && (*
pMem‹y
=
	`u¥v_mÆloc
(
sizeNìded
))!=
NULL
) {

200 *
pSize
=
sizeNìded
;

201  
TRUE
;

203  
FALSE
;

206 if(
sizeNìded
<=*
pSize
) {

208  
TRUE
;

210 if(!
mayAŒoˇã
) {

212  
FALSE
;

215 *
mem‹y
;

220 if((
mem‹y
=
	`u¥v_ªÆloc
(*
pMem‹y
, 
sizeNìded
))!=
NULL
) {

221 *
pMem‹y
=
mem‹y
;

222 *
pSize
=
sizeNìded
;

223  
TRUE
;

226  
FALSE
;

230 
	}
}

232 
U_CAPI
 
U_EXPORT2


233 
	$ubidi_˛o£
(
UBiDi
 *
pBiDi
) {

234 if(
pBiDi
!=
NULL
) {

235 
pBiDi
->
pP¨aBiDi
=
NULL
;

236 if(
pBiDi
->
dúPr›sMem‹y
!=
NULL
) {

237 
	`u¥v_‰ì
(
pBiDi
->
dúPr›sMem‹y
);

239 if(
pBiDi
->
ÀvñsMem‹y
!=
NULL
) {

240 
	`u¥v_‰ì
(
pBiDi
->
ÀvñsMem‹y
);

242 if(
pBiDi
->
runsMem‹y
!=
NULL
) {

243 
	`u¥v_‰ì
(
pBiDi
->
runsMem‹y
);

245 if(
pBiDi
->
∑øsMem‹y
!=
NULL
) {

246 
	`u¥v_‰ì
(
pBiDi
->
∑øsMem‹y
);

248 if(
pBiDi
->
ö£πPoöts
.
poöts
!=
NULL
) {

249 
	`u¥v_‰ì
(
pBiDi
->
ö£πPoöts
.
poöts
);

252 
	`u¥v_‰ì
(
pBiDi
);

254 
	}
}

258 
U_CAPI
 
U_EXPORT2


259 
	$ubidi_£tInvî£
(
UBiDi
 *
pBiDi
, 
UBoﬁ
 
isInvî£
) {

260 if(
pBiDi
!=
NULL
) {

261 
pBiDi
->
isInvî£
=isInverse;

262 
pBiDi
->
ª‹dîögMode
 = 
isInvî£
 ? 
UBIDI_REORDER_INVERSE_NUMBERS_AS_L


263 : 
UBIDI_REORDER_DEFAULT
;

265 
	}
}

267 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


268 
	$ubidi_isInvî£
(
UBiDi
 *
pBiDi
) {

269 if(
pBiDi
!=
NULL
) {

270  
pBiDi
->
isInvî£
;

272  
FALSE
;

274 
	}
}

291 
U_CAPI
 
U_EXPORT2


292 
	$ubidi_£tRe‹dîögMode
(
UBiDi
 *
pBiDi
, 
UBiDiRe‹dîögMode
 
ª‹dîögMode
) {

293 i‡((
pBiDi
!=
NULL
Ë&& (
ª‹dîögMode
 >
UBIDI_REORDER_DEFAULT
)

294 && (
ª‹dîögMode
 < 
UBIDI_REORDER_COUNT
)) {

295 
pBiDi
->
ª‹dîögMode
 =ÑeorderingMode;

296 
pBiDi
->
isInvî£
 = (
UBoﬁ
)(
ª‹dîögMode
 =
UBIDI_REORDER_INVERSE_NUMBERS_AS_L
);

298 
	}
}

300 
U_CAPI
 
UBiDiRe‹dîögMode
 
U_EXPORT2


301 
	$ubidi_gëRe‹dîögMode
(
UBiDi
 *
pBiDi
) {

302 i‡(
pBiDi
!=
NULL
) {

303  
pBiDi
->
ª‹dîögMode
;

305  
UBIDI_REORDER_DEFAULT
;

307 
	}
}

309 
U_CAPI
 
U_EXPORT2


310 
	$ubidi_£tRe‹dîögO±i⁄s
(
UBiDi
 *
pBiDi
, 
uöt32_t
 
ª‹dîögO±i⁄s
) {

311 i‡(
ª‹dîögO±i⁄s
 & 
UBIDI_OPTION_REMOVE_CONTROLS
) {

312 
ª‹dîögO±i⁄s
&=~
UBIDI_OPTION_INSERT_MARKS
;

314 i‡(
pBiDi
!=
NULL
) {

315 
pBiDi
->
ª‹dîögO±i⁄s
=reorderingOptions;

317 
	}
}

319 
U_CAPI
 
uöt32_t
 
U_EXPORT2


320 
	$ubidi_gëRe‹dîögO±i⁄s
(
UBiDi
 *
pBiDi
) {

321 i‡(
pBiDi
!=
NULL
) {

322  
pBiDi
->
ª‹dîögO±i⁄s
;

326 
	}
}

328 
U_CAPI
 
UBiDiDúe˘i⁄
 
U_EXPORT2


329 
	$ubidi_gëBa£Dúe˘i⁄
(c⁄° 
UCh¨
 *
ãxt
,

330 
öt32_t
 
Àngth
){

332 
öt32_t
 
i
;

333 
UCh¨32
 
uch¨
;

334 
UCh¨Dúe˘i⁄
 
dú
;

336 if–
ãxt
==
NULL
 || 
Àngth
<-1 ){

337  
UBIDI_NEUTRAL
;

340 if(
Àngth
==-1) {

341 
Àngth
=
	`u_°æí
(
ãxt
);

344  
i
 = 0 ; i < 
Àngth
; ) {

346 
	`U16_NEXT
(
ãxt
, 
i
, 
Àngth
, 
uch¨
);

347 
dú
 = 
	`u_ch¨Dúe˘i⁄
(
uch¨
);

348 if–
dú
 =
U_LEFT_TO_RIGHT
 )

349  
UBIDI_LTR
;

350 if–
dú
 =
U_RIGHT_TO_LEFT
 || dú ==
U_RIGHT_TO_LEFT_ARABIC
 )

351  
UBIDI_RTL
;

353  
UBIDI_NEUTRAL
;

354 
	}
}

364 
	$gëDúPr›s
(
UBiDi
 *
pBiDi
) {

365 c⁄° 
UCh¨
 *
ãxt
=
pBiDi
->text;

366 
DúPr›
 *
dúPr›s
=
pBiDi
->
dúPr›sMem‹y
;

368 
öt32_t
 
i
=0, 
i1
, 
Àngth
=
pBiDi
->
‹igöÆLígth
;

369 
Fœgs
 
Êags
=0;

370 
UCh¨32
 
uch¨
;

371 
DúPr›
 
dúPr›
=0, 
∑øDúDeÁu…
=0;

372 
UBoﬁ
 
isDeÁu…Levñ
=
	`IS_DEFAULT_LEVEL
(
pBiDi
->
∑øLevñ
);

375 
UBoﬁ
 
isDeÁu…LevñInvî£
=
isDeÁu…Levñ
 && (UBool)

376 (
pBiDi
->
ª‹dîögMode
==
UBIDI_REORDER_INVERSE_LIKE_DIRECT
 ||

377 
pBiDi
->
ª‹dîögMode
==
UBIDI_REORDER_INVERSE_FOR_NUMBERS_SPECIAL
);

378 
öt32_t
 
œ°AøbicPos
=-1;

379 
öt32_t
 
c⁄åﬁCou¡
=0;

380 
UBoﬁ
 
ªmoveBiDiC⁄åﬁs
 = (UBoﬁ)(
pBiDi
->
ª‹dîögO±i⁄s
 &

381 
UBIDI_OPTION_REMOVE_CONTROLS
);

384 
NOT_CONTEXTUAL
,

385 
LOOKING_FOR_STRONG
,

386 
FOUND_STRONG_CHAR


387 } 
	tSèã
;

388 
Sèã
 
°©e
;

389 
öt32_t
 
∑øSèπ
=0;

390 
DúPr›
 
∑øDú
;

392 
DúPr›
 
œ°Så⁄gDú
=0;

393 
öt32_t
 
œ°Så⁄gLTR
=0;

395 if(
pBiDi
->
ª‹dîögO±i⁄s
 & 
UBIDI_OPTION_STREAMING
) {

396 
pBiDi
->
Àngth
=0;

397 
œ°Så⁄gLTR
=0;

399 if(
isDeÁu…Levñ
) {

400 
∑øDúDeÁu…
=
pBiDi
->
∑øLevñ
&1 ? 
CONTEXT_RTL
 : 0;

401 
∑øDú
=
∑øDúDeÁu…
;

402 
œ°Så⁄gDú
=
∑øDúDeÁu…
;

403 
°©e
=
LOOKING_FOR_STRONG
;

405 
°©e
=
NOT_CONTEXTUAL
;

406 
∑øDú
=0;

414  ; 
i
<
Àngth
; ) {

416 
	`U16_NEXT
(
ãxt
, 
i
, 
Àngth
, 
uch¨
);

417 
Êags
|=
	`DIRPROP_FLAG
(
dúPr›
=(
DúPr›
)
	`ubidi_gëCu°omizedCœss
(
pBiDi
, 
uch¨
));

418 
dúPr›s
[
i
-1]=
dúPr›
|
∑øDú
;

419 if(
uch¨
>0xffff) {

420 
Êags
|=
	`DIRPROP_FLAG
(
BN
);

421 
dúPr›s
[
i
-2]=(
DúPr›
)(
BN
|
∑øDú
);

423 if(
°©e
==
LOOKING_FOR_STRONG
) {

424 if(
dúPr›
==
L
) {

425 
°©e
=
FOUND_STRONG_CHAR
;

426 if(
∑øDú
) {

427 
∑øDú
=0;

428 
i1
=
∑øSèπ
; i1<
i
; i1++) {

429 
dúPr›s
[
i1
]&=~
CONTEXT_RTL
;

434 if(
dúPr›
==
R
 || dúPr›==
AL
) {

435 
°©e
=
FOUND_STRONG_CHAR
;

436 if(
∑øDú
==0) {

437 
∑øDú
=
CONTEXT_RTL
;

438 
i1
=
∑øSèπ
; i1<
i
; i1++) {

439 
dúPr›s
[
i1
]|=
CONTEXT_RTL
;

445 if(
dúPr›
==
L
) {

446 
œ°Så⁄gDú
=0;

447 
œ°Så⁄gLTR
=
i
;

449 if(
dúPr›
==
R
) {

450 
œ°Så⁄gDú
=
CONTEXT_RTL
;

452 if(
dúPr›
==
AL
) {

453 
œ°Så⁄gDú
=
CONTEXT_RTL
;

454 
œ°AøbicPos
=
i
-1;

456 if(
dúPr›
==
B
) {

457 if(
pBiDi
->
ª‹dîögO±i⁄s
 & 
UBIDI_OPTION_STREAMING
) {

458 
pBiDi
->
Àngth
=
i
;

460 if(
isDeÁu…LevñInvî£
 && (
œ°Så⁄gDú
==
CONTEXT_RTL
Ë&&(
∑øDú
!=lastStrongDir)) {

461  ; 
∑øSèπ
<
i
;ÖaraStart++) {

462 
dúPr›s
[
∑øSèπ
]|=
CONTEXT_RTL
;

465 if(
i
<
Àngth
) {

466 if(!((
uch¨
==
CR
Ë&& (
ãxt
[
i
]==
LF
))) {

467 
pBiDi
->
∑øCou¡
++;

469 if(
isDeÁu…Levñ
) {

470 
°©e
=
LOOKING_FOR_STRONG
;

471 
∑øSèπ
=
i
;

472 
∑øDú
=
∑øDúDeÁu…
;

473 
œ°Så⁄gDú
=
∑øDúDeÁu…
;

477 if(
ªmoveBiDiC⁄åﬁs
 && 
	`IS_BIDI_CONTROL_CHAR
(
uch¨
)) {

478 
c⁄åﬁCou¡
++;

481 if(
isDeÁu…LevñInvî£
 && (
œ°Så⁄gDú
==
CONTEXT_RTL
Ë&&(
∑øDú
!=lastStrongDir)) {

482 
i1
=
∑øSèπ
; i1<
Àngth
; i1++) {

483 
dúPr›s
[
i1
]|=
CONTEXT_RTL
;

486 if(
isDeÁu…Levñ
) {

487 
pBiDi
->
∑øLevñ
=
	`GET_PARALEVEL
(pBiDi, 0);

489 if(
pBiDi
->
ª‹dîögO±i⁄s
 & 
UBIDI_OPTION_STREAMING
) {

490 if((
œ°Så⁄gLTR
>
pBiDi
->
Àngth
) &&

491 (
	`GET_PARALEVEL
(
pBiDi
, 
œ°Så⁄gLTR
)==0)) {

492 
pBiDi
->
Àngth
 = 
œ°Så⁄gLTR
;

494 if(
pBiDi
->
Àngth
<pBiDi->
‹igöÆLígth
) {

495 
pBiDi
->
∑øCou¡
--;

500 
Êags
|=
	`DIRPROP_FLAG_LR
(
pBiDi
->
∑øLevñ
);

502 if(
pBiDi
->
‹dîP¨agøphsLTR
 && (
Êags
&
	`DIRPROP_FLAG
(
B
))) {

503 
Êags
|=
	`DIRPROP_FLAG
(
L
);

506 
pBiDi
->
c⁄åﬁCou¡
 = controlCount;

507 
pBiDi
->
Êags
=flags;

508 
pBiDi
->
œ°AøbicPos
=lastArabicPos;

509 
	}
}

514 
UBiDiDúe˘i⁄


515 
	$dúe˘i⁄FromFœgs
(
UBiDi
 *
pBiDi
) {

516 
Fœgs
 
Êags
=
pBiDi
->flags;

518 if(!(
Êags
&
MASK_RTL
 || ((Êags&
	`DIRPROP_FLAG
(
AN
)Ë&& (Êags&
MASK_POSSIBLE_N
)))) {

519  
UBIDI_LTR
;

520 } if(!(
Êags
&
MASK_LTR
)) {

521  
UBIDI_RTL
;

523  
UBIDI_MIXED
;

525 
	}
}

579 
UBiDiDúe˘i⁄


580 
	$ªsﬁveEx∂icôLevñs
(
UBiDi
 *
pBiDi
) {

581 c⁄° 
DúPr›
 *
dúPr›s
=
pBiDi
->dirProps;

582 
UBiDiLevñ
 *
Àvñs
=
pBiDi
->levels;

583 c⁄° 
UCh¨
 *
ãxt
=
pBiDi
->text;

585 
öt32_t
 
i
=0, 
Àngth
=
pBiDi
->length;

586 
Fœgs
 
Êags
=
pBiDi
->flags;

587 
DúPr›
 
dúPr›
;

588 
UBiDiLevñ
 
Àvñ
=
	`GET_PARALEVEL
(
pBiDi
, 0);

590 
UBiDiDúe˘i⁄
 
dúe˘i⁄
;

591 
öt32_t
 
∑øIndex
=0;

594 
dúe˘i⁄
=
	`dúe˘i⁄FromFœgs
(
pBiDi
);

598 if((
dúe˘i⁄
!=
UBIDI_MIXED
Ë&& (
pBiDi
->
∑øCou¡
==1)) {

600 } if((
pBiDi
->
∑øCou¡
==1) &&

601 (!(
Êags
&
MASK_EXPLICIT
) ||

602 (
pBiDi
->
ª‹dîögMode
 > 
UBIDI_REORDER_LAST_LOGICAL_TO_VISUAL
))) {

607 
i
=0; i<
Àngth
; ++i) {

608 
Àvñs
[
i
]=
Àvñ
;

615 
UBiDiLevñ
 
embeddögLevñ
=
Àvñ
, 
√wLevñ
, 
°ackT›
=0;

617 
UBiDiLevñ
 
°ack
[
UBIDI_MAX_EXPLICIT_LEVEL
];

618 
uöt32_t
 
cou¡Ovî60
=0, 
cou¡Ovî61
=0;

621 
Êags
=0;

623 
i
=0; i<
Àngth
; ++i) {

624 
dúPr›
=
	`NO_CONTEXT_RTL
(
dúPr›s
[
i
]);

625 
dúPr›
) {

626 
LRE
:

627 
LRO
:

629 
√wLevñ
=(
UBiDiLevñ
)((
embeddögLevñ
+2)&~(
UBIDI_LEVEL_OVERRIDE
|1));

630 if(
√wLevñ
<=
UBIDI_MAX_EXPLICIT_LEVEL
) {

631 
°ack
[
°ackT›
]=
embeddögLevñ
;

632 ++
°ackT›
;

633 
embeddögLevñ
=
√wLevñ
;

634 if(
dúPr›
==
LRO
) {

635 
embeddögLevñ
|=
UBIDI_LEVEL_OVERRIDE
;

641 } if((
embeddögLevñ
&~
UBIDI_LEVEL_OVERRIDE
)==
UBIDI_MAX_EXPLICIT_LEVEL
) {

642 ++
cou¡Ovî61
;

644 ++
cou¡Ovî60
;

646 
Êags
|=
	`DIRPROP_FLAG
(
BN
);

648 
RLE
:

649 
RLO
:

651 
√wLevñ
=(
UBiDiLevñ
)(((
embeddögLevñ
&~
UBIDI_LEVEL_OVERRIDE
)+1)|1);

652 if(
√wLevñ
<=
UBIDI_MAX_EXPLICIT_LEVEL
) {

653 
°ack
[
°ackT›
]=
embeddögLevñ
;

654 ++
°ackT›
;

655 
embeddögLevñ
=
√wLevñ
;

656 if(
dúPr›
==
RLO
) {

657 
embeddögLevñ
|=
UBIDI_LEVEL_OVERRIDE
;

664 ++
cou¡Ovî61
;

666 
Êags
|=
	`DIRPROP_FLAG
(
BN
);

668 
PDF
:

671 if(
cou¡Ovî61
>0) {

672 --
cou¡Ovî61
;

673 } if(
cou¡Ovî60
>0 && (
embeddögLevñ
&~
UBIDI_LEVEL_OVERRIDE
)!=
UBIDI_MAX_EXPLICIT_LEVEL
) {

675 --
cou¡Ovî60
;

676 } if(
°ackT›
>0) {

678 --
°ackT›
;

679 
embeddögLevñ
=
°ack
[
°ackT›
];

682 
Êags
|=
	`DIRPROP_FLAG
(
BN
);

684 
B
:

685 
°ackT›
=0;

686 
cou¡Ovî60
=
cou¡Ovî61
=0;

687 
Àvñ
=
	`GET_PARALEVEL
(
pBiDi
, 
i
);

688 if((
i
+1)<
Àngth
) {

689 
embeddögLevñ
=
	`GET_PARALEVEL
(
pBiDi
, 
i
+1);

690 if(!((
ãxt
[
i
]==
CR
Ë&& (ãxt[i+1]==
LF
))) {

691 
pBiDi
->
∑øs
[
∑øIndex
++]=
i
+1;

694 
Êags
|=
	`DIRPROP_FLAG
(
B
);

696 
BN
:

699 
Êags
|=
	`DIRPROP_FLAG
(
BN
);

703 if(
Àvñ
!=
embeddögLevñ
) {

704 
Àvñ
=
embeddögLevñ
;

705 if(
Àvñ
&
UBIDI_LEVEL_OVERRIDE
) {

706 
Êags
|=
	`DIRPROP_FLAG_O
(
Àvñ
)|
DIRPROP_FLAG_MULTI_RUNS
;

708 
Êags
|=
	`DIRPROP_FLAG_E
(
Àvñ
)|
DIRPROP_FLAG_MULTI_RUNS
;

711 if(!(
Àvñ
&
UBIDI_LEVEL_OVERRIDE
)) {

712 
Êags
|=
	`DIRPROP_FLAG
(
dúPr›
);

721 
Àvñs
[
i
]=
Àvñ
;

723 if(
Êags
&
MASK_EMBEDDING
) {

724 
Êags
|=
	`DIRPROP_FLAG_LR
(
pBiDi
->
∑øLevñ
);

726 if(
pBiDi
->
‹dîP¨agøphsLTR
 && (
Êags
&
	`DIRPROP_FLAG
(
B
))) {

727 
Êags
|=
	`DIRPROP_FLAG
(
L
);

733 
pBiDi
->
Êags
=flags;

734 
dúe˘i⁄
=
	`dúe˘i⁄FromFœgs
(
pBiDi
);

737  
dúe˘i⁄
;

738 
	}
}

750 
UBiDiDúe˘i⁄


751 
	$checkEx∂icôLevñs
(
UBiDi
 *
pBiDi
, 
UEº‹Code
 *
pEº‹Code
) {

752 c⁄° 
DúPr›
 *
dúPr›s
=
pBiDi
->dirProps;

753 
DúPr›
 
dúPr›
;

754 
UBiDiLevñ
 *
Àvñs
=
pBiDi
->levels;

755 c⁄° 
UCh¨
 *
ãxt
=
pBiDi
->text;

757 
öt32_t
 
i
, 
Àngth
=
pBiDi
->length;

758 
Fœgs
 
Êags
=0;

759 
UBiDiLevñ
 
Àvñ
;

760 
uöt32_t
 
∑øIndex
=0;

762 
i
=0; i<
Àngth
; ++i) {

763 
Àvñ
=
Àvñs
[
i
];

764 
dúPr›
=
	`NO_CONTEXT_RTL
(
dúPr›s
[
i
]);

765 if(
Àvñ
&
UBIDI_LEVEL_OVERRIDE
) {

767 
Àvñ
&=~
UBIDI_LEVEL_OVERRIDE
;

768 
Êags
|=
	`DIRPROP_FLAG_O
(
Àvñ
);

771 
Êags
|=
	`DIRPROP_FLAG_E
(
Àvñ
)|
	`DIRPROP_FLAG
(
dúPr›
);

773 if((
Àvñ
<
	`GET_PARALEVEL
(
pBiDi
, 
i
) &&

774 !((0==
Àvñ
)&&(
dúPr›
==
B
))) ||

775 (
UBIDI_MAX_EXPLICIT_LEVEL
<
Àvñ
)) {

777 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

778  
UBIDI_LTR
;

780 if((
dúPr›
==
B
Ë&& ((
i
+1)<
Àngth
)) {

781 if(!((
ãxt
[
i
]==
CR
Ë&& (ãxt[i+1]==
LF
))) {

782 
pBiDi
->
∑øs
[
∑øIndex
++]=
i
+1;

786 if(
Êags
&
MASK_EMBEDDING
) {

787 
Êags
|=
	`DIRPROP_FLAG_LR
(
pBiDi
->
∑øLevñ
);

791 
pBiDi
->
Êags
=flags;

792  
	`dúe˘i⁄FromFœgs
(
pBiDi
);

793 
	}
}

812 
	#IMPTABPROPS_COLUMNS
 14

	)

813 
	#IMPTABPROPS_RES
 (
IMPTABPROPS_COLUMNS
 - 1)

	)

814 
	#GET_STATEPROPS
(
˚Œ
Ë((˚Œ)&0x1f)

	)

815 
	#GET_ACTIONPROPS
(
˚Œ
Ë((˚Œ)>>5)

	)

816 
	#s
(
a˘i⁄
, 
√wSèã
Ë((
uöt8_t
)“ewSèã+◊˘i⁄<<5)))

	)

818 c⁄° 
uöt8_t
 
	ggroupPr›
[] =

823 íum { 
	mDúPr›_L
=0, 
	mDúPr›_R
=1, 
	mDúPr›_EN
=2, 
	mDúPr›_AN
=3, 
	mDúPr›_ON
=4, 
	mDúPr›_S
=5, 
	mDúPr›_B
=6 };

860 c⁄° 
uöt8_t
 
	gimpTabPr›s
[][
IMPTABPROPS_COLUMNS
] =

863  { 1 , 2 , 4 , 5 , 7 , 15 , 17 , 7 , 9 , 7 , 0 , 7 , 3 , 
DúPr›_ON
 },

864  { 1 , 
s
(1,2), s(1,4), s(1,5), s(1,7),s(1,15),s(1,17), s(1,7), s(1,9), s(1,7), 1 , 1 , s(1,3), 
DúPr›_L
 },

865  { 
s
(1,1), 2 , s(1,4), s(1,5), s(1,7),s(1,15),s(1,17), s(1,7), s(1,9), s(1,7), 2 , 2 , s(1,3), 
DúPr›_R
 },

866  { 
s
(1,1), s(1,2), s(1,6), s(1,6), s(1,8),s(1,16),s(1,17), s(1,8), s(1,8), s(1,8), 3 , 3 , 3 , 
DúPr›_R
 },

867  { 
s
(1,1), s(1,2), 4 , s(1,5), s(1,7),s(1,15),s(1,17),s(2,10), 11 ,s(2,10), 4 , 4 , s(1,3), 
DúPr›_EN
 },

868  { 
s
(1,1), s(1,2), s(1,4), 5 , s(1,7),s(1,15),s(1,17), s(1,7), s(1,9),s(2,12), 5 , 5 , s(1,3), 
DúPr›_AN
 },

869  { 
s
(1,1), s(1,2), 6 , 6 , s(1,8),s(1,16),s(1,17), s(1,8), s(1,8),s(2,13), 6 , 6 , s(1,3), 
DúPr›_AN
 },

870  { 
s
(1,1), s(1,2), s(1,4), s(1,5), 7 ,s(1,15),s(1,17), 7 ,s(2,14), 7 , 7 , 7 , s(1,3), 
DúPr›_ON
 },

871  { 
s
(1,1), s(1,2), s(1,6), s(1,6), 8 ,s(1,16),s(1,17), 8 , 8 , 8 , 8 , 8 , s(1,3), 
DúPr›_ON
 },

872  { 
s
(1,1), s(1,2), 4 , s(1,5), 7 ,s(1,15),s(1,17), 7 , 9 , 7 , 9 , 9 , s(1,3), 
DúPr›_ON
 },

873  { 
s
(3,1), s(3,2), 4 , s(3,5), s(4,7),s(3,15),s(3,17), s(4,7),s(4,14), s(4,7), 10 , s(4,7), s(3,3), 
DúPr›_EN
 },

874  { 
s
(1,1), s(1,2), 4 , s(1,5), s(1,7),s(1,15),s(1,17), s(1,7), 11 , s(1,7), 11 , 11 , s(1,3), 
DúPr›_EN
 },

875  { 
s
(3,1), s(3,2), s(3,4), 5 , s(4,7),s(3,15),s(3,17), s(4,7),s(4,14), s(4,7), 12 , s(4,7), s(3,3), 
DúPr›_AN
 },

876  { 
s
(3,1), s(3,2), 6 , 6 , s(4,8),s(3,16),s(3,17), s(4,8), s(4,8), s(4,8), 13 , s(4,8), s(3,3), 
DúPr›_AN
 },

877  { 
s
(1,1), s(1,2), s(4,4), s(1,5), 7 ,s(1,15),s(1,17), 7 , 14 , 7 , 14 , 14 , s(1,3), 
DúPr›_ON
 },

878  { 
s
(1,1), s(1,2), s(1,4), s(1,5), s(1,7), 15 ,s(1,17), s(1,7), s(1,9), s(1,7), 15 , s(1,7), s(1,3), 
DúPr›_S
 },

879  { 
s
(1,1), s(1,2), s(1,6), s(1,6), s(1,8), 16 ,s(1,17), s(1,8), s(1,8), s(1,8), 16 , s(1,8), s(1,3), 
DúPr›_S
 },

880  { 
s
(1,1), s(1,2), s(1,4), s(1,5), s(1,7),s(1,15), 17 , s(1,7), s(1,9), s(1,7), 17 , s(1,7), s(1,3), 
DúPr›_B
 }

886 #unde‡
s


907 
	#IMPTABLEVELS_COLUMNS
 (
DúPr›_B
 + 2)

	)

908 
	#IMPTABLEVELS_RES
 (
IMPTABLEVELS_COLUMNS
 - 1)

	)

909 
	#GET_STATE
(
˚Œ
Ë((˚Œ)&0x0f)

	)

910 
	#GET_ACTION
(
˚Œ
Ë((˚Œ)>>4)

	)

911 
	#s
(
a˘i⁄
, 
√wSèã
Ë((
uöt8_t
)“ewSèã+◊˘i⁄<<4)))

	)

913 
uöt8_t
 
	tImpTab
[][
IMPTABLEVELS_COLUMNS
];

914 
uöt8_t
 
	tImpA˘
[];

919 
	sImpTabPaú
 {

920 c⁄° * 
	mpImpTab
[2];

921 c⁄° * 
	mpImpA˘
[2];

922 } 
	tImpTabPaú
;

961 c⁄° 
ImpTab
 
	gimpTabL_DEFAULT
 =

968  { 0 , 1 , 3 , 3 , 
s
(1,4), s(1,4), 0 , 1 },

969  { 0 , 1 , 0 , 2 , 
s
(1,5), s(1,5), 0 , 2 },

970  { 0 , 1 , 3 , 3 , 
s
(1,4), s(1,4), 0 , 2 },

971  { 
s
(2,0), 1 , 3 , 3 , 4 , 4 , s(2,0), 1 },

972  { 
s
(2,0), 1 , s(2,0), 2 , 5 , 5 , s(2,0), 1 }

974 c⁄° 
ImpTab
 
	gimpTabR_DEFAULT
 =

981  { 1 , 0 , 1 , 3 , 
s
(1,4), s(1,4), 0 , 1 },

984  { 
s
(2,1), 0 , s(2,1), 3 , 4 , 4 , 0 , 0 },

987 c⁄° 
ImpA˘
 
	gimpA˘0
 = {0,1,2,3,4,5,6};

988 c⁄° 
ImpTabPaú
 
	gimpTab_DEFAULT
 = {{&
impTabL_DEFAULT
,

989 &
impTabR_DEFAULT
},

990 {&
impA˘0
, &impAct0}};

992 c⁄° 
ImpTab
 
	gimpTabL_NUMBERS_SPECIAL
 =

1000  { 0 , 2 , 4 , 4 , 
s
(1,3), 0 , 0 , 1 },

1001  { 
s
(2,0), 2 , 4 , 4 , 3 , 3 , s(2,0), 1 },

1002  { 0 , 2 , 4 , 4 , 
s
(1,3), s(1,3), 0 , 2 }

1004 c⁄° 
ImpTabPaú
 
	gimpTab_NUMBERS_SPECIAL
 = {{&
impTabL_NUMBERS_SPECIAL
,

1005 &
impTabR_DEFAULT
},

1006 {&
impA˘0
, &impAct0}};

1008 c⁄° 
ImpTab
 
	gimpTabL_GROUP_NUMBERS_WITH_R
 =

1014  { 0 , 3 , 
s
(1,1), s(1,1), 0 , 0 , 0 , 0 },

1015  { 
s
(2,0), 3 , 1 , 1 , 2 , s(2,0), s(2,0), 2 },

1016  { 
s
(2,0), 3 , 1 , 1 , 2 , s(2,0), s(2,0), 1 },

1017  { 0 , 3 , 5 , 5 , 
s
(1,4), 0 , 0 , 1 },

1018  { 
s
(2,0), 3 , 5 , 5 , 4 , s(2,0), s(2,0), 1 },

1019  { 0 , 3 , 5 , 5 , 
s
(1,4), 0 , 0 , 2 }

1021 c⁄° 
ImpTab
 
	gimpTabR_GROUP_NUMBERS_WITH_R
 =

1029  { 2 , 0 , 
s
(1,4), s(1,4), s(1,3), 0 , 0 , 1 },

1030  { 
s
(2,2), 0 , 4 , 4 , 3 , 0 , 0 , 0 },

1031  { 
s
(2,2), 0 , 4 , 4 , 3 , 0 , 0 , 1 }

1033 c⁄° 
ImpTabPaú
 
	gimpTab_GROUP_NUMBERS_WITH_R
 = {

1034 {&
impTabL_GROUP_NUMBERS_WITH_R
,

1035 &
impTabR_GROUP_NUMBERS_WITH_R
},

1036 {&
impA˘0
, &impAct0}};

1039 c⁄° 
ImpTab
 
	gimpTabL_INVERSE_NUMBERS_AS_L
 =

1046  { 0 , 1 , 0 , 0 , 
s
(1,4), s(1,4), 0 , 1 },

1047  { 0 , 1 , 0 , 0 , 
s
(1,5), s(1,5), 0 , 2 },

1048  { 0 , 1 , 0 , 0 , 
s
(1,4), s(1,4), 0 , 2 },

1049  { 
s
(2,0), 1 , s(2,0), s(2,0), 4 , 4 , s(2,0), 1 },

1050  { 
s
(2,0), 1 , s(2,0), s(2,0), 5 , 5 , s(2,0), 1 }

1052 c⁄° 
ImpTab
 
	gimpTabR_INVERSE_NUMBERS_AS_L
 =

1059  { 1 , 0 , 1 , 1 , 
s
(1,4), s(1,4), 0 , 1 },

1062  { 
s
(2,1), 0 , s(2,1), s(2,1), 4 , 4 , 0 , 0 },

1065 c⁄° 
ImpTabPaú
 
	gimpTab_INVERSE_NUMBERS_AS_L
 = {

1066 {&
impTabL_INVERSE_NUMBERS_AS_L
,

1067 &
impTabR_INVERSE_NUMBERS_AS_L
},

1068 {&
impA˘0
, &impAct0}};

1070 c⁄° 
ImpTab
 
	gimpTabR_INVERSE_LIKE_DIRECT
 =

1077  { 1 , 0 , 1 , 2 , 
s
(1,3), s(1,3), 0 , 1 },

1079  { 
s
(2,1), s(3,0), 6 , 4 , 3 , 3 , s(3,0), 0 },

1080  { 
s
(2,1), s(3,0), 6 , 4 , 5 , 5 , s(3,0), 3 },

1081  { 
s
(2,1), s(3,0), 6 , 4 , 5 , 5 , s(3,0), 2 },

1082  { 
s
(2,1), s(3,0), 6 , 4 , 3 , 3 , s(3,0), 1 }

1084 c⁄° 
ImpA˘
 
	gimpA˘1
 = {0,1,11,12};

1087 c⁄° 
ImpTabPaú
 
	gimpTab_INVERSE_LIKE_DIRECT
 = {

1088 {&
impTabL_DEFAULT
,

1089 &
impTabR_INVERSE_LIKE_DIRECT
},

1090 {&
impA˘0
, &
impA˘1
}};

1092 c⁄° 
ImpTab
 
	gimpTabL_INVERSE_LIKE_DIRECT_WITH_MARKS
 =

1097  { 0 , 
s
(6,3), 0 , 1 , 0 , 0 , 0 , 0 },

1098  { 0 , 
s
(6,3), 0 , 1 , s(1,2), s(3,0), 0 , 4 },

1099  { 
s
(2,0), s(6,3), s(2,0), 1 , 2 , s(3,0), s(2,0), 3 },

1100  { 0 , 
s
(6,3), s(5,5), s(5,6), s(1,4), s(3,0), 0 , 3 },

1101  { 
s
(3,0), s(4,3), s(5,5), s(5,6), 4 , s(3,0), s(3,0), 3 },

1102  { 
s
(3,0), s(4,3), 5 , s(5,6), s(1,4), s(3,0), s(3,0), 4 },

1103  { 
s
(3,0), s(4,3), s(5,5), 6 , s(1,4), s(3,0), s(3,0), 4 }

1105 c⁄° 
ImpTab
 
	gimpTabR_INVERSE_LIKE_DIRECT_WITH_MARKS
 =

1111  { 
s
(1,3), 0 , 1 , 1 , 0 , 0 , 0 , 0 },

1112  { 
s
(2,3), 0 , 1 , 1 , 2 , s(4,0), 0 , 1 },

1113  { 
s
(2,3), 0 , 1 , 1 , 2 , s(4,0), 0 , 0 },

1114  { 3 , 0 , 3 , 
s
(3,6), s(1,4), s(4,0), 0 , 1 },

1115  { 
s
(5,3), s(4,0), 5 , s(3,6), 4 , s(4,0), s(4,0), 0 },

1116  { 
s
(5,3), s(4,0), 5 , s(3,6), 4 , s(4,0), s(4,0), 1 },

1117  { 
s
(5,3), s(4,0), 6 , 6 , 4 , s(4,0), s(4,0), 3 }

1119 c⁄° 
ImpA˘
 
	gimpA˘2
 = {0,1,7,8,9,10};

1120 c⁄° 
ImpTabPaú
 
	gimpTab_INVERSE_LIKE_DIRECT_WITH_MARKS
 = {

1121 {&
impTabL_INVERSE_LIKE_DIRECT_WITH_MARKS
,

1122 &
impTabR_INVERSE_LIKE_DIRECT_WITH_MARKS
},

1123 {&
impA˘0
, &
impA˘2
}};

1125 c⁄° 
ImpTabPaú
 
	gimpTab_INVERSE_FOR_NUMBERS_SPECIAL
 = {

1126 {&
impTabL_NUMBERS_SPECIAL
,

1127 &
impTabR_INVERSE_LIKE_DIRECT
},

1128 {&
impA˘0
, &
impA˘1
}};

1130 c⁄° 
ImpTab
 
	gimpTabL_INVERSE_FOR_NUMBERS_SPECIAL_WITH_MARKS
 =

1135  { 0 , 
s
(6,2), 1 , 1 , 0 , 0 , 0 , 0 },

1136  { 0 , 
s
(6,2), 1 , 1 , 0 , s(3,0), 0 , 4 },

1137  { 0 , 
s
(6,2), s(5,4), s(5,4), s(1,3), s(3,0), 0 , 3 },

1138  { 
s
(3,0), s(4,2), s(5,4), s(5,4), 3 , s(3,0), s(3,0), 3 },

1139  { 
s
(3,0), s(4,2), 4 , 4 , s(1,3), s(3,0), s(3,0), 4 }

1141 c⁄° 
ImpTabPaú
 
	gimpTab_INVERSE_FOR_NUMBERS_SPECIAL_WITH_MARKS
 = {

1142 {&
impTabL_INVERSE_FOR_NUMBERS_SPECIAL_WITH_MARKS
,

1143 &
impTabR_INVERSE_LIKE_DIRECT_WITH_MARKS
},

1144 {&
impA˘0
, &
impA˘2
}};

1146 #unde‡
s


1149 c⁄° 
ImpTab
 * 
	mpImpTab
;

1150 c⁄° 
ImpA˘
 * 
	mpImpA˘
;

1151 
öt32_t
 
	m°¨tON
;

1152 
öt32_t
 
	m°¨tL2EN
;

1153 
öt32_t
 
	mœ°Så⁄gRTL
;

1154 
öt32_t
 
	m°©e
;

1155 
UBiDiLevñ
 
	mrunLevñ
;

1156 } 
	tLevSèã
;

1161 
	$addPoöt
(
UBiDi
 *
pBiDi
, 
öt32_t
 
pos
, i¡32_à
Êag
)

1166 
	#FIRSTALLOC
 10

	)

1167 
Poöt
 
poöt
;

1168 
In£πPoöts
 * 
pIn£πPoöts
=&(
pBiDi
->
ö£πPoöts
);

1170 i‡(
pIn£πPoöts
->
ˇ∑côy
 == 0)

1172 
pIn£πPoöts
->
poöts
=
	`u¥v_mÆloc
((
Poöt
)*
FIRSTALLOC
);

1173 i‡(
pIn£πPoöts
->
poöts
 =
NULL
)

1175 
pIn£πPoöts
->
îr‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

1178 
pIn£πPoöts
->
ˇ∑côy
=
FIRSTALLOC
;

1180 i‡(
pIn£πPoöts
->
size
 >pIn£πPoöts->
ˇ∑côy
)

1182 * 
ßvePoöts
=
pIn£πPoöts
->
poöts
;

1183 
pIn£πPoöts
->
poöts
=
	`u¥v_ªÆloc
(pInsertPoints->points,

1184 
pIn£πPoöts
->
ˇ∑côy
*2*(
Poöt
));

1185 i‡(
pIn£πPoöts
->
poöts
 =
NULL
)

1187 
pIn£πPoöts
->
poöts
=
ßvePoöts
;

1188 
pIn£πPoöts
->
îr‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

1191 
pIn£πPoöts
->
ˇ∑côy
*=2;

1193 
poöt
.
pos
=pos;

1194 
poöt
.
Êag
=flag;

1195 
pIn£πPoöts
->
poöts
[pIn£πPoöts->
size
]=
poöt
;

1196 
pIn£πPoöts
->
size
++;

1197 #unde‡
FIRSTALLOC


1198 
	}
}

1216 
	$¥o˚ssPr›îtySeq
(
UBiDi
 *
pBiDi
, 
LevSèã
 *
pLevSèã
, 
uöt8_t
 
_¥›
,

1217 
öt32_t
 
°¨t
, i¡32_à
limô
) {

1218 
uöt8_t
 
˚Œ
, 
ﬁdSèãSeq
, 
a˘i⁄Seq
;

1219 c⁄° 
ImpTab
 * 
pImpTab
=
pLevSèã
->pImpTab;

1220 c⁄° 
ImpA˘
 * 
pImpA˘
=
pLevSèã
->pImpAct;

1221 
UBiDiLevñ
 * 
Àvñs
=
pBiDi
->levels;

1222 
UBiDiLevñ
 
Àvñ
, 
addLevñ
;

1223 
In£πPoöts
 * 
pIn£πPoöts
;

1224 
öt32_t
 
°¨t0
, 
k
;

1226 
°¨t0
=
°¨t
;

1227 
ﬁdSèãSeq
=(
uöt8_t
)
pLevSèã
->
°©e
;

1228 
˚Œ
=(*
pImpTab
)[
ﬁdSèãSeq
][
_¥›
];

1229 
pLevSèã
->
°©e
=
	`GET_STATE
(
˚Œ
);

1230 
a˘i⁄Seq
=(*
pImpA˘
)[
	`GET_ACTION
(
˚Œ
)];

1231 
addLevñ
=(*
pImpTab
)[
pLevSèã
->
°©e
][
IMPTABLEVELS_RES
];

1233 if(
a˘i⁄Seq
) {

1234 
a˘i⁄Seq
) {

1236 
pLevSèã
->
°¨tON
=
°¨t0
;

1240 
°¨t
=
pLevSèã
->
°¨tON
;

1245 i‡(
pLevSèã
->
°¨tL2EN
 >= 0) {

1246 
	`addPoöt
(
pBiDi
, 
pLevSèã
->
°¨tL2EN
, 
LRM_BEFORE
);

1248 
pLevSèã
->
°¨tL2EN
=-1;

1250 
pIn£πPoöts
=&(
pBiDi
->
ö£πPoöts
);

1251 i‡((
pIn£πPoöts
->
ˇ∑côy
 == 0) ||

1252 (
pIn£πPoöts
->
size
 <pIn£πPoöts->
c⁄fúmed
))

1255 
pLevSèã
->
œ°Så⁄gRTL
=-1;

1257 
Àvñ
=(*
pImpTab
)[
ﬁdSèãSeq
][
IMPTABLEVELS_RES
];

1258 i‡((
Àvñ
 & 1Ë&& (
pLevSèã
->
°¨tON
 > 0)) {

1259 
°¨t
=
pLevSèã
->
°¨tON
;

1261 i‡(
_¥›
 =
DúPr›_S
)

1263 
	`addPoöt
(
pBiDi
, 
°¨t0
, 
LRM_BEFORE
);

1264 
pIn£πPoöts
->
c⁄fúmed
ıIn£πPoöts->
size
;

1269 
k
=
pLevSèã
->
œ°Så⁄gRTL
+1; k<
°¨t0
; k++)

1272 
Àvñs
[
k
]=(levels[k] - 2) & ~1;

1275 
pIn£πPoöts
->
c⁄fúmed
ıIn£πPoöts->
size
;

1276 
pLevSèã
->
œ°Så⁄gRTL
=-1;

1277 i‡(
_¥›
 =
DúPr›_S
)

1279 
	`addPoöt
(
pBiDi
, 
°¨t0
, 
LRM_BEFORE
);

1280 
pIn£πPoöts
->
c⁄fúmed
ıIn£πPoöts->
size
;

1286 
pIn£πPoöts
=&(
pBiDi
->
ö£πPoöts
);

1287 i‡(
pIn£πPoöts
->
ˇ∑côy
 > 0)

1289 
pIn£πPoöts
->
size
ıIn£πPoöts->
c⁄fúmed
;

1290 
pLevSèã
->
°¨tON
=-1;

1291 
pLevSèã
->
°¨tL2EN
=-1;

1292 
pLevSèã
->
œ°Så⁄gRTL
=
limô
 - 1;

1297 i‡((
_¥›
 =
DúPr›_AN
Ë&& (
	`NO_CONTEXT_RTL
(
pBiDi
->
dúPr›s
[
°¨t0
]Ë=
AN
) &&

1298 (
pBiDi
->
ª‹dîögMode
!=
UBIDI_REORDER_INVERSE_FOR_NUMBERS_SPECIAL
))

1301 i‡(
pLevSèã
->
°¨tL2EN
 == -1)

1304 
pLevSèã
->
œ°Så⁄gRTL
=
limô
 - 1;

1307 i‡(
pLevSèã
->
°¨tL2EN
 >= 0)

1309 
	`addPoöt
(
pBiDi
, 
pLevSèã
->
°¨tL2EN
, 
LRM_BEFORE
);

1310 
pLevSèã
->
°¨tL2EN
=-2;

1313 
	`addPoöt
(
pBiDi
, 
°¨t0
, 
LRM_BEFORE
);

1317 i‡(
pLevSèã
->
°¨tL2EN
 == -1) {

1318 
pLevSèã
->
°¨tL2EN
=
°¨t0
;

1323 
pLevSèã
->
œ°Så⁄gRTL
=
limô
 - 1;

1324 
pLevSèã
->
°¨tON
=-1;

1329 
k
=
°¨t0
-1; k>=0 && !(
Àvñs
[k]&1); k--);

1330 if(
k
>=0) {

1331 
	`addPoöt
(
pBiDi
, 
k
, 
RLM_BEFORE
);

1332 
pIn£πPoöts
=&(
pBiDi
->
ö£πPoöts
);

1333 
pIn£πPoöts
->
c⁄fúmed
ıIn£πPoöts->
size
;

1335 
pLevSèã
->
°¨tON
=
°¨t0
;

1341 
	`addPoöt
(
pBiDi
, 
°¨t0
, 
LRM_BEFORE
);

1342 
	`addPoöt
(
pBiDi
, 
°¨t0
, 
LRM_AFTER
);

1347 
pIn£πPoöts
=&(
pBiDi
->
ö£πPoöts
);

1348 
pIn£πPoöts
->
size
ıIn£πPoöts->
c⁄fúmed
;

1349 i‡(
_¥›
 =
DúPr›_S
)

1351 
	`addPoöt
(
pBiDi
, 
°¨t0
, 
RLM_BEFORE
);

1352 
pIn£πPoöts
->
c⁄fúmed
ıIn£πPoöts->
size
;

1357 
Àvñ
=
pLevSèã
->
runLevñ
 + 
addLevñ
;

1358 
k
=
pLevSèã
->
°¨tON
; k<
°¨t0
; k++) {

1359 i‡(
Àvñs
[
k
]<
Àvñ
)

1360 
Àvñs
[
k
]=
Àvñ
;

1362 
pIn£πPoöts
=&(
pBiDi
->
ö£πPoöts
);

1363 
pIn£πPoöts
->
c⁄fúmed
ıIn£πPoöts->
size
;

1364 
pLevSèã
->
°¨tON
=
°¨t0
;

1368 
Àvñ
=
pLevSèã
->
runLevñ
;

1369 
k
=
°¨t0
-1; k>=
pLevSèã
->
°¨tON
; k--) {

1370 if(
Àvñs
[
k
]==
Àvñ
+3) {

1371 
Àvñs
[
k
]==
Àvñ
+3) {

1372 
Àvñs
[
k
--]-=2;

1374 
Àvñs
[
k
]==
Àvñ
) {

1375 
k
--;

1378 if(
Àvñs
[
k
]==
Àvñ
+2) {

1379 
Àvñs
[
k
]=
Àvñ
;

1382 
Àvñs
[
k
]=
Àvñ
+1;

1387 
Àvñ
=
pLevSèã
->
runLevñ
+1;

1388 
k
=
°¨t0
-1; k>=
pLevSèã
->
°¨tON
; k--) {

1389 if(
Àvñs
[
k
]>
Àvñ
) {

1390 
Àvñs
[
k
]-=2;

1396 
	`U_ASSERT
(
FALSE
);

1400 if((
addLevñ
Ë|| (
°¨t
 < 
°¨t0
)) {

1401 
Àvñ
=
pLevSèã
->
runLevñ
 + 
addLevñ
;

1402 
k
=
°¨t
; k<
limô
; k++) {

1403 
Àvñs
[
k
]=
Àvñ
;

1406 
	}
}

1409 
	$ªsﬁveIm∂icôLevñs
(
UBiDi
 *
pBiDi
,

1410 
öt32_t
 
°¨t
, i¡32_à
limô
,

1411 
DúPr›
 
s‹
, DúPr› 
e‹
) {

1412 c⁄° 
DúPr›
 *
dúPr›s
=
pBiDi
->dirProps;

1414 
LevSèã
 
ÀvSèã
;

1415 
öt32_t
 
i
, 
°¨t1
, 
°¨t2
;

1416 
uöt8_t
 
ﬁdSèãImp
, 
°©eImp
, 
a˘i⁄Imp
;

1417 
uöt8_t
 
g¥›
, 
ªsPr›
, 
˚Œ
;

1418 
UBoﬁ
 
övî£RTL
;

1419 
DúPr›
 
√xtSå⁄gPr›
=
R
;

1420 
öt32_t
 
√xtSå⁄gPos
=-1;

1422 
ÀvSèã
.
°¨tON
 = -1;

1431 
övî£RTL
=(
UBoﬁ
)

1432 ((
°¨t
<
pBiDi
->
œ°AøbicPos
Ë&& (
	`GET_PARALEVEL
(pBiDi, start) & 1) &&

1433 (
pBiDi
->
ª‹dîögMode
==
UBIDI_REORDER_INVERSE_LIKE_DIRECT
 ||

1434 
pBiDi
->
ª‹dîögMode
==
UBIDI_REORDER_INVERSE_FOR_NUMBERS_SPECIAL
));

1436 
ÀvSèã
.
°¨tL2EN
=-1;

1437 
ÀvSèã
.
œ°Så⁄gRTL
=-1;

1438 
ÀvSèã
.
°©e
=0;

1439 
ÀvSèã
.
runLevñ
=
pBiDi
->
Àvñs
[
°¨t
];

1440 
ÀvSèã
.
pImpTab
=(c⁄° 
ImpTab
*)((
pBiDi
->
pImpTabPaú
)->pImpTab)[ÀvSèã.
runLevñ
&1];

1441 
ÀvSèã
.
pImpA˘
=(c⁄° 
ImpA˘
*)((
pBiDi
->
pImpTabPaú
)->pImpA˘)[ÀvSèã.
runLevñ
&1];

1442 
	`¥o˚ssPr›îtySeq
(
pBiDi
, &
ÀvSèã
, 
s‹
, 
°¨t
, start);

1444 if(
	`NO_CONTEXT_RTL
(
dúPr›s
[
°¨t
])==
NSM
) {

1445 
°©eImp
 = 1 + 
s‹
;

1447 
°©eImp
=0;

1449 
°¨t1
=
°¨t
;

1450 
°¨t2
=
°¨t
;

1452 
i
=
°¨t
; i<=
limô
; i++) {

1453 if(
i
>=
limô
) {

1454 
g¥›
=
e‹
;

1456 
DúPr›
 
¥›
, 
¥›1
;

1457 
¥›
=
	`NO_CONTEXT_RTL
(
dúPr›s
[
i
]);

1458 if(
övî£RTL
) {

1459 if(
¥›
==
AL
) {

1461 
¥›
=
R
;

1462 } if(
¥›
==
EN
) {

1463 if(
√xtSå⁄gPos
<=
i
) {

1465 
öt32_t
 
j
;

1466 
√xtSå⁄gPr›
=
R
;

1467 
√xtSå⁄gPos
=
limô
;

1468 
j
=
i
+1; j<
limô
; j++) {

1469 
¥›1
=
	`NO_CONTEXT_RTL
(
dúPr›s
[
j
]);

1470 if(
¥›1
==
L
 ||Ör›1==
R
 ||Ör›1==
AL
) {

1471 
√xtSå⁄gPr›
=
¥›1
;

1472 
√xtSå⁄gPos
=
j
;

1477 if(
√xtSå⁄gPr›
==
AL
) {

1478 
¥›
=
AN
;

1482 
g¥›
=
groupPr›
[
¥›
];

1484 
ﬁdSèãImp
=
°©eImp
;

1485 
˚Œ
=
impTabPr›s
[
ﬁdSèãImp
][
g¥›
];

1486 
°©eImp
=
	`GET_STATEPROPS
(
˚Œ
);

1487 
a˘i⁄Imp
=
	`GET_ACTIONPROPS
(
˚Œ
);

1488 if((
i
==
limô
Ë&& (
a˘i⁄Imp
==0)) {

1490 
a˘i⁄Imp
=1;

1492 if(
a˘i⁄Imp
) {

1493 
ªsPr›
=
impTabPr›s
[
ﬁdSèãImp
][
IMPTABPROPS_RES
];

1494 
a˘i⁄Imp
) {

1496 
	`¥o˚ssPr›îtySeq
(
pBiDi
, &
ÀvSèã
, 
ªsPr›
, 
°¨t1
, 
i
);

1497 
°¨t1
=
i
;

1500 
°¨t2
=
i
;

1503 
	`¥o˚ssPr›îtySeq
(
pBiDi
, &
ÀvSèã
, 
ªsPr›
, 
°¨t1
, 
°¨t2
);

1504 
	`¥o˚ssPr›îtySeq
(
pBiDi
, &
ÀvSèã
, 
DúPr›_ON
, 
°¨t2
, 
i
);

1505 
°¨t1
=
i
;

1508 
	`¥o˚ssPr›îtySeq
(
pBiDi
, &
ÀvSèã
, 
ªsPr›
, 
°¨t1
, 
°¨t2
);

1509 
°¨t1
=
°¨t2
;

1510 
°¨t2
=
i
;

1513 
	`U_ASSERT
(
FALSE
);

1519 
	`¥o˚ssPr›îtySeq
(
pBiDi
, &
ÀvSèã
, 
e‹
, 
limô
,Üimit);

1520 
	}
}

1531 
	$adju°WSLevñs
(
UBiDi
 *
pBiDi
) {

1532 c⁄° 
DúPr›
 *
dúPr›s
=
pBiDi
->dirProps;

1533 
UBiDiLevñ
 *
Àvñs
=
pBiDi
->levels;

1534 
öt32_t
 
i
;

1536 if(
pBiDi
->
Êags
&
MASK_WS
) {

1537 
UBoﬁ
 
‹dîP¨agøphsLTR
=
pBiDi
->orderParagraphsLTR;

1538 
Fœgs
 
Êag
;

1540 
i
=
pBiDi
->
åaûögWSSèπ
;

1541 
i
>0) {

1543 
i
>0 && (
Êag
=
	`DIRPROP_FLAG_NC
(
dúPr›s
[--i]))&
MASK_WS
) {

1544 if(
‹dîP¨agøphsLTR
&&(
Êag
&
	`DIRPROP_FLAG
(
B
))) {

1545 
Àvñs
[
i
]=0;

1547 
Àvñs
[
i
]=
	`GET_PARALEVEL
(
pBiDi
, i);

1553 
i
>0) {

1554 
Êag
=
	`DIRPROP_FLAG_NC
(
dúPr›s
[--
i
]);

1555 if(
Êag
&
MASK_BN_EXPLICIT
) {

1556 
Àvñs
[
i
]=levels[i+1];

1557 } if(
‹dîP¨agøphsLTR
&&(
Êag
&
	`DIRPROP_FLAG
(
B
))) {

1558 
Àvñs
[
i
]=0;

1560 } if(
Êag
&
MASK_B_S
) {

1561 
Àvñs
[
i
]=
	`GET_PARALEVEL
(
pBiDi
, i);

1567 
	}
}

1569 
	#BIDI_MIN
(
x
, 
y
Ë((x)<(yË? (xË: (y))

	)

1570 
	#BIDI_ABS
(
x
Ë((x)>=0 ? (xË: (-(x)))

	)

1572 
	$£tP¨aRunsO∆y
(
UBiDi
 *
pBiDi
, c⁄° 
UCh¨
 *
ãxt
, 
öt32_t
 
Àngth
,

1573 
UBiDiLevñ
 
∑øLevñ
, 
UEº‹Code
 *
pEº‹Code
) {

1574 *
runsO∆yMem‹y
;

1575 
öt32_t
 *
visuÆM≠
;

1576 
UCh¨
 *
visuÆText
;

1577 
öt32_t
 
ßveLígth
, 
ßveTøûögWSSèπ
;

1578 c⁄° 
UBiDiLevñ
 *
Àvñs
;

1579 
UBiDiLevñ
 *
ßveLevñs
;

1580 
UBiDiDúe˘i⁄
 
ßveDúe˘i⁄
;

1581 
UBoﬁ
 
ßveMayAŒoˇãText
;

1582 
Run
 *
runs
;

1583 
öt32_t
 
visuÆLígth
, 
i
, 
j
, 
visuÆSèπ
, 
logiˇlSèπ
,

1584 
runCou¡
, 
runLígth
, 
addedRuns
, 
ö£πRemove
,

1585 
°¨t
, 
limô
, 
°ï
, 
ödexOddBô
, 
logiˇlPos
,

1586 
ödex0
, 
ödex1
;

1587 
uöt32_t
 
ßveO±i⁄s
;

1589 
pBiDi
->
ª‹dîögMode
=
UBIDI_REORDER_DEFAULT
;

1590 if(
Àngth
==0) {

1591 
	`ubidi_£tP¨a
(
pBiDi
, 
ãxt
, 
Àngth
, 
∑øLevñ
, 
NULL
, 
pEº‹Code
);

1592 
˛ónup3
;

1595 
runsO∆yMem‹y
=
	`u¥v_mÆloc
(
Àngth
*((
öt32_t
)+(
UCh¨
)+(
UBiDiLevñ
)));

1596 if(
runsO∆yMem‹y
==
NULL
) {

1597 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

1598 
˛ónup3
;

1600 
visuÆM≠
=
runsO∆yMem‹y
;

1601 
visuÆText
=(
UCh¨
 *)&
visuÆM≠
[
Àngth
];

1602 
ßveLevñs
=(
UBiDiLevñ
 *)&
visuÆText
[
Àngth
];

1603 
ßveO±i⁄s
=
pBiDi
->
ª‹dîögO±i⁄s
;

1604 if(
ßveO±i⁄s
 & 
UBIDI_OPTION_INSERT_MARKS
) {

1605 
pBiDi
->
ª‹dîögO±i⁄s
&=~
UBIDI_OPTION_INSERT_MARKS
;

1606 
pBiDi
->
ª‹dîögO±i⁄s
|=
UBIDI_OPTION_REMOVE_CONTROLS
;

1608 
∑øLevñ
&=1;

1609 
	`ubidi_£tP¨a
(
pBiDi
, 
ãxt
, 
Àngth
, 
∑øLevñ
, 
NULL
, 
pEº‹Code
);

1610 if(
	`U_FAILURE
(*
pEº‹Code
)) {

1611 
˛ónup3
;

1616 
Àvñs
=
	`ubidi_gëLevñs
(
pBiDi
, 
pEº‹Code
);

1617 
	`u¥v_mem˝y
(
ßveLevñs
, 
Àvñs
, 
pBiDi
->
Àngth
*(
UBiDiLevñ
));

1618 
ßveTøûögWSSèπ
=
pBiDi
->
åaûögWSSèπ
;

1619 
ßveLígth
=
pBiDi
->
Àngth
;

1620 
ßveDúe˘i⁄
=
pBiDi
->
dúe˘i⁄
;

1628 
visuÆLígth
=
	`ubidi_wrôeRe‹dîed
(
pBiDi
, 
visuÆText
, 
Àngth
,

1629 
UBIDI_DO_MIRRORING
, 
pEº‹Code
);

1630 
	`ubidi_gëVisuÆM≠
(
pBiDi
, 
visuÆM≠
, 
pEº‹Code
);

1631 if(
	`U_FAILURE
(*
pEº‹Code
)) {

1632 
˛ónup2
;

1634 
pBiDi
->
ª‹dîögO±i⁄s
=
ßveO±i⁄s
;

1636 
pBiDi
->
ª‹dîögMode
=
UBIDI_REORDER_INVERSE_LIKE_DIRECT
;

1637 
∑øLevñ
^=1;

1645 
ßveMayAŒoˇãText
=
pBiDi
->
mayAŒoˇãText
;

1646 
pBiDi
->
mayAŒoˇãText
=
FALSE
;

1647 
	`ubidi_£tP¨a
(
pBiDi
, 
visuÆText
, 
visuÆLígth
, 
∑øLevñ
, 
NULL
, 
pEº‹Code
);

1648 
pBiDi
->
mayAŒoˇãText
=
ßveMayAŒoˇãText
;

1649 
	`ubidi_gëRuns
(
pBiDi
, 
pEº‹Code
);

1650 if(
	`U_FAILURE
(*
pEº‹Code
)) {

1651 
˛ónup1
;

1654 
addedRuns
=0;

1655 
runCou¡
=
pBiDi
->runCount;

1656 
runs
=
pBiDi
->runs;

1657 
visuÆSèπ
=0;

1658 
i
=0; i<
runCou¡
; i++, 
visuÆSèπ
+=
runLígth
) {

1659 
runLígth
=
runs
[
i
].
visuÆLimô
-
visuÆSèπ
;

1660 if(
runLígth
<2) {

1663 
logiˇlSèπ
=
	`GET_INDEX
(
runs
[
i
].logicalStart);

1664 
j
=
logiˇlSèπ
+1; j<logiˇlSèπ+
runLígth
; j++) {

1665 
ödex0
=
visuÆM≠
[
j
];

1666 
ödex1
=
visuÆM≠
[
j
-1];

1667 if((
	`BIDI_ABS
(
ödex0
-
ödex1
)!=1Ë|| (
ßveLevñs
[index0]!=saveLevels[index1])) {

1668 
addedRuns
++;

1672 if(
addedRuns
) {

1673 if(
	`gëRunsMem‹y
(
pBiDi
, 
runCou¡
+
addedRuns
)) {

1674 if(
runCou¡
==1) {

1676 
pBiDi
->
runsMem‹y
[0]=
runs
[0];

1678 
runs
=
pBiDi
->runsıBiDi->
runsMem‹y
;

1679 
pBiDi
->
runCou¡
+=
addedRuns
;

1681 
˛ónup1
;

1685 
i
=
runCou¡
-1; i>=0; i--) {

1686 
runLígth

i
==0 ? 
runs
[0].
visuÆLimô
 :

1687 
runs
[
i
].
visuÆLimô
-runs[i-1].visualLimit;

1688 
logiˇlSèπ
=
runs
[
i
].logicalStart;

1689 
ödexOddBô
=
	`GET_ODD_BIT
(
logiˇlSèπ
);

1690 
logiˇlSèπ
=
	`GET_INDEX
(logicalStart);

1691 if(
runLígth
<2) {

1692 if(
addedRuns
) {

1693 
runs
[
i
+
addedRuns
]=runs[i];

1695 
logiˇlPos
=
visuÆM≠
[
logiˇlSèπ
];

1696 
runs
[
i
+
addedRuns
].
logiˇlSèπ
=
	`MAKE_INDEX_ODD_PAIR
(
logiˇlPos
,

1697 
ßveLevñs
[
logiˇlPos
]^
ödexOddBô
);

1700 if(
ödexOddBô
) {

1701 
°¨t
=
logiˇlSèπ
;

1702 
limô
=
logiˇlSèπ
+
runLígth
-1;

1703 
°ï
=1;

1705 
°¨t
=
logiˇlSèπ
+
runLígth
-1;

1706 
limô
=
logiˇlSèπ
;

1707 
°ï
=-1;

1709 
j
=
°¨t
; j!=
limô
; j+=
°ï
) {

1710 
ödex0
=
visuÆM≠
[
j
];

1711 
ödex1
=
visuÆM≠
[
j
+
°ï
];

1712 if((
	`BIDI_ABS
(
ödex0
-
ödex1
)!=1Ë|| (
ßveLevñs
[index0]!=saveLevels[index1])) {

1713 
logiˇlPos
=
	`BIDI_MIN
(
visuÆM≠
[
°¨t
], 
ödex0
);

1714 
runs
[
i
+
addedRuns
].
logiˇlSèπ
=
	`MAKE_INDEX_ODD_PAIR
(
logiˇlPos
,

1715 
ßveLevñs
[
logiˇlPos
]^
ödexOddBô
);

1716 
runs
[
i
+
addedRuns
].
visuÆLimô
=runs[i].visualLimit;

1717 
runs
[
i
].
visuÆLimô
-=
	`BIDI_ABS
(
j
-
°¨t
)+1;

1718 
ö£πRemove
=
runs
[
i
].ö£πRemove&(
LRM_AFTER
|
RLM_AFTER
);

1719 
runs
[
i
+
addedRuns
].
ö£πRemove
=insertRemove;

1720 
runs
[
i
].
ö£πRemove
&=~insertRemove;

1721 
°¨t
=
j
+
°ï
;

1722 
addedRuns
--;

1725 if(
addedRuns
) {

1726 
runs
[
i
+
addedRuns
]=runs[i];

1728 
logiˇlPos
=
	`BIDI_MIN
(
visuÆM≠
[
°¨t
], visuÆM≠[
limô
]);

1729 
runs
[
i
+
addedRuns
].
logiˇlSèπ
=
	`MAKE_INDEX_ODD_PAIR
(
logiˇlPos
,

1730 
ßveLevñs
[
logiˇlPos
]^
ödexOddBô
);

1733 
˛ónup1
:

1735 
pBiDi
->
∑øLevñ
^=1;

1736 
˛ónup2
:

1738 
pBiDi
->
ãxt
=text;

1739 
pBiDi
->
Àngth
=
ßveLígth
;

1740 
pBiDi
->
‹igöÆLígth
=
Àngth
;

1741 
pBiDi
->
dúe˘i⁄
=
ßveDúe˘i⁄
;

1743 if(
ßveLígth
>
pBiDi
->
ÀvñsSize
) {

1744 
ßveLígth
=
pBiDi
->
ÀvñsSize
;

1746 
	`u¥v_mem˝y
(
pBiDi
->
Àvñs
, 
ßveLevñs
, 
ßveLígth
*(
UBiDiLevñ
));

1747 
pBiDi
->
åaûögWSSèπ
=
ßveTøûögWSSèπ
;

1749 
	`u¥v_‰ì
(
runsO∆yMem‹y
);

1750 if(
pBiDi
->
runCou¡
>1) {

1751 
pBiDi
->
dúe˘i⁄
=
UBIDI_MIXED
;

1753 
˛ónup3
:

1754 
pBiDi
->
ª‹dîögMode
=
UBIDI_REORDER_RUNS_ONLY
;

1755 
	}
}

1759 
U_CAPI
 
U_EXPORT2


1760 
	$ubidi_£tP¨a
(
UBiDi
 *
pBiDi
, c⁄° 
UCh¨
 *
ãxt
, 
öt32_t
 
Àngth
,

1761 
UBiDiLevñ
 
∑øLevñ
, UBiDiLevñ *
embeddögLevñs
,

1762 
UEº‹Code
 *
pEº‹Code
) {

1763 
UBiDiDúe˘i⁄
 
dúe˘i⁄
;

1766 
	`RETURN_VOID_IF_NULL_OR_FAILING_ERRCODE
(
pEº‹Code
);

1767 if(
pBiDi
==
NULL
 || 
ãxt
==NULL || 
Àngth
<-1 ||

1768 (
∑øLevñ
>
UBIDI_MAX_EXPLICIT_LEVEL
 &&Ö¨aLevñ<
UBIDI_DEFAULT_LTR
)) {

1769 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

1773 if(
Àngth
==-1) {

1774 
Àngth
=
	`u_°æí
(
ãxt
);

1778 if(
pBiDi
->
ª‹dîögMode
==
UBIDI_REORDER_RUNS_ONLY
) {

1779 
	`£tP¨aRunsO∆y
(
pBiDi
, 
ãxt
, 
Àngth
, 
∑øLevñ
, 
pEº‹Code
);

1784 
pBiDi
->
pP¨aBiDi
=
NULL
;

1785 
pBiDi
->
ãxt
=text;

1786 
pBiDi
->
Àngth
ıBiDi->
‹igöÆLígth
ıBiDi->
ªsu…Lígth
=length;

1787 
pBiDi
->
∑øLevñ
=paraLevel;

1788 
pBiDi
->
dúe˘i⁄
=
UBIDI_LTR
;

1789 
pBiDi
->
∑øCou¡
=1;

1791 
pBiDi
->
dúPr›s
=
NULL
;

1792 
pBiDi
->
Àvñs
=
NULL
;

1793 
pBiDi
->
runs
=
NULL
;

1794 
pBiDi
->
ö£πPoöts
.
size
=0;

1795 
pBiDi
->
ö£πPoöts
.
c⁄fúmed
=0;

1800 if(
	`IS_DEFAULT_LEVEL
(
∑øLevñ
)) {

1801 
pBiDi
->
deÁu…P¨aLevñ
=
∑øLevñ
;

1803 
pBiDi
->
deÁu…P¨aLevñ
=0;

1806 if(
Àngth
==0) {

1812 if(
	`IS_DEFAULT_LEVEL
(
∑øLevñ
)) {

1813 
pBiDi
->
∑øLevñ
&=1;

1814 
pBiDi
->
deÁu…P¨aLevñ
=0;

1816 if(
∑øLevñ
&1) {

1817 
pBiDi
->
Êags
=
	`DIRPROP_FLAG
(
R
);

1818 
pBiDi
->
dúe˘i⁄
=
UBIDI_RTL
;

1820 
pBiDi
->
Êags
=
	`DIRPROP_FLAG
(
L
);

1821 
pBiDi
->
dúe˘i⁄
=
UBIDI_LTR
;

1824 
pBiDi
->
runCou¡
=0;

1825 
pBiDi
->
∑øCou¡
=0;

1826 
pBiDi
->
pP¨aBiDi
=pBiDi;

1830 
pBiDi
->
runCou¡
=-1;

1837 if(
	`gëDúPr›sMem‹y
(
pBiDi
, 
Àngth
)) {

1838 
pBiDi
->
dúPr›s
ıBiDi->
dúPr›sMem‹y
;

1839 
	`gëDúPr›s
(
pBiDi
);

1841 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

1845 
Àngth

pBiDi
->length;

1846 
pBiDi
->
åaûögWSSèπ
=
Àngth
;

1848 if(
pBiDi
->
∑øCou¡
>1) {

1849 if(
	`gëInôülP¨asMem‹y
(
pBiDi
,ÖBiDi->
∑øCou¡
)) {

1850 
pBiDi
->
∑øs
ıBiDi->
∑øsMem‹y
;

1851 
pBiDi
->
∑øs
[pBiDi->
∑øCou¡
-1]=
Àngth
;

1853 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

1858 
pBiDi
->
∑øs
ıBiDi->
sim∂eP¨as
;

1859 
pBiDi
->
sim∂eP¨as
[0]=
Àngth
;

1863 if(
embeddögLevñs
==
NULL
) {

1865 if(
	`gëLevñsMem‹y
(
pBiDi
, 
Àngth
)) {

1866 
pBiDi
->
Àvñs
ıBiDi->
ÀvñsMem‹y
;

1867 
dúe˘i⁄
=
	`ªsﬁveEx∂icôLevñs
(
pBiDi
);

1869 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

1874 
pBiDi
->
Àvñs
=
embeddögLevñs
;

1875 
dúe˘i⁄
=
	`checkEx∂icôLevñs
(
pBiDi
, 
pEº‹Code
);

1876 if(
	`U_FAILURE
(*
pEº‹Code
)) {

1885 
pBiDi
->
dúe˘i⁄
=direction;

1886 
dúe˘i⁄
) {

1887 
UBIDI_LTR
:

1889 
pBiDi
->
∑øLevñ
=(
UBiDiLevñ
)((pBiDi->paraLevel+1)&~1);

1892 
pBiDi
->
åaûögWSSèπ
=0;

1894 
UBIDI_RTL
:

1896 
pBiDi
->
∑øLevñ
|=1;

1899 
pBiDi
->
åaûögWSSèπ
=0;

1905 
pBiDi
->
ª‹dîögMode
) {

1906 
UBIDI_REORDER_DEFAULT
:

1907 
pBiDi
->
pImpTabPaú
=&
impTab_DEFAULT
;

1909 
UBIDI_REORDER_NUMBERS_SPECIAL
:

1910 
pBiDi
->
pImpTabPaú
=&
impTab_NUMBERS_SPECIAL
;

1912 
UBIDI_REORDER_GROUP_NUMBERS_WITH_R
:

1913 
pBiDi
->
pImpTabPaú
=&
impTab_GROUP_NUMBERS_WITH_R
;

1915 
UBIDI_REORDER_INVERSE_NUMBERS_AS_L
:

1916 
pBiDi
->
pImpTabPaú
=&
impTab_INVERSE_NUMBERS_AS_L
;

1918 
UBIDI_REORDER_INVERSE_LIKE_DIRECT
:

1919 i‡(
pBiDi
->
ª‹dîögO±i⁄s
 & 
UBIDI_OPTION_INSERT_MARKS
) {

1920 
pBiDi
->
pImpTabPaú
=&
impTab_INVERSE_LIKE_DIRECT_WITH_MARKS
;

1922 
pBiDi
->
pImpTabPaú
=&
impTab_INVERSE_LIKE_DIRECT
;

1925 
UBIDI_REORDER_INVERSE_FOR_NUMBERS_SPECIAL
:

1926 i‡(
pBiDi
->
ª‹dîögO±i⁄s
 & 
UBIDI_OPTION_INSERT_MARKS
) {

1927 
pBiDi
->
pImpTabPaú
=&
impTab_INVERSE_FOR_NUMBERS_SPECIAL_WITH_MARKS
;

1929 
pBiDi
->
pImpTabPaú
=&
impTab_INVERSE_FOR_NUMBERS_SPECIAL
;

1934 
	`U_ASSERT
(
FALSE
);

1948 if(
embeddögLevñs
==
NULL
 && 
pBiDi
->
∑øCou¡
<=1 &&

1949 !(
pBiDi
->
Êags
&
DIRPROP_FLAG_MULTI_RUNS
)) {

1950 
	`ªsﬁveIm∂icôLevñs
(
pBiDi
, 0, 
Àngth
,

1951 
	`GET_LR_FROM_LEVEL
(
	`GET_PARALEVEL
(
pBiDi
, 0)),

1952 
	`GET_LR_FROM_LEVEL
(
	`GET_PARALEVEL
(
pBiDi
, 
Àngth
-1)));

1955 
UBiDiLevñ
 *
Àvñs
=
pBiDi
->levels;

1956 
öt32_t
 
°¨t
, 
limô
=0;

1957 
UBiDiLevñ
 
Àvñ
, 
√xtLevñ
;

1958 
DúPr›
 
s‹
, 
e‹
;

1961 
Àvñ
=
	`GET_PARALEVEL
(
pBiDi
, 0);

1962 
√xtLevñ
=
Àvñs
[0];

1963 if(
Àvñ
<
√xtLevñ
) {

1964 
e‹
=
	`GET_LR_FROM_LEVEL
(
√xtLevñ
);

1966 
e‹
=
	`GET_LR_FROM_LEVEL
(
Àvñ
);

1973 
°¨t
=
limô
;

1974 
Àvñ
=
√xtLevñ
;

1975 if((
°¨t
>0Ë&& (
	`NO_CONTEXT_RTL
(
pBiDi
->
dúPr›s
[°¨t-1])==
B
)) {

1977 
s‹
=
	`GET_LR_FROM_LEVEL
(
	`GET_PARALEVEL
(
pBiDi
, 
°¨t
));

1979 
s‹
=
e‹
;

1983 ++
limô
<
Àngth
 && 
Àvñs
[limô]==
Àvñ
) {}

1986 if(
limô
<
Àngth
) {

1987 
√xtLevñ
=
Àvñs
[
limô
];

1989 
√xtLevñ
=
	`GET_PARALEVEL
(
pBiDi
, 
Àngth
-1);

1993 if((
Àvñ
&~
UBIDI_LEVEL_OVERRIDE
)<(
√xtLevñ
&~UBIDI_LEVEL_OVERRIDE)) {

1994 
e‹
=
	`GET_LR_FROM_LEVEL
(
√xtLevñ
);

1996 
e‹
=
	`GET_LR_FROM_LEVEL
(
Àvñ
);

2001 if(!(
Àvñ
&
UBIDI_LEVEL_OVERRIDE
)) {

2002 
	`ªsﬁveIm∂icôLevñs
(
pBiDi
, 
°¨t
, 
limô
, 
s‹
, 
e‹
);

2006 
Àvñs
[
°¨t
++]&=~
UBIDI_LEVEL_OVERRIDE
;

2007 } 
°¨t
<
limô
);

2009 } 
limô
<
Àngth
);

2012 i‡(
	`U_FAILURE
(
pBiDi
->
ö£πPoöts
.
îr‹Code
))

2014 *
pEº‹Code
=
pBiDi
->
ö£πPoöts
.
îr‹Code
;

2018 
	`adju°WSLevñs
(
pBiDi
);

2024 if((
pBiDi
->
deÁu…P¨aLevñ
>0) &&

2025 (
pBiDi
->
ª‹dîögO±i⁄s
 & 
UBIDI_OPTION_INSERT_MARKS
) &&

2026 ((
pBiDi
->
ª‹dîögMode
==
UBIDI_REORDER_INVERSE_LIKE_DIRECT
) ||

2027 (
pBiDi
->
ª‹dîögMode
==
UBIDI_REORDER_INVERSE_FOR_NUMBERS_SPECIAL
))) {

2028 
öt32_t
 
i
, 
j
, 
°¨t
, 
œ°
;

2029 
DúPr›
 
dúPr›
;

2030 
i
=0; i<
pBiDi
->
∑øCou¡
; i++) {

2031 
œ°
=
pBiDi
->
∑øs
[
i
]-1;

2032 if((
pBiDi
->
dúPr›s
[
œ°
] & 
CONTEXT_RTL
)==0) {

2035 
°¨t

i
==0 ? 0 : 
pBiDi
->
∑øs
[i - 1];

2036 
j
=
œ°
; j>=
°¨t
; j--) {

2037 
dúPr›
=
	`NO_CONTEXT_RTL
(
pBiDi
->
dúPr›s
[
j
]);

2038 if(
dúPr›
==
L
) {

2039 if(
j
<
œ°
) {

2040 
	`NO_CONTEXT_RTL
(
pBiDi
->
dúPr›s
[
œ°
])==
B
) {

2041 
œ°
--;

2044 
	`addPoöt
(
pBiDi
, 
œ°
, 
RLM_BEFORE
);

2047 if(
	`DIRPROP_FLAG
(
dúPr›
Ë& 
MASK_R_AL
) {

2054 if(
pBiDi
->
ª‹dîögO±i⁄s
 & 
UBIDI_OPTION_REMOVE_CONTROLS
) {

2055 
pBiDi
->
ªsu…Lígth
 -pBiDi->
c⁄åﬁCou¡
;

2057 
pBiDi
->
ªsu…Lígth
 +pBiDi->
ö£πPoöts
.
size
;

2059 
pBiDi
->
pP¨aBiDi
=pBiDi;

2060 
	}
}

2062 
U_CAPI
 
U_EXPORT2


2063 
	$ubidi_‹dîP¨agøphsLTR
(
UBiDi
 *
pBiDi
, 
UBoﬁ
 
‹dîP¨agøphsLTR
) {

2064 if(
pBiDi
!=
NULL
) {

2065 
pBiDi
->
‹dîP¨agøphsLTR
=orderParagraphsLTR;

2067 
	}
}

2069 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


2070 
	$ubidi_isOrdîP¨agøphsLTR
(
UBiDi
 *
pBiDi
) {

2071 if(
pBiDi
!=
NULL
) {

2072  
pBiDi
->
‹dîP¨agøphsLTR
;

2074  
FALSE
;

2076 
	}
}

2078 
U_CAPI
 
UBiDiDúe˘i⁄
 
U_EXPORT2


2079 
	$ubidi_gëDúe˘i⁄
(c⁄° 
UBiDi
 *
pBiDi
) {

2080 if(
	`IS_VALID_PARA_OR_LINE
(
pBiDi
)) {

2081  
pBiDi
->
dúe˘i⁄
;

2083  
UBIDI_LTR
;

2085 
	}
}

2087 
U_CAPI
 c⁄° 
UCh¨
 * 
U_EXPORT2


2088 
	$ubidi_gëText
(c⁄° 
UBiDi
 *
pBiDi
) {

2089 if(
	`IS_VALID_PARA_OR_LINE
(
pBiDi
)) {

2090  
pBiDi
->
ãxt
;

2092  
NULL
;

2094 
	}
}

2096 
U_CAPI
 
öt32_t
 
U_EXPORT2


2097 
	$ubidi_gëLígth
(c⁄° 
UBiDi
 *
pBiDi
) {

2098 if(
	`IS_VALID_PARA_OR_LINE
(
pBiDi
)) {

2099  
pBiDi
->
‹igöÆLígth
;

2103 
	}
}

2105 
U_CAPI
 
öt32_t
 
U_EXPORT2


2106 
	$ubidi_gëPro˚s£dLígth
(c⁄° 
UBiDi
 *
pBiDi
) {

2107 if(
	`IS_VALID_PARA_OR_LINE
(
pBiDi
)) {

2108  
pBiDi
->
Àngth
;

2112 
	}
}

2114 
U_CAPI
 
öt32_t
 
U_EXPORT2


2115 
	$ubidi_gëResu…Lígth
(c⁄° 
UBiDi
 *
pBiDi
) {

2116 if(
	`IS_VALID_PARA_OR_LINE
(
pBiDi
)) {

2117  
pBiDi
->
ªsu…Lígth
;

2121 
	}
}

2125 
U_CAPI
 
UBiDiLevñ
 
U_EXPORT2


2126 
	$ubidi_gëP¨aLevñ
(c⁄° 
UBiDi
 *
pBiDi
) {

2127 if(
	`IS_VALID_PARA_OR_LINE
(
pBiDi
)) {

2128  
pBiDi
->
∑øLevñ
;

2132 
	}
}

2134 
U_CAPI
 
öt32_t
 
U_EXPORT2


2135 
	$ubidi_cou¡P¨agøphs
(
UBiDi
 *
pBiDi
) {

2136 if(!
	`IS_VALID_PARA_OR_LINE
(
pBiDi
)) {

2139  
pBiDi
->
∑øCou¡
;

2141 
	}
}

2143 
U_CAPI
 
U_EXPORT2


2144 
	$ubidi_gëP¨agøphByIndex
(c⁄° 
UBiDi
 *
pBiDi
, 
öt32_t
 
∑øIndex
,

2145 
öt32_t
 *
pP¨aSèπ
, i¡32_à*
pP¨aLimô
,

2146 
UBiDiLevñ
 *
pP¨aLevñ
, 
UEº‹Code
 *
pEº‹Code
) {

2147 
öt32_t
 
∑øSèπ
;

2150 
	`RETURN_VOID_IF_NULL_OR_FAILING_ERRCODE
(
pEº‹Code
);

2151 
	`RETURN_VOID_IF_NOT_VALID_PARA_OR_LINE
(
pBiDi
, *
pEº‹Code
);

2152 
	`RETURN_VOID_IF_BAD_RANGE
(
∑øIndex
, 0, 
pBiDi
->
∑øCou¡
, *
pEº‹Code
);

2154 
pBiDi
ıBiDi->
pP¨aBiDi
;

2155 if(
∑øIndex
) {

2156 
∑øSèπ
=
pBiDi
->
∑øs
[
∑øIndex
-1];

2158 
∑øSèπ
=0;

2160 if(
pP¨aSèπ
!=
NULL
) {

2161 *
pP¨aSèπ
=
∑øSèπ
;

2163 if(
pP¨aLimô
!=
NULL
) {

2164 *
pP¨aLimô
=
pBiDi
->
∑øs
[
∑øIndex
];

2166 if(
pP¨aLevñ
!=
NULL
) {

2167 *
pP¨aLevñ
=
	`GET_PARALEVEL
(
pBiDi
, 
∑øSèπ
);

2169 
	}
}

2171 
U_CAPI
 
öt32_t
 
U_EXPORT2


2172 
	$ubidi_gëP¨agøph
(c⁄° 
UBiDi
 *
pBiDi
, 
öt32_t
 
ch¨Index
,

2173 
öt32_t
 *
pP¨aSèπ
, i¡32_à*
pP¨aLimô
,

2174 
UBiDiLevñ
 *
pP¨aLevñ
, 
UEº‹Code
 *
pEº‹Code
) {

2175 
uöt32_t
 
∑øIndex
;

2179 
	`RETURN_IF_NULL_OR_FAILING_ERRCODE
(
pEº‹Code
, -1);

2180 
	`RETURN_IF_NOT_VALID_PARA_OR_LINE
(
pBiDi
, *
pEº‹Code
, -1);

2181 
pBiDi
ıBiDi->
pP¨aBiDi
;

2182 
	`RETURN_IF_BAD_RANGE
(
ch¨Index
, 0, 
pBiDi
->
Àngth
, *
pEº‹Code
, -1);

2184 
∑øIndex
=0; 
ch¨Index
>=
pBiDi
->
∑øs
[paraIndex];ÖaraIndex++);

2185 
	`ubidi_gëP¨agøphByIndex
(
pBiDi
, 
∑øIndex
, 
pP¨aSèπ
, 
pP¨aLimô
, 
pP¨aLevñ
, 
pEº‹Code
);

2186  
∑øIndex
;

2187 
	}
}

2189 
U_CAPI
 
U_EXPORT2


2190 
	$ubidi_£tCœssCÆlback
(
UBiDi
 *
pBiDi
, 
UBiDiCœssCÆlback
 *
√wFn
,

2191 c⁄° *
√wC⁄ãxt
, 
UBiDiCœssCÆlback
 **
ﬁdFn
,

2192 c⁄° **
ﬁdC⁄ãxt
, 
UEº‹Code
 *
pEº‹Code
)

2194 
	`RETURN_VOID_IF_NULL_OR_FAILING_ERRCODE
(
pEº‹Code
);

2195 if(
pBiDi
==
NULL
) {

2196 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

2199 if–
ﬁdFn
 )

2201 *
ﬁdFn
 = 
pBiDi
->
‚CœssCÆlback
;

2203 if–
ﬁdC⁄ãxt
 )

2205 *
ﬁdC⁄ãxt
 = 
pBiDi
->
coCœssCÆlback
;

2207 
pBiDi
->
‚CœssCÆlback
 = 
√wFn
;

2208 
pBiDi
->
coCœssCÆlback
 = 
√wC⁄ãxt
;

2209 
	}
}

2211 
U_CAPI
 
U_EXPORT2


2212 
	$ubidi_gëCœssCÆlback
(
UBiDi
 *
pBiDi
, 
UBiDiCœssCÆlback
 **
‚
, c⁄° **
c⁄ãxt
)

2214 if(
pBiDi
==
NULL
) {

2217 if–
‚
 )

2219 *
‚
 = 
pBiDi
->
‚CœssCÆlback
;

2221 if–
c⁄ãxt
 )

2223 *
c⁄ãxt
 = 
pBiDi
->
coCœssCÆlback
;

2225 
	}
}

2227 
U_CAPI
 
UCh¨Dúe˘i⁄
 
U_EXPORT2


2228 
	$ubidi_gëCu°omizedCœss
(
UBiDi
 *
pBiDi
, 
UCh¨32
 
c
)

2230 
UCh¨Dúe˘i⁄
 
dú
;

2232 if–
pBiDi
->
‚CœssCÆlback
 =
NULL
 ||

2233 (
dú
 = (*
pBiDi
->
‚CœssCÆlback
)’BiDi->
coCœssCÆlback
, 
c
)Ë=
U_BIDI_CLASS_DEFAULT
 )

2235  
	`ubidi_gëCœss
(
pBiDi
->
bdp
, 
c
);

2237  
dú
;

2239 
	}
}

	@ubidi_props.c

19 
	~"unicode/uty≥s.h
"

20 
	~"unicode/u£t.h
"

21 
	~"unicode/ud©a.h
"

22 
	~"ucmnd©a.h
"

23 
	~"ud©amem.h
"

24 
	~"umuãx.h
"

25 
	~"uas£π.h
"

26 
	~"cmem‹y.h
"

27 
	~"uåõ2.h
"

28 
	~"ubidi_¥›s.h
"

29 
	~"u˛n_cmn.h
"

31 
	sUBiDiPr›s
 {

32 
UD©aMem‹y
 *
	mmem
;

33 c⁄° 
öt32_t
 *
	mödexes
;

34 c⁄° 
uöt32_t
 *
	mmúr‹s
;

35 c⁄° 
uöt8_t
 *
	mjgAºay
;

37 
UTrõ2
 
	måõ
;

38 
uöt8_t
 
	mf‹m©Vîsi⁄
[4];

42 
	~"ubidi_¥›s_d©a.c
"

46 
U_CFUNC
 c⁄° 
UBiDiPr›s
 *

47 
	$ubidi_gëSögÀt⁄
() {

48  &
ubidi_¥›s_sögÀt⁄
;

49 
	}
}

53 
UBoﬁ
 
U_CALLCONV


54 
	$_íumPr›îtySèπsR™ge
(c⁄° *
c⁄ãxt
, 
UCh¨32
 
°¨t
, UCh¨32 
íd
, 
uöt32_t
 
vÆue
) {

56 c⁄° 
USëAddî
 *
ß
=(c⁄° USëAddî *)
c⁄ãxt
;

57 
ß
->
	`add
(ß->
£t
, 
°¨t
);

58  
TRUE
;

59 
	}
}

61 
U_CFUNC
 

62 
	$ubidi_addPr›îtySèπs
(c⁄° 
UBiDiPr›s
 *
bdp
, c⁄° 
USëAddî
 *
ß
, 
UEº‹Code
 *
pEº‹Code
) {

63 
öt32_t
 
i
, 
Àngth
;

64 
UCh¨32
 
c
, 
°¨t
, 
limô
;

66 c⁄° 
uöt8_t
 *
jgAºay
;

67 
uöt8_t
 
¥ev
, 
jg
;

69 if(
	`U_FAILURE
(*
pEº‹Code
)) {

74 
	`uåõ2_íum
(&
bdp
->
åõ
, 
NULL
, 
_íumPr›îtySèπsR™ge
, 
ß
);

77 
Àngth
=
bdp
->
ödexes
[
UBIDI_IX_MIRROR_LENGTH
];

78 
i
=0; i<
Àngth
; ++i) {

79 
c
=
	`UBIDI_GET_MIRROR_CODE_POINT
(
bdp
->
múr‹s
[
i
]);

80 
ß
->
	`addR™ge
(ß->
£t
, 
c
, c+1);

84 
°¨t
=
bdp
->
ödexes
[
UBIDI_IX_JG_START
];

85 
limô
=
bdp
->
ödexes
[
UBIDI_IX_JG_LIMIT
];

86 
jgAºay
=
bdp
->jgArray;

87 
¥ev
=0;

88 
°¨t
<
limô
) {

89 
jg
=*
jgAºay
++;

90 if(
jg
!=
¥ev
) {

91 
ß
->
	`add
(ß->
£t
, 
°¨t
);

92 
¥ev
=
jg
;

94 ++
°¨t
;

96 if(
¥ev
!=0) {

98 
ß
->
	`add
(ß->
£t
, 
limô
);

104 
	}
}

108 
U_CFUNC
 
öt32_t


109 
	$ubidi_gëMaxVÆue
(c⁄° 
UBiDiPr›s
 *
bdp
, 
UPr›îty
 
which
) {

110 
öt32_t
 
max
;

112 if(
bdp
==
NULL
) {

116 
max
=
bdp
->
ödexes
[
UBIDI_MAX_VALUES_INDEX
];

117 
which
) {

118 
UCHAR_BIDI_CLASS
:

119  (
max
&
UBIDI_CLASS_MASK
);

120 
UCHAR_JOINING_GROUP
:

121  (
max
&
UBIDI_MAX_JG_MASK
)>>
UBIDI_MAX_JG_SHIFT
;

122 
UCHAR_JOINING_TYPE
:

123  (
max
&
UBIDI_JT_MASK
)>>
UBIDI_JT_SHIFT
;

127 
	}
}

129 
U_CAPI
 
UCh¨Dúe˘i⁄


130 
	$ubidi_gëCœss
(c⁄° 
UBiDiPr›s
 *
bdp
, 
UCh¨32
 
c
) {

131 
uöt16_t
 
¥›s
=
	`UTRIE2_GET16
(&
bdp
->
åõ
, 
c
);

132  (
UCh¨Dúe˘i⁄
)
	`UBIDI_GET_CLASS
(
¥›s
);

133 
	}
}

135 
U_CFUNC
 
UBoﬁ


136 
	$ubidi_isMúr‹ed
(c⁄° 
UBiDiPr›s
 *
bdp
, 
UCh¨32
 
c
) {

137 
uöt16_t
 
¥›s
=
	`UTRIE2_GET16
(&
bdp
->
åõ
, 
c
);

138  (
UBoﬁ
)
	`UBIDI_GET_FLAG
(
¥›s
, 
UBIDI_IS_MIRRORED_SHIFT
);

139 
	}
}

141 
U_CFUNC
 
UCh¨32


142 
	$ubidi_gëMúr‹
(c⁄° 
UBiDiPr›s
 *
bdp
, 
UCh¨32
 
c
) {

143 
uöt16_t
 
¥›s
=
	`UTRIE2_GET16
(&
bdp
->
åõ
, 
c
);

144 
öt32_t
 
dñè
=((
öt16_t
)
¥›s
)>>
UBIDI_MIRROR_DELTA_SHIFT
;

145 if(
dñè
!=
UBIDI_ESC_MIRROR_DELTA
) {

146  
c
+
dñè
;

149 c⁄° 
uöt32_t
 *
múr‹s
;

150 
uöt32_t
 
m
;

151 
öt32_t
 
i
, 
Àngth
;

152 
UCh¨32
 
c2
;

154 
múr‹s
=
bdp
->mirrors;

155 
Àngth
=
bdp
->
ödexes
[
UBIDI_IX_MIRROR_LENGTH
];

158 
i
=0; i<
Àngth
; ++i) {

159 
m
=
múr‹s
[
i
];

160 
c2
=
	`UBIDI_GET_MIRROR_CODE_POINT
(
m
);

161 if(
c
==
c2
) {

163  
	`UBIDI_GET_MIRROR_CODE_POINT
(
múr‹s
[
	`UBIDI_GET_MIRROR_INDEX
(
m
)]);

164 } if(
c
<
c2
) {

170  
c
;

172 
	}
}

174 
U_CFUNC
 
UBoﬁ


175 
	$ubidi_isBidiC⁄åﬁ
(c⁄° 
UBiDiPr›s
 *
bdp
, 
UCh¨32
 
c
) {

176 
uöt16_t
 
¥›s
=
	`UTRIE2_GET16
(&
bdp
->
åõ
, 
c
);

177  (
UBoﬁ
)
	`UBIDI_GET_FLAG
(
¥›s
, 
UBIDI_BIDI_CONTROL_SHIFT
);

178 
	}
}

180 
U_CFUNC
 
UBoﬁ


181 
	$ubidi_isJoöC⁄åﬁ
(c⁄° 
UBiDiPr›s
 *
bdp
, 
UCh¨32
 
c
) {

182 
uöt16_t
 
¥›s
=
	`UTRIE2_GET16
(&
bdp
->
åõ
, 
c
);

183  (
UBoﬁ
)
	`UBIDI_GET_FLAG
(
¥›s
, 
UBIDI_JOIN_CONTROL_SHIFT
);

184 
	}
}

186 
U_CFUNC
 
UJoöögTy≥


187 
	$ubidi_gëJoöögTy≥
(c⁄° 
UBiDiPr›s
 *
bdp
, 
UCh¨32
 
c
) {

188 
uöt16_t
 
¥›s
=
	`UTRIE2_GET16
(&
bdp
->
åõ
, 
c
);

189  (
UJoöögTy≥
)((
¥›s
&
UBIDI_JT_MASK
)>>
UBIDI_JT_SHIFT
);

190 
	}
}

192 
U_CFUNC
 
UJoöögGroup


193 
	$ubidi_gëJoöögGroup
(c⁄° 
UBiDiPr›s
 *
bdp
, 
UCh¨32
 
c
) {

194 
UCh¨32
 
°¨t
, 
limô
;

196 
°¨t
=
bdp
->
ödexes
[
UBIDI_IX_JG_START
];

197 
limô
=
bdp
->
ödexes
[
UBIDI_IX_JG_LIMIT
];

198 if(
°¨t
<=
c
 && c<
limô
) {

199  (
UJoöögGroup
)
bdp
->
jgAºay
[
c
-
°¨t
];

201  
U_JG_NO_JOINING_GROUP
;

203 
	}
}

207 
U_CFUNC
 
UCh¨Dúe˘i⁄


208 
	$u_ch¨Dúe˘i⁄
(
UCh¨32
 
c
) {

209  
	`ubidi_gëCœss
(&
ubidi_¥›s_sögÀt⁄
, 
c
);

210 
	}
}

212 
U_CFUNC
 
UBoﬁ


213 
	$u_isMúr‹ed
(
UCh¨32
 
c
) {

214  
	`ubidi_isMúr‹ed
(&
ubidi_¥›s_sögÀt⁄
, 
c
);

215 
	}
}

217 
U_CFUNC
 
UCh¨32


218 
	$u_ch¨Múr‹
(
UCh¨32
 
c
) {

219  
	`ubidi_gëMúr‹
(&
ubidi_¥›s_sögÀt⁄
, 
c
);

220 
	}
}

	@ubidi_props.h

19 #i‚de‡
__UBIDI_PROPS_H__


20 
	#__UBIDI_PROPS_H__


	)

22 
	~"unicode/uty≥s.h
"

23 
	~"unicode/u£t.h
"

24 
	~"u£t_imp.h
"

25 
	~"ud©aswp.h
"

27 
U_CDECL_BEGIN


31 
	gUBiDiPr›s
;

32 
UBiDiPr›s
 
	tUBiDiPr›s
;

34 
U_CFUNC
 c⁄° 
UBiDiPr›s
 *

35 
ubidi_gëSögÀt⁄
();

37 
U_CAPI
 
öt32_t


38 
ubidi_sw≠
(c⁄° 
UD©aSw≠≥r
 *
ds
,

39 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

40 
UEº‹Code
 *
pEº‹Code
);

42 
U_CFUNC
 

43 
ubidi_addPr›îtySèπs
(c⁄° 
UBiDiPr›s
 *
bdp
, c⁄° 
USëAddî
 *
ß
, 
UEº‹Code
 *
pEº‹Code
);

47 
U_CFUNC
 
öt32_t


48 
ubidi_gëMaxVÆue
(c⁄° 
UBiDiPr›s
 *
bdp
, 
UPr›îty
 
which
);

50 
U_CAPI
 
UCh¨Dúe˘i⁄


51 
ubidi_gëCœss
(c⁄° 
UBiDiPr›s
 *
bdp
, 
UCh¨32
 
c
);

53 
U_CFUNC
 
UBoﬁ


54 
ubidi_isMúr‹ed
(c⁄° 
UBiDiPr›s
 *
bdp
, 
UCh¨32
 
c
);

56 
U_CFUNC
 
UCh¨32


57 
ubidi_gëMúr‹
(c⁄° 
UBiDiPr›s
 *
bdp
, 
UCh¨32
 
c
);

59 
U_CFUNC
 
UBoﬁ


60 
ubidi_isBidiC⁄åﬁ
(c⁄° 
UBiDiPr›s
 *
bdp
, 
UCh¨32
 
c
);

62 
U_CFUNC
 
UBoﬁ


63 
ubidi_isJoöC⁄åﬁ
(c⁄° 
UBiDiPr›s
 *
bdp
, 
UCh¨32
 
c
);

65 
U_CFUNC
 
UJoöögTy≥


66 
ubidi_gëJoöögTy≥
(c⁄° 
UBiDiPr›s
 *
bdp
, 
UCh¨32
 
c
);

68 
U_CFUNC
 
UJoöögGroup


69 
ubidi_gëJoöögGroup
(c⁄° 
UBiDiPr›s
 *
bdp
, 
UCh¨32
 
c
);

73 
	#UBIDI_DATA_NAME
 "ubidi"

	)

74 
	#UBIDI_DATA_TYPE
 "icu"

	)

77 
	#UBIDI_FMT_0
 0x42

	)

78 
	#UBIDI_FMT_1
 0x69

	)

79 
	#UBIDI_FMT_2
 0x44

	)

80 
	#UBIDI_FMT_3
 0x69

	)

84 
	mUBIDI_IX_INDEX_TOP
,

85 
	mUBIDI_IX_LENGTH
,

86 
	mUBIDI_IX_TRIE_SIZE
,

87 
	mUBIDI_IX_MIRROR_LENGTH
,

89 
	mUBIDI_IX_JG_START
,

90 
	mUBIDI_IX_JG_LIMIT
,

92 
	mUBIDI_MAX_VALUES_INDEX
=15,

93 
	mUBIDI_IX_TOP
=16

100 
	mUBIDI_JT_SHIFT
=5,

104 
	mUBIDI_JOIN_CONTROL_SHIFT
=10,

105 
	mUBIDI_BIDI_CONTROL_SHIFT
=11,

107 
	mUBIDI_IS_MIRRORED_SHIFT
=12,

108 
	mUBIDI_MIRROR_DELTA_SHIFT
=13,

110 
	mUBIDI_MAX_JG_SHIFT
=16

113 
	#UBIDI_CLASS_MASK
 0x0000001f

	)

114 
	#UBIDI_JT_MASK
 0x000000e0

	)

116 
	#UBIDI_MAX_JG_MASK
 0x00ff0000

	)

118 
	#UBIDI_GET_CLASS
(
¥›s
Ë(’r›s)&
UBIDI_CLASS_MASK
)

	)

119 
	#UBIDI_GET_FLAG
(
¥›s
, 
shi·
Ë((’r›s)>>(shi·))&1)

	)

122 
	mUBIDI_ESC_MIRROR_DELTA
=-4,

123 
	mUBIDI_MIN_MIRROR_DELTA
=-3,

124 
	mUBIDI_MAX_MIRROR_DELTA
=3

131 
	mUBIDI_MIRROR_INDEX_SHIFT
=21,

132 
	mUBIDI_MAX_MIRROR_INDEX
=0x7ff

135 
	#UBIDI_GET_MIRROR_CODE_POINT
(
m
Ë(
UCh¨32
)((m)&0x1fffff)

	)

137 
	#UBIDI_GET_MIRROR_INDEX
(
m
Ë((m)>>
UBIDI_MIRROR_INDEX_SHIFT
)

	)

139 
	gU_CDECL_END


	@ubidi_props_data.c

10 c⁄° 
UVîsi⁄Info
 
	gubidi_¥›s_d©aVîsi⁄
={6,0,0,0};

12 c⁄° 
öt32_t
 
	gubidi_¥›s_ödexes
[
UBIDI_IX_TOP
]={0x10,0x4fa0,0x4d98,0x1a,0x620,0x780,0,0,0,0,0,0,0,0,0,0x3800b2};

14 c⁄° 
uöt16_t
 
	gubidi_¥›s_åõIndex
[9924]={

638 c⁄° 
uöt32_t
 
	gubidi_¥›s_múr‹s
[26]={

643 c⁄° 
uöt8_t
 
	gubidi_¥›s_jgAºay
[352]={

668 c⁄° 
UBiDiPr›s
 
	gubidi_¥›s_sögÀt⁄
={

669 
NULL
,

670 
ubidi_¥›s_ödexes
,

671 
ubidi_¥›s_múr‹s
,

672 
ubidi_¥›s_jgAºay
,

674 
ubidi_¥›s_åõIndex
,

675 
ubidi_¥›s_åõIndex
+3140,

676 
NULL
,

685 
NULL
, 0, 
FALSE
, FALSE, 0, NULL

	@ubidiimp.h

17 #i‚de‡
UBIDIIMP_H


18 
	#UBIDIIMP_H


	)

21 #ifde‡
U_COMMON_IMPLEMENTATION


23 
	~"unicode/uty≥s.h
"

24 
	~"unicode/uch¨.h
"

25 
	~"ubidi_¥›s.h
"

29 
uöt8_t
 
	tDúPr›
;

30 
uöt32_t
 
	tFœgs
;

37 
	mL

U_LEFT_TO_RIGHT
,

38 
	mR

U_RIGHT_TO_LEFT
,

39 
	mEN

U_EUROPEAN_NUMBER
,

40 
	mES

U_EUROPEAN_NUMBER_SEPARATOR
,

41 
	mET

U_EUROPEAN_NUMBER_TERMINATOR
,

42 
	mAN

U_ARABIC_NUMBER
,

43 
	mCS

U_COMMON_NUMBER_SEPARATOR
,

44 
	mB

U_BLOCK_SEPARATOR
,

45 
	mS

U_SEGMENT_SEPARATOR
,

46 
	mWS

U_WHITE_SPACE_NEUTRAL
,

47 
	mON

U_OTHER_NEUTRAL
,

48 
	mLRE
=
U_LEFT_TO_RIGHT_EMBEDDING
,

49 
	mLRO
=
U_LEFT_TO_RIGHT_OVERRIDE
,

50 
	mAL

U_RIGHT_TO_LEFT_ARABIC
,

51 
	mRLE
=
U_RIGHT_TO_LEFT_EMBEDDING
,

52 
	mRLO
=
U_RIGHT_TO_LEFT_OVERRIDE
,

53 
	mPDF
=
U_POP_DIRECTIONAL_FORMAT
,

54 
	mNSM
=
U_DIR_NON_SPACING_MARK
,

55 
	mBN

U_BOUNDARY_NEUTRAL
,

56 
	mdúPr›Cou¡


65 
	#DIRPROP_FLAG
(
dú
Ë(1UL<<(dú))

	)

68 
	#DIRPROP_FLAG_MULTI_RUNS
 (1UL<<31)

	)

71 
	#MASK_LTR
 (
	`DIRPROP_FLAG
(
L
)|DIRPROP_FLAG(
EN
)|DIRPROP_FLAG(
AN
)|DIRPROP_FLAG(
LRE
)|DIRPROP_FLAG(
LRO
))

	)

72 
	#MASK_RTL
 (
	`DIRPROP_FLAG
(
R
)|DIRPROP_FLAG(
AL
)|DIRPROP_FLAG(
RLE
)|DIRPROP_FLAG(
RLO
))

	)

73 
	#MASK_R_AL
 (
	`DIRPROP_FLAG
(
R
)|DIRPROP_FLAG(
AL
))

	)

76 
	#MASK_LRX
 (
	`DIRPROP_FLAG
(
LRE
)|DIRPROP_FLAG(
LRO
))

	)

77 
	#MASK_RLX
 (
	`DIRPROP_FLAG
(
RLE
)|DIRPROP_FLAG(
RLO
))

	)

78 
	#MASK_OVERRIDE
 (
	`DIRPROP_FLAG
(
LRO
)|DIRPROP_FLAG(
RLO
))

	)

80 
	#MASK_EXPLICIT
 (
MASK_LRX
|
MASK_RLX
|
	`DIRPROP_FLAG
(
PDF
))

	)

81 
	#MASK_BN_EXPLICIT
 (
	`DIRPROP_FLAG
(
BN
)|
MASK_EXPLICIT
)

	)

84 
	#MASK_B_S
 (
	`DIRPROP_FLAG
(
B
)|DIRPROP_FLAG(
S
))

	)

87 
	#MASK_WS
 (
MASK_B_S
|
	`DIRPROP_FLAG
(
WS
)|
MASK_BN_EXPLICIT
)

	)

88 
	#MASK_N
 (
	`DIRPROP_FLAG
(
ON
)|
MASK_WS
)

	)

91 
	#MASK_ET_NSM_BN
 (
	`DIRPROP_FLAG
(
ET
)|DIRPROP_FLAG(
NSM
)|
MASK_BN_EXPLICIT
)

	)

94 
	#MASK_POSSIBLE_N
 (
	`DIRPROP_FLAG
(
CS
)|DIRPROP_FLAG(
ES
)|DIRPROP_FLAG(
ET
)|
MASK_N
)

	)

101 
	#MASK_EMBEDDING
 (
	`DIRPROP_FLAG
(
NSM
)|
MASK_POSSIBLE_N
)

	)

104 
	#GET_LR_FROM_LEVEL
(
Àvñ
Ë((
DúPr›
)(÷evñ)&1))

	)

106 
	#IS_DEFAULT_LEVEL
(
Àvñ
Ë(÷evñ)>=0x„)

	)

112 
	#CONTEXT_RTL
 0x80

	)

113 
	#NO_CONTEXT_RTL
(
dú
Ë((dú)&~
CONTEXT_RTL
)

	)

117 
	#DIRPROP_FLAG_NC
(
dú
Ë(1UL<<(
	`NO_CONTEXT_RTL
(dú)))

	)

119 
	#GET_PARALEVEL
(
ubidi
, 
ödex
) \

120 (
UBiDiLevñ
)((
ubidi
)->
deÁu…P¨aLevñ
 ? (ubidi)->
dúPr›s
[
ödex
]>>7 \

121 : (
ubidi
)->
∑øLevñ
)

	)

124 
öt32_t
 
	tP¨a
;

126 
	#CR
 0x000D

	)

127 
	#LF
 0x000A

	)

131 
	mLRM_BEFORE
=1,

132 
	mLRM_AFTER
=2,

133 
	mRLM_BEFORE
=4,

134 
	mRLM_AFTER
=8

137 
	sRun
 {

138 
öt32_t
 
	mlogiˇlSèπ
,

139 
	mvisuÆLimô
,

140 
	mö£πRemove
;

142 } 
	tRun
;

145 
	#INDEX_ODD_BIT
 (1UL<<31)

	)

147 
	#MAKE_INDEX_ODD_PAIR
(
ödex
, 
Àvñ
Ë((ödex)|((
öt32_t
)÷evñ)<<31))

	)

148 
	#ADD_ODD_BIT_FROM_LEVEL
(
x
, 
Àvñ
Ë((x)|=((
öt32_t
)÷evñ)<<31))

	)

149 
	#REMOVE_ODD_BIT
(
x
Ë((x)&=~
INDEX_ODD_BIT
)

	)

151 
	#GET_INDEX
(
x
Ë((x)&~
INDEX_ODD_BIT
)

	)

152 
	#GET_ODD_BIT
(
x
Ë((
uöt32_t
)(x)>>31)

	)

153 
	#IS_ODD_RUN
(
x
Ë((
UBoﬁ
)(((x)&
INDEX_ODD_BIT
)!=0))

	)

154 
	#IS_EVEN_RUN
(
x
Ë((
UBoﬁ
)(((x)&
INDEX_ODD_BIT
)==0))

	)

156 
U_CFUNC
 
UBoﬁ


157 
ubidi_gëRuns
(
UBiDi
 *
pBiDi
, 
UEº‹Code
 *
pEº‹Code
);

161 
	mZWNJ_CHAR
=0x200c,

162 
	mZWJ_CHAR
,

163 
	mLRM_CHAR
,

164 
	mRLM_CHAR
,

165 
	mLRE_CHAR
=0x202a,

166 
	mRLE_CHAR
,

167 
	mPDF_CHAR
,

168 
	mLRO_CHAR
,

169 
	mRLO_CHAR


172 
	#IS_BIDI_CONTROL_CHAR
(
c
Ë(((
uöt32_t
)(c)&0xfffffffc)==
ZWNJ_CHAR
 || (uöt32_t)((c)-
LRE_CHAR
)<5)

	)

176 
	sPoöt
 {

177 
öt32_t
 
	mpos
;

178 
öt32_t
 
	mÊag
;

179 } 
	tPoöt
;

181 
	sIn£πPoöts
 {

182 
öt32_t
 
	mˇ∑côy
;

183 
öt32_t
 
	msize
;

184 
öt32_t
 
	mc⁄fúmed
;

185 
UEº‹Code
 
	mîr‹Code
;

186 
Poöt
 *
	mpoöts
;

187 } 
	tIn£πPoöts
;

192 
	sUBiDi
 {

197 c⁄° 
UBiDi
 * 
	mpP¨aBiDi
;

199 c⁄° 
UBiDiPr›s
 *
	mbdp
;

202 c⁄° 
UCh¨
 *
	mãxt
;

205 
öt32_t
 
	m‹igöÆLígth
;

212 
öt32_t
 
	mÀngth
;

218 
öt32_t
 
	mªsu…Lígth
;

221 
öt32_t
 
	mdúPr›sSize
, 
	mÀvñsSize
, 
	m∑øsSize
, 
	mrunsSize
;

224 
DúPr›
 *
	mdúPr›sMem‹y
;

225 
UBiDiLevñ
 *
	mÀvñsMem‹y
;

226 
P¨a
 *
	m∑øsMem‹y
;

227 
Run
 *
	mrunsMem‹y
;

230 
UBoﬁ
 
	mmayAŒoˇãText
, 
	mmayAŒoˇãRuns
;

233 c⁄° 
DúPr›
 *
	mdúPr›s
;

234 
UBiDiLevñ
 *
	mÀvñs
;

237 
UBoﬁ
 
	misInvî£
;

240 
UBiDiRe‹dîögMode
 
	mª‹dîögMode
;

246 
	#UBIDI_REORDER_LAST_LOGICAL_TO_VISUAL
 
UBIDI_REORDER_NUMBERS_SPECIAL


	)

249 
uöt32_t
 
	mª‹dîögO±i⁄s
;

252 
UBoﬁ
 
	m‹dîP¨agøphsLTR
;

255 
UBiDiLevñ
 
	m∑øLevñ
;

258 
UBiDiLevñ
 
	mdeÁu…P¨aLevñ
;

261 c⁄° 
ImpTabPaú
 * 
	mpImpTabPaú
;

264 
UBiDiDúe˘i⁄
 
	mdúe˘i⁄
;

267 
Fœgs
 
	mÊags
;

270 
öt32_t
 
	mœ°AøbicPos
;

274 
öt32_t
 
	måaûögWSSèπ
;

277 
öt32_t
 
	m∑øCou¡
;

278 
P¨a
 *
	m∑øs
;

282 
P¨a
 
	msim∂eP¨as
[1];

285 
öt32_t
 
	mrunCou¡
;

286 
Run
 *
	mruns
;

289 
Run
 
	msim∂eRuns
[1];

292 
In£πPoöts
 
	mö£πPoöts
;

295 
öt32_t
 
	mc⁄åﬁCou¡
;

298 
UBiDiCœssCÆlback
 *
	m‚CœssCÆlback
;

299 c⁄° *
	mcoCœssCÆlback
;

302 
	#IS_VALID_PARA
(
x
Ë((xË&& ((x)->
pP¨aBiDi
==(x)))

	)

303 
	#IS_VALID_PARA_OR_LINE
(
x
Ë((xË&& ((x)->
pP¨aBiDi
==(xË|| (((x)->pP¨aBiDiË&& (x)->pP¨aBiDi->pP¨aBiDi==(x)->pP¨aBiDi)))

	)

306 
DúPr›
 *
	mdúPr›sMem‹y
;

307 
UBiDiLevñ
 *
	mÀvñsMem‹y
;

308 
P¨a
 *
	m∑øsMem‹y
;

309 
Run
 *
	mrunsMem‹y
;

310 } 
	tBidiMem‹yF‹AŒoˇti⁄
;

313 
	#RETURN_IF_NULL_OR_FAILING_ERRCODE
(
pEºcode
, 
ªtvÆue
) \

314 if((
pEºcode
)==
NULL
 || 
	`U_FAILURE
(*pEºcode)Ë 
ªtvÆue


	)

315 
	#RETURN_IF_NOT_VALID_PARA
(
bidi
, 
îrcode
, 
ªtvÆue
) \

316 if(!
	`IS_VALID_PARA
(
bidi
)) { \

317 
îrcode
=
U_INVALID_STATE_ERROR
; \

318  
ªtvÆue
; \

319 }

	)

320 
	#RETURN_IF_NOT_VALID_PARA_OR_LINE
(
bidi
, 
îrcode
, 
ªtvÆue
) \

321 if(!
	`IS_VALID_PARA_OR_LINE
(
bidi
)) { \

322 
îrcode
=
U_INVALID_STATE_ERROR
; \

323  
ªtvÆue
; \

324 }

	)

325 
	#RETURN_IF_BAD_RANGE
(
¨g
, 
°¨t
, 
limô
, 
îrcode
, 
ªtvÆue
) \

326 if((
¨g
)<(
°¨t
Ë|| (¨g)>=(
limô
)) { \

327 (
îrcode
)=
U_ILLEGAL_ARGUMENT_ERROR
; \

328  
ªtvÆue
; \

329 }

	)

331 
	#RETURN_VOID_IF_NULL_OR_FAILING_ERRCODE
(
pEºcode
) \

332 if((
pEºcode
)==
NULL
 || 
	`U_FAILURE
(*pEºcode)Ë

	)

333 
	#RETURN_VOID_IF_NOT_VALID_PARA
(
bidi
, 
îrcode
) \

334 if(!
	`IS_VALID_PARA
(
bidi
)) { \

335 
îrcode
=
U_INVALID_STATE_ERROR
; \

337 }

	)

338 
	#RETURN_VOID_IF_NOT_VALID_PARA_OR_LINE
(
bidi
, 
îrcode
) \

339 if(!
	`IS_VALID_PARA_OR_LINE
(
bidi
)) { \

340 
îrcode
=
U_INVALID_STATE_ERROR
; \

342 }

	)

343 
	#RETURN_VOID_IF_BAD_RANGE
(
¨g
, 
°¨t
, 
limô
, 
îrcode
) \

344 if((
¨g
)<(
°¨t
Ë|| (¨g)>=(
limô
)) { \

345 (
îrcode
)=
U_ILLEGAL_ARGUMENT_ERROR
; \

347 }

	)

350 
U_CFUNC
 
UBoﬁ


351 
ubidi_gëMem‹y
(
BidiMem‹yF‹AŒoˇti⁄
 *
pMem‹y
, 
öt32_t
 *
pSize
, 
UBoﬁ
 
mayAŒoˇã
, i¡32_à
sizeNìded
);

354 
	#gëDúPr›sMem‹y
(
pBiDi
, 
Àngth
) \

355 
	`ubidi_gëMem‹y
((
BidiMem‹yF‹AŒoˇti⁄
 *)&(
pBiDi
)->
dúPr›sMem‹y
, &’BiDi)->
dúPr›sSize
, \

356 (
pBiDi
)->
mayAŒoˇãText
, (
Àngth
))

	)

358 
	#gëLevñsMem‹y
(
pBiDi
, 
Àngth
) \

359 
	`ubidi_gëMem‹y
((
BidiMem‹yF‹AŒoˇti⁄
 *)&(
pBiDi
)->
ÀvñsMem‹y
, &’BiDi)->
ÀvñsSize
, \

360 (
pBiDi
)->
mayAŒoˇãText
, (
Àngth
))

	)

362 
	#gëRunsMem‹y
(
pBiDi
, 
Àngth
) \

363 
	`ubidi_gëMem‹y
((
BidiMem‹yF‹AŒoˇti⁄
 *)&(
pBiDi
)->
runsMem‹y
, &’BiDi)->
runsSize
, \

364 (
pBiDi
)->
mayAŒoˇãRuns
, (
Àngth
)*(
Run
))

	)

367 
	#gëInôülDúPr›sMem‹y
(
pBiDi
, 
Àngth
) \

368 
	`ubidi_gëMem‹y
((
BidiMem‹yF‹AŒoˇti⁄
 *)&(
pBiDi
)->
dúPr›sMem‹y
, &’BiDi)->
dúPr›sSize
, \

369 
TRUE
, (
Àngth
))

	)

371 
	#gëInôülLevñsMem‹y
(
pBiDi
, 
Àngth
) \

372 
	`ubidi_gëMem‹y
((
BidiMem‹yF‹AŒoˇti⁄
 *)&(
pBiDi
)->
ÀvñsMem‹y
, &’BiDi)->
ÀvñsSize
, \

373 
TRUE
, (
Àngth
))

	)

375 
	#gëInôülP¨asMem‹y
(
pBiDi
, 
Àngth
) \

376 
	`ubidi_gëMem‹y
((
BidiMem‹yF‹AŒoˇti⁄
 *)&(
pBiDi
)->
∑øsMem‹y
, &’BiDi)->
∑øsSize
, \

377 
TRUE
, (
Àngth
)*(
P¨a
))

	)

379 
	#gëInôülRunsMem‹y
(
pBiDi
, 
Àngth
) \

380 
	`ubidi_gëMem‹y
((
BidiMem‹yF‹AŒoˇti⁄
 *)&(
pBiDi
)->
runsMem‹y
, &’BiDi)->
runsSize
, \

381 
TRUE
, (
Àngth
)*(
Run
))

	)

	@ubidiln.c

17 
	~"cmem‹y.h
"

18 
	~"unicode/uty≥s.h
"

19 
	~"unicode/u°rög.h
"

20 
	~"unicode/uch¨.h
"

21 
	~"unicode/ubidi.h
"

22 
	~"ubidiimp.h
"

23 
	~"uas£π.h
"

90 
	$£tTøûögWSSèπ
(
UBiDi
 *
pBiDi
) {

93 c⁄° 
DúPr›
 *
dúPr›s
=
pBiDi
->dirProps;

94 
UBiDiLevñ
 *
Àvñs
=
pBiDi
->levels;

95 
öt32_t
 
°¨t
=
pBiDi
->
Àngth
;

96 
UBiDiLevñ
 
∑øLevñ
=
pBiDi
->paraLevel;

104 if(
	`NO_CONTEXT_RTL
(
dúPr›s
[
°¨t
-1])==
B
) {

105 
pBiDi
->
åaûögWSSèπ
=
°¨t
;

109 
°¨t
>0 && 
	`DIRPROP_FLAG_NC
(
dúPr›s
[°¨t-1])&
MASK_WS
) {

110 --
°¨t
;

114 
°¨t
>0 && 
Àvñs
[°¨t-1]==
∑øLevñ
) {

115 --
°¨t
;

118 
pBiDi
->
åaûögWSSèπ
=
°¨t
;

119 
	}
}

123 
U_CAPI
 
U_EXPORT2


124 
	$ubidi_£tLöe
(c⁄° 
UBiDi
 *
pP¨aBiDi
,

125 
öt32_t
 
°¨t
, i¡32_à
limô
,

126 
UBiDi
 *
pLöeBiDi
,

127 
UEº‹Code
 *
pEº‹Code
) {

128 
öt32_t
 
Àngth
;

131 
	`RETURN_VOID_IF_NULL_OR_FAILING_ERRCODE
(
pEº‹Code
);

132 
	`RETURN_VOID_IF_NOT_VALID_PARA
(
pP¨aBiDi
, *
pEº‹Code
);

133 
	`RETURN_VOID_IF_BAD_RANGE
(
°¨t
, 0, 
limô
, *
pEº‹Code
);

134 
	`RETURN_VOID_IF_BAD_RANGE
(
limô
, 0, 
pP¨aBiDi
->
Àngth
+1, *
pEº‹Code
);

135 if(
pLöeBiDi
==
NULL
) {

136 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

139 if(
	`ubidi_gëP¨agøph
(
pP¨aBiDi
, 
°¨t
, 
NULL
, NULL, NULL, 
pEº‹Code
) !=

140 
	`ubidi_gëP¨agøph
(
pP¨aBiDi
, 
limô
-1, 
NULL
, NULL, NULL, 
pEº‹Code
)) {

142 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

147 
pLöeBiDi
->
pP¨aBiDi
=
NULL
;

148 
pLöeBiDi
->
ãxt
=
pP¨aBiDi
->ãxt+
°¨t
;

149 
Àngth
=
pLöeBiDi
->Àngth=
limô
-
°¨t
;

150 
pLöeBiDi
->
ªsu…Lígth
ıLöeBiDi->
‹igöÆLígth
=
Àngth
;

151 
pLöeBiDi
->
∑øLevñ
=
	`GET_PARALEVEL
(
pP¨aBiDi
, 
°¨t
);

152 
pLöeBiDi
->
∑øCou¡
=
pP¨aBiDi
->paraCount;

153 
pLöeBiDi
->
runs
=
NULL
;

154 
pLöeBiDi
->
Êags
=0;

155 
pLöeBiDi
->
ª‹dîögMode
=
pP¨aBiDi
->reorderingMode;

156 
pLöeBiDi
->
ª‹dîögO±i⁄s
=
pP¨aBiDi
->reorderingOptions;

157 
pLöeBiDi
->
c⁄åﬁCou¡
=0;

158 if(
pP¨aBiDi
->
c⁄åﬁCou¡
>0) {

159 
öt32_t
 
j
;

160 
j
=
°¨t
; j<
limô
; j++) {

161 if(
	`IS_BIDI_CONTROL_CHAR
(
pP¨aBiDi
->
ãxt
[
j
])) {

162 
pLöeBiDi
->
c⁄åﬁCou¡
++;

165 
pLöeBiDi
->
ªsu…Lígth
-ıLöeBiDi->
c⁄åﬁCou¡
;

168 
pLöeBiDi
->
dúPr›s
=
pP¨aBiDi
->dúPr›s+
°¨t
;

169 
pLöeBiDi
->
Àvñs
=
pP¨aBiDi
->Àvñs+
°¨t
;

170 
pLöeBiDi
->
runCou¡
=-1;

172 if(
pP¨aBiDi
->
dúe˘i⁄
!=
UBIDI_MIXED
) {

174 
pLöeBiDi
->
dúe˘i⁄
=
pP¨aBiDi
->direction;

181 if(
pP¨aBiDi
->
åaûögWSSèπ
<=
°¨t
) {

182 
pLöeBiDi
->
åaûögWSSèπ
=0;

183 } if(
pP¨aBiDi
->
åaûögWSSèπ
<
limô
) {

184 
pLöeBiDi
->
åaûögWSSèπ
=
pP¨aBiDi
->åaûögWSSèπ-
°¨t
;

186 
pLöeBiDi
->
åaûögWSSèπ
=
Àngth
;

189 c⁄° 
UBiDiLevñ
 *
Àvñs
=
pLöeBiDi
->levels;

190 
öt32_t
 
i
, 
åaûögWSSèπ
;

191 
UBiDiLevñ
 
Àvñ
;

193 
	`£tTøûögWSSèπ
(
pLöeBiDi
);

194 
åaûögWSSèπ
=
pLöeBiDi
->trailingWSStart;

197 if(
åaûögWSSèπ
==0) {

199 
pLöeBiDi
->
dúe˘i⁄
=(
UBiDiDúe˘i⁄
)’LöeBiDi->
∑øLevñ
&1);

202 
Àvñ
=(
UBiDiLevñ
)(
Àvñs
[0]&1);

205 if(
åaûögWSSèπ
<
Àngth
 && (
pLöeBiDi
->
∑øLevñ
&1)!=
Àvñ
) {

207 
pLöeBiDi
->
dúe˘i⁄
=
UBIDI_MIXED
;

210 
i
=1;

212 if(
i
==
åaûögWSSèπ
) {

214 
pLöeBiDi
->
dúe˘i⁄
=(
UBiDiDúe˘i⁄
)
Àvñ
;

216 } if((
Àvñs
[
i
]&1)!=
Àvñ
) {

217 
pLöeBiDi
->
dúe˘i⁄
=
UBIDI_MIXED
;

220 ++
i
;

225 
pLöeBiDi
->
dúe˘i⁄
) {

226 
UBIDI_LTR
:

228 
pLöeBiDi
->
∑øLevñ
=(
UBiDiLevñ
)((pLineBiDi->paraLevel+1)&~1);

231 
pLöeBiDi
->
åaûögWSSèπ
=0;

233 
UBIDI_RTL
:

235 
pLöeBiDi
->
∑øLevñ
|=1;

238 
pLöeBiDi
->
åaûögWSSèπ
=0;

244 
pLöeBiDi
->
pP¨aBiDi
=pParaBiDi;

246 
	}
}

248 
U_CAPI
 
UBiDiLevñ
 
U_EXPORT2


249 
	$ubidi_gëLevñAt
(c⁄° 
UBiDi
 *
pBiDi
, 
öt32_t
 
ch¨Index
) {

251 if(!
	`IS_VALID_PARA_OR_LINE
(
pBiDi
Ë|| 
ch¨Index
<0 ||ÖBiDi->
Àngth
<=charIndex) {

253 } if(
pBiDi
->
dúe˘i⁄
!=
UBIDI_MIXED
 || 
ch¨Index
>ıBiDi->
åaûögWSSèπ
) {

254  
	`GET_PARALEVEL
(
pBiDi
, 
ch¨Index
);

256  
pBiDi
->
Àvñs
[
ch¨Index
];

258 
	}
}

260 
U_CAPI
 c⁄° 
UBiDiLevñ
 * 
U_EXPORT2


261 
	$ubidi_gëLevñs
(
UBiDi
 *
pBiDi
, 
UEº‹Code
 *
pEº‹Code
) {

262 
öt32_t
 
°¨t
, 
Àngth
;

264 
	`RETURN_IF_NULL_OR_FAILING_ERRCODE
(
pEº‹Code
, 
NULL
);

265 
	`RETURN_IF_NOT_VALID_PARA_OR_LINE
(
pBiDi
, *
pEº‹Code
, 
NULL
);

266 if((
Àngth
=
pBiDi
->length)<=0) {

267 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

268  
NULL
;

270 if((
°¨t
=
pBiDi
->
åaûögWSSèπ
)==
Àngth
) {

272  
pBiDi
->
Àvñs
;

282 if(
	`gëLevñsMem‹y
(
pBiDi
, 
Àngth
)) {

283 
UBiDiLevñ
 *
Àvñs
=
pBiDi
->
ÀvñsMem‹y
;

285 if(
°¨t
>0 && 
Àvñs
!=
pBiDi
->levels) {

286 
	`u¥v_mem˝y
(
Àvñs
, 
pBiDi
->Àvñs, 
°¨t
);

290 
	`u¥v_mem£t
(
Àvñs
+
°¨t
, 
pBiDi
->
∑øLevñ
, 
Àngth
-start);

293 
pBiDi
->
åaûögWSSèπ
=
Àngth
;

294  
pBiDi
->
Àvñs
=levels;

297 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

298  
NULL
;

300 
	}
}

302 
U_CAPI
 
U_EXPORT2


303 
	$ubidi_gëLogiˇlRun
(c⁄° 
UBiDi
 *
pBiDi
, 
öt32_t
 
logiˇlPosôi⁄
,

304 
öt32_t
 *
pLogiˇlLimô
, 
UBiDiLevñ
 *
pLevñ
) {

305 
UEº‹Code
 
îr‹Code
;

306 
öt32_t
 
runCou¡
, 
visuÆSèπ
, 
logiˇlLimô
, 
logiˇlFú°
, 
i
;

307 
Run
 
iRun
;

309 
îr‹Code
=
U_ZERO_ERROR
;

310 
	`RETURN_VOID_IF_BAD_RANGE
(
logiˇlPosôi⁄
, 0, 
pBiDi
->
Àngth
, 
îr‹Code
);

312 
runCou¡
=
	`ubidi_cou¡Runs
((
UBiDi
 *)
pBiDi
, &
îr‹Code
);

313 if(
	`U_FAILURE
(
îr‹Code
)) {

319 
visuÆSèπ
=
logiˇlLimô
=0;

320 
iRun
=
pBiDi
->
runs
[0];

322 
i
=0; i<
runCou¡
; i++) {

323 
iRun
 = 
pBiDi
->
runs
[
i
];

324 
logiˇlFú°
=
	`GET_INDEX
(
iRun
.
logiˇlSèπ
);

325 
logiˇlLimô
=
logiˇlFú°
+
iRun
.
visuÆLimô
-
visuÆSèπ
;

326 if((
logiˇlPosôi⁄
>=
logiˇlFú°
) &&

327 (
logiˇlPosôi⁄
<
logiˇlLimô
)) {

330 
visuÆSèπ
 = 
iRun
.
visuÆLimô
;

332 if(
pLogiˇlLimô
) {

333 *
pLogiˇlLimô
=
logiˇlLimô
;

335 if(
pLevñ
) {

336 if(
pBiDi
->
ª‹dîögMode
==
UBIDI_REORDER_RUNS_ONLY
) {

337 *
pLevñ
=(
UBiDiLevñ
)
	`GET_ODD_BIT
(
iRun
.
logiˇlSèπ
);

339 if(
pBiDi
->
dúe˘i⁄
!=
UBIDI_MIXED
 || 
logiˇlPosôi⁄
>ıBiDi->
åaûögWSSèπ
) {

340 *
pLevñ
=
	`GET_PARALEVEL
(
pBiDi
, 
logiˇlPosôi⁄
);

342 *
pLevñ
=
pBiDi
->
Àvñs
[
logiˇlPosôi⁄
];

345 
	}
}

349 
U_CAPI
 
öt32_t
 
U_EXPORT2


350 
	$ubidi_cou¡Runs
(
UBiDi
 *
pBiDi
, 
UEº‹Code
 *
pEº‹Code
) {

351 
	`RETURN_IF_NULL_OR_FAILING_ERRCODE
(
pEº‹Code
, -1);

352 
	`RETURN_IF_NOT_VALID_PARA_OR_LINE
(
pBiDi
, *
pEº‹Code
, -1);

353 
	`ubidi_gëRuns
(
pBiDi
, 
pEº‹Code
);

354 if(
	`U_FAILURE
(*
pEº‹Code
)) {

357  
pBiDi
->
runCou¡
;

358 
	}
}

360 
U_CAPI
 
UBiDiDúe˘i⁄
 
U_EXPORT2


361 
	$ubidi_gëVisuÆRun
(
UBiDi
 *
pBiDi
, 
öt32_t
 
runIndex
,

362 
öt32_t
 *
pLogiˇlSèπ
, i¡32_à*
pLígth
)

364 
öt32_t
 
°¨t
;

365 
UEº‹Code
 
îr‹Code
 = 
U_ZERO_ERROR
;

366 
	`RETURN_IF_NOT_VALID_PARA_OR_LINE
(
pBiDi
, 
îr‹Code
, 
UBIDI_LTR
);

367 
	`ubidi_gëRuns
(
pBiDi
, &
îr‹Code
);

368 if(
	`U_FAILURE
(
îr‹Code
)) {

369  
UBIDI_LTR
;

371 
	`RETURN_IF_BAD_RANGE
(
runIndex
, 0, 
pBiDi
->
runCou¡
, 
îr‹Code
, 
UBIDI_LTR
);

373 
°¨t
=
pBiDi
->
runs
[
runIndex
].
logiˇlSèπ
;

374 if(
pLogiˇlSèπ
!=
NULL
) {

375 *
pLogiˇlSèπ
=
	`GET_INDEX
(
°¨t
);

377 if(
pLígth
!=
NULL
) {

378 if(
runIndex
>0) {

379 *
pLígth
=
pBiDi
->
runs
[
runIndex
].
visuÆLimô
-

380 
pBiDi
->
runs
[
runIndex
-1].
visuÆLimô
;

382 *
pLígth
=
pBiDi
->
runs
[0].
visuÆLimô
;

385  (
UBiDiDúe˘i⁄
)
	`GET_ODD_BIT
(
°¨t
);

386 
	}
}

390 
	$gëSögÀRun
(
UBiDi
 *
pBiDi
, 
UBiDiLevñ
 
Àvñ
) {

392 
pBiDi
->
runs
ıBiDi->
sim∂eRuns
;

393 
pBiDi
->
runCou¡
=1;

396 
pBiDi
->
runs
[0].
logiˇlSèπ
=
	`MAKE_INDEX_ODD_PAIR
(0, 
Àvñ
);

397 
pBiDi
->
runs
[0].
visuÆLimô
ıBiDi->
Àngth
;

398 
pBiDi
->
runs
[0].
ö£πRemove
=0;

399 
	}
}

435 
	$ª‹dîLöe
(
UBiDi
 *
pBiDi
, 
UBiDiLevñ
 
möLevñ
, UBiDiLevñ 
maxLevñ
) {

436 
Run
 *
runs
, 
ãmpRun
;

437 
UBiDiLevñ
 *
Àvñs
;

438 
öt32_t
 
fú°Run
, 
ídRun
, 
limôRun
, 
runCou¡
;

441 if(
maxLevñ
<=(
möLevñ
|1)) {

450 ++
möLevñ
;

452 
runs
=
pBiDi
->runs;

453 
Àvñs
=
pBiDi
->levels;

454 
runCou¡
=
pBiDi
->runCount;

457 if(
pBiDi
->
åaûögWSSèπ
<pBiDi->
Àngth
) {

458 --
runCou¡
;

461 --
maxLevñ
>=
möLevñ
) {

462 
fú°Run
=0;

468 
fú°Run
<
runCou¡
 && 
Àvñs
[
runs
[fú°Run].
logiˇlSèπ
]<
maxLevñ
) {

469 ++
fú°Run
;

471 if(
fú°Run
>=
runCou¡
) {

476 
limôRun
=
fú°Run
; ++limôRun<
runCou¡
 && 
Àvñs
[
runs
[limôRun].
logiˇlSèπ
]>=
maxLevñ
;) {}

479 
ídRun
=
limôRun
-1;

480 
fú°Run
<
ídRun
) {

481 
ãmpRun
 = 
runs
[
fú°Run
];

482 
runs
[
fú°Run
]Ùuns[
ídRun
];

483 
runs
[
ídRun
]=
ãmpRun
;

484 ++
fú°Run
;

485 --
ídRun
;

488 if(
limôRun
==
runCou¡
) {

491 
fú°Run
=
limôRun
+1;

497 if(!(
möLevñ
&1)) {

498 
fú°Run
=0;

501 if(
pBiDi
->
åaûögWSSèπ
=ıBiDi->
Àngth
) {

502 --
runCou¡
;

506 
fú°Run
<
runCou¡
) {

507 
ãmpRun
=
runs
[
fú°Run
];

508 
runs
[
fú°Run
]Ùuns[
runCou¡
];

509 
runs
[
runCou¡
]=
ãmpRun
;

510 ++
fú°Run
;

511 --
runCou¡
;

514 
	}
}

518 
öt32_t
 
	$gëRunFromLogiˇlIndex
(
UBiDi
 *
pBiDi
, 
öt32_t
 
logiˇlIndex
, 
UEº‹Code
 *
pEº‹Code
) {

519 
Run
 *
runs
=
pBiDi
->runs;

520 
öt32_t
 
runCou¡
=
pBiDi
->runCou¡, 
visuÆSèπ
=0, 
i
, 
Àngth
, 
logiˇlSèπ
;

522 
i
=0; i<
runCou¡
; i++) {

523 
Àngth
=
runs
[
i
].
visuÆLimô
-
visuÆSèπ
;

524 
logiˇlSèπ
=
	`GET_INDEX
(
runs
[
i
].logicalStart);

525 if((
logiˇlIndex
>=
logiˇlSèπ
Ë&& (logiˇlIndex<÷ogiˇlSèπ+
Àngth
))) {

526  
i
;

528 
visuÆSèπ
+=
Àngth
;

531 
	`U_ASSERT
(
FALSE
);

532 *
pEº‹Code
 = 
U_INVALID_STATE_ERROR
;

534 
	}
}

547 
U_CFUNC
 
UBoﬁ


548 
	$ubidi_gëRuns
(
UBiDi
 *
pBiDi
, 
UEº‹Code
 *
pEº‹Code
) {

553 i‡(
pBiDi
->
runCou¡
>=0) {

554  
TRUE
;

557 if(
pBiDi
->
dúe˘i⁄
!=
UBIDI_MIXED
) {

560 
	`gëSögÀRun
(
pBiDi
,ÖBiDi->
∑øLevñ
);

563 
öt32_t
 
Àngth
=
pBiDi
->Àngth, 
limô
;

564 
UBiDiLevñ
 *
Àvñs
=
pBiDi
->levels;

565 
öt32_t
 
i
, 
runCou¡
;

566 
UBiDiLevñ
 
Àvñ
=
UBIDI_DEFAULT_LTR
;

578 
limô
=
pBiDi
->
åaûögWSSèπ
;

580 
runCou¡
=0;

581 
i
=0; i<
limô
; ++i) {

583 if(
Àvñs
[
i
]!=
Àvñ
) {

584 ++
runCou¡
;

585 
Àvñ
=
Àvñs
[
i
];

593 if(
runCou¡
==1 && 
limô
==
Àngth
) {

595 
	`gëSögÀRun
(
pBiDi
, 
Àvñs
[0]);

598 
Run
 *
runs
;

599 
öt32_t
 
runIndex
, 
°¨t
;

600 
UBiDiLevñ
 
möLevñ
=
UBIDI_MAX_EXPLICIT_LEVEL
+1, 
maxLevñ
=0;

603 if(
limô
<
Àngth
) {

604 ++
runCou¡
;

608 if(
	`gëRunsMem‹y
(
pBiDi
, 
runCou¡
)) {

609 
runs
=
pBiDi
->
runsMem‹y
;

611  
FALSE
;

620 
runIndex
=0;

623 
i
=0;

626 
°¨t
=
i
;

627 
Àvñ
=
Àvñs
[
i
];

628 if(
Àvñ
<
möLevñ
) {

629 
möLevñ
=
Àvñ
;

631 if(
Àvñ
>
maxLevñ
) {

632 
maxLevñ
=
Àvñ
;

636 ++
i
<
limô
 && 
Àvñs
[i]==
Àvñ
) {}

639 
runs
[
runIndex
].
logiˇlSèπ
=
°¨t
;

640 
runs
[
runIndex
].
visuÆLimô
=
i
-
°¨t
;

641 
runs
[
runIndex
].
ö£πRemove
=0;

642 ++
runIndex
;

643 } 
i
<
limô
);

645 if(
limô
<
Àngth
) {

647 
runs
[
runIndex
].
logiˇlSèπ
=
limô
;

648 
runs
[
runIndex
].
visuÆLimô
=
Àngth
-
limô
;

651 if(
pBiDi
->
∑øLevñ
<
möLevñ
) {

652 
möLevñ
=
pBiDi
->
∑øLevñ
;

657 
pBiDi
->
runs
=runs;

658 
pBiDi
->
runCou¡
=runCount;

660 
	`ª‹dîLöe
(
pBiDi
, 
möLevñ
, 
maxLevñ
);

664 
limô
=0;

665 
i
=0; i<
runCou¡
; ++i) {

666 
	`ADD_ODD_BIT_FROM_LEVEL
(
runs
[
i
].
logiˇlSèπ
, 
Àvñs
[runs[i].logicalStart]);

667 
limô
+=
runs
[
i
].
visuÆLimô
;

668 
runs
[
i
].
visuÆLimô
=
limô
;

675 if(
runIndex
<
runCou¡
) {

676 
öt32_t
 
åaûögRun
 = ((
pBiDi
->
∑øLevñ
 & 1Ë!0)? 0 : 
runIndex
;

678 
	`ADD_ODD_BIT_FROM_LEVEL
(
runs
[
åaûögRun
].
logiˇlSèπ
, 
pBiDi
->
∑øLevñ
);

684 if(
pBiDi
->
ö£πPoöts
.
size
>0) {

685 
Poöt
 *
poöt
, *
°¨t
=
pBiDi
->
ö£πPoöts
.
poöts
,

686 *
limô
=
°¨t
+
pBiDi
->
ö£πPoöts
.
size
;

687 
öt32_t
 
runIndex
;

688 
poöt
=
°¨t
;Öoöt<
limô
;Öoint++) {

689 
runIndex
=
	`gëRunFromLogiˇlIndex
(
pBiDi
, 
poöt
->
pos
, 
pEº‹Code
);

690 
pBiDi
->
runs
[
runIndex
].
ö£πRemove
|=
poöt
->
Êag
;

695 if(
pBiDi
->
c⁄åﬁCou¡
>0) {

696 
öt32_t
 
runIndex
;

697 c⁄° 
UCh¨
 *
°¨t
=
pBiDi
->
ãxt
, *
limô
=°¨t+pBiDi->
Àngth
, *
pu
;

698 
pu
=
°¨t
;Öu<
limô
;Öu++) {

699 if(
	`IS_BIDI_CONTROL_CHAR
(*
pu
)) {

700 
runIndex
=
	`gëRunFromLogiˇlIndex
(
pBiDi
, (
öt32_t
)(
pu
-
°¨t
), 
pEº‹Code
);

701 
pBiDi
->
runs
[
runIndex
].
ö£πRemove
--;

706  
TRUE
;

707 
	}
}

709 
UBoﬁ


710 
	$¥ï¨eRe‹dî
(c⁄° 
UBiDiLevñ
 *
Àvñs
, 
öt32_t
 
Àngth
,

711 
öt32_t
 *
ödexM≠
,

712 
UBiDiLevñ
 *
pMöLevñ
, UBiDiLevñ *
pMaxLevñ
) {

713 
öt32_t
 
°¨t
;

714 
UBiDiLevñ
 
Àvñ
, 
möLevñ
, 
maxLevñ
;

716 if(
Àvñs
==
NULL
 || 
Àngth
<=0) {

717  
FALSE
;

721 
möLevñ
=
UBIDI_MAX_EXPLICIT_LEVEL
+1;

722 
maxLevñ
=0;

723 
°¨t
=
Àngth
; start>0;) {

724 
Àvñ
=
Àvñs
[--
°¨t
];

725 if(
Àvñ
>
UBIDI_MAX_EXPLICIT_LEVEL
+1) {

726  
FALSE
;

728 if(
Àvñ
<
möLevñ
) {

729 
möLevñ
=
Àvñ
;

731 if(
Àvñ
>
maxLevñ
) {

732 
maxLevñ
=
Àvñ
;

735 *
pMöLevñ
=
möLevñ
;

736 *
pMaxLevñ
=
maxLevñ
;

739 
°¨t
=
Àngth
; start>0;) {

740 --
°¨t
;

741 
ödexM≠
[
°¨t
]=start;

744  
TRUE
;

745 
	}
}

749 
U_CAPI
 
U_EXPORT2


750 
	$ubidi_ª‹dîLogiˇl
(c⁄° 
UBiDiLevñ
 *
Àvñs
, 
öt32_t
 
Àngth
, i¡32_à*
ödexM≠
) {

751 
öt32_t
 
°¨t
, 
limô
, 
sumOfSosEos
;

752 
UBiDiLevñ
 
möLevñ
 = 0, 
maxLevñ
 = 0;

754 if(
ödexM≠
==
NULL
 || !
	`¥ï¨eRe‹dî
(
Àvñs
, 
Àngth
, indexM≠, &
möLevñ
, &
maxLevñ
)) {

759 if(
möLevñ
==
maxLevñ
 && (minLevel&1)==0) {

764 
möLevñ
|=1;

768 
°¨t
=0;

774 
°¨t
<
Àngth
 && 
Àvñs
[°¨t]<
maxLevñ
) {

775 ++
°¨t
;

777 if(
°¨t
>=
Àngth
) {

782 
limô
=
°¨t
; ++limô<
Àngth
 && 
Àvñs
[limô]>=
maxLevñ
;) {}

795 
sumOfSosEos
=
°¨t
+
limô
-1;

799 
ödexM≠
[
°¨t
]=
sumOfSosEos
-indexMap[start];

800 } ++
°¨t
<
limô
);

803 if(
limô
==
Àngth
) {

806 
°¨t
=
limô
+1;

809 } --
maxLevñ
>=
möLevñ
);

810 
	}
}

812 
U_CAPI
 
U_EXPORT2


813 
	$ubidi_ª‹dîVisuÆ
(c⁄° 
UBiDiLevñ
 *
Àvñs
, 
öt32_t
 
Àngth
, i¡32_à*
ödexM≠
) {

814 
öt32_t
 
°¨t
, 
íd
, 
limô
, 
ãmp
;

815 
UBiDiLevñ
 
möLevñ
 = 0, 
maxLevñ
 = 0;

817 if(
ödexM≠
==
NULL
 || !
	`¥ï¨eRe‹dî
(
Àvñs
, 
Àngth
, indexM≠, &
möLevñ
, &
maxLevñ
)) {

822 if(
möLevñ
==
maxLevñ
 && (minLevel&1)==0) {

827 
möLevñ
|=1;

831 
°¨t
=0;

837 
°¨t
<
Àngth
 && 
Àvñs
[°¨t]<
maxLevñ
) {

838 ++
°¨t
;

840 if(
°¨t
>=
Àngth
) {

845 
limô
=
°¨t
; ++limô<
Àngth
 && 
Àvñs
[limô]>=
maxLevñ
;) {}

853 
íd
=
limô
-1;

854 
°¨t
<
íd
) {

855 
ãmp
=
ödexM≠
[
°¨t
];

856 
ödexM≠
[
°¨t
]=ödexM≠[
íd
];

857 
ödexM≠
[
íd
]=
ãmp
;

859 ++
°¨t
;

860 --
íd
;

863 if(
limô
==
Àngth
) {

866 
°¨t
=
limô
+1;

869 } --
maxLevñ
>=
möLevñ
);

870 
	}
}

874 
U_CAPI
 
öt32_t
 
U_EXPORT2


875 
	$ubidi_gëVisuÆIndex
(
UBiDi
 *
pBiDi
, 
öt32_t
 
logiˇlIndex
, 
UEº‹Code
 *
pEº‹Code
) {

876 
öt32_t
 
visuÆIndex
=
UBIDI_MAP_NOWHERE
;

877 
	`RETURN_IF_NULL_OR_FAILING_ERRCODE
(
pEº‹Code
, -1);

878 
	`RETURN_IF_NOT_VALID_PARA_OR_LINE
(
pBiDi
, *
pEº‹Code
, -1);

879 
	`RETURN_IF_BAD_RANGE
(
logiˇlIndex
, 0, 
pBiDi
->
Àngth
, *
pEº‹Code
, -1);

882 
pBiDi
->
dúe˘i⁄
) {

883 
UBIDI_LTR
:

884 
visuÆIndex
=
logiˇlIndex
;

886 
UBIDI_RTL
:

887 
visuÆIndex
=
pBiDi
->
Àngth
-
logiˇlIndex
-1;

890 if(!
	`ubidi_gëRuns
(
pBiDi
, 
pEº‹Code
)) {

891 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

894 
Run
 *
runs
=
pBiDi
->runs;

895 
öt32_t
 
i
, 
visuÆSèπ
=0, 
off£t
, 
Àngth
;

898 
i
=0; i<
pBiDi
->
runCou¡
; ++i) {

899 
Àngth
=
runs
[
i
].
visuÆLimô
-
visuÆSèπ
;

900 
off£t
=
logiˇlIndex
-
	`GET_INDEX
(
runs
[
i
].
logiˇlSèπ
);

901 if(
off£t
>=0 && off£t<
Àngth
) {

902 if(
	`IS_EVEN_RUN
(
runs
[
i
].
logiˇlSèπ
)) {

904 
visuÆIndex
=
visuÆSèπ
+
off£t
;

907 
visuÆIndex
=
visuÆSèπ
+
Àngth
-
off£t
-1;

911 
visuÆSèπ
+=
Àngth
;

913 if(
i
>=
pBiDi
->
runCou¡
) {

914  
UBIDI_MAP_NOWHERE
;

919 if(
pBiDi
->
ö£πPoöts
.
size
>0) {

921 
Run
 *
runs
=
pBiDi
->runs;

922 
öt32_t
 
i
, 
Àngth
, 
ö£πRemove
;

923 
öt32_t
 
visuÆSèπ
=0, 
m¨kFound
=0;

924 
i
=0; ; i++, 
visuÆSèπ
+=
Àngth
) {

925 
Àngth
=
runs
[
i
].
visuÆLimô
-
visuÆSèπ
;

926 
ö£πRemove
=
runs
[
i
].insertRemove;

927 if(
ö£πRemove
 & (
LRM_BEFORE
|
RLM_BEFORE
)) {

928 
m¨kFound
++;

931 if(
visuÆIndex
<
runs
[
i
].
visuÆLimô
) {

932  
visuÆIndex
+
m¨kFound
;

934 if(
ö£πRemove
 & (
LRM_AFTER
|
RLM_AFTER
)) {

935 
m¨kFound
++;

939 if(
pBiDi
->
c⁄åﬁCou¡
>0) {

941 
Run
 *
runs
=
pBiDi
->runs;

942 
öt32_t
 
i
, 
j
, 
°¨t
, 
limô
, 
Àngth
, 
ö£πRemove
;

943 
öt32_t
 
visuÆSèπ
=0, 
c⁄åﬁFound
=0;

944 
UCh¨
 
uch¨
=
pBiDi
->
ãxt
[
logiˇlIndex
];

946 if(
	`IS_BIDI_CONTROL_CHAR
(
uch¨
)) {

947  
UBIDI_MAP_NOWHERE
;

950 
i
=0; ; i++, 
visuÆSèπ
+=
Àngth
) {

951 
Àngth
=
runs
[
i
].
visuÆLimô
-
visuÆSèπ
;

952 
ö£πRemove
=
runs
[
i
].insertRemove;

954 if(
visuÆIndex
>=
runs
[
i
].
visuÆLimô
) {

955 
c⁄åﬁFound
-=
ö£πRemove
;

959 if(
ö£πRemove
==0) {

960  
visuÆIndex
-
c⁄åﬁFound
;

962 if(
	`IS_EVEN_RUN
(
runs
[
i
].
logiˇlSèπ
)) {

964 
°¨t
=
runs
[
i
].
logiˇlSèπ
;

965 
limô
=
logiˇlIndex
;

968 
°¨t
=
logiˇlIndex
+1;

969 
limô
=
	`GET_INDEX
(
runs
[
i
].
logiˇlSèπ
)+
Àngth
;

971 
j
=
°¨t
; j<
limô
; j++) {

972 
uch¨
=
pBiDi
->
ãxt
[
j
];

973 if(
	`IS_BIDI_CONTROL_CHAR
(
uch¨
)) {

974 
c⁄åﬁFound
++;

977  
visuÆIndex
-
c⁄åﬁFound
;

981  
visuÆIndex
;

982 
	}
}

984 
U_CAPI
 
öt32_t
 
U_EXPORT2


985 
	$ubidi_gëLogiˇlIndex
(
UBiDi
 *
pBiDi
, 
öt32_t
 
visuÆIndex
, 
UEº‹Code
 *
pEº‹Code
) {

986 
Run
 *
runs
;

987 
öt32_t
 
i
, 
runCou¡
, 
°¨t
;

988 
	`RETURN_IF_NULL_OR_FAILING_ERRCODE
(
pEº‹Code
, -1);

989 
	`RETURN_IF_NOT_VALID_PARA_OR_LINE
(
pBiDi
, *
pEº‹Code
, -1);

990 
	`RETURN_IF_BAD_RANGE
(
visuÆIndex
, 0, 
pBiDi
->
ªsu…Lígth
, *
pEº‹Code
, -1);

992 if(
pBiDi
->
ö£πPoöts
.
size
==0 &&ÖBiDi->
c⁄åﬁCou¡
==0) {

993 if(
pBiDi
->
dúe˘i⁄
==
UBIDI_LTR
) {

994  
visuÆIndex
;

996 if(
pBiDi
->
dúe˘i⁄
==
UBIDI_RTL
) {

997  
pBiDi
->
Àngth
-
visuÆIndex
-1;

1000 if(!
	`ubidi_gëRuns
(
pBiDi
, 
pEº‹Code
)) {

1001 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

1005 
runs
=
pBiDi
->runs;

1006 
runCou¡
=
pBiDi
->runCount;

1007 if(
pBiDi
->
ö£πPoöts
.
size
>0) {

1009 
öt32_t
 
m¨kFound
=0, 
ö£πRemove
;

1010 
öt32_t
 
visuÆSèπ
=0, 
Àngth
;

1011 
runs
=
pBiDi
->runs;

1013 
i
=0; ; i++, 
visuÆSèπ
+=
Àngth
) {

1014 
Àngth
=
runs
[
i
].
visuÆLimô
-
visuÆSèπ
;

1015 
ö£πRemove
=
runs
[
i
].insertRemove;

1016 if(
ö£πRemove
&(
LRM_BEFORE
|
RLM_BEFORE
)) {

1017 if(
visuÆIndex
<=(
visuÆSèπ
+
m¨kFound
)) {

1018  
UBIDI_MAP_NOWHERE
;

1020 
m¨kFound
++;

1023 if(
visuÆIndex
<(
runs
[
i
].
visuÆLimô
+
m¨kFound
)) {

1024 
visuÆIndex
-=
m¨kFound
;

1027 if(
ö£πRemove
&(
LRM_AFTER
|
RLM_AFTER
)) {

1028 if(
visuÆIndex
==(
visuÆSèπ
+
Àngth
+
m¨kFound
)) {

1029  
UBIDI_MAP_NOWHERE
;

1031 
m¨kFound
++;

1035 if(
pBiDi
->
c⁄åﬁCou¡
>0) {

1037 
öt32_t
 
c⁄åﬁFound
=0, 
ö£πRemove
, 
Àngth
;

1038 
öt32_t
 
logiˇlSèπ
, 
logiˇlEnd
, 
visuÆSèπ
=0, 
j
, 
k
;

1039 
UCh¨
 
uch¨
;

1040 
UBoﬁ
 
evíRun
;

1042 
i
=0; ; i++, 
visuÆSèπ
+=
Àngth
) {

1043 
Àngth
=
runs
[
i
].
visuÆLimô
-
visuÆSèπ
;

1044 
ö£πRemove
=
runs
[
i
].insertRemove;

1046 if(
visuÆIndex
>=(
runs
[
i
].
visuÆLimô
-
c⁄åﬁFound
+
ö£πRemove
)) {

1047 
c⁄åﬁFound
-=
ö£πRemove
;

1051 if(
ö£πRemove
==0) {

1052 
visuÆIndex
+=
c⁄åﬁFound
;

1056 
logiˇlSèπ
=
runs
[
i
].logicalStart;

1057 
evíRun
=
	`IS_EVEN_RUN
(
logiˇlSèπ
);

1058 
	`REMOVE_ODD_BIT
(
logiˇlSèπ
);

1059 
logiˇlEnd
=
logiˇlSèπ
+
Àngth
-1;

1060 
j
=0; j<
Àngth
; j++) {

1061 
k

evíRun
 ? 
logiˇlSèπ
+
j
 : 
logiˇlEnd
-j;

1062 
uch¨
=
pBiDi
->
ãxt
[
k
];

1063 if(
	`IS_BIDI_CONTROL_CHAR
(
uch¨
)) {

1064 
c⁄åﬁFound
++;

1066 if((
visuÆIndex
+
c⁄åﬁFound
)==(
visuÆSèπ
+
j
)) {

1070 
visuÆIndex
+=
c⁄åﬁFound
;

1075 if(
runCou¡
<=10) {

1077 
i
=0; 
visuÆIndex
>=
runs
[i].
visuÆLimô
; ++i) {}

1080 
öt32_t
 
begö
=0, 
limô
=
runCou¡
;

1084 
i
=(
begö
+
limô
)/2;

1085 if(
visuÆIndex
>=
runs
[
i
].
visuÆLimô
) {

1086 
begö
=
i
+1;

1087 } if(
i
==0 || 
visuÆIndex
>=
runs
[i-1].
visuÆLimô
) {

1090 
limô
=
i
;

1095 
°¨t
=
runs
[
i
].
logiˇlSèπ
;

1096 if(
	`IS_EVEN_RUN
(
°¨t
)) {

1099 if(
i
>0) {

1100 
visuÆIndex
-=
runs
[
i
-1].
visuÆLimô
;

1102  
°¨t
+
visuÆIndex
;

1105  
	`GET_INDEX
(
°¨t
)+
runs
[
i
].
visuÆLimô
-
visuÆIndex
-1;

1107 
	}
}

1109 
U_CAPI
 
U_EXPORT2


1110 
	$ubidi_gëLogiˇlM≠
(
UBiDi
 *
pBiDi
, 
öt32_t
 *
ödexM≠
, 
UEº‹Code
 *
pEº‹Code
) {

1111 
	`RETURN_VOID_IF_NULL_OR_FAILING_ERRCODE
(
pEº‹Code
);

1113 
	`ubidi_cou¡Runs
(
pBiDi
, 
pEº‹Code
);

1114 if(
	`U_FAILURE
(*
pEº‹Code
)) {

1116 } if(
ödexM≠
==
NULL
) {

1117 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

1120 
öt32_t
 
visuÆSèπ
, 
visuÆLimô
, 
i
, 
j
, 
k
;

1121 
öt32_t
 
logiˇlSèπ
, 
logiˇlLimô
;

1122 
Run
 *
runs
=
pBiDi
->runs;

1123 i‡(
pBiDi
->
Àngth
<=0) {

1126 i‡(
pBiDi
->
Àngth
>pBiDi->
ªsu…Lígth
) {

1127 
	`u¥v_mem£t
(
ödexM≠
, 0xFF, 
pBiDi
->
Àngth
*(
öt32_t
));

1130 
visuÆSèπ
=0;

1131 
j
=0; j<
pBiDi
->
runCou¡
; ++j) {

1132 
logiˇlSèπ
=
	`GET_INDEX
(
runs
[
j
].logicalStart);

1133 
visuÆLimô
=
runs
[
j
].visualLimit;

1134 if(
	`IS_EVEN_RUN
(
runs
[
j
].
logiˇlSèπ
)) {

1136 
ödexM≠
[
logiˇlSèπ
++]=
visuÆSèπ
++;

1137 } 
visuÆSèπ
<
visuÆLimô
);

1139 
logiˇlSèπ
+=
visuÆLimô
-
visuÆSèπ
;

1141 
ödexM≠
[--
logiˇlSèπ
]=
visuÆSèπ
++;

1142 } 
visuÆSèπ
<
visuÆLimô
);

1147 if(
pBiDi
->
ö£πPoöts
.
size
>0) {

1148 
öt32_t
 
m¨kFound
=0, 
runCou¡
=
pBiDi
->runCount;

1149 
öt32_t
 
Àngth
, 
ö£πRemove
;

1150 
visuÆSèπ
=0;

1152 
i
=0; i<
runCou¡
; i++, 
visuÆSèπ
+=
Àngth
) {

1153 
Àngth
=
runs
[
i
].
visuÆLimô
-
visuÆSèπ
;

1154 
ö£πRemove
=
runs
[
i
].insertRemove;

1155 if(
ö£πRemove
&(
LRM_BEFORE
|
RLM_BEFORE
)) {

1156 
m¨kFound
++;

1158 if(
m¨kFound
>0) {

1159 
logiˇlSèπ
=
	`GET_INDEX
(
runs
[
i
].logicalStart);

1160 
logiˇlLimô
=
logiˇlSèπ
+
Àngth
;

1161 
j
=
logiˇlSèπ
; j<
logiˇlLimô
; j++) {

1162 
ödexM≠
[
j
]+=
m¨kFound
;

1165 if(
ö£πRemove
&(
LRM_AFTER
|
RLM_AFTER
)) {

1166 
m¨kFound
++;

1170 if(
pBiDi
->
c⁄åﬁCou¡
>0) {

1171 
öt32_t
 
c⁄åﬁFound
=0, 
runCou¡
=
pBiDi
->runCount;

1172 
öt32_t
 
Àngth
, 
ö£πRemove
;

1173 
UBoﬁ
 
evíRun
;

1174 
UCh¨
 
uch¨
;

1175 
visuÆSèπ
=0;

1177 
i
=0; i<
runCou¡
; i++, 
visuÆSèπ
+=
Àngth
) {

1178 
Àngth
=
runs
[
i
].
visuÆLimô
-
visuÆSèπ
;

1179 
ö£πRemove
=
runs
[
i
].insertRemove;

1181 if((
c⁄åﬁFound
-
ö£πRemove
)==0) {

1184 
logiˇlSèπ
=
runs
[
i
].logicalStart;

1185 
evíRun
=
	`IS_EVEN_RUN
(
logiˇlSèπ
);

1186 
	`REMOVE_ODD_BIT
(
logiˇlSèπ
);

1187 
logiˇlLimô
=
logiˇlSèπ
+
Àngth
;

1189 if(
ö£πRemove
==0) {

1190 
j
=
logiˇlSèπ
; j<
logiˇlLimô
; j++) {

1191 
ödexM≠
[
j
]-=
c⁄åﬁFound
;

1195 
j
=0; j<
Àngth
; j++) {

1196 
k

evíRun
 ? 
logiˇlSèπ
+
j
 : 
logiˇlLimô
-j-1;

1197 
uch¨
=
pBiDi
->
ãxt
[
k
];

1198 if(
	`IS_BIDI_CONTROL_CHAR
(
uch¨
)) {

1199 
c⁄åﬁFound
++;

1200 
ödexM≠
[
k
]=
UBIDI_MAP_NOWHERE
;

1203 
ödexM≠
[
k
]-=
c⁄åﬁFound
;

1208 
	}
}

1210 
U_CAPI
 
U_EXPORT2


1211 
	$ubidi_gëVisuÆM≠
(
UBiDi
 *
pBiDi
, 
öt32_t
 *
ödexM≠
, 
UEº‹Code
 *
pEº‹Code
) {

1212 
	`RETURN_VOID_IF_NULL_OR_FAILING_ERRCODE
(
pEº‹Code
);

1213 if(
ödexM≠
==
NULL
) {

1214 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

1218 
	`ubidi_cou¡Runs
(
pBiDi
, 
pEº‹Code
);

1219 if(
	`U_SUCCESS
(*
pEº‹Code
)) {

1221 
Run
 *
runs
=
pBiDi
->runs, *
runsLimô
Ùuns+pBiDi->
runCou¡
;

1222 
öt32_t
 
logiˇlSèπ
, 
visuÆSèπ
, 
visuÆLimô
, *
pi
=
ödexM≠
;

1224 i‡(
pBiDi
->
ªsu…Lígth
<=0) {

1227 
visuÆSèπ
=0;

1228 ; 
runs
<
runsLimô
; ++runs) {

1229 
logiˇlSèπ
=
runs
->logicalStart;

1230 
visuÆLimô
=
runs
->visualLimit;

1231 if(
	`IS_EVEN_RUN
(
logiˇlSèπ
)) {

1233 *
pi
++ = 
logiˇlSèπ
++;

1234 } ++
visuÆSèπ
<
visuÆLimô
);

1236 
	`REMOVE_ODD_BIT
(
logiˇlSèπ
);

1237 
logiˇlSèπ
+=
visuÆLimô
-
visuÆSèπ
;

1239 *
pi
++ = --
logiˇlSèπ
;

1240 } ++
visuÆSèπ
<
visuÆLimô
);

1245 if(
pBiDi
->
ö£πPoöts
.
size
>0) {

1246 
öt32_t
 
m¨kFound
=0, 
runCou¡
=
pBiDi
->runCount;

1247 
öt32_t
 
ö£πRemove
, 
i
, 
j
, 
k
;

1248 
runs
=
pBiDi
->runs;

1250 
i
=0; i<
runCou¡
; i++) {

1251 
ö£πRemove
=
runs
[
i
].insertRemove;

1252 if(
ö£πRemove
&(
LRM_BEFORE
|
RLM_BEFORE
)) {

1253 
m¨kFound
++;

1255 if(
ö£πRemove
&(
LRM_AFTER
|
RLM_AFTER
)) {

1256 
m¨kFound
++;

1260 
k
=
pBiDi
->
ªsu…Lígth
;

1261 
i
=
runCou¡
-1; i>=0 && 
m¨kFound
>0; i--) {

1262 
ö£πRemove
=
runs
[
i
].insertRemove;

1263 if(
ö£πRemove
&(
LRM_AFTER
|
RLM_AFTER
)) {

1264 
ödexM≠
[--
k
]
UBIDI_MAP_NOWHERE
;

1265 
m¨kFound
--;

1267 
visuÆSèπ

i
>0 ? 
runs
[i-1].
visuÆLimô
 : 0;

1268 
j
=
runs
[
i
].
visuÆLimô
-1; j>=
visuÆSèπ
 && 
m¨kFound
>0; j--) {

1269 
ödexM≠
[--
k
]=ödexM≠[
j
];

1271 if(
ö£πRemove
&(
LRM_BEFORE
|
RLM_BEFORE
)) {

1272 
ödexM≠
[--
k
]
UBIDI_MAP_NOWHERE
;

1273 
m¨kFound
--;

1277 if(
pBiDi
->
c⁄åﬁCou¡
>0) {

1278 
öt32_t
 
runCou¡
=
pBiDi
->runCou¡, 
logiˇlEnd
;

1279 
öt32_t
 
ö£πRemove
, 
Àngth
, 
i
, 
j
, 
k
, 
m
;

1280 
UCh¨
 
uch¨
;

1281 
UBoﬁ
 
evíRun
;

1282 
runs
=
pBiDi
->runs;

1283 
visuÆSèπ
=0;

1285 
k
=0;

1286 
i
=0; i<
runCou¡
; i++, 
visuÆSèπ
+=
Àngth
) {

1287 
Àngth
=
runs
[
i
].
visuÆLimô
-
visuÆSèπ
;

1288 
ö£πRemove
=
runs
[
i
].insertRemove;

1290 if((
ö£πRemove
==0)&&(
k
==
visuÆSèπ
)) {

1291 
k
+=
Àngth
;

1295 if(
ö£πRemove
==0) {

1296 
visuÆLimô
=
runs
[
i
].visualLimit;

1297 
j
=
visuÆSèπ
; j<
visuÆLimô
; j++) {

1298 
ödexM≠
[
k
++]=ödexM≠[
j
];

1302 
logiˇlSèπ
=
runs
[
i
].logicalStart;

1303 
evíRun
=
	`IS_EVEN_RUN
(
logiˇlSèπ
);

1304 
	`REMOVE_ODD_BIT
(
logiˇlSèπ
);

1305 
logiˇlEnd
=
logiˇlSèπ
+
Àngth
-1;

1306 
j
=0; j<
Àngth
; j++) {

1307 
m

evíRun
 ? 
logiˇlSèπ
+
j
 : 
logiˇlEnd
-j;

1308 
uch¨
=
pBiDi
->
ãxt
[
m
];

1309 if(!
	`IS_BIDI_CONTROL_CHAR
(
uch¨
)) {

1310 
ödexM≠
[
k
++]=
m
;

1316 
	}
}

1318 
U_CAPI
 
U_EXPORT2


1319 
	$ubidi_övîtM≠
(c⁄° 
öt32_t
 *
§cM≠
, i¡32_à*
de°M≠
, i¡32_à
Àngth
) {

1320 if(
§cM≠
!=
NULL
 && 
de°M≠
!=NULL && 
Àngth
>0) {

1321 c⁄° 
öt32_t
 *
pi
;

1322 
öt32_t
 
de°Lígth
=-1, 
cou¡
=0;

1324 
pi
=
§cM≠
+
Àngth
;

1325 
pi
>
§cM≠
) {

1326 if(*--
pi
>
de°Lígth
) {

1327 
de°Lígth
=*
pi
;

1329 if(*
pi
>=0) {

1330 
cou¡
++;

1333 
de°Lígth
++;

1334 if(
cou¡
<
de°Lígth
) {

1336 
	`u¥v_mem£t
(
de°M≠
, 0xFF, 
de°Lígth
*(
öt32_t
));

1338 
pi
=
§cM≠
+
Àngth
;

1339 
Àngth
>0) {

1340 if(*--
pi
>=0) {

1341 
de°M≠
[*
pi
]=--
Àngth
;

1343 --
Àngth
;

1347 
	}
}

	@ubidiwrt.c

21 #i‚de‡
U_COMMON_IMPLEMENTATION


22 
	#U_COMMON_IMPLEMENTATION


	)

25 
	~"unicode/uty≥s.h
"

26 
	~"unicode/u°rög.h
"

27 
	~"unicode/uch¨.h
"

28 
	~"unicode/ubidi.h
"

29 
	~"cmem‹y.h
"

30 
	~"u°r_imp.h
"

31 
	~"ubidiimp.h
"

45 #i‡
UTF_SIZE
==8

46 #îr‹ 
ªim∂emít
 
ubidi_wrôeRe‹dîed
(Ë
UTF
-8, 
£e
 
commít
 
above


49 
	#IS_COMBINING
(
ty≥
Ë((1UL<<—y≥))&(1UL<<
U_NON_SPACING_MARK
|1UL<<
U_COMBINING_SPACING_MARK
|1UL<<
U_ENCLOSING_MARK
))

	)

60 
öt32_t


61 
	$doWrôeF‹w¨d
(c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

62 
UCh¨
 *
de°
, 
öt32_t
 
de°Size
,

63 
uöt16_t
 
›ti⁄s
,

64 
UEº‹Code
 *
pEº‹Code
) {

66 
›ti⁄s
&(
UBIDI_REMOVE_BIDI_CONTROLS
|
UBIDI_DO_MIRRORING
)) {

69 
öt32_t
 
Àngth
=
§cLígth
;

70 if(
de°Size
<
Àngth
) {

71 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

72  
§cLígth
;

75 *
de°
++=*
§c
++;

76 } --
Àngth
>0);

77  
§cLígth
;

79 
UBIDI_DO_MIRRORING
: {

81 
öt32_t
 
i
=0, 
j
=0;

82 
UCh¨32
 
c
;

84 if(
de°Size
<
§cLígth
) {

85 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

86  
§cLígth
;

89 
	`UTF_NEXT_CHAR
(
§c
, 
i
, 
§cLígth
, 
c
);

90 
c
=
	`u_ch¨Múr‹
(c);

91 
	`UTF_APPEND_CHAR_UNSAFE
(
de°
, 
j
, 
c
);

92 } 
i
<
§cLígth
);

93  
§cLígth
;

95 
UBIDI_REMOVE_BIDI_CONTROLS
: {

97 
öt32_t
 
ªmaöög
=
de°Size
;

98 
UCh¨
 
c
;

100 
c
=*
§c
++;

101 if(!
	`IS_BIDI_CONTROL_CHAR
(
c
)) {

102 if(--
ªmaöög
<0) {

103 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

106 --
§cLígth
>0) {

107 
c
=*
§c
++;

108 if(!
	`IS_BIDI_CONTROL_CHAR
(
c
)) {

109 --
ªmaöög
;

112  
de°Size
-
ªmaöög
;

114 *
de°
++=
c
;

116 } --
§cLígth
>0);

117  
de°Size
-
ªmaöög
;

121 
öt32_t
 
ªmaöög
=
de°Size
;

122 
öt32_t
 
i
, 
j
=0;

123 
UCh¨32
 
c
;

125 
i
=0;

126 
	`UTF_NEXT_CHAR
(
§c
, 
i
, 
§cLígth
, 
c
);

127 
§c
+=
i
;

128 
§cLígth
-=
i
;

129 if(!
	`IS_BIDI_CONTROL_CHAR
(
c
)) {

130 
ªmaöög
-=
i
;

131 if(
ªmaöög
<0) {

132 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

135 
§cLígth
>0) {

136 
c
=*
§c
++;

137 if(!
	`IS_BIDI_CONTROL_CHAR
(
c
)) {

138 --
ªmaöög
;

140 --
§cLígth
;

142  
de°Size
-
ªmaöög
;

144 
c
=
	`u_ch¨Múr‹
(c);

145 
	`UTF_APPEND_CHAR_UNSAFE
(
de°
, 
j
, 
c
);

147 } 
§cLígth
>0);

148  
j
;

151 
	}
}

153 
öt32_t


154 
	$doWrôeRevî£
(c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

155 
UCh¨
 *
de°
, 
öt32_t
 
de°Size
,

156 
uöt16_t
 
›ti⁄s
,

157 
UEº‹Code
 *
pEº‹Code
) {

176 
öt32_t
 
i
, 
j
;

177 
UCh¨32
 
c
;

180 
›ti⁄s
&(
UBIDI_REMOVE_BIDI_CONTROLS
|
UBIDI_DO_MIRRORING
|
UBIDI_KEEP_BASE_COMBINING
)) {

188 if(
de°Size
<
§cLígth
) {

189 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

190  
§cLígth
;

192 
de°Size
=
§cLígth
;

197 
i
=
§cLígth
;

200 
	`UTF_BACK_1
(
§c
, 0, 
§cLígth
);

203 
j
=
§cLígth
;

205 *
de°
++=
§c
[
j
++];

206 } 
j
<
i
);

207 } 
§cLígth
>0);

209 
UBIDI_KEEP_BASE_COMBINING
:

216 if(
de°Size
<
§cLígth
) {

217 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

218  
§cLígth
;

220 
de°Size
=
§cLígth
;

225 
i
=
§cLígth
;

229 
	`UTF_PREV_CHAR
(
§c
, 0, 
§cLígth
, 
c
);

230 } 
§cLígth
>0 && 
	`IS_COMBINING
(
	`u_ch¨Ty≥
(
c
)));

233 
j
=
§cLígth
;

235 *
de°
++=
§c
[
j
++];

236 } 
j
<
i
);

237 } 
§cLígth
>0);

247 if(!(
›ti⁄s
&
UBIDI_REMOVE_BIDI_CONTROLS
)) {

248 
i
=
§cLígth
;

252 
öt32_t
 
Àngth
=
§cLígth
;

253 
UCh¨
 
ch
;

255 
i
=0;

257 
ch
=*
§c
++;

258 if(!
	`IS_BIDI_CONTROL_CHAR
(
ch
)) {

259 ++
i
;

261 } --
Àngth
>0);

262 
§c
-=
§cLígth
;

265 if(
de°Size
<
i
) {

266 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

267  
i
;

269 
de°Size
=
i
;

274 
i
=
§cLígth
;

277 
	`UTF_PREV_CHAR
(
§c
, 0, 
§cLígth
, 
c
);

278 if(
›ti⁄s
&
UBIDI_KEEP_BASE_COMBINING
) {

280 
§cLígth
>0 && 
	`IS_COMBINING
(
	`u_ch¨Ty≥
(
c
))) {

281 
	`UTF_PREV_CHAR
(
§c
, 0, 
§cLígth
, 
c
);

285 if(
›ti⁄s
&
UBIDI_REMOVE_BIDI_CONTROLS
 && 
	`IS_BIDI_CONTROL_CHAR
(
c
)) {

291 
j
=
§cLígth
;

292 if(
›ti⁄s
&
UBIDI_DO_MIRRORING
) {

294 
öt32_t
 
k
=0;

295 
c
=
	`u_ch¨Múr‹
(c);

296 
	`UTF_APPEND_CHAR_UNSAFE
(
de°
, 
k
, 
c
);

297 
de°
+=
k
;

298 
j
+=
k
;

300 
j
<
i
) {

301 *
de°
++=
§c
[
j
++];

303 } 
§cLígth
>0);

307  
de°Size
;

308 
	}
}

310 
U_CAPI
 
öt32_t
 
U_EXPORT2


311 
	$ubidi_wrôeRevî£
(c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

312 
UCh¨
 *
de°
, 
öt32_t
 
de°Size
,

313 
uöt16_t
 
›ti⁄s
,

314 
UEº‹Code
 *
pEº‹Code
) {

315 
öt32_t
 
de°Lígth
;

317 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

322 if–
§c
==
NULL
 || 
§cLígth
<-1 ||

323 
de°Size
<0 || (de°Size>0 && 
de°
==
NULL
))

325 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

330 if–
de°
!=
NULL
 &&

331 ((
§c
>=
de°
 && src<de°+
de°Size
) ||

332 (
de°
>=
§c
 && de°<§c+
§cLígth
)))

334 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

338 if(
§cLígth
==-1) {

339 
§cLígth
=
	`u_°æí
(
§c
);

341 if(
§cLígth
>0) {

342 
de°Lígth
=
	`doWrôeRevî£
(
§c
, 
§cLígth
, 
de°
, 
de°Size
, 
›ti⁄s
, 
pEº‹Code
);

345 
de°Lígth
=0;

348  
	`u_ãrmö©eUCh¨s
(
de°
, 
de°Size
, 
de°Lígth
, 
pEº‹Code
);

349 
	}
}

351 
U_CAPI
 
öt32_t
 
U_EXPORT2


352 
	$ubidi_wrôeRe‹dîed
(
UBiDi
 *
pBiDi
,

353 
UCh¨
 *
de°
, 
öt32_t
 
de°Size
,

354 
uöt16_t
 
›ti⁄s
,

355 
UEº‹Code
 *
pEº‹Code
) {

356 c⁄° 
UCh¨
 *
ãxt
;

357 
UCh¨
 *
ßveDe°
;

358 
öt32_t
 
Àngth
, 
de°C≠acôy
;

359 
öt32_t
 
run
, 
runCou¡
, 
logiˇlSèπ
, 
runLígth
;

361 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

366 if–
pBiDi
==
NULL
 ||

367 (
ãxt
=
pBiDi
->ãxt)==
NULL
 || (
Àngth
=pBiDi->length)<0 ||

368 
de°Size
<0 || (de°Size>0 && 
de°
==
NULL
))

370 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

375 if–
de°
!=
NULL
 &&

376 ((
ãxt
>=
de°
 &&Åext<de°+
de°Size
) ||

377 (
de°
>=
ãxt
 && de°<ãxt+
pBiDi
->
‹igöÆLígth
)))

379 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

383 if(
Àngth
==0) {

385  
	`u_ãrmö©eUCh¨s
(
de°
, 
de°Size
, 0, 
pEº‹Code
);

388 
runCou¡
=
	`ubidi_cou¡Runs
(
pBiDi
, 
pEº‹Code
);

389 if(
	`U_FAILURE
(*
pEº‹Code
)) {

394 
ßveDe°
=
de°
;

395 
de°C≠acôy
=
de°Size
;

401 if(
pBiDi
->
ª‹dîögO±i⁄s
 & 
UBIDI_OPTION_INSERT_MARKS
) {

402 
›ti⁄s
|=
UBIDI_INSERT_LRM_FOR_NUMERIC
;

403 
›ti⁄s
&=~
UBIDI_REMOVE_BIDI_CONTROLS
;

409 if(
pBiDi
->
ª‹dîögO±i⁄s
 & 
UBIDI_OPTION_REMOVE_CONTROLS
) {

410 
›ti⁄s
|=
UBIDI_REMOVE_BIDI_CONTROLS
;

411 
›ti⁄s
&=~
UBIDI_INSERT_LRM_FOR_NUMERIC
;

417 if((
pBiDi
->
ª‹dîögMode
 !
UBIDI_REORDER_INVERSE_NUMBERS_AS_L
) &&

418 (
pBiDi
->
ª‹dîögMode
 !
UBIDI_REORDER_INVERSE_LIKE_DIRECT
) &&

419 (
pBiDi
->
ª‹dîögMode
 !
UBIDI_REORDER_INVERSE_FOR_NUMBERS_SPECIAL
) &&

420 (
pBiDi
->
ª‹dîögMode
 !
UBIDI_REORDER_RUNS_ONLY
)) {

421 
›ti⁄s
&=~
UBIDI_INSERT_LRM_FOR_NUMERIC
;

435 if(!(
›ti⁄s
&
UBIDI_OUTPUT_REVERSE
)) {

437 if(!(
›ti⁄s
&
UBIDI_INSERT_LRM_FOR_NUMERIC
)) {

439 
run
=0;Ñun<
runCou¡
; ++run) {

440 if(
UBIDI_LTR
==
	`ubidi_gëVisuÆRun
(
pBiDi
, 
run
, &
logiˇlSèπ
, &
runLígth
)) {

441 
runLígth
=
	`doWrôeF‹w¨d
(
ãxt
+
logiˇlSèπ
,ÑunLength,

442 
de°
, 
de°Size
,

443 (
uöt16_t
)(
›ti⁄s
&~
UBIDI_DO_MIRRORING
), 
pEº‹Code
);

445 
runLígth
=
	`doWrôeRevî£
(
ãxt
+
logiˇlSèπ
,ÑunLength,

446 
de°
, 
de°Size
,

447 
›ti⁄s
, 
pEº‹Code
);

449 
de°
+=
runLígth
;

450 
de°Size
-=
runLígth
;

454 c⁄° 
DúPr›
 *
dúPr›s
=
pBiDi
->dirProps;

455 c⁄° 
UCh¨
 *
§c
;

456 
UCh¨
 
uc
;

457 
UBiDiDúe˘i⁄
 
dú
;

458 
öt32_t
 
m¨kFœg
;

460 
run
=0;Ñun<
runCou¡
; ++run) {

461 
dú
=
	`ubidi_gëVisuÆRun
(
pBiDi
, 
run
, &
logiˇlSèπ
, &
runLígth
);

462 
§c
=
ãxt
+
logiˇlSèπ
;

464 
m¨kFœg
=
pBiDi
->
runs
[
run
].
ö£πRemove
;

465 if(
m¨kFœg
<0) {

466 
m¨kFœg
=0;

469 if(
UBIDI_LTR
==
dú
) {

470 if((
pBiDi
->
isInvî£
) &&

471 –
dúPr›s
[
logiˇlSèπ
]!=
L
)) {

472 
m¨kFœg
 |
LRM_BEFORE
;

474 i‡(
m¨kFœg
 & 
LRM_BEFORE
) {

475 
uc
=
LRM_CHAR
;

477 i‡(
m¨kFœg
 & 
RLM_BEFORE
) {

478 
uc
=
RLM_CHAR
;

480 
uc
=0;

481 if(
uc
) {

482 if(
de°Size
>0) {

483 *
de°
++=
uc
;

485 --
de°Size
;

488 
runLígth
=
	`doWrôeF‹w¨d
(
§c
,ÑunLength,

489 
de°
, 
de°Size
,

490 (
uöt16_t
)(
›ti⁄s
&~
UBIDI_DO_MIRRORING
), 
pEº‹Code
);

491 
de°
+=
runLígth
;

492 
de°Size
-=
runLígth
;

494 if((
pBiDi
->
isInvî£
) &&

495 –
dúPr›s
[
logiˇlSèπ
+
runLígth
-1]!=
L
)) {

496 
m¨kFœg
 |
LRM_AFTER
;

498 i‡(
m¨kFœg
 & 
LRM_AFTER
) {

499 
uc
=
LRM_CHAR
;

501 i‡(
m¨kFœg
 & 
RLM_AFTER
) {

502 
uc
=
RLM_CHAR
;

504 
uc
=0;

505 if(
uc
) {

506 if(
de°Size
>0) {

507 *
de°
++=
uc
;

509 --
de°Size
;

512 if((
pBiDi
->
isInvî£
) &&

513 –!(
MASK_R_AL
&
	`DIRPROP_FLAG
(
dúPr›s
[
logiˇlSèπ
+
runLígth
-1])))) {

514 
m¨kFœg
 |
RLM_BEFORE
;

516 i‡(
m¨kFœg
 & 
LRM_BEFORE
) {

517 
uc
=
LRM_CHAR
;

519 i‡(
m¨kFœg
 & 
RLM_BEFORE
) {

520 
uc
=
RLM_CHAR
;

522 
uc
=0;

523 if(
uc
) {

524 if(
de°Size
>0) {

525 *
de°
++=
uc
;

527 --
de°Size
;

530 
runLígth
=
	`doWrôeRevî£
(
§c
,ÑunLength,

531 
de°
, 
de°Size
,

532 
›ti⁄s
, 
pEº‹Code
);

533 
de°
+=
runLígth
;

534 
de°Size
-=
runLígth
;

536 if((
pBiDi
->
isInvî£
) &&

537 –!(
MASK_R_AL
&
	`DIRPROP_FLAG
(
dúPr›s
[
logiˇlSèπ
])))) {

538 
m¨kFœg
 |
RLM_AFTER
;

540 i‡(
m¨kFœg
 & 
LRM_AFTER
) {

541 
uc
=
LRM_CHAR
;

543 i‡(
m¨kFœg
 & 
RLM_AFTER
) {

544 
uc
=
RLM_CHAR
;

546 
uc
=0;

547 if(
uc
) {

548 if(
de°Size
>0) {

549 *
de°
++=
uc
;

551 --
de°Size
;

558 if(!(
›ti⁄s
&
UBIDI_INSERT_LRM_FOR_NUMERIC
)) {

560 
run
=
runCou¡
; --run>=0;) {

561 if(
UBIDI_LTR
==
	`ubidi_gëVisuÆRun
(
pBiDi
, 
run
, &
logiˇlSèπ
, &
runLígth
)) {

562 
runLígth
=
	`doWrôeRevî£
(
ãxt
+
logiˇlSèπ
,ÑunLength,

563 
de°
, 
de°Size
,

564 (
uöt16_t
)(
›ti⁄s
&~
UBIDI_DO_MIRRORING
), 
pEº‹Code
);

566 
runLígth
=
	`doWrôeF‹w¨d
(
ãxt
+
logiˇlSèπ
,ÑunLength,

567 
de°
, 
de°Size
,

568 
›ti⁄s
, 
pEº‹Code
);

570 
de°
+=
runLígth
;

571 
de°Size
-=
runLígth
;

575 c⁄° 
DúPr›
 *
dúPr›s
=
pBiDi
->dirProps;

576 c⁄° 
UCh¨
 *
§c
;

577 
UBiDiDúe˘i⁄
 
dú
;

579 
run
=
runCou¡
; --run>=0;) {

581 
dú
=
	`ubidi_gëVisuÆRun
(
pBiDi
, 
run
, &
logiˇlSèπ
, &
runLígth
);

582 
§c
=
ãxt
+
logiˇlSèπ
;

584 if(
UBIDI_LTR
==
dú
) {

585 if–
dúPr›s
[
logiˇlSèπ
+
runLígth
-1]!=
L
) {

586 if(
de°Size
>0) {

587 *
de°
++=
LRM_CHAR
;

589 --
de°Size
;

592 
runLígth
=
	`doWrôeRevî£
(
§c
,ÑunLength,

593 
de°
, 
de°Size
,

594 (
uöt16_t
)(
›ti⁄s
&~
UBIDI_DO_MIRRORING
), 
pEº‹Code
);

595 
de°
+=
runLígth
;

596 
de°Size
-=
runLígth
;

598 if–
dúPr›s
[
logiˇlSèπ
]!=
L
) {

599 if(
de°Size
>0) {

600 *
de°
++=
LRM_CHAR
;

602 --
de°Size
;

605 if–!(
MASK_R_AL
&
	`DIRPROP_FLAG
(
dúPr›s
[
logiˇlSèπ
]))) {

606 if(
de°Size
>0) {

607 *
de°
++=
RLM_CHAR
;

609 --
de°Size
;

612 
runLígth
=
	`doWrôeF‹w¨d
(
§c
,ÑunLength,

613 
de°
, 
de°Size
,

614 
›ti⁄s
, 
pEº‹Code
);

615 
de°
+=
runLígth
;

616 
de°Size
-=
runLígth
;

618 if–!(
MASK_R_AL
&
	`DIRPROP_FLAG
(
dúPr›s
[
logiˇlSèπ
+
runLígth
-1]))) {

619 if(
de°Size
>0) {

620 *
de°
++=
RLM_CHAR
;

622 --
de°Size
;

629  
	`u_ãrmö©eUCh¨s
(
ßveDe°
, 
de°C≠acôy
, de°C≠acôy-
de°Size
, 
pEº‹Code
);

630 
	}
}

	@ubrk.cpp

8 
	~"unicode/uty≥s.h
"

10 #i‡!
UCONFIG_NO_BREAK_ITERATION


12 
	~"unicode/ubrk.h
"

14 
	~"unicode/brkôî.h
"

15 
	~"unicode/uloc.h
"

16 
	~"unicode/u°rög.h
"

17 
	~"unicode/uchrôî.h
"

18 
	~"unicode/rbbi.h
"

19 
	~"rbbúb.h
"

20 
	~"uas£π.h
"

22 
U_NAMESPACE_USE


30 
U_CAPI
 
UBªakIãøt‹
* 
U_EXPORT2


31 
	$ubrk_›í
(
UBªakIãøt‹Ty≥
 
ty≥
,

32 c⁄° *
loˇÀ
,

33 c⁄° 
UCh¨
 *
ãxt
,

34 
öt32_t
 
ãxtLígth
,

35 
UEº‹Code
 *
°©us
)

38 if(
	`U_FAILURE
(*
°©us
))  0;

40 
BªakIãøt‹
 *
ªsu…
 = 0;

42 
ty≥
) {

44 
UBRK_CHARACTER
:

45 
ªsu…
 = 
BªakIãøt‹
::
	`¸óãCh¨a˘îIn°™˚
(
	`LoˇÀ
(
loˇÀ
), *
°©us
);

48 
UBRK_WORD
:

49 
ªsu…
 = 
BªakIãøt‹
::
	`¸óãW‹dIn°™˚
(
	`LoˇÀ
(
loˇÀ
), *
°©us
);

52 
UBRK_LINE
:

53 
ªsu…
 = 
BªakIãøt‹
::
	`¸óãLöeIn°™˚
(
	`LoˇÀ
(
loˇÀ
), *
°©us
);

56 
UBRK_SENTENCE
:

57 
ªsu…
 = 
BªakIãøt‹
::
	`¸óãSíãn˚In°™˚
(
	`LoˇÀ
(
loˇÀ
), *
°©us
);

60 
UBRK_TITLE
:

61 
ªsu…
 = 
BªakIãøt‹
::
	`¸óãTôÀIn°™˚
(
	`LoˇÀ
(
loˇÀ
), *
°©us
);

65 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

69 i‡(
	`U_FAILURE
(*
°©us
)) {

72 if(
ªsu…
 == 0) {

73 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

78 
UBªakIãøt‹
 *
uBI
 = (UBªakIãøt‹ *)
ªsu…
;

79 i‡(
ãxt
 !
NULL
) {

80 
	`ubrk_£tText
(
uBI
, 
ãxt
, 
ãxtLígth
, 
°©us
);

82  
uBI
;

83 
	}
}

93 
U_CAPI
 
UBªakIãøt‹
* 
U_EXPORT2


94 
	$ubrk_›íRuÀs
–c⁄° 
UCh¨
 *
ruÀs
,

95 
öt32_t
 
ruÀsLígth
,

96 c⁄° 
UCh¨
 *
ãxt
,

97 
öt32_t
 
ãxtLígth
,

98 
UP¨£Eº‹
 *
∑r£Eº
,

99 
UEº‹Code
 *
°©us
) {

101 i‡(
°©us
 =
NULL
 || 
	`U_FAILURE
(*status)){

105 
BªakIãøt‹
 *
ªsu…
 = 0;

106 
UnicodeSåög
 
	`ruÀSåög
(
ruÀs
, 
ruÀsLígth
);

107 
ªsu…
 = 
RBBIRuÀBuûdî
::
	`¸óãRuÀBa£dBªakIãøt‹
(
ruÀSåög
, 
∑r£Eº
, *
°©us
);

108 if(
	`U_FAILURE
(*
°©us
)) {

112 
UBªakIãøt‹
 *
uBI
 = (UBªakIãøt‹ *)
ªsu…
;

113 i‡(
ãxt
 !
NULL
) {

114 
	`ubrk_£tText
(
uBI
, 
ãxt
, 
ãxtLígth
, 
°©us
);

116  
uBI
;

117 
	}
}

123 
U_CAPI
 
UBªakIãøt‹
 * 
U_EXPORT2


124 
	$ubrk_ß„Cl⁄e
(

125 c⁄° 
UBªakIãøt‹
 *
bi
,

126 *
°ackBuf„r
,

127 
öt32_t
 *
pBuf„rSize
,

128 
UEº‹Code
 *
°©us
)

130 i‡(
°©us
 =
NULL
 || 
	`U_FAILURE
(*status)){

133 i‡(!
pBuf„rSize
 || !
bi
){

134 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

140 i‡(*
°©us
==
U_SAFECLONE_ALLOCATED_WARNING
) {

141 *
°©us
 = 
U_ZERO_ERROR
;

143  (
UBªakIãøt‹
 *)(((
BªakIãøt‹
*)
bi
)->

144 
	`¸óãBuf„rCl⁄e
(
°ackBuf„r
, *
pBuf„rSize
, *
°©us
));

145 
	}
}

149 
U_CAPI
 
U_EXPORT2


150 
	$ubrk_˛o£
(
UBªakIãøt‹
 *
bi
)

152 
BªakIãøt‹
 *
ubi
 = (BªakIãøt‹*Ë
bi
;

153 i‡(
ubi
) {

154 i‡(
ubi
->
	`isBuf„rCl⁄e
()) {

155 
ubi
->~
	`BªakIãøt‹
();

156 *(
uöt32_t
 *)
ubi
 = 0xdeadbeef;

158 
dñëe
 
ubi
;

161 
	}
}

163 
U_CAPI
 
U_EXPORT2


164 
	$ubrk_£tText
(
UBªakIãøt‹
* 
bi
,

165 c⁄° 
UCh¨
* 
ãxt
,

166 
öt32_t
 
ãxtLígth
,

167 
UEº‹Code
* 
°©us
)

169 
BªakIãøt‹
 *
brô
 = (BªakIãøt‹ *)
bi
;

170 
UText
 
ut
 = 
UTEXT_INITIALIZER
;

171 
	`uãxt_›íUCh¨s
(&
ut
, 
ãxt
, 
ãxtLígth
, 
°©us
);

172 
brô
->
	`£tText
(&
ut
, *
°©us
);

175 
	}
}

179 
U_CAPI
 
U_EXPORT2


180 
	$ubrk_£tUText
(
UBªakIãøt‹
 *
bi
,

181 
UText
 *
ãxt
,

182 
UEº‹Code
 *
°©us
)

184 
RuÀBa£dBªakIãøt‹
 *
brô
 = (RuÀBa£dBªakIãøt‹ *)
bi
;

185 
brô
->
RuÀBa£dBªakIãøt‹
::
	`£tText
(
ãxt
, *
°©us
);

186 
	}
}

192 
U_CAPI
 
öt32_t
 
U_EXPORT2


193 
	$ubrk_cuºít
(c⁄° 
UBªakIãøt‹
 *
bi
)

196  ((
RuÀBa£dBªakIãøt‹
*)
bi
)->RuÀBa£dBªakIãøt‹::
	`cuºít
();

197 
	}
}

199 
U_CAPI
 
öt32_t
 
U_EXPORT2


200 
	$ubrk_√xt
(
UBªakIãøt‹
 *
bi
)

203  ((
RuÀBa£dBªakIãøt‹
*)
bi
)->RuÀBa£dBªakIãøt‹::
	`√xt
();

204 
	}
}

206 
U_CAPI
 
öt32_t
 
U_EXPORT2


207 
	$ubrk_¥evious
(
UBªakIãøt‹
 *
bi
)

210  ((
RuÀBa£dBªakIãøt‹
*)
bi
)->RuÀBa£dBªakIãøt‹::
	`¥evious
();

211 
	}
}

213 
U_CAPI
 
öt32_t
 
U_EXPORT2


214 
	$ubrk_fú°
(
UBªakIãøt‹
 *
bi
)

217  ((
RuÀBa£dBªakIãøt‹
*)
bi
)->RuÀBa£dBªakIãøt‹::
	`fú°
();

218 
	}
}

220 
U_CAPI
 
öt32_t
 
U_EXPORT2


221 
	$ubrk_œ°
(
UBªakIãøt‹
 *
bi
)

224  ((
RuÀBa£dBªakIãøt‹
*)
bi
)->RuÀBa£dBªakIãøt‹::
	`œ°
();

225 
	}
}

227 
U_CAPI
 
öt32_t
 
U_EXPORT2


228 
	$ubrk_¥e˚dög
(
UBªakIãøt‹
 *
bi
,

229 
öt32_t
 
off£t
)

232  ((
RuÀBa£dBªakIãøt‹
*)
bi
)->RuÀBa£dBªakIãøt‹::
	`¥e˚dög
(
off£t
);

233 
	}
}

235 
U_CAPI
 
öt32_t
 
U_EXPORT2


236 
	$ubrk_fﬁlowög
(
UBªakIãøt‹
 *
bi
,

237 
öt32_t
 
off£t
)

240  ((
RuÀBa£dBªakIãøt‹
*)
bi
)->RuÀBa£dBªakIãøt‹::
	`fﬁlowög
(
off£t
);

241 
	}
}

243 
U_CAPI
 c⁄° * 
U_EXPORT2


244 
	$ubrk_gëAvaûabÀ
(
öt32_t
 
ödex
)

247  
	`uloc_gëAvaûabÀ
(
ödex
);

248 
	}
}

250 
U_CAPI
 
öt32_t
 
U_EXPORT2


251 
	$ubrk_cou¡AvaûabÀ
()

254  
	`uloc_cou¡AvaûabÀ
();

255 
	}
}

258 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


259 
	$ubrk_isBound¨y
(
UBªakIãøt‹
 *
bi
, 
öt32_t
 
off£t
)

261  ((
RuÀBa£dBªakIãøt‹
 *)
bi
)->RuÀBa£dBªakIãøt‹::
	`isBound¨y
(
off£t
);

262 
	}
}

265 
U_CAPI
 
öt32_t
 
U_EXPORT2


266 
	$ubrk_gëRuÀSètus
(
UBªakIãøt‹
 *
bi
)

268  ((
RuÀBa£dBªakIãøt‹
 *)
bi
)->RuÀBa£dBªakIãøt‹::
	`gëRuÀSètus
();

269 
	}
}

271 
U_CAPI
 
öt32_t
 
U_EXPORT2


272 
	$ubrk_gëRuÀSètusVec
(
UBªakIãøt‹
 *
bi
, 
öt32_t
 *
fûlInVec
, i¡32_à
ˇ∑côy
, 
UEº‹Code
 *
°©us
)

274  ((
RuÀBa£dBªakIãøt‹
 *)
bi
)->RuÀBa£dBªakIãøt‹::
	`gëRuÀSètusVec
(
fûlInVec
, 
ˇ∑côy
, *
°©us
);

275 
	}
}

278 
U_CAPI
 c⁄° * 
U_EXPORT2


279 
	$ubrk_gëLoˇÀByTy≥
(c⁄° 
UBªakIãøt‹
 *
bi
,

280 
ULocD©aLoˇÀTy≥
 
ty≥
,

281 
UEº‹Code
* 
°©us
)

283 i‡(
bi
 =
NULL
) {

284 i‡(
	`U_SUCCESS
(*
°©us
)) {

285 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

287  
NULL
;

289  ((
BªakIãøt‹
*)
bi
)->
	`gëLoˇÀID
(
ty≥
, *
°©us
);

290 
	}
}

	@ubrkimpl.h

8 #i‚de‡
UBRKIMPL_H


9 
	#UBRKIMPL_H


	)

11 
	#U_ICUDATA_BRKITR
 
U_ICUDATA_NAME
 
U_TREE_SEPARATOR_STRING
 "brkôr"

	)

	@ucase.c

20 
	~"unicode/uty≥s.h
"

21 
	~"unicode/u£t.h
"

22 
	~"unicode/ud©a.h
"

23 
	~"ucmnd©a.h
"

24 
	~"ud©amem.h
"

25 
	~"umuãx.h
"

26 
	~"uas£π.h
"

27 
	~"cmem‹y.h
"

28 
	~"uåõ2.h
"

29 
	~"uˇ£.h
"

30 
	~"u˛n_cmn.h
"

32 
	sUCa£Pr›s
 {

33 
UD©aMem‹y
 *
	mmem
;

34 c⁄° 
öt32_t
 *
	mödexes
;

35 c⁄° 
uöt16_t
 *
	mex˚±i⁄s
;

36 c⁄° 
UCh¨
 *
	munfﬁd
;

38 
UTrõ2
 
	måõ
;

39 
uöt8_t
 
	mf‹m©Vîsi⁄
[4];

43 
	~"uˇ£_¥›s_d©a.c
"

47 
U_CAPI
 c⁄° 
UCa£Pr›s
 * 
U_EXPORT2


48 
	$uˇ£_gëSögÀt⁄
() {

49  &
uˇ£_¥›s_sögÀt⁄
;

50 
	}
}

54 
UBoﬁ
 
U_CALLCONV


55 
	$_íumPr›îtySèπsR™ge
(c⁄° *
c⁄ãxt
, 
UCh¨32
 
°¨t
, UCh¨32 
íd
, 
uöt32_t
 
vÆue
) {

57 c⁄° 
USëAddî
 *
ß
=(c⁄° USëAddî *)
c⁄ãxt
;

58 
ß
->
	`add
(ß->
£t
, 
°¨t
);

59  
TRUE
;

60 
	}
}

62 
U_CFUNC
 
U_EXPORT2


63 
	$uˇ£_addPr›îtySèπs
(c⁄° 
UCa£Pr›s
 *
c•
, c⁄° 
USëAddî
 *
ß
, 
UEº‹Code
 *
pEº‹Code
) {

64 if(
	`U_FAILURE
(*
pEº‹Code
)) {

69 
	`uåõ2_íum
(&
c•
->
åõ
, 
NULL
, 
_íumPr›îtySèπsR™ge
, 
ß
);

79 
	}
}

83 
	#GET_EXCEPTIONS
(
c•
, 
¥›s
Ë((c•)->
ex˚±i⁄s
+(’r›s)>>
UCASE_EXC_SHIFT
))

	)

85 
	#PROPS_HAS_EXCEPTION
(
¥›s
Ë(’r›s)&
UCASE_EXCEPTION
)

	)

88 c⁄° 
uöt8_t
 
	gÊagsOff£t
[256]={

107 
	#HAS_SLOT
(
Êags
, 
idx
Ë((Êags)&(1<<(idx)))

	)

108 
	#SLOT_OFFSET
(
Êags
, 
idx
Ë
ÊagsOff£t
[(Êags)&((1<<(idx))-1)]

	)

119 
	#GET_SLOT_VALUE
(
excW‹d
, 
idx
, 
pExc16
, 
vÆue
) \

120 if(((
excW‹d
)&
UCASE_EXC_DOUBLE_SLOTS
)==0) { \

121 (
pExc16
)+=
	`SLOT_OFFSET
(
excW‹d
, 
idx
); \

122 (
vÆue
)=*
pExc16
; \

124 (
pExc16
)+=2*
	`SLOT_OFFSET
(
excW‹d
, 
idx
); \

125 (
vÆue
)=*
pExc16
++; \

126 (
vÆue
)=((vÆue)<<16)|*
pExc16
; \

127 }

	)

131 
U_CAPI
 
UCh¨32
 
U_EXPORT2


132 
	$uˇ£_tﬁowî
(c⁄° 
UCa£Pr›s
 *
c•
, 
UCh¨32
 
c
) {

133 
uöt16_t
 
¥›s
=
	`UTRIE2_GET16
(&
c•
->
åõ
, 
c
);

134 if(!
	`PROPS_HAS_EXCEPTION
(
¥›s
)) {

135 if(
	`UCASE_GET_TYPE
(
¥›s
)>=
UCASE_UPPER
) {

136 
c
+=
	`UCASE_GET_DELTA
(
¥›s
);

139 c⁄° 
uöt16_t
 *
≥
=
	`GET_EXCEPTIONS
(
c•
, 
¥›s
);

140 
uöt16_t
 
excW‹d
=*
≥
++;

141 if(
	`HAS_SLOT
(
excW‹d
, 
UCASE_EXC_LOWER
)) {

142 
	`GET_SLOT_VALUE
(
excW‹d
, 
UCASE_EXC_LOWER
, 
≥
, 
c
);

145  
c
;

146 
	}
}

148 
U_CAPI
 
UCh¨32
 
U_EXPORT2


149 
	$uˇ£_touµî
(c⁄° 
UCa£Pr›s
 *
c•
, 
UCh¨32
 
c
) {

150 
uöt16_t
 
¥›s
=
	`UTRIE2_GET16
(&
c•
->
åõ
, 
c
);

151 if(!
	`PROPS_HAS_EXCEPTION
(
¥›s
)) {

152 if(
	`UCASE_GET_TYPE
(
¥›s
)==
UCASE_LOWER
) {

153 
c
+=
	`UCASE_GET_DELTA
(
¥›s
);

156 c⁄° 
uöt16_t
 *
≥
=
	`GET_EXCEPTIONS
(
c•
, 
¥›s
);

157 
uöt16_t
 
excW‹d
=*
≥
++;

158 if(
	`HAS_SLOT
(
excW‹d
, 
UCASE_EXC_UPPER
)) {

159 
	`GET_SLOT_VALUE
(
excW‹d
, 
UCASE_EXC_UPPER
, 
≥
, 
c
);

162  
c
;

163 
	}
}

165 
U_CAPI
 
UCh¨32
 
U_EXPORT2


166 
	$uˇ£_tŸôÀ
(c⁄° 
UCa£Pr›s
 *
c•
, 
UCh¨32
 
c
) {

167 
uöt16_t
 
¥›s
=
	`UTRIE2_GET16
(&
c•
->
åõ
, 
c
);

168 if(!
	`PROPS_HAS_EXCEPTION
(
¥›s
)) {

169 if(
	`UCASE_GET_TYPE
(
¥›s
)==
UCASE_LOWER
) {

170 
c
+=
	`UCASE_GET_DELTA
(
¥›s
);

173 c⁄° 
uöt16_t
 *
≥
=
	`GET_EXCEPTIONS
(
c•
, 
¥›s
);

174 
uöt16_t
 
excW‹d
=*
≥
++;

175 
öt32_t
 
idx
;

176 if(
	`HAS_SLOT
(
excW‹d
, 
UCASE_EXC_TITLE
)) {

177 
idx
=
UCASE_EXC_TITLE
;

178 } if(
	`HAS_SLOT
(
excW‹d
, 
UCASE_EXC_UPPER
)) {

179 
idx
=
UCASE_EXC_UPPER
;

181  
c
;

183 
	`GET_SLOT_VALUE
(
excW‹d
, 
idx
, 
≥
, 
c
);

185  
c
;

186 
	}
}

188 c⁄° 
UCh¨
 
	giDŸ
[2] = { 0x69, 0x307 };

189 c⁄° 
UCh¨
 
	gjDŸ
[2] = { 0x6a, 0x307 };

190 c⁄° 
UCh¨
 
	giOg⁄ekDŸ
[3] = { 0x12f, 0x307 };

191 c⁄° 
UCh¨
 
	giDŸGøve
[3] = { 0x69, 0x307, 0x300 };

192 c⁄° 
UCh¨
 
	giDŸAcuã
[3] = { 0x69, 0x307, 0x301 };

193 c⁄° 
UCh¨
 
	giDŸTûde
[3] = { 0x69, 0x307, 0x303 };

196 
U_CFUNC
 
U_EXPORT2


197 
	$uˇ£_addCa£Closuª
(c⁄° 
UCa£Pr›s
 *
c•
, 
UCh¨32
 
c
, c⁄° 
USëAddî
 *
ß
) {

198 
uöt16_t
 
¥›s
;

208 
c
) {

211 
ß
->
	`add
(ß->
£t
, 0x69);

214 
ß
->
	`add
(ß->
£t
, 0x49);

218 
ß
->
	`addSåög
(ß->
£t
, 
iDŸ
, 2);

228 
¥›s
=
	`UTRIE2_GET16
(&
c•
->
åõ
, 
c
);

229 if(!
	`PROPS_HAS_EXCEPTION
(
¥›s
)) {

230 if(
	`UCASE_GET_TYPE
(
¥›s
)!=
UCASE_NONE
) {

232 
öt32_t
 
dñè
=
	`UCASE_GET_DELTA
(
¥›s
);

233 if(
dñè
!=0) {

234 
ß
->
	`add
(ß->
£t
, 
c
+
dñè
);

242 c⁄° 
uöt16_t
 *
≥0
, *
≥
=
	`GET_EXCEPTIONS
(
c•
, 
¥›s
);

243 c⁄° 
UCh¨
 *
˛osuª
;

244 
uöt16_t
 
excW‹d
=*
≥
++;

245 
öt32_t
 
idx
, 
˛osuªLígth
, 
fuŒLígth
, 
Àngth
;

247 
≥0
=
≥
;

250 
idx
=
UCASE_EXC_LOWER
; idx<=
UCASE_EXC_TITLE
; ++idx) {

251 if(
	`HAS_SLOT
(
excW‹d
, 
idx
)) {

252 
≥
=
≥0
;

253 
	`GET_SLOT_VALUE
(
excW‹d
, 
idx
, 
≥
, 
c
);

254 
ß
->
	`add
(ß->
£t
, 
c
);

259 if(
	`HAS_SLOT
(
excW‹d
, 
UCASE_EXC_CLOSURE
)) {

260 
≥
=
≥0
;

261 
	`GET_SLOT_VALUE
(
excW‹d
, 
UCASE_EXC_CLOSURE
, 
≥
, 
˛osuªLígth
);

262 
˛osuªLígth
&=
UCASE_CLOSURE_MAX_LENGTH
;

263 
˛osuª
=(c⁄° 
UCh¨
 *)
≥
+1;

265 
˛osuªLígth
=0;

266 
˛osuª
=
NULL
;

270 if(
	`HAS_SLOT
(
excW‹d
, 
UCASE_EXC_FULL_MAPPINGS
)) {

271 
≥
=
≥0
;

272 
	`GET_SLOT_VALUE
(
excW‹d
, 
UCASE_EXC_FULL_MAPPINGS
, 
≥
, 
fuŒLígth
);

275 ++
≥
;

277 
fuŒLígth
&=0xffff;

280 
≥
+=
fuŒLígth
&
UCASE_FULL_LOWER
;

281 
fuŒLígth
>>=4;

284 
Àngth
=
fuŒLígth
&0xf;

285 if(
Àngth
!=0) {

286 
ß
->
	`addSåög
(ß->
£t
, (c⁄° 
UCh¨
 *)
≥
, 
Àngth
);

287 
≥
+=
Àngth
;

291 
fuŒLígth
>>=4;

292 
≥
+=
fuŒLígth
&0xf;

293 
fuŒLígth
>>=4;

294 
≥
+=
fuŒLígth
;

296 
˛osuª
=(c⁄° 
UCh¨
 *)
≥
;

300 
idx
=0; idx<
˛osuªLígth
;) {

301 
	`U16_NEXT_UNSAFE
(
˛osuª
, 
idx
, 
c
);

302 
ß
->
	`add
(ß->
£t
, 
c
);

305 
	}
}

311 
U_INLINE
 
öt32_t


312 
	$°rcmpMax
(c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
, c⁄° UCh¨ *
t
, i¡32_à
max
) {

313 
öt32_t
 
c1
, 
c2
;

315 
max
-=
Àngth
;

317 
c1
=*
s
++;

318 
c2
=*
t
++;

319 if(
c2
==0) {

322 
c1
-=
c2
;

323 if(
c1
!=0) {

324  
c1
;

326 } --
Àngth
>0);

329 if(
max
==0 || *
t
==0) {

332  -
max
;

334 
	}
}

336 
U_CFUNC
 
UBoﬁ
 
U_EXPORT2


337 
	$uˇ£_addSåögCa£Closuª
(c⁄° 
UCa£Pr›s
 *
c•
, c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
, c⁄° 
USëAddî
 *
ß
) {

338 c⁄° 
UCh¨
 *
unfﬁd
, *
p
;

339 
öt32_t
 
i
, 
°¨t
, 
limô
, 
ªsu…
, 
unfﬁdRows
, 
unfﬁdRowWidth
, 
unfﬁdSåögWidth
;

341 if(
c•
->
unfﬁd
==
NULL
 || 
s
==NULL) {

342  
FALSE
;

344 if(
Àngth
<=1) {

352  
FALSE
;

355 
unfﬁd
=
c•
->unfold;

356 
unfﬁdRows
=
unfﬁd
[
UCASE_UNFOLD_ROWS
];

357 
unfﬁdRowWidth
=
unfﬁd
[
UCASE_UNFOLD_ROW_WIDTH
];

358 
unfﬁdSåögWidth
=
unfﬁd
[
UCASE_UNFOLD_STRING_WIDTH
];

359 
unfﬁd
+=
unfﬁdRowWidth
;

361 if(
Àngth
>
unfﬁdSåögWidth
) {

363  
FALSE
;

367 
°¨t
=0;

368 
limô
=
unfﬁdRows
;

369 
°¨t
<
limô
) {

370 
i
=(
°¨t
+
limô
)/2;

371 
p
=
unfﬁd
+(
i
*
unfﬁdRowWidth
);

372 
ªsu…
=
	`°rcmpMax
(
s
, 
Àngth
, 
p
, 
unfﬁdSåögWidth
);

374 if(
ªsu…
==0) {

376 
UCh¨32
 
c
;

378 
i
=
unfﬁdSåögWidth
; i<
unfﬁdRowWidth
 && 
p
[i]!=0;) {

379 
	`U16_NEXT_UNSAFE
(
p
, 
i
, 
c
);

380 
ß
->
	`add
(ß->
£t
, 
c
);

381 
	`uˇ£_addCa£Closuª
(
c•
, 
c
, 
ß
);

383  
TRUE
;

384 } if(
ªsu…
<0) {

385 
limô
=
i
;

387 
°¨t
=
i
+1;

391  
FALSE
;

392 
	}
}

395 
U_CAPI
 
öt32_t
 
U_EXPORT2


396 
	$uˇ£_gëTy≥
(c⁄° 
UCa£Pr›s
 *
c•
, 
UCh¨32
 
c
) {

397 
uöt16_t
 
¥›s
=
	`UTRIE2_GET16
(&
c•
->
åõ
, 
c
);

398  
	`UCASE_GET_TYPE
(
¥›s
);

399 
	}
}

402 
U_CAPI
 
öt32_t
 
U_EXPORT2


403 
	$uˇ£_gëTy≥OrIgn‹abÀ
(c⁄° 
UCa£Pr›s
 *
c•
, 
UCh¨32
 
c
) {

404 
uöt16_t
 
¥›s
=
	`UTRIE2_GET16
(&
c•
->
åõ
, 
c
);

405 
öt32_t
 
ty≥
=
	`UCASE_GET_TYPE
(
¥›s
);

406 if(
¥›s
&
UCASE_EXCEPTION
) {

407 c⁄° 
uöt16_t
 *
≥
=
	`GET_EXCEPTIONS
(
c•
, 
¥›s
);

408 if(*
≥
&
UCASE_EXC_CASE_IGNORABLE
) {

409 
ty≥
|=4;

411 } if(
ty≥
==
UCASE_NONE
 && (
¥›s
&
UCASE_CASE_IGNORABLE
)) {

412 
ty≥
|=4;

414  
ty≥
;

415 
	}
}

418 
U_INLINE
 
öt32_t


419 
	$gëDŸTy≥
(c⁄° 
UCa£Pr›s
 *
c•
, 
UCh¨32
 
c
) {

420 
uöt16_t
 
¥›s
=
	`UTRIE2_GET16
(&
c•
->
åõ
, 
c
);

421 if(!
	`PROPS_HAS_EXCEPTION
(
¥›s
)) {

422  
¥›s
&
UCASE_DOT_MASK
;

424 c⁄° 
uöt16_t
 *
≥
=
	`GET_EXCEPTIONS
(
c•
, 
¥›s
);

425  (*
≥
>>
UCASE_EXC_DOT_SHIFT
)&
UCASE_DOT_MASK
;

427 
	}
}

429 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


430 
	$uˇ£_isSo·DŸãd
(c⁄° 
UCa£Pr›s
 *
c•
, 
UCh¨32
 
c
) {

431  (
UBoﬁ
)(
	`gëDŸTy≥
(
c•
, 
c
)==
UCASE_SOFT_DOTTED
);

432 
	}
}

434 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


435 
	$uˇ£_isCa£Sísôive
(c⁄° 
UCa£Pr›s
 *
c•
, 
UCh¨32
 
c
) {

436 
uöt16_t
 
¥›s
=
	`UTRIE2_GET16
(&
c•
->
åõ
, 
c
);

437  (
UBoﬁ
)((
¥›s
&
UCASE_SENSITIVE
)!=0);

438 
	}
}

520 
	#is_a
(
c
Ë((c)=='a' || (c)=='A')

	)

521 
	#is_d
(
c
Ë((c)=='d' || (c)=='D')

	)

522 
	#is_e
(
c
Ë((c)=='e' || (c)=='E')

	)

523 
	#is_i
(
c
Ë((c)=='i' || (c)=='I')

	)

524 
	#is_l
(
c
Ë((c)=='l' || (c)=='L')

	)

525 
	#is_n
(
c
Ë((c)=='n' || (c)=='N')

	)

526 
	#is_r
(
c
Ë((c)=='r' || (c)=='R')

	)

527 
	#is_t
(
c
Ë((c)=='t' || (c)=='T')

	)

528 
	#is_u
(
c
Ë((c)=='u' || (c)=='U')

	)

529 
	#is_z
(
c
Ë((c)=='z' || (c)=='Z')

	)

532 
	#is_£p
(
c
Ë((c)=='_' || (c)=='-' || (c)==0)

	)

539 
U_CFUNC
 
öt32_t


540 
	$uˇ£_gëCa£LoˇÀ
(c⁄° *
loˇÀ
, 
öt32_t
 *
locCache
) {

541 
öt32_t
 
ªsu…
;

542 
c
;

544 if(
locCache
!=
NULL
 && (
ªsu…
=*locCache)!=
UCASE_LOC_UNKNOWN
) {

545  
ªsu…
;

548 
ªsu…
=
UCASE_LOC_ROOT
;

559 
c
=*
loˇÀ
++;

560 if(
	`is_t
(
c
)) {

562 
c
=*
loˇÀ
++;

563 if(
	`is_u
(
c
)) {

564 
c
=*
loˇÀ
++;

566 if(
	`is_r
(
c
)) {

567 
c
=*
loˇÀ
;

568 if(
	`is_£p
(
c
)) {

569 
ªsu…
=
UCASE_LOC_TURKISH
;

572 } if(
	`is_a
(
c
)) {

574 
c
=*
loˇÀ
++;

575 if(
	`is_z
(
c
)) {

576 
c
=*
loˇÀ
++;

577 if(
	`is_e
(
c
)) {

578 
c
=*
loˇÀ
;

580 if(
	`is_£p
(
c
)) {

581 
ªsu…
=
UCASE_LOC_TURKISH
;

584 } if(
	`is_l
(
c
)) {

586 
c
=*
loˇÀ
++;

587 if(
	`is_i
(
c
)) {

588 
c
=*
loˇÀ
++;

590 if(
	`is_t
(
c
)) {

591 
c
=*
loˇÀ
;

592 if(
	`is_£p
(
c
)) {

593 
ªsu…
=
UCASE_LOC_LITHUANIAN
;

596 } if(
	`is_n
(
c
)) {

598 
c
=*
loˇÀ
++;

599 if(
	`is_l
(
c
)) {

600 
c
=*
loˇÀ
++;

601 if(
	`is_d
(
c
)) {

602 
c
=*
loˇÀ
;

604 if(
	`is_£p
(
c
)) {

605 
ªsu…
=
UCASE_LOC_DUTCH
;

610 if(
locCache
!=
NULL
) {

611 *
locCache
=
ªsu…
;

613  
ªsu…
;

614 
	}
}

624 
UBoﬁ


625 
	$isFﬁlowedByCa£dLëãr
(c⁄° 
UCa£Pr›s
 *
c•
, 
UCa£C⁄ãxtIãøt‹
 *
ôî
, *
c⁄ãxt
, 
öt8_t
 
dú
) {

626 
UCh¨32
 
c
;

628 if(
ôî
==
NULL
) {

629  
FALSE
;

632  ; (
c
=
	`ôî
(
c⁄ãxt
, 
dú
))>=0; dir=0) {

633 
öt32_t
 
ty≥
=
	`uˇ£_gëTy≥OrIgn‹abÀ
(
c•
, 
c
);

634 if(
ty≥
&4) {

636 } if(
ty≥
!=
UCASE_NONE
) {

637  
TRUE
;

639  
FALSE
;

643  
FALSE
;

644 
	}
}

647 
UBoﬁ


648 
	$isPª˚dedBySo·DŸãd
(c⁄° 
UCa£Pr›s
 *
c•
, 
UCa£C⁄ãxtIãøt‹
 *
ôî
, *
c⁄ãxt
) {

649 
UCh¨32
 
c
;

650 
öt32_t
 
dŸTy≥
;

651 
öt8_t
 
dú
;

653 if(
ôî
==
NULL
) {

654  
FALSE
;

657 
dú
=-1; (
c
=
	`ôî
(
c⁄ãxt
, dir))>=0; dir=0) {

658 
dŸTy≥
=
	`gëDŸTy≥
(
c•
, 
c
);

659 if(
dŸTy≥
==
UCASE_SOFT_DOTTED
) {

660  
TRUE
;

661 } if(
dŸTy≥
!=
UCASE_OTHER_ACCENT
) {

662  
FALSE
;

666  
FALSE
;

667 
	}
}

704 
UBoﬁ


705 
	$isPª˚dedBy_I
(c⁄° 
UCa£Pr›s
 *
c•
, 
UCa£C⁄ãxtIãøt‹
 *
ôî
, *
c⁄ãxt
) {

706 
UCh¨32
 
c
;

707 
öt32_t
 
dŸTy≥
;

708 
öt8_t
 
dú
;

710 if(
ôî
==
NULL
) {

711  
FALSE
;

714 
dú
=-1; (
c
=
	`ôî
(
c⁄ãxt
, dir))>=0; dir=0) {

715 if(
c
==0x49) {

716  
TRUE
;

718 
dŸTy≥
=
	`gëDŸTy≥
(
c•
, 
c
);

719 if(
dŸTy≥
!=
UCASE_OTHER_ACCENT
) {

720  
FALSE
;

724  
FALSE
;

725 
	}
}

728 
UBoﬁ


729 
	$isFﬁlowedByM‹eAbove
(c⁄° 
UCa£Pr›s
 *
c•
, 
UCa£C⁄ãxtIãøt‹
 *
ôî
, *
c⁄ãxt
) {

730 
UCh¨32
 
c
;

731 
öt32_t
 
dŸTy≥
;

732 
öt8_t
 
dú
;

734 if(
ôî
==
NULL
) {

735  
FALSE
;

738 
dú
=1; (
c
=
	`ôî
(
c⁄ãxt
, dir))>=0; dir=0) {

739 
dŸTy≥
=
	`gëDŸTy≥
(
c•
, 
c
);

740 if(
dŸTy≥
==
UCASE_ABOVE
) {

741  
TRUE
;

742 } if(
dŸTy≥
!=
UCASE_OTHER_ACCENT
) {

743  
FALSE
;

747  
FALSE
;

748 
	}
}

751 
UBoﬁ


752 
	$isFﬁlowedByDŸAbove
(c⁄° 
UCa£Pr›s
 *
c•
, 
UCa£C⁄ãxtIãøt‹
 *
ôî
, *
c⁄ãxt
) {

753 
UCh¨32
 
c
;

754 
öt32_t
 
dŸTy≥
;

755 
öt8_t
 
dú
;

757 if(
ôî
==
NULL
) {

758  
FALSE
;

761 
dú
=1; (
c
=
	`ôî
(
c⁄ãxt
, dir))>=0; dir=0) {

762 if(
c
==0x307) {

763  
TRUE
;

765 
dŸTy≥
=
	`gëDŸTy≥
(
c•
, 
c
);

766 if(
dŸTy≥
!=
UCASE_OTHER_ACCENT
) {

767  
FALSE
;

771  
FALSE
;

772 
	}
}

774 
U_CAPI
 
öt32_t
 
U_EXPORT2


775 
	$uˇ£_toFuŒLowî
(c⁄° 
UCa£Pr›s
 *
c•
, 
UCh¨32
 
c
,

776 
UCa£C⁄ãxtIãøt‹
 *
ôî
, *
c⁄ãxt
,

777 c⁄° 
UCh¨
 **
pSåög
,

778 c⁄° *
loˇÀ
, 
öt32_t
 *
locCache
)

780 
UCh¨32
 
ªsu…
=
c
;

781 
uöt16_t
 
¥›s
=
	`UTRIE2_GET16
(&
c•
->
åõ
, 
c
);

782 if(!
	`PROPS_HAS_EXCEPTION
(
¥›s
)) {

783 if(
	`UCASE_GET_TYPE
(
¥›s
)>=
UCASE_UPPER
) {

784 
ªsu…
=
c
+
	`UCASE_GET_DELTA
(
¥›s
);

787 c⁄° 
uöt16_t
 *
≥
=
	`GET_EXCEPTIONS
(
c•
, 
¥›s
), *
≥2
;

788 
uöt16_t
 
excW‹d
=*
≥
++;

789 
öt32_t
 
fuŒ
;

791 
≥2
=
≥
;

793 if(
excW‹d
&
UCASE_EXC_CONDITIONAL_SPECIAL
) {

795 
öt32_t
 
loc
=
	`uˇ£_gëCa£LoˇÀ
(
loˇÀ
, 
locCache
);

803 if–
loc
==
UCASE_LOC_LITHUANIAN
 &&

805 (((
c
==0x49 || c==0x4a || c==0x12e) &&

806 
	`isFﬁlowedByM‹eAbove
(
c•
, 
ôî
, 
c⁄ãxt
)) ||

808 (
c
==0xcc || c==0xcd || c==0x128))

826 
c
) {

828 *
pSåög
=
iDŸ
;

831 *
pSåög
=
jDŸ
;

834 *
pSåög
=
iOg⁄ekDŸ
;

837 *
pSåög
=
iDŸGøve
;

840 *
pSåög
=
iDŸAcuã
;

843 *
pSåög
=
iDŸTûde
;

849 } if(
loc
==
UCASE_LOC_TURKISH
 && 
c
==0x130) {

858 } if(
loc
==
UCASE_LOC_TURKISH
 && 
c
==0x307 && 
	`isPª˚dedBy_I
(
c•
, 
ôî
, 
c⁄ãxt
)) {

867 } if(
loc
==
UCASE_LOC_TURKISH
 && 
c
==0x49 && !
	`isFﬁlowedByDŸAbove
(
c•
, 
ôî
, 
c⁄ãxt
)) {

875 } if(
c
==0x130) {

881 *
pSåög
=
iDŸ
;

883 } if–
c
==0x3a3 &&

884 !
	`isFﬁlowedByCa£dLëãr
(
c•
, 
ôî
, 
c⁄ãxt
, 1) &&

885 
	`isFﬁlowedByCa£dLëãr
(
c•
, 
ôî
, 
c⁄ãxt
, -1)

897 } if(
	`HAS_SLOT
(
excW‹d
, 
UCASE_EXC_FULL_MAPPINGS
)) {

898 
	`GET_SLOT_VALUE
(
excW‹d
, 
UCASE_EXC_FULL_MAPPINGS
, 
≥
, 
fuŒ
);

899 
fuŒ
&=
UCASE_FULL_LOWER
;

900 if(
fuŒ
!=0) {

902 *
pSåög
=
≥
+1;

905  
fuŒ
;

909 if(
	`HAS_SLOT
(
excW‹d
, 
UCASE_EXC_LOWER
)) {

910 
	`GET_SLOT_VALUE
(
excW‹d
, 
UCASE_EXC_LOWER
, 
≥2
, 
ªsu…
);

914  (
ªsu…
==
c
) ? ~result :Ñesult;

915 
	}
}

918 
öt32_t


919 
	$toUµîOrTôÀ
(c⁄° 
UCa£Pr›s
 *
c•
, 
UCh¨32
 
c
,

920 
UCa£C⁄ãxtIãøt‹
 *
ôî
, *
c⁄ãxt
,

921 c⁄° 
UCh¨
 **
pSåög
,

922 c⁄° *
loˇÀ
, 
öt32_t
 *
locCache
,

923 
UBoﬁ
 
uµîNŸTôÀ
) {

924 
UCh¨32
 
ªsu…
=
c
;

925 
uöt16_t
 
¥›s
=
	`UTRIE2_GET16
(&
c•
->
åõ
, 
c
);

926 if(!
	`PROPS_HAS_EXCEPTION
(
¥›s
)) {

927 if(
	`UCASE_GET_TYPE
(
¥›s
)==
UCASE_LOWER
) {

928 
ªsu…
=
c
+
	`UCASE_GET_DELTA
(
¥›s
);

931 c⁄° 
uöt16_t
 *
≥
=
	`GET_EXCEPTIONS
(
c•
, 
¥›s
), *
≥2
;

932 
uöt16_t
 
excW‹d
=*
≥
++;

933 
öt32_t
 
fuŒ
, 
idx
;

935 
≥2
=
≥
;

937 if(
excW‹d
&
UCASE_EXC_CONDITIONAL_SPECIAL
) {

939 
öt32_t
 
loc
=
	`uˇ£_gëCa£LoˇÀ
(
loˇÀ
, 
locCache
);

941 if(
loc
==
UCASE_LOC_TURKISH
 && 
c
==0x69) {

954 } if(
loc
==
UCASE_LOC_LITHUANIAN
 && 
c
==0x307 && 
	`isPª˚dedBySo·DŸãd
(
c•
, 
ôî
, 
c⁄ãxt
)) {

968 } if(
	`HAS_SLOT
(
excW‹d
, 
UCASE_EXC_FULL_MAPPINGS
)) {

969 
	`GET_SLOT_VALUE
(
excW‹d
, 
UCASE_EXC_FULL_MAPPINGS
, 
≥
, 
fuŒ
);

972 ++
≥
;

975 
≥
+=
fuŒ
&
UCASE_FULL_LOWER
;

976 
fuŒ
>>=4;

977 
≥
+=
fuŒ
&0xf;

978 
fuŒ
>>=4;

980 if(
uµîNŸTôÀ
) {

981 
fuŒ
&=0xf;

984 
≥
+=
fuŒ
&0xf;

985 
fuŒ
=(full>>4)&0xf;

988 if(
fuŒ
!=0) {

990 *
pSåög
=
≥
;

993  
fuŒ
;

997 if(!
uµîNŸTôÀ
 && 
	`HAS_SLOT
(
excW‹d
, 
UCASE_EXC_TITLE
)) {

998 
idx
=
UCASE_EXC_TITLE
;

999 } if(
	`HAS_SLOT
(
excW‹d
, 
UCASE_EXC_UPPER
)) {

1001 
idx
=
UCASE_EXC_UPPER
;

1003  ~
c
;

1005 
	`GET_SLOT_VALUE
(
excW‹d
, 
idx
, 
≥2
, 
ªsu…
);

1008  (
ªsu…
==
c
) ? ~result :Ñesult;

1009 
	}
}

1011 
U_CAPI
 
öt32_t
 
U_EXPORT2


1012 
	$uˇ£_toFuŒUµî
(c⁄° 
UCa£Pr›s
 *
c•
, 
UCh¨32
 
c
,

1013 
UCa£C⁄ãxtIãøt‹
 *
ôî
, *
c⁄ãxt
,

1014 c⁄° 
UCh¨
 **
pSåög
,

1015 c⁄° *
loˇÀ
, 
öt32_t
 *
locCache
) {

1016  
	`toUµîOrTôÀ
(
c•
, 
c
, 
ôî
, 
c⁄ãxt
, 
pSåög
, 
loˇÀ
, 
locCache
, 
TRUE
);

1017 
	}
}

1019 
U_CAPI
 
öt32_t
 
U_EXPORT2


1020 
	$uˇ£_toFuŒTôÀ
(c⁄° 
UCa£Pr›s
 *
c•
, 
UCh¨32
 
c
,

1021 
UCa£C⁄ãxtIãøt‹
 *
ôî
, *
c⁄ãxt
,

1022 c⁄° 
UCh¨
 **
pSåög
,

1023 c⁄° *
loˇÀ
, 
öt32_t
 *
locCache
) {

1024  
	`toUµîOrTôÀ
(
c•
, 
c
, 
ôî
, 
c⁄ãxt
, 
pSåög
, 
loˇÀ
, 
locCache
, 
FALSE
);

1025 
	}
}

1069 
U_CAPI
 
UCh¨32
 
U_EXPORT2


1070 
	$uˇ£_fﬁd
(c⁄° 
UCa£Pr›s
 *
c•
, 
UCh¨32
 
c
, 
uöt32_t
 
›ti⁄s
) {

1071 
uöt16_t
 
¥›s
=
	`UTRIE2_GET16
(&
c•
->
åõ
, 
c
);

1072 if(!
	`PROPS_HAS_EXCEPTION
(
¥›s
)) {

1073 if(
	`UCASE_GET_TYPE
(
¥›s
)>=
UCASE_UPPER
) {

1074 
c
+=
	`UCASE_GET_DELTA
(
¥›s
);

1077 c⁄° 
uöt16_t
 *
≥
=
	`GET_EXCEPTIONS
(
c•
, 
¥›s
);

1078 
uöt16_t
 
excW‹d
=*
≥
++;

1079 
öt32_t
 
idx
;

1080 if(
excW‹d
&
UCASE_EXC_CONDITIONAL_FOLD
) {

1082 if((
›ti⁄s
&
_FOLD_CASE_OPTIONS_MASK
)==
U_FOLD_CASE_DEFAULT
) {

1084 if(
c
==0x49) {

1087 } if(
c
==0x130) {

1089  
c
;

1093 if(
c
==0x49) {

1096 } if(
c
==0x130) {

1102 if(
	`HAS_SLOT
(
excW‹d
, 
UCASE_EXC_FOLD
)) {

1103 
idx
=
UCASE_EXC_FOLD
;

1104 } if(
	`HAS_SLOT
(
excW‹d
, 
UCASE_EXC_LOWER
)) {

1105 
idx
=
UCASE_EXC_LOWER
;

1107  
c
;

1109 
	`GET_SLOT_VALUE
(
excW‹d
, 
idx
, 
≥
, 
c
);

1111  
c
;

1112 
	}
}

1129 
U_CAPI
 
öt32_t
 
U_EXPORT2


1130 
	$uˇ£_toFuŒFﬁdög
(c⁄° 
UCa£Pr›s
 *
c•
, 
UCh¨32
 
c
,

1131 c⁄° 
UCh¨
 **
pSåög
,

1132 
uöt32_t
 
›ti⁄s
)

1134 
UCh¨32
 
ªsu…
=
c
;

1135 
uöt16_t
 
¥›s
=
	`UTRIE2_GET16
(&
c•
->
åõ
, 
c
);

1136 if(!
	`PROPS_HAS_EXCEPTION
(
¥›s
)) {

1137 if(
	`UCASE_GET_TYPE
(
¥›s
)>=
UCASE_UPPER
) {

1138 
ªsu…
=
c
+
	`UCASE_GET_DELTA
(
¥›s
);

1141 c⁄° 
uöt16_t
 *
≥
=
	`GET_EXCEPTIONS
(
c•
, 
¥›s
), *
≥2
;

1142 
uöt16_t
 
excW‹d
=*
≥
++;

1143 
öt32_t
 
fuŒ
, 
idx
;

1145 
≥2
=
≥
;

1147 if(
excW‹d
&
UCASE_EXC_CONDITIONAL_FOLD
) {

1149 if((
›ti⁄s
&
_FOLD_CASE_OPTIONS_MASK
)==
U_FOLD_CASE_DEFAULT
) {

1151 if(
c
==0x49) {

1154 } if(
c
==0x130) {

1156 *
pSåög
=
iDŸ
;

1161 if(
c
==0x49) {

1164 } if(
c
==0x130) {

1169 } if(
	`HAS_SLOT
(
excW‹d
, 
UCASE_EXC_FULL_MAPPINGS
)) {

1170 
	`GET_SLOT_VALUE
(
excW‹d
, 
UCASE_EXC_FULL_MAPPINGS
, 
≥
, 
fuŒ
);

1173 ++
≥
;

1176 
≥
+=
fuŒ
&
UCASE_FULL_LOWER
;

1177 
fuŒ
=(full>>4)&0xf;

1179 if(
fuŒ
!=0) {

1181 *
pSåög
=
≥
;

1184  
fuŒ
;

1188 if(
	`HAS_SLOT
(
excW‹d
, 
UCASE_EXC_FOLD
)) {

1189 
idx
=
UCASE_EXC_FOLD
;

1190 } if(
	`HAS_SLOT
(
excW‹d
, 
UCASE_EXC_LOWER
)) {

1191 
idx
=
UCASE_EXC_LOWER
;

1193  ~
c
;

1195 
	`GET_SLOT_VALUE
(
excW‹d
, 
idx
, 
≥2
, 
ªsu…
);

1198  (
ªsu…
==
c
) ? ~result :Ñesult;

1199 
	}
}

1203 
	#GET_CASE_PROPS
(Ë&
uˇ£_¥›s_sögÀt⁄


	)

1207 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


1208 
	$u_isULowîˇ£
(
UCh¨32
 
c
) {

1209  (
UBoﬁ
)(
UCASE_LOWER
==
	`uˇ£_gëTy≥
(
	`GET_CASE_PROPS
(), 
c
));

1210 
	}
}

1212 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


1213 
	$u_isUUµîˇ£
(
UCh¨32
 
c
) {

1214  (
UBoﬁ
)(
UCASE_UPPER
==
	`uˇ£_gëTy≥
(
	`GET_CASE_PROPS
(), 
c
));

1215 
	}
}

1218 
U_CAPI
 
UCh¨32
 
U_EXPORT2


1219 
	$u_tﬁowî
(
UCh¨32
 
c
) {

1220  
	`uˇ£_tﬁowî
(
	`GET_CASE_PROPS
(), 
c
);

1221 
	}
}

1224 
U_CAPI
 
UCh¨32
 
U_EXPORT2


1225 
	$u_touµî
(
UCh¨32
 
c
) {

1226  
	`uˇ£_touµî
(
	`GET_CASE_PROPS
(), 
c
);

1227 
	}
}

1230 
U_CAPI
 
UCh¨32
 
U_EXPORT2


1231 
	$u_tŸôÀ
(
UCh¨32
 
c
) {

1232  
	`uˇ£_tŸôÀ
(
	`GET_CASE_PROPS
(), 
c
);

1233 
	}
}

1236 
U_CAPI
 
UCh¨32
 
U_EXPORT2


1237 
	$u_fﬁdCa£
(
UCh¨32
 
c
, 
uöt32_t
 
›ti⁄s
) {

1238  
	`uˇ£_fﬁd
(
	`GET_CASE_PROPS
(), 
c
, 
›ti⁄s
);

1239 
	}
}

1241 
U_CFUNC
 
öt32_t
 
U_EXPORT2


1242 
	$uˇ£_hasBö¨yPr›îty
(
UCh¨32
 
c
, 
UPr›îty
 
which
) {

1244 c⁄° 
UCh¨
 *
ªsu…Såög
;

1245 
öt32_t
 
locCache
;

1246 c⁄° 
UCa£Pr›s
 *
c•
=
	`GET_CASE_PROPS
();

1247 if(
c•
==
NULL
) {

1248  
FALSE
;

1250 
which
) {

1251 
UCHAR_LOWERCASE
:

1252  (
UBoﬁ
)(
UCASE_LOWER
==
	`uˇ£_gëTy≥
(
c•
, 
c
));

1253 
UCHAR_UPPERCASE
:

1254  (
UBoﬁ
)(
UCASE_UPPER
==
	`uˇ£_gëTy≥
(
c•
, 
c
));

1255 
UCHAR_SOFT_DOTTED
:

1256  
	`uˇ£_isSo·DŸãd
(
c•
, 
c
);

1257 
UCHAR_CASE_SENSITIVE
:

1258  
	`uˇ£_isCa£Sísôive
(
c•
, 
c
);

1259 
UCHAR_CASED
:

1260  (
UBoﬁ
)(
UCASE_NONE
!=
	`uˇ£_gëTy≥
(
c•
, 
c
));

1261 
UCHAR_CASE_IGNORABLE
:

1262  (
UBoﬁ
)(
	`uˇ£_gëTy≥OrIgn‹abÀ
(
c•
, 
c
)>>2);

1275 
UCHAR_CHANGES_WHEN_LOWERCASED
:

1276 
locCache
=
UCASE_LOC_ROOT
;

1277  (
UBoﬁ
)(
	`uˇ£_toFuŒLowî
(
c•
, 
c
, 
NULL
, NULL, &
ªsu…Såög
, "", &
locCache
)>=0);

1278 
UCHAR_CHANGES_WHEN_UPPERCASED
:

1279 
locCache
=
UCASE_LOC_ROOT
;

1280  (
UBoﬁ
)(
	`uˇ£_toFuŒUµî
(
c•
, 
c
, 
NULL
, NULL, &
ªsu…Såög
, "", &
locCache
)>=0);

1281 
UCHAR_CHANGES_WHEN_TITLECASED
:

1282 
locCache
=
UCASE_LOC_ROOT
;

1283  (
UBoﬁ
)(
	`uˇ£_toFuŒTôÀ
(
c•
, 
c
, 
NULL
, NULL, &
ªsu…Såög
, "", &
locCache
)>=0);

1285 
UCHAR_CHANGES_WHEN_CASEMAPPED
:

1286 
locCache
=
UCASE_LOC_ROOT
;

1287  (
UBoﬁ
)(

1288 
	`uˇ£_toFuŒLowî
(
c•
, 
c
, 
NULL
, NULL, &
ªsu…Såög
, "", &
locCache
)>=0 ||

1289 
	`uˇ£_toFuŒUµî
(
c•
, 
c
, 
NULL
, NULL, &
ªsu…Såög
, "", &
locCache
)>=0 ||

1290 
	`uˇ£_toFuŒTôÀ
(
c•
, 
c
, 
NULL
, NULL, &
ªsu…Såög
, "", &
locCache
)>=0);

1292  
FALSE
;

1294 
	}
}

	@ucase.h

19 #i‚de‡
__UCASE_H__


20 
	#__UCASE_H__


	)

22 
	~"unicode/uty≥s.h
"

23 
	~"unicode/u£t.h
"

24 
	~"u£t_imp.h
"

25 
	~"ud©aswp.h
"

27 
U_CDECL_BEGIN


31 
	gUCa£Pr›s
;

32 
UCa£Pr›s
 
	tUCa£Pr›s
;

34 
U_CAPI
 c⁄° 
UCa£Pr›s
 * 
U_EXPORT2


35 
uˇ£_gëSögÀt⁄
();

37 
U_CAPI
 
öt32_t
 
U_EXPORT2


38 
uˇ£_sw≠
(c⁄° 
UD©aSw≠≥r
 *
ds
,

39 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

40 
UEº‹Code
 *
pEº‹Code
);

42 
U_CFUNC
 
U_EXPORT2


43 
uˇ£_addPr›îtySèπs
(c⁄° 
UCa£Pr›s
 *
c•
, c⁄° 
USëAddî
 *
ß
, 
UEº‹Code
 *
pEº‹Code
);

50 
U_CFUNC
 
öt32_t


51 
uˇ£_gëCa£LoˇÀ
(c⁄° *
loˇÀ
, 
öt32_t
 *
locCache
);

55 
	mUCASE_LOC_UNKNOWN
,

56 
	mUCASE_LOC_ROOT
,

57 
	mUCASE_LOC_TURKISH
,

58 
	mUCASE_LOC_LITHUANIAN
,

59 
	mUCASE_LOC_DUTCH


68 
	#_STRCASECMP_OPTIONS_MASK
 0xffff

	)

76 
	#_FOLD_CASE_OPTIONS_MASK
 0xff

	)

80 
U_CAPI
 
UCh¨32
 
U_EXPORT2


81 
uˇ£_tﬁowî
(c⁄° 
UCa£Pr›s
 *
c•
, 
UCh¨32
 
c
);

83 
U_CAPI
 
UCh¨32
 
U_EXPORT2


84 
uˇ£_touµî
(c⁄° 
UCa£Pr›s
 *
c•
, 
UCh¨32
 
c
);

86 
U_CAPI
 
UCh¨32
 
U_EXPORT2


87 
uˇ£_tŸôÀ
(c⁄° 
UCa£Pr›s
 *
c•
, 
UCh¨32
 
c
);

89 
U_CAPI
 
UCh¨32
 
U_EXPORT2


90 
uˇ£_fﬁd
(c⁄° 
UCa£Pr›s
 *
c•
, 
UCh¨32
 
c
, 
uöt32_t
 
›ti⁄s
);

101 
U_CFUNC
 
U_EXPORT2


102 
uˇ£_addCa£Closuª
(c⁄° 
UCa£Pr›s
 *
c•
, 
UCh¨32
 
c
, c⁄° 
USëAddî
 *
ß
);

116 
U_CFUNC
 
UBoﬁ
 
U_EXPORT2


117 
uˇ£_addSåögCa£Closuª
(c⁄° 
UCa£Pr›s
 *
c•
, c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
, c⁄° 
USëAddî
 *
ß
);

120 
U_CAPI
 
öt32_t
 
U_EXPORT2


121 
uˇ£_gëTy≥
(c⁄° 
UCa£Pr›s
 *
c•
, 
UCh¨32
 
c
);

124 
U_CAPI
 
öt32_t
 
U_EXPORT2


125 
uˇ£_gëTy≥OrIgn‹abÀ
(c⁄° 
UCa£Pr›s
 *
c•
, 
UCh¨32
 
c
);

127 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


128 
uˇ£_isSo·DŸãd
(c⁄° 
UCa£Pr›s
 *
c•
, 
UCh¨32
 
c
);

130 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


131 
uˇ£_isCa£Sísôive
(c⁄° 
UCa£Pr›s
 *
c•
, 
UCh¨32
 
c
);

153 
UCh¨32
 
	tU_CALLCONV


154 
	tUCa£C⁄ãxtIãøt‹
(*
	tc⁄ãxt
, 
	töt8_t
 
	tdú
);

160 
	sUCa£C⁄ãxt
 {

161 *
	mp
;

162 
öt32_t
 
	m°¨t
, 
	mödex
, 
	mlimô
;

163 
öt32_t
 
	m˝Sèπ
, 
	m˝Limô
;

164 
öt8_t
 
	mdú
;

165 
öt8_t
 
	mb1
, 
	mb2
, 
	mb3
;

167 
UCa£C⁄ãxt
 
	tUCa£C⁄ãxt
;

184 
	mUCASE_MAX_STRING_LENGTH
=0x1f

208 
U_CAPI
 
öt32_t
 
U_EXPORT2


209 
uˇ£_toFuŒLowî
(c⁄° 
UCa£Pr›s
 *
c•
, 
UCh¨32
 
c
,

210 
UCa£C⁄ãxtIãøt‹
 *
ôî
, *
c⁄ãxt
,

211 c⁄° 
UCh¨
 **
pSåög
,

212 c⁄° *
loˇÀ
, 
öt32_t
 *
locCache
);

214 
U_CAPI
 
öt32_t
 
U_EXPORT2


215 
uˇ£_toFuŒUµî
(c⁄° 
UCa£Pr›s
 *
c•
, 
UCh¨32
 
c
,

216 
UCa£C⁄ãxtIãøt‹
 *
ôî
, *
c⁄ãxt
,

217 c⁄° 
UCh¨
 **
pSåög
,

218 c⁄° *
loˇÀ
, 
öt32_t
 *
locCache
);

220 
U_CAPI
 
öt32_t
 
U_EXPORT2


221 
uˇ£_toFuŒTôÀ
(c⁄° 
UCa£Pr›s
 *
c•
, 
UCh¨32
 
c
,

222 
UCa£C⁄ãxtIãøt‹
 *
ôî
, *
c⁄ãxt
,

223 c⁄° 
UCh¨
 **
pSåög
,

224 c⁄° *
loˇÀ
, 
öt32_t
 *
locCache
);

226 
U_CAPI
 
öt32_t
 
U_EXPORT2


227 
uˇ£_toFuŒFﬁdög
(c⁄° 
UCa£Pr›s
 *
c•
, 
UCh¨32
 
c
,

228 c⁄° 
UCh¨
 **
pSåög
,

229 
uöt32_t
 
›ti⁄s
);

231 
U_CFUNC
 
öt32_t
 
U_EXPORT2


232 
uˇ£_hasBö¨yPr›îty
(
UCh¨32
 
c
, 
UPr›îty
 
which
);

235 
U_CDECL_BEGIN


240 
öt32_t
 
	tU_CALLCONV


241 
	tUCa£M≠FuŒ
(c⁄° 
	tUCa£Pr›s
 *
	tc•
, 
	tUCh¨32
 
	tc
,

242 
	tUCa£C⁄ãxtIãøt‹
 *
	tôî
, *
	tc⁄ãxt
,

243 c⁄° 
	tUCh¨
 **
	tpSåög
,

244 c⁄° *
	tloˇÀ
, 
	töt32_t
 *
	tlocCache
);

246 
	gU_CDECL_END


250 
	#UCASE_DATA_NAME
 "uˇ£"

	)

251 
	#UCASE_DATA_TYPE
 "icu"

	)

254 
	#UCASE_FMT_0
 0x63

	)

255 
	#UCASE_FMT_1
 0x41

	)

256 
	#UCASE_FMT_2
 0x53

	)

257 
	#UCASE_FMT_3
 0x45

	)

261 
	mUCASE_IX_INDEX_TOP
,

262 
	mUCASE_IX_LENGTH
,

263 
	mUCASE_IX_TRIE_SIZE
,

264 
	mUCASE_IX_EXC_LENGTH
,

265 
	mUCASE_IX_UNFOLD_LENGTH
,

267 
	mUCASE_IX_MAX_FULL_LENGTH
=15,

268 
	mUCASE_IX_TOP
=16

274 
	#UCASE_TYPE_MASK
 3

	)

276 
	mUCASE_NONE
,

277 
	mUCASE_LOWER
,

278 
	mUCASE_UPPER
,

279 
	mUCASE_TITLE


282 
	#UCASE_GET_TYPE
(
¥›s
Ë(’r›s)&
UCASE_TYPE_MASK
)

	)

284 
	#UCASE_SENSITIVE
 4

	)

285 
	#UCASE_EXCEPTION
 8

	)

287 
	#UCASE_DOT_MASK
 0x30

	)

289 
	mUCASE_NO_DOT
=0,

290 
	mUCASE_SOFT_DOTTED
=0x10,

291 
	mUCASE_ABOVE
=0x20,

292 
	mUCASE_OTHER_ACCENT
=0x30

296 
	#UCASE_DELTA_SHIFT
 6

	)

297 
	#UCASE_DELTA_MASK
 0xffc0

	)

298 
	#UCASE_MAX_DELTA
 0x1ff

	)

299 
	#UCASE_MIN_DELTA
 (-
UCASE_MAX_DELTA
-1)

	)

301 
	#UCASE_GET_DELTA
(
¥›s
Ë((
öt16_t
)’r›s)>>
UCASE_DELTA_SHIFT
)

	)

304 
	#UCASE_CASE_IGNORABLE
 0x40

	)

307 
	#UCASE_EXC_SHIFT
 4

	)

308 
	#UCASE_EXC_MASK
 0xfff0

	)

309 
	#UCASE_MAX_EXCEPTIONS
 0x1000

	)

315 
	mUCASE_EXC_LOWER
,

316 
	mUCASE_EXC_FOLD
,

317 
	mUCASE_EXC_UPPER
,

318 
	mUCASE_EXC_TITLE
,

319 
	mUCASE_EXC_4
,

320 
	mUCASE_EXC_5
,

321 
	mUCASE_EXC_CLOSURE
,

322 
	mUCASE_EXC_FULL_MAPPINGS
,

323 
	mUCASE_EXC_ALL_SLOTS


327 
	#UCASE_EXC_DOUBLE_SLOTS
 0x100

	)

331 
	#UCASE_EXC_CASE_IGNORABLE
 0x800

	)

334 
	#UCASE_EXC_DOT_SHIFT
 8

	)

337 
	#UCASE_EXC_DOT_MASK
 0x3000

	)

339 
	mUCASE_EXC_NO_DOT
=0,

340 
	mUCASE_EXC_SOFT_DOTTED
=0x1000,

341 
	mUCASE_EXC_ABOVE
=0x2000,

342 
	mUCASE_EXC_OTHER_ACCENT
=0x3000

346 
	#UCASE_EXC_CONDITIONAL_SPECIAL
 0x4000

	)

347 
	#UCASE_EXC_CONDITIONAL_FOLD
 0x8000

	)

350 
	#UCASE_FULL_LOWER
 0xf

	)

351 
	#UCASE_FULL_FOLDING
 0xf0

	)

352 
	#UCASE_FULL_UPPER
 0xf00

	)

353 
	#UCASE_FULL_TITLE
 0xf000

	)

356 
	#UCASE_FULL_MAPPINGS_MAX_LENGTH
 (4*0xf)

	)

357 
	#UCASE_CLOSURE_MAX_LENGTH
 0xf

	)

361 
	mUCASE_UNFOLD_ROWS
,

362 
	mUCASE_UNFOLD_ROW_WIDTH
,

363 
	mUCASE_UNFOLD_STRING_WIDTH


366 
	gU_CDECL_END


	@ucase_props_data.c

10 c⁄° 
UVîsi⁄Info
 
	guˇ£_¥›s_d©aVîsi⁄
={6,0,0,0};

12 c⁄° 
öt32_t
 
	guˇ£_¥›s_ödexes
[
UCASE_IX_TOP
]={0x10,0x5654,0x4918,0x50c,0x172,0,0,0,0,0,0,0,0,0,0,3};

14 c⁄° 
uöt16_t
 
	guˇ£_¥›s_åõIndex
[9348]={

602 c⁄° 
uöt16_t
 
	guˇ£_¥›s_ex˚±i⁄s
[1292]={

686 c⁄° 
uöt16_t
 
	guˇ£_¥›s_unfﬁd
[370]={

713 c⁄° 
UCa£Pr›s
 
	guˇ£_¥›s_sögÀt⁄
={

714 
NULL
,

715 
uˇ£_¥›s_ödexes
,

716 
uˇ£_¥›s_ex˚±i⁄s
,

717 
uˇ£_¥›s_unfﬁd
,

719 
uˇ£_¥›s_åõIndex
,

720 
uˇ£_¥›s_åõIndex
+2824,

721 
NULL
,

730 
NULL
, 0, 
FALSE
, FALSE, 0, NULL

	@ucasemap.c

19 
	~"unicode/uty≥s.h
"

20 
	~"unicode/uloc.h
"

21 
	~"unicode/u°rög.h
"

22 
	~"unicode/uˇ£m≠.h
"

23 #i‡!
UCONFIG_NO_BREAK_ITERATION


24 
	~"unicode/ubrk.h
"

25 
	~"unicode/uãxt.h
"

27 
	~"cmem‹y.h
"

28 
	~"c°rög.h
"

29 
	~"uˇ£.h
"

30 
	~"u°r_imp.h
"

34 
U_CAPI
 
UCa£M≠
 * 
U_EXPORT2


35 
	$uˇ£m≠_›í
(c⁄° *
loˇÀ
, 
uöt32_t
 
›ti⁄s
, 
UEº‹Code
 *
pEº‹Code
) {

36 
UCa£M≠
 *
csm
;

38 if(
	`U_FAILURE
(*
pEº‹Code
)) {

39  
NULL
;

42 
csm
=(
UCa£M≠
 *)
	`u¥v_mÆloc
((UCaseMap));

43 if(
csm
==
NULL
) {

44  
NULL
;

46 
	`u¥v_mem£t
(
csm
, 0, (
UCa£M≠
));

48 
csm
->
c•
=
	`uˇ£_gëSögÀt⁄
();

49 
	`uˇ£m≠_£tLoˇÀ
(
csm
, 
loˇÀ
, 
pEº‹Code
);

50 if(
	`U_FAILURE
(*
pEº‹Code
)) {

51 
	`u¥v_‰ì
(
csm
);

52  
NULL
;

55 
csm
->
›ti⁄s
=options;

56  
csm
;

57 
	}
}

59 
U_CAPI
 
U_EXPORT2


60 
	$uˇ£m≠_˛o£
(
UCa£M≠
 *
csm
) {

61 if(
csm
!=
NULL
) {

62 #i‡!
UCONFIG_NO_BREAK_ITERATION


63 
	`ubrk_˛o£
(
csm
->
ôî
);

65 
	`u¥v_‰ì
(
csm
);

67 
	}
}

69 
U_CAPI
 c⁄° * 
U_EXPORT2


70 
	$uˇ£m≠_gëLoˇÀ
(c⁄° 
UCa£M≠
 *
csm
) {

71  
csm
->
loˇÀ
;

72 
	}
}

74 
U_CAPI
 
uöt32_t
 
U_EXPORT2


75 
	$uˇ£m≠_gëO±i⁄s
(c⁄° 
UCa£M≠
 *
csm
) {

76  
csm
->
›ti⁄s
;

77 
	}
}

79 
U_CAPI
 
U_EXPORT2


80 
	$uˇ£m≠_£tLoˇÀ
(
UCa£M≠
 *
csm
, c⁄° *
loˇÀ
, 
UEº‹Code
 *
pEº‹Code
) {

81 
öt32_t
 
Àngth
;

83 if(
	`U_FAILURE
(*
pEº‹Code
)) {

87 
Àngth
=
	`uloc_gëName
(
loˇÀ
, 
csm
->loˇÀ, (
öt32_t
)(csm->loˇÀ), 
pEº‹Code
);

88 if(*
pEº‹Code
==
U_BUFFER_OVERFLOW_ERROR
 || 
Àngth
==(
csm
->
loˇÀ
)) {

89 *
pEº‹Code
=
U_ZERO_ERROR
;

91 
Àngth
=
	`uloc_gëL™guage
(
loˇÀ
, 
csm
->loˇÀ, (
öt32_t
)(csm->loˇÀ), 
pEº‹Code
);

93 if(
Àngth
==(
csm
->
loˇÀ
)) {

94 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

96 
csm
->
locCache
=0;

97 if(
	`U_SUCCESS
(*
pEº‹Code
)) {

98 
	`uˇ£_gëCa£LoˇÀ
(
csm
->
loˇÀ
, &csm->
locCache
);

100 
csm
->
loˇÀ
[0]=0;

102 
	}
}

104 
U_CAPI
 
U_EXPORT2


105 
	$uˇ£m≠_£tO±i⁄s
(
UCa£M≠
 *
csm
, 
uöt32_t
 
›ti⁄s
, 
UEº‹Code
 *
pEº‹Code
) {

106 
csm
->
›ti⁄s
=options;

107 
	}
}

109 #i‡!
UCONFIG_NO_BREAK_ITERATION


111 
U_CAPI
 c⁄° 
UBªakIãøt‹
 * 
U_EXPORT2


112 
	$uˇ£m≠_gëBªakIãøt‹
(c⁄° 
UCa£M≠
 *
csm
) {

113  
csm
->
ôî
;

114 
	}
}

116 
U_CAPI
 
U_EXPORT2


117 
	$uˇ£m≠_£tBªakIãøt‹
(
UCa£M≠
 *
csm
, 
UBªakIãøt‹
 *
ôîToAd›t
, 
UEº‹Code
 *
pEº‹Code
) {

118 
	`ubrk_˛o£
(
csm
->
ôî
);

119 
csm
->
ôî
=
ôîToAd›t
;

120 
	}
}

129 
U_INLINE
 
öt32_t


130 
	$≠≥ndResu…
(
uöt8_t
 *
de°
, 
öt32_t
 
de°Index
, i¡32_à
de°C≠acôy
,

131 
öt32_t
 
ªsu…
, c⁄° 
UCh¨
 *
s
) {

132 
UCh¨32
 
c
;

133 
öt32_t
 
Àngth
, 
de°Lígth
;

134 
UEº‹Code
 
îr‹Code
;

137 if(
ªsu…
<0) {

139 
c
=~
ªsu…
;

140 
Àngth
=-1;

141 } if(
ªsu…
<=
UCASE_MAX_STRING_LENGTH
) {

142 
c
=
U_SENTINEL
;

143 
Àngth
=
ªsu…
;

145 
c
=
ªsu…
;

146 
Àngth
=-1;

149 if(
de°Index
<
de°C≠acôy
) {

151 if(
Àngth
<0) {

153 
UBoﬁ
 
isEº‹
=
FALSE
;

154 
	`U8_APPEND
(
de°
, 
de°Index
, 
de°C≠acôy
, 
c
, 
isEº‹
);

155 if(
isEº‹
) {

157 
de°Index
+=
	`U8_LENGTH
(
c
);

161 
îr‹Code
=
U_ZERO_ERROR
;

162 
	`u_°rToUTF8
(

163 (*)(
de°
+
de°Index
), 
de°C≠acôy
-de°Index, &
de°Lígth
,

164 
s
, 
Àngth
,

165 &
îr‹Code
);

166 
de°Index
+=
de°Lígth
;

171 if(
Àngth
<0) {

172 
de°Index
+=
	`U8_LENGTH
(
c
);

174 
îr‹Code
=
U_ZERO_ERROR
;

175 
	`u_°rToUTF8
(

176 
NULL
, 0, &
de°Lígth
,

177 
s
, 
Àngth
,

178 &
îr‹Code
);

179 
de°Index
+=
de°Lígth
;

182  
de°Index
;

183 
	}
}

185 
UCh¨32
 
U_CALLCONV


186 
	$utf8_ˇ£C⁄ãxtIãøt‹
(*
c⁄ãxt
, 
öt8_t
 
dú
) {

187 
UCa£C⁄ãxt
 *
csc
=(UCa£C⁄ãxà*)
c⁄ãxt
;

188 
UCh¨32
 
c
;

190 if(
dú
<0) {

192 
csc
->
ödex
=csc->
˝Sèπ
;

193 
csc
->
dú
=dir;

194 } if(
dú
>0) {

196 
csc
->
ödex
=csc->
˝Limô
;

197 
csc
->
dú
=dir;

200 
dú
=
csc
->dir;

203 if(
dú
<0) {

204 if(
csc
->
°¨t
<csc->
ödex
) {

205 
	`U8_PREV
((c⁄° 
uöt8_t
 *)
csc
->
p
, csc->
°¨t
, csc->
ödex
, 
c
);

206  
c
;

209 if(
csc
->
ödex
<csc->
limô
) {

210 
	`U8_NEXT
((c⁄° 
uöt8_t
 *)
csc
->
p
, csc->
ödex
, csc->
limô
, 
c
);

211  
c
;

214  
U_SENTINEL
;

215 
	}
}

221 
öt32_t


222 
	$_ˇ£M≠
(c⁄° 
UCa£M≠
 *
csm
, 
UCa£M≠FuŒ
 *
m≠
,

223 
uöt8_t
 *
de°
, 
öt32_t
 
de°C≠acôy
,

224 c⁄° 
uöt8_t
 *
§c
, 
UCa£C⁄ãxt
 *
csc
,

225 
öt32_t
 
§cSèπ
, i¡32_à
§cLimô
,

226 
UEº‹Code
 *
pEº‹Code
) {

227 c⁄° 
UCh¨
 *
s
;

228 
UCh¨32
 
c
, 
c2
 = 0;

229 
öt32_t
 
§cIndex
, 
de°Index
;

230 
öt32_t
 
locCache
;

232 
locCache
=
csm
->locCache;

235 
§cIndex
=
§cSèπ
;

236 
de°Index
=0;

237 
§cIndex
<
§cLimô
) {

238 
csc
->
˝Sèπ
=
§cIndex
;

239 
	`U8_NEXT
(
§c
, 
§cIndex
, 
§cLimô
, 
c
);

240 
csc
->
˝Limô
=
§cIndex
;

241 if(
c
<0) {

242 
öt32_t
 
i
=
csc
->
˝Sèπ
;

243 
de°Index
<
de°C≠acôy
 && 
i
<
§cIndex
) {

244 
de°
[
de°Index
++]=
§c
[
i
++];

248 
c
=
	`m≠
(
csm
->
c•
, c, 
utf8_ˇ£C⁄ãxtIãøt‹
, 
csc
, &
s
, csm->
loˇÀ
, &
locCache
);

249 if((
de°Index
<
de°C≠acôy
Ë&& (
c
<0 ? (
c2
=~c)<=0x7‡: 
UCASE_MAX_STRING_LENGTH
<c && (c2=c)<=0x7f)) {

251 
de°
[
de°Index
++]=(
uöt8_t
)
c2
;

253 
de°Index
=
	`≠≥ndResu…
(
de°
, de°Index, 
de°C≠acôy
, 
c
, 
s
);

257 if(
de°Index
>
de°C≠acôy
) {

258 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

260  
de°Index
;

261 
	}
}

263 #i‡!
UCONFIG_NO_BREAK_ITERATION


268 
öt32_t


269 
	$_toTôÀ
(
UCa£M≠
 *
csm
,

270 
uöt8_t
 *
de°
, 
öt32_t
 
de°C≠acôy
,

271 c⁄° 
uöt8_t
 *
§c
, 
UCa£C⁄ãxt
 *
csc
,

272 
öt32_t
 
§cLígth
,

273 
UEº‹Code
 *
pEº‹Code
) {

274 
UText
 
uãxt
=
UTEXT_INITIALIZER
;

275 c⁄° 
UCh¨
 *
s
;

276 
UCh¨32
 
c
;

277 
öt32_t
 
¥ev
, 
tôÀSèπ
, 
tôÀLimô
, 
idx
, 
de°Index
, 
Àngth
;

278 
UBoﬁ
 
isFú°Index
;

280 
	`uãxt_›íUTF8
(&
uãxt
, (c⁄° *)
§c
, 
§cLígth
, 
pEº‹Code
);

281 if(
	`U_FAILURE
(*
pEº‹Code
)) {

284 if(
csm
->
ôî
==
NULL
) {

285 
csm
->
ôî
=
	`ubrk_›í
(
UBRK_WORD
, csm->
loˇÀ
,

286 
NULL
, 0,

287 
pEº‹Code
);

289 
	`ubrk_£tUText
(
csm
->
ôî
, &
uãxt
, 
pEº‹Code
);

290 if(
	`U_FAILURE
(*
pEº‹Code
)) {

291 
	`uãxt_˛o£
(&
uãxt
);

296 
de°Index
=0;

297 
¥ev
=0;

298 
isFú°Index
=
TRUE
;

301 
¥ev
<
§cLígth
) {

303 if(
isFú°Index
) {

304 
isFú°Index
=
FALSE
;

305 
idx
=
	`ubrk_fú°
(
csm
->
ôî
);

307 
idx
=
	`ubrk_√xt
(
csm
->
ôî
);

309 if(
idx
==
UBRK_DONE
 || idx>
§cLígth
) {

310 
idx
=
§cLígth
;

326 if(
¥ev
<
idx
) {

328 
tôÀSèπ
=
tôÀLimô
=
¥ev
;

329 
	`U8_NEXT
(
§c
, 
tôÀLimô
, 
idx
, 
c
);

330 if((
csm
->
›ti⁄s
&
U_TITLECASE_NO_BREAK_ADJUSTMENT
)==0 && 
UCASE_NONE
==
	`uˇ£_gëTy≥
(csm->
c•
, 
c
)) {

333 
tôÀSèπ
=
tôÀLimô
;

334 if(
tôÀLimô
==
idx
) {

341 
	`U8_NEXT
(
§c
, 
tôÀLimô
, 
idx
, 
c
);

342 if(
UCASE_NONE
!=
	`uˇ£_gëTy≥
(
csm
->
c•
, 
c
)) {

346 
Àngth
=
tôÀSèπ
-
¥ev
;

347 if(
Àngth
>0) {

348 if((
de°Index
+
Àngth
)<=
de°C≠acôy
) {

349 
	`u¥v_mem˝y
(
de°
+
de°Index
, 
§c
+
¥ev
, 
Àngth
);

351 
de°Index
+=
Àngth
;

355 if(
tôÀSèπ
<
tôÀLimô
) {

357 
csc
->
˝Sèπ
=
tôÀSèπ
;

358 
csc
->
˝Limô
=
tôÀLimô
;

359 
c
=
	`uˇ£_toFuŒTôÀ
(
csm
->
c•
, c, 
utf8_ˇ£C⁄ãxtIãøt‹
, 
csc
, &
s
, csm->
loˇÀ
, &csm->
locCache
);

360 
de°Index
=
	`≠≥ndResu…
(
de°
, de°Index, 
de°C≠acôy
, 
c
, 
s
);

364 i‡–
tôÀSèπ
+1 < 
idx
 &&

365 
	`uˇ£_gëCa£LoˇÀ
(
csm
->
loˇÀ
,&csm->
locCache
Ë=
UCASE_LOC_DUTCH
 &&

366 –
§c
[
tôÀSèπ
] == 0x0049 || src[titleStart] == 0x0069 ) &&

367 –
§c
[
tôÀSèπ
+1] == 0x004A || src[titleStart+1] == 0x006A )) {

368 
c
=0x004A;

369 
de°Index
=
	`≠≥ndResu…
(
de°
, de°Index, 
de°C≠acôy
, 
c
, 
s
);

370 
tôÀLimô
++;

373 if(
tôÀLimô
<
idx
) {

374 if((
csm
->
›ti⁄s
&
U_TITLECASE_NO_LOWERCASE
)==0) {

376 
de°Index
+=

377 
	`_ˇ£M≠
(

378 
csm
, 
uˇ£_toFuŒLowî
,

379 
de°
+
de°Index
, 
de°C≠acôy
-destIndex,

380 
§c
, 
csc
,

381 
tôÀLimô
, 
idx
,

382 
pEº‹Code
);

385 
Àngth
=
idx
-
tôÀLimô
;

386 if((
de°Index
+
Àngth
)<=
de°C≠acôy
) {

387 
	`u¥v_mem˝y
(
de°
+
de°Index
, 
§c
+
tôÀLimô
, 
Àngth
);

389 
de°Index
+=
Àngth
;

395 
¥ev
=
idx
;

398 if(
de°Index
>
de°C≠acôy
) {

399 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

401 
	`uãxt_˛o£
(&
uãxt
);

402  
de°Index
;

403 
	}
}

407 
öt32_t


408 
	$utf8_fﬁdCa£
(c⁄° 
UCa£Pr›s
 *
c•
,

409 
uöt8_t
 *
de°
, 
öt32_t
 
de°C≠acôy
,

410 c⁄° 
uöt8_t
 *
§c
, 
öt32_t
 
§cLígth
,

411 
uöt32_t
 
›ti⁄s
,

412 
UEº‹Code
 *
pEº‹Code
) {

413 
öt32_t
 
§cIndex
, 
de°Index
;

415 c⁄° 
UCh¨
 *
s
;

416 
UCh¨32
 
c
, 
c2
;

417 
öt32_t
 
°¨t
;

420 
§cIndex
=
de°Index
=0;

421 
§cIndex
<
§cLígth
) {

422 
°¨t
=
§cIndex
;

423 
	`U8_NEXT
(
§c
, 
§cIndex
, 
§cLígth
, 
c
);

424 if(
c
<0) {

425 
de°Index
<
de°C≠acôy
 && 
°¨t
<
§cIndex
) {

426 
de°
[
de°Index
++]=
§c
[
°¨t
++];

430 
c
=
	`uˇ£_toFuŒFﬁdög
(
c•
, c, &
s
, 
›ti⁄s
);

431 if((
de°Index
<
de°C≠acôy
Ë&& (
c
<0 ? (
c2
=~c)<=0x7‡: 
UCASE_MAX_STRING_LENGTH
<c && (c2=c)<=0x7f)) {

433 
de°
[
de°Index
++]=(
uöt8_t
)
c2
;

435 
de°Index
=
	`≠≥ndResu…
(
de°
, de°Index, 
de°C≠acôy
, 
c
, 
s
);

439 if(
de°Index
>
de°C≠acôy
) {

440 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

442  
de°Index
;

443 
	}
}

452 
öt32_t


453 
	$ˇ£M≠
(c⁄° 
UCa£M≠
 *
csm
,

454 
uöt8_t
 *
de°
, 
öt32_t
 
de°C≠acôy
,

455 c⁄° 
uöt8_t
 *
§c
, 
öt32_t
 
§cLígth
,

456 
öt32_t
 
toWhichCa£
,

457 
UEº‹Code
 *
pEº‹Code
) {

458 
öt32_t
 
de°Lígth
;

461 if(
	`U_FAILURE
(*
pEº‹Code
)) {

464 if–
de°C≠acôy
<0 ||

465 (
de°
==
NULL
 && 
de°C≠acôy
>0) ||

466 
§c
==
NULL
 ||

467 
§cLígth
<-1

469 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

474 if(
§cLígth
==-1) {

475 
§cLígth
=(
öt32_t
)
	`u¥v_°æí
((c⁄° *)
§c
);

479 if–
de°
!=
NULL
 &&

480 ((
§c
>=
de°
 && src<(de°+
de°C≠acôy
)) ||

481 (
de°
>=
§c
 && de°<(§c+
§cLígth
)))

483 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

487 
de°Lígth
=0;

489 if(
toWhichCa£
==
FOLD_CASE
) {

490 
de°Lígth
=
	`utf8_fﬁdCa£
(
csm
->
c•
, 
de°
, 
de°C≠acôy
, 
§c
, 
§cLígth
,

491 
csm
->
›ti⁄s
, 
pEº‹Code
);

493 
UCa£C⁄ãxt
 
csc
={ 
NULL
 };

495 
csc
.
p
=(*)
§c
;

496 
csc
.
limô
=
§cLígth
;

498 if(
toWhichCa£
==
TO_LOWER
) {

499 
de°Lígth
=
	`_ˇ£M≠
(
csm
, 
uˇ£_toFuŒLowî
,

500 
de°
, 
de°C≠acôy
,

501 
§c
, &
csc
,

502 0, 
§cLígth
,

503 
pEº‹Code
);

504 } if(
toWhichCa£
==
TO_UPPER
) {

505 
de°Lígth
=
	`_ˇ£M≠
(
csm
, 
uˇ£_toFuŒUµî
,

506 
de°
, 
de°C≠acôy
,

507 
§c
, &
csc
,

508 0, 
§cLígth
,

509 
pEº‹Code
);

511 #i‡
UCONFIG_NO_BREAK_ITERATION


512 *
pEº‹Code
=
U_UNSUPPORTED_ERROR
;

515 
UCa£M≠
 *
tmp
 = (UCa£M≠ *)
csm
;

516 
de°Lígth
=
	`_toTôÀ
(
tmp
, 
de°
, 
de°C≠acôy
,

517 
§c
, &
csc
, 
§cLígth
,

518 
pEº‹Code
);

523  
	`u_ãrmö©eCh¨s
((*)
de°
, 
de°C≠acôy
, 
de°Lígth
, 
pEº‹Code
);

524 
	}
}

528 
U_CAPI
 
öt32_t
 
U_EXPORT2


529 
	$uˇ£m≠_utf8ToLowî
(c⁄° 
UCa£M≠
 *
csm
,

530 *
de°
, 
öt32_t
 
de°C≠acôy
,

531 c⁄° *
§c
, 
öt32_t
 
§cLígth
,

532 
UEº‹Code
 *
pEº‹Code
) {

533  
	`ˇ£M≠
(
csm
,

534 (
uöt8_t
 *)
de°
, 
de°C≠acôy
,

535 (c⁄° 
uöt8_t
 *)
§c
, 
§cLígth
,

536 
TO_LOWER
, 
pEº‹Code
);

537 
	}
}

539 
U_CAPI
 
öt32_t
 
U_EXPORT2


540 
	$uˇ£m≠_utf8ToUµî
(c⁄° 
UCa£M≠
 *
csm
,

541 *
de°
, 
öt32_t
 
de°C≠acôy
,

542 c⁄° *
§c
, 
öt32_t
 
§cLígth
,

543 
UEº‹Code
 *
pEº‹Code
) {

544  
	`ˇ£M≠
(
csm
,

545 (
uöt8_t
 *)
de°
, 
de°C≠acôy
,

546 (c⁄° 
uöt8_t
 *)
§c
, 
§cLígth
,

547 
TO_UPPER
, 
pEº‹Code
);

548 
	}
}

550 #i‡!
UCONFIG_NO_BREAK_ITERATION


552 
U_CAPI
 
öt32_t
 
U_EXPORT2


553 
	$uˇ£m≠_utf8ToTôÀ
(
UCa£M≠
 *
csm
,

554 *
de°
, 
öt32_t
 
de°C≠acôy
,

555 c⁄° *
§c
, 
öt32_t
 
§cLígth
,

556 
UEº‹Code
 *
pEº‹Code
) {

557  
	`ˇ£M≠
(
csm
,

558 (
uöt8_t
 *)
de°
, 
de°C≠acôy
,

559 (c⁄° 
uöt8_t
 *)
§c
, 
§cLígth
,

560 
TO_TITLE
, 
pEº‹Code
);

561 
	}
}

565 
U_CAPI
 
öt32_t
 
U_EXPORT2


566 
	$uˇ£m≠_utf8FﬁdCa£
(c⁄° 
UCa£M≠
 *
csm
,

567 *
de°
, 
öt32_t
 
de°C≠acôy
,

568 c⁄° *
§c
, 
öt32_t
 
§cLígth
,

569 
UEº‹Code
 *
pEº‹Code
) {

570  
	`ˇ£M≠
(
csm
,

571 (
uöt8_t
 *)
de°
, 
de°C≠acôy
,

572 (c⁄° 
uöt8_t
 *)
§c
, 
§cLígth
,

573 
FOLD_CASE
, 
pEº‹Code
);

574 
	}
}

	@ucat.c

11 
	~"unicode/uˇt.h
"

12 
	~"unicode/u°rög.h
"

13 
	~"c°rög.h
"

14 
	~"uas£π.h
"

17 c⁄° 
	gSEPARATOR
 = '%';

21 
	#MAX_KEY_LEN
 (24)

	)

29 
	$_ˇtkey
(* 
buf„r
, 
öt32_t
 
£t_num
, i¡32_à
msg_num
) {

30 
öt32_t
 
i
 = 0;

31 
i
 = 
	`T_CSåög_öãgîToSåög
(
buf„r
, 
£t_num
, 10);

32 
buf„r
[
i
++] = 
SEPARATOR
;

33 
	`T_CSåög_öãgîToSåög
(
buf„r
+
i
, 
msg_num
, 10);

34  
buf„r
;

35 
	}
}

37 
U_CAPI
 
u_∆_ˇtd
 
U_EXPORT2


38 
	$u_ˇt›í
(c⁄° * 
«me
, c⁄° * 
loˇÀ
, 
UEº‹Code
* 
ec
) {

39  (
u_∆_ˇtd
Ë
	`uªs_›í
(
«me
, 
loˇÀ
, 
ec
);

40 
	}
}

42 
U_CAPI
 
U_EXPORT2


43 
	$u_ˇt˛o£
(
u_∆_ˇtd
 
ˇtd
) {

44 
	`uªs_˛o£
((
UResour˚BundÀ
*Ë
ˇtd
);

45 
	}
}

47 
U_CAPI
 c⁄° 
UCh¨
* 
U_EXPORT2


48 
	$u_ˇtgës
(
u_∆_ˇtd
 
ˇtd
, 
öt32_t
 
£t_num
, i¡32_à
msg_num
,

49 c⁄° 
UCh¨
* 
s
,

50 
öt32_t
* 
Àn
, 
UEº‹Code
* 
ec
) {

52 
key
[
MAX_KEY_LEN
];

53 c⁄° 
UCh¨
* 
ªsu…
;

55 i‡(
ec
 =
NULL
 || 
	`U_FAILURE
(*ec)) {

56 
ERROR
;

59 
ªsu…
 = 
	`uªs_gëSåögByKey
((c⁄° 
UResour˚BundÀ
*Ë
ˇtd
,

60 
	`_ˇtkey
(
key
, 
£t_num
, 
msg_num
),

61 
Àn
, 
ec
);

62 i‡(
	`U_FAILURE
(*
ec
)) {

63 
ERROR
;

66  
ªsu…
;

68 
ERROR
:

70 i‡(
Àn
 !
NULL
) {

71 *
Àn
 = 
	`u_°æí
(
s
);

73  
s
;

74 
	}
}

	@uchar.c

22 
	~"unicode/uty≥s.h
"

23 
	~"unicode/uch¨.h
"

24 
	~"unicode/us¸ùt.h
"

25 
	~"unicode/ud©a.h
"

26 
	~"umuãx.h
"

27 
	~"cmem‹y.h
"

28 
	~"u˛n_cmn.h
"

29 
	~"uåõ2.h
"

30 
	~"ud©aswp.h
"

31 
	~"u¥›s.h
"

32 
	~"u°r_imp.h
"

34 
	#LENGTHOF
(
¨øy
Ë(
öt32_t
)(◊ºay)/(◊ºay)[0]))

	)

37 
	~"uch¨_¥›s_d©a.c
"

42 
	#GET_PROPS
(
c
, 
ªsu…
Ë(‘esu…)=
	`UTRIE2_GET16
(&
¥›sTrõ
, c));

	)

44 
U_CFUNC
 
UBoﬁ


45 
	$u¥v_havePr›îtõs
(
UEº‹Code
 *
pEº‹Code
) {

46 if(
	`U_FAILURE
(*
pEº‹Code
)) {

47  
FALSE
;

49  
TRUE
;

50 
	}
}

55 
U_CAPI
 
öt8_t
 
U_EXPORT2


56 
	$u_ch¨Ty≥
(
UCh¨32
 
c
) {

57 
uöt32_t
 
¥›s
;

58 
	`GET_PROPS
(
c
, 
¥›s
);

59  (
öt8_t
)
	`GET_CATEGORY
(
¥›s
);

60 
	}
}

63 
	s_EnumTy≥CÆlback
 {

64 
UCh¨EnumTy≥R™ge
 *
	míumR™ge
;

65 c⁄° *
	mc⁄ãxt
;

68 
uöt32_t
 
U_CALLCONV


69 
	$_íumTy≥VÆue
(c⁄° *
c⁄ãxt
, 
uöt32_t
 
vÆue
) {

70  
	`GET_CATEGORY
(
vÆue
);

71 
	}
}

73 
UBoﬁ
 
U_CALLCONV


74 
	$_íumTy≥R™ge
(c⁄° *
c⁄ãxt
, 
UCh¨32
 
°¨t
, UCh¨32 
íd
, 
uöt32_t
 
vÆue
) {

76  ((
_EnumTy≥CÆlback
 *)
c⁄ãxt
)->

77 
	`íumR™ge
(((
_EnumTy≥CÆlback
 *)
c⁄ãxt
)->context,

78 
°¨t
, 
íd
+1, (
UCh¨C©eg‹y
)
vÆue
);

79 
	}
}

81 
U_CAPI
 
U_EXPORT2


82 
	$u_íumCh¨Ty≥s
(
UCh¨EnumTy≥R™ge
 *
íumR™ge
, c⁄° *
c⁄ãxt
) {

83 
_EnumTy≥CÆlback
 
ˇŒback
;

85 if(
íumR™ge
==
NULL
) {

89 
ˇŒback
.
íumR™ge
=enumRange;

90 
ˇŒback
.
c⁄ãxt
=context;

91 
	`uåõ2_íum
(&
¥›sTrõ
, 
_íumTy≥VÆue
, 
_íumTy≥R™ge
, &
ˇŒback
);

92 
	}
}

95 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


96 
	$u_i¶owî
(
UCh¨32
 
c
) {

97 
uöt32_t
 
¥›s
;

98 
	`GET_PROPS
(
c
, 
¥›s
);

99  (
UBoﬁ
)(
	`GET_CATEGORY
(
¥›s
)==
U_LOWERCASE_LETTER
);

100 
	}
}

103 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


104 
	$u_isuµî
(
UCh¨32
 
c
) {

105 
uöt32_t
 
¥›s
;

106 
	`GET_PROPS
(
c
, 
¥›s
);

107  (
UBoﬁ
)(
	`GET_CATEGORY
(
¥›s
)==
U_UPPERCASE_LETTER
);

108 
	}
}

111 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


112 
	$u_i°ôÀ
(
UCh¨32
 
c
) {

113 
uöt32_t
 
¥›s
;

114 
	`GET_PROPS
(
c
, 
¥›s
);

115  (
UBoﬁ
)(
	`GET_CATEGORY
(
¥›s
)==
U_TITLECASE_LETTER
);

116 
	}
}

119 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


120 
	$u_isdigô
(
UCh¨32
 
c
) {

121 
uöt32_t
 
¥›s
;

122 
	`GET_PROPS
(
c
, 
¥›s
);

123  (
UBoﬁ
)(
	`GET_CATEGORY
(
¥›s
)==
U_DECIMAL_DIGIT_NUMBER
);

124 
	}
}

126 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


127 
	$u_isxdigô
(
UCh¨32
 
c
) {

128 
uöt32_t
 
¥›s
;

132 (
c
<=0x66 && c>=0x41 && (c<=0x46 || c>=0x61)) ||

133 (
c
>=0xff21 && c<=0xff46 && (c<=0xff26 || c>=0xff41))

135  
TRUE
;

138 
	`GET_PROPS
(
c
, 
¥›s
);

139  (
UBoﬁ
)(
	`GET_CATEGORY
(
¥›s
)==
U_DECIMAL_DIGIT_NUMBER
);

140 
	}
}

143 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


144 
	$u_ißÕha
(
UCh¨32
 
c
) {

145 
uöt32_t
 
¥›s
;

146 
	`GET_PROPS
(
c
, 
¥›s
);

147  (
UBoﬁ
)((
	`CAT_MASK
(
¥›s
)&
U_GC_L_MASK
)!=0);

148 
	}
}

150 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


151 
	$u_isUAÕhabëic
(
UCh¨32
 
c
) {

152  (
	`u_gëUnicodePr›îtõs
(
c
, 1)&
	`U_MASK
(
UPROPS_ALPHABETIC
))!=0;

153 
	}
}

156 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


157 
	$u_iß um
(
UCh¨32
 
c
) {

158 
uöt32_t
 
¥›s
;

159 
	`GET_PROPS
(
c
, 
¥›s
);

160  (
UBoﬁ
)((
	`CAT_MASK
(
¥›s
)&(
U_GC_L_MASK
|
U_GC_ND_MASK
))!=0);

161 
	}
}

167 
U_CFUNC
 
UBoﬁ


168 
	$u_iß umPOSIX
(
UCh¨32
 
c
) {

169  (
UBoﬁ
)(
	`u_isUAÕhabëic
(
c
Ë|| 
	`u_isdigô
(c));

170 
	}
}

173 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


174 
	$u_isdeföed
(
UCh¨32
 
c
) {

175 
uöt32_t
 
¥›s
;

176 
	`GET_PROPS
(
c
, 
¥›s
);

177  (
UBoﬁ
)(
	`GET_CATEGORY
(
¥›s
)!=0);

178 
	}
}

181 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


182 
	$u_isba£
(
UCh¨32
 
c
) {

183 
uöt32_t
 
¥›s
;

184 
	`GET_PROPS
(
c
, 
¥›s
);

185  (
UBoﬁ
)((
	`CAT_MASK
(
¥›s
)&(
U_GC_L_MASK
|
U_GC_N_MASK
|
U_GC_MC_MASK
|
U_GC_ME_MASK
))!=0);

186 
	}
}

189 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


190 
	$u_is˙ål
(
UCh¨32
 
c
) {

191 
uöt32_t
 
¥›s
;

192 
	`GET_PROPS
(
c
, 
¥›s
);

193  (
UBoﬁ
)((
	`CAT_MASK
(
¥›s
)&(
U_GC_CC_MASK
|
U_GC_CF_MASK
|
U_GC_ZL_MASK
|
U_GC_ZP_MASK
))!=0);

194 
	}
}

196 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


197 
	$u_isISOC⁄åﬁ
(
UCh¨32
 
c
) {

198  (
uöt32_t
)
c
<=0x9f && (c<=0x1f || c>=0x7f);

199 
	}
}

202 
	#IS_THAT_CONTROL_SPACE
(
c
) \

203 (
c
<=0x9‡&& ((c>=
TAB
 && c<=
CR
Ë|| (c>=0x1¯&& c <=0x1fË|| c==
NL
))

	)

206 
	#IS_THAT_ASCII_CONTROL_SPACE
(
c
) \

207 (
c
<=0x1‡&& c>=
TAB
 && (c<=
CR
 || c>=0x1c))

	)

210 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


211 
	$u_is•a˚
(
UCh¨32
 
c
) {

212 
uöt32_t
 
¥›s
;

213 
	`GET_PROPS
(
c
, 
¥›s
);

214  (
UBoﬁ
)((
	`CAT_MASK
(
¥›s
)&
U_GC_Z_MASK
)!=0 || 
	`IS_THAT_CONTROL_SPACE
(
c
));

215 
	}
}

217 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


218 
	$u_isJavaS∑˚Ch¨
(
UCh¨32
 
c
) {

219 
uöt32_t
 
¥›s
;

220 
	`GET_PROPS
(
c
, 
¥›s
);

221  (
UBoﬁ
)((
	`CAT_MASK
(
¥›s
)&
U_GC_Z_MASK
)!=0);

222 
	}
}

225 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


226 
	$u_isWhôe•a˚
(
UCh¨32
 
c
) {

227 
uöt32_t
 
¥›s
;

228 
	`GET_PROPS
(
c
, 
¥›s
);

229  (
UBoﬁ
)(

230 ((
	`CAT_MASK
(
¥›s
)&
U_GC_Z_MASK
)!=0 &&

231 
c
!=
NBSP
 && c!=
FIGURESP
 && c!=
NNBSP
) ||

232 
	`IS_THAT_ASCII_CONTROL_SPACE
(
c
)

234 
	}
}

236 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


237 
	$u_isbœnk
(
UCh¨32
 
c
) {

238 if((
uöt32_t
)
c
<=0x9f) {

239  
c
==9 || c==0x20;

242 
uöt32_t
 
¥›s
;

243 
	`GET_PROPS
(
c
, 
¥›s
);

244  (
UBoﬁ
)(
	`GET_CATEGORY
(
¥›s
)==
U_SPACE_SEPARATOR
);

246 
	}
}

248 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


249 
	$u_isUWhôeS∑˚
(
UCh¨32
 
c
) {

250  (
	`u_gëUnicodePr›îtõs
(
c
, 1)&
	`U_MASK
(
UPROPS_WHITE_SPACE
))!=0;

251 
	}
}

254 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


255 
	$u_i•röt
(
UCh¨32
 
c
) {

256 
uöt32_t
 
¥›s
;

257 
	`GET_PROPS
(
c
, 
¥›s
);

259  (
UBoﬁ
)((
	`CAT_MASK
(
¥›s
)&
U_GC_C_MASK
)==0);

260 
	}
}

267 
U_CFUNC
 
UBoﬁ


268 
	$u_i•rötPOSIX
(
UCh¨32
 
c
) {

269 
uöt32_t
 
¥›s
;

270 
	`GET_PROPS
(
c
, 
¥›s
);

275  (
UBoﬁ
)((
	`GET_CATEGORY
(
¥›s
)==
U_SPACE_SEPARATOR
Ë|| 
	`u_isgøphPOSIX
(
c
));

276 
	}
}

278 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


279 
	$u_isgøph
(
UCh¨32
 
c
) {

280 
uöt32_t
 
¥›s
;

281 
	`GET_PROPS
(
c
, 
¥›s
);

283  (
UBoﬁ
)((
	`CAT_MASK
(
¥›s
)&

284 (
U_GC_CC_MASK
|
U_GC_CF_MASK
|
U_GC_CS_MASK
|
U_GC_CN_MASK
|
U_GC_Z_MASK
))

286 
	}
}

295 
U_CFUNC
 
UBoﬁ


296 
	$u_isgøphPOSIX
(
UCh¨32
 
c
) {

297 
uöt32_t
 
¥›s
;

298 
	`GET_PROPS
(
c
, 
¥›s
);

301  (
UBoﬁ
)((
	`CAT_MASK
(
¥›s
)&

302 (
U_GC_CC_MASK
|
U_GC_CS_MASK
|
U_GC_CN_MASK
|
U_GC_Z_MASK
))

304 
	}
}

306 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


307 
	$u_i•un˘
(
UCh¨32
 
c
) {

308 
uöt32_t
 
¥›s
;

309 
	`GET_PROPS
(
c
, 
¥›s
);

310  (
UBoﬁ
)((
	`CAT_MASK
(
¥›s
)&
U_GC_P_MASK
)!=0);

311 
	}
}

314 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


315 
	$u_isIDSèπ
(
UCh¨32
 
c
) {

317 
uöt32_t
 
¥›s
;

318 
	`GET_PROPS
(
c
, 
¥›s
);

319  (
UBoﬁ
)((
	`CAT_MASK
(
¥›s
)&(
U_GC_L_MASK
|
U_GC_NL_MASK
))!=0);

320 
	}
}

324 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


325 
	$u_isIDP¨t
(
UCh¨32
 
c
) {

326 
uöt32_t
 
¥›s
;

327 
	`GET_PROPS
(
c
, 
¥›s
);

328  (
UBoﬁ
)(

329 (
	`CAT_MASK
(
¥›s
)&

330 (
U_GC_ND_MASK
|
U_GC_NL_MASK
|

331 
U_GC_L_MASK
|

332 
U_GC_PC_MASK
|
U_GC_MC_MASK
|
U_GC_MN_MASK
)

334 
	`u_isIDIgn‹abÀ
(
c
));

335 
	}
}

338 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


339 
	$u_isIDIgn‹abÀ
(
UCh¨32
 
c
) {

340 if(
c
<=0x9f) {

341  
	`u_isISOC⁄åﬁ
(
c
Ë&& !
	`IS_THAT_ASCII_CONTROL_SPACE
(c);

343 
uöt32_t
 
¥›s
;

344 
	`GET_PROPS
(
c
, 
¥›s
);

345  (
UBoﬁ
)(
	`GET_CATEGORY
(
¥›s
)==
U_FORMAT_CHAR
);

347 
	}
}

350 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


351 
	$u_isJavaIDSèπ
(
UCh¨32
 
c
) {

352 
uöt32_t
 
¥›s
;

353 
	`GET_PROPS
(
c
, 
¥›s
);

354  (
UBoﬁ
)((
	`CAT_MASK
(
¥›s
)&(
U_GC_L_MASK
|
U_GC_SC_MASK
|
U_GC_PC_MASK
))!=0);

355 
	}
}

360 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


361 
	$u_isJavaIDP¨t
(
UCh¨32
 
c
) {

362 
uöt32_t
 
¥›s
;

363 
	`GET_PROPS
(
c
, 
¥›s
);

364  (
UBoﬁ
)(

365 (
	`CAT_MASK
(
¥›s
)&

366 (
U_GC_ND_MASK
|
U_GC_NL_MASK
|

367 
U_GC_L_MASK
|

368 
U_GC_SC_MASK
|
U_GC_PC_MASK
|

369 
U_GC_MC_MASK
|
U_GC_MN_MASK
)

371 
	`u_isIDIgn‹abÀ
(
c
));

372 
	}
}

374 
U_CAPI
 
öt32_t
 
U_EXPORT2


375 
	$u_ch¨DigôVÆue
(
UCh¨32
 
c
) {

376 
uöt32_t
 
¥›s
;

377 
öt32_t
 
vÆue
;

378 
	`GET_PROPS
(
c
, 
¥›s
);

379 
vÆue
=(
öt32_t
)
	`GET_NUMERIC_TYPE_VALUE
(
¥›s
)-
UPROPS_NTV_DECIMAL_START
;

380 if(
vÆue
<=9) {

381  
vÆue
;

385 
	}
}

387 
U_CAPI
 
U_EXPORT2


388 
	$u_gëNumîicVÆue
(
UCh¨32
 
c
) {

389 
uöt32_t
 
¥›s
;

390 
öt32_t
 
¡v
;

391 
	`GET_PROPS
(
c
, 
¥›s
);

392 
¡v
=(
öt32_t
)
	`GET_NUMERIC_TYPE_VALUE
(
¥›s
);

394 if(
¡v
==
UPROPS_NTV_NONE
) {

395  
U_NO_NUMERIC_VALUE
;

396 } if(
¡v
<
UPROPS_NTV_DIGIT_START
) {

398  
¡v
-
UPROPS_NTV_DECIMAL_START
;

399 } if(
¡v
<
UPROPS_NTV_NUMERIC_START
) {

401  
¡v
-
UPROPS_NTV_DIGIT_START
;

402 } if(
¡v
<
UPROPS_NTV_FRACTION_START
) {

404  
¡v
-
UPROPS_NTV_NUMERIC_START
;

405 } if(
¡v
<
UPROPS_NTV_LARGE_START
) {

407 
öt32_t
 
numî©‹
=(
¡v
>>4)-12;

408 
öt32_t
 
díomö©‹
=(
¡v
&0xf)+1;

409  ()
numî©‹
/
díomö©‹
;

410 } if(
¡v
<
UPROPS_NTV_RESERVED_START
) {

412 
numVÆue
;

413 
öt32_t
 
m™t
=(
¡v
>>5)-14;

414 
öt32_t
 
exp
=(
¡v
&0x1f)+2;

415 
numVÆue
=
m™t
;

418 
exp
>=4) {

419 
numVÆue
*=10000.;

420 
exp
-=4;

422 
exp
) {

424 
numVÆue
*=1000.;

427 
numVÆue
*=100.;

430 
numVÆue
*=10.;

437  
numVÆue
;

440  
U_NO_NUMERIC_VALUE
;

442 
	}
}

444 
U_CAPI
 
öt32_t
 
U_EXPORT2


445 
	$u_digô
(
UCh¨32
 
ch
, 
öt8_t
 
ødix
) {

446 
öt8_t
 
vÆue
;

447 if((
uöt8_t
)(
ødix
-2)<=(36-2)) {

448 
vÆue
=(
öt8_t
)
	`u_ch¨DigôVÆue
(
ch
);

449 if(
vÆue
<0) {

451 if(
ch
>=0x61 && ch<=0x7A) {

452 
vÆue
=(
öt8_t
)(
ch
-0x57);

453 } if(
ch
>=0x41 && ch<=0x5A) {

454 
vÆue
=(
öt8_t
)(
ch
-0x37);

455 } if(
ch
>=0xFF41 && ch<=0xFF5A) {

456 
vÆue
=(
öt8_t
)(
ch
-0xFF37);

457 } if(
ch
>=0xFF21 && ch<=0xFF3A) {

458 
vÆue
=(
öt8_t
)(
ch
-0xFF17);

462 
vÆue
=-1;

464  (
öt8_t
)((
vÆue
<
ødix
) ? value : -1);

465 
	}
}

467 
U_CAPI
 
UCh¨32
 
U_EXPORT2


468 
	$u_f‹Digô
(
öt32_t
 
digô
, 
öt8_t
 
ødix
) {

469 if((
uöt8_t
)(
ødix
-2)>(36-2Ë|| (
uöt32_t
)
digô
>=(uint32_t)radix) {

471 } if(
digô
<10) {

472  (
UCh¨32
)(0x30+
digô
);

474  (
UCh¨32
)((0x61-10)+
digô
);

476 
	}
}

480 
U_CAPI
 
U_EXPORT2


481 
	$u_gëUnicodeVîsi⁄
(
UVîsi⁄Info
 
vîsi⁄Aºay
) {

482 if(
vîsi⁄Aºay
!=
NULL
) {

483 
	`u¥v_mem˝y
(
vîsi⁄Aºay
, 
d©aVîsi⁄
, 
U_MAX_VERSION_LENGTH
);

485 
	}
}

487 
U_CFUNC
 
uöt32_t


488 
	$u_gëUnicodePr›îtõs
(
UCh¨32
 
c
, 
öt32_t
 
cﬁumn
) {

489 
uöt16_t
 
vecIndex
;

491 if(
cﬁumn
==-1) {

492 
uöt32_t
 
¥›s
;

493 
	`GET_PROPS
(
c
, 
¥›s
);

494  
¥›s
;

496 
cﬁumn
<0 || cﬁumn>=
¥›sVe˘‹sCﬁumns


500 
vecIndex
=
	`UTRIE2_GET16
(&
¥›sVe˘‹sTrõ
, 
c
);

501  
¥›sVe˘‹s
[
vecIndex
+
cﬁumn
];

503 
	}
}

505 
U_CFUNC
 
öt32_t


506 
	$u¥v_gëMaxVÆues
(
öt32_t
 
cﬁumn
) {

507 
cﬁumn
) {

509  
ödexes
[
UPROPS_MAX_VALUES_INDEX
];

511  
ödexes
[
UPROPS_MAX_VALUES_2_INDEX
];

515 
	}
}

517 
U_CAPI
 
U_EXPORT2


518 
	$u_ch¨Age
(
UCh¨32
 
c
, 
UVîsi⁄Info
 
vîsi⁄Aºay
) {

519 if(
vîsi⁄Aºay
!=
NULL
) {

520 
uöt32_t
 
vîsi⁄
=
	`u_gëUnicodePr›îtõs
(
c
, 0)>>
UPROPS_AGE_SHIFT
;

521 
vîsi⁄Aºay
[0]=(
uöt8_t
)(
vîsi⁄
>>4);

522 
vîsi⁄Aºay
[1]=(
uöt8_t
)(
vîsi⁄
&0xf);

523 
vîsi⁄Aºay
[2]=versionArray[3]=0;

525 
	}
}

527 
U_CAPI
 
US¸ùtCode
 
U_EXPORT2


528 
	$us¸ùt_gëS¸ùt
(
UCh¨32
 
c
, 
UEº‹Code
 *
pEº‹Code
) {

529 
uöt32_t
 
s¸ùtX
;

530 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

531  
USCRIPT_INVALID_CODE
;

533 if((
uöt32_t
)
c
>0x10ffff) {

534 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

535  
USCRIPT_INVALID_CODE
;

537 
s¸ùtX
=
	`u_gëUnicodePr›îtõs
(
c
, 0)&
UPROPS_SCRIPT_X_MASK
;

538 if(
s¸ùtX
<
UPROPS_SCRIPT_X_WITH_COMMON
) {

539  (
US¸ùtCode
)
s¸ùtX
;

540 } if(
s¸ùtX
<
UPROPS_SCRIPT_X_WITH_INHERITED
) {

541  
USCRIPT_COMMON
;

542 } if(
s¸ùtX
<
UPROPS_SCRIPT_X_WITH_OTHER
) {

543  
USCRIPT_INHERITED
;

545  (
US¸ùtCode
)
s¸ùtExãnsi⁄s
[
s¸ùtX
&
UPROPS_SCRIPT_MASK
];

547 
	}
}

549 
U_DRAFT
 
UBoﬁ
 
U_EXPORT2


550 
	$us¸ùt_hasS¸ùt
(
UCh¨32
 
c
, 
US¸ùtCode
 
sc
) {

551 
US¸ùtCode
 
s¸ùt
;

552 c⁄° 
uöt16_t
 *
scx
;

553 
uöt32_t
 
s¸ùtX
=
	`u_gëUnicodePr›îtõs
(
c
, 0)&
UPROPS_SCRIPT_X_MASK
;

554 if(
s¸ùtX
<
UPROPS_SCRIPT_X_WITH_COMMON
) {

555  
sc
==(
US¸ùtCode
)
s¸ùtX
;

558 
scx
=
s¸ùtExãnsi⁄s
+(
s¸ùtX
&
UPROPS_SCRIPT_MASK
);

559 if(
s¸ùtX
<
UPROPS_SCRIPT_X_WITH_INHERITED
) {

560 
s¸ùt
=
USCRIPT_COMMON
;

561 } if(
s¸ùtX
<
UPROPS_SCRIPT_X_WITH_OTHER
) {

562 
s¸ùt
=
USCRIPT_INHERITED
;

564 
s¸ùt
=(
US¸ùtCode
)
scx
[0];

565 
scx
=
s¸ùtExãnsi⁄s
+scx[1];

567 if(
sc
==
s¸ùt
) {

568  
TRUE
;

570 
sc
>*
scx
) {

571 ++
scx
;

573  
sc
==(*
scx
&0x7fff);

574 
	}
}

576 
U_DRAFT
 
öt32_t
 
U_EXPORT2


577 
	$us¸ùt_gëS¸ùtExãnsi⁄s
(
UCh¨32
 
c
,

578 
US¸ùtCode
 *
s¸ùts
, 
öt32_t
 
ˇ∑côy
,

579 
UEº‹Code
 *
pEº‹Code
) {

580 
uöt32_t
 
s¸ùtX
;

581 
öt32_t
 
Àngth
;

582 c⁄° 
uöt16_t
 *
scx
;

583 
uöt16_t
 
sx
;

584 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

587 if(
ˇ∑côy
<0 || (ˇ∑côy>0 && 
s¸ùts
==
NULL
)) {

588 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

591 
s¸ùtX
=
	`u_gëUnicodePr›îtõs
(
c
, 0)&
UPROPS_SCRIPT_X_MASK
;

592 if(
s¸ùtX
<
UPROPS_SCRIPT_X_WITH_COMMON
) {

596 
Àngth
=0;

597 
scx
=
s¸ùtExãnsi⁄s
+(
s¸ùtX
&
UPROPS_SCRIPT_MASK
);

598 if(
s¸ùtX
>=
UPROPS_SCRIPT_X_WITH_OTHER
) {

599 
scx
=
s¸ùtExãnsi⁄s
+scx[1];

602 
sx
=*
scx
++;

603 if(
Àngth
<
ˇ∑côy
) {

604 
s¸ùts
[
Àngth
]=
sx
&0x7fff;

606 ++
Àngth
;

607 } 
sx
<0x8000);

608 if(
Àngth
>
ˇ∑côy
) {

609 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

611  
Àngth
;

612 
	}
}

614 
U_CAPI
 
UBlockCode
 
U_EXPORT2


615 
	$ublock_gëCode
(
UCh¨32
 
c
) {

616  (
UBlockCode
)((
	`u_gëUnicodePr›îtõs
(
c
, 0)&
UPROPS_BLOCK_MASK
)>>
UPROPS_BLOCK_SHIFT
);

617 
	}
}

621 
UBoﬁ
 
U_CALLCONV


622 
	$_íumPr›îtySèπsR™ge
(c⁄° *
c⁄ãxt
, 
UCh¨32
 
°¨t
, UCh¨32 
íd
, 
uöt32_t
 
vÆue
) {

624 c⁄° 
USëAddî
 *
ß
=(c⁄° USëAddî *)
c⁄ãxt
;

625 
ß
->
	`add
(ß->
£t
, 
°¨t
);

626  
TRUE
;

627 
	}
}

629 
	#USET_ADD_CP_AND_NEXT
(
ß
, 
˝
Ëß->
	`add
(ß->
£t
, cp); sa->add(ß->£t, cp+1)

	)

631 
U_CFUNC
 
U_EXPORT2


632 
	$uch¨_addPr›îtySèπs
(c⁄° 
USëAddî
 *
ß
, 
UEº‹Code
 *
pEº‹Code
) {

633 if(
	`U_FAILURE
(*
pEº‹Code
)) {

638 
	`uåõ2_íum
(&
¥›sTrõ
, 
NULL
, 
_íumPr›îtySèπsR™ge
, 
ß
);

643 
	`USET_ADD_CP_AND_NEXT
(
ß
, 
TAB
);

646 
ß
->
	`add
(ß->
£t
, 
CR
+1);

647 
ß
->
	`add
(ß->
£t
, 0x1c);

648 
ß
->
	`add
(ß->
£t
, 0x1f+1);

649 
	`USET_ADD_CP_AND_NEXT
(
ß
, 
NL
);

652 
ß
->
	`add
(ß->
£t
, 
DEL
);

653 
ß
->
	`add
(ß->
£t
, 
HAIRSP
);

654 
ß
->
	`add
(ß->
£t
, 
RLM
+1);

655 
ß
->
	`add
(ß->
£t
, 
INHSWAP
);

656 
ß
->
	`add
(ß->
£t
, 
NOMDIG
+1);

657 
	`USET_ADD_CP_AND_NEXT
(
ß
, 
ZWNBSP
);

660 
	`USET_ADD_CP_AND_NEXT
(
ß
, 
NBSP
);

661 
	`USET_ADD_CP_AND_NEXT
(
ß
, 
FIGURESP
);

662 
	`USET_ADD_CP_AND_NEXT
(
ß
, 
NNBSP
);

665 
ß
->
	`add
(ß->
£t
, 
U_a
);

666 
ß
->
	`add
(ß->
£t
, 
U_z
+1);

667 
ß
->
	`add
(ß->
£t
, 
U_A
);

668 
ß
->
	`add
(ß->
£t
, 
U_Z
+1);

669 
ß
->
	`add
(ß->
£t
, 
U_FW_a
);

670 
ß
->
	`add
(ß->
£t
, 
U_FW_z
+1);

671 
ß
->
	`add
(ß->
£t
, 
U_FW_A
);

672 
ß
->
	`add
(ß->
£t
, 
U_FW_Z
+1);

675 
ß
->
	`add
(ß->
£t
, 
U_f
+1);

676 
ß
->
	`add
(ß->
£t
, 
U_F
+1);

677 
ß
->
	`add
(ß->
£t
, 
U_FW_f
+1);

678 
ß
->
	`add
(ß->
£t
, 
U_FW_F
+1);

681 
ß
->
	`add
(ß->
£t
, 
WJ
);

682 
ß
->
	`add
(ß->
£t
, 0xfff0);

683 
ß
->
	`add
(ß->
£t
, 0xfffb+1);

684 
ß
->
	`add
(ß->
£t
, 0xe0000);

685 
ß
->
	`add
(ß->
£t
, 0xe0fff+1);

688 
	`USET_ADD_CP_AND_NEXT
(
ß
, 
CGJ
);

689 
	}
}

691 
U_CFUNC
 
U_EXPORT2


692 
	$u¥›svec_addPr›îtySèπs
(c⁄° 
USëAddî
 *
ß
, 
UEº‹Code
 *
pEº‹Code
) {

693 if(
	`U_FAILURE
(*
pEº‹Code
)) {

698 if(
¥›sVe˘‹sCﬁumns
>0) {

700 
	`uåõ2_íum
(&
¥›sVe˘‹sTrõ
, 
NULL
, 
_íumPr›îtySèπsR™ge
, 
ß
);

702 
	}
}

	@uchar_props_data.c

10 c⁄° 
UVîsi⁄Info
 
	gd©aVîsi⁄
={6,0,0,0};

12 c⁄° 
uöt16_t
 
	g¥›sTrõ_ödex
[17204]={

1091 c⁄° 
UTrõ2
 
	g¥›sTrõ
={

1092 
¥›sTrõ_ödex
,

1093 
¥›sTrõ_ödex
+3888,

1094 
NULL
,

1103 
NULL
, 0, 
FALSE
, FALSE, 0, NULL

1106 c⁄° 
uöt16_t
 
	g¥›sVe˘‹sTrõ_ödex
[22376]={

2508 c⁄° 
UTrõ2
 
	g¥›sVe˘‹sTrõ
={

2509 
¥›sVe˘‹sTrõ_ödex
,

2510 
¥›sVe˘‹sTrõ_ödex
+4112,

2511 
NULL
,

2520 
NULL
, 0, 
FALSE
, FALSE, 0, NULL

2523 c⁄° 
uöt32_t
 
	g¥›sVe˘‹s
[4614]={

2814 c⁄° 
öt32_t
 
	gcou¡Pr›sVe˘‹s
=4614;

2815 c⁄° 
öt32_t
 
	g¥›sVe˘‹sCﬁumns
=3;

2816 c⁄° 
uöt16_t
 
	gs¸ùtExãnsi⁄s
[40]={

2821 c⁄° 
öt32_t
 
	gödexes
[
UPROPS_INDEX_COUNT
]={0x21ae,0x21ae,0x21ae,0x21ae,0x4d66,3,0x5f6c,0x5f80,0x5f80,0x5f80,0xad192,0x2473171,0,0,0,0};

	@uchriter.cpp

8 
	~<ty≥öfo
>

10 
	~"unicode/uchrôî.h
"

11 
	~"unicode/u°rög.h
"

12 
	~"uhash.h
"

14 
U_NAMESPACE_BEGIN


16 
	$UOBJECT_DEFINE_RTTI_IMPLEMENTATION
(
UCh¨Ch¨a˘îIãøt‹
)

18 
UCh¨Ch¨a˘îIãøt‹
::
	$UCh¨Ch¨a˘îIãøt‹
()

19 : 
	`Ch¨a˘îIãøt‹
(),

20 
	$ãxt
(0)

23 
	}
}

25 
	gUCh¨Ch¨a˘îIãøt‹
::
	$UCh¨Ch¨a˘îIãøt‹
(c⁄° 
UCh¨
* 
ãxtPå
,

26 
öt32_t
 
Àngth
)

27 : 
	`Ch¨a˘îIãøt‹
(
ãxtPå
 !0 ? (
Àngth
>=0 ?Üígth : 
	$u_°æí
(
ãxtPå
)) : 0),

28 
	$ãxt
(
ãxtPå
)

30 
	}
}

32 
	gUCh¨Ch¨a˘îIãøt‹
::
	$UCh¨Ch¨a˘îIãøt‹
(c⁄° 
UCh¨
* 
ãxtPå
,

33 
öt32_t
 
Àngth
,

34 
öt32_t
 
posôi⁄
)

35 : 
	`Ch¨a˘îIãøt‹
(
ãxtPå
 !0 ? (
Àngth
>=0 ?Üígth : 
	$u_°æí
(
ãxtPå
)Ë: 0, 
posôi⁄
),

36 
	$ãxt
(
ãxtPå
)

38 
	}
}

40 
	gUCh¨Ch¨a˘îIãøt‹
::
	$UCh¨Ch¨a˘îIãøt‹
(c⁄° 
UCh¨
* 
ãxtPå
,

41 
öt32_t
 
Àngth
,

42 
öt32_t
 
ãxtBegö
,

43 
öt32_t
 
ãxtEnd
,

44 
öt32_t
 
posôi⁄
)

45 : 
	`Ch¨a˘îIãøt‹
(
ãxtPå
 !0 ? (
Àngth
>=0 ?Üígth : 
	$u_°æí
(
ãxtPå
)Ë: 0, 
ãxtBegö
, 
ãxtEnd
, 
posôi⁄
),

46 
	$ãxt
(
ãxtPå
)

48 
	}
}

50 
	gUCh¨Ch¨a˘îIãøt‹
::
	$UCh¨Ch¨a˘îIãøt‹
(c⁄° 
UCh¨Ch¨a˘îIãøt‹
& 
th©
)

51 : 
	`Ch¨a˘îIãøt‹
(
th©
),

52 
	$ãxt
(
th©
.
ãxt
)

54 
	}
}

56 
	gUCh¨Ch¨a˘îIãøt‹
&

57 
	gUCh¨Ch¨a˘îIãøt‹
::
›î©‹
=(c⁄° 
UCh¨Ch¨a˘îIãøt‹
& 
th©
) {

58 
Ch¨a˘îIãøt‹
::
›î©‹
=(
th©
);

59 
	gãxt
 = 
th©
.
ãxt
;

60  *
	gthis
;

63 
	gUCh¨Ch¨a˘îIãøt‹
::~
	$UCh¨Ch¨a˘îIãøt‹
() {

64 
	}
}

66 
UBoﬁ


67 
UCh¨Ch¨a˘îIãøt‹
::
›î©‹
==(c⁄° 
F‹w¨dCh¨a˘îIãøt‹
& 
th©
) const {

68 i‡(
this
 =&
th©
) {

69  
TRUE
;

71 i‡(
ty≥id
(*
this
Ë!ty≥id(
th©
)) {

72  
FALSE
;

75 
	gUCh¨Ch¨a˘îIãøt‹
& 
	gªÆTh©
 = (
UCh¨Ch¨a˘îIãøt‹
&)
th©
;

77  
	gãxt
 =
ªÆTh©
.
ãxt


78 && 
ãxtLígth
 =
ªÆTh©
.textLength

79 && 
pos
 =
ªÆTh©
.pos

80 && 
begö
 =
ªÆTh©
.begin

81 && 
íd
 =
ªÆTh©
.end;

84 
öt32_t


85 
	gUCh¨Ch¨a˘îIãøt‹
::
	$hashCode
() const {

86  
	`uhash_hashUCh¨sN
(
ãxt
, 
ãxtLígth
Ë^ 
pos
 ^ 
begö
 ^ 
íd
;

87 
	}
}

89 
Ch¨a˘îIãøt‹
*

90 
	gUCh¨Ch¨a˘îIãøt‹
::
	$˛⁄e
() const {

91  
√w
 
	`UCh¨Ch¨a˘îIãøt‹
(*
this
);

92 
	}
}

94 
UCh¨


95 
	gUCh¨Ch¨a˘îIãøt‹
::
	$fú°
() {

96 
pos
 = 
begö
;

97 if(
pos
 < 
íd
) {

98  
ãxt
[
pos
];

100  
DONE
;

102 
	}
}

104 
UCh¨


105 
	gUCh¨Ch¨a˘îIãøt‹
::
	$fú°Po°Inc
() {

106 
pos
 = 
begö
;

107 if(
pos
 < 
íd
) {

108  
ãxt
[
pos
++];

110  
DONE
;

112 
	}
}

114 
UCh¨


115 
	gUCh¨Ch¨a˘îIãøt‹
::
	$œ°
() {

116 
pos
 = 
íd
;

117 if(
pos
 > 
begö
) {

118  
ãxt
[--
pos
];

120  
DONE
;

122 
	}
}

124 
UCh¨


125 
	gUCh¨Ch¨a˘îIãøt‹
::
	$£tIndex
(
öt32_t
 
posôi⁄
) {

126 if(
posôi⁄
 < 
begö
) {

127 
pos
 = 
begö
;

128 } if(
posôi⁄
 > 
íd
) {

129 
pos
 = 
íd
;

131 
pos
 = 
posôi⁄
;

133 if(
pos
 < 
íd
) {

134  
ãxt
[
pos
];

136  
DONE
;

138 
	}
}

140 
UCh¨


141 
	gUCh¨Ch¨a˘îIãøt‹
::
	$cuºít
() const {

142 i‡(
pos
 >
begö
 &&Öo†< 
íd
) {

143  
ãxt
[
pos
];

145  
DONE
;

147 
	}
}

149 
UCh¨


150 
	gUCh¨Ch¨a˘îIãøt‹
::
	$√xt
() {

151 i‡(
pos
 + 1 < 
íd
) {

152  
ãxt
[++
pos
];

155 
pos
 = 
íd
;

156  
DONE
;

158 
	}
}

160 
UCh¨


161 
	gUCh¨Ch¨a˘îIãøt‹
::
	$√xtPo°Inc
() {

162 i‡(
pos
 < 
íd
) {

163  
ãxt
[
pos
++];

165  
DONE
;

167 
	}
}

169 
UBoﬁ


170 
	gUCh¨Ch¨a˘îIãøt‹
::
	$hasNext
() {

171  (
UBoﬁ
)(
pos
 < 
íd
 ? 
TRUE
 : 
FALSE
);

172 
	}
}

174 
UCh¨


175 
	gUCh¨Ch¨a˘îIãøt‹
::
	$¥evious
() {

176 i‡(
pos
 > 
begö
) {

177  
ãxt
[--
pos
];

179  
DONE
;

181 
	}
}

183 
UBoﬁ


184 
	gUCh¨Ch¨a˘îIãøt‹
::
	$hasPªvious
() {

185  (
UBoﬁ
)(
pos
 > 
begö
 ? 
TRUE
 : 
FALSE
);

186 
	}
}

188 
UCh¨32


189 
	gUCh¨Ch¨a˘îIãøt‹
::
	$fú°32
() {

190 
pos
 = 
begö
;

191 if(
pos
 < 
íd
) {

192 
öt32_t
 
i
 = 
pos
;

193 
UCh¨32
 
c
;

194 
	`UTF_NEXT_CHAR
(
ãxt
, 
i
, 
íd
, 
c
);

195  
c
;

197  
DONE
;

199 
	}
}

201 
UCh¨32


202 
	gUCh¨Ch¨a˘îIãøt‹
::
	$fú°32Po°Inc
() {

203 
pos
 = 
begö
;

204 if(
pos
 < 
íd
) {

205 
UCh¨32
 
c
;

206 
	`UTF_NEXT_CHAR
(
ãxt
, 
pos
, 
íd
, 
c
);

207  
c
;

209  
DONE
;

211 
	}
}

213 
UCh¨32


214 
	gUCh¨Ch¨a˘îIãøt‹
::
	$œ°32
() {

215 
pos
 = 
íd
;

216 if(
pos
 > 
begö
) {

217 
UCh¨32
 
c
;

218 
	`UTF_PREV_CHAR
(
ãxt
, 
begö
, 
pos
, 
c
);

219  
c
;

221  
DONE
;

223 
	}
}

225 
UCh¨32


226 
	gUCh¨Ch¨a˘îIãøt‹
::
	$£tIndex32
(
öt32_t
 
posôi⁄
) {

227 if(
posôi⁄
 < 
begö
) {

228 
posôi⁄
 = 
begö
;

229 } if(
posôi⁄
 > 
íd
) {

230 
posôi⁄
 = 
íd
;

232 if(
posôi⁄
 < 
íd
) {

233 
	`UTF_SET_CHAR_START
(
ãxt
, 
begö
, 
posôi⁄
);

234 
öt32_t
 
i
 = 
this
->
pos
 = 
posôi⁄
;

235 
UCh¨32
 
c
;

236 
	`UTF_NEXT_CHAR
(
ãxt
, 
i
, 
íd
, 
c
);

237  
c
;

239 
this
->
pos
 = 
posôi⁄
;

240  
DONE
;

242 
	}
}

244 
UCh¨32


245 
	gUCh¨Ch¨a˘îIãøt‹
::
	$cuºít32
() const {

246 i‡(
pos
 >
begö
 &&Öo†< 
íd
) {

247 
UCh¨32
 
c
;

248 
	`UTF_GET_CHAR
(
ãxt
, 
begö
, 
pos
, 
íd
, 
c
);

249  
c
;

251  
DONE
;

253 
	}
}

255 
UCh¨32


256 
	gUCh¨Ch¨a˘îIãøt‹
::
	$√xt32
() {

257 i‡(
pos
 < 
íd
) {

258 
	`UTF_FWD_1
(
ãxt
, 
pos
, 
íd
);

259 if(
pos
 < 
íd
) {

260 
öt32_t
 
i
 = 
pos
;

261 
UCh¨32
 
c
;

262 
	`UTF_NEXT_CHAR
(
ãxt
, 
i
, 
íd
, 
c
);

263  
c
;

267 
pos
 = 
íd
;

268  
DONE
;

269 
	}
}

271 
UCh¨32


272 
	gUCh¨Ch¨a˘îIãøt‹
::
	$√xt32Po°Inc
() {

273 i‡(
pos
 < 
íd
) {

274 
UCh¨32
 
c
;

275 
	`UTF_NEXT_CHAR
(
ãxt
, 
pos
, 
íd
, 
c
);

276  
c
;

278  
DONE
;

280 
	}
}

282 
UCh¨32


283 
	gUCh¨Ch¨a˘îIãøt‹
::
	$¥evious32
() {

284 i‡(
pos
 > 
begö
) {

285 
UCh¨32
 
c
;

286 
	`UTF_PREV_CHAR
(
ãxt
, 
begö
, 
pos
, 
c
);

287  
c
;

289  
DONE
;

291 
	}
}

293 
öt32_t


294 
	gUCh¨Ch¨a˘îIãøt‹
::
move
(
öt32_t
 
dñè
, 
Ch¨a˘îIãøt‹
::
EOrigö
 
‹igö
) {

295 
‹igö
) {

296 
kSèπ
:

297 
pos
 = 
begö
 + 
dñè
;

299 
	gkCuºít
:

300 
pos
 +
dñè
;

302 
	gkEnd
:

303 
pos
 = 
íd
 + 
dñè
;

309 if(
	gpos
 < 
	gbegö
) {

310 
	gpos
 = 
begö
;

311 } if(
	gpos
 > 
	gíd
) {

312 
	gpos
 = 
íd
;

315  
	gpos
;

318 
öt32_t


319 
	gUCh¨Ch¨a˘îIãøt‹
::
move32
(
öt32_t
 
dñè
, 
Ch¨a˘îIãøt‹
::
EOrigö
 
‹igö
) {

322 
‹igö
) {

323 
kSèπ
:

324 
pos
 = 
begö
;

325 if(
	gdñè
 > 0) {

326 
UTF_FWD_N
(
ãxt
, 
pos
, 
íd
, 
dñè
);

329 
	gkCuºít
:

330 if(
dñè
 > 0) {

331 
UTF_FWD_N
(
ãxt
, 
pos
, 
íd
, 
dñè
);

333 
UTF_BACK_N
(
ãxt
, 
begö
, 
pos
, -
dñè
);

336 
	gkEnd
:

337 
pos
 = 
íd
;

338 if(
	gdñè
 < 0) {

339 
UTF_BACK_N
(
ãxt
, 
begö
, 
pos
, -
dñè
);

346  
	gpos
;

349 
	gUCh¨Ch¨a˘îIãøt‹
::
	$£tText
(c⁄° 
UCh¨
* 
√wText
,

350 
öt32_t
 
√wTextLígth
) {

351 
ãxt
 = 
√wText
;

352 if(
√wText
 =0 || 
√wTextLígth
 < 0) {

353 
√wTextLígth
 = 0;

355 
íd
 = 
ãxtLígth
 = 
√wTextLígth
;

356 
pos
 = 
begö
 = 0;

357 
	}
}

360 
	gUCh¨Ch¨a˘îIãøt‹
::
	$gëText
(
UnicodeSåög
& 
ªsu…
) {

361 
ªsu…
 = 
	`UnicodeSåög
(
ãxt
, 
ãxtLígth
);

362 
	}
}

364 
	gU_NAMESPACE_END


	@ucln.h

17 #i‚de‡
__UCLN_H__


18 
	#__UCLN_H__


	)

20 
	~"unicode/uty≥s.h
"

53 
	eECÀ™upLibøryTy≥
 {

54 
	mUCLN_START
 = -1,

55 
	mUCLN_UPLUG
,

56 
	mUCLN_CUSTOM
,

57 
	mUCLN_CTESTFW
,

58 
	mUCLN_TOOLUTIL
,

59 
	mUCLN_LAYOUTEX
,

60 
	mUCLN_LAYOUT
,

61 
	mUCLN_IO
,

62 
	mUCLN_I18N
,

63 
	mUCLN_COMMON


64 } 
	tECÀ™upLibøryTy≥
;

69 
U_CDECL_BEGIN


70 
UBoﬁ
 
	tU_CALLCONV
 
	t˛ónupFunc
();

71 
U_CDECL_END


78 
U_CAPI
 
U_EXPORT2
 
u˛n_ªgi°îCÀ™up
(
ECÀ™upLibøryTy≥
 
ty≥
,

79 
˛ónupFunc
 *
func
);

87 
U_CAPI
 
U_EXPORT2
 
u˛n_˛ónupO√
(
ECÀ™upLibøryTy≥
 
ty≥
);

	@ucln_cmn.c

15 
	~"unicode/uty≥s.h
"

16 
	~"unicode/u˛ón.h
"

17 
	~"uåacimp.h
"

18 
	~"u°r_imp.h
"

19 
	~"u˛n_cmn.h
"

20 
	~"umuãx.h
"

21 
	~"u˛n.h
"

22 
	~"cmem‹y.h
"

23 
	~"uas£π.h
"

26 
	#UCLN_TYPE
 
UCLN_COMMON


	)

27 
	~"u˛n_imp.h
"

29 
˛ónupFunc
 *
	ggComm⁄CÀ™upFun˘i⁄s
[
UCLN_COMMON_COUNT
];

30 
˛ónupFunc
 *
	ggLibCÀ™upFun˘i⁄s
[
UCLN_COMMON
];

34 #i‚de‡
UCLN_DEBUG_CLEANUP


35 
	#UCLN_DEBUG_CLEANUP
 0

	)

39 #i‡
deföed
(
UCLN_DEBUG_CLEANUP
)

40 
	~<°dio.h
>

43 
	$u˛n_˛ónup_öã∫Æ
(
ECÀ™upLibøryTy≥
 
libTy≥
)

45 i‡(
gLibCÀ™upFun˘i⁄s
[
libTy≥
])

47 
gLibCÀ™upFun˘i⁄s
[
libTy≥
]();

48 
gLibCÀ™upFun˘i⁄s
[
libTy≥
] = 
NULL
;

50 
	}
}

52 
U_CAPI
 
U_EXPORT2
 
	$u˛n_˛ónupO√
(
ECÀ™upLibøryTy≥
 
libTy≥
)

54 if(
libTy≥
==
UCLN_COMMON
) {

55 #i‡
UCLN_DEBUG_CLEANUP


56 
	`Ârötf
(
°dîr
, "CÀ™ög up: UCLN_COMMON wôh u_˛ónup,Åy≥ %d\n", ()
libTy≥
);

58 
	`u_˛ónup
();

60 #i‡
UCLN_DEBUG_CLEANUP


61 
	`Ârötf
(
°dîr
, "CÀ™ög up: usög u˛n_˛ónup_öã∫Æ,Åy≥ %d\n", ()
libTy≥
);

63 
	`u˛n_˛ónup_öã∫Æ
(
libTy≥
);

65 
	}
}

68 
U_CFUNC
 

69 
	$u˛n_comm⁄_ªgi°îCÀ™up
(
ECÀ™upComm⁄Ty≥
 
ty≥
,

70 
˛ónupFunc
 *
func
)

72 
	`U_ASSERT
(
UCLN_COMMON_START
 < 
ty≥
 &&Åy≥ < 
UCLN_COMMON_COUNT
);

73 i‡(
UCLN_COMMON_START
 < 
ty≥
 &&Åy≥ < 
UCLN_COMMON_COUNT
)

75 
gComm⁄CÀ™upFun˘i⁄s
[
ty≥
] = 
func
;

77 #i‡!
UCLN_NO_AUTO_CLEANUP
 && (
	`deföed
(
UCLN_AUTO_ATEXIT
Ë|| deföed(
UCLN_AUTO_LOCAL
))

78 
	`u˛n_ªgi°îAutom©icCÀ™up
();

80 
	}
}

82 
U_CAPI
 
U_EXPORT2


83 
	$u˛n_ªgi°îCÀ™up
(
ECÀ™upLibøryTy≥
 
ty≥
,

84 
˛ónupFunc
 *
func
)

86 
	`U_ASSERT
(
UCLN_START
 < 
ty≥
 &&Åy≥ < 
UCLN_COMMON
);

87 i‡(
UCLN_START
 < 
ty≥
 &&Åy≥ < 
UCLN_COMMON
)

89 
gLibCÀ™upFun˘i⁄s
[
ty≥
] = 
func
;

91 
	}
}

93 
U_CFUNC
 
UBoﬁ
 
	$u˛n_lib_˛ónup
() {

94 
ECÀ™upLibøryTy≥
 
libTy≥
 = 
UCLN_START
;

95 
ECÀ™upComm⁄Ty≥
 
comm⁄Func
 = 
UCLN_COMMON_START
;

97 
libTy≥
++;ÜibTy≥<
UCLN_COMMON
;ÜibType++) {

98 
	`u˛n_˛ónup_öã∫Æ
(
libTy≥
);

101 
comm⁄Func
++; comm⁄Func<
UCLN_COMMON_COUNT
; commonFunc++) {

102 i‡(
gComm⁄CÀ™upFun˘i⁄s
[
comm⁄Func
])

104 
gComm⁄CÀ™upFun˘i⁄s
[
comm⁄Func
]();

105 
gComm⁄CÀ™upFun˘i⁄s
[
comm⁄Func
] = 
NULL
;

108 #i‡!
UCLN_NO_AUTO_CLEANUP
 && (
	`deföed
(
UCLN_AUTO_ATEXIT
Ë|| deföed(
UCLN_AUTO_LOCAL
))

109 
	`u˛n_unRegi°îAutom©icCÀ™up
();

111  
TRUE
;

112 
	}
}

	@ucln_cmn.h

17 #i‚de‡
__UCLN_CMN_H__


18 
	#__UCLN_CMN_H__


	)

20 
	~"unicode/uty≥s.h
"

21 
	~"u˛n.h
"

25 
U_CFUNC
 
UBoﬁ
 
umtx_˛ónup
();

27 
U_CFUNC
 
UBoﬁ
 
uåa˚_˛ónup
();

29 
U_CFUNC
 
UBoﬁ
 
u˛n_lib_˛ónup
();

34 
	eECÀ™upComm⁄Ty≥
 {

35 
	mUCLN_COMMON_START
 = -1,

36 
	mUCLN_COMMON_USPREP
,

37 
	mUCLN_COMMON_BREAKITERATOR
,

38 
	mUCLN_COMMON_BREAKITERATOR_DICT
,

39 
	mUCLN_COMMON_SERVICE
,

40 
	mUCLN_COMMON_URES
,

41 
	mUCLN_COMMON_LOCALE
,

42 
	mUCLN_COMMON_LOCALE_AVAILABLE
,

43 
	mUCLN_COMMON_ULOC
,

44 
	mUCLN_COMMON_NORMALIZER2
,

45 
	mUCLN_COMMON_USET
,

46 
	mUCLN_COMMON_UNAMES
,

47 
	mUCLN_COMMON_PNAME
,

48 
	mUCLN_COMMON_UPROPS
,

49 
	mUCLN_COMMON_UCNV
,

50 
	mUCLN_COMMON_UCNV_IO
,

51 
	mUCLN_COMMON_UDATA
,

52 
	mUCLN_COMMON_PUTIL
,

53 
	mUCLN_COMMON_COUNT


54 } 
	tECÀ™upComm⁄Ty≥
;

58 
U_CFUNC
 
U_EXPORT2
 
u˛n_comm⁄_ªgi°îCÀ™up
(
ECÀ™upComm⁄Ty≥
 
ty≥
,

59 
˛ónupFunc
 *
func
);

	@ucln_imp.h

18 #i‚de‡
__UCLN_IMP_H__


19 
	#__UCLN_IMP_H__


	)

21 
	~"u˛n.h
"

22 
	~<°dlib.h
>

41 #i‡!
UCLN_NO_AUTO_CLEANUP


60 #i‡
deföed
(
UCLN_AUTO_LOCAL
)

67 
	~"u˛n_loˇl_hook.c
"

69 #ñi‡
deföed
(
UCLN_AUTO_ATEXIT
)

74 
UBoﬁ
 
	ggAutoCÀ™Regi°îed
 = 
FALSE
;

76 
	$u˛n_©exô_h™dÀr
()

78 
	`u˛n_˛ónupO√
(
UCLN_TYPE
);

79 
	}
}

81 
	$u˛n_ªgi°îAutom©icCÀ™up
()

83 if(!
gAutoCÀ™Regi°îed
) {

84 
gAutoCÀ™Regi°îed
 = 
TRUE
;

85 
	`©exô
(&
u˛n_©exô_h™dÀr
);

87 
	}
}

89 
	$u˛n_unRegi°îAutom©icCÀ™up
 () {

90 
	}
}

93 #ñi‡
deföed
 (
UCLN_FINI
)

99 
U_CAPI
 
U_EXPORT2
 
UCLN_FINI
 ();

101 
U_CAPI
 
U_EXPORT2
 
	$UCLN_FINI
 ()

104 
	`u˛n_˛ónupO√
(
UCLN_TYPE
);

105 
	}
}

106 #ñi‡
deföed
(
__GNUC__
)

108 
	$u˛n_de°ru˘‹
(Ë
	`__©åibuã__
((
de°ru˘‹
)) ;

110 
	$u˛n_de°ru˘‹
()

112 
	`u˛n_˛ónupO√
(
UCLN_TYPE
);

113 
	}
}

116 #ñi‡
deföed
 (
U_WINDOWS
)

125 
	#WIN32_LEAN_AND_MEAN


	)

126 
	#VC_EXTRALEAN


	)

127 
	#NOUSER


	)

128 
	#NOSERVICE


	)

129 
	#NOIME


	)

130 
	#NOMCX


	)

131 
	~<wödows.h
>

135 
BOOL
 
WINAPI
 
	$DŒMaö
(
HINSTANCE
 
hö°DLL
, 
DWORD
 
fdwRós⁄
, 
LPVOID
 
ÕvRe£rved
)

137 
BOOL
 
°©us
 = 
TRUE
;

139 
fdwRós⁄
) {

140 
DLL_PROCESS_ATTACH
:

145 
DLL_PROCESS_DETACH
:

148 
	`u˛n_˛ónupO√
(
UCLN_TYPE
);

152 
DLL_THREAD_ATTACH
:

157 
DLL_THREAD_DETACH
:

163  
°©us
;

164 
	}
}

170 #îr‹ 
This
 
fûe
 
ˇn
 
⁄ly
 
be
 
ö˛uded
 
⁄˚
.

	@ucmndata.c

23 
	~"unicode/uty≥s.h
"

24 
	~"unicode/ud©a.h
"

25 
	~"c°rög.h
"

26 
	~"ucmnd©a.h
"

27 
	~"ud©amem.h
"

29 #i‡
deföed
(
UDATA_DEBUG
Ë|| deföed(
UDATA_DEBUG_DUMP
)

30 
	~<°dio.h
>

33 
U_CFUNC
 
uöt16_t


34 
	$ud©a_gëHódîSize
(c⁄° 
D©aHódî
 *
udh
) {

35 if(
udh
==
NULL
) {

37 } if(
udh
->
öfo
.
isBigEndün
==
U_IS_BIG_ENDIAN
) {

39  
udh
->
d©aHódî
.
hódîSize
;

42 
uöt16_t
 
x
=
udh
->
d©aHódî
.
hódîSize
;

43  (
uöt16_t
)((
x
<<8)|(x>>8));

45 
	}
}

47 
U_CFUNC
 
uöt16_t


48 
	$ud©a_gëInfoSize
(c⁄° 
UD©aInfo
 *
öfo
) {

49 if(
öfo
==
NULL
) {

51 } if(
öfo
->
isBigEndün
==
U_IS_BIG_ENDIAN
) {

53  
öfo
->
size
;

56 
uöt16_t
 
x
=
öfo
->
size
;

57  (
uöt16_t
)((
x
<<8)|(x>>8));

59 
	}
}

70 c⁄° *
	míåyName
;

71 c⁄° 
D©aHódî
 *
	mpHódî
;

72 } 
	tPoöãrTOCE¡ry
;

76 
uöt32_t
 
	mcou¡
;

77 
uöt32_t
 
	mª£rved
;

78 
PoöãrTOCE¡ry
 
	míåy
[2];

79 } 
	tPoöãrTOC
;

89 
uöt32_t
 
	$off£tTOCE¡ryCou¡
(c⁄° 
UD©aMem‹y
 *
pD©a
) {

90 
öt32_t
 
ªtVÆ
=0;

91 c⁄° 
UD©aOff£tTOC
 *
toc
 = (UD©aOff£tTOC *)
pD©a
->toc;

92 i‡(
toc
 !
NULL
) {

93 
ªtVÆ
 = 
toc
->
cou¡
;

95  
ªtVÆ
;

96 
	}
}

99 c⁄° 
D©aHódî
 *

100 
	$off£tTOCLookupFn
(c⁄° 
UD©aMem‹y
 *
pD©a
,

101 c⁄° *
tocE¡ryName
,

102 
öt32_t
 *
pLígth
,

103 
UEº‹Code
 *
pEº‹Code
) {

104 c⁄° 
UD©aOff£tTOC
 *
toc
 = (UD©aOff£tTOC *)
pD©a
->toc;

105 if(
toc
!=
NULL
) {

106 c⁄° *
ba£
=(c⁄° *)
toc
;

107 
uöt32_t
 
°¨t
, 
limô
, 
numbî
, 
œ°Numbî
;

108 
öt32_t
 
°rResu…
;

109 c⁄° 
UD©aOff£tTOCE¡ry
 *
íåy
;

112 #i‡
	`deföed
 (
UDATA_DEBUG_DUMP
)

114 
°¨t
=0;°¨t<
toc
->
cou¡
;start++) {

115 
	`Ârötf
(
°dîr
, "\tx%d: %s\n", 
°¨t
, &
ba£
[
toc
->
íåy
[°¨t].
«meOff£t
]);

119 
°¨t
=0;

120 
limô
=
toc
->
cou¡
;

121 
œ°Numbî
=
limô
;

122 
íåy
=
toc
->entry;

124 
numbî
 = (
°¨t
+
limô
)/2;

125 i‡(
œ°Numbî
 =
numbî
) {

129 
œ°Numbî
 = 
numbî
;

130 
°rResu…
 = 
	`u¥v_°rcmp
(
tocE¡ryName
, 
ba£
+
íåy
[
numbî
].
«meOff£t
);

131 if(
°rResu…
<0) {

132 
limô
=
numbî
;

133 } i‡(
°rResu…
>0) {

134 
°¨t
=
numbî
;

138 #ifde‡
UDATA_DEBUG


139 
	`Ârötf
(
°dîr
, "%s: Found.\n", 
tocE¡ryName
);

141 
íåy
 +
numbî
;

142 if((
numbî
+1Ë< 
toc
->
cou¡
) {

143 *
pLígth
 = (
öt32_t
)(
íåy
[1].
d©aOff£t
 -Éntry->dataOffset);

145 *
pLígth
 = -1;

147  (c⁄° 
D©aHódî
 *)(
ba£
+
íåy
->
d©aOff£t
);

150 #ifde‡
UDATA_DEBUG


151 
	`Ârötf
(
°dîr
, "%s: NŸ found.\n", 
tocE¡ryName
);

153  
NULL
;

155 #ifde‡
UDATA_DEBUG


156 
	`Ârötf
(
°dîr
, "returning header\n");

159  
pD©a
->
pHódî
;

161 
	}
}

164 
uöt32_t
 
	$poöãrTOCE¡ryCou¡
(c⁄° 
UD©aMem‹y
 *
pD©a
) {

165 c⁄° 
PoöãrTOC
 *
toc
 = (PoöãrTOC *)
pD©a
->toc;

166  (
uöt32_t
)((
toc
 !
NULL
Ë? (toc->
cou¡
) : 0);

167 
	}
}

170 c⁄° 
D©aHódî
 *
	$poöãrTOCLookupFn
(c⁄° 
UD©aMem‹y
 *
pD©a
,

171 c⁄° *
«me
,

172 
öt32_t
 *
pLígth
,

173 
UEº‹Code
 *
pEº‹Code
) {

174 if(
pD©a
->
toc
!=
NULL
) {

175 c⁄° 
PoöãrTOC
 *
toc
 = (PoöãrTOC *)
pD©a
->toc;

176 
uöt32_t
 
°¨t
, 
limô
, 
numbî
, 
œ°Numbî
;

177 
öt32_t
 
°rResu…
;

179 #i‡
	`deföed
 (
UDATA_DEBUG_DUMP
)

181 
°¨t
=0;°¨t<
toc
->
cou¡
;start++) {

182 
	`Ârötf
(
°dîr
, "\tx%d: %s\n", 
°¨t
, 
toc
->
íåy
[°¨t].
íåyName
);

187 
°¨t
=0;

188 
limô
=
toc
->
cou¡
;

189 
œ°Numbî
=
limô
;

192 
numbî
 = (
°¨t
+
limô
)/2;

193 i‡(
œ°Numbî
 =
numbî
) {

197 
œ°Numbî
 = 
numbî
;

198 
°rResu…
 = 
	`u¥v_°rcmp
(
«me
, 
toc
->
íåy
[
numbî
].
íåyName
);

199 if(
°rResu…
<0) {

200 
limô
=
numbî
;

201 } i‡(
°rResu…
>0) {

202 
°¨t
=
numbî
;

206 #ifde‡
UDATA_DEBUG


207 
	`Ârötf
(
°dîr
, "%s: Found.\n", 
toc
->
íåy
[
numbî
].
íåyName
);

209 *
pLígth
=-1;

210  
	`UD©aMem‹y_n‹mÆizeD©aPoöãr
(
toc
->
íåy
[
numbî
].
pHódî
);

213 #ifde‡
UDATA_DEBUG


214 
	`Ârötf
(
°dîr
, "%s: NŸ found.\n", 
«me
);

216  
NULL
;

218  
pD©a
->
pHódî
;

220 
	}
}

222 c⁄° 
comm⁄D©aFuncs
 
	gCmnDFuncs
 = {
off£tTOCLookupFn
, 
off£tTOCE¡ryCou¡
};

223 c⁄° 
comm⁄D©aFuncs
 
	gToCPFuncs
 = {
poöãrTOCLookupFn
, 
poöãrTOCE¡ryCou¡
};

235 
U_CFUNC
 
	$ud©a_checkComm⁄D©a
(
UD©aMem‹y
 *
udm
, 
UEº‹Code
 *
îr
) {

236 i‡(
	`U_FAILURE
(*
îr
)) {

240 if(!(
udm
->
pHódî
->
d©aHódî
.
magic1
==0xda &&

241 
udm
->
pHódî
->
d©aHódî
.
magic2
==0x27 &&

242 
udm
->
pHódî
->
öfo
.
isBigEndün
==
U_IS_BIG_ENDIAN
 &&

243 
udm
->
pHódî
->
öfo
.
ch¨£tFamûy
==
U_CHARSET_FAMILY
)

246 *
îr
=
U_INVALID_FORMAT_ERROR
;

248 i‡(
udm
->
pHódî
->
öfo
.
d©aF‹m©
[0]==0x43 &&

249 
udm
->
pHódî
->
öfo
.
d©aF‹m©
[1]==0x6d &&

250 
udm
->
pHódî
->
öfo
.
d©aF‹m©
[2]==0x6e &&

251 
udm
->
pHódî
->
öfo
.
d©aF‹m©
[3]==0x44 &&

252 
udm
->
pHódî
->
öfo
.
f‹m©Vîsi⁄
[0]==1

255 
udm
->
vFuncs
 = &
CmnDFuncs
;

256 
udm
->
toc
=(c⁄° *)udm->
pHódî
+
	`ud©a_gëHódîSize
(udm->pHeader);

258 if(
udm
->
pHódî
->
öfo
.
d©aF‹m©
[0]==0x54 &&

259 
udm
->
pHódî
->
öfo
.
d©aF‹m©
[1]==0x6f &&

260 
udm
->
pHódî
->
öfo
.
d©aF‹m©
[2]==0x43 &&

261 
udm
->
pHódî
->
öfo
.
d©aF‹m©
[3]==0x50 &&

262 
udm
->
pHódî
->
öfo
.
f‹m©Vîsi⁄
[0]==1

265 
udm
->
vFuncs
 = &
ToCPFuncs
;

266 
udm
->
toc
=(c⁄° *)udm->
pHódî
+
	`ud©a_gëHódîSize
(udm->pHeader);

270 *
îr
=
U_INVALID_FORMAT_ERROR
;

273 i‡(
	`U_FAILURE
(*
îr
)) {

278 
	`ud©a_˛o£
(
udm
);

280 
	}
}

	@ucmndata.h

25 #i‚de‡
__UCMNDATA_H__


26 
	#__UCMNDATA_H__


	)

28 
	~"unicode/ud©a.h
"

29 
	~"um≠fûe.h
"

32 
	#COMMON_DATA_NAME
 
U_ICUDATA_NAME


	)

35 
uöt16_t
 
	mhódîSize
;

36 
uöt8_t
 
	mmagic1
;

37 
uöt8_t
 
	mmagic2
;

38 } 
	tM≠≥dD©a
;

42 
M≠≥dD©a
 
	md©aHódî
;

43 
UD©aInfo
 
	möfo
;

44 } 
	tD©aHódî
;

47 
uöt32_t
 
	m«meOff£t
;

48 
uöt32_t
 
	md©aOff£t
;

49 } 
	tUD©aOff£tTOCE¡ry
;

52 
uöt32_t
 
	mcou¡
;

53 
UD©aOff£tTOCE¡ry
 
	míåy
[2];

54 } 
	tUD©aOff£tTOC
;

62 
U_CFUNC
 
uöt16_t


63 
ud©a_gëHódîSize
(c⁄° 
D©aHódî
 *
udh
);

71 
U_CFUNC
 
uöt16_t


72 
ud©a_gëInfoSize
(c⁄° 
UD©aInfo
 *
öfo
);

81 c⁄° 
	tD©aHódî
 *

82 (* 
	tLookupFn
)(c⁄° 
	tUD©aMem‹y
 *
	tpD©a
,

83 c⁄° *
	ttocE¡ryName
,

84 
	töt32_t
 *
	tpLígth
,

85 
	tUEº‹Code
 *
	tpEº‹Code
);

87 
	guöt32_t


88 (* 
	tNumE¡rõsFn
)(c⁄° 
	tUD©aMem‹y
 *
	tpD©a
);

91 
LookupFn
 
	mLookup
;

92 
NumE¡rõsFn
 
	mNumE¡rõs
;

93 } 
	tcomm⁄D©aFuncs
;

106 
U_CFUNC
 
ud©a_checkComm⁄D©a
(
UD©aMem‹y
 *
pD©a
, 
UEº‹Code
 *
pEº‹Code
);

	@ucnv.c

22 
	~"unicode/uty≥s.h
"

24 #i‡!
UCONFIG_NO_CONVERSION


26 
	~"unicode/u°rög.h
"

27 
	~"unicode/u˙v.h
"

28 
	~"unicode/u˙v_îr.h
"

29 
	~"unicode/u£t.h
"

30 
	~"putûimp.h
"

31 
	~"cmem‹y.h
"

32 
	~"c°rög.h
"

33 
	~"uas£π.h
"

34 
	~"uåacimp.h
"

35 
	~"u°r_imp.h
"

36 
	~"u˙v_imp.h
"

37 
	~"u˙v_˙v.h
"

38 
	~"u˙v_bld.h
"

41 
	#CHUNK_SIZE
 1024

	)

43 
	sUAmbiguousC⁄vîãr
 {

44 c⁄° *
	m«me
;

45 c⁄° 
UCh¨
 
	mv¨ü¡5c
;

46 } 
	tUAmbiguousC⁄vîãr
;

48 c⁄° 
UAmbiguousC⁄vîãr
 
	gambiguousC⁄vîãrs
[]={

66 
U_CAPI
 
UC⁄vîãr
* 
U_EXPORT2


67 
	$u˙v_›í
 (c⁄° *
«me
,

68 
UEº‹Code
 * 
îr
)

70 
UC⁄vîãr
 *
r
;

72 i‡(
îr
 =
NULL
 || 
	`U_FAILURE
 (*err)) {

73  
NULL
;

76 
r
 = 
	`u˙v_¸óãC⁄vîãr
(
NULL
, 
«me
, 
îr
);

77  
r
;

78 
	}
}

80 
U_CAPI
 
UC⁄vîãr
* 
U_EXPORT2


81 
	$u˙v_›íPackage
 (c⁄° *
∑ckageName
, c⁄° *
c⁄vîãrName
, 
UEº‹Code
 * 
îr
)

83  
	`u˙v_¸óãC⁄vîãrFromPackage
(
∑ckageName
, 
c⁄vîãrName
, 
îr
);

84 
	}
}

87 
U_CAPI
 
UC⁄vîãr
* 
U_EXPORT2


88 
	$u˙v_›íU
 (c⁄° 
UCh¨
 * 
«me
,

89 
UEº‹Code
 * 
îr
)

91 
asciiName
[
UCNV_MAX_CONVERTER_NAME_LENGTH
];

93 i‡(
îr
 =
NULL
 || 
	`U_FAILURE
(*err))

94  
NULL
;

95 i‡(
«me
 =
NULL
)

96  
	`u˙v_›í
 (
NULL
, 
îr
);

97 i‡(
	`u_°æí
(
«me
Ë>
UCNV_MAX_CONVERTER_NAME_LENGTH
)

99 *
îr
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

100  
NULL
;

102  
	`u˙v_›í
(
	`u_au°r˝y
(
asciiName
, 
«me
), 
îr
);

103 
	}
}

110 
öt32_t


111 
	$u˙v_c›yPœtf‹mSåög
(*
∂©f‹mSåög
, 
UC⁄vîãrPœtf‹m
 
∂t‰m
)

113 
∂t‰m
)

115 
UCNV_IBM
:

116 
	`u¥v_°r˝y
(
∂©f‹mSåög
, "ibm-");

118 
UCNV_UNKNOWN
:

123 *
∂©f‹mSåög
 = 0;

125 
	}
}

129 
U_CAPI
 
UC⁄vîãr
* 
U_EXPORT2


130 
	$u˙v_›íCCSID
 (
öt32_t
 
codïage
,

131 
UC⁄vîãrPœtf‹m
 
∂©f‹m
,

132 
UEº‹Code
 * 
îr
)

134 
myName
[
UCNV_MAX_CONVERTER_NAME_LENGTH
];

135 
öt32_t
 
myNameLí
;

137 i‡(
îr
 =
NULL
 || 
	`U_FAILURE
 (*err))

138  
NULL
;

141 
myNameLí
 = 
	`u˙v_c›yPœtf‹mSåög
(
myName
, 
∂©f‹m
);

142 
	`T_CSåög_öãgîToSåög
(
myName
 + 
myNameLí
, 
codïage
, 10);

144  
	`u˙v_¸óãC⁄vîãr
(
NULL
, 
myName
, 
îr
);

145 
	}
}

151 
U_CAPI
 
UC⁄vîãr
* 
U_EXPORT2


152 
	$u˙v_ß„Cl⁄e
(c⁄° 
UC⁄vîãr
* 
˙v
, *
°ackBuf„r
, 
öt32_t
 *
pBuf„rSize
, 
UEº‹Code
 *
°©us
)

154 
UC⁄vîãr
 *
loˇlC⁄vîãr
, *
ÆloˇãdC⁄vîãr
;

155 
öt32_t
 
buf„rSizeNìded
;

156 *
°ackBuf„rCh¨s
 = (*)
°ackBuf„r
;

157 
UEº‹Code
 
cbEº
;

158 
UC⁄vîãrToUnicodeArgs
 
toUArgs
 = {

159 (
UC⁄vîãrToUnicodeArgs
),

160 
TRUE
,

161 
NULL
,

162 
NULL
,

163 
NULL
,

164 
NULL
,

165 
NULL
,

166 
NULL


168 
UC⁄vîãrFromUnicodeArgs
 
‰omUArgs
 = {

169 (
UC⁄vîãrFromUnicodeArgs
),

170 
TRUE
,

171 
NULL
,

172 
NULL
,

173 
NULL
,

174 
NULL
,

175 
NULL
,

176 
NULL


179 
	`UTRACE_ENTRY_OC
(
UTRACE_UCNV_CLONE
);

181 i‡(
°©us
 =
NULL
 || 
	`U_FAILURE
(*status)){

182 
	`UTRACE_EXIT_STATUS
(
°©us
? *°©us: 
U_ILLEGAL_ARGUMENT_ERROR
);

186 i‡(!
pBuf„rSize
 || !
˙v
){

187 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

188 
	`UTRACE_EXIT_STATUS
(*
°©us
);

192 
	`UTRACE_DATA3
(
UTRACE_OPEN_CLOSE
, "clone converter %sát %p into stackBuffer %p",

193 
	`u˙v_gëName
(
˙v
, 
°©us
), cnv, 
°ackBuf„r
);

195 i‡(
˙v
->
sh¨edD©a
->
im∂
->
ß„Cl⁄e
 !
NULL
) {

197 
buf„rSizeNìded
 = 0;

198 
˙v
->
sh¨edD©a
->
im∂
->
	`ß„Cl⁄e
(˙v, 
NULL
, &
buf„rSizeNìded
, 
°©us
);

203 
buf„rSizeNìded
 = (
UC⁄vîãr
);

206 i‡(*
pBuf„rSize
 <= 0){

207 *
pBuf„rSize
 = 
buf„rSizeNìded
;

208 
	`UTRACE_EXIT_VALUE
(
buf„rSizeNìded
);

216 i‡(
	`U_ALIGNMENT_OFFSET
(
°ackBuf„r
) != 0) {

217 
öt32_t
 
off£tUp
 = (öt32_t)
	`U_ALIGNMENT_OFFSET_UP
(
°ackBuf„rCh¨s
);

218 if(*
pBuf„rSize
 > 
off£tUp
) {

219 *
pBuf„rSize
 -
off£tUp
;

220 
°ackBuf„rCh¨s
 +
off£tUp
;

223 *
pBuf„rSize
 = 1;

227 
°ackBuf„r
 = (*)
°ackBuf„rCh¨s
;

230 i‡(*
pBuf„rSize
 < 
buf„rSizeNìded
 || 
°ackBuf„r
 =
NULL
)

233 
loˇlC⁄vîãr
 = 
ÆloˇãdC⁄vîãr
 = (
UC⁄vîãr
 *Ë
	`u¥v_mÆloc
 (
buf„rSizeNìded
);

235 if(
loˇlC⁄vîãr
 =
NULL
) {

236 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

237 
	`UTRACE_EXIT_STATUS
(*
°©us
);

238  
NULL
;

241 i‡(
	`U_SUCCESS
(*
°©us
)) {

242 *
°©us
 = 
U_SAFECLONE_ALLOCATED_WARNING
;

246 *
pBuf„rSize
 = 
buf„rSizeNìded
;

249 
loˇlC⁄vîãr
 = (
UC⁄vîãr
*Ë
°ackBuf„r
;

250 
ÆloˇãdC⁄vîãr
 = 
NULL
;

253 
	`u¥v_mem£t
(
loˇlC⁄vîãr
, 0, 
buf„rSizeNìded
);

256 
	`u¥v_mem˝y
(
loˇlC⁄vîãr
, 
˙v
, (
UC⁄vîãr
));

257 
loˇlC⁄vîãr
->
isC›yLoˇl
 =ÜoˇlC⁄vîãr->
isExåaLoˇl
 = 
FALSE
;

260 i‡(
˙v
->
subCh¨s
 =(
uöt8_t
 *)˙v->
subUCh¨s
) {

261 
loˇlC⁄vîãr
->
subCh¨s
 = (
uöt8_t
 *ÓoˇlC⁄vîãr->
subUCh¨s
;

263 
loˇlC⁄vîãr
->
subCh¨s
 = (
uöt8_t
 *)
	`u¥v_mÆloc
(
UCNV_ERROR_BUFFER_LENGTH
 * 
U_SIZEOF_UCHAR
);

264 i‡(
loˇlC⁄vîãr
->
subCh¨s
 =
NULL
) {

265 
	`u¥v_‰ì
(
ÆloˇãdC⁄vîãr
);

266 
	`UTRACE_EXIT_STATUS
(*
°©us
);

267  
NULL
;

269 
	`u¥v_mem˝y
(
loˇlC⁄vîãr
->
subCh¨s
, 
˙v
->subCh¨s, 
UCNV_ERROR_BUFFER_LENGTH
 * 
U_SIZEOF_UCHAR
);

273 i‡(
˙v
->
sh¨edD©a
->
im∂
->
ß„Cl⁄e
 !
NULL
) {

275 
loˇlC⁄vîãr
 = 
˙v
->
sh¨edD©a
->
im∂
->
	`ß„Cl⁄e
(˙v,ÜoˇlC⁄vîãr, 
pBuf„rSize
, 
°©us
);

278 if(
loˇlC⁄vîãr
==
NULL
 || 
	`U_FAILURE
(*
°©us
)) {

279 i‡(
ÆloˇãdC⁄vîãr
 !
NULL
 &&áŒoˇãdC⁄vîãr->
subCh¨s
 !(
uöt8_t
 *ÔŒoˇãdC⁄vîãr->
subUCh¨s
) {

280 
	`u¥v_‰ì
(
ÆloˇãdC⁄vîãr
->
subCh¨s
);

282 
	`u¥v_‰ì
(
ÆloˇãdC⁄vîãr
);

283 
	`UTRACE_EXIT_STATUS
(*
°©us
);

284  
NULL
;

293 i‡(
˙v
->
sh¨edD©a
->
ª„ªn˚Cou¡î
 != ~0) {

294 
	`u˙v_ö¸emítRefCou¡
(
˙v
->
sh¨edD©a
);

297 if(
loˇlC⁄vîãr
 =(
UC⁄vîãr
*)
°ackBuf„r
) {

299 
loˇlC⁄vîãr
->
isC›yLoˇl
 = 
TRUE
;

303 
toUArgs
.
c⁄vîãr
 = 
‰omUArgs
.c⁄vîã∏
loˇlC⁄vîãr
;

304 
cbEº
 = 
U_ZERO_ERROR
;

305 
˙v
->
	`‰omCh¨Eº‹Behaviour
(˙v->
toUC⁄ãxt
, &
toUArgs
, 
NULL
, 0, 
UCNV_CLONE
, &
cbEº
);

306 
cbEº
 = 
U_ZERO_ERROR
;

307 
˙v
->
	`‰omUCh¨Eº‹Behaviour
(˙v->
‰omUC⁄ãxt
, &
‰omUArgs
, 
NULL
, 0, 0, 
UCNV_CLONE
, &
cbEº
);

309 
	`UTRACE_EXIT_PTR_STATUS
(
loˇlC⁄vîãr
, *
°©us
);

310  
loˇlC⁄vîãr
;

311 
	}
}

318 
U_CAPI
 
U_EXPORT2


319 
	$u˙v_˛o£
 (
UC⁄vîãr
 * 
c⁄vîãr
)

321 
UEº‹Code
 
îr‹Code
 = 
U_ZERO_ERROR
;

323 
	`UTRACE_ENTRY_OC
(
UTRACE_UCNV_CLOSE
);

325 i‡(
c⁄vîãr
 =
NULL
)

327 
	`UTRACE_EXIT
();

331 
	`UTRACE_DATA3
(
UTRACE_OPEN_CLOSE
, "close converter %sát %p, isCopyLocal=%b",

332 
	`u˙v_gëName
(
c⁄vîãr
, &
îr‹Code
), c⁄vîãr, c⁄vîãr->
isC›yLoˇl
);

338 i‡(
c⁄vîãr
->
‰omCh¨Eº‹Behaviour
 !
UCNV_TO_U_DEFAULT_CALLBACK
) {

339 
UC⁄vîãrToUnicodeArgs
 
toUArgs
 = {

340 (
UC⁄vîãrToUnicodeArgs
),

341 
TRUE
,

342 
NULL
,

343 
NULL
,

344 
NULL
,

345 
NULL
,

346 
NULL
,

347 
NULL


350 
toUArgs
.
c⁄vîãr
 = converter;

351 
îr‹Code
 = 
U_ZERO_ERROR
;

352 
c⁄vîãr
->
	`‰omCh¨Eº‹Behaviour
(c⁄vîãr->
toUC⁄ãxt
, &
toUArgs
, 
NULL
, 0, 
UCNV_CLOSE
, &
îr‹Code
);

354 i‡(
c⁄vîãr
->
‰omUCh¨Eº‹Behaviour
 !
UCNV_FROM_U_DEFAULT_CALLBACK
) {

355 
UC⁄vîãrFromUnicodeArgs
 
‰omUArgs
 = {

356 (
UC⁄vîãrFromUnicodeArgs
),

357 
TRUE
,

358 
NULL
,

359 
NULL
,

360 
NULL
,

361 
NULL
,

362 
NULL
,

363 
NULL


365 
‰omUArgs
.
c⁄vîãr
 = converter;

366 
îr‹Code
 = 
U_ZERO_ERROR
;

367 
c⁄vîãr
->
	`‰omUCh¨Eº‹Behaviour
(c⁄vîãr->
‰omUC⁄ãxt
, &
‰omUArgs
, 
NULL
, 0, 0, 
UCNV_CLOSE
, &
îr‹Code
);

370 i‡(
c⁄vîãr
->
sh¨edD©a
->
im∂
->
˛o£
 !
NULL
) {

371 
c⁄vîãr
->
sh¨edD©a
->
im∂
->
	`˛o£
(converter);

374 i‡(
c⁄vîãr
->
subCh¨s
 !(
uöt8_t
 *)c⁄vîãr->
subUCh¨s
) {

375 
	`u¥v_‰ì
(
c⁄vîãr
->
subCh¨s
);

383 i‡(
c⁄vîãr
->
sh¨edD©a
->
ª„ªn˚Cou¡î
 != ~0) {

384 
	`u˙v_u∆ﬂdSh¨edD©aIfRódy
(
c⁄vîãr
->
sh¨edD©a
);

387 if(!
c⁄vîãr
->
isC›yLoˇl
){

388 
	`u¥v_‰ì
(
c⁄vîãr
);

391 
	`UTRACE_EXIT
();

392 
	}
}

396 
U_CAPI
 c⁄° * 
U_EXPORT2


397 
	$u˙v_gëAvaûabÀName
 (
öt32_t
 
n
)

399 i‡(0 <
n
 &&Ç <= 0xffff) {

400 
UEº‹Code
 
îr
 = 
U_ZERO_ERROR
;

401 c⁄° *
«me
 = 
	`u˙v_bld_gëAvaûabÀC⁄vîãr
((
uöt16_t
)
n
, &
îr
);

402 i‡(
	`U_SUCCESS
(
îr
)) {

403  
«me
;

406  
NULL
;

407 
	}
}

409 
U_CAPI
 
öt32_t
 
U_EXPORT2


410 
	$u˙v_cou¡AvaûabÀ
 ()

412 
UEº‹Code
 
îr
 = 
U_ZERO_ERROR
;

413  
	`u˙v_bld_cou¡AvaûabÀC⁄vîãrs
(&
îr
);

414 
	}
}

416 
U_CAPI
 
U_EXPORT2


417 
	$u˙v_gëSub°Ch¨s
 (c⁄° 
UC⁄vîãr
 * 
c⁄vîãr
,

418 *
mySubCh¨
,

419 
öt8_t
 * 
Àn
,

420 
UEº‹Code
 * 
îr
)

422 i‡(
	`U_FAILURE
 (*
îr
))

425 i‡(
c⁄vîãr
->
subCh¨Lí
 <= 0) {

427 *
Àn
 = 0;

431 i‡(*
Àn
 < 
c⁄vîãr
->
subCh¨Lí
)

433 *
îr
 = 
U_INDEX_OUTOFBOUNDS_ERROR
;

437 
	`u¥v_mem˝y
 (
mySubCh¨
, 
c⁄vîãr
->
subCh¨s
, c⁄vîãr->
subCh¨Lí
);

438 *
Àn
 = 
c⁄vîãr
->
subCh¨Lí
;

439 
	}
}

441 
U_CAPI
 
U_EXPORT2


442 
	$u˙v_£tSub°Ch¨s
 (
UC⁄vîãr
 * 
c⁄vîãr
,

443 c⁄° *
mySubCh¨
,

444 
öt8_t
 
Àn
,

445 
UEº‹Code
 * 
îr
)

447 i‡(
	`U_FAILURE
 (*
îr
))

451 i‡((
Àn
 > 
c⁄vîãr
->
sh¨edD©a
->
°©icD©a
->
maxByãsPîCh¨
)

452 || (
Àn
 < 
c⁄vîãr
->
sh¨edD©a
->
°©icD©a
->
möByãsPîCh¨
))

454 *
îr
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

458 
	`u¥v_mem˝y
 (
c⁄vîãr
->
subCh¨s
, 
mySubCh¨
, 
Àn
);

459 
c⁄vîãr
->
subCh¨Lí
 = 
Àn
;

466 
c⁄vîãr
->
subCh¨1
 = 0;

469 
	}
}

471 
U_CAPI
 
U_EXPORT2


472 
	$u˙v_£tSub°Såög
(
UC⁄vîãr
 *
˙v
,

473 c⁄° 
UCh¨
 *
s
,

474 
öt32_t
 
Àngth
,

475 
UEº‹Code
 *
îr
) {

476 
UAlig√dMem‹y
 
˛⁄eBuf„r
[
U_CNV_SAFECLONE_BUFFERSIZE
 / (UAlignedMemory) + 1];

477 
ch¨s
[
UCNV_ERROR_BUFFER_LENGTH
];

479 
UC⁄vîãr
 *
˛⁄e
;

480 
uöt8_t
 *
subCh¨s
;

481 
öt32_t
 
˛⁄eSize
, 
Àngth8
;

484 
˛⁄eSize
 = (
˛⁄eBuf„r
);

485 
˛⁄e
 = 
	`u˙v_ß„Cl⁄e
(
˙v
, 
˛⁄eBuf„r
, &
˛⁄eSize
, 
îr
);

486 
	`u˙v_£tFromUCÆlBack
(
˛⁄e
, 
UCNV_FROM_U_CALLBACK_STOP
, 
NULL
, NULL, NULL, 
îr
);

487 
Àngth8
 = 
	`u˙v_‰omUCh¨s
(
˛⁄e
, 
ch¨s
, (
öt32_t
)(ch¨s), 
s
, 
Àngth
, 
îr
);

488 
	`u˙v_˛o£
(
˛⁄e
);

489 i‡(
	`U_FAILURE
(*
îr
)) {

493 i‡(
˙v
->
sh¨edD©a
->
im∂
->
wrôeSub
 =
NULL


494 #i‡!
UCONFIG_NO_LEGACY_CONVERSION


495 || (
˙v
->
sh¨edD©a
->
°©icD©a
->
c⁄vîsi⁄Ty≥
 =
UCNV_MBCS
 &&

496 
	`u˙v_MBCSGëTy≥
(
˙v
Ë!
UCNV_EBCDIC_STATEFUL
)

500 
subCh¨s
 = (
uöt8_t
 *)
ch¨s
;

508 i‡(
Àngth
 > 
UCNV_ERROR_BUFFER_LENGTH
) {

514 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

517 
subCh¨s
 = (
uöt8_t
 *)
s
;

518 i‡(
Àngth
 < 0) {

519 
Àngth
 = 
	`u_°æí
(
s
);

521 
Àngth8
 = 
Àngth
 * 
U_SIZEOF_UCHAR
;

528 i‡(
Àngth8
 > 
UCNV_MAX_SUBCHAR_LEN
) {

530 i‡(
˙v
->
subCh¨s
 =(
uöt8_t
 *)˙v->
subUCh¨s
) {

532 
˙v
->
subCh¨s
 = (
uöt8_t
 *)
	`u¥v_mÆloc
(
UCNV_ERROR_BUFFER_LENGTH
 * 
U_SIZEOF_UCHAR
);

533 i‡(
˙v
->
subCh¨s
 =
NULL
) {

534 
˙v
->
subCh¨s
 = (
uöt8_t
 *)˙v->
subUCh¨s
;

535 *
îr
 = 
U_MEMORY_ALLOCATION_ERROR
;

538 
	`u¥v_mem£t
(
˙v
->
subCh¨s
, 0, 
UCNV_ERROR_BUFFER_LENGTH
 * 
U_SIZEOF_UCHAR
);

543 i‡(
Àngth8
 == 0) {

544 
˙v
->
subCh¨Lí
 = 0;

546 
	`u¥v_mem˝y
(
˙v
->
subCh¨s
, subCh¨s, 
Àngth8
);

547 i‡(
subCh¨s
 =(
uöt8_t
 *)
ch¨s
) {

548 
˙v
->
subCh¨Lí
 = (
öt8_t
)
Àngth8
;

550 
˙v
->
subCh¨Lí
 = (
öt8_t
)-
Àngth
;

555 
˙v
->
subCh¨1
 = 0;

556 
	}
}

561 
	$_ª£t
(
UC⁄vîãr
 *
c⁄vîãr
, 
UC⁄vîãrRe£tChoi˚
 
choi˚
,

562 
UBoﬁ
 
ˇŒCÆlback
) {

563 if(
c⁄vîãr
 =
NULL
) {

567 if(
ˇŒCÆlback
) {

569 
UEº‹Code
 
îr‹Code
;

571 if(
choi˚
<=
UCNV_RESET_TO_UNICODE
 && 
c⁄vîãr
->
‰omCh¨Eº‹Behaviour
 !
UCNV_TO_U_DEFAULT_CALLBACK
) {

572 
UC⁄vîãrToUnicodeArgs
 
toUArgs
 = {

573 (
UC⁄vîãrToUnicodeArgs
),

574 
TRUE
,

575 
NULL
,

576 
NULL
,

577 
NULL
,

578 
NULL
,

579 
NULL
,

580 
NULL


582 
toUArgs
.
c⁄vîãr
 = converter;

583 
îr‹Code
 = 
U_ZERO_ERROR
;

584 
c⁄vîãr
->
	`‰omCh¨Eº‹Behaviour
(c⁄vîãr->
toUC⁄ãxt
, &
toUArgs
, 
NULL
, 0, 
UCNV_RESET
, &
îr‹Code
);

586 if(
choi˚
!=
UCNV_RESET_TO_UNICODE
 && 
c⁄vîãr
->
‰omUCh¨Eº‹Behaviour
 !
UCNV_FROM_U_DEFAULT_CALLBACK
) {

587 
UC⁄vîãrFromUnicodeArgs
 
‰omUArgs
 = {

588 (
UC⁄vîãrFromUnicodeArgs
),

589 
TRUE
,

590 
NULL
,

591 
NULL
,

592 
NULL
,

593 
NULL
,

594 
NULL
,

595 
NULL


597 
‰omUArgs
.
c⁄vîãr
 = converter;

598 
îr‹Code
 = 
U_ZERO_ERROR
;

599 
c⁄vîãr
->
	`‰omUCh¨Eº‹Behaviour
(c⁄vîãr->
‰omUC⁄ãxt
, &
‰omUArgs
, 
NULL
, 0, 0, 
UCNV_RESET
, &
îr‹Code
);

604 if(
choi˚
<=
UCNV_RESET_TO_UNICODE
) {

605 
c⁄vîãr
->
toUnicodeSètus
 = c⁄vîãr->
sh¨edD©a
->toUnicodeStatus;

606 
c⁄vîãr
->
mode
 = 0;

607 
c⁄vîãr
->
toULígth
 = 0;

608 
c⁄vîãr
->
övÆidCh¨Lígth
 = c⁄vîãr->
UCh¨Eº‹Buf„rLígth
 = 0;

609 
c⁄vîãr
->
¥eToULígth
 = 0;

611 if(
choi˚
!=
UCNV_RESET_TO_UNICODE
) {

612 
c⁄vîãr
->
‰omUnicodeSètus
 = 0;

613 
c⁄vîãr
->
‰omUCh¨32
 = 0;

614 
c⁄vîãr
->
övÆidUCh¨Lígth
 = c⁄vîãr->
ch¨Eº‹Buf„rLígth
 = 0;

615 
c⁄vîãr
->
¥eFromUFú°CP
 = 
U_SENTINEL
;

616 
c⁄vîãr
->
¥eFromULígth
 = 0;

619 i‡(
c⁄vîãr
->
sh¨edD©a
->
im∂
->
ª£t
 !
NULL
) {

621 
c⁄vîãr
->
sh¨edD©a
->
im∂
->
	`ª£t
(c⁄vîãr, 
choi˚
);

623 
	}
}

625 
U_CAPI
 
U_EXPORT2


626 
	$u˙v_ª£t
(
UC⁄vîãr
 *
c⁄vîãr
)

628 
	`_ª£t
(
c⁄vîãr
, 
UCNV_RESET_BOTH
, 
TRUE
);

629 
	}
}

631 
U_CAPI
 
U_EXPORT2


632 
	$u˙v_ª£tToUnicode
(
UC⁄vîãr
 *
c⁄vîãr
)

634 
	`_ª£t
(
c⁄vîãr
, 
UCNV_RESET_TO_UNICODE
, 
TRUE
);

635 
	}
}

637 
U_CAPI
 
U_EXPORT2


638 
	$u˙v_ª£tFromUnicode
(
UC⁄vîãr
 *
c⁄vîãr
)

640 
	`_ª£t
(
c⁄vîãr
, 
UCNV_RESET_FROM_UNICODE
, 
TRUE
);

641 
	}
}

643 
U_CAPI
 
öt8_t
 
U_EXPORT2


644 
	$u˙v_gëMaxCh¨Size
 (c⁄° 
UC⁄vîãr
 * 
c⁄vîãr
)

646  
c⁄vîãr
->
maxByãsPîUCh¨
;

647 
	}
}

650 
U_CAPI
 
öt8_t
 
U_EXPORT2


651 
	$u˙v_gëMöCh¨Size
 (c⁄° 
UC⁄vîãr
 * 
c⁄vîãr
)

653  
c⁄vîãr
->
sh¨edD©a
->
°©icD©a
->
möByãsPîCh¨
;

654 
	}
}

656 
U_CAPI
 c⁄° * 
U_EXPORT2


657 
	$u˙v_gëName
 (c⁄° 
UC⁄vîãr
 * 
c⁄vîãr
, 
UEº‹Code
 * 
îr
)

660 i‡(
	`U_FAILURE
 (*
îr
))

661  
NULL
;

662 if(
c⁄vîãr
->
sh¨edD©a
->
im∂
->
gëName
){

663 c⁄° * 
ãmp

c⁄vîãr
->
sh¨edD©a
->
im∂
->
	`gëName
(converter);

664 if(
ãmp
)

665  
ãmp
;

667  
c⁄vîãr
->
sh¨edD©a
->
°©icD©a
->
«me
;

668 
	}
}

670 
U_CAPI
 
öt32_t
 
U_EXPORT2


671 
	$u˙v_gëCCSID
(c⁄° 
UC⁄vîãr
 * 
c⁄vîãr
,

672 
UEº‹Code
 * 
îr
)

674 
öt32_t
 
ccsid
;

675 i‡(
	`U_FAILURE
 (*
îr
))

678 
ccsid
 = 
c⁄vîãr
->
sh¨edD©a
->
°©icD©a
->
codïage
;

679 i‡(
ccsid
 == 0) {

682 c⁄° *
°™d¨dName
 = 
	`u˙v_gëSènd¨dName
(
	`u˙v_gëName
(
c⁄vîãr
, 
îr
), "IBM",Érr);

683 i‡(
	`U_SUCCESS
(*
îr
Ë&& 
°™d¨dName
) {

684 c⁄° *
ccsidSå
 = 
	`u¥v_°rchr
(
°™d¨dName
, '-');

685 i‡(
ccsidSå
) {

686 
ccsid
 = (
öt32_t
)
	`©ﬁ
(
ccsidSå
+1);

690  
ccsid
;

691 
	}
}

694 
U_CAPI
 
UC⁄vîãrPœtf‹m
 
U_EXPORT2


695 
	$u˙v_gëPœtf‹m
 (c⁄° 
UC⁄vîãr
 * 
c⁄vîãr
,

696 
UEº‹Code
 * 
îr
)

698 i‡(
	`U_FAILURE
 (*
îr
))

699  
UCNV_UNKNOWN
;

701  (
UC⁄vîãrPœtf‹m
)
c⁄vîãr
->
sh¨edD©a
->
°©icD©a
->
∂©f‹m
;

702 
	}
}

704 
U_CAPI
 
U_EXPORT2


705 
	$u˙v_gëToUCÆlBack
 (c⁄° 
UC⁄vîãr
 * 
c⁄vîãr
,

706 
UC⁄vîãrToUCÆlback
 *
a˘i⁄
,

707 c⁄° **
c⁄ãxt
)

709 *
a˘i⁄
 = 
c⁄vîãr
->
‰omCh¨Eº‹Behaviour
;

710 *
c⁄ãxt
 = 
c⁄vîãr
->
toUC⁄ãxt
;

711 
	}
}

713 
U_CAPI
 
U_EXPORT2


714 
	$u˙v_gëFromUCÆlBack
 (c⁄° 
UC⁄vîãr
 * 
c⁄vîãr
,

715 
UC⁄vîãrFromUCÆlback
 *
a˘i⁄
,

716 c⁄° **
c⁄ãxt
)

718 *
a˘i⁄
 = 
c⁄vîãr
->
‰omUCh¨Eº‹Behaviour
;

719 *
c⁄ãxt
 = 
c⁄vîãr
->
‰omUC⁄ãxt
;

720 
	}
}

722 
U_CAPI
 
U_EXPORT2


723 
	$u˙v_£tToUCÆlBack
 (
UC⁄vîãr
 * 
c⁄vîãr
,

724 
UC⁄vîãrToUCÆlback
 
√wA˘i⁄
,

725 c⁄° * 
√wC⁄ãxt
,

726 
UC⁄vîãrToUCÆlback
 *
ﬁdA˘i⁄
,

727 c⁄° ** 
ﬁdC⁄ãxt
,

728 
UEº‹Code
 * 
îr
)

730 i‡(
	`U_FAILURE
 (*
îr
))

732 i‡(
ﬁdA˘i⁄
Ë*ﬁdA˘i⁄ = 
c⁄vîãr
->
‰omCh¨Eº‹Behaviour
;

733 
c⁄vîãr
->
‰omCh¨Eº‹Behaviour
 = 
√wA˘i⁄
;

734 i‡(
ﬁdC⁄ãxt
Ë*ﬁdC⁄ãxà
c⁄vîãr
->
toUC⁄ãxt
;

735 
c⁄vîãr
->
toUC⁄ãxt
 = 
√wC⁄ãxt
;

736 
	}
}

738 
U_CAPI
 
U_EXPORT2


739 
	$u˙v_£tFromUCÆlBack
 (
UC⁄vîãr
 * 
c⁄vîãr
,

740 
UC⁄vîãrFromUCÆlback
 
√wA˘i⁄
,

741 c⁄° * 
√wC⁄ãxt
,

742 
UC⁄vîãrFromUCÆlback
 *
ﬁdA˘i⁄
,

743 c⁄° ** 
ﬁdC⁄ãxt
,

744 
UEº‹Code
 * 
îr
)

746 i‡(
	`U_FAILURE
 (*
îr
))

748 i‡(
ﬁdA˘i⁄
Ë*ﬁdA˘i⁄ = 
c⁄vîãr
->
‰omUCh¨Eº‹Behaviour
;

749 
c⁄vîãr
->
‰omUCh¨Eº‹Behaviour
 = 
√wA˘i⁄
;

750 i‡(
ﬁdC⁄ãxt
Ë*ﬁdC⁄ãxà
c⁄vîãr
->
‰omUC⁄ãxt
;

751 
c⁄vîãr
->
‰omUC⁄ãxt
 = 
√wC⁄ãxt
;

752 
	}
}

755 
	$_upd©eOff£ts
(
öt32_t
 *
off£ts
, i¡32_à
Àngth
,

756 
öt32_t
 
sour˚Index
, i¡32_à
îr‹I≈utLígth
) {

757 
öt32_t
 *
limô
;

758 
öt32_t
 
dñè
, 
off£t
;

760 if(
sour˚Index
>=0) {

766 
dñè
=
sour˚Index
-
îr‹I≈utLígth
;

772 
dñè
=-1;

775 
limô
=
off£ts
+
Àngth
;

776 if(
dñè
==0) {

778 } if(
dñè
>0) {

780 
off£ts
<
limô
) {

781 
off£t
=*
off£ts
;

782 if(
off£t
>=0) {

783 *
off£ts
=
off£t
+
dñè
;

785 ++
off£ts
;

793 
off£ts
<
limô
) {

794 *
off£ts
++=-1;

797 
	}
}

824 
	$_‰omUnicodeWôhCÆlback
(
UC⁄vîãrFromUnicodeArgs
 *
pArgs
, 
UEº‹Code
 *
îr
) {

825 
UC⁄vîãrFromUnicode
 
‰omUnicode
;

826 
UC⁄vîãr
 *
˙v
;

827 c⁄° 
UCh¨
 *
s
;

828 *
t
;

829 
öt32_t
 *
off£ts
;

830 
öt32_t
 
sour˚Index
;

831 
öt32_t
 
îr‹I≈utLígth
;

832 
UBoﬁ
 
c⁄vîãrSawEndOfI≈ut
, 
ˇŒedCÆlback
;

835 
UCh¨
 
ª∂ay
[
UCNV_EXT_MAX_UCHARS
];

836 c⁄° 
UCh¨
 *
ªÆSour˚
, *
ªÆSour˚Limô
;

837 
öt32_t
 
ªÆSour˚Index
;

838 
UBoﬁ
 
ªÆFlush
;

840 
˙v
=
pArgs
->
c⁄vîãr
;

841 
s
=
pArgs
->
sour˚
;

842 
t
=
pArgs
->
èrgë
;

843 
off£ts
=
pArgs
->offsets;

846 
sour˚Index
=0;

847 if(
off£ts
==
NULL
) {

848 
‰omUnicode
=
˙v
->
sh¨edD©a
->
im∂
->fromUnicode;

850 
‰omUnicode
=
˙v
->
sh¨edD©a
->
im∂
->
‰omUnicodeWôhOff£ts
;

851 if(
‰omUnicode
==
NULL
) {

853 
‰omUnicode
=
˙v
->
sh¨edD©a
->
im∂
->fromUnicode;

855 
sour˚Index
=-1;

859 if(
˙v
->
¥eFromULígth
>=0) {

861 
ªÆSour˚
=
NULL
;

864 
ªÆSour˚Limô
=
NULL
;

865 
ªÆFlush
=
FALSE
;

866 
ªÆSour˚Index
=0;

873 
ªÆSour˚
=
pArgs
->
sour˚
;

874 
ªÆSour˚Limô
=
pArgs
->
sour˚Limô
;

875 
ªÆFlush
=
pArgs
->
Êush
;

876 
ªÆSour˚Index
=
sour˚Index
;

878 
	`u¥v_mem˝y
(
ª∂ay
, 
˙v
->
¥eFromU
, -˙v->
¥eFromULígth
*
U_SIZEOF_UCHAR
);

879 
pArgs
->
sour˚
=
ª∂ay
;

880 
pArgs
->
sour˚Limô
=
ª∂ay
-
˙v
->
¥eFromULígth
;

881 
pArgs
->
Êush
=
FALSE
;

882 
sour˚Index
=-1;

884 
˙v
->
¥eFromULígth
=0;

900 if(
	`U_SUCCESS
(*
îr
)) {

902 
	`‰omUnicode
(
pArgs
, 
îr
);

911 
c⁄vîãrSawEndOfI≈ut
=

912 (
UBoﬁ
)(
	`U_SUCCESS
(*
îr
) &&

913 
pArgs
->
Êush
 &&ÖArgs->
sour˚
=ıArgs->
sour˚Limô
 &&

914 
˙v
->
‰omUCh¨32
==0);

917 
c⁄vîãrSawEndOfI≈ut
=
FALSE
;

921 
ˇŒedCÆlback
=
FALSE
;

924 
îr‹I≈utLígth
=0;

936 if(
off£ts
!=
NULL
) {

937 
öt32_t
 
Àngth
=(öt32_t)(
pArgs
->
èrgë
-
t
);

938 if(
Àngth
>0) {

939 
	`_upd©eOff£ts
(
off£ts
, 
Àngth
, 
sour˚Index
, 
îr‹I≈utLígth
);

948 
pArgs
->
off£ts
=off£ts+=
Àngth
;

951 if(
sour˚Index
>=0) {

952 
sour˚Index
+=(
öt32_t
)(
pArgs
->
sour˚
-
s
);

956 if(
˙v
->
¥eFromULígth
<0) {

961 if(
ªÆSour˚
==
NULL
) {

962 
ªÆSour˚
=
pArgs
->
sour˚
;

963 
ªÆSour˚Limô
=
pArgs
->
sour˚Limô
;

964 
ªÆFlush
=
pArgs
->
Êush
;

965 
ªÆSour˚Index
=
sour˚Index
;

967 
	`u¥v_mem˝y
(
ª∂ay
, 
˙v
->
¥eFromU
, -˙v->
¥eFromULígth
*
U_SIZEOF_UCHAR
);

968 
pArgs
->
sour˚
=
ª∂ay
;

969 
pArgs
->
sour˚Limô
=
ª∂ay
-
˙v
->
¥eFromULígth
;

970 
pArgs
->
Êush
=
FALSE
;

971 if((
sour˚Index
+=
˙v
->
¥eFromULígth
)<0) {

972 
sour˚Index
=-1;

975 
˙v
->
¥eFromULígth
=0;

978 
	`U_ASSERT
(
ªÆSour˚
==
NULL
);

979 *
îr
=
U_INTERNAL_PROGRAM_ERROR
;

984 
s
=
pArgs
->
sour˚
;

985 
t
=
pArgs
->
èrgë
;

987 if(
	`U_SUCCESS
(*
îr
)) {

988 if(
s
<
pArgs
->
sour˚Limô
) {

994 } if(
ªÆSour˚
!=
NULL
) {

996 
pArgs
->
sour˚
=
ªÆSour˚
;

997 
pArgs
->
sour˚Limô
=
ªÆSour˚Limô
;

998 
pArgs
->
Êush
=
ªÆFlush
;

999 
sour˚Index
=
ªÆSour˚Index
;

1001 
ªÆSour˚
=
NULL
;

1003 } if(
pArgs
->
Êush
 && 
˙v
->
‰omUCh¨32
!=0) {

1010 *
îr
=
U_TRUNCATED_CHAR_FOUND
;

1011 
ˇŒedCÆlback
=
FALSE
;

1014 if(
pArgs
->
Êush
) {

1022 if(!
c⁄vîãrSawEndOfI≈ut
) {

1027 
	`_ª£t
(
˙v
, 
UCNV_RESET_FROM_UNICODE
, 
FALSE
);

1037 
UEº‹Code
 
e
;

1039 if–
ˇŒedCÆlback
 ||

1040 (
e
=*
îr
)==
U_BUFFER_OVERFLOW_ERROR
 ||

1041 (
e
!=
U_INVALID_CHAR_FOUND
 &&

1042 
e
!=
U_ILLEGAL_CHAR_FOUND
 &&

1043 
e
!=
U_TRUNCATED_CHAR_FOUND
)

1057 if(
ªÆSour˚
!=
NULL
) {

1058 
öt32_t
 
Àngth
;

1060 
	`U_ASSERT
(
˙v
->
¥eFromULígth
==0);

1062 
Àngth
=(
öt32_t
)(
pArgs
->
sour˚Limô
-pArgs->
sour˚
);

1063 if(
Àngth
>0) {

1064 
	`u¥v_mem˝y
(
˙v
->
¥eFromU
, 
pArgs
->
sour˚
, 
Àngth
*
U_SIZEOF_UCHAR
);

1065 
˙v
->
¥eFromULígth
=(
öt8_t
)-
Àngth
;

1068 
pArgs
->
sour˚
=
ªÆSour˚
;

1069 
pArgs
->
sour˚Limô
=
ªÆSour˚Limô
;

1070 
pArgs
->
Êush
=
ªÆFlush
;

1079 
UCh¨32
 
codePoöt
;

1082 
codePoöt
=
˙v
->
‰omUCh¨32
;

1083 
îr‹I≈utLígth
=0;

1084 
	`U16_APPEND_UNSAFE
(
˙v
->
övÆidUCh¨Buf„r
, 
îr‹I≈utLígth
, 
codePoöt
);

1085 
˙v
->
övÆidUCh¨Lígth
=(
öt8_t
)
îr‹I≈utLígth
;

1088 
˙v
->
‰omUCh¨32
=0;

1091 
˙v
->
	`‰omUCh¨Eº‹Behaviour
(˙v->
‰omUC⁄ãxt
, 
pArgs
,

1092 
˙v
->
övÆidUCh¨Buf„r
, 
îr‹I≈utLígth
, 
codePoöt
,

1093 *
îr
==
U_INVALID_CHAR_FOUND
 ? 
UCNV_UNASSIGNED
 : 
UCNV_ILLEGAL
,

1094 
îr
);

1104 
ˇŒedCÆlback
=
TRUE
;

1107 
	}
}

1114 
UBoﬁ


1115 
	$u˙v_ouçutOvîÊowFromUnicode
(
UC⁄vîãr
 *
˙v
,

1116 **
èrgë
, c⁄° *
èrgëLimô
,

1117 
öt32_t
 **
pOff£ts
,

1118 
UEº‹Code
 *
îr
) {

1119 
öt32_t
 *
off£ts
;

1120 *
ovîÊow
, *
t
;

1121 
öt32_t
 
i
, 
Àngth
;

1123 
t
=*
èrgë
;

1124 if(
pOff£ts
!=
NULL
) {

1125 
off£ts
=*
pOff£ts
;

1127 
off£ts
=
NULL
;

1130 
ovîÊow
=(*)
˙v
->
ch¨Eº‹Buf„r
;

1131 
Àngth
=
˙v
->
ch¨Eº‹Buf„rLígth
;

1132 
i
=0;

1133 
i
<
Àngth
) {

1134 if(
t
==
èrgëLimô
) {

1136 
öt32_t
 
j
=0;

1139 
ovîÊow
[
j
++]=ovîÊow[
i
++];

1140 } 
i
<
Àngth
);

1142 
˙v
->
ch¨Eº‹Buf„rLígth
=(
öt8_t
)
j
;

1143 *
èrgë
=
t
;

1144 if(
off£ts
!=
NULL
) {

1145 *
pOff£ts
=
off£ts
;

1147 *
îr
=
U_BUFFER_OVERFLOW_ERROR
;

1148  
TRUE
;

1152 *
t
++=
ovîÊow
[
i
++];

1153 if(
off£ts
!=
NULL
) {

1154 *
off£ts
++=-1;

1159 
˙v
->
ch¨Eº‹Buf„rLígth
=0;

1160 *
èrgë
=
t
;

1161 if(
off£ts
!=
NULL
) {

1162 *
pOff£ts
=
off£ts
;

1164  
FALSE
;

1165 
	}
}

1167 
U_CAPI
 
U_EXPORT2


1168 
	$u˙v_‰omUnicode
(
UC⁄vîãr
 *
˙v
,

1169 **
èrgë
, c⁄° *
èrgëLimô
,

1170 c⁄° 
UCh¨
 **
sour˚
, c⁄° UCh¨ *
sour˚Limô
,

1171 
öt32_t
 *
off£ts
,

1172 
UBoﬁ
 
Êush
,

1173 
UEº‹Code
 *
îr
) {

1174 
UC⁄vîãrFromUnicodeArgs
 
¨gs
;

1175 c⁄° 
UCh¨
 *
s
;

1176 *
t
;

1179 if(
îr
==
NULL
 || 
	`U_FAILURE
(*err)) {

1183 if(
˙v
==
NULL
 || 
èrgë
==NULL || 
sour˚
==NULL) {

1184 *
îr
=
U_ILLEGAL_ARGUMENT_ERROR
;

1188 
s
=*
sour˚
;

1189 
t
=*
èrgë
;

1191 i‡((c⁄° *)
	`U_MAX_PTR
(
sour˚Limô
) == (const *)sourceLimit) {

1197 
sour˚Limô
 = (c⁄° 
UCh¨
 *)(((const *)sourceLimit) - 1);

1219 i‡(
sour˚Limô
<
s
 || 
èrgëLimô
<
t
 ||

1220 ((
size_t
)(
sour˚Limô
-
s
)>(size_t)0x3fffffff && sourceLimit>s) ||

1221 ((
size_t
)(
èrgëLimô
-
t
)>(size_t)0x7fffffff &&ÅargetLimit>t) ||

1222 (((c⁄° *)
sour˚Limô
-(c⁄° *)
s
) & 1) != 0)

1224 *
îr
=
U_ILLEGAL_ARGUMENT_ERROR
;

1229 if–
˙v
->
ch¨Eº‹Buf„rLígth
>0 &&

1230 
	`u˙v_ouçutOvîÊowFromUnicode
(
˙v
, 
èrgë
, 
èrgëLimô
, &
off£ts
, 
îr
)

1237 if(!
Êush
 && 
s
==
sour˚Limô
 && 
˙v
->
¥eFromULígth
>=0) {

1251 
¨gs
.
c⁄vîãr
=
˙v
;

1252 
¨gs
.
Êush
=flush;

1253 
¨gs
.
off£ts
=offsets;

1254 
¨gs
.
sour˚
=
s
;

1255 
¨gs
.
sour˚Limô
=sourceLimit;

1256 
¨gs
.
èrgë
=*target;

1257 
¨gs
.
èrgëLimô
=targetLimit;

1258 
¨gs
.
size
=(args);

1260 
	`_‰omUnicodeWôhCÆlback
(&
¨gs
, 
îr
);

1262 *
sour˚
=
¨gs
.source;

1263 *
èrgë
=
¨gs
.target;

1264 
	}
}

1269 
	$_toUnicodeWôhCÆlback
(
UC⁄vîãrToUnicodeArgs
 *
pArgs
, 
UEº‹Code
 *
îr
) {

1270 
UC⁄vîãrToUnicode
 
toUnicode
;

1271 
UC⁄vîãr
 *
˙v
;

1272 c⁄° *
s
;

1273 
UCh¨
 *
t
;

1274 
öt32_t
 *
off£ts
;

1275 
öt32_t
 
sour˚Index
;

1276 
öt32_t
 
îr‹I≈utLígth
;

1277 
UBoﬁ
 
c⁄vîãrSawEndOfI≈ut
, 
ˇŒedCÆlback
;

1280 
ª∂ay
[
UCNV_EXT_MAX_BYTES
];

1281 c⁄° *
ªÆSour˚
, *
ªÆSour˚Limô
;

1282 
öt32_t
 
ªÆSour˚Index
;

1283 
UBoﬁ
 
ªÆFlush
;

1285 
˙v
=
pArgs
->
c⁄vîãr
;

1286 
s
=
pArgs
->
sour˚
;

1287 
t
=
pArgs
->
èrgë
;

1288 
off£ts
=
pArgs
->offsets;

1291 
sour˚Index
=0;

1292 if(
off£ts
==
NULL
) {

1293 
toUnicode
=
˙v
->
sh¨edD©a
->
im∂
->toUnicode;

1295 
toUnicode
=
˙v
->
sh¨edD©a
->
im∂
->
toUnicodeWôhOff£ts
;

1296 if(
toUnicode
==
NULL
) {

1298 
toUnicode
=
˙v
->
sh¨edD©a
->
im∂
->toUnicode;

1300 
sour˚Index
=-1;

1304 if(
˙v
->
¥eToULígth
>=0) {

1306 
ªÆSour˚
=
NULL
;

1309 
ªÆSour˚Limô
=
NULL
;

1310 
ªÆFlush
=
FALSE
;

1311 
ªÆSour˚Index
=0;

1318 
ªÆSour˚
=
pArgs
->
sour˚
;

1319 
ªÆSour˚Limô
=
pArgs
->
sour˚Limô
;

1320 
ªÆFlush
=
pArgs
->
Êush
;

1321 
ªÆSour˚Index
=
sour˚Index
;

1323 
	`u¥v_mem˝y
(
ª∂ay
, 
˙v
->
¥eToU
, -˙v->
¥eToULígth
);

1324 
pArgs
->
sour˚
=
ª∂ay
;

1325 
pArgs
->
sour˚Limô
=
ª∂ay
-
˙v
->
¥eToULígth
;

1326 
pArgs
->
Êush
=
FALSE
;

1327 
sour˚Index
=-1;

1329 
˙v
->
¥eToULígth
=0;

1345 if(
	`U_SUCCESS
(*
îr
)) {

1347 
	`toUnicode
(
pArgs
, 
îr
);

1356 
c⁄vîãrSawEndOfI≈ut
=

1357 (
UBoﬁ
)(
	`U_SUCCESS
(*
îr
) &&

1358 
pArgs
->
Êush
 &&ÖArgs->
sour˚
=ıArgs->
sour˚Limô
 &&

1359 
˙v
->
toULígth
==0);

1362 
c⁄vîãrSawEndOfI≈ut
=
FALSE
;

1366 
ˇŒedCÆlback
=
FALSE
;

1369 
îr‹I≈utLígth
=0;

1381 if(
off£ts
!=
NULL
) {

1382 
öt32_t
 
Àngth
=(öt32_t)(
pArgs
->
èrgë
-
t
);

1383 if(
Àngth
>0) {

1384 
	`_upd©eOff£ts
(
off£ts
, 
Àngth
, 
sour˚Index
, 
îr‹I≈utLígth
);

1393 
pArgs
->
off£ts
=off£ts+=
Àngth
;

1396 if(
sour˚Index
>=0) {

1397 
sour˚Index
+=(
öt32_t
)(
pArgs
->
sour˚
-
s
);

1401 if(
˙v
->
¥eToULígth
<0) {

1406 if(
ªÆSour˚
==
NULL
) {

1407 
ªÆSour˚
=
pArgs
->
sour˚
;

1408 
ªÆSour˚Limô
=
pArgs
->
sour˚Limô
;

1409 
ªÆFlush
=
pArgs
->
Êush
;

1410 
ªÆSour˚Index
=
sour˚Index
;

1412 
	`u¥v_mem˝y
(
ª∂ay
, 
˙v
->
¥eToU
, -˙v->
¥eToULígth
);

1413 
pArgs
->
sour˚
=
ª∂ay
;

1414 
pArgs
->
sour˚Limô
=
ª∂ay
-
˙v
->
¥eToULígth
;

1415 
pArgs
->
Êush
=
FALSE
;

1416 if((
sour˚Index
+=
˙v
->
¥eToULígth
)<0) {

1417 
sour˚Index
=-1;

1420 
˙v
->
¥eToULígth
=0;

1423 
	`U_ASSERT
(
ªÆSour˚
==
NULL
);

1424 *
îr
=
U_INTERNAL_PROGRAM_ERROR
;

1429 
s
=
pArgs
->
sour˚
;

1430 
t
=
pArgs
->
èrgë
;

1432 if(
	`U_SUCCESS
(*
îr
)) {

1433 if(
s
<
pArgs
->
sour˚Limô
) {

1439 } if(
ªÆSour˚
!=
NULL
) {

1441 
pArgs
->
sour˚
=
ªÆSour˚
;

1442 
pArgs
->
sour˚Limô
=
ªÆSour˚Limô
;

1443 
pArgs
->
Êush
=
ªÆFlush
;

1444 
sour˚Index
=
ªÆSour˚Index
;

1446 
ªÆSour˚
=
NULL
;

1448 } if(
pArgs
->
Êush
 && 
˙v
->
toULígth
>0) {

1455 *
îr
=
U_TRUNCATED_CHAR_FOUND
;

1456 
ˇŒedCÆlback
=
FALSE
;

1459 if(
pArgs
->
Êush
) {

1467 if(!
c⁄vîãrSawEndOfI≈ut
) {

1472 
	`_ª£t
(
˙v
, 
UCNV_RESET_TO_UNICODE
, 
FALSE
);

1482 
UEº‹Code
 
e
;

1484 if–
ˇŒedCÆlback
 ||

1485 (
e
=*
îr
)==
U_BUFFER_OVERFLOW_ERROR
 ||

1486 (
e
!=
U_INVALID_CHAR_FOUND
 &&

1487 
e
!=
U_ILLEGAL_CHAR_FOUND
 &&

1488 
e
!=
U_TRUNCATED_CHAR_FOUND
 &&

1489 
e
!=
U_ILLEGAL_ESCAPE_SEQUENCE
 &&

1490 
e
!=
U_UNSUPPORTED_ESCAPE_SEQUENCE
)

1504 if(
ªÆSour˚
!=
NULL
) {

1505 
öt32_t
 
Àngth
;

1507 
	`U_ASSERT
(
˙v
->
¥eToULígth
==0);

1509 
Àngth
=(
öt32_t
)(
pArgs
->
sour˚Limô
-pArgs->
sour˚
);

1510 if(
Àngth
>0) {

1511 
	`u¥v_mem˝y
(
˙v
->
¥eToU
, 
pArgs
->
sour˚
, 
Àngth
);

1512 
˙v
->
¥eToULígth
=(
öt8_t
)-
Àngth
;

1515 
pArgs
->
sour˚
=
ªÆSour˚
;

1516 
pArgs
->
sour˚Limô
=
ªÆSour˚Limô
;

1517 
pArgs
->
Êush
=
ªÆFlush
;

1525 
îr‹I≈utLígth
=
˙v
->
övÆidCh¨Lígth
=˙v->
toULígth
;

1526 if(
îr‹I≈utLígth
>0) {

1527 
	`u¥v_mem˝y
(
˙v
->
övÆidCh¨Buf„r
, cnv->
toUByãs
, 
îr‹I≈utLígth
);

1531 
˙v
->
toULígth
=0;

1534 if(
˙v
->
toUCÆlbackRós⁄
==
UCNV_ILLEGAL
 && *
îr
==
U_INVALID_CHAR_FOUND
) {

1535 
˙v
->
toUCÆlbackRós⁄
 = 
UCNV_UNASSIGNED
;

1537 
˙v
->
	`‰omCh¨Eº‹Behaviour
(˙v->
toUC⁄ãxt
, 
pArgs
,

1538 
˙v
->
övÆidCh¨Buf„r
, 
îr‹I≈utLígth
,

1539 
˙v
->
toUCÆlbackRós⁄
,

1540 
îr
);

1541 
˙v
->
toUCÆlbackRós⁄
 = 
UCNV_ILLEGAL
;

1550 
ˇŒedCÆlback
=
TRUE
;

1553 
	}
}

1560 
UBoﬁ


1561 
	$u˙v_ouçutOvîÊowToUnicode
(
UC⁄vîãr
 *
˙v
,

1562 
UCh¨
 **
èrgë
, c⁄° UCh¨ *
èrgëLimô
,

1563 
öt32_t
 **
pOff£ts
,

1564 
UEº‹Code
 *
îr
) {

1565 
öt32_t
 *
off£ts
;

1566 
UCh¨
 *
ovîÊow
, *
t
;

1567 
öt32_t
 
i
, 
Àngth
;

1569 
t
=*
èrgë
;

1570 if(
pOff£ts
!=
NULL
) {

1571 
off£ts
=*
pOff£ts
;

1573 
off£ts
=
NULL
;

1576 
ovîÊow
=
˙v
->
UCh¨Eº‹Buf„r
;

1577 
Àngth
=
˙v
->
UCh¨Eº‹Buf„rLígth
;

1578 
i
=0;

1579 
i
<
Àngth
) {

1580 if(
t
==
èrgëLimô
) {

1582 
öt32_t
 
j
=0;

1585 
ovîÊow
[
j
++]=ovîÊow[
i
++];

1586 } 
i
<
Àngth
);

1588 
˙v
->
UCh¨Eº‹Buf„rLígth
=(
öt8_t
)
j
;

1589 *
èrgë
=
t
;

1590 if(
off£ts
!=
NULL
) {

1591 *
pOff£ts
=
off£ts
;

1593 *
îr
=
U_BUFFER_OVERFLOW_ERROR
;

1594  
TRUE
;

1598 *
t
++=
ovîÊow
[
i
++];

1599 if(
off£ts
!=
NULL
) {

1600 *
off£ts
++=-1;

1605 
˙v
->
UCh¨Eº‹Buf„rLígth
=0;

1606 *
èrgë
=
t
;

1607 if(
off£ts
!=
NULL
) {

1608 *
pOff£ts
=
off£ts
;

1610  
FALSE
;

1611 
	}
}

1613 
U_CAPI
 
U_EXPORT2


1614 
	$u˙v_toUnicode
(
UC⁄vîãr
 *
˙v
,

1615 
UCh¨
 **
èrgë
, c⁄° UCh¨ *
èrgëLimô
,

1616 c⁄° **
sour˚
, c⁄° *
sour˚Limô
,

1617 
öt32_t
 *
off£ts
,

1618 
UBoﬁ
 
Êush
,

1619 
UEº‹Code
 *
îr
) {

1620 
UC⁄vîãrToUnicodeArgs
 
¨gs
;

1621 c⁄° *
s
;

1622 
UCh¨
 *
t
;

1625 if(
îr
==
NULL
 || 
	`U_FAILURE
(*err)) {

1629 if(
˙v
==
NULL
 || 
èrgë
==NULL || 
sour˚
==NULL) {

1630 *
îr
=
U_ILLEGAL_ARGUMENT_ERROR
;

1634 
s
=*
sour˚
;

1635 
t
=*
èrgë
;

1637 i‡((c⁄° *)
	`U_MAX_PTR
(
èrgëLimô
) == (const *)targetLimit) {

1643 
èrgëLimô
 = (c⁄° 
UCh¨
 *)(((const *)targetLimit) - 1);

1665 i‡(
sour˚Limô
<
s
 || 
èrgëLimô
<
t
 ||

1666 ((
size_t
)(
sour˚Limô
-
s
)>(size_t)0x7fffffff && sourceLimit>s) ||

1667 ((
size_t
)(
èrgëLimô
-
t
)>(size_t)0x3fffffff &&ÅargetLimit>t) ||

1668 (((c⁄° *)
èrgëLimô
-(c⁄° *)
t
) & 1) != 0

1670 *
îr
=
U_ILLEGAL_ARGUMENT_ERROR
;

1675 if–
˙v
->
UCh¨Eº‹Buf„rLígth
>0 &&

1676 
	`u˙v_ouçutOvîÊowToUnicode
(
˙v
, 
èrgë
, 
èrgëLimô
, &
off£ts
, 
îr
)

1683 if(!
Êush
 && 
s
==
sour˚Limô
 && 
˙v
->
¥eToULígth
>=0) {

1697 
¨gs
.
c⁄vîãr
=
˙v
;

1698 
¨gs
.
Êush
=flush;

1699 
¨gs
.
off£ts
=offsets;

1700 
¨gs
.
sour˚
=
s
;

1701 
¨gs
.
sour˚Limô
=sourceLimit;

1702 
¨gs
.
èrgë
=*target;

1703 
¨gs
.
èrgëLimô
=targetLimit;

1704 
¨gs
.
size
=(args);

1706 
	`_toUnicodeWôhCÆlback
(&
¨gs
, 
îr
);

1708 *
sour˚
=
¨gs
.source;

1709 *
èrgë
=
¨gs
.target;

1710 
	}
}

1714 
U_CAPI
 
öt32_t
 
U_EXPORT2


1715 
	$u˙v_‰omUCh¨s
(
UC⁄vîãr
 *
˙v
,

1716 *
de°
, 
öt32_t
 
de°C≠acôy
,

1717 c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

1718 
UEº‹Code
 *
pEº‹Code
) {

1719 c⁄° 
UCh¨
 *
§cLimô
;

1720 *
‹igöÆDe°
, *
de°Limô
;

1721 
öt32_t
 
de°Lígth
;

1724 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

1728 if–
˙v
==
NULL
 ||

1729 
de°C≠acôy
<0 || (de°C≠acôy>0 && 
de°
==
NULL
) ||

1730 
§cLígth
<-1 || (§cLígth!=0 && 
§c
==
NULL
)

1732 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

1737 
	`u˙v_ª£tFromUnicode
(
˙v
);

1738 
‹igöÆDe°
=
de°
;

1739 if(
§cLígth
==-1) {

1740 
§cLígth
=
	`u_°æí
(
§c
);

1742 if(
§cLígth
>0) {

1743 
§cLimô
=
§c
+
§cLígth
;

1744 
de°Limô
=
de°
+
de°C≠acôy
;

1747 if(
de°Limô
<
de°
 || (de°Limô==
NULL
 && dest!=NULL)) {

1748 
de°Limô
=(*)
	`U_MAX_PTR
(
de°
);

1752 
	`u˙v_‰omUnicode
(
˙v
, &
de°
, 
de°Limô
, &
§c
, 
§cLimô
, 0, 
TRUE
, 
pEº‹Code
);

1753 
de°Lígth
=(
öt32_t
)(
de°
-
‹igöÆDe°
);

1756 if(*
pEº‹Code
==
U_BUFFER_OVERFLOW_ERROR
) {

1757 
buf„r
[1024];

1759 
de°Limô
=
buf„r
+(buffer);

1761 
de°
=
buf„r
;

1762 *
pEº‹Code
=
U_ZERO_ERROR
;

1763 
	`u˙v_‰omUnicode
(
˙v
, &
de°
, 
de°Limô
, &
§c
, 
§cLimô
, 0, 
TRUE
, 
pEº‹Code
);

1764 
de°Lígth
+=(
öt32_t
)(
de°
-
buf„r
);

1765 } *
pEº‹Code
==
U_BUFFER_OVERFLOW_ERROR
);

1768 
de°Lígth
=0;

1771  
	`u_ãrmö©eCh¨s
(
‹igöÆDe°
, 
de°C≠acôy
, 
de°Lígth
, 
pEº‹Code
);

1772 
	}
}

1774 
U_CAPI
 
öt32_t
 
U_EXPORT2


1775 
	$u˙v_toUCh¨s
(
UC⁄vîãr
 *
˙v
,

1776 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

1777 c⁄° *
§c
, 
öt32_t
 
§cLígth
,

1778 
UEº‹Code
 *
pEº‹Code
) {

1779 c⁄° *
§cLimô
;

1780 
UCh¨
 *
‹igöÆDe°
, *
de°Limô
;

1781 
öt32_t
 
de°Lígth
;

1784 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

1788 if–
˙v
==
NULL
 ||

1789 
de°C≠acôy
<0 || (de°C≠acôy>0 && 
de°
==
NULL
) ||

1790 
§cLígth
<-1 || (§cLígth!=0 && 
§c
==
NULL
))

1792 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

1797 
	`u˙v_ª£tToUnicode
(
˙v
);

1798 
‹igöÆDe°
=
de°
;

1799 if(
§cLígth
==-1) {

1800 
§cLígth
=(
öt32_t
)
	`u¥v_°æí
(
§c
);

1802 if(
§cLígth
>0) {

1803 
§cLimô
=
§c
+
§cLígth
;

1804 
de°Limô
=
de°
+
de°C≠acôy
;

1807 if(
de°Limô
<
de°
 || (de°Limô==
NULL
 && dest!=NULL)) {

1808 
de°Limô
=(
UCh¨
 *)
	`U_MAX_PTR
(
de°
);

1812 
	`u˙v_toUnicode
(
˙v
, &
de°
, 
de°Limô
, &
§c
, 
§cLimô
, 0, 
TRUE
, 
pEº‹Code
);

1813 
de°Lígth
=(
öt32_t
)(
de°
-
‹igöÆDe°
);

1816 if(*
pEº‹Code
==
U_BUFFER_OVERFLOW_ERROR
)

1818 
UCh¨
 
buf„r
[1024];

1820 
de°Limô
=
buf„r
+(buf„r)/
U_SIZEOF_UCHAR
;

1822 
de°
=
buf„r
;

1823 *
pEº‹Code
=
U_ZERO_ERROR
;

1824 
	`u˙v_toUnicode
(
˙v
, &
de°
, 
de°Limô
, &
§c
, 
§cLimô
, 0, 
TRUE
, 
pEº‹Code
);

1825 
de°Lígth
+=(
öt32_t
)(
de°
-
buf„r
);

1827 *
pEº‹Code
==
U_BUFFER_OVERFLOW_ERROR
);

1830 
de°Lígth
=0;

1833  
	`u_ãrmö©eUCh¨s
(
‹igöÆDe°
, 
de°C≠acôy
, 
de°Lígth
, 
pEº‹Code
);

1834 
	}
}

1838 
U_CAPI
 
UCh¨32
 
U_EXPORT2


1839 
	$u˙v_gëNextUCh¨
(
UC⁄vîãr
 *
˙v
,

1840 c⁄° **
sour˚
, c⁄° *
sour˚Limô
,

1841 
UEº‹Code
 *
îr
) {

1842 
UC⁄vîãrToUnicodeArgs
 
¨gs
;

1843 
UCh¨
 
buf„r
[
U16_MAX_LENGTH
];

1844 c⁄° *
s
;

1845 
UCh¨32
 
c
;

1846 
öt32_t
 
i
, 
Àngth
;

1849 if(
îr
==
NULL
 || 
	`U_FAILURE
(*err)) {

1853 if(
˙v
==
NULL
 || 
sour˚
==NULL) {

1854 *
îr
=
U_ILLEGAL_ARGUMENT_ERROR
;

1858 
s
=*
sour˚
;

1859 if(
sour˚Limô
<
s
) {

1860 *
îr
=
U_ILLEGAL_ARGUMENT_ERROR
;

1876 if(((
size_t
)(
sour˚Limô
-
s
)>(size_t)0x7fffffff && sourceLimit>s)) {

1877 *
îr
=
U_ILLEGAL_ARGUMENT_ERROR
;

1881 
c
=
U_SENTINEL
;

1884 if(
˙v
->
UCh¨Eº‹Buf„rLígth
>0) {

1885 
UCh¨
 *
ovîÊow
;

1887 
ovîÊow
=
˙v
->
UCh¨Eº‹Buf„r
;

1888 
i
=0;

1889 
Àngth
=
˙v
->
UCh¨Eº‹Buf„rLígth
;

1890 
	`U16_NEXT
(
ovîÊow
, 
i
, 
Àngth
, 
c
);

1893 if((
˙v
->
UCh¨Eº‹Buf„rLígth
=(
öt8_t
)(
Àngth
-
i
))>0) {

1894 
	`u¥v_memmove
(
˙v
->
UCh¨Eº‹Buf„r
, cnv->UCh¨Eº‹Buf„r+
i
,

1895 
˙v
->
UCh¨Eº‹Buf„rLígth
*
U_SIZEOF_UCHAR
);

1898 if(!
	`U16_IS_LEAD
(
c
Ë|| 
i
<
Àngth
) {

1899  
c
;

1916 
¨gs
.
c⁄vîãr
=
˙v
;

1917 
¨gs
.
Êush
=
TRUE
;

1918 
¨gs
.
off£ts
=
NULL
;

1919 
¨gs
.
sour˚
=
s
;

1920 
¨gs
.
sour˚Limô
=sourceLimit;

1921 
¨gs
.
èrgë
=
buf„r
;

1922 
¨gs
.
èrgëLimô
=
buf„r
+1;

1923 
¨gs
.
size
=(args);

1925 if(
c
<0) {

1934 if(
˙v
->
toULígth
==0 && cnv->
sh¨edD©a
->
im∂
->
gëNextUCh¨
!=
NULL
) {

1935 
c
=
˙v
->
sh¨edD©a
->
im∂
->
	`gëNextUCh¨
(&
¨gs
, 
îr
);

1936 *
sour˚
=
s
=
¨gs
.source;

1937 if(*
îr
==
U_INDEX_OUTOFBOUNDS_ERROR
) {

1939 
	`_ª£t
(
˙v
, 
UCNV_RESET_TO_UNICODE
, 
FALSE
);

1941 } if(
	`U_SUCCESS
(*
îr
Ë&& 
c
>=0) {

1942  
c
;

1952 
	`_toUnicodeWôhCÆlback
(&
¨gs
, 
îr
);

1954 if(*
îr
==
U_BUFFER_OVERFLOW_ERROR
) {

1955 *
îr
=
U_ZERO_ERROR
;

1958 
i
=0;

1959 
Àngth
=(
öt32_t
)(
¨gs
.
èrgë
-
buf„r
);

1962 
buf„r
[0]=(
UCh¨
)
c
;

1963 
¨gs
.
èrgë
=
buf„r
+1;

1964 
i
=0;

1965 
Àngth
=1;

1970 if(
	`U_FAILURE
(*
îr
)) {

1971 
c
=0xffff;

1972 } if(
Àngth
==0) {

1974 *
îr
=
U_INDEX_OUTOFBOUNDS_ERROR
;

1976 
c
=0xffff;

1978 
c
=
buf„r
[0];

1979 
i
=1;

1980 if(!
	`U16_IS_LEAD
(
c
)) {

1984 
UCh¨
 
c2
;

1986 if(
˙v
->
UCh¨Eº‹Buf„rLígth
>0) {

1988 if(
	`U16_IS_TRAIL
(
c2
=
˙v
->
UCh¨Eº‹Buf„r
[0])) {

1990 
c
=
	`U16_GET_SUPPLEMENTARY
(c, 
c2
);

1993 if((--
˙v
->
UCh¨Eº‹Buf„rLígth
)>0) {

1994 
	`u¥v_memmove
(
˙v
->
UCh¨Eº‹Buf„r
, cnv->UCharErrorBuffer+1,

1995 
˙v
->
UCh¨Eº‹Buf„rLígth
*
U_SIZEOF_UCHAR
);

2000 } if(
¨gs
.
sour˚
<
sour˚Limô
) {

2002 
¨gs
.
èrgëLimô
=
buf„r
+2;

2003 
	`_toUnicodeWôhCÆlback
(&
¨gs
, 
îr
);

2004 if(*
îr
==
U_BUFFER_OVERFLOW_ERROR
) {

2005 *
îr
=
U_ZERO_ERROR
;

2008 
Àngth
=(
öt32_t
)(
¨gs
.
èrgë
-
buf„r
);

2009 if(
	`U_SUCCESS
(*
îr
Ë&& 
Àngth
==2 && 
	`U16_IS_TRAIL
(
c2
=
buf„r
[1])) {

2011 
c
=
	`U16_GET_SUPPLEMENTARY
(c, 
c2
);

2012 
i
=2;

2022 if(
i
<
Àngth
) {

2024 
öt32_t
 
dñè
=
Àngth
-
i
;

2025 if((
Àngth
=
˙v
->
UCh¨Eº‹Buf„rLígth
)>0) {

2026 
	`u¥v_memmove
(
˙v
->
UCh¨Eº‹Buf„r
+
dñè
, cnv->UCharErrorBuffer,

2027 
Àngth
*
U_SIZEOF_UCHAR
);

2029 
˙v
->
UCh¨Eº‹Buf„rLígth
=(
öt8_t
)(
Àngth
+
dñè
);

2031 
˙v
->
UCh¨Eº‹Buf„r
[0]=
buf„r
[
i
++];

2032 if(
dñè
>1) {

2033 
˙v
->
UCh¨Eº‹Buf„r
[1]=
buf„r
[
i
];

2037 *
sour˚
=
¨gs
.source;

2038  
c
;

2039 
	}
}

2043 
U_CAPI
 
U_EXPORT2


2044 
	$u˙v_c⁄vîtEx
(
UC⁄vîãr
 *
èrgëCnv
, UC⁄vîã∏*
sour˚Cnv
,

2045 **
èrgë
, c⁄° *
èrgëLimô
,

2046 c⁄° **
sour˚
, c⁄° *
sour˚Limô
,

2047 
UCh¨
 *
pivŸSèπ
, UCh¨ **
pivŸSour˚
,

2048 
UCh¨
 **
pivŸT¨gë
, c⁄° UCh¨ *
pivŸLimô
,

2049 
UBoﬁ
 
ª£t
, UBoﬁ 
Êush
,

2050 
UEº‹Code
 *
pEº‹Code
) {

2051 
UCh¨
 
pivŸBuf„r
[
CHUNK_SIZE
];

2052 c⁄° 
UCh¨
 *
myPivŸSour˚
;

2053 
UCh¨
 *
myPivŸT¨gë
;

2054 c⁄° *
s
;

2055 *
t
;

2057 
UC⁄vîãrToUnicodeArgs
 
toUArgs
;

2058 
UC⁄vîãrFromUnicodeArgs
 
‰omUArgs
;

2059 
UC⁄vîãrC⁄vît
 
c⁄vît
;

2062 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

2066 if–
èrgëCnv
==
NULL
 || 
sour˚Cnv
==NULL ||

2067 
sour˚
==
NULL
 || *source==NULL ||

2068 
èrgë
==
NULL
 || *èrgë==NULL || 
èrgëLimô
==NULL

2070 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

2074 
s
=*
sour˚
;

2075 
t
=*
èrgë
;

2076 if((
sour˚Limô
!=
NULL
 && sour˚Limô<
s
Ë|| 
èrgëLimô
<
t
) {

2077 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

2086 (
sour˚Limô
!=
NULL
 && ((
size_t
)(sour˚Limô-
s
)>(size_t)0x7fffffff && sourceLimit>s)) ||

2087 ((
size_t
)(
èrgëLimô
-
t
)>(size_t)0x7fffffff &&ÅargetLimit>t)

2089 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

2093 if(
pivŸSèπ
==
NULL
) {

2094 if(!
Êush
) {

2096 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

2101 
myPivŸSour˚
=
myPivŸT¨gë
=
pivŸSèπ
=
pivŸBuf„r
;

2102 
pivŸSour˚
=(
UCh¨
 **)&
myPivŸSour˚
;

2103 
pivŸT¨gë
=&
myPivŸT¨gë
;

2104 
pivŸLimô
=
pivŸBuf„r
+
CHUNK_SIZE
;

2105 } if–
pivŸSèπ
>=
pivŸLimô
 ||

2106 
pivŸSour˚
==
NULL
 || *pivotSource==NULL ||

2107 
pivŸT¨gë
==
NULL
 || *pivotTarget==NULL ||

2108 
pivŸLimô
==
NULL


2110 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

2114 if(
sour˚Limô
==
NULL
) {

2116 
sour˚Limô
=
	`u¥v_°rchr
(*
sour˚
, 0);

2119 if(
ª£t
) {

2120 
	`u˙v_ª£tToUnicode
(
sour˚Cnv
);

2121 
	`u˙v_ª£tFromUnicode
(
èrgëCnv
);

2122 *
pivŸSour˚
=*
pivŸT¨gë
=
pivŸSèπ
;

2123 } if(
èrgëCnv
->
ch¨Eº‹Buf„rLígth
>0) {

2125 if(
	`u˙v_ouçutOvîÊowFromUnicode
(
èrgëCnv
, 
èrgë
, 
èrgëLimô
, 
NULL
, 
pEº‹Code
)) {

2131 if–!
Êush
 &&

2132 
èrgëCnv
->
¥eFromULígth
>=0 && *
pivŸSour˚
==*
pivŸT¨gë
 &&

2133 
sour˚Cnv
->
UCh¨Eº‹Buf„rLígth
==0 && sour˚Cnv->
¥eToULígth
>=0 && 
s
==
sour˚Limô


2141 if–
sour˚Cnv
->
sh¨edD©a
->
°©icD©a
->
c⁄vîsi⁄Ty≥
==
UCNV_UTF8
 &&

2142 
èrgëCnv
->
sh¨edD©a
->
im∂
->
‰omUTF8
!=
NULL


2144 
c⁄vît
=
èrgëCnv
->
sh¨edD©a
->
im∂
->
‰omUTF8
;

2145 } if–
èrgëCnv
->
sh¨edD©a
->
°©icD©a
->
c⁄vîsi⁄Ty≥
==
UCNV_UTF8
 &&

2146 
sour˚Cnv
->
sh¨edD©a
->
im∂
->
toUTF8
!=
NULL


2148 
c⁄vît
=
sour˚Cnv
->
sh¨edD©a
->
im∂
->
toUTF8
;

2150 
c⁄vît
=
NULL
;

2172 if(
c⁄vît
!=
NULL
 && (
pivŸLimô
-
pivŸSèπ
)>32) {

2173 
pivŸLimô
=
pivŸSèπ
+32;

2177 
‰omUArgs
.
c⁄vîãr
=
èrgëCnv
;

2178 
‰omUArgs
.
Êush
=
FALSE
;

2179 
‰omUArgs
.
off£ts
=
NULL
;

2180 
‰omUArgs
.
èrgë
=*target;

2181 
‰omUArgs
.
èrgëLimô
=targetLimit;

2182 
‰omUArgs
.
size
=(fromUArgs);

2184 
toUArgs
.
c⁄vîãr
=
sour˚Cnv
;

2185 
toUArgs
.
Êush
=flush;

2186 
toUArgs
.
off£ts
=
NULL
;

2187 
toUArgs
.
sour˚
=
s
;

2188 
toUArgs
.
sour˚Limô
=sourceLimit;

2189 
toUArgs
.
èrgëLimô
=
pivŸLimô
;

2190 
toUArgs
.
size
=(toUArgs);

2199 
s
=
t
=
NULL
;

2221 if–*
pivŸSour˚
<*
pivŸT¨gë
 ||

2222 
	`U_FAILURE
(*
pEº‹Code
) ||

2223 
èrgëCnv
->
¥eFromULígth
<0 ||

2224 
‰omUArgs
.
Êush


2226 
‰omUArgs
.
sour˚
=*
pivŸSour˚
;

2227 
‰omUArgs
.
sour˚Limô
=*
pivŸT¨gë
;

2228 
	`_‰omUnicodeWôhCÆlback
(&
‰omUArgs
, 
pEº‹Code
);

2229 if(
	`U_FAILURE
(*
pEº‹Code
)) {

2231 *
pivŸSour˚
=(
UCh¨
 *)
‰omUArgs
.
sour˚
;

2242 *
pivŸSour˚
=*
pivŸT¨gë
=
pivŸSèπ
;

2251 if(
sour˚Cnv
->
UCh¨Eº‹Buf„rLígth
>0) {

2252 if(
	`u˙v_ouçutOvîÊowToUnicode
(
sour˚Cnv
, 
pivŸT¨gë
, 
pivŸLimô
, 
NULL
, 
pEº‹Code
)) {

2254 *
pEº‹Code
=
U_ZERO_ERROR
;

2266 if–
toUArgs
.
sour˚
==
sour˚Limô
 &&

2267 
sour˚Cnv
->
¥eToULígth
>=0 && sour˚Cnv->
toULígth
==0 &&

2268 (!
Êush
 || 
‰omUArgs
.flush)

2279 if(
c⁄vît
!=
NULL
 && 
èrgëCnv
->
¥eFromUFú°CP
<0 && 
sour˚Cnv
->
¥eToULígth
==0) {

2280 if(*
pEº‹Code
==
U_USING_DEFAULT_WARNING
) {

2282 *
pEº‹Code
=
U_ZERO_ERROR
;

2284 
	`c⁄vît
(&
‰omUArgs
, &
toUArgs
, 
pEº‹Code
);

2285 if(*
pEº‹Code
==
U_BUFFER_OVERFLOW_ERROR
) {

2287 } if(
	`U_FAILURE
(*
pEº‹Code
)) {

2288 if(
sour˚Cnv
->
toULígth
>0) {

2303 *
pivŸSour˚
=*
pivŸT¨gë
=
pivŸSèπ
+1;

2310 } if(*
pEº‹Code
==
U_USING_DEFAULT_WARNING
) {

2315 *
pEº‹Code
=
U_ZERO_ERROR
;

2321 } if(
Êush
 && 
sour˚Cnv
->
toULígth
>0) {

2328 *
pEº‹Code
=
U_TRUNCATED_CHAR_FOUND
;

2331 if(
Êush
) {

2333 
	`_ª£t
(
sour˚Cnv
, 
UCNV_RESET_TO_UNICODE
, 
FALSE
);

2334 
	`_ª£t
(
èrgëCnv
, 
UCNV_RESET_FROM_UNICODE
, 
FALSE
);

2351 
toUArgs
.
èrgë
=
pivŸSèπ
;

2353 
	`_toUnicodeWôhCÆlback
(&
toUArgs
, 
pEº‹Code
);

2354 *
pivŸT¨gë
=
toUArgs
.
èrgë
;

2355 if(*
pEº‹Code
==
U_BUFFER_OVERFLOW_ERROR
) {

2357 *
pEº‹Code
=
U_ZERO_ERROR
;

2358 } if(
	`U_FAILURE
(*
pEº‹Code
Ë|| (!
Êush
 && *
pivŸT¨gë
==
pivŸSèπ
)) {

2370 if–
Êush
 && 
toUArgs
.
sour˚
==
sour˚Limô
 &&

2371 
sour˚Cnv
->
¥eToULígth
>=0 &&

2372 
sour˚Cnv
->
UCh¨Eº‹Buf„rLígth
==0

2374 
‰omUArgs
.
Êush
=
TRUE
;

2385 *
sour˚
=
toUArgs
.source;

2386 *
èrgë
=
‰omUArgs
.target;

2389 if(
Êush
 && 
	`U_SUCCESS
(*
pEº‹Code
)) {

2390 if(*
èrgë
!=
èrgëLimô
) {

2391 **
èrgë
=0;

2392 if(*
pEº‹Code
==
U_STRING_NOT_TERMINATED_WARNING
) {

2393 *
pEº‹Code
=
U_ZERO_ERROR
;

2396 *
pEº‹Code
=
U_STRING_NOT_TERMINATED_WARNING
;

2399 
	}
}

2402 
öt32_t


2403 
	$u˙v_öã∫ÆC⁄vît
(
UC⁄vîãr
 *
outC⁄vîãr
, UC⁄vîã∏*
öC⁄vîãr
,

2404 *
èrgë
, 
öt32_t
 
èrgëC≠acôy
,

2405 c⁄° *
sour˚
, 
öt32_t
 
sour˚Lígth
,

2406 
UEº‹Code
 *
pEº‹Code
) {

2407 
UCh¨
 
pivŸBuf„r
[
CHUNK_SIZE
];

2408 
UCh¨
 *
pivŸ
, *
pivŸ2
;

2410 *
myT¨gë
;

2411 c⁄° *
sour˚Limô
;

2412 c⁄° *
èrgëLimô
;

2413 
öt32_t
 
èrgëLígth
=0;

2416 if(
sour˚Lígth
<0) {

2417 
sour˚Limô
=
	`u¥v_°rchr
(
sour˚
, 0);

2419 
sour˚Limô
=
sour˚
+
sour˚Lígth
;

2423 if(
sour˚
==
sour˚Limô
) {

2424  
	`u_ãrmö©eCh¨s
(
èrgë
, 
èrgëC≠acôy
, 0, 
pEº‹Code
);

2427 
pivŸ
=
pivŸ2
=
pivŸBuf„r
;

2428 
myT¨gë
=
èrgë
;

2429 
èrgëLígth
=0;

2431 if(
èrgëC≠acôy
>0) {

2433 
èrgëLimô
=
èrgë
+
èrgëC≠acôy
;

2434 
	`u˙v_c⁄vîtEx
(
outC⁄vîãr
, 
öC⁄vîãr
,

2435 &
myT¨gë
, 
èrgëLimô
,

2436 &
sour˚
, 
sour˚Limô
,

2437 
pivŸBuf„r
, &
pivŸ
, &
pivŸ2
,ÖivŸBuf„r+
CHUNK_SIZE
,

2438 
FALSE
,

2439 
TRUE
,

2440 
pEº‹Code
);

2441 
èrgëLígth
=(
öt32_t
)(
myT¨gë
-
èrgë
);

2449 if(*
pEº‹Code
==
U_BUFFER_OVERFLOW_ERROR
 || 
èrgëC≠acôy
==0)

2451 
èrgëBuf„r
[
CHUNK_SIZE
];

2453 
èrgëLimô
=
èrgëBuf„r
+
CHUNK_SIZE
;

2455 *
pEº‹Code
=
U_ZERO_ERROR
;

2456 
myT¨gë
=
èrgëBuf„r
;

2457 
	`u˙v_c⁄vîtEx
(
outC⁄vîãr
, 
öC⁄vîãr
,

2458 &
myT¨gë
, 
èrgëLimô
,

2459 &
sour˚
, 
sour˚Limô
,

2460 
pivŸBuf„r
, &
pivŸ
, &
pivŸ2
,ÖivŸBuf„r+
CHUNK_SIZE
,

2461 
FALSE
,

2462 
TRUE
,

2463 
pEº‹Code
);

2464 
èrgëLígth
+=(
öt32_t
)(
myT¨gë
-
èrgëBuf„r
);

2465 } *
pEº‹Code
==
U_BUFFER_OVERFLOW_ERROR
);

2468  
	`u_ãrmö©eCh¨s
(
èrgë
, 
èrgëC≠acôy
, 
èrgëLígth
, 
pEº‹Code
);

2472  
èrgëLígth
;

2473 
	}
}

2475 
U_CAPI
 
öt32_t
 
U_EXPORT2


2476 
	$u˙v_c⁄vît
(c⁄° *
toC⁄vîãrName
, c⁄° *
‰omC⁄vîãrName
,

2477 *
èrgë
, 
öt32_t
 
èrgëC≠acôy
,

2478 c⁄° *
sour˚
, 
öt32_t
 
sour˚Lígth
,

2479 
UEº‹Code
 *
pEº‹Code
) {

2480 
UC⁄vîãr
 
ö
, 
out
;

2481 
UC⁄vîãr
 *
öC⁄vîãr
, *
outC⁄vîãr
;

2482 
öt32_t
 
èrgëLígth
;

2484 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

2488 if–
sour˚
==
NULL
 || 
sour˚Lígth
<-1 ||

2489 
èrgëC≠acôy
<0 || (èrgëC≠acôy>0 && 
èrgë
==
NULL
)

2491 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

2496 if(
sour˚Lígth
==0 || (sour˚Lígth<0 && *
sour˚
==0)) {

2497  
	`u_ãrmö©eCh¨s
(
èrgë
, 
èrgëC≠acôy
, 0, 
pEº‹Code
);

2501 
öC⁄vîãr
=
	`u˙v_¸óãC⁄vîãr
(&
ö
, 
‰omC⁄vîãrName
, 
pEº‹Code
);

2502 if(
	`U_FAILURE
(*
pEº‹Code
)) {

2506 
outC⁄vîãr
=
	`u˙v_¸óãC⁄vîãr
(&
out
, 
toC⁄vîãrName
, 
pEº‹Code
);

2507 if(
	`U_FAILURE
(*
pEº‹Code
)) {

2508 
	`u˙v_˛o£
(
öC⁄vîãr
);

2512 
èrgëLígth
=
	`u˙v_öã∫ÆC⁄vît
(
outC⁄vîãr
, 
öC⁄vîãr
,

2513 
èrgë
, 
èrgëC≠acôy
,

2514 
sour˚
, 
sour˚Lígth
,

2515 
pEº‹Code
);

2517 
	`u˙v_˛o£
(
öC⁄vîãr
);

2518 
	`u˙v_˛o£
(
outC⁄vîãr
);

2520  
èrgëLígth
;

2521 
	}
}

2524 
öt32_t


2525 
	$u˙v_c⁄vîtAlg‹ôhmic
(
UBoﬁ
 
c⁄vîtToAlg‹ôhmic
,

2526 
UC⁄vîãrTy≥
 
Æg‹ôhmicTy≥
,

2527 
UC⁄vîãr
 *
˙v
,

2528 *
èrgë
, 
öt32_t
 
èrgëC≠acôy
,

2529 c⁄° *
sour˚
, 
öt32_t
 
sour˚Lígth
,

2530 
UEº‹Code
 *
pEº‹Code
) {

2531 
UC⁄vîãr
 
ÆgoC⁄vîãrSètic
;

2532 
UC⁄vîãr
 *
ÆgoC⁄vîãr
, *
to
, *
‰om
;

2533 
öt32_t
 
èrgëLígth
;

2535 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

2539 if–
˙v
==
NULL
 || 
sour˚
==NULL || 
sour˚Lígth
<-1 ||

2540 
èrgëC≠acôy
<0 || (èrgëC≠acôy>0 && 
èrgë
==
NULL
)

2542 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

2547 if(
sour˚Lígth
==0 || (sour˚Lígth<0 && *
sour˚
==0)) {

2548  
	`u_ãrmö©eCh¨s
(
èrgë
, 
èrgëC≠acôy
, 0, 
pEº‹Code
);

2552 
ÆgoC⁄vîãr
=
	`u˙v_¸óãAlg‹ôhmicC⁄vîãr
(&
ÆgoC⁄vîãrSètic
, 
Æg‹ôhmicTy≥
,

2553 "", 0, 
pEº‹Code
);

2554 if(
	`U_FAILURE
(*
pEº‹Code
)) {

2559 if(
c⁄vîtToAlg‹ôhmic
) {

2561 
	`u˙v_ª£tToUnicode
(
˙v
);

2562 
to
=
ÆgoC⁄vîãr
;

2563 
‰om
=
˙v
;

2566 
	`u˙v_ª£tFromUnicode
(
˙v
);

2567 
‰om
=
ÆgoC⁄vîãr
;

2568 
to
=
˙v
;

2571 
èrgëLígth
=
	`u˙v_öã∫ÆC⁄vît
(
to
, 
‰om
,

2572 
èrgë
, 
èrgëC≠acôy
,

2573 
sour˚
, 
sour˚Lígth
,

2574 
pEº‹Code
);

2576 
	`u˙v_˛o£
(
ÆgoC⁄vîãr
);

2578  
èrgëLígth
;

2579 
	}
}

2581 
U_CAPI
 
öt32_t
 
U_EXPORT2


2582 
	$u˙v_toAlg‹ôhmic
(
UC⁄vîãrTy≥
 
Æg‹ôhmicTy≥
,

2583 
UC⁄vîãr
 *
˙v
,

2584 *
èrgë
, 
öt32_t
 
èrgëC≠acôy
,

2585 c⁄° *
sour˚
, 
öt32_t
 
sour˚Lígth
,

2586 
UEº‹Code
 *
pEº‹Code
) {

2587  
	`u˙v_c⁄vîtAlg‹ôhmic
(
TRUE
, 
Æg‹ôhmicTy≥
, 
˙v
,

2588 
èrgë
, 
èrgëC≠acôy
,

2589 
sour˚
, 
sour˚Lígth
,

2590 
pEº‹Code
);

2591 
	}
}

2593 
U_CAPI
 
öt32_t
 
U_EXPORT2


2594 
	$u˙v_‰omAlg‹ôhmic
(
UC⁄vîãr
 *
˙v
,

2595 
UC⁄vîãrTy≥
 
Æg‹ôhmicTy≥
,

2596 *
èrgë
, 
öt32_t
 
èrgëC≠acôy
,

2597 c⁄° *
sour˚
, 
öt32_t
 
sour˚Lígth
,

2598 
UEº‹Code
 *
pEº‹Code
) {

2599  
	`u˙v_c⁄vîtAlg‹ôhmic
(
FALSE
, 
Æg‹ôhmicTy≥
, 
˙v
,

2600 
èrgë
, 
èrgëC≠acôy
,

2601 
sour˚
, 
sour˚Lígth
,

2602 
pEº‹Code
);

2603 
	}
}

2605 
U_CAPI
 
UC⁄vîãrTy≥
 
U_EXPORT2


2606 
	$u˙v_gëTy≥
(c⁄° 
UC⁄vîãr
* 
c⁄vîãr
)

2608 
öt8_t
 
ty≥
 = 
c⁄vîãr
->
sh¨edD©a
->
°©icD©a
->
c⁄vîsi⁄Ty≥
;

2609 #i‡!
UCONFIG_NO_LEGACY_CONVERSION


2610 if(
ty≥
 =
UCNV_MBCS
) {

2611  
	`u˙v_MBCSGëTy≥
(
c⁄vîãr
);

2614  (
UC⁄vîãrTy≥
)
ty≥
;

2615 
	}
}

2617 
U_CAPI
 
U_EXPORT2


2618 
	$u˙v_gëSèπîs
(c⁄° 
UC⁄vîãr
* 
c⁄vîãr
,

2619 
UBoﬁ
 
°¨ãrs
[256],

2620 
UEº‹Code
* 
îr
)

2622 i‡(
îr
 =
NULL
 || 
	`U_FAILURE
(*err)) {

2626 if(
c⁄vîãr
->
sh¨edD©a
->
im∂
->
gëSèπîs
 !
NULL
) {

2627 
c⁄vîãr
->
sh¨edD©a
->
im∂
->
	`gëSèπîs
(c⁄vîãr, 
°¨ãrs
, 
îr
);

2629 *
îr
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

2631 
	}
}

2633 c⁄° 
UAmbiguousC⁄vîãr
 *
	$u˙v_gëAmbiguous
(c⁄° 
UC⁄vîãr
 *
˙v
)

2635 
UEº‹Code
 
îr‹Code
;

2636 c⁄° *
«me
;

2637 
öt32_t
 
i
;

2639 if(
˙v
==
NULL
) {

2640  
NULL
;

2643 
îr‹Code
=
U_ZERO_ERROR
;

2644 
«me
=
	`u˙v_gëName
(
˙v
, &
îr‹Code
);

2645 if(
	`U_FAILURE
(
îr‹Code
)) {

2646  
NULL
;

2649 
i
=0; i<(
öt32_t
)((
ambiguousC⁄vîãrs
)/(
UAmbiguousC⁄vîãr
)); ++i)

2651 if(0==
	`u¥v_°rcmp
(
«me
, 
ambiguousC⁄vîãrs
[
i
].name))

2653  
ambiguousC⁄vîãrs
+
i
;

2657  
NULL
;

2658 
	}
}

2660 
U_CAPI
 
U_EXPORT2


2661 
	$u˙v_fixFûeSï¨©‹
(c⁄° 
UC⁄vîãr
 *
˙v
,

2662 
UCh¨
* 
sour˚
,

2663 
öt32_t
 
sour˚Lígth
) {

2664 c⁄° 
UAmbiguousC⁄vîãr
 *
a
;

2665 
öt32_t
 
i
;

2666 
UCh¨
 
v¨ü¡5c
;

2668 if(
˙v
==
NULL
 || 
sour˚
==NULL || 
sour˚Lígth
<=0 || (
a
=
	`u˙v_gëAmbiguous
(cnv))==NULL)

2673 
v¨ü¡5c
=
a
->variant5c;

2674 
i
=0; i<
sour˚Lígth
; ++i) {

2675 if(
sour˚
[
i
]==
v¨ü¡5c
) {

2676 
sour˚
[
i
]=0x5c;

2679 
	}
}

2681 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


2682 
	$u˙v_isAmbiguous
(c⁄° 
UC⁄vîãr
 *
˙v
) {

2683  (
UBoﬁ
)(
	`u˙v_gëAmbiguous
(
˙v
)!=
NULL
);

2684 
	}
}

2686 
U_CAPI
 
U_EXPORT2


2687 
	$u˙v_£tFÆlback
(
UC⁄vîãr
 *
˙v
, 
UBoﬁ
 
u£sFÆlback
)

2689 
˙v
->
u£FÆlback
 = 
u£sFÆlback
;

2690 
	}
}

2692 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


2693 
	$u˙v_u£sFÆlback
(c⁄° 
UC⁄vîãr
 *
˙v
)

2695  
˙v
->
u£FÆlback
;

2696 
	}
}

2698 
U_CAPI
 
U_EXPORT2


2699 
	$u˙v_gëInvÆidCh¨s
 (c⁄° 
UC⁄vîãr
 * 
c⁄vîãr
,

2700 *
îrByãs
,

2701 
öt8_t
 * 
Àn
,

2702 
UEº‹Code
 * 
îr
)

2704 i‡(
îr
 =
NULL
 || 
	`U_FAILURE
(*err))

2708 i‡(
Àn
 =
NULL
 || 
îrByãs
 =NULL || 
c⁄vîãr
 == NULL)

2710 *
îr
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

2713 i‡(*
Àn
 < 
c⁄vîãr
->
övÆidCh¨Lígth
)

2715 *
îr
 = 
U_INDEX_OUTOFBOUNDS_ERROR
;

2718 i‡((*
Àn
 = 
c⁄vîãr
->
övÆidCh¨Lígth
) > 0)

2720 
	`u¥v_mem˝y
 (
îrByãs
, 
c⁄vîãr
->
övÆidCh¨Buf„r
, *
Àn
);

2722 
	}
}

2724 
U_CAPI
 
U_EXPORT2


2725 
	$u˙v_gëInvÆidUCh¨s
 (c⁄° 
UC⁄vîãr
 * 
c⁄vîãr
,

2726 
UCh¨
 *
îrCh¨s
,

2727 
öt8_t
 * 
Àn
,

2728 
UEº‹Code
 * 
îr
)

2730 i‡(
îr
 =
NULL
 || 
	`U_FAILURE
(*err))

2734 i‡(
Àn
 =
NULL
 || 
îrCh¨s
 =NULL || 
c⁄vîãr
 == NULL)

2736 *
îr
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

2739 i‡(*
Àn
 < 
c⁄vîãr
->
övÆidUCh¨Lígth
)

2741 *
îr
 = 
U_INDEX_OUTOFBOUNDS_ERROR
;

2744 i‡((*
Àn
 = 
c⁄vîãr
->
övÆidUCh¨Lígth
) > 0)

2746 
	`u¥v_mem˝y
 (
îrCh¨s
, 
c⁄vîãr
->
övÆidUCh¨Buf„r
, (
UCh¨
Ë* (*
Àn
));

2748 
	}
}

2750 
	#SIG_MAX_LEN
 5

	)

2752 
U_CAPI
 c⁄° * 
U_EXPORT2


2753 
	$u˙v_dëe˘UnicodeSig«tuª
–c⁄° * 
sour˚
,

2754 
öt32_t
 
sour˚Lígth
,

2755 
öt32_t
* 
sig«tuªLígth
,

2756 
UEº‹Code
* 
pEº‹Code
) {

2757 
öt32_t
 
dummy
;

2762 
°¨t
[
SIG_MAX_LEN
]={ '\xa5', '\xa5', '\xa5', '\xa5', '\xa5' };

2763 
i
 = 0;

2765 if((
pEº‹Code
==
NULL
Ë|| 
	`U_FAILURE
(*pErrorCode)){

2766  
NULL
;

2769 if(
sour˚
 =
NULL
 || 
sour˚Lígth
 < -1){

2770 *
pEº‹Code
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

2771  
NULL
;

2774 if(
sig«tuªLígth
 =
NULL
) {

2775 
sig«tuªLígth
 = &
dummy
;

2778 if(
sour˚Lígth
==-1){

2779 
sour˚Lígth
=(
öt32_t
)
	`u¥v_°æí
(
sour˚
);

2783 
i
<
sour˚Lígth
&& i<
SIG_MAX_LEN
){

2784 
°¨t
[
i
]=
sour˚
[i];

2785 
i
++;

2788 if(
°¨t
[0] == '\xFE' && start[1] == '\xFF') {

2789 *
sig«tuªLígth
=2;

2791 } if(
°¨t
[0] == '\xFF' && start[1] == '\xFE') {

2792 if(
°¨t
[2] == '\x00' && start[3] =='\x00') {

2793 *
sig«tuªLígth
=4;

2796 *
sig«tuªLígth
=2;

2799 } if(
°¨t
[0] == '\xEF' && start[1] == '\xBB' && start[2] == '\xBF') {

2800 *
sig«tuªLígth
=3;

2802 } if(
°¨t
[0] == '\x00' && start[1] == '\x00' &&

2803 
°¨t
[2] == '\xFE' && start[3]=='\xFF') {

2804 *
sig«tuªLígth
=4;

2806 } if(
°¨t
[0] == '\x0E' && start[1] == '\xFE' && start[2] == '\xFF') {

2807 *
sig«tuªLígth
=3;

2809 } if(
°¨t
[0] == '\xFB' && start[1] == '\xEE' && start[2] == '\x28') {

2810 *
sig«tuªLígth
=3;

2812 } if(
°¨t
[0] == '\x2B' && start[1] == '\x2F' && start[2] == '\x76') {

2821 if(
°¨t
[3] == '\x38' && start[4] == '\x2D') {

2823 *
sig«tuªLígth
=5;

2825 } if(
°¨t
[3] == '\x38' || start[3] == '\x39' || start[3] == '\x2B' || start[3] == '\x2F') {

2827 *
sig«tuªLígth
=4;

2830 }if(
°¨t
[0]=='\xDD' && start[1]== '\x73'&& start[2]=='\x66' && start[3]=='\x73'){

2831 *
sig«tuªLígth
=4;

2837 *
sig«tuªLígth
=0;

2838  
NULL
;

2839 
	}
}

2841 
U_CAPI
 
öt32_t
 
U_EXPORT2


2842 
	$u˙v_‰omUCou¡Pídög
(c⁄° 
UC⁄vîãr
* 
˙v
, 
UEº‹Code
* 
°©us
)

2844 if(
°©us
 =
NULL
 || 
	`U_FAILURE
(*status)){

2847 if(
˙v
 =
NULL
){

2848 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

2852 if(
˙v
->
¥eFromULígth
 > 0){

2853  
	`U16_LENGTH
(
˙v
->
¥eFromUFú°CP
)+˙v->
¥eFromULígth
 ;

2854 }if(
˙v
->
¥eFromULígth
 < 0){

2855  -
˙v
->
¥eFromULígth
 ;

2856 }if(
˙v
->
‰omUCh¨32
 > 0){

2858 }if(
˙v
->
¥eFromUFú°CP
 >0){

2859  
	`U16_LENGTH
(
˙v
->
¥eFromUFú°CP
);

2863 
	}
}

2865 
U_CAPI
 
öt32_t
 
U_EXPORT2


2866 
	$u˙v_toUCou¡Pídög
(c⁄° 
UC⁄vîãr
* 
˙v
, 
UEº‹Code
* 
°©us
){

2868 if(
°©us
 =
NULL
 || 
	`U_FAILURE
(*status)){

2871 if(
˙v
 =
NULL
){

2872 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

2876 if(
˙v
->
¥eToULígth
 > 0){

2877  
˙v
->
¥eToULígth
 ;

2878 }if(
˙v
->
¥eToULígth
 < 0){

2879  -
˙v
->
¥eToULígth
;

2880 }if(
˙v
->
toULígth
 > 0){

2881  
˙v
->
toULígth
;

2884 
	}
}

	@ucnv2022.c

29 
	~"unicode/uty≥s.h
"

31 #i‡!
UCONFIG_NO_CONVERSION
 && !
UCONFIG_NO_LEGACY_CONVERSION


33 
	~"unicode/u˙v.h
"

34 
	~"unicode/u£t.h
"

35 
	~"unicode/u˙v_îr.h
"

36 
	~"unicode/u˙v_cb.h
"

37 
	~"u˙v_imp.h
"

38 
	~"u˙v_bld.h
"

39 
	~"u˙v_˙v.h
"

40 
	~"u˙vmbcs.h
"

41 
	~"c°rög.h
"

42 
	~"cmem‹y.h
"

44 
	#LENGTHOF
(
¨øy
Ë(
öt32_t
)(◊ºay)/(◊ºay)[0]))

	)

46 #ifde‡
U_ENABLE_GENERIC_ISO_2022


78 c⁄° 
	gSHIFT_IN_STR
[] = "\x0F";

79 c⁄° 
	gSHIFT_OUT_STR
[] = "\x0E";

81 
	#CR
 0x0D

	)

82 
	#LF
 0x0A

	)

83 
	#H_TAB
 0x09

	)

84 
	#V_TAB
 0x0B

	)

85 
	#SPACE
 0x20

	)

88 
	mHWKANA_START
=0xff61,

89 
	mHWKANA_END
=0xff9f

101 
	mGR94_START
=0xa1,

102 
	mGR94_END
=0xfe,

103 
	mGR96_START
=0xa0,

104 
	mGR96_END
=0xff

113 
	#IS_2022_CONTROL
(
c
Ë(((c)<0x20Ë&& (((
uöt32_t
)1<<(c))&0x0800c000)!=0)

	)

118 
	mINVALID_STATE
=-1,

119 
	mASCII
 = 0,

121 
	mSS2_STATE
=0x10,

122 
	mSS3_STATE
,

125 
	mISO8859_1
 = 1 ,

126 
	mISO8859_7
 = 2 ,

127 
	mJISX201
 = 3,

128 
	mJISX208
 = 4,

129 
	mJISX212
 = 5,

130 
	mGB2312
 =6,

131 
	mKSC5601
 =7,

132 
	mHWKANA_7BIT
=8,

136 
	mGB2312_1
=1,

137 
	mISO_IR_165
=2,

138 
	mCNS_11643
=3,

144 
	mCNS_11643_0
=0x20,

145 
	mCNS_11643_1
,

146 
	mCNS_11643_2
,

147 
	mCNS_11643_3
,

148 
	mCNS_11643_4
,

149 
	mCNS_11643_5
,

150 
	mCNS_11643_6
,

151 
	mCNS_11643_7


152 } 
	tSèãEnum
;

155 
	#IS_JP_DBCS
(
cs
Ë(
JISX208
<=(csË&& (cs)<=
KSC5601
)

	)

157 
	#CSM
(
cs
Ë((
uöt16_t
)1<<(cs))

	)

168 íum { 
	mMAX_JA_VERSION
=4 };

169 c⁄° 
uöt16_t
 
	gjpCh¨£tMasks
[
MAX_JA_VERSION
+1]={

170 
CSM
(
ASCII
)|CSM(
JISX201
)|CSM(
JISX208
)|CSM(
HWKANA_7BIT
),

171 
CSM
(
ASCII
)|CSM(
JISX201
)|CSM(
JISX208
)|CSM(
HWKANA_7BIT
)|CSM(
JISX212
),

172 
CSM
(
ASCII
)|CSM(
JISX201
)|CSM(
JISX208
)|CSM(
HWKANA_7BIT
)|CSM(
JISX212
)|CSM(
GB2312
)|CSM(
KSC5601
)|CSM(
ISO8859_1
)|CSM(
ISO8859_7
),

173 
CSM
(
ASCII
)|CSM(
JISX201
)|CSM(
JISX208
)|CSM(
HWKANA_7BIT
)|CSM(
JISX212
)|CSM(
GB2312
)|CSM(
KSC5601
)|CSM(
ISO8859_1
)|CSM(
ISO8859_7
),

174 
CSM
(
ASCII
)|CSM(
JISX201
)|CSM(
JISX208
)|CSM(
HWKANA_7BIT
)|CSM(
JISX212
)|CSM(
GB2312
)|CSM(
KSC5601
)|CSM(
ISO8859_1
)|CSM(
ISO8859_7
)

178 
	mASCII1
=0,

179 
	mLATIN1
,

180 
	mSBCS
,

181 
	mDBCS
,

182 
	mMBCS
,

183 
	mHWKANA


184 }
	tCnv2022Ty≥
;

186 
	sISO2022Sèã
 {

187 
öt8_t
 
	mcs
[4];

188 
öt8_t
 
	mg
;

189 
öt8_t
 
	m¥evG
;

190 } 
	tISO2022Sèã
;

192 
	#UCNV_OPTIONS_VERSION_MASK
 0xf

	)

193 
	#UCNV_2022_MAX_CONVERTERS
 10

	)

196 
UC⁄vîãrSh¨edD©a
 *
	mmyC⁄vîãrAºay
[
UCNV_2022_MAX_CONVERTERS
];

197 
UC⁄vîãr
 *
	mcuºítC⁄vîãr
;

198 
Cnv2022Ty≥
 
	mcuºítTy≥
;

199 
ISO2022Sèã
 
	mtoU2022Sèã
, 
	m‰omU2022Sèã
;

200 
uöt32_t
 
	mkey
;

201 
uöt32_t
 
	mvîsi⁄
;

202 #ifde‡
U_ENABLE_GENERIC_ISO_2022


203 
UBoﬁ
 
	misFú°Buf„r
;

205 
UBoﬁ
 
	misEm±ySegmít
;

206 
	m«me
[30];

207 
	mloˇÀ
[3];

208 }
	tUC⁄vîãrD©aISO2022
;

214 
U_CFUNC
 

215 
u˙v_‰omUnicode_UTF8
(
UC⁄vîãrFromUnicodeArgs
 * 
¨gs
,

216 
UEº‹Code
 * 
îr
);

217 
U_CFUNC
 

218 
u˙v_‰omUnicode_UTF8_OFFSETS_LOGIC
(
UC⁄vîãrFromUnicodeArgs
 * 
¨gs
,

219 
UEº‹Code
 * 
îr
);

221 
	#ESC_2022
 0x1B

	)

225 
	mINVALID_2022
 = -1,

226 
	mVALID_NON_TERMINAL_2022
 = 0,

227 
	mVALID_TERMINAL_2022
 = 1,

228 
	mVALID_MAYBE_TERMINAL_2022
 = 2

229 } 
	tUCNV_TabÀSèãs_2022
;

268 c⁄° 
öt8_t
 
	gn‹mÆize_esq_ch¨s_2022
[256] = {

299 #ifde‡
U_ENABLE_GENERIC_ISO_2022


318 
	#MAX_STATES_2022
 74

	)

319 c⁄° 
öt32_t
 
	gescSeqSèãTabÀ_Key_2022
[
MAX_STATES_2022
] = {

332 #ifde‡
U_ENABLE_GENERIC_ISO_2022


334 c⁄° * c⁄° 
	gescSeqSèãTabÀ_Resu…_2022
[
MAX_STATES_2022
] = {

337 
NULL
 ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,NULL ,"latin1" ,"latin1"

339 ,"œtö1" ,
NULL
 ,"JISX-208" ,"ibm-5478" ,"JISX-208" ,NULL ,NULL ,NULL ,NULL ,"UTF8"

340 ,"ISO-8859-1" ,"ISO-8859-7" ,"JIS-X-208" ,
NULL
 ,"ibm-955" ,"ibm-367" ,"ibm-952" ,"ibm-949" ,"JISX-212" ,"ibm-1383"

343 ,"UTF16_Pœtf‹mEndün" ,"UTF16_Pœtf‹mEndün" ,"UTF16_Pœtf‹mEndün" ,
NULL
 ,"latin1" ,"ibm-912" ,"ibm-913" ,"ibm-914" ,"ibm-813" ,"ibm-1089"

349 c⁄° 
öt8_t
 
	gescSeqSèãTabÀ_VÆue_2022
[
MAX_STATES_2022
] = {

351 
VALID_NON_TERMINAL_2022
 ,VALID_NON_TERMINAL_2022 ,VALID_NON_TERMINAL_2022 ,VALID_NON_TERMINAL_2022 ,VALID_NON_TERMINAL_2022 ,
VALID_TERMINAL_2022
 ,VALID_TERMINAL_2022 ,VALID_NON_TERMINAL_2022 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022

352 ,
VALID_MAYBE_TERMINAL_2022
 ,
VALID_TERMINAL_2022
 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022

353 ,
VALID_TERMINAL_2022
 ,
VALID_NON_TERMINAL_2022
 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022 ,VALID_NON_TERMINAL_2022 ,VALID_NON_TERMINAL_2022 ,VALID_NON_TERMINAL_2022 ,VALID_NON_TERMINAL_2022 ,VALID_TERMINAL_2022

354 ,
VALID_TERMINAL_2022
 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022 ,
VALID_NON_TERMINAL_2022
 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022

355 ,
VALID_TERMINAL_2022
 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022

356 ,
VALID_TERMINAL_2022
 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022

357 ,
VALID_TERMINAL_2022
 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022 ,
VALID_NON_TERMINAL_2022
 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022

358 ,
VALID_TERMINAL_2022
 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022 ,VALID_TERMINAL_2022

364 #ifde‡
U_ENABLE_GENERIC_ISO_2022


365 
	mISO_2022
=0,

367 
	mISO_2022_JP
=1,

368 
	mISO_2022_KR
=2,

369 
	mISO_2022_CN
=3

370 } 
	tV¨ü¡2022
;

374 
_ISO2022O≥n
(
UC⁄vîãr
 *
˙v
, 
UC⁄vîãrLﬂdArgs
 *
pArgs
, 
UEº‹Code
 *
îr‹Code
);

377 
_ISO2022Clo£
(
UC⁄vîãr
 *
c⁄vîãr
);

380 
_ISO2022Re£t
(
UC⁄vîãr
 *
c⁄vîãr
, 
UC⁄vîãrRe£tChoi˚
 
choi˚
);

383 
_ISO2022gëName
(c⁄° 
UC⁄vîãr
* 
˙v
);

386 
_ISO_2022_WrôeSub
(
UC⁄vîãrFromUnicodeArgs
 *
¨gs
, 
öt32_t
 
off£tIndex
, 
UEº‹Code
 *
îr
);

388 
UC⁄vîãr
 *

389 
_ISO_2022_Sa„Cl⁄e
(c⁄° 
UC⁄vîãr
 *
˙v
, *
°ackBuf„r
, 
öt32_t
 *
pBuf„rSize
, 
UEº‹Code
 *
°©us
);

391 #ifde‡
U_ENABLE_GENERIC_ISO_2022


393 
T_UC⁄vîãr_toUnicode_ISO_2022_OFFSETS_LOGIC
(
UC⁄vîãrToUnicodeArgs
* 
¨gs
, 
UEº‹Code
* 
îr
);

397 c⁄° 
UC⁄vîãrSh¨edD©a
 
	g_ISO2022JPD©a
;

398 c⁄° 
UC⁄vîãrSh¨edD©a
 
	g_ISO2022KRD©a
;

399 c⁄° 
UC⁄vîãrSh¨edD©a
 
	g_ISO2022CND©a
;

404 
U_INLINE
 

405 
	$‰omUWrôeUI¡8
(
UC⁄vîãr
 *
˙v
,

406 c⁄° *
byãs
, 
öt32_t
 
Àngth
,

407 
uöt8_t
 **
èrgë
, c⁄° *
èrgëLimô
,

408 
öt32_t
 **
off£ts
,

409 
öt32_t
 
sour˚Index
,

410 
UEº‹Code
 *
pEº‹Code
)

412 *
èrgëCh¨s
 = (*)*
èrgë
;

413 
	`u˙v_‰omUWrôeByãs
(
˙v
, 
byãs
, 
Àngth
, &
èrgëCh¨s
, 
èrgëLimô
,

414 
off£ts
, 
sour˚Index
, 
pEº‹Code
);

415 *
èrgë
 = (
uöt8_t
*)
èrgëCh¨s
;

417 
	}
}

419 
U_INLINE
 

420 
	$£tInôülSèãToUnicodeKR
(
UC⁄vîãr
* 
c⁄vîãr
, 
UC⁄vîãrD©aISO2022
 *
myC⁄vîãrD©a
){

421 if(
myC⁄vîãrD©a
->
vîsi⁄
 == 1) {

422 
UC⁄vîãr
 *
˙v
 = 
myC⁄vîãrD©a
->
cuºítC⁄vîãr
;

424 
˙v
->
toUnicodeSètus
=0;

425 
˙v
->
mode
=0;

426 
˙v
->
toULígth
=0;

428 
	}
}

430 
U_INLINE
 

431 
	$£tInôülSèãFromUnicodeKR
(
UC⁄vîãr
* 
c⁄vîãr
,
UC⁄vîãrD©aISO2022
 *
myC⁄vîãrD©a
){

435 if–
c⁄vîãr
->
ch¨Eº‹Buf„rLígth
==0){

437 
c⁄vîãr
->
ch¨Eº‹Buf„rLígth
 = 4;

438 
c⁄vîãr
->
ch¨Eº‹Buf„r
[0] = 0x1b;

439 
c⁄vîãr
->
ch¨Eº‹Buf„r
[1] = 0x24;

440 
c⁄vîãr
->
ch¨Eº‹Buf„r
[2] = 0x29;

441 
c⁄vîãr
->
ch¨Eº‹Buf„r
[3] = 0x43;

443 if(
myC⁄vîãrD©a
->
vîsi⁄
 == 1) {

444 
UC⁄vîãr
 *
˙v
 = 
myC⁄vîãrD©a
->
cuºítC⁄vîãr
;

446 
˙v
->
‰omUCh¨32
=0;

447 
˙v
->
‰omUnicodeSètus
=1;

449 
	}
}

452 
	$_ISO2022O≥n
(
UC⁄vîãr
 *
˙v
, 
UC⁄vîãrLﬂdArgs
 *
pArgs
, 
UEº‹Code
 *
îr‹Code
){

454 
myLoˇÀ
[6]={' ',' ',' ',' ',' ',' '};

456 
˙v
->
exåaInfo
 = 
	`u¥v_mÆloc
 ( (
UC⁄vîãrD©aISO2022
));

457 if(
˙v
->
exåaInfo
 !
NULL
) {

458 
UC⁄vîãrNamePõ˚s
 
°ackPõ˚s
;

459 
UC⁄vîãrLﬂdArgs
 
°ackArgs
={ (
öt32_t
)(UConverterLoadArgs) };

460 
UC⁄vîãrD©aISO2022
 *
myC⁄vîãrD©a
=(UC⁄vîãrD©aISO2022 *Ë
˙v
->
exåaInfo
;

461 
uöt32_t
 
vîsi⁄
;

463 
°ackArgs
.
⁄lyTe°IsLﬂdabÀ
 = 
pArgs
->onlyTestIsLoadable;

465 
	`u¥v_mem£t
(
myC⁄vîãrD©a
, 0, (
UC⁄vîãrD©aISO2022
));

466 
myC⁄vîãrD©a
->
cuºítTy≥
 = 
ASCII1
;

467 
˙v
->
‰omUnicodeSètus
 =
FALSE
;

468 if(
pArgs
->
loˇÀ
){

469 
	`u¥v_°∫˝y
(
myLoˇÀ
, 
pArgs
->
loˇÀ
, (myLocale));

471 
vîsi⁄
 = 
pArgs
->
›ti⁄s
 & 
UCNV_OPTIONS_VERSION_MASK
;

472 
myC⁄vîãrD©a
->
vîsi⁄
 = version;

477 if((
myLoˇÀ
[0]=='j' &&

478 (
myLoˇÀ
[1]=='a'|| myLocale[1]=='p' || myLocale[1]=='k' ||

479 
myLoˇÀ
[1]=='s') &&

480 (
myLoˇÀ
[2]=='_' || myLocale[2]=='\0')))

482 
size_t
 
Àn
=0;

484 if(
vîsi⁄
>
MAX_JA_VERSION
) {

486 
myC⁄vîãrD©a
->
vîsi⁄
 = version = 0;

488 if(
jpCh¨£tMasks
[
vîsi⁄
]&
	`CSM
(
ISO8859_7
)) {

489 
myC⁄vîãrD©a
->
myC⁄vîãrAºay
[
ISO8859_7
] =

490 
	`u˙v_lﬂdSh¨edD©a
("ISO8859_7", &
°ackPõ˚s
, &
°ackArgs
, 
îr‹Code
);

492 i‡(
myLoˇÀ
[1]=='k') {

493 
myC⁄vîãrD©a
->
myC⁄vîãrAºay
[
JISX208
] =

494 
	`u˙v_lﬂdSh¨edD©a
("kddi-jisx-208-2007", &
°ackPõ˚s
, &
°ackArgs
, 
îr‹Code
);

495 } i‡(
myLoˇÀ
[1]=='s') {

496 
myC⁄vîãrD©a
->
myC⁄vîãrAºay
[
JISX208
] =

497 
	`u˙v_lﬂdSh¨edD©a
("so·b™k-jisx-208-2007", &
°ackPõ˚s
, &
°ackArgs
, 
îr‹Code
);

499 
myC⁄vîãrD©a
->
myC⁄vîãrAºay
[
JISX208
] =

500 
	`u˙v_lﬂdSh¨edD©a
("Shi·-JIS", &
°ackPõ˚s
, &
°ackArgs
, 
îr‹Code
);

504 if(
jpCh¨£tMasks
[
vîsi⁄
]&
	`CSM
(
JISX212
)) {

505 
myC⁄vîãrD©a
->
myC⁄vîãrAºay
[
JISX212
] =

506 
	`u˙v_lﬂdSh¨edD©a
("jisx-212", &
°ackPõ˚s
, &
°ackArgs
, 
îr‹Code
);

508 if(
jpCh¨£tMasks
[
vîsi⁄
]&
	`CSM
(
GB2312
)) {

509 
myC⁄vîãrD©a
->
myC⁄vîãrAºay
[
GB2312
] =

511 
	`u˙v_lﬂdSh¨edD©a
("no›-gb2312_gl", &
°ackPõ˚s
, &
°ackArgs
, 
îr‹Code
);

514 if(
jpCh¨£tMasks
[
vîsi⁄
]&
	`CSM
(
KSC5601
)) {

515 
myC⁄vîãrD©a
->
myC⁄vîãrAºay
[
KSC5601
] =

516 
	`u˙v_lﬂdSh¨edD©a
("ksc_5601", &
°ackPõ˚s
, &
°ackArgs
, 
îr‹Code
);

520 
˙v
->
sh¨edD©a
=(
UC⁄vîãrSh¨edD©a
*)(&
_ISO2022JPD©a
);

521 
	`u¥v_°r˝y
(
myC⁄vîãrD©a
->
loˇÀ
,"ja");

523 ()
	`u¥v_°r˝y
(
myC⁄vîãrD©a
->
«me
,"ISO_2022,locale=ja,version=");

524 
Àn
 = 
	`u¥v_°æí
(
myC⁄vîãrD©a
->
«me
);

525 
myC⁄vîãrD©a
->
«me
[
Àn
]=()(myC⁄vîãrD©a->
vîsi⁄
+()'0');

526 
myC⁄vîãrD©a
->
«me
[
Àn
+1]='\0';

528 if(
myLoˇÀ
[0]=='k' && (myLocale[1]=='o'|| myLocale[1]=='r') &&

529 (
myLoˇÀ
[2]=='_' || myLocale[2]=='\0'))

531 c⁄° *
˙vName
;

532 if(
vîsi⁄
==1) {

533 
˙vName
="icu-internal-25546";

536 
˙vName
="ksc_5601";

538 
myC⁄vîãrD©a
->
vîsi⁄
=version=0;

540 if(
pArgs
->
⁄lyTe°IsLﬂdabÀ
) {

541 
	`u˙v_ˇnCª©eC⁄vîãr
(
˙vName
, 
îr‹Code
);

542 
	`u¥v_‰ì
(
˙v
->
exåaInfo
);

543 
˙v
->
exåaInfo
=
NULL
;

546 
myC⁄vîãrD©a
->
cuºítC⁄vîãr
=
	`u˙v_›í
(
˙vName
, 
îr‹Code
);

547 i‡(
	`U_FAILURE
(*
îr‹Code
)) {

548 
	`_ISO2022Clo£
(
˙v
);

552 if(
vîsi⁄
==1) {

553 ()
	`u¥v_°r˝y
(
myC⁄vîãrD©a
->
«me
,"ISO_2022,locale=ko,version=1");

554 
	`u¥v_mem˝y
(
˙v
->
subCh¨s
, 
myC⁄vîãrD©a
->
cuºítC⁄vîãr
->subChars, 4);

555 
˙v
->
subCh¨Lí
 = 
myC⁄vîãrD©a
->
cuºítC⁄vîãr
->subCharLen;

557 ()
	`u¥v_°r˝y
(
myC⁄vîãrD©a
->
«me
,"ISO_2022,locale=ko,version=0");

561 
	`£tInôülSèãToUnicodeKR
(
˙v
, 
myC⁄vîãrD©a
);

562 
	`£tInôülSèãFromUnicodeKR
(
˙v
, 
myC⁄vîãrD©a
);

565 
˙v
->
sh¨edD©a
=(
UC⁄vîãrSh¨edD©a
*)&
_ISO2022KRD©a
;

566 
	`u¥v_°r˝y
(
myC⁄vîãrD©a
->
loˇÀ
,"ko");

569 if(((
myLoˇÀ
[0]=='z' && myLocale[1]=='h') || (myLocale[0]=='c'&& myLocale[1]=='n'))&&

570 (
myLoˇÀ
[2]=='_' || myLocale[2]=='\0'))

575 
myC⁄vîãrD©a
->
myC⁄vîãrAºay
[
GB2312_1
] =

576 
	`u˙v_lﬂdSh¨edD©a
("no›-gb2312_gl", &
°ackPõ˚s
, &
°ackArgs
, 
îr‹Code
);

577 if(
vîsi⁄
==1) {

578 
myC⁄vîãrD©a
->
myC⁄vîãrAºay
[
ISO_IR_165
] =

579 
	`u˙v_lﬂdSh¨edD©a
("no›-iso-ú-165", &
°ackPõ˚s
, &
°ackArgs
, 
îr‹Code
);

581 
myC⁄vîãrD©a
->
myC⁄vîãrAºay
[
CNS_11643
] =

582 
	`u˙v_lﬂdSh¨edD©a
("no›-˙s-11643", &
°ackPõ˚s
, &
°ackArgs
, 
îr‹Code
);

587 
˙v
->
sh¨edD©a
=(
UC⁄vîãrSh¨edD©a
*)&
_ISO2022CND©a
;

588 
	`u¥v_°r˝y
(
myC⁄vîãrD©a
->
loˇÀ
,"cn");

590 i‡(
vîsi⁄
==0){

591 
myC⁄vîãrD©a
->
vîsi⁄
 = 0;

592 ()
	`u¥v_°r˝y
(
myC⁄vîãrD©a
->
«me
,"ISO_2022,locale=zh,version=0");

593 }i‡(
vîsi⁄
==1){

594 
myC⁄vîãrD©a
->
vîsi⁄
 = 1;

595 ()
	`u¥v_°r˝y
(
myC⁄vîãrD©a
->
«me
,"ISO_2022,locale=zh,version=1");

597 
myC⁄vîãrD©a
->
vîsi⁄
 = 2;

598 ()
	`u¥v_°r˝y
(
myC⁄vîãrD©a
->
«me
,"ISO_2022,locale=zh,version=2");

602 #ifde‡
U_ENABLE_GENERIC_ISO_2022


603 
myC⁄vîãrD©a
->
isFú°Buf„r
 = 
TRUE
;

606 
˙v
->
ch¨Eº‹Buf„rLígth
 = 3;

607 
˙v
->
ch¨Eº‹Buf„r
[0] = 0x1b;

608 
˙v
->
ch¨Eº‹Buf„r
[1] = 0x25;

609 
˙v
->
ch¨Eº‹Buf„r
[2] = 0x42;

611 
˙v
->
sh¨edD©a
=(
UC⁄vîãrSh¨edD©a
*)&
_ISO2022D©a
;

613 
	`u¥v_°r˝y
(
myC⁄vîãrD©a
->
«me
,"ISO_2022");

615 *
îr‹Code
 = 
U_UNSUPPORTED_ERROR
;

620 
˙v
->
maxByãsPîUCh¨
=˙v->
sh¨edD©a
->
°©icD©a
->
maxByãsPîCh¨
;

622 if(
	`U_FAILURE
(*
îr‹Code
Ë|| 
pArgs
->
⁄lyTe°IsLﬂdabÀ
) {

623 
	`_ISO2022Clo£
(
˙v
);

626 *
îr‹Code
 = 
U_MEMORY_ALLOCATION_ERROR
;

628 
	}
}

632 
	$_ISO2022Clo£
(
UC⁄vîãr
 *
c⁄vîãr
) {

633 
UC⁄vîãrD©aISO2022
* 
myD©a
 =(UC⁄vîãrD©aISO2022 *Ë(
c⁄vîãr
->
exåaInfo
);

634 
UC⁄vîãrSh¨edD©a
 **
¨øy
 = 
myD©a
->
myC⁄vîãrAºay
;

635 
öt32_t
 
i
;

637 i‡(
c⁄vîãr
->
exåaInfo
 !
NULL
) {

639 
i
=0; i<
UCNV_2022_MAX_CONVERTERS
; i++) {

640 if(
¨øy
[
i
]!=
NULL
) {

641 
	`u˙v_u∆ﬂdSh¨edD©aIfRódy
(
¨øy
[
i
]);

645 
	`u˙v_˛o£
(
myD©a
->
cuºítC⁄vîãr
);

647 if(!
c⁄vîãr
->
isExåaLoˇl
){

648 
	`u¥v_‰ì
 (
c⁄vîãr
->
exåaInfo
);

649 
c⁄vîãr
->
exåaInfo
 = 
NULL
;

652 
	}
}

655 
	$_ISO2022Re£t
(
UC⁄vîãr
 *
c⁄vîãr
, 
UC⁄vîãrRe£tChoi˚
 
choi˚
) {

656 
UC⁄vîãrD©aISO2022
 *
myC⁄vîãrD©a
=(UC⁄vîãrD©aISO2022 *Ë(
c⁄vîãr
->
exåaInfo
);

657 if(
choi˚
<=
UCNV_RESET_TO_UNICODE
) {

658 
	`u¥v_mem£t
(&
myC⁄vîãrD©a
->
toU2022Sèã
, 0, (
ISO2022Sèã
));

659 
myC⁄vîãrD©a
->
key
 = 0;

660 
myC⁄vîãrD©a
->
isEm±ySegmít
 = 
FALSE
;

662 if(
choi˚
!=
UCNV_RESET_TO_UNICODE
) {

663 
	`u¥v_mem£t
(&
myC⁄vîãrD©a
->
‰omU2022Sèã
, 0, (
ISO2022Sèã
));

665 #ifde‡
U_ENABLE_GENERIC_ISO_2022


666 if(
myC⁄vîãrD©a
->
loˇÀ
[0] == 0){

667 if(
choi˚
<=
UCNV_RESET_TO_UNICODE
) {

668 
myC⁄vîãrD©a
->
isFú°Buf„r
 = 
TRUE
;

669 
myC⁄vîãrD©a
->
key
 = 0;

670 i‡(
c⁄vîãr
->
mode
 =
UCNV_SO
){

671 
	`u˙v_˛o£
 (
myC⁄vîãrD©a
->
cuºítC⁄vîãr
);

672 
myC⁄vîãrD©a
->
cuºítC⁄vîãr
=
NULL
;

674 
c⁄vîãr
->
mode
 = 
UCNV_SI
;

676 if(
choi˚
!=
UCNV_RESET_TO_UNICODE
) {

678 
c⁄vîãr
->
ch¨Eº‹Buf„rLígth
 = 3;

679 
c⁄vîãr
->
ch¨Eº‹Buf„r
[0] = 0x1b;

680 
c⁄vîãr
->
ch¨Eº‹Buf„r
[1] = 0x28;

681 
c⁄vîãr
->
ch¨Eº‹Buf„r
[2] = 0x42;

688 if(
myC⁄vîãrD©a
->
loˇÀ
[0] == 'k'){

689 if(
choi˚
<=
UCNV_RESET_TO_UNICODE
) {

690 
	`£tInôülSèãToUnicodeKR
(
c⁄vîãr
, 
myC⁄vîãrD©a
);

692 if(
choi˚
!=
UCNV_RESET_TO_UNICODE
) {

693 
	`£tInôülSèãFromUnicodeKR
(
c⁄vîãr
, 
myC⁄vîãrD©a
);

697 
	}
}

700 
	$_ISO2022gëName
(c⁄° 
UC⁄vîãr
* 
˙v
){

701 if(
˙v
->
exåaInfo
){

702 
UC⁄vîãrD©aISO2022
* 
myD©a
(UC⁄vîãrD©aISO2022*)
˙v
->
exåaInfo
;

703  
myD©a
->
«me
;

705  
NULL
;

706 
	}
}

723 c⁄° 
öt8_t
 
	g√xtSèãToUnicodeJP
[
MAX_STATES_2022
]= {

725 
INVALID_STATE
 ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,
SS2_STATE
 ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE

726 ,
ASCII
 ,
INVALID_STATE
 ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,
JISX201
 ,
HWKANA_7BIT
 ,JISX201 ,INVALID_STATE

727 ,
INVALID_STATE
 ,INVALID_STATE ,
JISX208
 ,
GB2312
 ,JISX208 ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE

728 ,
ISO8859_1
 ,
ISO8859_7
 ,
JISX208
 ,
INVALID_STATE
 ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,
KSC5601
 ,
JISX212
 ,INVALID_STATE

729 ,
INVALID_STATE
 ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE

730 ,
INVALID_STATE
 ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE

731 ,
INVALID_STATE
 ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE

732 ,
INVALID_STATE
 ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE

736 c⁄° 
öt8_t
 
	g√xtSèãToUnicodeCN
[
MAX_STATES_2022
]= {

738 
INVALID_STATE
 ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,
SS2_STATE
 ,
SS3_STATE
 ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE

739 ,
INVALID_STATE
 ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE

740 ,
INVALID_STATE
 ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE

741 ,
INVALID_STATE
 ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE

742 ,
INVALID_STATE
 ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,
GB2312_1
 ,INVALID_STATE ,
ISO_IR_165


743 ,
CNS_11643_1
 ,
CNS_11643_2
 ,
CNS_11643_3
 ,
CNS_11643_4
 ,
CNS_11643_5
 ,
CNS_11643_6
 ,
CNS_11643_7
 ,
INVALID_STATE
 ,INVALID_STATE ,INVALID_STATE

744 ,
INVALID_STATE
 ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE

745 ,
INVALID_STATE
 ,INVALID_STATE ,INVALID_STATE ,INVALID_STATE

749 
UCNV_TabÀSèãs_2022


750 
	$gëKey_2022
(
c
,
öt32_t
* 
key
,öt32_t* 
off£t
){

751 
öt32_t
 
togo
;

752 
öt32_t
 
low
 = 0;

753 
öt32_t
 
hi
 = 
MAX_STATES_2022
;

754 
öt32_t
 
ﬁdmid
=0;

756 
togo
 = 
n‹mÆize_esq_ch¨s_2022
[(
uöt8_t
)
c
];

757 if(
togo
 == 0) {

759 *
key
 = 0;

760 *
off£t
 = 0;

761  
INVALID_2022
;

763 
togo
 = (*
key
 << 5) +Åogo;

765 
hi
 !
low
) {

767 
öt32_t
 
mid
 = (
hi
+
low
) >> 1;

769 i‡(
mid
 =
ﬁdmid
)

772 i‡(
escSeqSèãTabÀ_Key_2022
[
mid
] > 
togo
){

773 
hi
 = 
mid
;

775 i‡(
escSeqSèãTabÀ_Key_2022
[
mid
] < 
togo
){

776 
low
 = 
mid
;

779 *
key
 = 
togo
;

780 *
off£t
 = 
mid
;

781  (
UCNV_TabÀSèãs_2022
)
escSeqSèãTabÀ_VÆue_2022
[
mid
];

783 
ﬁdmid
 = 
mid
;

787 *
key
 = 0;

788 *
off£t
 = 0;

789  
INVALID_2022
;

790 
	}
}

795 
	$ch™geSèã_2022
(
UC⁄vîãr
* 
_this
,

796 c⁄° ** 
sour˚
,

797 c⁄° * 
sour˚Limô
,

798 
V¨ü¡2022
 
v¨
,

799 
UEº‹Code
* 
îr
){

800 
UCNV_TabÀSèãs_2022
 
vÆue
;

801 
UC⁄vîãrD©aISO2022
* 
myD©a2022
 = ((UC⁄vîãrD©aISO2022*)
_this
->
exåaInfo
);

802 
uöt32_t
 
key
 = 
myD©a2022
->key;

803 
öt32_t
 
off£t
 = 0;

804 
öt8_t
 
öôülToULígth
 = 
_this
->
toULígth
;

805 
c
;

807 
vÆue
 = 
VALID_NON_TERMINAL_2022
;

808 *
sour˚
 < 
sour˚Limô
) {

809 
c
 = *(*
sour˚
)++;

810 
_this
->
toUByãs
[_this->
toULígth
++]=(
uöt8_t
)
c
;

811 
vÆue
 = 
	`gëKey_2022
(
c
,(
öt32_t
 *Ë&
key
, &
off£t
);

813 
vÆue
){

815 
VALID_NON_TERMINAL_2022
 :

819 
VALID_TERMINAL_2022
:

820 
key
 = 0;

821 
DONE
;

823 
INVALID_2022
:

824 
DONE
;

826 
VALID_MAYBE_TERMINAL_2022
:

827 #ifde‡
U_ENABLE_GENERIC_ISO_2022


829 if(
v¨
 =
ISO_2022
) {

831 
_this
->
toULígth
 = 0;

836 
vÆue
 = 
VALID_NON_TERMINAL_2022
;

842 
vÆue
 = 
VALID_TERMINAL_2022
;

843 
key
 = 0;

844 
DONE
;

849 
DONE
:

850 
myD©a2022
->
key
 = key;

852 i‡(
vÆue
 =
VALID_NON_TERMINAL_2022
) {

855 } i‡(
vÆue
 =
INVALID_2022
 ) {

856 *
îr
 = 
U_ILLEGAL_ESCAPE_SEQUENCE
;

858 
v¨
){

859 #ifde‡
U_ENABLE_GENERIC_ISO_2022


860 
ISO_2022
:

862 c⁄° *
cho£nC⁄vîãrName
 = 
escSeqSèãTabÀ_Resu…_2022
[
off£t
];

863 if(
cho£nC⁄vîãrName
 =
NULL
) {

865 *
îr
 = 
U_UNSUPPORTED_ESCAPE_SEQUENCE
;

866 
_this
->
toUCÆlbackRós⁄
 = 
UCNV_UNASSIGNED
;

870 
_this
->
mode
 = 
UCNV_SI
;

871 
	`u˙v_˛o£
(
myD©a2022
->
cuºítC⁄vîãr
);

872 
myD©a2022
->
cuºítC⁄vîãr
 = 
myUC⁄vîãr
 = 
	`u˙v_›í
(
cho£nC⁄vîãrName
, 
îr
);

873 if(
	`U_SUCCESS
(*
îr
)) {

874 
myUC⁄vîãr
->
‰omCh¨Eº‹Behaviour
 = 
UCNV_TO_U_CALLBACK_STOP
;

875 
_this
->
mode
 = 
UCNV_SO
;

880 
ISO_2022_JP
:

882 
SèãEnum
 
ãmpSèã
=(SèãEnum)
√xtSèãToUnicodeJP
[
off£t
];

883 
ãmpSèã
) {

884 
INVALID_STATE
:

885 *
îr
 = 
U_UNSUPPORTED_ESCAPE_SEQUENCE
;

887 
SS2_STATE
:

888 if(
myD©a2022
->
toU2022Sèã
.
cs
[2]!=0) {

889 if(
myD©a2022
->
toU2022Sèã
.
g
<2) {

890 
myD©a2022
->
toU2022Sèã
.
¥evG
=myD©a2022->toU2022Sèã.
g
;

892 
myD©a2022
->
toU2022Sèã
.
g
=2;

895 *
îr
 = 
U_ILLEGAL_ESCAPE_SEQUENCE
;

899 
ISO8859_1
:

900 
ISO8859_7
:

901 if((
jpCh¨£tMasks
[
myD©a2022
->
vîsi⁄
] & 
	`CSM
(
ãmpSèã
)) == 0) {

902 *
îr
 = 
U_UNSUPPORTED_ESCAPE_SEQUENCE
;

905 
myD©a2022
->
toU2022Sèã
.
cs
[2]=(
öt8_t
)
ãmpSèã
;

909 if((
jpCh¨£tMasks
[
myD©a2022
->
vîsi⁄
] & 
	`CSM
(
ãmpSèã
)) == 0) {

910 *
îr
 = 
U_UNSUPPORTED_ESCAPE_SEQUENCE
;

913 
myD©a2022
->
toU2022Sèã
.
cs
[0]=(
öt8_t
)
ãmpSèã
;

919 
ISO_2022_CN
:

921 
SèãEnum
 
ãmpSèã
=(SèãEnum)
√xtSèãToUnicodeCN
[
off£t
];

922 
ãmpSèã
) {

923 
INVALID_STATE
:

924 *
îr
 = 
U_UNSUPPORTED_ESCAPE_SEQUENCE
;

926 
SS2_STATE
:

927 if(
myD©a2022
->
toU2022Sèã
.
cs
[2]!=0) {

928 if(
myD©a2022
->
toU2022Sèã
.
g
<2) {

929 
myD©a2022
->
toU2022Sèã
.
¥evG
=myD©a2022->toU2022Sèã.
g
;

931 
myD©a2022
->
toU2022Sèã
.
g
=2;

934 *
îr
 = 
U_ILLEGAL_ESCAPE_SEQUENCE
;

937 
SS3_STATE
:

938 if(
myD©a2022
->
toU2022Sèã
.
cs
[3]!=0) {

939 if(
myD©a2022
->
toU2022Sèã
.
g
<2) {

940 
myD©a2022
->
toU2022Sèã
.
¥evG
=myD©a2022->toU2022Sèã.
g
;

942 
myD©a2022
->
toU2022Sèã
.
g
=3;

945 *
îr
 = 
U_ILLEGAL_ESCAPE_SEQUENCE
;

948 
ISO_IR_165
:

949 if(
myD©a2022
->
vîsi⁄
==0) {

950 *
îr
 = 
U_UNSUPPORTED_ESCAPE_SEQUENCE
;

954 
GB2312_1
:

956 
CNS_11643_1
:

957 
myD©a2022
->
toU2022Sèã
.
cs
[1]=(
öt8_t
)
ãmpSèã
;

959 
CNS_11643_2
:

960 
myD©a2022
->
toU2022Sèã
.
cs
[2]=(
öt8_t
)
ãmpSèã
;

964 if(
myD©a2022
->
vîsi⁄
==0) {

965 *
îr
 = 
U_UNSUPPORTED_ESCAPE_SEQUENCE
;

967 
myD©a2022
->
toU2022Sèã
.
cs
[3]=(
öt8_t
)
ãmpSèã
;

973 
ISO_2022_KR
:

974 if(
off£t
==0x30){

977 *
îr
 = 
U_UNSUPPORTED_ESCAPE_SEQUENCE
;

982 *
îr
 = 
U_ILLEGAL_ESCAPE_SEQUENCE
;

986 if(
	`U_SUCCESS
(*
îr
)) {

987 
_this
->
toULígth
 = 0;

988 } if(*
îr
==
U_ILLEGAL_ESCAPE_SEQUENCE
) {

989 if(
_this
->
toULígth
>1) {

1002 
öt8_t
 
backOutDi°™˚
=
_this
->
toULígth
-1;

1003 
öt8_t
 
byãsFromThisBuf„r
=
_this
->
toULígth
-
öôülToULígth
;

1004 if(
backOutDi°™˚
<=
byãsFromThisBuf„r
) {

1006 *
sour˚
-=
backOutDi°™˚
;

1009 
_this
->
¥eToULígth
=(
öt8_t
)(
byãsFromThisBuf„r
-
backOutDi°™˚
);

1012 
	`u¥v_mem˝y
(
_this
->
¥eToU
, _this->
toUByãs
+1, -_this->
¥eToULígth
);

1013 *
sour˚
-=
byãsFromThisBuf„r
;

1015 
_this
->
toULígth
=1;

1017 } if(*
îr
==
U_UNSUPPORTED_ESCAPE_SEQUENCE
) {

1018 
_this
->
toUCÆlbackRós⁄
 = 
UCNV_UNASSIGNED
;

1020 
	}
}

1030 
U_INLINE
 const *

1031 
	$gëEndOfBuf„r_2022
(c⁄° ** 
sour˚
,

1032 c⁄° * 
sour˚Limô
,

1033 
UBoﬁ
 
Êush
){

1035 c⁄° * 
mySour˚
 = *
sour˚
;

1037 #ifde‡
U_ENABLE_GENERIC_ISO_2022


1038 i‡(*
sour˚
 >
sour˚Limô
)

1039  
sour˚Limô
;

1043 i‡(*
mySour˚
 =
ESC_2022
){

1044 
öt8_t
 
i
;

1045 
öt32_t
 
key
 = 0;

1046 
öt32_t
 
off£t
;

1047 
UCNV_TabÀSèãs_2022
 
vÆue
 = 
VALID_NON_TERMINAL_2022
;

1055 
i
=0;

1056 (
mySour˚
+
i
 < 
sour˚Limô
)&&(
vÆue
 =
VALID_NON_TERMINAL_2022
);

1057 
i
++) {

1058 
vÆue
 = 
	`gëKey_2022
(*(
mySour˚
+
i
), &
key
, &
off£t
);

1060 i‡(
vÆue
 > 0 || *
mySour˚
==
ESC_2022
)

1061  
mySour˚
;

1063 i‡((
vÆue
 =
VALID_NON_TERMINAL_2022
)&&(!
Êush
) )

1064  
sour˚Limô
;

1066 }++
mySour˚
 < 
sour˚Limô
);

1068  
sour˚Limô
;

1070 
mySour˚
 < 
sour˚Limô
 && *mySour˚ !
ESC_2022
) {

1071 ++
mySour˚
;

1073  
mySour˚
;

1075 
	}
}

1082 
U_INLINE
 
öt32_t


1083 
	$MBCS_FROM_UCHAR32_ISO2022
(
UC⁄vîãrSh¨edD©a
* 
sh¨edD©a
,

1084 
UCh¨32
 
c
,

1085 
uöt32_t
* 
vÆue
,

1086 
UBoﬁ
 
u£FÆlback
,

1087 
ouçutTy≥
)

1089 c⁄° 
öt32_t
 *
cx
;

1090 c⁄° 
uöt16_t
 *
èbÀ
;

1091 
uöt32_t
 
°age2E¡ry
;

1092 
uöt32_t
 
myVÆue
;

1093 
öt32_t
 
Àngth
;

1094 c⁄° 
uöt8_t
 *
p
;

1101 if(
c
<0x10000 || (
sh¨edD©a
->
mbcs
.
unicodeMask
&
UCNV_HAS_SUPPLEMENTARY
)) {

1102 
èbÀ
=
sh¨edD©a
->
mbcs
.
‰omUnicodeTabÀ
;

1103 
°age2E¡ry
=
	`MBCS_STAGE_2_FROM_U
(
èbÀ
, 
c
);

1105 if(
ouçutTy≥
==
MBCS_OUTPUT_2
){

1106 
myVÆue
=
	`MBCS_VALUE_2_FROM_STAGE_2
(
sh¨edD©a
->
mbcs
.
‰omUnicodeByãs
, 
°age2E¡ry
, 
c
);

1107 if(
myVÆue
<=0xff) {

1108 
Àngth
=1;

1110 
Àngth
=2;

1113 
p
=
	`MBCS_POINTER_3_FROM_STAGE_2
(
sh¨edD©a
->
mbcs
.
‰omUnicodeByãs
, 
°age2E¡ry
, 
c
);

1114 
myVÆue
=((
uöt32_t
)*
p
<<16)|((uint32_t)p[1]<<8)|p[2];

1115 if(
myVÆue
<=0xff) {

1116 
Àngth
=1;

1117 } if(
myVÆue
<=0xffff) {

1118 
Àngth
=2;

1120 
Àngth
=3;

1124 if((
°age2E¡ry
&(1<<(16+(
c
&0xf))))!=0) {

1126 *
vÆue
=
myVÆue
;

1127  
Àngth
;

1128 } if(
	`FROM_U_USE_FALLBACK
(
u£FÆlback
, 
c
Ë&& 
myVÆue
!=0) {

1134 *
vÆue
=
myVÆue
;

1135  -
Àngth
;

1139 
cx
=
sh¨edD©a
->
mbcs
.
extIndexes
;

1140 if(
cx
!=
NULL
) {

1141  
	`u˙v_extSim∂eM©chFromU
(
cx
, 
c
, 
vÆue
, 
u£FÆlback
);

1146 
	}
}

1153 
U_INLINE
 
öt32_t


1154 
	$MBCS_SINGLE_FROM_UCHAR32
(
UC⁄vîãrSh¨edD©a
* 
sh¨edD©a
,

1155 
UCh¨32
 
c
,

1156 
uöt32_t
* 
ªtvÆ
,

1157 
UBoﬁ
 
u£FÆlback
)

1159 c⁄° 
uöt16_t
 *
èbÀ
;

1160 
öt32_t
 
vÆue
;

1162 if(
c
>=0x10000 && !(
sh¨edD©a
->
mbcs
.
unicodeMask
&
UCNV_HAS_SUPPLEMENTARY
)) {

1166 
èbÀ
=
sh¨edD©a
->
mbcs
.
‰omUnicodeTabÀ
;

1168 
vÆue
=
	`MBCS_SINGLE_RESULT_FROM_U
(
èbÀ
, (
uöt16_t
 *)
sh¨edD©a
->
mbcs
.
‰omUnicodeByãs
, 
c
);

1170 *
ªtvÆ
=(
uöt32_t
)(
vÆue
&0xff);

1171 if(
vÆue
>=0xf00) {

1173 } if(
u£FÆlback
 ? 
vÆue
>=0x800 : value>=0xc00) {

1178 
	}
}

1186 
U_INLINE
 
uöt32_t


1187 
	$_2022FromGR94DBCS
(
uöt32_t
 
vÆue
) {

1188 if–(
uöt16_t
)(
vÆue
 - 0xa1a1) <= (0xfefe - 0xa1a1) &&

1189 (
uöt8_t
)(
vÆue
 - 0xa1) <= (0xfe - 0xa1)

1191  
vÆue
 - 0x8080;

1195 
	}
}

1203 
U_INLINE
 
uöt32_t


1204 
	$_2022ToGR94DBCS
(
uöt32_t
 
vÆue
) {

1205 
uöt32_t
 
ªtu∫VÆue
 = 
vÆue
 + 0x8080;

1206 if–(
uöt16_t
)(
ªtu∫VÆue
 - 0xa1a1) <= (0xfefe - 0xa1a1) &&

1207 (
uöt8_t
)(
ªtu∫VÆue
 - 0xa1) <= (0xfe - 0xa1)) {

1208  
ªtu∫VÆue
;

1210  
vÆue
;

1212 
	}
}

1215 #ifde‡
U_ENABLE_GENERIC_ISO_2022


1224 
	$T_UC⁄vîãr_toUnicode_ISO_2022_OFFSETS_LOGIC
(
UC⁄vîãrToUnicodeArgs
* 
¨gs
,

1225 
UEº‹Code
* 
îr
){

1226 c⁄° * 
mySour˚Limô
, *
ªÆSour˚Limô
;

1227 c⁄° * 
sour˚Sèπ
;

1228 c⁄° 
UCh¨
* 
myT¨gëSèπ
;

1229 
UC⁄vîãr
* 
ßveThis
;

1230 
UC⁄vîãrD©aISO2022
* 
myD©a
;

1231 
öt8_t
 
Àngth
;

1233 
ßveThis
 = 
¨gs
->
c⁄vîãr
;

1234 
myD©a
=((
UC⁄vîãrD©aISO2022
*)(
ßveThis
->
exåaInfo
));

1236 
ªÆSour˚Limô
 = 
¨gs
->
sour˚Limô
;

1237 
¨gs
->
sour˚
 < 
ªÆSour˚Limô
) {

1238 if(
myD©a
->
key
 == 0) {

1240 
mySour˚Limô
 = 
	`gëEndOfBuf„r_2022
(&(
¨gs
->
sour˚
), 
ªÆSour˚Limô
,árgs->
Êush
);

1242 if(
¨gs
->
sour˚
 < 
mySour˚Limô
) {

1243 if(
myD©a
->
cuºítC⁄vîãr
==
NULL
) {

1244 
myD©a
->
cuºítC⁄vîãr
 = 
	`u˙v_›í
("ASCII",
îr
);

1245 if(
	`U_FAILURE
(*
îr
)){

1249 
myD©a
->
cuºítC⁄vîãr
->
‰omCh¨Eº‹Behaviour
 = 
UCNV_TO_U_CALLBACK_STOP
;

1250 
ßveThis
->
mode
 = 
UCNV_SO
;

1254 
myD©a
->
isFú°Buf„r
=
FALSE
;

1255 
sour˚Sèπ
 = 
¨gs
->
sour˚
;

1256 
myT¨gëSèπ
 = 
¨gs
->
èrgë
;

1257 
¨gs
->
c⁄vîãr
 = 
myD©a
->
cuºítC⁄vîãr
;

1258 
	`u˙v_toUnicode
(
¨gs
->
c⁄vîãr
,

1259 &
¨gs
->
èrgë
,

1260 
¨gs
->
èrgëLimô
,

1261 &
¨gs
->
sour˚
,

1262 
mySour˚Limô
,

1263 
¨gs
->
off£ts
,

1264 (
UBoﬁ
)(
¨gs
->
Êush
 && 
mySour˚Limô
 =
ªÆSour˚Limô
),

1265 
îr
);

1266 
¨gs
->
c⁄vîãr
 = 
ßveThis
;

1268 i‡(*
îr
 =
U_BUFFER_OVERFLOW_ERROR
) {

1270 
Àngth
 = 
ßveThis
->
UCh¨Eº‹Buf„rLígth
 = 
myD©a
->
cuºítC⁄vîãr
->UCharErrorBufferLength;

1271 
myD©a
->
cuºítC⁄vîãr
->
UCh¨Eº‹Buf„rLígth
 = 0;

1272 if(
Àngth
 > 0) {

1273 
	`u¥v_mem˝y
(
ßveThis
->
UCh¨Eº‹Buf„r
,

1274 
myD©a
->
cuºítC⁄vîãr
->
UCh¨Eº‹Buf„r
,

1275 
Àngth
*
U_SIZEOF_UCHAR
);

1289 i‡(
	`U_FAILURE
(*
îr
) ||

1290 (
¨gs
->
sour˚
 =
ªÆSour˚Limô
) ||

1291 (
¨gs
->
off£ts
 !
NULL
 && (¨gs->
èrgë
 !
myT¨gëSèπ
 ||árgs->
sour˚
 !
sour˚Sèπ
) ||

1292 (
mySour˚Limô
 < 
ªÆSour˚Limô
 && 
myD©a
->
cuºítC⁄vîãr
->
toULígth
 > 0))

1295 if(
	`U_FAILURE
(*
îr
)) {

1296 
Àngth
 = 
ßveThis
->
övÆidCh¨Lígth
 = 
myD©a
->
cuºítC⁄vîãr
->invalidCharLength;

1297 if(
Àngth
 > 0) {

1298 
	`u¥v_mem˝y
(
ßveThis
->
övÆidCh¨Buf„r
, 
myD©a
->
cuºítC⁄vîãr
->övÆidCh¨Buf„r, 
Àngth
);

1301 
Àngth
 = 
ßveThis
->
toULígth
 = 
myD©a
->
cuºítC⁄vîãr
->toULength;

1302 if(
Àngth
 > 0) {

1303 
	`u¥v_mem˝y
(
ßveThis
->
toUByãs
, 
myD©a
->
cuºítC⁄vîãr
->toUByãs, 
Àngth
);

1304 if(
¨gs
->
sour˚
 < 
mySour˚Limô
) {

1305 *
îr
 = 
U_TRUNCATED_CHAR_FOUND
;

1314 
sour˚Sèπ
 = 
¨gs
->
sour˚
;

1315 
	`ch™geSèã_2022
(
¨gs
->
c⁄vîãr
,

1316 &(
¨gs
->
sour˚
),

1317 
ªÆSour˚Limô
,

1318 
ISO_2022
,

1319 
îr
);

1320 i‡(
	`U_FAILURE
(*
îr
Ë|| (
¨gs
->
sour˚
 !
sour˚Sèπ
 &&árgs->
off£ts
 !
NULL
)) {

1325 
	}
}

1333 
	$toUnicodeCÆlback
(
UC⁄vîãr
 *
˙v
,

1334 c⁄° 
uöt32_t
 
sour˚Ch¨
, c⁄° uöt32_à
èrgëUniCh¨
,

1335 
UEº‹Code
* 
îr
){

1336 if(
sour˚Ch¨
>0xff){

1337 
˙v
->
toUByãs
[0] = (
uöt8_t
)(
sour˚Ch¨
>>8);

1338 
˙v
->
toUByãs
[1] = (
uöt8_t
)
sour˚Ch¨
;

1339 
˙v
->
toULígth
 = 2;

1342 
˙v
->
toUByãs
[0] =(Ë
sour˚Ch¨
;

1343 
˙v
->
toULígth
 = 1;

1346 if(
èrgëUniCh¨
 =(
missögCh¨M¨kî
-1 )){

1347 *
îr
 = 
U_INVALID_CHAR_FOUND
;

1350 *
îr
 = 
U_ILLEGAL_CHAR_FOUND
;

1352 
	}
}

1397 c⁄° 
SèãEnum
 
	gjpCh¨£tPªf
[]={

1398 
ASCII
,

1399 
JISX201
,

1400 
ISO8859_1
,

1401 
ISO8859_7
,

1402 
JISX208
,

1403 
JISX212
,

1404 
GB2312
,

1405 
KSC5601
,

1406 
HWKANA_7BIT


1413 c⁄° 
	gescSeqCh¨s
[][6] ={

1425 c⁄° 
öt8_t
 
	gescSeqCh¨sLí
[] ={

1455 
U_INLINE
 
uöt32_t


1456 
	$jisx201ToU
(
uöt32_t
 
vÆue
) {

1457 if(
vÆue
 < 0x5c) {

1458  
vÆue
;

1459 } if(
vÆue
 == 0x5c) {

1461 } if(
vÆue
 == 0x7e) {

1464  
vÆue
;

1466 
	}
}

1469 
U_INLINE
 
uöt32_t


1470 
	$jisx201FromU
(
uöt32_t
 
vÆue
) {

1471 if(
vÆue
<=0x7f) {

1472 if(
vÆue
!=0x5c && value!=0x7e) {

1473  
vÆue
;

1475 } if(
vÆue
==0xa5) {

1477 } if(
vÆue
==0x203e) {

1481 
	}
}

1488 
U_INLINE
 
uöt32_t


1489 
	$_2022FromSJIS
(
uöt32_t
 
vÆue
) {

1490 
uöt8_t
 
åaû
;

1492 if(
vÆue
 > 0xEFFC) {

1496 
åaû
 = (
uöt8_t
)
vÆue
;

1498 
vÆue
 &= 0xff00;

1499 if(
vÆue
 <= 0x9f00) {

1500 
vÆue
 -= 0x7000;

1502 
vÆue
 -= 0xb000;

1504 
vÆue
 <<= 1;

1506 if(
åaû
 <= 0x9e) {

1507 
vÆue
 -= 0x100;

1508 if(
åaû
 <= 0x7e) {

1509 
vÆue
 |
åaû
 - 0x1f;

1511 
vÆue
 |
åaû
 - 0x20;

1514 
vÆue
 |
åaû
 - 0x7e;

1516  
vÆue
;

1517 
	}
}

1526 
U_INLINE
 

1527 
	$_2022ToSJIS
(
uöt8_t
 
c1
, uöt8_à
c2
, 
byãs
[2]) {

1528 if(
c1
&1) {

1529 ++
c1
;

1530 if(
c2
 <= 0x5f) {

1531 
c2
 += 0x1f;

1532 } if(
c2
 <= 0x7e) {

1533 
c2
 += 0x20;

1535 
c2
 = 0;

1538 if((
uöt8_t
)(
c2
-0x21) <= ((0x7e)-0x21)) {

1539 
c2
 += 0x7e;

1541 
c2
 = 0;

1544 
c1
 >>= 1;

1545 if(
c1
 <= 0x2f) {

1546 
c1
 += 0x70;

1547 } if(
c1
 <= 0x3f) {

1548 
c1
 += 0xb0;

1550 
c1
 = 0;

1552 
byãs
[0] = ()
c1
;

1553 
byãs
[1] = ()
c2
;

1554 
	}
}

1563 c⁄° 
uöt16_t
 
	ghwk™a_fb
[
HWKANA_END
 - 
HWKANA_START
 + 1] = {

1630 
	$UC⁄vîãr_‰omUnicode_ISO_2022_JP_OFFSETS_LOGIC
(
UC⁄vîãrFromUnicodeArgs
* 
¨gs
, 
UEº‹Code
* 
îr
) {

1631 
UC⁄vîãr
 *
˙v
 = 
¨gs
->
c⁄vîãr
;

1632 
UC⁄vîãrD©aISO2022
 *
c⁄vîãrD©a
;

1633 
ISO2022Sèã
 *
pFromU2022Sèã
;

1634 
uöt8_t
 *
èrgë
 = (uöt8_à*Ë
¨gs
->target;

1635 c⁄° 
uöt8_t
 *
èrgëLimô
 = (c⁄° uöt8_à*Ë
¨gs
->targetLimit;

1636 c⁄° 
UCh¨
* 
sour˚
 = 
¨gs
->source;

1637 c⁄° 
UCh¨
* 
sour˚Limô
 = 
¨gs
->sourceLimit;

1638 
öt32_t
* 
off£ts
 = 
¨gs
->offsets;

1639 
UCh¨32
 
sour˚Ch¨
;

1640 
buf„r
[8];

1641 
öt32_t
 
Àn
, 
outLí
;

1642 
öt8_t
 
choi˚s
[10];

1643 
öt32_t
 
choi˚Cou¡
;

1644 
uöt32_t
 
èrgëVÆue
 = 0;

1645 
UBoﬁ
 
u£FÆlback
;

1647 
öt32_t
 
i
;

1648 
öt8_t
 
cs
, 
g
;

1651 
c⁄vîãrD©a
 = (
UC⁄vîãrD©aISO2022
*)
˙v
->
exåaInfo
;

1652 
pFromU2022Sèã
 = &
c⁄vîãrD©a
->
‰omU2022Sèã
;

1654 
choi˚Cou¡
 = 0;

1657 if((
sour˚Ch¨
 = 
˙v
->
‰omUCh¨32
)!=0 && 
èrgë
< 
èrgëLimô
) {

1658 
gëTøû
;

1661 
sour˚
 < 
sour˚Limô
) {

1662 if(
èrgë
 < 
èrgëLimô
) {

1664 
sour˚Ch¨
 = *(
sour˚
++);

1666 if(
	`UTF_IS_SURROGATE
(
sour˚Ch¨
)) {

1667 if(
	`UTF_IS_SURROGATE_FIRST
(
sour˚Ch¨
)) {

1668 
gëTøû
:

1670 if(
sour˚
 < 
sour˚Limô
) {

1672 
UCh¨
 
åaû
=(UCh¨Ë*
sour˚
;

1673 if(
	`UTF_IS_SECOND_SURROGATE
(
åaû
)) {

1674 
sour˚
++;

1675 
sour˚Ch¨
=
	`UTF16_GET_PAIR_VALUE
(sour˚Ch¨, 
åaû
);

1676 
˙v
->
‰omUCh¨32
=0x00;

1682 *
îr
=
U_ILLEGAL_CHAR_FOUND
;

1683 
˙v
->
‰omUCh¨32
=
sour˚Ch¨
;

1688 
˙v
->
‰omUCh¨32
=
sour˚Ch¨
;

1694 *
îr
=
U_ILLEGAL_CHAR_FOUND
;

1695 
˙v
->
‰omUCh¨32
=
sour˚Ch¨
;

1701 if(
	`IS_2022_CONTROL
(
sour˚Ch¨
)) {

1703 *
îr
=
U_ILLEGAL_CHAR_FOUND
;

1704 
˙v
->
‰omUCh¨32
=
sour˚Ch¨
;

1710 if(
choi˚Cou¡
 == 0) {

1711 
uöt16_t
 
csm
;

1717 
csm
 = 
jpCh¨£tMasks
[
c⁄vîãrD©a
->
vîsi⁄
];

1718 
choi˚Cou¡
 = 0;

1721 if(
c⁄vîãrD©a
->
vîsi⁄
 == 3 || converterData->version == 4) {

1722 
choi˚s
[
choi˚Cou¡
++] = (
öt8_t
)
HWKANA_7BIT
;

1725 
csm
 &~
	`CSM
(
HWKANA_7BIT
);

1728 
choi˚s
[
choi˚Cou¡
++] = 
cs
 = 
pFromU2022Sèã
->cs[0];

1729 
csm
 &~
	`CSM
(
cs
);

1732 if((
cs
 = 
pFromU2022Sèã
->cs[2]) != 0) {

1733 
choi˚s
[
choi˚Cou¡
++] = 
cs
;

1734 
csm
 &~
	`CSM
(
cs
);

1738 
i
 = 0; i < 
	`LENGTHOF
(
jpCh¨£tPªf
); ++i) {

1739 
cs
 = (
öt8_t
)
jpCh¨£tPªf
[
i
];

1740 if(
	`CSM
(
cs
Ë& 
csm
) {

1741 
choi˚s
[
choi˚Cou¡
++] = 
cs
;

1742 
csm
 &~
	`CSM
(
cs
);

1747 
cs
 = 
g
 = 0;

1753 
Àn
 = 0;

1760 
u£FÆlback
 = 
˙v
->useFallback;

1762 
i
 = 0; i < 
choi˚Cou¡
 && 
Àn
 <= 0; ++i) {

1763 
uöt32_t
 
vÆue
;

1764 
öt32_t
 
Àn2
;

1765 
öt8_t
 
cs0
 = 
choi˚s
[
i
];

1766 
cs0
) {

1767 
ASCII
:

1768 if(
sour˚Ch¨
 <= 0x7f) {

1769 
èrgëVÆue
 = (
uöt32_t
)
sour˚Ch¨
;

1770 
Àn
 = 1;

1771 
cs
 = 
cs0
;

1772 
g
 = 0;

1775 
ISO8859_1
:

1776 if(
GR96_START
 <
sour˚Ch¨
 && sour˚Ch¨ <
GR96_END
) {

1777 
èrgëVÆue
 = (
uöt32_t
)
sour˚Ch¨
 - 0x80;

1778 
Àn
 = 1;

1779 
cs
 = 
cs0
;

1780 
g
 = 2;

1783 
HWKANA_7BIT
:

1784 if((
uöt32_t
)(
sour˚Ch¨
 - 
HWKANA_START
Ë<(
HWKANA_END
 - HWKANA_START)) {

1785 if(
c⁄vîãrD©a
->
vîsi⁄
==3) {

1788 
èrgëVÆue
 = (
uöt32_t
)(
sour˚Ch¨
 - (
HWKANA_START
 - 0x21));

1789 
Àn
 = 1;

1790 
pFromU2022Sèã
->
cs
[1] = c†
cs0
;

1791 
g
 = 1;

1792 } if(
c⁄vîãrD©a
->
vîsi⁄
==4) {

1795 
èrgëVÆue
 = (
uöt32_t
)(
sour˚Ch¨
 - (
HWKANA_START
 - 0xa1));

1796 
Àn
 = 1;

1798 
cs
 = 
pFromU2022Sèã
->cs[0];

1799 if(
	`IS_JP_DBCS
(
cs
)) {

1801 
cs
 = (
öt8_t
)
JISX201
;

1804 
g
 = 0;

1809 
JISX201
:

1811 
vÆue
 = 
	`jisx201FromU
(
sour˚Ch¨
);

1812 if(
vÆue
 <= 0x7f) {

1813 
èrgëVÆue
 = 
vÆue
;

1814 
Àn
 = 1;

1815 
cs
 = 
cs0
;

1816 
g
 = 0;

1817 
u£FÆlback
 = 
FALSE
;

1820 
JISX208
:

1822 
Àn2
 = 
	`MBCS_FROM_UCHAR32_ISO2022
(

1823 
c⁄vîãrD©a
->
myC⁄vîãrAºay
[
cs0
],

1824 
sour˚Ch¨
, &
vÆue
,

1825 
u£FÆlback
, 
MBCS_OUTPUT_2
);

1826 if(
Àn2
 =2 || (Àn2 =-2 && 
Àn
 == 0)) {

1827 
vÆue
 = 
	`_2022FromSJIS
(value);

1828 if(
vÆue
 != 0) {

1829 
èrgëVÆue
 = 
vÆue
;

1830 
Àn
 = 
Àn2
;

1831 
cs
 = 
cs0
;

1832 
g
 = 0;

1833 
u£FÆlback
 = 
FALSE
;

1835 } if(
Àn
 =0 && 
u£FÆlback
 &&

1836 (
uöt32_t
)(
sour˚Ch¨
 - 
HWKANA_START
Ë<(
HWKANA_END
 - HWKANA_START)) {

1837 
èrgëVÆue
 = 
hwk™a_fb
[
sour˚Ch¨
 - 
HWKANA_START
];

1838 
Àn
 = -2;

1839 
cs
 = 
cs0
;

1840 
g
 = 0;

1841 
u£FÆlback
 = 
FALSE
;

1844 
ISO8859_7
:

1846 
Àn2
 = 
	`MBCS_SINGLE_FROM_UCHAR32
(

1847 
c⁄vîãrD©a
->
myC⁄vîãrAºay
[
cs0
],

1848 
sour˚Ch¨
, &
vÆue
,

1849 
u£FÆlback
);

1850 if(
Àn2
 !0 && !÷í2 < 0 && 
Àn
 !0Ë&& 
GR96_START
 <
vÆue
 && vÆuê<
GR96_END
) {

1851 
èrgëVÆue
 = 
vÆue
 - 0x80;

1852 
Àn
 = 
Àn2
;

1853 
cs
 = 
cs0
;

1854 
g
 = 2;

1855 
u£FÆlback
 = 
FALSE
;

1860 
Àn2
 = 
	`MBCS_FROM_UCHAR32_ISO2022
(

1861 
c⁄vîãrD©a
->
myC⁄vîãrAºay
[
cs0
],

1862 
sour˚Ch¨
, &
vÆue
,

1863 
u£FÆlback
, 
MBCS_OUTPUT_2
);

1864 if(
Àn2
 =2 || (Àn2 =-2 && 
Àn
 == 0)) {

1865 if(
cs0
 =
KSC5601
) {

1871 
vÆue
 = 
	`_2022FromGR94DBCS
(value);

1872 if(
vÆue
 == 0) {

1876 
èrgëVÆue
 = 
vÆue
;

1877 
Àn
 = 
Àn2
;

1878 
cs
 = 
cs0
;

1879 
g
 = 0;

1880 
u£FÆlback
 = 
FALSE
;

1886 if(
Àn
 != 0) {

1887 if(
Àn
 < 0) {

1888 
Àn
 = -len;

1890 
outLí
 = 0;

1893 if(
pFromU2022Sèã
->
g
 == 1 && g == 0) {

1894 
buf„r
[
outLí
++] = 
UCNV_SI
;

1895 
pFromU2022Sèã
->
g
 = 0;

1899 if(
cs
 !
pFromU2022Sèã
->cs[
g
]) {

1900 
öt32_t
 
escLí
 = 
escSeqCh¨sLí
[
cs
];

1901 
	`u¥v_mem˝y
(
buf„r
 + 
outLí
, 
escSeqCh¨s
[
cs
], 
escLí
);

1902 
outLí
 +
escLí
;

1903 
pFromU2022Sèã
->
cs
[
g
] = cs;

1906 
choi˚Cou¡
 = 0;

1910 if(
g
 !
pFromU2022Sèã
->g) {

1911 
g
) {

1914 
buf„r
[
outLí
++] = 
UCNV_SO
;

1915 
pFromU2022Sèã
->
g
 = 1;

1918 
buf„r
[
outLí
++] = 0x1b;

1919 
buf„r
[
outLí
++] = 0x4e;

1926 if(
Àn
 == 1) {

1927 
buf„r
[
outLí
++] = ()
èrgëVÆue
;

1929 
buf„r
[
outLí
++] = ()(
èrgëVÆue
 >> 8);

1930 
buf„r
[
outLí
++] = ()
èrgëVÆue
;

1937 *
îr
 = 
U_INVALID_CHAR_FOUND
;

1938 
˙v
->
‰omUCh¨32
=
sour˚Ch¨
;

1942 if(
sour˚Ch¨
 =
CR
 || sour˚Ch¨ =
LF
) {

1944 
pFromU2022Sèã
->
cs
[2] = 0;

1945 
choi˚Cou¡
 = 0;

1949 if(
outLí
 == 1) {

1950 *
èrgë
++ = 
buf„r
[0];

1951 if(
off£ts
) {

1952 *
off£ts
++ = (
öt32_t
)(
sour˚
 - 
¨gs
->source - 1);

1954 } if(
outLí
 =2 && (
èrgë
 + 2Ë<
èrgëLimô
) {

1955 *
èrgë
++ = 
buf„r
[0];

1956 *
èrgë
++ = 
buf„r
[1];

1957 if(
off£ts
) {

1958 
öt32_t
 
sour˚Index
 = (öt32_t)(
sour˚
 - 
¨gs
->sour˚ - 
	`U16_LENGTH
(
sour˚Ch¨
));

1959 *
off£ts
++ = 
sour˚Index
;

1960 *
off£ts
++ = 
sour˚Index
;

1963 
	`‰omUWrôeUI¡8
(

1964 
˙v
,

1965 
buf„r
, 
outLí
,

1966 &
èrgë
, (c⁄° *)
èrgëLimô
,

1967 &
off£ts
, (
öt32_t
)(
sour˚
 - 
¨gs
->sour˚ - 
	`U16_LENGTH
(
sour˚Ch¨
)),

1968 
îr
);

1969 if(
	`U_FAILURE
(*
îr
)) {

1975 *
îr
 =
U_BUFFER_OVERFLOW_ERROR
;

1991 if–
	`U_SUCCESS
(*
îr
) &&

1992 (
pFromU2022Sèã
->
g
!=0 ||ÖFromU2022Sèã->
cs
[0]!=
ASCII
) &&

1993 
¨gs
->
Êush
 && 
sour˚
>=
sour˚Limô
 && 
˙v
->
‰omUCh¨32
==0

1995 
öt32_t
 
sour˚Index
;

1997 
outLí
 = 0;

1999 if(
pFromU2022Sèã
->
g
 != 0) {

2000 
buf„r
[
outLí
++] = 
UCNV_SI
;

2001 
pFromU2022Sèã
->
g
 = 0;

2004 if(
pFromU2022Sèã
->
cs
[0] !
ASCII
) {

2005 
öt32_t
 
escLí
 = 
escSeqCh¨sLí
[
ASCII
];

2006 
	`u¥v_mem˝y
(
buf„r
 + 
outLí
, 
escSeqCh¨s
[
ASCII
], 
escLí
);

2007 
outLí
 +
escLí
;

2008 
pFromU2022Sèã
->
cs
[0] = (
öt8_t
)
ASCII
;

2019 
sour˚Index
=(
öt32_t
)(
sour˚
-
¨gs
->source);

2020 if(
sour˚Index
>0) {

2021 --
sour˚Index
;

2022 if–
	`U16_IS_TRAIL
(
¨gs
->
sour˚
[
sour˚Index
]) &&

2023 (
sour˚Index
==0 || 
	`U16_IS_LEAD
(
¨gs
->
sour˚
[sourceIndex-1]))

2025 --
sour˚Index
;

2028 
sour˚Index
=-1;

2031 
	`‰omUWrôeUI¡8
(

2032 
˙v
,

2033 
buf„r
, 
outLí
,

2034 &
èrgë
, (c⁄° *)
èrgëLimô
,

2035 &
off£ts
, 
sour˚Index
,

2036 
îr
);

2040 
¨gs
->
sour˚
 = source;

2041 
¨gs
->
èrgë
 = (*)target;

2042 
	}
}

2047 
	$UC⁄vîãr_toUnicode_ISO_2022_JP_OFFSETS_LOGIC
(
UC⁄vîãrToUnicodeArgs
 *
¨gs
,

2048 
UEº‹Code
* 
îr
){

2049 
ãmpBuf
[2];

2050 c⁄° *
mySour˚
 = (*Ë
¨gs
->
sour˚
;

2051 
UCh¨
 *
myT¨gë
 = 
¨gs
->
èrgë
;

2052 c⁄° *
mySour˚Limô
 = 
¨gs
->
sour˚Limô
;

2053 
uöt32_t
 
èrgëUniCh¨
 = 0x0000;

2054 
uöt32_t
 
mySour˚Ch¨
 = 0x0000;

2055 
uöt32_t
 
tmpSour˚Ch¨
 = 0x0000;

2056 
UC⁄vîãrD©aISO2022
* 
myD©a
;

2057 
ISO2022Sèã
 *
pToU2022Sèã
;

2058 
SèãEnum
 
cs
;

2060 
myD©a
=(
UC⁄vîãrD©aISO2022
*)(
¨gs
->
c⁄vîãr
->
exåaInfo
);

2061 
pToU2022Sèã
 = &
myD©a
->
toU2022Sèã
;

2063 if(
myD©a
->
key
 != 0) {

2065 
esˇ≥
;

2066 } if(
¨gs
->
c⁄vîãr
->
toULígth
 =1 && 
mySour˚
 < 
mySour˚Limô
 && 
myT¨gë
 <árgs->
èrgëLimô
) {

2068 
mySour˚Ch¨
 = 
¨gs
->
c⁄vîãr
->
toUByãs
[0];

2069 
¨gs
->
c⁄vîãr
->
toULígth
 = 0;

2070 
cs
 = (
SèãEnum
)
pToU2022Sèã
->cs[pToU2022Sèã->
g
];

2071 
èrgëUniCh¨
 = 
missögCh¨M¨kî
;

2072 
gëTøûByã
;

2075 
mySour˚
 < 
mySour˚Limô
){

2077 
èrgëUniCh¨
 =
missögCh¨M¨kî
;

2079 if(
myT¨gë
 < 
¨gs
->
èrgëLimô
){

2081 
mySour˚Ch¨
(Ë*
mySour˚
++;

2083 
mySour˚Ch¨
) {

2084 
UCNV_SI
:

2085 if(
myD©a
->
vîsi⁄
==3) {

2086 
pToU2022Sèã
->
g
=0;

2090 
myD©a
->
isEm±ySegmít
 = 
FALSE
;

2094 
UCNV_SO
:

2095 if(
myD©a
->
vîsi⁄
==3) {

2097 
pToU2022Sèã
->
cs
[1] = (
öt8_t
)
HWKANA_7BIT
;

2098 
pToU2022Sèã
->
g
=1;

2102 
myD©a
->
isEm±ySegmít
 = 
FALSE
;

2106 
ESC_2022
:

2107 
mySour˚
--;

2108 
esˇ≥
:

2110 c⁄° * 
mySour˚Bef‹e
 = 
mySour˚
;

2111 
öt8_t
 
toULígthBef‹e
 = 
¨gs
->
c⁄vîãr
->
toULígth
;

2113 
	`ch™geSèã_2022
(
¨gs
->
c⁄vîãr
,&(
mySour˚
),

2114 
mySour˚Limô
, 
ISO_2022_JP
,
îr
);

2117 if(
myD©a
->
vîsi⁄
==0 && myD©a->
key
==0 && 
	`U_SUCCESS
(*
îr
Ë&& myD©a->
isEm±ySegmít
) {

2118 *
îr
 = 
U_ILLEGAL_ESCAPE_SEQUENCE
;

2119 
¨gs
->
c⁄vîãr
->
toUCÆlbackRós⁄
 = 
UCNV_IRREGULAR
;

2120 
¨gs
->
c⁄vîãr
->
toULígth
 = (
öt8_t
)(
toULígthBef‹e
 + (
mySour˚
 - 
mySour˚Bef‹e
));

2125 if(
	`U_FAILURE
(*
îr
)){

2126 
¨gs
->
èrgë
 = 
myT¨gë
;

2127 
¨gs
->
sour˚
 = 
mySour˚
;

2128 
myD©a
->
isEm±ySegmít
 = 
FALSE
;

2132 if(
myD©a
->
key
==0) {

2133 
myD©a
->
isEm±ySegmít
 = 
TRUE
;

2139 
CR
:

2141 
LF
:

2143 if((
SèãEnum
)
pToU2022Sèã
->
cs
[0] !
ASCII
 && (SèãEnumÌToU2022Sèã->cs[0] !
JISX201
) {

2144 
pToU2022Sèã
->
cs
[0] = (
öt8_t
)
ASCII
;

2146 
pToU2022Sèã
->
cs
[2] = 0;

2147 
pToU2022Sèã
->
g
 = 0;

2151 
myD©a
->
isEm±ySegmít
 = 
FALSE
;

2152 
cs
 = (
SèãEnum
)
pToU2022Sèã
->cs[pToU2022Sèã->
g
];

2153 if–(
uöt8_t
)(
mySour˚Ch¨
 - 0xa1Ë<(0xd‡- 0xa1Ë&& 
myD©a
->
vîsi⁄
==4 &&

2154 !
	`IS_JP_DBCS
(
cs
)

2157 
èrgëUniCh¨
 = 
mySour˚Ch¨
 + (
HWKANA_START
 - 0xa1);

2160 if(
pToU2022Sèã
->
g
 >= 2) {

2161 
pToU2022Sèã
->
g
ıToU2022Sèã->
¥evG
;

2163 } 
cs
) {

2164 
ASCII
:

2165 if(
mySour˚Ch¨
 <= 0x7f) {

2166 
èrgëUniCh¨
 = 
mySour˚Ch¨
;

2169 
ISO8859_1
:

2170 if(
mySour˚Ch¨
 <= 0x7f) {

2171 
èrgëUniCh¨
 = 
mySour˚Ch¨
 + 0x80;

2174 
pToU2022Sèã
->
g
ıToU2022Sèã->
¥evG
;

2176 
ISO8859_7
:

2177 if(
mySour˚Ch¨
 <= 0x7f) {

2179 
èrgëUniCh¨
 =

2180 
	`_MBCS_SINGLE_SIMPLE_GET_NEXT_BMP
(

2181 
myD©a
->
myC⁄vîãrAºay
[
cs
],

2182 
mySour˚Ch¨
 + 0x80);

2185 
pToU2022Sèã
->
g
ıToU2022Sèã->
¥evG
;

2187 
JISX201
:

2188 if(
mySour˚Ch¨
 <= 0x7f) {

2189 
èrgëUniCh¨
 = 
	`jisx201ToU
(
mySour˚Ch¨
);

2192 
HWKANA_7BIT
:

2193 if((
uöt8_t
)(
mySour˚Ch¨
 - 0x21) <= (0x5f - 0x21)) {

2195 
èrgëUniCh¨
 = 
mySour˚Ch¨
 + (
HWKANA_START
 - 0x21);

2200 if(
mySour˚
 < 
mySour˚Limô
) {

2201 
ÀadIsOk
, 
åaûIsOk
;

2202 
uöt8_t
 
åaûByã
;

2203 
gëTøûByã
:

2204 
åaûByã
 = (
uöt8_t
)*
mySour˚
;

2215 
ÀadIsOk
 = (
uöt8_t
)(
mySour˚Ch¨
 - 0x21) <= (0x7e - 0x21);

2216 
åaûIsOk
 = (
uöt8_t
)(
åaûByã
 - 0x21) <= (0x7e - 0x21);

2217 i‡(
ÀadIsOk
 && 
åaûIsOk
) {

2218 ++
mySour˚
;

2219 
tmpSour˚Ch¨
 = (
mySour˚Ch¨
 << 8Ë| 
åaûByã
;

2220 if(
cs
 =
JISX208
) {

2221 
	`_2022ToSJIS
((
uöt8_t
)
mySour˚Ch¨
, 
åaûByã
, 
ãmpBuf
);

2222 
mySour˚Ch¨
 = 
tmpSour˚Ch¨
;

2225 
mySour˚Ch¨
 = 
tmpSour˚Ch¨
;

2226 i‡(
cs
 =
KSC5601
) {

2227 
tmpSour˚Ch¨
 += 0x8080;

2229 
ãmpBuf
[0] = ()(
tmpSour˚Ch¨
 >> 8);

2230 
ãmpBuf
[1] = ()(
tmpSour˚Ch¨
);

2232 
èrgëUniCh¨
 = 
	`u˙v_MBCSSim∂eGëNextUCh¨
(
myD©a
->
myC⁄vîãrAºay
[
cs
], 
ãmpBuf
, 2, 
FALSE
);

2233 } i‡(!(
åaûIsOk
 || 
	`IS_2022_CONTROL
(
åaûByã
))) {

2235 ++
mySour˚
;

2237 
mySour˚Ch¨
 = 0x10000 | (mySour˚Ch¨ << 8Ë| 
åaûByã
;

2240 
¨gs
->
c⁄vîãr
->
toUByãs
[0] = (
uöt8_t
)
mySour˚Ch¨
;

2241 
¨gs
->
c⁄vîãr
->
toULígth
 = 1;

2242 
ídlo›
;

2247 if(
èrgëUniCh¨
 < (
missögCh¨M¨kî
-1 )){

2248 if(
¨gs
->
off£ts
){

2249 
¨gs
->
off£ts
[
myT¨gë
 -árgs->
èrgë
] = (
öt32_t
)(
mySour˚
 -árgs->
sour˚
 - (
mySour˚Ch¨
 <= 0xff ? 1 : 2));

2251 *(
myT¨gë
++)=(
UCh¨
)
èrgëUniCh¨
;

2253 if(
èrgëUniCh¨
 > 
missögCh¨M¨kî
){

2255 
èrgëUniCh¨
-=0x0010000;

2256 *
myT¨gë
 = (
UCh¨
)(0xd800+(UCh¨)(
èrgëUniCh¨
>>10));

2257 if(
¨gs
->
off£ts
){

2258 
¨gs
->
off£ts
[
myT¨gë
 -árgs->
èrgë
] = (
öt32_t
)(
mySour˚
 -árgs->
sour˚
 - (
mySour˚Ch¨
 <= 0xff ? 1 : 2));

2260 ++
myT¨gë
;

2261 if(
myT¨gë
< 
¨gs
->
èrgëLimô
){

2262 *
myT¨gë
 = (
UCh¨
)(0xdc00+(UCh¨)(
èrgëUniCh¨
&0x3ff));

2263 if(
¨gs
->
off£ts
){

2264 
¨gs
->
off£ts
[
myT¨gë
 -árgs->
èrgë
] = (
öt32_t
)(
mySour˚
 -árgs->
sour˚
 - (
mySour˚Ch¨
 <= 0xff ? 1 : 2));

2266 ++
myT¨gë
;

2268 
¨gs
->
c⁄vîãr
->
UCh¨Eº‹Buf„r
[¨gs->c⁄vîãr->
UCh¨Eº‹Buf„rLígth
++]=

2269 (
UCh¨
)(0xdc00+(UCh¨)(
èrgëUniCh¨
&0x3ff));

2275 
	`toUnicodeCÆlback
(
¨gs
->
c⁄vîãr
,
mySour˚Ch¨
,
èrgëUniCh¨
,
îr
);

2280 *
îr
 =
U_BUFFER_OVERFLOW_ERROR
;

2284 
ídlo›
:

2285 
¨gs
->
èrgë
 = 
myT¨gë
;

2286 
¨gs
->
sour˚
 = 
mySour˚
;

2287 
	}
}

2299 
	$UC⁄vîãr_‰omUnicode_ISO_2022_KR_OFFSETS_LOGIC_IBM
(
UC⁄vîãrFromUnicodeArgs
* 
¨gs
, 
UEº‹Code
* 
îr
){

2301 
UC⁄vîãr
* 
ßveC⁄v
 = 
¨gs
->
c⁄vîãr
;

2302 
UC⁄vîãrD©aISO2022
 *
myC⁄vîãrD©a
=(UC⁄vîãrD©aISO2022*)
ßveC⁄v
->
exåaInfo
;

2303 
¨gs
->
c⁄vîãr
=
myC⁄vîãrD©a
->
cuºítC⁄vîãr
;

2305 
myC⁄vîãrD©a
->
cuºítC⁄vîãr
->
‰omUCh¨32
 = 
ßveC⁄v
->fromUChar32;

2306 
	`u˙v_MBCSFromUnicodeWôhOff£ts
(
¨gs
,
îr
);

2307 
ßveC⁄v
->
‰omUCh¨32
 = 
myC⁄vîãrD©a
->
cuºítC⁄vîãr
->fromUChar32;

2309 if(*
îr
 =
U_BUFFER_OVERFLOW_ERROR
) {

2310 if(
myC⁄vîãrD©a
->
cuºítC⁄vîãr
->
ch¨Eº‹Buf„rLígth
 > 0) {

2311 
	`u¥v_mem˝y
(

2312 
ßveC⁄v
->
ch¨Eº‹Buf„r
,

2313 
myC⁄vîãrD©a
->
cuºítC⁄vîãr
->
ch¨Eº‹Buf„r
,

2314 
myC⁄vîãrD©a
->
cuºítC⁄vîãr
->
ch¨Eº‹Buf„rLígth
);

2316 
ßveC⁄v
->
ch¨Eº‹Buf„rLígth
 = 
myC⁄vîãrD©a
->
cuºítC⁄vîãr
->charErrorBufferLength;

2317 
myC⁄vîãrD©a
->
cuºítC⁄vîãr
->
ch¨Eº‹Buf„rLígth
 = 0;

2319 
¨gs
->
c⁄vîãr
=
ßveC⁄v
;

2320 
	}
}

2323 
	$UC⁄vîãr_‰omUnicode_ISO_2022_KR_OFFSETS_LOGIC
(
UC⁄vîãrFromUnicodeArgs
* 
¨gs
, 
UEº‹Code
* 
îr
){

2325 c⁄° 
UCh¨
 *
sour˚
 = 
¨gs
->source;

2326 c⁄° 
UCh¨
 *
sour˚Limô
 = 
¨gs
->sourceLimit;

2327 *
èrgë
 = (*Ë
¨gs
->target;

2328 *
èrgëLimô
 = (*Ë
¨gs
->targetLimit;

2329 
öt32_t
* 
off£ts
 = 
¨gs
->offsets;

2330 
uöt32_t
 
èrgëByãUnô
 = 0x0000;

2331 
UCh¨32
 
sour˚Ch¨
 = 0x0000;

2332 
UBoﬁ
 
isT¨gëByãDBCS
;

2333 
UBoﬁ
 
ﬁdIsT¨gëByãDBCS
;

2334 
UC⁄vîãrD©aISO2022
 *
c⁄vîãrD©a
;

2335 
UC⁄vîãrSh¨edD©a
* 
sh¨edD©a
;

2336 
UBoﬁ
 
u£FÆlback
;

2337 
öt32_t
 
Àngth
 =0;

2339 
c⁄vîãrD©a
=(
UC⁄vîãrD©aISO2022
*)
¨gs
->
c⁄vîãr
->
exåaInfo
;

2344 if(
c⁄vîãrD©a
->
vîsi⁄
==1){

2345 
	`UC⁄vîãr_‰omUnicode_ISO_2022_KR_OFFSETS_LOGIC_IBM
(
¨gs
,
îr
);

2350 
sh¨edD©a
 = 
c⁄vîãrD©a
->
cuºítC⁄vîãr
->sharedData;

2351 
u£FÆlback
 = 
¨gs
->
c⁄vîãr
->useFallback;

2352 
isT¨gëByãDBCS
=(
UBoﬁ
)
¨gs
->
c⁄vîãr
->
‰omUnicodeSètus
;

2353 
ﬁdIsT¨gëByãDBCS
 = 
isT¨gëByãDBCS
;

2355 
isT¨gëByãDBCS
 = (
UBoﬁ
Ë
¨gs
->
c⁄vîãr
->
‰omUnicodeSètus
;

2356 if((
sour˚Ch¨
 = 
¨gs
->
c⁄vîãr
->
‰omUCh¨32
)!=0 && 
èrgë
 <
èrgëLimô
) {

2357 
gëTøû
;

2359 
sour˚
 < 
sour˚Limô
){

2361 
èrgëByãUnô
 = 
missögCh¨M¨kî
;

2363 if(
èrgë
 < (*Ë
¨gs
->
èrgëLimô
){

2364 
sour˚Ch¨
 = *
sour˚
++;

2367 if(
	`IS_2022_CONTROL
(
sour˚Ch¨
)) {

2369 *
îr
=
U_ILLEGAL_CHAR_FOUND
;

2370 
¨gs
->
c⁄vîãr
->
‰omUCh¨32
=
sour˚Ch¨
;

2374 
Àngth
 = 
	`MBCS_FROM_UCHAR32_ISO2022
(
sh¨edD©a
,
sour˚Ch¨
,&
èrgëByãUnô
,
u£FÆlback
,
MBCS_OUTPUT_2
);

2375 if(
Àngth
 < 0) {

2376 
Àngth
 = -length;

2380 if–
Àngth
 > 2 ||Üength==0 ||

2381 (
Àngth
 =1 && 
èrgëByãUnô
 > 0x7f) ||

2382 (
Àngth
 == 2 &&

2383 ((
uöt16_t
)(
èrgëByãUnô
 - 0xa1a1) > (0xfefe - 0xa1a1) ||

2384 (
uöt8_t
)(
èrgëByãUnô
 - 0xa1) > (0xfe - 0xa1)))

2386 
èrgëByãUnô
=
missögCh¨M¨kî
;

2388 i‡(
èrgëByãUnô
 !
missögCh¨M¨kî
){

2390 
ﬁdIsT¨gëByãDBCS
 = 
isT¨gëByãDBCS
;

2391 
isT¨gëByãDBCS
 = (
UBoﬁ
)(
èrgëByãUnô
>0x00FF);

2393 i‡(
ﬁdIsT¨gëByãDBCS
 !
isT¨gëByãDBCS
 ){

2395 i‡(
isT¨gëByãDBCS
)

2396 *
èrgë
++ = 
UCNV_SO
;

2398 *
èrgë
++ = 
UCNV_SI
;

2399 if(
off£ts
)

2400 *(
off£ts
++Ë(
öt32_t
)(
sour˚
 - 
¨gs
->source-1);

2403 if(
èrgëByãUnô
 <= 0x00FF){

2404 if–
èrgë
 < 
èrgëLimô
){

2405 *(
èrgë
++Ë(Ë
èrgëByãUnô
;

2406 if(
off£ts
){

2407 *(
off£ts
++Ë(
öt32_t
)(
sour˚
 - 
¨gs
->source-1);

2411 
¨gs
->
c⁄vîãr
->
ch¨Eº‹Buf„r
[¨gs->c⁄vîãr->
ch¨Eº‹Buf„rLígth
++] = (Ë(
èrgëByãUnô
);

2412 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

2415 if(
èrgë
 < 
èrgëLimô
){

2416 *(
èrgë
++Ë=(Ë((
èrgëByãUnô
>>8) -0x80);

2417 if(
off£ts
){

2418 *(
off£ts
++Ë(
öt32_t
)(
sour˚
 - 
¨gs
->source-1);

2420 if(
èrgë
 < 
èrgëLimô
){

2421 *(
èrgë
++Ë=(Ë(
èrgëByãUnô
 -0x80);

2422 if(
off£ts
){

2423 *(
off£ts
++Ë(
öt32_t
)(
sour˚
 - 
¨gs
->source-1);

2426 
¨gs
->
c⁄vîãr
->
ch¨Eº‹Buf„r
[¨gs->c⁄vîãr->
ch¨Eº‹Buf„rLígth
++] = (Ë(
èrgëByãUnô
 -0x80);

2427 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

2430 
¨gs
->
c⁄vîãr
->
ch¨Eº‹Buf„r
[¨gs->c⁄vîãr->
ch¨Eº‹Buf„rLígth
++] = (Ë((
èrgëByãUnô
>>8) -0x80);

2431 
¨gs
->
c⁄vîãr
->
ch¨Eº‹Buf„r
[¨gs->c⁄vîãr->
ch¨Eº‹Buf„rLígth
++] = (Ë(
èrgëByãUnô
-0x80);

2432 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

2443 if(
	`UTF_IS_SURROGATE
(
sour˚Ch¨
)) {

2444 if(
	`UTF_IS_SURROGATE_FIRST
(
sour˚Ch¨
)) {

2445 
gëTøû
:

2447 if(
sour˚
 < 
sour˚Limô
) {

2449 
UCh¨
 
åaû
=(UCh¨Ë*
sour˚
;

2450 if(
	`UTF_IS_SECOND_SURROGATE
(
åaû
)) {

2451 
sour˚
++;

2452 
sour˚Ch¨
=
	`UTF16_GET_PAIR_VALUE
(sour˚Ch¨, 
åaû
);

2453 *
îr
 = 
U_INVALID_CHAR_FOUND
;

2459 *
îr
=
U_ILLEGAL_CHAR_FOUND
;

2463 *
îr
 = 
U_ZERO_ERROR
;

2468 *
îr
=
U_ILLEGAL_CHAR_FOUND
;

2472 *
îr
 = 
U_INVALID_CHAR_FOUND
;

2475 
¨gs
->
c⁄vîãr
->
‰omUCh¨32
=
sour˚Ch¨
;

2480 *
îr
 =
U_BUFFER_OVERFLOW_ERROR
;

2496 if–
	`U_SUCCESS
(*
îr
) &&

2497 
isT¨gëByãDBCS
 &&

2498 
¨gs
->
Êush
 && 
sour˚
>=
sour˚Limô
 &&árgs->
c⁄vîãr
->
‰omUCh¨32
==0

2500 
öt32_t
 
sour˚Index
;

2503 
isT¨gëByãDBCS
=
FALSE
;

2513 
sour˚Index
=(
öt32_t
)(
sour˚
-
¨gs
->source);

2514 if(
sour˚Index
>0) {

2515 --
sour˚Index
;

2516 if–
	`U16_IS_TRAIL
(
¨gs
->
sour˚
[
sour˚Index
]) &&

2517 (
sour˚Index
==0 || 
	`U16_IS_LEAD
(
¨gs
->
sour˚
[sourceIndex-1]))

2519 --
sour˚Index
;

2522 
sour˚Index
=-1;

2525 
	`‰omUWrôeUI¡8
(

2526 
¨gs
->
c⁄vîãr
,

2527 
SHIFT_IN_STR
, 1,

2528 &
èrgë
, (c⁄° *)
èrgëLimô
,

2529 &
off£ts
, 
sour˚Index
,

2530 
îr
);

2534 
¨gs
->
sour˚
 = source;

2535 
¨gs
->
èrgë
 = (*)target;

2536 
¨gs
->
c⁄vîãr
->
‰omUnicodeSètus
 = (
uöt32_t
)
isT¨gëByãDBCS
;

2537 
	}
}

2542 
	$UC⁄vîãr_toUnicode_ISO_2022_KR_OFFSETS_LOGIC_IBM
(
UC⁄vîãrToUnicodeArgs
 *
¨gs
,

2543 
UEº‹Code
* 
îr
){

2544 c⁄°* 
sour˚Sèπ
;

2545 
UC⁄vîãrD©aISO2022
* 
myD©a
=(UC⁄vîãrD©aISO2022*)(
¨gs
->
c⁄vîãr
->
exåaInfo
);

2547 
UC⁄vîãrToUnicodeArgs
 
subArgs
;

2548 
öt32_t
 
möArgsSize
;

2551 if(
¨gs
->
size
<(
UC⁄vîãrToUnicodeArgs
)) {

2552 
möArgsSize
 = 
¨gs
->
size
;

2554 
möArgsSize
 = (
öt32_t
)(
UC⁄vîãrToUnicodeArgs
);

2557 
	`u¥v_mem˝y
(&
subArgs
, 
¨gs
, 
möArgsSize
);

2558 
subArgs
.
size
 = (
uöt16_t
)
möArgsSize
;

2559 
subArgs
.
c⁄vîãr
 = 
myD©a
->
cuºítC⁄vîãr
;

2562 
sour˚Sèπ
 = 
¨gs
->
sour˚
;

2564 if(
myD©a
->
key
 != 0) {

2566 
esˇ≥
;

2569 
	`U_SUCCESS
(*
îr
Ë&& 
¨gs
->
sour˚
 <árgs->
sour˚Limô
) {

2571 
subArgs
.
sour˚
 = 
¨gs
->source;

2572 
subArgs
.
sour˚Limô
 = 
	`gëEndOfBuf„r_2022
(&(
¨gs
->
sour˚
),árgs->sour˚Limô,árgs->
Êush
);

2573 if(
subArgs
.
sour˚
 !subArgs.
sour˚Limô
) {

2581 if(
¨gs
->
c⁄vîãr
->
toULígth
 > 0) {

2582 
	`u¥v_mem˝y
(
subArgs
.
c⁄vîãr
->
toUByãs
, 
¨gs
->c⁄vîãr->toUByãs,árgs->c⁄vîãr->
toULígth
);

2584 
subArgs
.
c⁄vîãr
->
toULígth
 = 
¨gs
->converter->toULength;

2591 
	`u˙v_MBCSToUnicodeWôhOff£ts
(&
subArgs
, 
îr
);

2593 if(
¨gs
->
off£ts
 !
NULL
 && 
sour˚Sèπ
 !¨gs->
sour˚
) {

2595 
öt32_t
 *
off£ts
 = 
¨gs
->offsets;

2596 
UCh¨
 *
èrgë
 = 
¨gs
->target;

2597 
öt32_t
 
dñè
 = (öt32_t)(
¨gs
->
sour˚
 - 
sour˚Sèπ
);

2598 
èrgë
 < 
subArgs
.target) {

2599 if(*
off£ts
 >= 0) {

2600 *
off£ts
 +
dñè
;

2602 ++
off£ts
;

2603 ++
èrgë
;

2606 
¨gs
->
sour˚
 = 
subArgs
.source;

2607 
¨gs
->
èrgë
 = 
subArgs
.target;

2608 
¨gs
->
off£ts
 = 
subArgs
.offsets;

2611 if(
subArgs
.
c⁄vîãr
->
toULígth
 > 0) {

2612 
	`u¥v_mem˝y
(
¨gs
->
c⁄vîãr
->
toUByãs
, 
subArgs
.c⁄vîãr->toUByãs, subArgs.c⁄vîãr->
toULígth
);

2614 
¨gs
->
c⁄vîãr
->
toULígth
 = 
subArgs
.converter->toULength;

2616 if(*
îr
 =
U_BUFFER_OVERFLOW_ERROR
) {

2617 if(
subArgs
.
c⁄vîãr
->
UCh¨Eº‹Buf„rLígth
 > 0) {

2618 
	`u¥v_mem˝y
(
¨gs
->
c⁄vîãr
->
UCh¨Eº‹Buf„r
, 
subArgs
.converter->UCharErrorBuffer,

2619 
subArgs
.
c⁄vîãr
->
UCh¨Eº‹Buf„rLígth
);

2621 
¨gs
->
c⁄vîãr
->
UCh¨Eº‹Buf„rLígth
=
subArgs
.converter->UCharErrorBufferLength;

2622 
subArgs
.
c⁄vîãr
->
UCh¨Eº‹Buf„rLígth
 = 0;

2626 i‡(
	`U_FAILURE
(*
îr
Ë|| (
¨gs
->
sour˚
 =¨gs->
sour˚Limô
)) {

2630 
esˇ≥
:

2631 
	`ch™geSèã_2022
(
¨gs
->
c⁄vîãr
,

2632 &(
¨gs
->
sour˚
),

2633 
¨gs
->
sour˚Limô
,

2634 
ISO_2022_KR
,

2635 
îr
);

2637 
	}
}

2640 
	$UC⁄vîãr_toUnicode_ISO_2022_KR_OFFSETS_LOGIC
(
UC⁄vîãrToUnicodeArgs
 *
¨gs
,

2641 
UEº‹Code
* 
îr
){

2642 
ãmpBuf
[2];

2643 c⁄° *
mySour˚
 = ( *Ë
¨gs
->
sour˚
;

2644 
UCh¨
 *
myT¨gë
 = 
¨gs
->
èrgë
;

2645 c⁄° *
mySour˚Limô
 = 
¨gs
->
sour˚Limô
;

2646 
UCh¨32
 
èrgëUniCh¨
 = 0x0000;

2647 
UCh¨
 
mySour˚Ch¨
 = 0x0000;

2648 
UC⁄vîãrD©aISO2022
* 
myD©a
;

2649 
UC⁄vîãrSh¨edD©a
* 
sh¨edD©a
 ;

2650 
UBoﬁ
 
u£FÆlback
;

2652 
myD©a
=(
UC⁄vîãrD©aISO2022
*)(
¨gs
->
c⁄vîãr
->
exåaInfo
);

2653 if(
myD©a
->
vîsi⁄
==1){

2654 
	`UC⁄vîãr_toUnicode_ISO_2022_KR_OFFSETS_LOGIC_IBM
(
¨gs
,
îr
);

2659 
sh¨edD©a
 = 
myD©a
->
cuºítC⁄vîãr
->sharedData;

2660 
u£FÆlback
 = 
¨gs
->
c⁄vîãr
->useFallback;

2662 if(
myD©a
->
key
 != 0) {

2664 
esˇ≥
;

2665 } if(
¨gs
->
c⁄vîãr
->
toULígth
 =1 && 
mySour˚
 < 
mySour˚Limô
 && 
myT¨gë
 <árgs->
èrgëLimô
) {

2667 
mySour˚Ch¨
 = 
¨gs
->
c⁄vîãr
->
toUByãs
[0];

2668 
¨gs
->
c⁄vîãr
->
toULígth
 = 0;

2669 
gëTøûByã
;

2672 
mySour˚
< 
mySour˚Limô
){

2674 if(
myT¨gë
 < 
¨gs
->
èrgëLimô
){

2676 
mySour˚Ch¨
(Ë*
mySour˚
++;

2678 if(
mySour˚Ch¨
==
UCNV_SI
){

2679 
myD©a
->
toU2022Sèã
.
g
 = 0;

2680 i‡(
myD©a
->
isEm±ySegmít
) {

2681 
myD©a
->
isEm±ySegmít
 = 
FALSE
;

2682 *
îr
 = 
U_ILLEGAL_ESCAPE_SEQUENCE
;

2683 
¨gs
->
c⁄vîãr
->
toUCÆlbackRós⁄
 = 
UCNV_IRREGULAR
;

2684 
¨gs
->
c⁄vîãr
->
toUByãs
[0] = (
uöt8_t
)
mySour˚Ch¨
;

2685 
¨gs
->
c⁄vîãr
->
toULígth
 = 1;

2686 
¨gs
->
èrgë
 = 
myT¨gë
;

2687 
¨gs
->
sour˚
 = 
mySour˚
;

2692 }if(
mySour˚Ch¨
==
UCNV_SO
){

2693 
myD©a
->
toU2022Sèã
.
g
 = 1;

2694 
myD©a
->
isEm±ySegmít
 = 
TRUE
;

2697 }if(
mySour˚Ch¨
==
ESC_2022
){

2698 
mySour˚
--;

2699 
esˇ≥
:

2700 
myD©a
->
isEm±ySegmít
 = 
FALSE
;

2701 
	`ch™geSèã_2022
(
¨gs
->
c⁄vîãr
,&(
mySour˚
),

2702 
mySour˚Limô
, 
ISO_2022_KR
, 
îr
);

2703 if(
	`U_FAILURE
(*
îr
)){

2704 
¨gs
->
èrgë
 = 
myT¨gë
;

2705 
¨gs
->
sour˚
 = 
mySour˚
;

2711 
myD©a
->
isEm±ySegmít
 = 
FALSE
;

2712 if(
myD©a
->
toU2022Sèã
.
g
 == 1) {

2713 if(
mySour˚
 < 
mySour˚Limô
) {

2714 
ÀadIsOk
, 
åaûIsOk
;

2715 
uöt8_t
 
åaûByã
;

2716 
gëTøûByã
:

2717 
èrgëUniCh¨
 = 
missögCh¨M¨kî
;

2718 
åaûByã
 = (
uöt8_t
)*
mySour˚
;

2729 
ÀadIsOk
 = (
uöt8_t
)(
mySour˚Ch¨
 - 0x21) <= (0x7e - 0x21);

2730 
åaûIsOk
 = (
uöt8_t
)(
åaûByã
 - 0x21) <= (0x7e - 0x21);

2731 i‡(
ÀadIsOk
 && 
åaûIsOk
) {

2732 ++
mySour˚
;

2733 
ãmpBuf
[0] = ()(
mySour˚Ch¨
 + 0x80);

2734 
ãmpBuf
[1] = ()(
åaûByã
 + 0x80);

2735 
èrgëUniCh¨
 = 
	`u˙v_MBCSSim∂eGëNextUCh¨
(
sh¨edD©a
, 
ãmpBuf
, 2, 
u£FÆlback
);

2736 
mySour˚Ch¨
 = (mySour˚Ch¨ << 8Ë| 
åaûByã
;

2737 } i‡(!(
åaûIsOk
 || 
	`IS_2022_CONTROL
(
åaûByã
))) {

2739 ++
mySour˚
;

2741 
mySour˚Ch¨
 = 0x10000 | (mySour˚Ch¨ << 8Ë| 
åaûByã
;

2744 
¨gs
->
c⁄vîãr
->
toUByãs
[0] = (
uöt8_t
)
mySour˚Ch¨
;

2745 
¨gs
->
c⁄vîãr
->
toULígth
 = 1;

2749 if(
mySour˚Ch¨
 <= 0x7f) {

2750 
èrgëUniCh¨
 = 
	`u˙v_MBCSSim∂eGëNextUCh¨
(
sh¨edD©a
, 
mySour˚
 - 1, 1, 
u£FÆlback
);

2752 
èrgëUniCh¨
 = 0xffff;

2754 if(
èrgëUniCh¨
 < 0xfffe){

2755 if(
¨gs
->
off£ts
) {

2756 
¨gs
->
off£ts
[
myT¨gë
 -árgs->
èrgë
] = (
öt32_t
)(
mySour˚
 -árgs->
sour˚
 - (
mySour˚Ch¨
 <= 0xff ? 1 : 2));

2758 *(
myT¨gë
++)=(
UCh¨
)
èrgëUniCh¨
;

2762 
	`toUnicodeCÆlback
(
¨gs
->
c⁄vîãr
,
mySour˚Ch¨
,
èrgëUniCh¨
,
îr
);

2767 *
îr
 =
U_BUFFER_OVERFLOW_ERROR
;

2771 
¨gs
->
èrgë
 = 
myT¨gë
;

2772 
¨gs
->
sour˚
 = 
mySour˚
;

2773 
	}
}

2857 c⁄° 
	gGB_2312_80_STR
[] = "\x1B\x24\x29\x41";

2858 c⁄° 
	gISO_IR_165_STR
[] = "\x1B\x24\x29\x45";

2859 c⁄° 
	gCNS_11643_1992_Pœ√_1_STR
[] = "\x1B\x24\x29\x47";

2860 c⁄° 
	gCNS_11643_1992_Pœ√_2_STR
[] = "\x1B\x24\x2A\x48";

2861 c⁄° 
	gCNS_11643_1992_Pœ√_3_STR
[] = "\x1B\x24\x2B\x49";

2862 c⁄° 
	gCNS_11643_1992_Pœ√_4_STR
[] = "\x1B\x24\x2B\x4A";

2863 c⁄° 
	gCNS_11643_1992_Pœ√_5_STR
[] = "\x1B\x24\x2B\x4B";

2864 c⁄° 
	gCNS_11643_1992_Pœ√_6_STR
[] = "\x1B\x24\x2B\x4C";

2865 c⁄° 
	gCNS_11643_1992_Pœ√_7_STR
[] = "\x1B\x24\x2B\x4D";

2868 c⁄° * c⁄° 
	gescSeqCh¨sCN
[10] ={

2869 
SHIFT_IN_STR
,

2870 
GB_2312_80_STR
,

2871 
ISO_IR_165_STR
,

2872 
CNS_11643_1992_Pœ√_1_STR
,

2873 
CNS_11643_1992_Pœ√_2_STR
,

2874 
CNS_11643_1992_Pœ√_3_STR
,

2875 
CNS_11643_1992_Pœ√_4_STR
,

2876 
CNS_11643_1992_Pœ√_5_STR
,

2877 
CNS_11643_1992_Pœ√_6_STR
,

2878 
CNS_11643_1992_Pœ√_7_STR


2882 
	$UC⁄vîãr_‰omUnicode_ISO_2022_CN_OFFSETS_LOGIC
(
UC⁄vîãrFromUnicodeArgs
* 
¨gs
, 
UEº‹Code
* 
îr
){

2883 
UC⁄vîãr
 *
˙v
 = 
¨gs
->
c⁄vîãr
;

2884 
UC⁄vîãrD©aISO2022
 *
c⁄vîãrD©a
;

2885 
ISO2022Sèã
 *
pFromU2022Sèã
;

2886 
uöt8_t
 *
èrgë
 = (uöt8_à*Ë
¨gs
->target;

2887 c⁄° 
uöt8_t
 *
èrgëLimô
 = (c⁄° uöt8_à*Ë
¨gs
->targetLimit;

2888 c⁄° 
UCh¨
* 
sour˚
 = 
¨gs
->source;

2889 c⁄° 
UCh¨
* 
sour˚Limô
 = 
¨gs
->sourceLimit;

2890 
öt32_t
* 
off£ts
 = 
¨gs
->offsets;

2891 
UCh¨32
 
sour˚Ch¨
;

2892 
buf„r
[8];

2893 
öt32_t
 
Àn
;

2894 
öt8_t
 
choi˚s
[3];

2895 
öt32_t
 
choi˚Cou¡
;

2896 
uöt32_t
 
èrgëVÆue
 = 0;

2897 
UBoﬁ
 
u£FÆlback
;

2900 
c⁄vîãrD©a
 = (
UC⁄vîãrD©aISO2022
*)
˙v
->
exåaInfo
;

2901 
pFromU2022Sèã
 = &
c⁄vîãrD©a
->
‰omU2022Sèã
;

2903 
choi˚Cou¡
 = 0;

2906 if((
sour˚Ch¨
 = 
˙v
->
‰omUCh¨32
)!=0 && 
èrgë
< 
èrgëLimô
) {

2907 
gëTøû
;

2910  
sour˚
 < 
sour˚Limô
){

2911 if(
èrgë
 < 
èrgëLimô
){

2913 
sour˚Ch¨
 = *(
sour˚
++);

2915 if(
	`UTF_IS_SURROGATE
(
sour˚Ch¨
)) {

2916 if(
	`UTF_IS_SURROGATE_FIRST
(
sour˚Ch¨
)) {

2917 
gëTøû
:

2919 if(
sour˚
 < 
sour˚Limô
) {

2921 
UCh¨
 
åaû
=(UCh¨Ë*
sour˚
;

2922 if(
	`UTF_IS_SECOND_SURROGATE
(
åaû
)) {

2923 
sour˚
++;

2924 
sour˚Ch¨
=
	`UTF16_GET_PAIR_VALUE
(sour˚Ch¨, 
åaû
);

2925 
˙v
->
‰omUCh¨32
=0x00;

2931 *
îr
=
U_ILLEGAL_CHAR_FOUND
;

2932 
˙v
->
‰omUCh¨32
=
sour˚Ch¨
;

2937 
˙v
->
‰omUCh¨32
=
sour˚Ch¨
;

2943 *
îr
=
U_ILLEGAL_CHAR_FOUND
;

2944 
˙v
->
‰omUCh¨32
=
sour˚Ch¨
;

2950 if(
sour˚Ch¨
 <= 0x007f ){

2952 if(
	`IS_2022_CONTROL
(
sour˚Ch¨
)) {

2954 *
îr
=
U_ILLEGAL_CHAR_FOUND
;

2955 
˙v
->
‰omUCh¨32
=
sour˚Ch¨
;

2960 if(
pFromU2022Sèã
->
g
 == 0) {

2961 
buf„r
[0] = ()
sour˚Ch¨
;

2962 
Àn
 = 1;

2964 
buf„r
[0] = 
UCNV_SI
;

2965 
buf„r
[1] = ()
sour˚Ch¨
;

2966 
Àn
 = 2;

2967 
pFromU2022Sèã
->
g
 = 0;

2968 
choi˚Cou¡
 = 0;

2970 if(
sour˚Ch¨
 =
CR
 || sour˚Ch¨ =
LF
) {

2972 
	`u¥v_mem£t
(
pFromU2022Sèã
, 0, (
ISO2022Sèã
));

2973 
choi˚Cou¡
 = 0;

2978 
öt32_t
 
i
;

2979 
öt8_t
 
cs
, 
g
;

2981 if(
choi˚Cou¡
 == 0) {

2983 
choi˚s
[0] = 
pFromU2022Sèã
->
cs
[1];

2986 if(
choi˚s
[0] == 0) {

2987 
choi˚s
[0] = 
GB2312_1
;

2990 if(
c⁄vîãrD©a
->
vîsi⁄
 == 0) {

2994 if(
choi˚s
[0] =
GB2312_1
) {

2995 
choi˚s
[1] = (
öt8_t
)
CNS_11643_1
;

2997 
choi˚s
[1] = (
öt8_t
)
GB2312_1
;

3000 
choi˚Cou¡
 = 2;

3001 } i‡(
c⁄vîãrD©a
->
vîsi⁄
 == 1) {

3005 
choi˚s
[0]) {

3006 
GB2312_1
:

3007 
choi˚s
[1] = (
öt8_t
)
CNS_11643_1
;

3008 
choi˚s
[2] = (
öt8_t
)
ISO_IR_165
;

3010 
ISO_IR_165
:

3011 
choi˚s
[1] = (
öt8_t
)
GB2312_1
;

3012 
choi˚s
[2] = (
öt8_t
)
CNS_11643_1
;

3015 
choi˚s
[1] = (
öt8_t
)
GB2312_1
;

3016 
choi˚s
[2] = (
öt8_t
)
ISO_IR_165
;

3020 
choi˚Cou¡
 = 3;

3022 
choi˚s
[0] = (
öt8_t
)
CNS_11643_1
;

3023 
choi˚s
[1] = (
öt8_t
)
GB2312_1
;

3027 
cs
 = 
g
 = 0;

3033 
Àn
 = 0;

3040 
u£FÆlback
 = 
˙v
->useFallback;

3042 
i
 = 0; i < 
choi˚Cou¡
 && 
Àn
 <= 0; ++i) {

3043 
öt8_t
 
cs0
 = 
choi˚s
[
i
];

3044 if(
cs0
 > 0) {

3045 
uöt32_t
 
vÆue
;

3046 
öt32_t
 
Àn2
;

3047 if(
cs0
 >
CNS_11643_0
) {

3048 
Àn2
 = 
	`MBCS_FROM_UCHAR32_ISO2022
(

3049 
c⁄vîãrD©a
->
myC⁄vîãrAºay
[
CNS_11643
],

3050 
sour˚Ch¨
,

3051 &
vÆue
,

3052 
u£FÆlback
,

3053 
MBCS_OUTPUT_3
);

3054 if(
Àn2
 =3 || (Àn2 =-3 && 
Àn
 == 0)) {

3055 
èrgëVÆue
 = 
vÆue
;

3056 
cs
 = (
öt8_t
)(
CNS_11643_0
 + (
vÆue
 >> 16) - 0x80);

3057 if(
Àn2
 >= 0) {

3058 
Àn
 = 2;

3060 
Àn
 = -2;

3061 
u£FÆlback
 = 
FALSE
;

3063 if(
cs
 =
CNS_11643_1
) {

3064 
g
 = 1;

3065 } if(
cs
 =
CNS_11643_2
) {

3066 
g
 = 2;

3067 } if(
c⁄vîãrD©a
->
vîsi⁄
 == 1) {

3068 
g
 = 3;

3071 
Àn
 = 0;

3076 
Àn2
 = 
	`MBCS_FROM_UCHAR32_ISO2022
(

3077 
c⁄vîãrD©a
->
myC⁄vîãrAºay
[
cs0
],

3078 
sour˚Ch¨
,

3079 &
vÆue
,

3080 
u£FÆlback
,

3081 
MBCS_OUTPUT_2
);

3082 if(
Àn2
 =2 || (Àn2 =-2 && 
Àn
 == 0)) {

3083 
èrgëVÆue
 = 
vÆue
;

3084 
Àn
 = 
Àn2
;

3085 
cs
 = 
cs0
;

3086 
g
 = 1;

3087 
u£FÆlback
 = 
FALSE
;

3093 if(
Àn
 != 0) {

3094 
Àn
 = 0;

3097 if(
cs
 !
pFromU2022Sèã
->cs[
g
]) {

3098 if(
cs
 < 
CNS_11643
) {

3099 
	`u¥v_mem˝y
(
buf„r
, 
escSeqCh¨sCN
[
cs
], 4);

3101 
	`u¥v_mem˝y
(
buf„r
, 
escSeqCh¨sCN
[
CNS_11643
 + (
cs
 - 
CNS_11643_1
)], 4);

3103 
Àn
 = 4;

3104 
pFromU2022Sèã
->
cs
[
g
] = cs;

3105 if(
g
 == 1) {

3107 
choi˚Cou¡
 = 0;

3112 if(
g
 !
pFromU2022Sèã
->g) {

3113 
g
) {

3115 
buf„r
[
Àn
++] = 
UCNV_SO
;

3118 
pFromU2022Sèã
->
g
 = 1;

3121 
buf„r
[
Àn
++] = 0x1b;

3122 
buf„r
[
Àn
++] = 0x4e;

3125 
buf„r
[
Àn
++] = 0x1b;

3126 
buf„r
[
Àn
++] = 0x4f;

3132 
buf„r
[
Àn
++] = ()(
èrgëVÆue
 >> 8);

3133 
buf„r
[
Àn
++] = ()
èrgëVÆue
;

3138 *
îr
 = 
U_INVALID_CHAR_FOUND
;

3139 
˙v
->
‰omUCh¨32
=
sour˚Ch¨
;

3145 if(
Àn
 == 1) {

3146 *
èrgë
++ = 
buf„r
[0];

3147 if(
off£ts
) {

3148 *
off£ts
++ = (
öt32_t
)(
sour˚
 - 
¨gs
->source - 1);

3150 } if(
Àn
 =2 && (
èrgë
 + 2Ë<
èrgëLimô
) {

3151 *
èrgë
++ = 
buf„r
[0];

3152 *
èrgë
++ = 
buf„r
[1];

3153 if(
off£ts
) {

3154 
öt32_t
 
sour˚Index
 = (öt32_t)(
sour˚
 - 
¨gs
->sour˚ - 
	`U16_LENGTH
(
sour˚Ch¨
));

3155 *
off£ts
++ = 
sour˚Index
;

3156 *
off£ts
++ = 
sour˚Index
;

3159 
	`‰omUWrôeUI¡8
(

3160 
˙v
,

3161 
buf„r
, 
Àn
,

3162 &
èrgë
, (c⁄° *)
èrgëLimô
,

3163 &
off£ts
, (
öt32_t
)(
sour˚
 - 
¨gs
->sour˚ - 
	`U16_LENGTH
(
sour˚Ch¨
)),

3164 
îr
);

3165 if(
	`U_FAILURE
(*
îr
)) {

3171 *
îr
 =
U_BUFFER_OVERFLOW_ERROR
;

3187 if–
	`U_SUCCESS
(*
îr
) &&

3188 
pFromU2022Sèã
->
g
!=0 &&

3189 
¨gs
->
Êush
 && 
sour˚
>=
sour˚Limô
 && 
˙v
->
‰omUCh¨32
==0

3191 
öt32_t
 
sour˚Index
;

3194 
pFromU2022Sèã
->
g
=0;

3204 
sour˚Index
=(
öt32_t
)(
sour˚
-
¨gs
->source);

3205 if(
sour˚Index
>0) {

3206 --
sour˚Index
;

3207 if–
	`U16_IS_TRAIL
(
¨gs
->
sour˚
[
sour˚Index
]) &&

3208 (
sour˚Index
==0 || 
	`U16_IS_LEAD
(
¨gs
->
sour˚
[sourceIndex-1]))

3210 --
sour˚Index
;

3213 
sour˚Index
=-1;

3216 
	`‰omUWrôeUI¡8
(

3217 
˙v
,

3218 
SHIFT_IN_STR
, 1,

3219 &
èrgë
, (c⁄° *)
èrgëLimô
,

3220 &
off£ts
, 
sour˚Index
,

3221 
îr
);

3225 
¨gs
->
sour˚
 = source;

3226 
¨gs
->
èrgë
 = (*)target;

3227 
	}
}

3231 
	$UC⁄vîãr_toUnicode_ISO_2022_CN_OFFSETS_LOGIC
(
UC⁄vîãrToUnicodeArgs
 *
¨gs
,

3232 
UEº‹Code
* 
îr
){

3233 
ãmpBuf
[3];

3234 c⁄° *
mySour˚
 = (*Ë
¨gs
->
sour˚
;

3235 
UCh¨
 *
myT¨gë
 = 
¨gs
->
èrgë
;

3236 c⁄° *
mySour˚Limô
 = 
¨gs
->
sour˚Limô
;

3237 
uöt32_t
 
èrgëUniCh¨
 = 0x0000;

3238 
uöt32_t
 
mySour˚Ch¨
 = 0x0000;

3239 
UC⁄vîãrD©aISO2022
* 
myD©a
;

3240 
ISO2022Sèã
 *
pToU2022Sèã
;

3242 
myD©a
=(
UC⁄vîãrD©aISO2022
*)(
¨gs
->
c⁄vîãr
->
exåaInfo
);

3243 
pToU2022Sèã
 = &
myD©a
->
toU2022Sèã
;

3245 if(
myD©a
->
key
 != 0) {

3247 
esˇ≥
;

3248 } if(
¨gs
->
c⁄vîãr
->
toULígth
 =1 && 
mySour˚
 < 
mySour˚Limô
 && 
myT¨gë
 <árgs->
èrgëLimô
) {

3250 
mySour˚Ch¨
 = 
¨gs
->
c⁄vîãr
->
toUByãs
[0];

3251 
¨gs
->
c⁄vîãr
->
toULígth
 = 0;

3252 
èrgëUniCh¨
 = 
missögCh¨M¨kî
;

3253 
gëTøûByã
;

3256 
mySour˚
 < 
mySour˚Limô
){

3258 
èrgëUniCh¨
 =
missögCh¨M¨kî
;

3260 if(
myT¨gë
 < 
¨gs
->
èrgëLimô
){

3262 
mySour˚Ch¨
(Ë*
mySour˚
++;

3264 
mySour˚Ch¨
){

3265 
UCNV_SI
:

3266 
pToU2022Sèã
->
g
=0;

3267 i‡(
myD©a
->
isEm±ySegmít
) {

3268 
myD©a
->
isEm±ySegmít
 = 
FALSE
;

3269 *
îr
 = 
U_ILLEGAL_ESCAPE_SEQUENCE
;

3270 
¨gs
->
c⁄vîãr
->
toUCÆlbackRós⁄
 = 
UCNV_IRREGULAR
;

3271 
¨gs
->
c⁄vîãr
->
toUByãs
[0] = 
mySour˚Ch¨
;

3272 
¨gs
->
c⁄vîãr
->
toULígth
 = 1;

3273 
¨gs
->
èrgë
 = 
myT¨gë
;

3274 
¨gs
->
sour˚
 = 
mySour˚
;

3279 
UCNV_SO
:

3280 if(
pToU2022Sèã
->
cs
[1] != 0) {

3281 
pToU2022Sèã
->
g
=1;

3282 
myD©a
->
isEm±ySegmít
 = 
TRUE
;

3286 
myD©a
->
isEm±ySegmít
 = 
FALSE
;

3290 
ESC_2022
:

3291 
mySour˚
--;

3292 
esˇ≥
:

3294 c⁄° * 
mySour˚Bef‹e
 = 
mySour˚
;

3295 
öt8_t
 
toULígthBef‹e
 = 
¨gs
->
c⁄vîãr
->
toULígth
;

3297 
	`ch™geSèã_2022
(
¨gs
->
c⁄vîãr
,&(
mySour˚
),

3298 
mySour˚Limô
, 
ISO_2022_CN
,
îr
);

3301 if(
myD©a
->
key
==0 && 
	`U_SUCCESS
(*
îr
Ë&& myD©a->
isEm±ySegmít
) {

3302 *
îr
 = 
U_ILLEGAL_ESCAPE_SEQUENCE
;

3303 
¨gs
->
c⁄vîãr
->
toUCÆlbackRós⁄
 = 
UCNV_IRREGULAR
;

3304 
¨gs
->
c⁄vîãr
->
toULígth
 = (
öt8_t
)(
toULígthBef‹e
 + (
mySour˚
 - 
mySour˚Bef‹e
));

3309 if(
	`U_FAILURE
(*
îr
)){

3310 
¨gs
->
èrgë
 = 
myT¨gë
;

3311 
¨gs
->
sour˚
 = 
mySour˚
;

3312 
myD©a
->
isEm±ySegmít
 = 
FALSE
;

3319 
CR
:

3321 
LF
:

3322 
	`u¥v_mem£t
(
pToU2022Sèã
, 0, (
ISO2022Sèã
));

3326 
myD©a
->
isEm±ySegmít
 = 
FALSE
;

3327 if(
pToU2022Sèã
->
g
 != 0) {

3328 if(
mySour˚
 < 
mySour˚Limô
) {

3329 
UC⁄vîãrSh¨edD©a
 *
˙v
;

3330 
SèãEnum
 
ãmpSèã
;

3331 
öt32_t
 
ãmpBufLí
;

3332 
ÀadIsOk
, 
åaûIsOk
;

3333 
uöt8_t
 
åaûByã
;

3334 
gëTøûByã
:

3335 
åaûByã
 = (
uöt8_t
)*
mySour˚
;

3346 
ÀadIsOk
 = (
uöt8_t
)(
mySour˚Ch¨
 - 0x21) <= (0x7e - 0x21);

3347 
åaûIsOk
 = (
uöt8_t
)(
åaûByã
 - 0x21) <= (0x7e - 0x21);

3348 i‡(
ÀadIsOk
 && 
åaûIsOk
) {

3349 ++
mySour˚
;

3350 
ãmpSèã
 = (
SèãEnum
)
pToU2022Sèã
->
cs
[pToU2022Sèã->
g
];

3351 if(
ãmpSèã
 >
CNS_11643_0
) {

3352 
˙v
 = 
myD©a
->
myC⁄vîãrAºay
[
CNS_11643
];

3353 
ãmpBuf
[0] = (Ë(0x80+(
ãmpSèã
-
CNS_11643_0
));

3354 
ãmpBuf
[1] = (Ë(
mySour˚Ch¨
);

3355 
ãmpBuf
[2] = (Ë
åaûByã
;

3356 
ãmpBufLí
 = 3;

3359 
˙v
 = 
myD©a
->
myC⁄vîãrAºay
[
ãmpSèã
];

3360 
ãmpBuf
[0] = (Ë(
mySour˚Ch¨
);

3361 
ãmpBuf
[1] = (Ë
åaûByã
;

3362 
ãmpBufLí
 = 2;

3364 
èrgëUniCh¨
 = 
	`u˙v_MBCSSim∂eGëNextUCh¨
(
˙v
, 
ãmpBuf
, 
ãmpBufLí
, 
FALSE
);

3365 
mySour˚Ch¨
 = (mySour˚Ch¨ << 8Ë| 
åaûByã
;

3366 } i‡(!(
åaûIsOk
 || 
	`IS_2022_CONTROL
(
åaûByã
))) {

3368 ++
mySour˚
;

3370 
mySour˚Ch¨
 = 0x10000 | (mySour˚Ch¨ << 8Ë| 
åaûByã
;

3372 if(
pToU2022Sèã
->
g
>=2) {

3374 
pToU2022Sèã
->
g
ıToU2022Sèã->
¥evG
;

3377 
¨gs
->
c⁄vîãr
->
toUByãs
[0] = (
uöt8_t
)
mySour˚Ch¨
;

3378 
¨gs
->
c⁄vîãr
->
toULígth
 = 1;

3379 
ídlo›
;

3383 if(
mySour˚Ch¨
 <= 0x7f) {

3384 
èrgëUniCh¨
 = (
UCh¨
Ë
mySour˚Ch¨
;

3389 if(
èrgëUniCh¨
 < (
missögCh¨M¨kî
-1 )){

3390 if(
¨gs
->
off£ts
){

3391 
¨gs
->
off£ts
[
myT¨gë
 -árgs->
èrgë
] = (
öt32_t
)(
mySour˚
 -árgs->
sour˚
 - (
mySour˚Ch¨
 <= 0xff ? 1 : 2));

3393 *(
myT¨gë
++)=(
UCh¨
)
èrgëUniCh¨
;

3395 if(
èrgëUniCh¨
 > 
missögCh¨M¨kî
){

3397 
èrgëUniCh¨
-=0x0010000;

3398 *
myT¨gë
 = (
UCh¨
)(0xd800+(UCh¨)(
èrgëUniCh¨
>>10));

3399 if(
¨gs
->
off£ts
){

3400 
¨gs
->
off£ts
[
myT¨gë
 -árgs->
èrgë
] = (
öt32_t
)(
mySour˚
 -árgs->
sour˚
 - (
mySour˚Ch¨
 <= 0xff ? 1 : 2));

3402 ++
myT¨gë
;

3403 if(
myT¨gë
< 
¨gs
->
èrgëLimô
){

3404 *
myT¨gë
 = (
UCh¨
)(0xdc00+(UCh¨)(
èrgëUniCh¨
&0x3ff));

3405 if(
¨gs
->
off£ts
){

3406 
¨gs
->
off£ts
[
myT¨gë
 -árgs->
èrgë
] = (
öt32_t
)(
mySour˚
 -árgs->
sour˚
 - (
mySour˚Ch¨
 <= 0xff ? 1 : 2));

3408 ++
myT¨gë
;

3410 
¨gs
->
c⁄vîãr
->
UCh¨Eº‹Buf„r
[¨gs->c⁄vîãr->
UCh¨Eº‹Buf„rLígth
++]=

3411 (
UCh¨
)(0xdc00+(UCh¨)(
èrgëUniCh¨
&0x3ff));

3417 
	`toUnicodeCÆlback
(
¨gs
->
c⁄vîãr
,
mySour˚Ch¨
,
èrgëUniCh¨
,
îr
);

3422 *
îr
 =
U_BUFFER_OVERFLOW_ERROR
;

3426 
ídlo›
:

3427 
¨gs
->
èrgë
 = 
myT¨gë
;

3428 
¨gs
->
sour˚
 = 
mySour˚
;

3429 
	}
}

3432 
	$_ISO_2022_WrôeSub
(
UC⁄vîãrFromUnicodeArgs
 *
¨gs
, 
öt32_t
 
off£tIndex
, 
UEº‹Code
 *
îr
) {

3433 
UC⁄vîãr
 *
˙v
 = 
¨gs
->
c⁄vîãr
;

3434 
UC⁄vîãrD©aISO2022
 *
myC⁄vîãrD©a
=(UC⁄vîãrD©aISO2022 *Ë
˙v
->
exåaInfo
;

3435 
ISO2022Sèã
 *
pFromU2022Sèã
=&
myC⁄vîãrD©a
->
‰omU2022Sèã
;

3436 *
p
, *
subch¨
;

3437 
buf„r
[8];

3438 
öt32_t
 
Àngth
;

3440 
subch¨
=(*)
˙v
->
subCh¨s
;

3441 
Àngth
=
˙v
->
subCh¨Lí
;

3443 
p
 = 
buf„r
;

3444 
myC⁄vîãrD©a
->
loˇÀ
[0]){

3447 
öt8_t
 
cs
;

3449 if(
pFromU2022Sèã
->
g
 == 1) {

3451 
pFromU2022Sèã
->
g
 = 0;

3452 *
p
++ = 
UCNV_SI
;

3455 
cs
 = 
pFromU2022Sèã
->cs[0];

3456 if(
cs
 !
ASCII
 && c†!
JISX201
) {

3458 
pFromU2022Sèã
->
cs
[0] = (
öt8_t
)
ASCII
;

3459 *
p
++ = '\x1b';

3460 *
p
++ = '\x28';

3461 *
p
++ = '\x42';

3464 *
p
++ = 
subch¨
[0];

3468 if(
pFromU2022Sèã
->
g
 != 0) {

3470 
pFromU2022Sèã
->
g
 = 0;

3471 *
p
++ = 
UCNV_SI
;

3473 *
p
++ = 
subch¨
[0];

3476 if(
myC⁄vîãrD©a
->
vîsi⁄
 == 0) {

3477 if(
Àngth
 == 1) {

3478 if((
UBoﬁ
)
¨gs
->
c⁄vîãr
->
‰omUnicodeSètus
) {

3480 
¨gs
->
c⁄vîãr
->
‰omUnicodeSètus
 = 0;

3481 *
p
++ = 
UCNV_SI
;

3483 *
p
++ = 
subch¨
[0];

3485 if(!(
UBoﬁ
)
¨gs
->
c⁄vîãr
->
‰omUnicodeSètus
) {

3487 
¨gs
->
c⁄vîãr
->
‰omUnicodeSètus
 = 1;

3488 *
p
++ = 
UCNV_SO
;

3490 *
p
++ = 
subch¨
[0];

3491 *
p
++ = 
subch¨
[1];

3496 
uöt8_t
 *
cuºítSubCh¨s
 = 
myC⁄vîãrD©a
->
cuºítC⁄vîãr
->
subCh¨s
;

3497 
öt8_t
 
cuºítSubCh¨Lí
 = 
myC⁄vîãrD©a
->
cuºítC⁄vîãr
->
subCh¨Lí
;

3500 
myC⁄vîãrD©a
->
cuºítC⁄vîãr
->
subCh¨s
 = (
uöt8_t
 *)
subch¨
;

3501 
myC⁄vîãrD©a
->
cuºítC⁄vîãr
->
subCh¨Lí
 = (
öt8_t
)
Àngth
;

3504 
¨gs
->
c⁄vîãr
 = 
myC⁄vîãrD©a
->
cuºítC⁄vîãr
;

3505 
myC⁄vîãrD©a
->
cuºítC⁄vîãr
->
‰omUCh¨32
 = 
˙v
->fromUChar32;

3506 
	`u˙v_cbFromUWrôeSub
(
¨gs
, 0, 
îr
);

3507 
˙v
->
‰omUCh¨32
 = 
myC⁄vîãrD©a
->
cuºítC⁄vîãr
->fromUChar32;

3508 
¨gs
->
c⁄vîãr
 = 
˙v
;

3511 
myC⁄vîãrD©a
->
cuºítC⁄vîãr
->
subCh¨s
 = 
cuºítSubCh¨s
;

3512 
myC⁄vîãrD©a
->
cuºítC⁄vîãr
->
subCh¨Lí
 = 
cuºítSubCh¨Lí
;

3514 if(*
îr
 =
U_BUFFER_OVERFLOW_ERROR
) {

3515 if(
myC⁄vîãrD©a
->
cuºítC⁄vîãr
->
ch¨Eº‹Buf„rLígth
 > 0) {

3516 
	`u¥v_mem˝y
(

3517 
˙v
->
ch¨Eº‹Buf„r
,

3518 
myC⁄vîãrD©a
->
cuºítC⁄vîãr
->
ch¨Eº‹Buf„r
,

3519 
myC⁄vîãrD©a
->
cuºítC⁄vîãr
->
ch¨Eº‹Buf„rLígth
);

3521 
˙v
->
ch¨Eº‹Buf„rLígth
 = 
myC⁄vîãrD©a
->
cuºítC⁄vîãr
->charErrorBufferLength;

3522 
myC⁄vîãrD©a
->
cuºítC⁄vîãr
->
ch¨Eº‹Buf„rLígth
 = 0;

3530 
	`u˙v_cbFromUWrôeByãs
(
¨gs
,

3531 
buf„r
, (
öt32_t
)(
p
 - buffer),

3532 
off£tIndex
, 
îr
);

3533 
	}
}

3546 
	s˛⁄eSåu˘


3548 
UC⁄vîãr
 
	m˙v
;

3549 
UC⁄vîãr
 
	mcuºítC⁄vîãr
;

3550 
UAlig√dMem‹y
 
	mdódS∑˚
;

3551 
UC⁄vîãrD©aISO2022
 
	mmyd©a
;

3555 
UC⁄vîãr
 *

3556 
	$_ISO_2022_Sa„Cl⁄e
(

3557 c⁄° 
UC⁄vîãr
 *
˙v
,

3558 *
°ackBuf„r
,

3559 
öt32_t
 *
pBuf„rSize
,

3560 
UEº‹Code
 *
°©us
)

3562 
˛⁄eSåu˘
 * 
loˇlCl⁄e
;

3563 
UC⁄vîãrD©aISO2022
 *
˙vD©a
;

3564 
öt32_t
 
i
, 
size
;

3566 i‡(*
pBuf„rSize
 == 0) {

3567 *
pBuf„rSize
 = (
öt32_t
)(
˛⁄eSåu˘
);

3568  
NULL
;

3571 
˙vD©a
 = (
UC⁄vîãrD©aISO2022
 *)
˙v
->
exåaInfo
;

3572 
loˇlCl⁄e
 = (
˛⁄eSåu˘
 *)
°ackBuf„r
;

3576 
	`u¥v_mem˝y
(&
loˇlCl⁄e
->
myd©a
, 
˙vD©a
, (
UC⁄vîãrD©aISO2022
));

3577 
loˇlCl⁄e
->
˙v
.
exåaInfo
 = &loˇlCl⁄e->
myd©a
;

3578 
loˇlCl⁄e
->
˙v
.
isExåaLoˇl
 = 
TRUE
;

3582 if(
˙vD©a
->
cuºítC⁄vîãr
 !
NULL
) {

3583 
size
 = (
öt32_t
)((
UC⁄vîãr
Ë+ (
UAlig√dMem‹y
));

3584 
loˇlCl⁄e
->
myd©a
.
cuºítC⁄vîãr
 =

3585 
	`u˙v_ß„Cl⁄e
(
˙vD©a
->
cuºítC⁄vîãr
,

3586 &
loˇlCl⁄e
->
cuºítC⁄vîãr
,

3587 &
size
, 
°©us
);

3588 if(
	`U_FAILURE
(*
°©us
)) {

3589  
NULL
;

3593 
i
=0; i<
UCNV_2022_MAX_CONVERTERS
; ++i) {

3594 if(
˙vD©a
->
myC⁄vîãrAºay
[
i
] !
NULL
) {

3595 
	`u˙v_ö¸emítRefCou¡
(
˙vD©a
->
myC⁄vîãrAºay
[
i
]);

3599  &
loˇlCl⁄e
->
˙v
;

3600 
	}
}

3603 
	$_ISO_2022_GëUnicodeSë
(c⁄° 
UC⁄vîãr
 *
˙v
,

3604 c⁄° 
USëAddî
 *
ß
,

3605 
UC⁄vîãrUnicodeSë
 
which
,

3606 
UEº‹Code
 *
pEº‹Code
)

3608 
öt32_t
 
i
;

3609 
UC⁄vîãrD©aISO2022
* 
˙vD©a
;

3611 i‡(
	`U_FAILURE
(*
pEº‹Code
)) {

3614 #ifde‡
U_ENABLE_GENERIC_ISO_2022


3615 i‡(
˙v
->
sh¨edD©a
 =&
_ISO2022D©a
) {

3617 
ß
->
	`addR™ge
(ß->
£t
, 0, 0xd7FF);

3618 
ß
->
	`addR™ge
(ß->
£t
, 0xE000, 0x10FFFF);

3623 
˙vD©a
 = (
UC⁄vîãrD©aISO2022
*)
˙v
->
exåaInfo
;

3626 
˙vD©a
->
loˇÀ
[0]){

3629 
ß
->
	`add
(ß->
£t
, 0xa5);

3630 
ß
->
	`add
(ß->
£t
, 0x203e);

3631 if(
jpCh¨£tMasks
[
˙vD©a
->
vîsi⁄
]&
	`CSM
(
ISO8859_1
)) {

3633 
ß
->
	`addR™ge
(ß->
£t
, 0, 0xff);

3636 
ß
->
	`addR™ge
(ß->
£t
, 0, 0x7f);

3638 if(
˙vD©a
->
vîsi⁄
==3 || cnvD©a->vîsi⁄==4 || 
which
==
UCNV_ROUNDTRIP_AND_FALLBACK_SET
) {

3653 
ß
->
	`addR™ge
(ß->
£t
, 
HWKANA_START
, 
HWKANA_END
);

3659 
ß
->
	`addR™ge
(ß->
£t
, 0, 0x7f);

3663 
˙vD©a
->
cuºítC⁄vîãr
->
sh¨edD©a
->
im∂
->
	`gëUnicodeSë
(

3664 
˙vD©a
->
cuºítC⁄vîãr
, 
ß
, 
which
, 
pEº‹Code
);

3672 if–(
˙vD©a
->
loˇÀ
[0]=='c' || cnvData->locale[0]=='z') &&

3673 
˙vD©a
->
vîsi⁄
==0 && 
i
==
CNS_11643


3676 
	`u˙v_MBCSGëUnicodeSëF‹Byãs
(

3677 
˙vD©a
->
myC⁄vîãrAºay
[
i
],

3678 
ß
, 
UCNV_ROUNDTRIP_SET
,

3680 
pEº‹Code
);

3684 
i
=0; i<
UCNV_2022_MAX_CONVERTERS
; i++) {

3685 
UC⁄vîãrSëFûãr
 
fûãr
;

3686 if(
˙vD©a
->
myC⁄vîãrAºay
[
i
]!=
NULL
) {

3687 if–(
˙vD©a
->
loˇÀ
[0]=='c' || cnvData->locale[0]=='z') &&

3688 
˙vD©a
->
vîsi⁄
==0 && 
i
==
CNS_11643


3697 
fûãr
=
UCNV_SET_FILTER_2022_CN
;

3698 } if(
˙vD©a
->
loˇÀ
[0]=='j' && 
i
==
JISX208
) {

3703 
fûãr
=
UCNV_SET_FILTER_SJIS
;

3704 } if(
i
==
KSC5601
) {

3709 
fûãr
=
UCNV_SET_FILTER_GR94DBCS
;

3711 
fûãr
=
UCNV_SET_FILTER_NONE
;

3713 
	`u˙v_MBCSGëFûãªdUnicodeSëF‹Unicode
(
˙vD©a
->
myC⁄vîãrAºay
[
i
], 
ß
, 
which
, 
fûãr
, 
pEº‹Code
);

3722 
ß
->
	`ªmove
(ß->
£t
, 0x0e);

3723 
ß
->
	`ªmove
(ß->
£t
, 0x0f);

3724 
ß
->
	`ªmove
(ß->
£t
, 0x1b);

3727 
ß
->
	`ªmoveR™ge
(ß->
£t
, 0x80, 0x9f);

3728 
	}
}

3730 c⁄° 
UC⁄vîãrIm∂
 
	g_ISO2022Im∂
={

3731 
UCNV_ISO_2022
,

3733 
NULL
,

3734 
NULL
,

3736 
_ISO2022O≥n
,

3737 
_ISO2022Clo£
,

3738 
_ISO2022Re£t
,

3740 #ifde‡
U_ENABLE_GENERIC_ISO_2022


3741 
T_UC⁄vîãr_toUnicode_ISO_2022_OFFSETS_LOGIC
,

3742 
T_UC⁄vîãr_toUnicode_ISO_2022_OFFSETS_LOGIC
,

3743 
u˙v_‰omUnicode_UTF8
,

3744 
u˙v_‰omUnicode_UTF8_OFFSETS_LOGIC
,

3746 
NULL
,

3747 
NULL
,

3748 
NULL
,

3749 
NULL
,

3751 
NULL
,

3753 
NULL
,

3754 
_ISO2022gëName
,

3755 
_ISO_2022_WrôeSub
,

3756 
_ISO_2022_Sa„Cl⁄e
,

3757 
_ISO_2022_GëUnicodeSë


3759 c⁄° 
UC⁄vîãrSèticD©a
 
	g_ISO2022SèticD©a
={

3760 (
UC⁄vîãrSèticD©a
),

3763 
UCNV_IBM
,

3764 
UCNV_ISO_2022
,

3769 
FALSE
,

3770 
FALSE
,

3775 c⁄° 
UC⁄vîãrSh¨edD©a
 
	g_ISO2022D©a
={

3776 (
UC⁄vîãrSh¨edD©a
),

3777 ~((
uöt32_t
) 0),

3778 
NULL
,

3779 
NULL
,

3780 &
_ISO2022SèticD©a
,

3781 
FALSE
,

3782 &
_ISO2022Im∂
,

3787 c⁄° 
UC⁄vîãrIm∂
 
	g_ISO2022JPIm∂
={

3788 
UCNV_ISO_2022
,

3790 
NULL
,

3791 
NULL
,

3793 
_ISO2022O≥n
,

3794 
_ISO2022Clo£
,

3795 
_ISO2022Re£t
,

3797 
UC⁄vîãr_toUnicode_ISO_2022_JP_OFFSETS_LOGIC
,

3798 
UC⁄vîãr_toUnicode_ISO_2022_JP_OFFSETS_LOGIC
,

3799 
UC⁄vîãr_‰omUnicode_ISO_2022_JP_OFFSETS_LOGIC
,

3800 
UC⁄vîãr_‰omUnicode_ISO_2022_JP_OFFSETS_LOGIC
,

3801 
NULL
,

3803 
NULL
,

3804 
_ISO2022gëName
,

3805 
_ISO_2022_WrôeSub
,

3806 
_ISO_2022_Sa„Cl⁄e
,

3807 
_ISO_2022_GëUnicodeSë


3809 c⁄° 
UC⁄vîãrSèticD©a
 
	g_ISO2022JPSèticD©a
={

3810 (
UC⁄vîãrSèticD©a
),

3813 
UCNV_IBM
,

3814 
UCNV_ISO_2022
,

3819 
FALSE
,

3820 
FALSE
,

3825 c⁄° 
UC⁄vîãrSh¨edD©a
 
	g_ISO2022JPD©a
={

3826 (
UC⁄vîãrSh¨edD©a
),

3827 ~((
uöt32_t
) 0),

3828 
NULL
,

3829 
NULL
,

3830 &
_ISO2022JPSèticD©a
,

3831 
FALSE
,

3832 &
_ISO2022JPIm∂
,

3837 c⁄° 
UC⁄vîãrIm∂
 
	g_ISO2022KRIm∂
={

3838 
UCNV_ISO_2022
,

3840 
NULL
,

3841 
NULL
,

3843 
_ISO2022O≥n
,

3844 
_ISO2022Clo£
,

3845 
_ISO2022Re£t
,

3847 
UC⁄vîãr_toUnicode_ISO_2022_KR_OFFSETS_LOGIC
,

3848 
UC⁄vîãr_toUnicode_ISO_2022_KR_OFFSETS_LOGIC
,

3849 
UC⁄vîãr_‰omUnicode_ISO_2022_KR_OFFSETS_LOGIC
,

3850 
UC⁄vîãr_‰omUnicode_ISO_2022_KR_OFFSETS_LOGIC
,

3851 
NULL
,

3853 
NULL
,

3854 
_ISO2022gëName
,

3855 
_ISO_2022_WrôeSub
,

3856 
_ISO_2022_Sa„Cl⁄e
,

3857 
_ISO_2022_GëUnicodeSë


3859 c⁄° 
UC⁄vîãrSèticD©a
 
	g_ISO2022KRSèticD©a
={

3860 (
UC⁄vîãrSèticD©a
),

3863 
UCNV_IBM
,

3864 
UCNV_ISO_2022
,

3869 
FALSE
,

3870 
FALSE
,

3875 c⁄° 
UC⁄vîãrSh¨edD©a
 
	g_ISO2022KRD©a
={

3876 (
UC⁄vîãrSh¨edD©a
),

3877 ~((
uöt32_t
) 0),

3878 
NULL
,

3879 
NULL
,

3880 &
_ISO2022KRSèticD©a
,

3881 
FALSE
,

3882 &
_ISO2022KRIm∂
,

3887 c⁄° 
UC⁄vîãrIm∂
 
	g_ISO2022CNIm∂
={

3889 
UCNV_ISO_2022
,

3891 
NULL
,

3892 
NULL
,

3894 
_ISO2022O≥n
,

3895 
_ISO2022Clo£
,

3896 
_ISO2022Re£t
,

3898 
UC⁄vîãr_toUnicode_ISO_2022_CN_OFFSETS_LOGIC
,

3899 
UC⁄vîãr_toUnicode_ISO_2022_CN_OFFSETS_LOGIC
,

3900 
UC⁄vîãr_‰omUnicode_ISO_2022_CN_OFFSETS_LOGIC
,

3901 
UC⁄vîãr_‰omUnicode_ISO_2022_CN_OFFSETS_LOGIC
,

3902 
NULL
,

3904 
NULL
,

3905 
_ISO2022gëName
,

3906 
_ISO_2022_WrôeSub
,

3907 
_ISO_2022_Sa„Cl⁄e
,

3908 
_ISO_2022_GëUnicodeSë


3910 c⁄° 
UC⁄vîãrSèticD©a
 
	g_ISO2022CNSèticD©a
={

3911 (
UC⁄vîãrSèticD©a
),

3914 
UCNV_IBM
,

3915 
UCNV_ISO_2022
,

3920 
FALSE
,

3921 
FALSE
,

3926 c⁄° 
UC⁄vîãrSh¨edD©a
 
	g_ISO2022CND©a
={

3927 (
UC⁄vîãrSh¨edD©a
),

3928 ~((
uöt32_t
) 0),

3929 
NULL
,

3930 
NULL
,

3931 &
_ISO2022CNSèticD©a
,

3932 
FALSE
,

3933 &
_ISO2022CNIm∂
,

	@ucnv_bld.c

22 
	~"unicode/uty≥s.h
"

24 #i‡!
UCONFIG_NO_CONVERSION


26 
	~"unicode/putû.h
"

27 
	~"unicode/ud©a.h
"

28 
	~"unicode/u˙v.h
"

29 
	~"unicode/uloc.h
"

30 
	~"uåacimp.h
"

31 
	~"u˙v_io.h
"

32 
	~"u˙v_bld.h
"

33 
	~"u˙vmbcs.h
"

34 
	~"u˙v_ext.h
"

35 
	~"u˙v_˙v.h
"

36 
	~"u˙v_imp.h
"

37 
	~"uhash.h
"

38 
	~"umuãx.h
"

39 
	~"c°rög.h
"

40 
	~"cmem‹y.h
"

41 
	~"u˛n_cmn.h
"

42 
	~"u°r_˙v.h
"

47 
	~<°dio.h
>

48 
UCNV_DEBUG_LOG
(*
wh©
, *
who
, *
p
, 
l
);

49 
	#UCNV_DEBUG_LOG
(
x
,
y
,
z
Ë
	`UCNV_DEBUG_LOG
(x,y,z,
__LINE__
)

	)

51 
	#UCNV_DEBUG_LOG
(
x
,
y
,
z
)

	)

54 c⁄° 
UC⁄vîãrSh¨edD©a
 * const

55 
	gc⁄vîãrD©a
[
UCNV_NUMBER_OF_SUPPORTED_CONVERTER_TYPES
]={

56 
NULL
, NULL,

58 #i‡
UCONFIG_NO_LEGACY_CONVERSION


59 
NULL
,

61 &
_MBCSD©a
,

64 &
_L©ö1D©a
,

65 &
_UTF8D©a
, &
_UTF16BED©a
, &
_UTF16LED©a
, &
_UTF32BED©a
, &
_UTF32LED©a
,

66 
NULL
,

68 #i‡
UCONFIG_NO_LEGACY_CONVERSION


69 
NULL
,

70 
NULL
, NULL, NULL, NULL, NULL, NULL,

71 
NULL
, NULL, NULL, NULL, NULL, NULL,

72 
NULL
,

74 &
_ISO2022D©a
,

75 &
_LMBCSD©a1
,&
_LMBCSD©a2
, &
_LMBCSD©a3
, &
_LMBCSD©a4
, &
_LMBCSD©a5
, &
_LMBCSD©a6
,

76 &
_LMBCSD©a8
,&
_LMBCSD©a11
,&
_LMBCSD©a16
,&
_LMBCSD©a17
,&
_LMBCSD©a18
,&
_LMBCSD©a19
,

77 &
_HZD©a
,

80 &
_SCSUD©a
,

82 #i‡
UCONFIG_NO_LEGACY_CONVERSION


83 
NULL
,

85 &
_ISCIID©a
,

88 &
_ASCIID©a
,

89 &
_UTF7D©a
, &
_Bocu1D©a
, &
_UTF16D©a
, &
_UTF32D©a
, &
_CESU8D©a
, &
_IMAPD©a


97 c⁄° *
	m«me
;

98 c⁄° 
UC⁄vîãrTy≥
 
	mty≥
;

99 } c⁄° 
	g˙vNameTy≥
[] = {

100 { "bocu1", 
UCNV_BOCU1
 },

101 { "˚su8", 
UCNV_CESU8
 },

102 #i‡!
UCONFIG_NO_LEGACY_CONVERSION


103 { "hz",
UCNV_HZ
 },

105 { "im≠maûbox«me", 
UCNV_IMAP_MAILBOX
 },

106 #i‡!
UCONFIG_NO_LEGACY_CONVERSION


107 { "iscii", 
UCNV_ISCII
 },

108 { "iso2022", 
UCNV_ISO_2022
 },

110 { "iso88591", 
UCNV_LATIN_1
 },

111 #i‡!
UCONFIG_NO_LEGACY_CONVERSION


112 { "lmbcs1", 
UCNV_LMBCS_1
 },

113 { "lmbcs11",
UCNV_LMBCS_11
 },

114 { "lmbcs16",
UCNV_LMBCS_16
 },

115 { "lmbcs17",
UCNV_LMBCS_17
 },

116 { "lmbcs18",
UCNV_LMBCS_18
 },

117 { "lmbcs19",
UCNV_LMBCS_19
 },

118 { "lmbcs2", 
UCNV_LMBCS_2
 },

119 { "lmbcs3", 
UCNV_LMBCS_3
 },

120 { "lmbcs4", 
UCNV_LMBCS_4
 },

121 { "lmbcs5", 
UCNV_LMBCS_5
 },

122 { "lmbcs6", 
UCNV_LMBCS_6
 },

123 { "lmbcs8", 
UCNV_LMBCS_8
 },

125 { "scsu", 
UCNV_SCSU
 },

126 { "ußscii", 
UCNV_US_ASCII
 },

127 { "utf16", 
UCNV_UTF16
 },

128 { "utf16be", 
UCNV_UTF16_BigEndün
 },

129 { "utf16À", 
UCNV_UTF16_LôéeEndün
 },

130 #i‡
U_IS_BIG_ENDIAN


131 { "utf16›posôìndün", 
UCNV_UTF16_LôéeEndün
 },

132 { "utf16∂©f‹mídün", 
UCNV_UTF16_BigEndün
 },

134 { "utf16›posôìndün", 
UCNV_UTF16_BigEndün
},

135 { "utf16∂©f‹mídün", 
UCNV_UTF16_LôéeEndün
 },

137 { "utf32", 
UCNV_UTF32
 },

138 { "utf32be", 
UCNV_UTF32_BigEndün
 },

139 { "utf32À", 
UCNV_UTF32_LôéeEndün
 },

140 #i‡
U_IS_BIG_ENDIAN


141 { "utf32›posôìndün", 
UCNV_UTF32_LôéeEndün
 },

142 { "utf32∂©f‹mídün", 
UCNV_UTF32_BigEndün
 },

144 { "utf32›posôìndün", 
UCNV_UTF32_BigEndün
 },

145 { "utf32∂©f‹mídün", 
UCNV_UTF32_LôéeEndün
 },

147 { "utf7", 
UCNV_UTF7
 },

148 { "utf8", 
UCNV_UTF8
 }

153 
UHashèbÀ
 *
	gSHARED_DATA_HASHTABLE
 = 
NULL
;

154 
UMTX
 
	g˙vCacheMuãx
 = 
NULL
;

158 c⁄° **
	ggAvaûabÀC⁄vîãrs
 = 
NULL
;

159 
uöt16_t
 
	ggAvaûabÀC⁄vîãrCou¡
 = 0;

161 #i‡!
U_CHARSET_IS_UTF8


164 
	ggDeÁu…C⁄vîãrNameBuf„r
[
UCNV_MAX_CONVERTER_NAME_LENGTH
 + 1];

165 c⁄° *
	ggDeÁu…C⁄vîãrName
 = 
NULL
;

173 c⁄° 
UC⁄vîãrSh¨edD©a
 *
	ggDeÁu…Alg‹ôhmicSh¨edD©a
 = 
NULL
;

176 
UBoﬁ
 
	ggDeÁu…C⁄vîãrC⁄èösO±i⁄
;

180 c⁄° 
	gDATA_TYPE
[] = "cnv";

183 
	$u˙v_ÊushAvaûabÀC⁄vîãrCache
() {

184 i‡(
gAvaûabÀC⁄vîãrs
) {

185 
	`umtx_lock
(&
˙vCacheMuãx
);

186 
gAvaûabÀC⁄vîãrCou¡
 = 0;

187 
	`u¥v_‰ì
((**)
gAvaûabÀC⁄vîãrs
);

188 
gAvaûabÀC⁄vîãrs
 = 
NULL
;

189 
	`umtx_u∆ock
(&
˙vCacheMuãx
);

191 
	}
}

197 
UBoﬁ
 
U_CALLCONV
 
	$u˙v_˛ónup
() {

198 
	`u˙v_ÊushCache
();

199 i‡(
SHARED_DATA_HASHTABLE
 !
NULL
 && 
	`uhash_cou¡
(SHARED_DATA_HASHTABLE) == 0) {

200 
	`uhash_˛o£
(
SHARED_DATA_HASHTABLE
);

201 
SHARED_DATA_HASHTABLE
 = 
NULL
;

205 
	`u˙v_ÊushAvaûabÀC⁄vîãrCache
();

207 #i‡!
U_CHARSET_IS_UTF8


208 
gDeÁu…C⁄vîãrName
 = 
NULL
;

209 
gDeÁu…C⁄vîãrNameBuf„r
[0] = 0;

210 
gDeÁu…C⁄vîãrC⁄èösO±i⁄
 = 
FALSE
;

211 
gDeÁu…Alg‹ôhmicSh¨edD©a
 = 
NULL
;

214 
	`umtx_de°roy
(&
˙vCacheMuãx
);

217  (
SHARED_DATA_HASHTABLE
 =
NULL
);

218 
	}
}

220 
UBoﬁ
 
U_CALLCONV


221 
	$isCnvAc˚±abÀ
(*
c⁄ãxt
,

222 c⁄° *
ty≥
, c⁄° *
«me
,

223 c⁄° 
UD©aInfo
 *
pInfo
) {

224  (
UBoﬁ
)(

225 
pInfo
->
size
>=20 &&

226 
pInfo
->
isBigEndün
==
U_IS_BIG_ENDIAN
 &&

227 
pInfo
->
ch¨£tFamûy
==
U_CHARSET_FAMILY
 &&

228 
pInfo
->
sizeofUCh¨
==
U_SIZEOF_UCHAR
 &&

229 
pInfo
->
d©aF‹m©
[0]==0x63 &&

230 
pInfo
->
d©aF‹m©
[1]==0x6e &&

231 
pInfo
->
d©aF‹m©
[2]==0x76 &&

232 
pInfo
->
d©aF‹m©
[3]==0x74 &&

233 
pInfo
->
f‹m©Vîsi⁄
[0]==6);

234 
	}
}

239 
UC⁄vîãrSh¨edD©a
*

240 
	$u˙v_d©a_unFœâíCl⁄e
(
UC⁄vîãrLﬂdArgs
 *
pArgs
, 
UD©aMem‹y
 *
pD©a
, 
UEº‹Code
 *
°©us
)

243 c⁄° 
uöt8_t
 *
øw
 = (c⁄° uöt8_à*)
	`ud©a_gëMem‹y
(
pD©a
);

244 c⁄° 
UC⁄vîãrSèticD©a
 *
sour˚
 = (c⁄° UC⁄vîãrSèticD©®*Ë
øw
;

245 
UC⁄vîãrSh¨edD©a
 *
d©a
;

246 
UC⁄vîãrTy≥
 
ty≥
 = (UC⁄vîãrTy≥)
sour˚
->
c⁄vîsi⁄Ty≥
;

248 if(
	`U_FAILURE
(*
°©us
))

249  
NULL
;

251 if–(
uöt16_t
)
ty≥
 >
UCNV_NUMBER_OF_SUPPORTED_CONVERTER_TYPES
 ||

252 
c⁄vîãrD©a
[
ty≥
] =
NULL
 ||

253 
c⁄vîãrD©a
[
ty≥
]->
ª„ªn˚Cou¡î
 != 1 ||

254 
sour˚
->
°ru˘Size
 !(
UC⁄vîãrSèticD©a
))

256 *
°©us
 = 
U_INVALID_TABLE_FORMAT
;

257  
NULL
;

260 
d©a
 = (
UC⁄vîãrSh¨edD©a
 *)
	`u¥v_mÆloc
((UConverterSharedData));

261 if(
d©a
 =
NULL
) {

262 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

263  
NULL
;

267 
	`u¥v_mem˝y
(
d©a
, 
c⁄vîãrD©a
[
ty≥
], (
UC⁄vîãrSh¨edD©a
));

280 
d©a
->
èbÀ
 = (
UC⁄vîãrTabÀ
 *)
	`u¥v_mÆloc
((UConverterTable));

281 if(
d©a
->
èbÀ
 =
NULL
) {

282 
	`u¥v_‰ì
(
d©a
);

283 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

284  
NULL
;

286 
	`u¥v_mem£t
(
d©a
->
èbÀ
, 0, (
UC⁄vîãrTabÀ
));

289 
d©a
->
°©icD©a
 = 
sour˚
;

291 
d©a
->
sh¨edD©aCached
 = 
FALSE
;

294 
d©a
->
d©aMem‹y
 = (*)
pD©a
;

296 if(
d©a
->
im∂
->
lﬂd
 !
NULL
) {

297 
d©a
->
im∂
->
	`lﬂd
(d©a, 
pArgs
, 
øw
 + 
sour˚
->
°ru˘Size
, 
°©us
);

298 if(
	`U_FAILURE
(*
°©us
)) {

299 
	`u¥v_‰ì
(
d©a
->
èbÀ
);

300 
	`u¥v_‰ì
(
d©a
);

301  
NULL
;

304  
d©a
;

305 
	}
}

311 
UC⁄vîãrSh¨edD©a
 *
	$¸óãC⁄vîãrFromFûe
(
UC⁄vîãrLﬂdArgs
 *
pArgs
, 
UEº‹Code
 * 
îr
)

313 
UD©aMem‹y
 *
d©a
;

314 
UC⁄vîãrSh¨edD©a
 *
sh¨edD©a
;

316 
	`UTRACE_ENTRY_OC
(
UTRACE_UCNV_LOAD
);

318 i‡(
	`U_FAILURE
 (*
îr
)) {

319 
	`UTRACE_EXIT_STATUS
(*
îr
);

320  
NULL
;

323 
	`UTRACE_DATA2
(
UTRACE_OPEN_CLOSE
, "lﬂd c⁄vîã∏%†‰omÖackagê%s", 
pArgs
->
«me
,ÖArgs->
pkg
);

325 
d©a
 = 
	`ud©a_›íChoi˚
(
pArgs
->
pkg
, 
DATA_TYPE
,ÖArgs->
«me
, 
isCnvAc˚±abÀ
, 
NULL
, 
îr
);

326 if(
	`U_FAILURE
(*
îr
))

328 
	`UTRACE_EXIT_STATUS
(*
îr
);

329  
NULL
;

332 
sh¨edD©a
 = 
	`u˙v_d©a_unFœâíCl⁄e
(
pArgs
, 
d©a
, 
îr
);

333 if(
	`U_FAILURE
(*
îr
))

335 
	`ud©a_˛o£
(
d©a
);

336 
	`UTRACE_EXIT_STATUS
(*
îr
);

337  
NULL
;

347 
	`UTRACE_EXIT_PTR_STATUS
(
sh¨edD©a
, *
îr
);

348  
sh¨edD©a
;

349 
	}
}

353 c⁄° 
UC⁄vîãrSh¨edD©a
 *

354 
	$gëAlg‹ôhmicTy≥FromName
(c⁄° *
ªÆName
)

356 
uöt32_t
 
mid
, 
°¨t
, 
limô
;

357 
uöt32_t
 
œ°Mid
;

358 
ªsu…
;

359 
°rù≥dName
[
UCNV_MAX_CONVERTER_NAME_LENGTH
];

362 
	`u˙v_io_°rùF‹Com∑ª
(
°rù≥dName
, 
ªÆName
);

365 
°¨t
 = 0;

366 
limô
 = (
˙vNameTy≥
)/(cnvNameType[0]);

367 
mid
 = 
limô
;

368 
œ°Mid
 = 
UINT32_MAX
;

371 
mid
 = (
uöt32_t
)((
°¨t
 + 
limô
) / 2);

372 i‡(
œ°Mid
 =
mid
) {

375 
œ°Mid
 = 
mid
;

376 
ªsu…
 = 
	`u¥v_°rcmp
(
°rù≥dName
, 
˙vNameTy≥
[
mid
].
«me
);

378 i‡(
ªsu…
 < 0) {

379 
limô
 = 
mid
;

380 } i‡(
ªsu…
 > 0) {

381 
°¨t
 = 
mid
;

383  
c⁄vîãrD©a
[
˙vNameTy≥
[
mid
].
ty≥
];

387  
NULL
;

388 
	}
}

398 
	#UCNV_CACHE_LOAD_FACTOR
 2

	)

407 
	$u˙v_sh¨eC⁄vîãrD©a
(
UC⁄vîãrSh¨edD©a
 * 
d©a
)

409 
UEº‹Code
 
îr
 = 
U_ZERO_ERROR
;

413 i‡(
SHARED_DATA_HASHTABLE
 =
NULL
)

415 
SHARED_DATA_HASHTABLE
 = 
	`uhash_›íSize
(
uhash_hashCh¨s
, 
uhash_com∑ªCh¨s
, 
NULL
,

416 
	`u˙v_io_cou¡KnownC⁄vîãrs
(&
îr
)*
UCNV_CACHE_LOAD_FACTOR
,

417 &
îr
);

418 
	`u˛n_comm⁄_ªgi°îCÀ™up
(
UCLN_COMMON_UCNV
, 
u˙v_˛ónup
);

420 i‡(
	`U_FAILURE
(
îr
))

436 
d©a
->
sh¨edD©aCached
 = 
TRUE
;

438 
	`uhash_put
(
SHARED_DATA_HASHTABLE
,

439 (*Ë
d©a
->
°©icD©a
->
«me
,

441 
d©a
,

442 &
îr
);

443 
	`UCNV_DEBUG_LOG
("put", 
d©a
->
°©icD©a
->
«me
,data);

445 
	}
}

453 
UC⁄vîãrSh¨edD©a
 *

454 
	$u˙v_gëSh¨edC⁄vîãrD©a
(c⁄° *
«me
)

457 i‡(
SHARED_DATA_HASHTABLE
 =
NULL
)

459  
NULL
;

463 
UC⁄vîãrSh¨edD©a
 *
rc
;

465 
rc
 = (
UC⁄vîãrSh¨edD©a
*)
	`uhash_gë
(
SHARED_DATA_HASHTABLE
, 
«me
);

466 
	`UCNV_DEBUG_LOG
("gë",
«me
,
rc
);

467  
rc
;

469 
	}
}

482 
UBoﬁ


483 
	$u˙v_dñëeSh¨edC⁄vîãrD©a
(
UC⁄vîãrSh¨edD©a
 * 
dódSh¨edD©a
)

485 
	`UTRACE_ENTRY_OC
(
UTRACE_UCNV_UNLOAD
);

486 
	`UTRACE_DATA2
(
UTRACE_OPEN_CLOSE
, "u∆ﬂd c⁄vîã∏%†sh¨ed d©®%p", 
dódSh¨edD©a
->
°©icD©a
->
«me
, deadSharedData);

488 i‡(
dódSh¨edD©a
->
ª„ªn˚Cou¡î
 > 0) {

489 
	`UTRACE_EXIT_VALUE
((
öt32_t
)
FALSE
);

490  
FALSE
;

493 i‡(
dódSh¨edD©a
->
im∂
->
u∆ﬂd
 !
NULL
) {

494 
dódSh¨edD©a
->
im∂
->
	`u∆ﬂd
(deadSharedData);

497 if(
dódSh¨edD©a
->
d©aMem‹y
 !
NULL
)

499 
UD©aMem‹y
 *
d©a
 = (UD©aMem‹y*)
dódSh¨edD©a
->
d©aMem‹y
;

500 
	`ud©a_˛o£
(
d©a
);

503 if(
dódSh¨edD©a
->
èbÀ
 !
NULL
)

505 
	`u¥v_‰ì
(
dódSh¨edD©a
->
èbÀ
);

511 if(
dódSh¨edD©a
->
°©icD©aOw√d
 =
TRUE
)

513 
	`u¥v_‰ì
((*)
dódSh¨edD©a
->
°©icD©a
);

519 
	`u¥v_mem£t
(
dódSh¨edD©a
->0, (*deadSharedData));

522 
	`u¥v_‰ì
(
dódSh¨edD©a
);

524 
	`UTRACE_EXIT_VALUE
((
öt32_t
)
TRUE
);

525  
TRUE
;

526 
	}
}

532 
UC⁄vîãrSh¨edD©a
 *

533 
	$u˙v_lﬂd
(
UC⁄vîãrLﬂdArgs
 *
pArgs
, 
UEº‹Code
 *
îr
) {

534 
UC⁄vîãrSh¨edD©a
 *
mySh¨edC⁄vîãrD©a
;

536 if(
îr
 =
NULL
 || 
	`U_FAILURE
(*err)) {

537  
NULL
;

540 if(
pArgs
->
pkg
 !
NULL
 && *pArgs->pkg != 0) {

542  
	`¸óãC⁄vîãrFromFûe
(
pArgs
, 
îr
);

545 
mySh¨edC⁄vîãrD©a
 = 
	`u˙v_gëSh¨edC⁄vîãrD©a
(
pArgs
->
«me
);

546 i‡(
mySh¨edC⁄vîãrD©a
 =
NULL
)

549 
mySh¨edC⁄vîãrD©a
 = 
	`¸óãC⁄vîãrFromFûe
(
pArgs
, 
îr
);

550 i‡(
	`U_FAILURE
 (*
îr
Ë|| (
mySh¨edC⁄vîãrD©a
 =
NULL
))

552  
NULL
;

554 i‡(!
pArgs
->
⁄lyTe°IsLﬂdabÀ
)

557 
	`u˙v_sh¨eC⁄vîãrD©a
(
mySh¨edC⁄vîãrD©a
);

564 
mySh¨edC⁄vîãrD©a
->
ª„ªn˚Cou¡î
++;

567  
mySh¨edC⁄vîãrD©a
;

568 
	}
}

576 
	$u˙v_u∆ﬂd
(
UC⁄vîãrSh¨edD©a
 *
sh¨edD©a
) {

577 if(
sh¨edD©a
 !
NULL
) {

578 i‡(
sh¨edD©a
->
ª„ªn˚Cou¡î
 > 0) {

579 
sh¨edD©a
->
ª„ªn˚Cou¡î
--;

582 if((
sh¨edD©a
->
ª„ªn˚Cou¡î
 <0)&&(sh¨edD©a->
sh¨edD©aCached
 =
FALSE
)) {

583 
	`u˙v_dñëeSh¨edC⁄vîãrD©a
(
sh¨edD©a
);

586 
	}
}

589 
	$u˙v_u∆ﬂdSh¨edD©aIfRódy
(
UC⁄vîãrSh¨edD©a
 *
sh¨edD©a
)

596 if(
sh¨edD©a
 !
NULL
 && sh¨edD©a->
ª„ªn˚Cou¡î
 != ~0) {

597 
	`umtx_lock
(&
˙vCacheMuãx
);

598 
	`u˙v_u∆ﬂd
(
sh¨edD©a
);

599 
	`umtx_u∆ock
(&
˙vCacheMuãx
);

601 
	}
}

604 
	$u˙v_ö¸emítRefCou¡
(
UC⁄vîãrSh¨edD©a
 *
sh¨edD©a
)

611 if(
sh¨edD©a
 !
NULL
 && sh¨edD©a->
ª„ªn˚Cou¡î
 != ~0) {

612 
	`umtx_lock
(&
˙vCacheMuãx
);

613 
sh¨edD©a
->
ª„ªn˚Cou¡î
++;

614 
	`umtx_u∆ock
(&
˙vCacheMuãx
);

616 
	}
}

626 
	$∑r£C⁄vîãrO±i⁄s
(c⁄° *
öName
,

627 
UC⁄vîãrNamePõ˚s
 *
pPõ˚s
,

628 
UC⁄vîãrLﬂdArgs
 *
pArgs
,

629 
UEº‹Code
 *
îr
)

631 *
˙vName
 = 
pPõ˚s
->cnvName;

632 
c
;

633 
öt32_t
 
Àn
 = 0;

635 
pArgs
->
«me
=
öName
;

636 
pArgs
->
loˇÀ
=
pPõ˚s
->locale;

637 
pArgs
->
›ti⁄s
=
pPõ˚s
->options;

640 (
c
=*
öName
)!=0 && c!=
UCNV_OPTION_SEP_CHAR
) {

641 i‡(++
Àn
>=
UCNV_MAX_CONVERTER_NAME_LENGTH
) {

642 *
îr
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

643 
pPõ˚s
->
˙vName
[0]=0;

646 *
˙vName
++=
c
;

647 
öName
++;

649 *
˙vName
=0;

650 
pArgs
->
«me
=
pPõ˚s
->
˙vName
;

653 (
c
=*
öName
)!=0) {

654 if(
c
==
UCNV_OPTION_SEP_CHAR
) {

655 ++
öName
;

659 if(
	`u¥v_°∫cmp
(
öName
, "locale=", 7)==0) {

661 *
de°
=
pPõ˚s
->
loˇÀ
;

664 
öName
+=7;

665 
Àn
=0;

666 (
c
=*
öName
)!=0 && c!=
UCNV_OPTION_SEP_CHAR
) {

667 ++
öName
;

669 if(++
Àn
>=
ULOC_FULLNAME_CAPACITY
) {

670 *
îr
=
U_ILLEGAL_ARGUMENT_ERROR
;

671 
pPõ˚s
->
loˇÀ
[0]=0;

675 *
de°
++=
c
;

677 *
de°
=0;

678 } if(
	`u¥v_°∫cmp
(
öName
, "version=", 8)==0) {

680 
öName
+=8;

681 
c
=*
öName
;

682 if(
c
==0) {

683 
pArgs
->
›ti⁄s
=(
pPõ˚s
->›ti⁄s&=~
UCNV_OPTION_VERSION
);

685 } if((
uöt8_t
)(
c
-'0')<10) {

686 
pArgs
->
›ti⁄s
=
pPõ˚s
->›ti⁄s=’Põ˚s->›ti⁄s&~
UCNV_OPTION_VERSION
)|(
uöt32_t
)(
c
-'0');

687 ++
öName
;

689 } if(
	`u¥v_°∫cmp
(
öName
, "swaplfnl", 8)==0) {

690 
öName
+=8;

691 
pArgs
->
›ti⁄s
=(
pPõ˚s
->›ti⁄s|=
UCNV_OPTION_SWAP_LFNL
);

695 ((
c
 = *
öName
++Ë!0Ë&& (¯!
UCNV_OPTION_SEP_CHAR
)) {

697 if(
c
==0) {

702 
	}
}

711 
UC⁄vîãrSh¨edD©a
 *

712 
	$u˙v_lﬂdSh¨edD©a
(c⁄° *
c⁄vîãrName
,

713 
UC⁄vîãrNamePõ˚s
 *
pPõ˚s
,

714 
UC⁄vîãrLﬂdArgs
 *
pArgs
,

715 
UEº‹Code
 * 
îr
) {

716 
UC⁄vîãrNamePõ˚s
 
°ackPõ˚s
;

717 
UC⁄vîãrLﬂdArgs
 
°ackArgs
;

718 
UC⁄vîãrSh¨edD©a
 *
mySh¨edC⁄vîãrD©a
 = 
NULL
;

719 
UEº‹Code
 
öã∫ÆEº‹Code
 = 
U_ZERO_ERROR
;

720 
UBoﬁ
 
mayC⁄èöO±i⁄
 = 
TRUE
;

721 
UBoﬁ
 
checkF‹Alg‹ôhmic
 = 
TRUE
;

723 i‡(
	`U_FAILURE
 (*
îr
)) {

724  
NULL
;

727 if(
pPõ˚s
 =
NULL
) {

728 if(
pArgs
 !
NULL
) {

733 *
îr
 = 
U_INTERNAL_PROGRAM_ERROR
;

734  
NULL
;

736 
pPõ˚s
 = &
°ackPõ˚s
;

738 if(
pArgs
 =
NULL
) {

739 
	`u¥v_mem£t
(&
°ackArgs
, 0, (stackArgs));

740 
°ackArgs
.
size
 = (
öt32_t
)(stackArgs);

741 
pArgs
 = &
°ackArgs
;

744 
pPõ˚s
->
˙vName
[0] = 0;

745 
pPõ˚s
->
loˇÀ
[0] = 0;

746 
pPõ˚s
->
›ti⁄s
 = 0;

748 
pArgs
->
«me
 = 
c⁄vîãrName
;

749 
pArgs
->
loˇÀ
 = 
pPõ˚s
->locale;

750 
pArgs
->
›ti⁄s
 = 
pPõ˚s
->options;

753 i‡(
c⁄vîãrName
 =
NULL
) {

754 #i‡
U_CHARSET_IS_UTF8


755 
pArgs
->
«me
 = "UTF-8";

756  (
UC⁄vîãrSh¨edD©a
 *)
c⁄vîãrD©a
[
UCNV_UTF8
];

759 
pArgs
->
«me
 = 
	`u˙v_gëDeÁu…Name
();

760 i‡(
pArgs
->
«me
 =
NULL
) {

761 *
îr
 = 
U_MISSING_RESOURCE_ERROR
;

762  
NULL
;

764 
mySh¨edC⁄vîãrD©a
 = (
UC⁄vîãrSh¨edD©a
 *)
gDeÁu…Alg‹ôhmicSh¨edD©a
;

765 
checkF‹Alg‹ôhmic
 = 
FALSE
;

766 
mayC⁄èöO±i⁄
 = 
gDeÁu…C⁄vîãrC⁄èösO±i⁄
;

770 if(
	`UCNV_FAST_IS_UTF8
(
c⁄vîãrName
)) {

772 
pArgs
->
«me
 = "UTF-8";

773  (
UC⁄vîãrSh¨edD©a
 *)
c⁄vîãrD©a
[
UCNV_UTF8
];

777 
	`∑r£C⁄vîãrO±i⁄s
(
c⁄vîãrName
, 
pPõ˚s
, 
pArgs
, 
îr
);

778 i‡(
	`U_FAILURE
(*
îr
)) {

780  
NULL
;

784 
pArgs
->
«me
 = 
	`u˙v_io_gëC⁄vîãrName
’Args->«me, &
mayC⁄èöO±i⁄
, &
öã∫ÆEº‹Code
);

785 i‡(
	`U_FAILURE
(
öã∫ÆEº‹Code
Ë|| 
pArgs
->
«me
 =
NULL
) {

790 
pArgs
->
«me
 = 
pPõ˚s
->
˙vName
;

795 if(
mayC⁄èöO±i⁄
 && 
pArgs
->
«me
 !
pPõ˚s
->
˙vName
) {

796 
	`∑r£C⁄vîãrO±i⁄s
(
pArgs
->
«me
, 
pPõ˚s
,ÖArgs, 
îr
);

800 i‡(
checkF‹Alg‹ôhmic
) {

801 
mySh¨edC⁄vîãrD©a
 = (
UC⁄vîãrSh¨edD©a
 *)
	`gëAlg‹ôhmicTy≥FromName
(
pArgs
->
«me
);

803 i‡(
mySh¨edC⁄vîãrD©a
 =
NULL
)

810 
pArgs
->
√°edLﬂds
=1;

811 
pArgs
->
pkg
=
NULL
;

813 
	`umtx_lock
(&
˙vCacheMuãx
);

814 
mySh¨edC⁄vîãrD©a
 = 
	`u˙v_lﬂd
(
pArgs
, 
îr
);

815 
	`umtx_u∆ock
(&
˙vCacheMuãx
);

816 i‡(
	`U_FAILURE
 (*
îr
Ë|| (
mySh¨edC⁄vîãrD©a
 =
NULL
))

818  
NULL
;

822  
mySh¨edC⁄vîãrD©a
;

823 
	}
}

825 
UC⁄vîãr
 *

826 
	$u˙v_¸óãC⁄vîãr
(
UC⁄vîãr
 *
myUC⁄vîãr
, c⁄° *
c⁄vîãrName
, 
UEº‹Code
 * 
îr
)

828 
UC⁄vîãrNamePõ˚s
 
°ackPõ˚s
;

829 
UC⁄vîãrLﬂdArgs
 
°ackArgs
={ (
öt32_t
)(UConverterLoadArgs) };

830 
UC⁄vîãrSh¨edD©a
 *
mySh¨edC⁄vîãrD©a
;

832 
	`UTRACE_ENTRY_OC
(
UTRACE_UCNV_OPEN
);

834 if(
	`U_SUCCESS
(*
îr
)) {

835 
	`UTRACE_DATA1
(
UTRACE_OPEN_CLOSE
, "›í c⁄vîã∏%s", 
c⁄vîãrName
);

837 
mySh¨edC⁄vîãrD©a
 = 
	`u˙v_lﬂdSh¨edD©a
(
c⁄vîãrName
, &
°ackPõ˚s
, &
°ackArgs
, 
îr
);

839 
myUC⁄vîãr
 = 
	`u˙v_¸óãC⁄vîãrFromSh¨edD©a
(

840 
myUC⁄vîãr
, 
mySh¨edC⁄vîãrD©a
,

841 &
°ackArgs
,

842 
îr
);

844 if(
	`U_SUCCESS
(*
îr
)) {

845 
	`UTRACE_EXIT_PTR_STATUS
(
myUC⁄vîãr
, *
îr
);

846  
myUC⁄vîãr
;

851 
	`UTRACE_EXIT_STATUS
(*
îr
);

852  
NULL
;

853 
	}
}

855 
U_CFUNC
 
UBoﬁ


856 
	$u˙v_ˇnCª©eC⁄vîãr
(c⁄° *
c⁄vîãrName
, 
UEº‹Code
 *
îr
) {

857 
UC⁄vîãr
 
myUC⁄vîãr
;

858 
UC⁄vîãrNamePõ˚s
 
°ackPõ˚s
;

859 
UC⁄vîãrLﬂdArgs
 
°ackArgs
={ (
öt32_t
)(UConverterLoadArgs) };

860 
UC⁄vîãrSh¨edD©a
 *
mySh¨edC⁄vîãrD©a
;

862 
	`UTRACE_ENTRY_OC
(
UTRACE_UCNV_OPEN
);

864 if(
	`U_SUCCESS
(*
îr
)) {

865 
	`UTRACE_DATA1
(
UTRACE_OPEN_CLOSE
, "ã° i‡ˇ¿›í c⁄vîã∏%s", 
c⁄vîãrName
);

867 
°ackArgs
.
⁄lyTe°IsLﬂdabÀ
=
TRUE
;

868 
mySh¨edC⁄vîãrD©a
 = 
	`u˙v_lﬂdSh¨edD©a
(
c⁄vîãrName
, &
°ackPõ˚s
, &
°ackArgs
, 
îr
);

869 
	`u˙v_¸óãC⁄vîãrFromSh¨edD©a
(

870 &
myUC⁄vîãr
, 
mySh¨edC⁄vîãrD©a
,

871 &
°ackArgs
,

872 
îr
);

873 
	`u˙v_u∆ﬂdSh¨edD©aIfRódy
(
mySh¨edC⁄vîãrD©a
);

876 
	`UTRACE_EXIT_STATUS
(*
îr
);

877  
	`U_SUCCESS
(*
îr
);

878 
	}
}

880 
UC⁄vîãr
 *

881 
	$u˙v_¸óãAlg‹ôhmicC⁄vîãr
(
UC⁄vîãr
 *
myUC⁄vîãr
,

882 
UC⁄vîãrTy≥
 
ty≥
,

883 c⁄° *
loˇÀ
, 
uöt32_t
 
›ti⁄s
,

884 
UEº‹Code
 *
îr
) {

885 
UC⁄vîãr
 *
˙v
;

886 c⁄° 
UC⁄vîãrSh¨edD©a
 *
sh¨edD©a
;

887 
UC⁄vîãrLﬂdArgs
 
°ackArgs
={ (
öt32_t
)(UConverterLoadArgs) };

889 
	`UTRACE_ENTRY_OC
(
UTRACE_UCNV_OPEN_ALGORITHMIC
);

890 
	`UTRACE_DATA1
(
UTRACE_OPEN_CLOSE
, "›íálg‹ôhmi¯c⁄vîã∏ty≥ %d", (
öt32_t
)
ty≥
);

892 if(
ty≥
<0 || 
UCNV_NUMBER_OF_SUPPORTED_CONVERTER_TYPES
<=type) {

893 *
îr
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

894 
	`UTRACE_EXIT_STATUS
(
U_ILLEGAL_ARGUMENT_ERROR
);

895  
NULL
;

898 
sh¨edD©a
 = 
c⁄vîãrD©a
[
ty≥
];

904 if(
sh¨edD©a
 =
NULL
 || sh¨edD©a->
ª„ªn˚Cou¡î
 != ~0) {

906 *
îr
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

907 
	`UTRACE_EXIT_STATUS
(
U_ILLEGAL_ARGUMENT_ERROR
);

908  
NULL
;

911 
°ackArgs
.
«me
 = "";

912 
°ackArgs
.
›ti⁄s
 = options;

913 
°ackArgs
.
loˇÀ
=locale;

914 
˙v
 = 
	`u˙v_¸óãC⁄vîãrFromSh¨edD©a
(

915 
myUC⁄vîãr
, (
UC⁄vîãrSh¨edD©a
 *)
sh¨edD©a
,

916 &
°ackArgs
, 
îr
);

918 
	`UTRACE_EXIT_PTR_STATUS
(
˙v
, *
îr
);

919  
˙v
;

920 
	}
}

922 
UC⁄vîãr
*

923 
	$u˙v_¸óãC⁄vîãrFromPackage
(c⁄° *
∑ckageName
, c⁄° *
c⁄vîãrName
, 
UEº‹Code
 * 
îr
)

925 
UC⁄vîãr
 *
myUC⁄vîãr
;

926 
UC⁄vîãrSh¨edD©a
 *
mySh¨edC⁄vîãrD©a
;

927 
UC⁄vîãrNamePõ˚s
 
°ackPõ˚s
;

928 
UC⁄vîãrLﬂdArgs
 
°ackArgs
={ (
öt32_t
)(UConverterLoadArgs) };

930 
	`UTRACE_ENTRY_OC
(
UTRACE_UCNV_OPEN_PACKAGE
);

932 if(
	`U_FAILURE
(*
îr
)) {

933 
	`UTRACE_EXIT_STATUS
(*
îr
);

934  
NULL
;

937 
	`UTRACE_DATA2
(
UTRACE_OPEN_CLOSE
, "›í c⁄vîã∏%†‰omÖackagê%s", 
c⁄vîãrName
, 
∑ckageName
);

940 
°ackPõ˚s
.
˙vName
[0] = 0;

941 
°ackPõ˚s
.
loˇÀ
[0] = 0;

942 
°ackPõ˚s
.
›ti⁄s
 = 0;

943 
	`∑r£C⁄vîãrO±i⁄s
(
c⁄vîãrName
, &
°ackPõ˚s
, &
°ackArgs
, 
îr
);

944 i‡(
	`U_FAILURE
(*
îr
)) {

946 
	`UTRACE_EXIT_STATUS
(*
îr
);

947  
NULL
;

949 
°ackArgs
.
√°edLﬂds
=1;

950 
°ackArgs
.
pkg
=
∑ckageName
;

953 
mySh¨edC⁄vîãrD©a
 = 
	`¸óãC⁄vîãrFromFûe
(&
°ackArgs
, 
îr
);

955 i‡(
	`U_FAILURE
(*
îr
)) {

956 
	`UTRACE_EXIT_STATUS
(*
îr
);

957  
NULL
;

961 
myUC⁄vîãr
 = 
	`u˙v_¸óãC⁄vîãrFromSh¨edD©a
(
NULL
, 
mySh¨edC⁄vîãrD©a
, &
°ackArgs
, 
îr
);

963 i‡(
	`U_FAILURE
(*
îr
)) {

964 
	`u˙v_˛o£
(
myUC⁄vîãr
);

965 
	`UTRACE_EXIT_STATUS
(*
îr
);

966  
NULL
;

969 
	`UTRACE_EXIT_PTR_STATUS
(
myUC⁄vîãr
, *
îr
);

970  
myUC⁄vîãr
;

971 
	}
}

974 
UC⁄vîãr
*

975 
	$u˙v_¸óãC⁄vîãrFromSh¨edD©a
(
UC⁄vîãr
 *
myUC⁄vîãr
,

976 
UC⁄vîãrSh¨edD©a
 *
mySh¨edC⁄vîãrD©a
,

977 
UC⁄vîãrLﬂdArgs
 *
pArgs
,

978 
UEº‹Code
 *
îr
)

980 
UBoﬁ
 
isC›yLoˇl
;

982 if(
	`U_FAILURE
(*
îr
)) {

983 
	`u˙v_u∆ﬂdSh¨edD©aIfRódy
(
mySh¨edC⁄vîãrD©a
);

984  
myUC⁄vîãr
;

986 if(
myUC⁄vîãr
 =
NULL
)

988 
myUC⁄vîãr
 = (
UC⁄vîãr
 *Ë
	`u¥v_mÆloc
 ( (UConverter));

989 if(
myUC⁄vîãr
 =
NULL
)

991 *
îr
 = 
U_MEMORY_ALLOCATION_ERROR
;

992 
	`u˙v_u∆ﬂdSh¨edD©aIfRódy
(
mySh¨edC⁄vîãrD©a
);

993  
NULL
;

995 
isC›yLoˇl
 = 
FALSE
;

997 
isC›yLoˇl
 = 
TRUE
;

1001 
	`u¥v_mem£t
(
myUC⁄vîãr
, 0, (
UC⁄vîãr
));

1002 
myUC⁄vîãr
->
isC›yLoˇl
 = isCopyLocal;

1004 
myUC⁄vîãr
->
sh¨edD©a
 = 
mySh¨edC⁄vîãrD©a
;

1005 
myUC⁄vîãr
->
›ti⁄s
 = 
pArgs
->options;

1006 if(!
pArgs
->
⁄lyTe°IsLﬂdabÀ
) {

1007 
myUC⁄vîãr
->
¥eFromUFú°CP
 = 
U_SENTINEL
;

1008 
myUC⁄vîãr
->
‰omCh¨Eº‹Behaviour
 = 
UCNV_TO_U_DEFAULT_CALLBACK
;

1009 
myUC⁄vîãr
->
‰omUCh¨Eº‹Behaviour
 = 
UCNV_FROM_U_DEFAULT_CALLBACK
;

1010 
myUC⁄vîãr
->
toUnicodeSètus
 = 
mySh¨edC⁄vîãrD©a
->toUnicodeStatus;

1011 
myUC⁄vîãr
->
maxByãsPîUCh¨
 = 
mySh¨edC⁄vîãrD©a
->
°©icD©a
->
maxByãsPîCh¨
;

1012 
myUC⁄vîãr
->
subCh¨1
 = 
mySh¨edC⁄vîãrD©a
->
°©icD©a
->subChar1;

1013 
myUC⁄vîãr
->
subCh¨Lí
 = 
mySh¨edC⁄vîãrD©a
->
°©icD©a
->subCharLen;

1014 
myUC⁄vîãr
->
subCh¨s
 = (
uöt8_t
 *)myUC⁄vîãr->
subUCh¨s
;

1015 
	`u¥v_mem˝y
(
myUC⁄vîãr
->
subCh¨s
, 
mySh¨edC⁄vîãrD©a
->
°©icD©a
->
subCh¨
, myUC⁄vîãr->
subCh¨Lí
);

1016 
myUC⁄vîãr
->
toUCÆlbackRós⁄
 = 
UCNV_ILLEGAL
;

1019 if(
mySh¨edC⁄vîãrD©a
->
im∂
->
›í
 !
NULL
) {

1020 
mySh¨edC⁄vîãrD©a
->
im∂
->
	`›í
(
myUC⁄vîãr
, 
pArgs
, 
îr
);

1021 if(
	`U_FAILURE
(*
îr
Ë&& !
pArgs
->
⁄lyTe°IsLﬂdabÀ
) {

1023 
	`u˙v_˛o£
(
myUC⁄vîãr
);

1024  
NULL
;

1028  
myUC⁄vîãr
;

1029 
	}
}

1033 
U_CAPI
 
öt32_t
 
U_EXPORT2


1034 
	$u˙v_ÊushCache
 ()

1036 
UC⁄vîãrSh¨edD©a
 *
mySh¨edD©a
 = 
NULL
;

1037 
öt32_t
 
pos
;

1038 
öt32_t
 
èbÀDñëedNum
 = 0;

1039 c⁄° 
UHashEÀmít
 *
e
;

1041 
öt32_t
 
i
, 
ªmaöög
;

1043 
	`UTRACE_ENTRY_OC
(
UTRACE_UCNV_FLUSH_CACHE
);

1046 
	`u_ÊushDeÁu…C⁄vîãr
();

1051 i‡(
SHARED_DATA_HASHTABLE
 =
NULL
) {

1052 
	`UTRACE_EXIT_VALUE
((
öt32_t
)0);

1067 
	`umtx_lock
(&
˙vCacheMuãx
);

1074 
i
 = 0;

1076 
ªmaöög
 = 0;

1077 
pos
 = -1;

1078 (
e
 = 
	`uhash_√xtEÀmít
 (
SHARED_DATA_HASHTABLE
, &
pos
)Ë!
NULL
)

1080 
mySh¨edD©a
 = (
UC⁄vîãrSh¨edD©a
 *Ë
e
->
vÆue
.
poöãr
;

1082 i‡(
mySh¨edD©a
->
ª„ªn˚Cou¡î
 == 0)

1084 
èbÀDñëedNum
++;

1086 
	`UCNV_DEBUG_LOG
("dñ",
mySh¨edD©a
->
°©icD©a
->
«me
,mySharedData);

1088 
	`uhash_ªmoveEÀmít
(
SHARED_DATA_HASHTABLE
, 
e
);

1089 
mySh¨edD©a
->
sh¨edD©aCached
 = 
FALSE
;

1090 
	`u˙v_dñëeSh¨edC⁄vîãrD©a
 (
mySh¨edD©a
);

1092 ++
ªmaöög
;

1095 } ++
i
 =1 && 
ªmaöög
 > 0);

1096 
	`umtx_u∆ock
(&
˙vCacheMuãx
);

1098 
	`UTRACE_DATA1
(
UTRACE_INFO
, "u˙v_ÊushCache(Ëexô†wôh %d c⁄vîãr†ªmaöög", 
ªmaöög
);

1100 
	`UTRACE_EXIT_VALUE
(
èbÀDñëedNum
);

1101  
èbÀDñëedNum
;

1102 
	}
}

1106 
UBoﬁ
 
	$haveAvaûabÀC⁄vîãrLi°
(
UEº‹Code
 *
pEº‹Code
) {

1107 
√edInô
;

1108 
	`UMTX_CHECK
(&
˙vCacheMuãx
, (
gAvaûabÀC⁄vîãrs
 =
NULL
), 
√edInô
);

1109 i‡(
√edInô
) {

1110 
UC⁄vîãr
 
ãmpC⁄vîãr
;

1111 
UEnumî©i⁄
 *
ÆlC⁄vEnum
 = 
NULL
;

1112 
uöt16_t
 
idx
;

1113 
uöt16_t
 
loˇlC⁄vîãrCou¡
;

1114 
uöt16_t
 
ÆlC⁄vîãrCou¡
;

1115 
UEº‹Code
 
loˇlSètus
;

1116 c⁄° *
c⁄vîãrName
;

1117 c⁄° **
loˇlC⁄vîãrLi°
;

1119 
ÆlC⁄vEnum
 = 
	`u˙v_›íAŒNames
(
pEº‹Code
);

1120 
ÆlC⁄vîãrCou¡
 = 
	`uíum_cou¡
(
ÆlC⁄vEnum
, 
pEº‹Code
);

1121 i‡(
	`U_FAILURE
(*
pEº‹Code
)) {

1122  
FALSE
;

1126 
loˇlC⁄vîãrLi°
 = (c⁄° **Ë
	`u¥v_mÆloc
(
ÆlC⁄vîãrCou¡
 * (*));

1127 i‡(!
loˇlC⁄vîãrLi°
) {

1128 *
pEº‹Code
 = 
U_MEMORY_ALLOCATION_ERROR
;

1129  
FALSE
;

1133 
loˇlSètus
 = 
U_ZERO_ERROR
;

1134 
	`u˙v_˛o£
(
	`u˙v_¸óãC⁄vîãr
(&
ãmpC⁄vîãr
, 
NULL
, &
loˇlSètus
));

1136 
loˇlC⁄vîãrCou¡
 = 0;

1138 
idx
 = 0; idx < 
ÆlC⁄vîãrCou¡
; idx++) {

1139 
loˇlSètus
 = 
U_ZERO_ERROR
;

1140 
c⁄vîãrName
 = 
	`uíum_√xt
(
ÆlC⁄vEnum
, 
NULL
, &
loˇlSètus
);

1141 i‡(
	`u˙v_ˇnCª©eC⁄vîãr
(
c⁄vîãrName
, &
loˇlSètus
)) {

1142 
loˇlC⁄vîãrLi°
[
loˇlC⁄vîãrCou¡
++] = 
c⁄vîãrName
;

1145 
	`uíum_˛o£
(
ÆlC⁄vEnum
);

1147 
	`umtx_lock
(&
˙vCacheMuãx
);

1148 i‡(
gAvaûabÀC⁄vîãrs
 =
NULL
) {

1149 
gAvaûabÀC⁄vîãrCou¡
 = 
loˇlC⁄vîãrCou¡
;

1150 
gAvaûabÀC⁄vîãrs
 = 
loˇlC⁄vîãrLi°
;

1151 
	`u˛n_comm⁄_ªgi°îCÀ™up
(
UCLN_COMMON_UCNV
, 
u˙v_˛ónup
);

1154 
	`u¥v_‰ì
((**)
loˇlC⁄vîãrLi°
);

1156 
	`umtx_u∆ock
(&
˙vCacheMuãx
);

1158  
TRUE
;

1159 
	}
}

1161 
U_CFUNC
 
uöt16_t


1162 
	$u˙v_bld_cou¡AvaûabÀC⁄vîãrs
(
UEº‹Code
 *
pEº‹Code
) {

1163 i‡(
	`haveAvaûabÀC⁄vîãrLi°
(
pEº‹Code
)) {

1164  
gAvaûabÀC⁄vîãrCou¡
;

1167 
	}
}

1169 
U_CFUNC
 const *

1170 
	$u˙v_bld_gëAvaûabÀC⁄vîãr
(
uöt16_t
 
n
, 
UEº‹Code
 *
pEº‹Code
) {

1171 i‡(
	`haveAvaûabÀC⁄vîãrLi°
(
pEº‹Code
)) {

1172 i‡(
n
 < 
gAvaûabÀC⁄vîãrCou¡
) {

1173  
gAvaûabÀC⁄vîãrs
[
n
];

1175 *
pEº‹Code
 = 
U_INDEX_OUTOFBOUNDS_ERROR
;

1177  
NULL
;

1178 
	}
}

1182 #i‡!
U_CHARSET_IS_UTF8


1195 
U_INLINE
 

1196 
	$öã∫ÆSëName
(c⁄° *
«me
, 
UEº‹Code
 *
°©us
) {

1197 
UC⁄vîãrNamePõ˚s
 
°ackPõ˚s
;

1198 
UC⁄vîãrLﬂdArgs
 
°ackArgs
={ (
öt32_t
)(UConverterLoadArgs) };

1199 
öt32_t
 
Àngth
=(öt32_t)(
	`u¥v_°æí
(
«me
));

1200 
UBoﬁ
 
c⁄èösO±i⁄
 = (UBoﬁ)(
	`u¥v_°rchr
(
«me
, 
UCNV_OPTION_SEP_CHAR
Ë!
NULL
);

1201 c⁄° 
UC⁄vîãrSh¨edD©a
 *
Æg‹ôhmicSh¨edD©a
;

1203 
°ackArgs
.
«me
 =Çame;

1204 if(
c⁄èösO±i⁄
) {

1205 
°ackPõ˚s
.
˙vName
[0] = 0;

1206 
°ackPõ˚s
.
loˇÀ
[0] = 0;

1207 
°ackPõ˚s
.
›ti⁄s
 = 0;

1208 
	`∑r£C⁄vîãrO±i⁄s
(
«me
, &
°ackPõ˚s
, &
°ackArgs
, 
°©us
);

1209 if(
	`U_FAILURE
(*
°©us
)) {

1213 
Æg‹ôhmicSh¨edD©a
 = 
	`gëAlg‹ôhmicTy≥FromName
(
°ackArgs
.
«me
);

1215 
	`umtx_lock
(&
˙vCacheMuãx
);

1217 
gDeÁu…Alg‹ôhmicSh¨edD©a
 = 
Æg‹ôhmicSh¨edD©a
;

1218 
gDeÁu…C⁄vîãrC⁄èösO±i⁄
 = 
c⁄èösO±i⁄
;

1219 
	`u¥v_mem˝y
(
gDeÁu…C⁄vîãrNameBuf„r
, 
«me
, 
Àngth
);

1220 
gDeÁu…C⁄vîãrNameBuf„r
[
Àngth
]=0;

1224 
gDeÁu…C⁄vîãrName
 = 
gDeÁu…C⁄vîãrNameBuf„r
;

1226 
	`u˛n_comm⁄_ªgi°îCÀ™up
(
UCLN_COMMON_UCNV
, 
u˙v_˛ónup
);

1228 
	`umtx_u∆ock
(&
˙vCacheMuãx
);

1229 
	}
}

1240 
U_CAPI
 c⁄° * 
U_EXPORT2


1241 
	$u˙v_gëDeÁu…Name
() {

1242 #i‡
U_CHARSET_IS_UTF8


1246 c⁄° *
«me
;

1252 
	`UMTX_CHECK
(&
˙vCacheMuãx
, 
gDeÁu…C⁄vîãrName
, 
«me
);

1253 if(
«me
==
NULL
) {

1254 
UEº‹Code
 
îr‹Code
 = 
U_ZERO_ERROR
;

1255 
UC⁄vîãr
 *
˙v
 = 
NULL
;

1257 
«me
 = 
	`u¥v_gëDeÁu…Codïage
();

1260 if(
«me
 !
NULL
) {

1261 
˙v
 = 
	`u˙v_›í
(
«me
, &
îr‹Code
);

1262 if(
	`U_SUCCESS
(
îr‹Code
Ë&& 
˙v
 !
NULL
) {

1263 
«me
 = 
	`u˙v_gëName
(
˙v
, &
îr‹Code
);

1267 if(
«me
 =
NULL
 ||Çame[0] == 0

1268 || 
	`U_FAILURE
(
îr‹Code
Ë|| 
˙v
 =
NULL


1269 || 
	`u¥v_°æí
(
«me
)>=(
gDeÁu…C⁄vîãrNameBuf„r
))

1272 #i‡(
U_CHARSET_FAMILY
 =
U_ASCII_FAMILY
)

1273 
«me
 = "US-ASCII";

1275 #ñi‡
	`deföed
(
OS390
)

1276 
«me
 = "ibm-1047_P100-1995" 
UCNV_SWAP_LFNL_OPTION_STRING
;

1278 
«me
 = "ibm-37_P100-1995";

1282 
	`öã∫ÆSëName
(
«me
, &
îr‹Code
);

1285 
	`u˙v_˛o£
(
˙v
);

1288  
«me
;

1290 
	}
}

1296 
U_CAPI
 
U_EXPORT2


1297 
	$u˙v_£tDeÁu…Name
(c⁄° *
c⁄vîãrName
) {

1298 #i‡!
U_CHARSET_IS_UTF8


1299 if(
c⁄vîãrName
==
NULL
) {

1301 
gDeÁu…C⁄vîãrName
=
NULL
;

1303 
UEº‹Code
 
îr‹Code
 = 
U_ZERO_ERROR
;

1304 
UC⁄vîãr
 *
˙v
 = 
NULL
;

1305 c⁄° *
«me
 = 
NULL
;

1308 
˙v
 = 
	`u˙v_›í
(
c⁄vîãrName
, &
îr‹Code
);

1309 if(
	`U_SUCCESS
(
îr‹Code
Ë&& 
˙v
 !
NULL
) {

1310 
«me
 = 
	`u˙v_gëName
(
˙v
, &
îr‹Code
);

1313 if(
	`U_SUCCESS
(
îr‹Code
Ë&& 
«me
!=
NULL
) {

1314 
	`öã∫ÆSëName
(
«me
, &
îr‹Code
);

1319 
	`u˙v_˛o£
(
˙v
);

1322 
	`u_ÊushDeÁu…C⁄vîãr
();

1325 
	}
}

1331 #i‡!
UCONFIG_NO_LEGACY_CONVERSION


1333 
U_CAPI
 
öt32_t
 
U_EXPORT2


1334 
	$u˙v_sw≠
(c⁄° 
UD©aSw≠≥r
 *
ds
,

1335 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

1336 
UEº‹Code
 *
pEº‹Code
) {

1337 c⁄° 
UD©aInfo
 *
pInfo
;

1338 
öt32_t
 
hódîSize
;

1340 c⁄° 
uöt8_t
 *
öByãs
;

1341 
uöt8_t
 *
outByãs
;

1343 
uöt32_t
 
off£t
, 
cou¡
, 
°©icD©aSize
;

1344 
öt32_t
 
size
;

1346 c⁄° 
UC⁄vîãrSèticD©a
 *
öSèticD©a
;

1347 
UC⁄vîãrSèticD©a
 *
outSèticD©a
;

1349 c⁄° 
_MBCSHódî
 *
öMBCSHódî
;

1350 
_MBCSHódî
 *
outMBCSHódî
;

1351 
_MBCSHódî
 
mbcsHódî
;

1352 
uöt32_t
 
mbcsHódîLígth
;

1353 
UBoﬁ
 
noFromU
=
FALSE
;

1355 
uöt8_t
 
ouçutTy≥
;

1357 
öt32_t
 
maxFa°UCh¨
, 
mbcsIndexLígth
;

1359 c⁄° 
öt32_t
 *
öExtIndexes
;

1360 
öt32_t
 
extOff£t
;

1363 
hódîSize
=
	`ud©a_sw≠D©aHódî
(
ds
, 
öD©a
, 
Àngth
, 
outD©a
, 
pEº‹Code
);

1364 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

1369 
pInfo
=(c⁄° 
UD©aInfo
 *)((c⁄° *)
öD©a
+4);

1371 
pInfo
->
d©aF‹m©
[0]==0x63 &&

1372 
pInfo
->
d©aF‹m©
[1]==0x6e &&

1373 
pInfo
->
d©aF‹m©
[2]==0x76 &&

1374 
pInfo
->
d©aF‹m©
[3]==0x74 &&

1375 
pInfo
->
f‹m©Vîsi⁄
[0]==6 &&

1376 
pInfo
->
f‹m©Vîsi⁄
[1]>=2

1378 
	`ud©a_¥ötEº‹
(
ds
, "ucnv_swap(): data format %02x.%02x.%02x.%02x (format version %02x.%02x) isÇotÑecognizedásán ICU .cnv conversionÅable\n",

1379 
pInfo
->
d©aF‹m©
[0],ÖInfo->dataFormat[1],

1380 
pInfo
->
d©aF‹m©
[2],ÖInfo->dataFormat[3],

1381 
pInfo
->
f‹m©Vîsi⁄
[0],ÖInfo->formatVersion[1]);

1382 *
pEº‹Code
=
U_UNSUPPORTED_ERROR
;

1386 
öByãs
=(c⁄° 
uöt8_t
 *)
öD©a
+
hódîSize
;

1387 
outByãs
=(
uöt8_t
 *)
outD©a
+
hódîSize
;

1390 
öSèticD©a
=(c⁄° 
UC⁄vîãrSèticD©a
 *)
öByãs
;

1391 
outSèticD©a
=(
UC⁄vîãrSèticD©a
 *)
outByãs
;

1393 if(
Àngth
<0) {

1394 
°©icD©aSize
=
ds
->
	`ªadUI¡32
(
öSèticD©a
->
°ru˘Size
);

1396 
Àngth
-=
hódîSize
;

1397 if–
Àngth
<(
UC⁄vîãrSèticD©a
) ||

1398 (
uöt32_t
)
Àngth
<(
°©icD©aSize
=
ds
->
	`ªadUI¡32
(
öSèticD©a
->
°ru˘Size
))

1400 
	`ud©a_¥ötEº‹
(
ds
, "ucnv_swap():Åoo few bytes (%dáfter header) forán ICU .cnv conversionÅable\n",

1401 
Àngth
);

1402 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

1407 if(
Àngth
>=0) {

1409 if(
öSèticD©a
!=
outSèticD©a
) {

1410 
	`u¥v_mem˝y
(
outSèticD©a
, 
öSèticD©a
, 
°©icD©aSize
);

1413 
ds
->
	`sw≠Aºay32
(ds, &
öSèticD©a
->
°ru˘Size
, 4,

1414 &
outSèticD©a
->
°ru˘Size
, 
pEº‹Code
);

1415 
ds
->
	`sw≠Aºay32
(ds, &
öSèticD©a
->
codïage
, 4,

1416 &
outSèticD©a
->
codïage
, 
pEº‹Code
);

1418 
ds
->
	`sw≠InvCh¨s
(ds, 
öSèticD©a
->
«me
, (
öt32_t
)
	`u¥v_°æí
(inStaticData->name),

1419 
outSèticD©a
->
«me
, 
pEº‹Code
);

1420 if(
	`U_FAILURE
(*
pEº‹Code
)) {

1421 
	`ud©a_¥ötEº‹
(
ds
, "ucnv_swap():Érror swapping converterÇame\n");

1426 
öByãs
+=
°©icD©aSize
;

1427 
outByãs
+=
°©icD©aSize
;

1428 if(
Àngth
>=0) {

1429 
Àngth
-=(
öt32_t
)
°©icD©aSize
;

1433 if(
öSèticD©a
->
c⁄vîsi⁄Ty≥
==
UCNV_MBCS
) {

1435 
öMBCSHódî
=(c⁄° 
_MBCSHódî
 *)
öByãs
;

1436 
outMBCSHódî
=(
_MBCSHódî
 *)
outByãs
;

1438 if(0<=
Àngth
 &&Üígth<(
_MBCSHódî
)) {

1439 
	`ud©a_¥ötEº‹
(
ds
, "ucnv_swap():Åoo few bytes (%dáfter headers) forán ICU MBCS .cnv conversionÅable\n",

1440 
Àngth
);

1441 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

1444 if(
öMBCSHódî
->
vîsi⁄
[0]==4 && inMBCSHeader->version[1]>=1) {

1445 
mbcsHódîLígth
=
MBCS_HEADER_V4_LENGTH
;

1446 } if(
öMBCSHódî
->
vîsi⁄
[0]==5 && inMBCSHeader->version[1]>=3 &&

1447 ((
mbcsHódî
.
›ti⁄s
=
ds
->
	`ªadUI¡32
(
öMBCSHódî
->options))&

1448 
MBCS_OPT_UNKNOWN_INCOMPATIBLE_MASK
)==0

1450 
mbcsHódîLígth
=
mbcsHódî
.
›ti⁄s
&
MBCS_OPT_LENGTH_MASK
;

1451 
noFromU
=(
UBoﬁ
)((
mbcsHódî
.
›ti⁄s
&
MBCS_OPT_NO_FROM_U
)!=0);

1453 
	`ud©a_¥ötEº‹
(
ds
, "ucnv_swap(): unsupported _MBCSHeader.version %d.%d\n",

1454 
öMBCSHódî
->
vîsi⁄
[0], inMBCSHeader->version[1]);

1455 *
pEº‹Code
=
U_UNSUPPORTED_ERROR
;

1459 
	`u¥v_mem˝y
(
mbcsHódî
.
vîsi⁄
, 
öMBCSHódî
->version, 4);

1460 
mbcsHódî
.
cou¡Sèãs

ds
->
	`ªadUI¡32
(
öMBCSHódî
->countStates);

1461 
mbcsHódî
.
cou¡ToUFÆlbacks

ds
->
	`ªadUI¡32
(
öMBCSHódî
->countToUFallbacks);

1462 
mbcsHódî
.
off£tToUCodeUnôs

ds
->
	`ªadUI¡32
(
öMBCSHódî
->offsetToUCodeUnits);

1463 
mbcsHódî
.
off£tFromUTabÀ

ds
->
	`ªadUI¡32
(
öMBCSHódî
->offsetFromUTable);

1464 
mbcsHódî
.
off£tFromUByãs

ds
->
	`ªadUI¡32
(
öMBCSHódî
->offsetFromUBytes);

1465 
mbcsHódî
.
Êags

ds
->
	`ªadUI¡32
(
öMBCSHódî
->flags);

1466 
mbcsHódî
.
‰omUByãsLígth

ds
->
	`ªadUI¡32
(
öMBCSHódî
->fromUBytesLength);

1469 
extOff£t
=(
öt32_t
)(
mbcsHódî
.
Êags
>>8);

1470 
ouçutTy≥
=(
uöt8_t
)
mbcsHódî
.
Êags
;

1471 if(
noFromU
 && 
ouçutTy≥
==
MBCS_OUTPUT_1
) {

1472 
	`ud©a_¥ötEº‹
(
ds
, "ucnv_swap(): unsupported combination of makeconv --small with SBCS\n");

1473 *
pEº‹Code
=
U_UNSUPPORTED_ERROR
;

1478 
ouçutTy≥
) {

1479 
MBCS_OUTPUT_1
:

1480 
MBCS_OUTPUT_2
:

1481 
MBCS_OUTPUT_3
:

1482 
MBCS_OUTPUT_4
:

1483 
MBCS_OUTPUT_3_EUC
:

1484 
MBCS_OUTPUT_4_EUC
:

1485 
MBCS_OUTPUT_2_SISO
:

1486 
MBCS_OUTPUT_EXT_ONLY
:

1490 
	`ud©a_¥ötEº‹
(
ds
, "ucnv_swap(): unsupported MBCS outputÅype 0x%x\n",

1491 
ouçutTy≥
);

1492 *
pEº‹Code
=
U_UNSUPPORTED_ERROR
;

1504 
maxFa°UCh¨
=0;

1505 
mbcsIndexLígth
=0;

1506 if–
ouçutTy≥
!=
MBCS_OUTPUT_EXT_ONLY
 && ouçutTy≥!=
MBCS_OUTPUT_1
 &&

1507 
mbcsHódî
.
vîsi⁄
[1]>=3 && (
maxFa°UCh¨
=mbcsHeader.version[2])!=0

1509 
maxFa°UCh¨
=(maxFastUChar<<8)|0xff;

1510 
mbcsIndexLígth
=((
maxFa°UCh¨
+1)>>6)*2;

1513 if(
extOff£t
==0) {

1514 
size
=(
öt32_t
)(
mbcsHódî
.
off£tFromUByãs
+
mbcsIndexLígth
);

1515 if(!
noFromU
) {

1516 
size
+=(
öt32_t
)
mbcsHódî
.
‰omUByãsLígth
;

1520 
öExtIndexes
=
NULL
;

1523 if(
Àngth
>=0 &&Üígth<(
extOff£t
+
UCNV_EXT_INDEXES_MIN_LENGTH
*4)) {

1524 
	`ud©a_¥ötEº‹
(
ds
, "ucnv_swap():Åoo few bytes (%dáfter headers) forán ICU MBCS .cnv conversionÅable withÉxtension data\n",

1525 
Àngth
);

1526 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

1530 
öExtIndexes
=(c⁄° 
öt32_t
 *)(
öByãs
+
extOff£t
);

1531 
size
=
extOff£t
+
	`ud©a_ªadI¡32
(
ds
, 
öExtIndexes
[
UCNV_EXT_SIZE
]);

1534 if(
Àngth
>=0) {

1535 if(
Àngth
<
size
) {

1536 
	`ud©a_¥ötEº‹
(
ds
, "ucnv_swap():Åoo few bytes (%dáfter headers) forán ICU MBCS .cnv conversionÅable\n",

1537 
Àngth
);

1538 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

1543 if(
öByãs
!=
outByãs
) {

1544 
	`u¥v_mem˝y
(
outByãs
, 
öByãs
, 
size
);

1548 
cou¡
=
mbcsHódîLígth
*4;

1549 
ds
->
	`sw≠Aºay32
(ds, &
öMBCSHódî
->
cou¡Sèãs
, 
cou¡
-4,

1550 &
outMBCSHódî
->
cou¡Sèãs
, 
pEº‹Code
);

1552 if(
ouçutTy≥
==
MBCS_OUTPUT_EXT_ONLY
) {

1559 c⁄° *
öBa£Name
=(c⁄° *)
öByãs
+
cou¡
;

1560 *
outBa£Name
=(*)
outByãs
+
cou¡
;

1561 
ds
->
	`sw≠InvCh¨s
(ds, 
öBa£Name
, (
öt32_t
)
	`u¥v_°æí
(inBaseName),

1562 
outBa£Name
, 
pEº‹Code
);

1567 
off£t
=
cou¡
;

1568 
cou¡
=
mbcsHódî
.
cou¡Sèãs
*1024;

1569 
ds
->
	`sw≠Aºay32
(ds, 
öByãs
+
off£t
, (
öt32_t
)
cou¡
,

1570 
outByãs
+
off£t
, 
pEº‹Code
);

1573 
off£t
+=
cou¡
;

1574 
cou¡
=
mbcsHódî
.
cou¡ToUFÆlbacks
*8;

1575 
ds
->
	`sw≠Aºay32
(ds, 
öByãs
+
off£t
, (
öt32_t
)
cou¡
,

1576 
outByãs
+
off£t
, 
pEº‹Code
);

1579 
off£t
=
mbcsHódî
.
off£tToUCodeUnôs
;

1580 
cou¡
=
mbcsHódî
.
off£tFromUTabÀ
-
off£t
;

1581 
ds
->
	`sw≠Aºay16
(ds, 
öByãs
+
off£t
, (
öt32_t
)
cou¡
,

1582 
outByãs
+
off£t
, 
pEº‹Code
);

1585 
off£t
=
mbcsHódî
.
off£tFromUTabÀ
;

1587 if(
ouçutTy≥
==
MBCS_OUTPUT_1
) {

1589 
cou¡
=(
mbcsHódî
.
off£tFromUByãs
-
off£t
)+mbcsHódî.
‰omUByãsLígth
;

1590 
ds
->
	`sw≠Aºay16
(ds, 
öByãs
+
off£t
, (
öt32_t
)
cou¡
,

1591 
outByãs
+
off£t
, 
pEº‹Code
);

1596 if(
öSèticD©a
->
unicodeMask
&
UCNV_HAS_SUPPLEMENTARY
) {

1597 
cou¡
=0x440*2;

1599 
cou¡
=0x40*2;

1601 
ds
->
	`sw≠Aºay16
(ds, 
öByãs
+
off£t
, (
öt32_t
)
cou¡
,

1602 
outByãs
+
off£t
, 
pEº‹Code
);

1605 
off£t
+=
cou¡
;

1606 
cou¡
=
mbcsHódî
.
off£tFromUByãs
-
off£t
;

1607 
ds
->
	`sw≠Aºay32
(ds, 
öByãs
+
off£t
, (
öt32_t
)
cou¡
,

1608 
outByãs
+
off£t
, 
pEº‹Code
);

1611 
off£t
=
mbcsHódî
.
off£tFromUByãs
;

1612 
cou¡

noFromU
 ? 0 : 
mbcsHódî
.
‰omUByãsLígth
;

1613 
ouçutTy≥
) {

1614 
MBCS_OUTPUT_2
:

1615 
MBCS_OUTPUT_3_EUC
:

1616 
MBCS_OUTPUT_2_SISO
:

1617 
ds
->
	`sw≠Aºay16
(ds, 
öByãs
+
off£t
, (
öt32_t
)
cou¡
,

1618 
outByãs
+
off£t
, 
pEº‹Code
);

1620 
MBCS_OUTPUT_4
:

1621 
ds
->
	`sw≠Aºay32
(ds, 
öByãs
+
off£t
, (
öt32_t
)
cou¡
,

1622 
outByãs
+
off£t
, 
pEº‹Code
);

1629 if(
mbcsIndexLígth
!=0) {

1630 
off£t
+=
cou¡
;

1631 
cou¡
=
mbcsIndexLígth
;

1632 
ds
->
	`sw≠Aºay16
(ds, 
öByãs
+
off£t
, (
öt32_t
)
cou¡
,

1633 
outByãs
+
off£t
, 
pEº‹Code
);

1638 if(
extOff£t
!=0) {

1640 
öByãs
+=
extOff£t
;

1641 
outByãs
+=
extOff£t
;

1644 
off£t
=
	`ud©a_ªadI¡32
(
ds
, 
öExtIndexes
[
UCNV_EXT_TO_U_INDEX
]);

1645 
Àngth
=
	`ud©a_ªadI¡32
(
ds
, 
öExtIndexes
[
UCNV_EXT_TO_U_LENGTH
]);

1646 
ds
->
	`sw≠Aºay32
(ds, 
öByãs
+
off£t
, 
Àngth
*4, 
outByãs
+off£t, 
pEº‹Code
);

1649 
off£t
=
	`ud©a_ªadI¡32
(
ds
, 
öExtIndexes
[
UCNV_EXT_TO_U_UCHARS_INDEX
]);

1650 
Àngth
=
	`ud©a_ªadI¡32
(
ds
, 
öExtIndexes
[
UCNV_EXT_TO_U_UCHARS_LENGTH
]);

1651 
ds
->
	`sw≠Aºay16
(ds, 
öByãs
+
off£t
, 
Àngth
*2, 
outByãs
+off£t, 
pEº‹Code
);

1654 
off£t
=
	`ud©a_ªadI¡32
(
ds
, 
öExtIndexes
[
UCNV_EXT_FROM_U_UCHARS_INDEX
]);

1655 
Àngth
=
	`ud©a_ªadI¡32
(
ds
, 
öExtIndexes
[
UCNV_EXT_FROM_U_LENGTH
]);

1656 
ds
->
	`sw≠Aºay16
(ds, 
öByãs
+
off£t
, 
Àngth
*2, 
outByãs
+off£t, 
pEº‹Code
);

1659 
off£t
=
	`ud©a_ªadI¡32
(
ds
, 
öExtIndexes
[
UCNV_EXT_FROM_U_VALUES_INDEX
]);

1661 
ds
->
	`sw≠Aºay32
(ds, 
öByãs
+
off£t
, 
Àngth
*4, 
outByãs
+off£t, 
pEº‹Code
);

1666 
off£t
=
	`ud©a_ªadI¡32
(
ds
, 
öExtIndexes
[
UCNV_EXT_FROM_U_STAGE_12_INDEX
]);

1667 
Àngth
=
	`ud©a_ªadI¡32
(
ds
, 
öExtIndexes
[
UCNV_EXT_FROM_U_STAGE_12_LENGTH
]);

1668 
ds
->
	`sw≠Aºay16
(ds, 
öByãs
+
off£t
, 
Àngth
*2, 
outByãs
+off£t, 
pEº‹Code
);

1671 
off£t
=
	`ud©a_ªadI¡32
(
ds
, 
öExtIndexes
[
UCNV_EXT_FROM_U_STAGE_3_INDEX
]);

1672 
Àngth
=
	`ud©a_ªadI¡32
(
ds
, 
öExtIndexes
[
UCNV_EXT_FROM_U_STAGE_3_LENGTH
]);

1673 
ds
->
	`sw≠Aºay16
(ds, 
öByãs
+
off£t
, 
Àngth
*2, 
outByãs
+off£t, 
pEº‹Code
);

1676 
off£t
=
	`ud©a_ªadI¡32
(
ds
, 
öExtIndexes
[
UCNV_EXT_FROM_U_STAGE_3B_INDEX
]);

1677 
Àngth
=
	`ud©a_ªadI¡32
(
ds
, 
öExtIndexes
[
UCNV_EXT_FROM_U_STAGE_3B_LENGTH
]);

1678 
ds
->
	`sw≠Aºay32
(ds, 
öByãs
+
off£t
, 
Àngth
*4, 
outByãs
+off£t, 
pEº‹Code
);

1681 
Àngth
=
	`ud©a_ªadI¡32
(
ds
, 
öExtIndexes
[
UCNV_EXT_INDEXES_LENGTH
]);

1682 
ds
->
	`sw≠Aºay32
(ds, 
öByãs
, 
Àngth
*4, 
outByãs
, 
pEº‹Code
);

1686 
	`ud©a_¥ötEº‹
(
ds
, "ucnv_swap(): unknown conversionType=%d!=UCNV_MBCS\n",

1687 
öSèticD©a
->
c⁄vîsi⁄Ty≥
);

1688 *
pEº‹Code
=
U_UNSUPPORTED_ERROR
;

1692  
hódîSize
+(
öt32_t
)
°©icD©aSize
+
size
;

1693 
	}
}

	@ucnv_bld.h

17 #i‚de‡
UCNV_BLD_H


18 
	#UCNV_BLD_H


	)

20 
	~"unicode/uty≥s.h
"

22 #i‡!
UCONFIG_NO_CONVERSION


24 
	~"unicode/u˙v.h
"

25 
	~"unicode/u˙v_îr.h
"

26 
	~"u˙v_˙v.h
"

27 
	~"u˙vmbcs.h
"

28 
	~"u˙v_ext.h
"

29 
	~"ud©aswp.h
"

32 
	#UCNV_ERROR_BUFFER_LENGTH
 32

	)

35 
	#UCNV_MAX_SUBCHAR_LEN
 4

	)

38 
	#UCNV_MAX_CHAR_LEN
 8

	)

41 
	#UCNV_OPTION_VERSION
 0xf

	)

42 
	#UCNV_OPTION_SWAP_LFNL
 0x10

	)

44 
	#UCNV_GET_VERSION
(
˙v
Ë((˙v)->
›ti⁄s
&
UCNV_OPTION_VERSION
)

	)

46 
U_CDECL_BEGIN


51 
	uUC⁄vîãrTabÀ
 {

52 
UC⁄vîãrMBCSTabÀ
 
	mmbcs
;

55 
UC⁄vîãrTabÀ
 
	tUC⁄vîãrTabÀ
;

57 
	gUC⁄vîãrIm∂
;

58 
UC⁄vîãrIm∂
 
	tUC⁄vîãrIm∂
;

61 
	#UCNV_HAS_SUPPLEMENTARY
 1

	)

62 
	#UCNV_HAS_SURROGATES
 2

	)

64 
	sUC⁄vîãrSèticD©a
 {

65 
uöt32_t
 
	m°ru˘Size
;

67 
	m«me


68 [
UCNV_MAX_CONVERTER_NAME_LENGTH
];

70 
öt32_t
 
	mcodïage
;

72 
öt8_t
 
	m∂©f‹m
;

73 
öt8_t
 
	mc⁄vîsi⁄Ty≥
;

75 
öt8_t
 
	mmöByãsPîCh¨
;

76 
öt8_t
 
	mmaxByãsPîCh¨
;

78 
uöt8_t
 
	msubCh¨
[
UCNV_MAX_SUBCHAR_LEN
];

79 
öt8_t
 
	msubCh¨Lí
;

81 
uöt8_t
 
	mhasToUnicodeFÆlback
;

82 
uöt8_t
 
	mhasFromUnicodeFÆlback
;

83 
uöt8_t
 
	municodeMask
;

84 
uöt8_t
 
	msubCh¨1
;

85 
uöt8_t
 
	mª£rved
[19];

87 } 
	tUC⁄vîãrSèticD©a
;

93 
	sUC⁄vîãrSh¨edD©a
 {

94 
uöt32_t
 
	m°ru˘Size
;

95 
uöt32_t
 
	mª„ªn˚Cou¡î
;

97 c⁄° *
	md©aMem‹y
;

98 *
	mèbÀ
;

100 c⁄° 
UC⁄vîãrSèticD©a
 *
	m°©icD©a
;

102 
UBoﬁ
 
	msh¨edD©aCached
;

105 c⁄° 
UC⁄vîãrIm∂
 *
	mim∂
;

108 
uöt32_t
 
	mtoUnicodeSètus
;

124 
UC⁄vîãrMBCSTabÀ
 
	mmbcs
;

129 
	sUC⁄vîãr
 {

134 (
U_EXPORT2
 *
	m‰omUCh¨Eº‹Behaviour
Ë(c⁄° *
	mc⁄ãxt
,

135 
UC⁄vîãrFromUnicodeArgs
 *
	m¨gs
,

136 c⁄° 
UCh¨
 *
	mcodeUnôs
,

137 
öt32_t
 
	mÀngth
,

138 
UCh¨32
 
	mcodePoöt
,

139 
UC⁄vîãrCÆlbackRós⁄
 
	mªas⁄
,

140 
	mUEº‹Code
 *);

145 (
U_EXPORT2
 *
	m‰omCh¨Eº‹Behaviour
Ë(c⁄° *
	mc⁄ãxt
,

146 
UC⁄vîãrToUnicodeArgs
 *
	m¨gs
,

147 c⁄° *
	mcodeUnôs
,

148 
öt32_t
 
	mÀngth
,

149 
UC⁄vîãrCÆlbackRós⁄
 
	mªas⁄
,

150 
	mUEº‹Code
 *);

156 *
	mexåaInfo
;

158 c⁄° *
	m‰omUC⁄ãxt
;

159 c⁄° *
	mtoUC⁄ãxt
;

170 
uöt8_t
 *
	msubCh¨s
;

172 
UC⁄vîãrSh¨edD©a
 *
	msh¨edD©a
;

174 
uöt32_t
 
	m›ti⁄s
;

176 
UBoﬁ
 
	msh¨edD©aIsCached
;

177 
UBoﬁ
 
	misC›yLoˇl
;

178 
UBoﬁ
 
	misExåaLoˇl
;

180 
UBoﬁ
 
	mu£FÆlback
;

181 
öt8_t
 
	mtoULígth
;

182 
uöt8_t
 
	mtoUByãs
[
UCNV_MAX_CHAR_LEN
-1];

183 
uöt32_t
 
	mtoUnicodeSètus
;

184 
öt32_t
 
	mmode
;

185 
uöt32_t
 
	m‰omUnicodeSètus
;

196 
UCh¨32
 
	m‰omUCh¨32
;

204 
öt8_t
 
	mmaxByãsPîUCh¨
;

206 
öt8_t
 
	msubCh¨Lí
;

207 
öt8_t
 
	mövÆidCh¨Lígth
;

208 
öt8_t
 
	mch¨Eº‹Buf„rLígth
;

210 
öt8_t
 
	mövÆidUCh¨Lígth
;

211 
öt8_t
 
	mUCh¨Eº‹Buf„rLígth
;

213 
uöt8_t
 
	msubCh¨1
;

214 
UBoﬁ
 
	mu£SubCh¨1
;

215 
	mövÆidCh¨Buf„r
[
UCNV_MAX_CHAR_LEN
];

216 
uöt8_t
 
	mch¨Eº‹Buf„r
[
UCNV_ERROR_BUFFER_LENGTH
];

217 
UCh¨
 
	msubUCh¨s
[
UCNV_MAX_SUBCHAR_LEN
/
U_SIZEOF_UCHAR
];

219 
UCh¨
 
	mövÆidUCh¨Buf„r
[
U16_MAX_LENGTH
];

220 
UCh¨
 
	mUCh¨Eº‹Buf„r
[
UCNV_ERROR_BUFFER_LENGTH
];

225 
UCh¨32
 
	m¥eFromUFú°CP
;

226 
UCh¨
 
	m¥eFromU
[
UCNV_EXT_MAX_UCHARS
];

227 
	m¥eToU
[
UCNV_EXT_MAX_BYTES
];

228 
öt8_t
 
	m¥eFromULígth
, 
	m¥eToULígth
;

229 
öt8_t
 
	m¥eToUFú°Lígth
;

232 
UC⁄vîãrCÆlbackRós⁄
 
	mtoUCÆlbackRós⁄
;

235 
	gU_CDECL_END


237 
	#CONVERTER_FILE_EXTENSION
 ".˙v"

	)

245 
U_CFUNC
 
uöt16_t


246 
u˙v_bld_cou¡AvaûabÀC⁄vîãrs
(
UEº‹Code
 *
pEº‹Code
);

256 
U_CFUNC
 const *

257 
u˙v_bld_gëAvaûabÀC⁄vîãr
(
uöt16_t
 
n
, 
UEº‹Code
 *
pEº‹Code
);

263 
UC⁄vîãrSh¨edD©a
 *

264 
u˙v_lﬂd
(
UC⁄vîãrLﬂdArgs
 *
pArgs
, 
UEº‹Code
 *
îr
);

272 
u˙v_u∆ﬂd
(
UC⁄vîãrSh¨edD©a
 *
sh¨edD©a
);

278 
U_CAPI
 
öt32_t
 
U_EXPORT2


279 
u˙v_sw≠
(c⁄° 
UD©aSw≠≥r
 *
ds
,

280 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

281 
UEº‹Code
 *
pEº‹Code
);

	@ucnv_cb.c

21 
	~"unicode/uty≥s.h
"

23 #i‡!
UCONFIG_NO_CONVERSION


25 
	~"unicode/u˙v_cb.h
"

26 
	~"u˙v_bld.h
"

27 
	~"u˙v_˙v.h
"

28 
	~"cmem‹y.h
"

34 
U_CAPI
 
U_EXPORT2


35 
	$u˙v_cbFromUWrôeByãs
 (
UC⁄vîãrFromUnicodeArgs
 *
¨gs
,

36 c⁄° * 
sour˚
,

37 
öt32_t
 
Àngth
,

38 
öt32_t
 
off£tIndex
,

39 
UEº‹Code
 * 
îr
)

41 if(
	`U_FAILURE
(*
îr
)) {

45 
	`u˙v_‰omUWrôeByãs
(

46 
¨gs
->
c⁄vîãr
,

47 
sour˚
, 
Àngth
,

48 &
¨gs
->
èrgë
,árgs->
èrgëLimô
,

49 &
¨gs
->
off£ts
, 
off£tIndex
,

50 
îr
);

51 
	}
}

53 
U_CAPI
 
U_EXPORT2


54 
	$u˙v_cbFromUWrôeUCh¨s
(
UC⁄vîãrFromUnicodeArgs
 *
¨gs
,

55 c⁄° 
UCh¨
** 
sour˚
,

56 c⁄° 
UCh¨
* 
sour˚Limô
,

57 
öt32_t
 
off£tIndex
,

58 
UEº‹Code
 * 
îr
)

72 *
ﬁdT¨gë
;

74 if(
	`U_FAILURE
(*
îr
))

79 
ﬁdT¨gë
 = 
¨gs
->
èrgë
;

81 
	`u˙v_‰omUnicode
(
¨gs
->
c⁄vîãr
,

82 &
¨gs
->
èrgë
,

83 
¨gs
->
èrgëLimô
,

84 
sour˚
,

85 
sour˚Limô
,

86 
NULL
,

87 
FALSE
,

88 
îr
);

90 if(
¨gs
->
off£ts
)

92 
¨gs
->
èrgë
 !
ﬁdT¨gë
)

94 *(
¨gs
->
off£ts
)++ = 
off£tIndex
;

95 
ﬁdT¨gë
++;

103 if(*
îr
 =
U_BUFFER_OVERFLOW_ERROR
)

109 *
√wT¨gë
;

110 c⁄° *
√wT¨gëLimô
;

111 
UEº‹Code
 
îr2
 = 
U_ZERO_ERROR
;

113 
öt8_t
 
îrBuffLí
;

115 
îrBuffLí
 = 
¨gs
->
c⁄vîãr
->
ch¨Eº‹Buf„rLígth
;

118 
√wT¨gë
 = (*)(
¨gs
->
c⁄vîãr
->
ch¨Eº‹Buf„r
 + 
îrBuffLí
);

120 
√wT¨gëLimô
 = (*)(
¨gs
->
c⁄vîãr
->
ch¨Eº‹Buf„r
 +

121 (
¨gs
->
c⁄vîãr
->
ch¨Eº‹Buf„r
));

123 if(
√wT¨gë
 >
√wT¨gëLimô
)

125 *
îr
 = 
U_INTERNAL_PROGRAM_ERROR
;

134 
¨gs
->
c⁄vîãr
->
ch¨Eº‹Buf„rLígth
 = 0;

136 
	`u˙v_‰omUnicode
(
¨gs
->
c⁄vîãr
,

137 &
√wT¨gë
,

138 
√wT¨gëLimô
,

139 
sour˚
,

140 
sour˚Limô
,

141 
NULL
,

142 
FALSE
,

143 &
îr2
);

148 
¨gs
->
c⁄vîãr
->
ch¨Eº‹Buf„rLígth
 = (
öt8_t
)(

149 
√wT¨gë
 - (*)
¨gs
->
c⁄vîãr
->
ch¨Eº‹Buf„r
);

151 if((
√wT¨gë
 >
√wT¨gëLimô
Ë|| (
îr2
 =
U_BUFFER_OVERFLOW_ERROR
))

157 *
îr
 = 
U_INTERNAL_PROGRAM_ERROR
;

172 
	}
}

174 
U_CAPI
 
U_EXPORT2


175 
	$u˙v_cbFromUWrôeSub
 (
UC⁄vîãrFromUnicodeArgs
 *
¨gs
,

176 
öt32_t
 
off£tIndex
,

177 
UEº‹Code
 * 
îr
)

179 
UC⁄vîãr
 *
c⁄vîãr
;

180 
öt32_t
 
Àngth
;

182 if(
	`U_FAILURE
(*
îr
)) {

185 
c⁄vîãr
 = 
¨gs
->converter;

186 
Àngth
 = 
c⁄vîãr
->
subCh¨Lí
;

188 if(
Àngth
 == 0) {

192 if(
Àngth
 < 0) {

201 c⁄° 
UCh¨
 *
sour˚
 = (c⁄° UCh¨ *)
c⁄vîãr
->
subCh¨s
;

202 
	`u˙v_cbFromUWrôeUCh¨s
(
¨gs
, &
sour˚
, sour˚ - 
Àngth
, 
off£tIndex
, 
îr
);

206 if(
c⁄vîãr
->
sh¨edD©a
->
im∂
->
wrôeSub
!=
NULL
) {

207 
c⁄vîãr
->
sh¨edD©a
->
im∂
->
	`wrôeSub
(
¨gs
, 
off£tIndex
, 
îr
);

209 if(
c⁄vîãr
->
subCh¨1
!=0 && (
uöt16_t
)c⁄vîãr->
övÆidUCh¨Buf„r
[0]<=(uint16_t)0xffu) {

214 
	`u˙v_cbFromUWrôeByãs
(
¨gs
,

215 (c⁄° *)&
c⁄vîãr
->
subCh¨1
, 1,

216 
off£tIndex
, 
îr
);

219 
	`u˙v_cbFromUWrôeByãs
(
¨gs
,

220 (c⁄° *)
c⁄vîãr
->
subCh¨s
, 
Àngth
,

221 
off£tIndex
, 
îr
);

223 
	}
}

225 
U_CAPI
 
U_EXPORT2


226 
	$u˙v_cbToUWrôeUCh¨s
 (
UC⁄vîãrToUnicodeArgs
 *
¨gs
,

227 c⁄° 
UCh¨
* 
sour˚
,

228 
öt32_t
 
Àngth
,

229 
öt32_t
 
off£tIndex
,

230 
UEº‹Code
 * 
îr
)

232 if(
	`U_FAILURE
(*
îr
)) {

236 
	`u˙v_toUWrôeUCh¨s
(

237 
¨gs
->
c⁄vîãr
,

238 
sour˚
, 
Àngth
,

239 &
¨gs
->
èrgë
,árgs->
èrgëLimô
,

240 &
¨gs
->
off£ts
, 
off£tIndex
,

241 
îr
);

242 
	}
}

244 
U_CAPI
 
U_EXPORT2


245 
	$u˙v_cbToUWrôeSub
 (
UC⁄vîãrToUnicodeArgs
 *
¨gs
,

246 
öt32_t
 
off£tIndex
,

247 
UEº‹Code
 * 
îr
)

249 c⁄° 
UCh¨
 
kSub°ôuãCh¨1
 = 0x1A, 
kSub°ôuãCh¨
 = 0xFFFD;

252 if(
¨gs
->
c⁄vîãr
->
övÆidCh¨Lígth
 =1 &&árgs->c⁄vîãr->
subCh¨1
 != 0) {

253 
	`u˙v_cbToUWrôeUCh¨s
(
¨gs
, &
kSub°ôuãCh¨1
, 1, 
off£tIndex
, 
îr
);

255 
	`u˙v_cbToUWrôeUCh¨s
(
¨gs
, &
kSub°ôuãCh¨
, 1, 
off£tIndex
, 
îr
);

257 
	}
}

	@ucnv_cnv.c

18 
	~"unicode/uty≥s.h
"

20 #i‡!
UCONFIG_NO_CONVERSION


22 
	~"unicode/u˙v_îr.h
"

23 
	~"unicode/u˙v.h
"

24 
	~"unicode/u£t.h
"

25 
	~"u˙v_˙v.h
"

26 
	~"u˙v_bld.h
"

27 
	~"cmem‹y.h
"

29 
U_CFUNC
 

30 
	$u˙v_gëCom∂ëeUnicodeSë
(c⁄° 
UC⁄vîãr
 *
˙v
,

31 c⁄° 
USëAddî
 *
ß
,

32 
UC⁄vîãrUnicodeSë
 
which
,

33 
UEº‹Code
 *
pEº‹Code
) {

34 
ß
->
	`addR™ge
(ß->
£t
, 0, 0x10ffff);

35 
	}
}

37 
U_CFUNC
 

38 
	$u˙v_gëN⁄Suºog©eUnicodeSë
(c⁄° 
UC⁄vîãr
 *
˙v
,

39 c⁄° 
USëAddî
 *
ß
,

40 
UC⁄vîãrUnicodeSë
 
which
,

41 
UEº‹Code
 *
pEº‹Code
) {

42 
ß
->
	`addR™ge
(ß->
£t
, 0, 0xd7ff);

43 
ß
->
	`addR™ge
(ß->
£t
, 0xe000, 0x10ffff);

44 
	}
}

46 
U_CFUNC
 

47 
	$u˙v_‰omUWrôeByãs
(
UC⁄vîãr
 *
˙v
,

48 c⁄° *
byãs
, 
öt32_t
 
Àngth
,

49 **
èrgë
, c⁄° *
èrgëLimô
,

50 
öt32_t
 **
off£ts
,

51 
öt32_t
 
sour˚Index
,

52 
UEº‹Code
 *
pEº‹Code
) {

53 *
t
=*
èrgë
;

54 
öt32_t
 *
o
;

57 if(
off£ts
==
NULL
 || (
o
=*offsets)==NULL) {

58 
Àngth
>0 && 
t
<
èrgëLimô
) {

59 *
t
++=*
byãs
++;

60 --
Àngth
;

64 
Àngth
>0 && 
t
<
èrgëLimô
) {

65 *
t
++=*
byãs
++;

66 *
o
++=
sour˚Index
;

67 --
Àngth
;

69 *
off£ts
=
o
;

71 *
èrgë
=
t
;

74 if(
Àngth
>0) {

75 if(
˙v
!=
NULL
) {

76 
t
=(*)
˙v
->
ch¨Eº‹Buf„r
;

77 
˙v
->
ch¨Eº‹Buf„rLígth
=(
öt8_t
)
Àngth
;

79 *
t
++=(
uöt8_t
)*
byãs
++;

80 } --
Àngth
>0);

82 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

84 
	}
}

86 
U_CFUNC
 

87 
	$u˙v_toUWrôeUCh¨s
(
UC⁄vîãr
 *
˙v
,

88 c⁄° 
UCh¨
 *
uch¨s
, 
öt32_t
 
Àngth
,

89 
UCh¨
 **
èrgë
, c⁄° UCh¨ *
èrgëLimô
,

90 
öt32_t
 **
off£ts
,

91 
öt32_t
 
sour˚Index
,

92 
UEº‹Code
 *
pEº‹Code
) {

93 
UCh¨
 *
t
=*
èrgë
;

94 
öt32_t
 *
o
;

97 if(
off£ts
==
NULL
 || (
o
=*offsets)==NULL) {

98 
Àngth
>0 && 
t
<
èrgëLimô
) {

99 *
t
++=*
uch¨s
++;

100 --
Àngth
;

104 
Àngth
>0 && 
t
<
èrgëLimô
) {

105 *
t
++=*
uch¨s
++;

106 *
o
++=
sour˚Index
;

107 --
Àngth
;

109 *
off£ts
=
o
;

111 *
èrgë
=
t
;

114 if(
Àngth
>0) {

115 if(
˙v
!=
NULL
) {

116 
t
=
˙v
->
UCh¨Eº‹Buf„r
;

117 
˙v
->
UCh¨Eº‹Buf„rLígth
=(
öt8_t
)
Àngth
;

119 *
t
++=*
uch¨s
++;

120 } --
Àngth
>0);

122 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

124 
	}
}

126 
U_CFUNC
 

127 
	$u˙v_toUWrôeCodePoöt
(
UC⁄vîãr
 *
˙v
,

128 
UCh¨32
 
c
,

129 
UCh¨
 **
èrgë
, c⁄° UCh¨ *
èrgëLimô
,

130 
öt32_t
 **
off£ts
,

131 
öt32_t
 
sour˚Index
,

132 
UEº‹Code
 *
pEº‹Code
) {

133 
UCh¨
 *
t
;

134 
öt32_t
 *
o
;

136 
t
=*
èrgë
;

138 if(
t
<
èrgëLimô
) {

139 if(
c
<=0xffff) {

140 *
t
++=(
UCh¨
)
c
;

141 
c
=
U_SENTINEL
;

143 *
t
++=
	`U16_LEAD
(
c
);

144 
c
=
	`U16_TRAIL
(c);

145 if(
t
<
èrgëLimô
) {

146 *
t
++=(
UCh¨
)
c
;

147 
c
=
U_SENTINEL
;

152 if(
off£ts
!=
NULL
 && (
o
=*offsets)!=NULL) {

153 *
o
++=
sour˚Index
;

154 if((*
èrgë
+1)<
t
) {

155 *
o
++=
sour˚Index
;

157 *
off£ts
=
o
;

161 *
èrgë
=
t
;

164 if(
c
>=0) {

165 if(
˙v
!=
NULL
) {

166 
öt8_t
 
i
=0;

167 
	`U16_APPEND_UNSAFE
(
˙v
->
UCh¨Eº‹Buf„r
, 
i
, 
c
);

168 
˙v
->
UCh¨Eº‹Buf„rLígth
=
i
;

170 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

172 
	}
}

	@ucnv_cnv.h

17 #i‚de‡
UCNV_CNV_H


18 
	#UCNV_CNV_H


	)

20 
	~"unicode/uty≥s.h
"

22 #i‡!
UCONFIG_NO_CONVERSION


24 
	~"unicode/u˙v.h
"

25 
	~"unicode/u˙v_îr.h
"

26 
	~"unicode/u£t.h
"

27 
	~"u£t_imp.h
"

29 
	gU_CDECL_BEGIN


32 
	#missögCh¨M¨kî
 0xFFFF

	)

43 
	gUC⁄vîãrSh¨edD©a
;

44 
UC⁄vîãrSh¨edD©a
 
	tUC⁄vîãrSh¨edD©a
;

50 
öt32_t
 
	msize
;

51 
öt32_t
 
	m√°edLﬂds
;

52 
UBoﬁ
 
	m⁄lyTe°IsLﬂdabÀ
;

53 
UBoﬁ
 
	mª£rved0
;

54 
öt16_t
 
	mª£rved
;

55 
uöt32_t
 
	m›ti⁄s
;

56 c⁄° *
	mpkg
, *
	m«me
, *
	mloˇÀ
;

57 } 
	tUC⁄vîãrLﬂdArgs
;

59 (*
	tUC⁄vîãrLﬂd
Ë(
	tUC⁄vîãrSh¨edD©a
 *
	tsh¨edD©a
,

60 
	tUC⁄vîãrLﬂdArgs
 *
	tpArgs
,

61 c⁄° 
	tuöt8_t
 *
	tøw
, 
	tUEº‹Code
 *
	tpEº‹Code
);

62 (*
	tUC⁄vîãrU∆ﬂd
Ë(
	tUC⁄vîãrSh¨edD©a
 *
	tsh¨edD©a
);

64 (*
	tUC⁄vîãrO≥n
Ë(
	tUC⁄vîãr
 *
	t˙v
, 
	tUC⁄vîãrLﬂdArgs
 *
	tpArgs
, 
	tUEº‹Code
 *
	tpEº‹Code
);

65 (*
	tUC⁄vîãrClo£
Ë(
	tUC⁄vîãr
 *
	t˙v
);

67 
	eUC⁄vîãrRe£tChoi˚
 {

68 
UCNV_RESET_BOTH
,

69 
UCNV_RESET_TO_UNICODE
,

70 
UCNV_RESET_FROM_UNICODE


71 } 
	tUC⁄vîãrRe£tChoi˚
;

73 (*
	tUC⁄vîãrRe£t
Ë(
	tUC⁄vîãr
 *
	t˙v
, 
	tUC⁄vîãrRe£tChoi˚
 
	tchoi˚
);

98 (*
	tUC⁄vîãrToUnicode
Ë(
	tUC⁄vîãrToUnicodeArgs
 *, 
	tUEº‹Code
 *);

106 (*
	tUC⁄vîãrFromUnicode
Ë(
	tUC⁄vîãrFromUnicodeArgs
 *, 
	tUEº‹Code
 *);

121 (*
	tUC⁄vîãrC⁄vît
Ë(
	tUC⁄vîãrFromUnicodeArgs
 *
	tpFromUArgs
,

122 
	tUC⁄vîãrToUnicodeArgs
 *
	tpToUArgs
,

123 
	tUEº‹Code
 *
	tpEº‹Code
);

145 
	$UCh¨32
 (*
	tUC⁄vîãrGëNextUCh¨
Ë(
	tUC⁄vîãrToUnicodeArgs
 *, 
	tUEº‹Code
 *);

147 (*
	tUC⁄vîãrGëSèπîs
)(c⁄° 
	tUC⁄vîãr
* 
	tc⁄vîãr
,

148 
	tUBoﬁ
 
	t°¨ãrs
[256],

149 
	tUEº‹Code
 *
	tpEº‹Code
);

155 c⁄° * (*
	tUC⁄vîãrGëName
Ë(c⁄° 
	tUC⁄vîãr
 *
	t˙v
);

164 (*
	tUC⁄vîãrWrôeSub
Ë(
	tUC⁄vîãrFromUnicodeArgs
 *
	tpArgs
, 
	töt32_t
 
	toff£tIndex
, 
	tUEº‹Code
 *
	tpEº‹Code
);

175 
UC⁄vîãr
 * (*
	tUC⁄vîãrSa„Cl⁄e
Ë(c⁄° 
	tUC⁄vîãr
 *
	t˙v
,

176 *
	t°ackBuf„r
,

177 
	töt32_t
 *
	tpBuf„rSize
,

178 
	tUEº‹Code
 *
	t°©us
);

183 
	eUC⁄vîãrSëFûãr
 {

184 
UCNV_SET_FILTER_NONE
,

185 
UCNV_SET_FILTER_DBCS_ONLY
,

186 
UCNV_SET_FILTER_2022_CN
,

187 
UCNV_SET_FILTER_SJIS
,

188 
UCNV_SET_FILTER_GR94DBCS
,

189 
UCNV_SET_FILTER_HZ
,

190 
UCNV_SET_FILTER_COUNT


191 } 
	tUC⁄vîãrSëFûãr
;

204 (*
	tUC⁄vîãrGëUnicodeSë
Ë(c⁄° 
	tUC⁄vîãr
 *
	t˙v
,

205 c⁄° 
	tUSëAddî
 *
	tß
,

206 
	tUC⁄vîãrUnicodeSë
 
	twhich
,

207 
	tUEº‹Code
 *
	tpEº‹Code
);

209 
UBoﬁ
 
	`CONVERSION_U_SUCCESS
 (
UEº‹Code
 
îr
);

227 
	sUC⁄vîãrIm∂
 {

228 
UC⁄vîãrTy≥
 
ty≥
;

230 
UC⁄vîãrLﬂd
 
lﬂd
;

231 
UC⁄vîãrU∆ﬂd
 
u∆ﬂd
;

233 
UC⁄vîãrO≥n
 
›í
;

234 
UC⁄vîãrClo£
 
˛o£
;

235 
UC⁄vîãrRe£t
 
ª£t
;

237 
UC⁄vîãrToUnicode
 
toUnicode
;

238 
UC⁄vîãrToUnicode
 
toUnicodeWôhOff£ts
;

239 
UC⁄vîãrFromUnicode
 
‰omUnicode
;

240 
UC⁄vîãrFromUnicode
 
‰omUnicodeWôhOff£ts
;

241 
UC⁄vîãrGëNextUCh¨
 
gëNextUCh¨
;

243 
UC⁄vîãrGëSèπîs
 
gëSèπîs
;

244 
UC⁄vîãrGëName
 
gëName
;

245 
UC⁄vîãrWrôeSub
 
wrôeSub
;

246 
UC⁄vîãrSa„Cl⁄e
 
ß„Cl⁄e
;

247 
UC⁄vîãrGëUnicodeSë
 
gëUnicodeSë
;

249 
UC⁄vîãrC⁄vît
 
toUTF8
;

250 
UC⁄vîãrC⁄vît
 
‰omUTF8
;

253 c⁄° 
UC⁄vîãrSh¨edD©a


254 
_MBCSD©a
, 
_L©ö1D©a
,

255 
_UTF8D©a
, 
_UTF16BED©a
, 
_UTF16LED©a
, 
_UTF32BED©a
, 
_UTF32LED©a
,

256 
_ISO2022D©a
,

257 
_LMBCSD©a1
,
_LMBCSD©a2
, 
_LMBCSD©a3
, 
_LMBCSD©a4
, 
_LMBCSD©a5
, 
_LMBCSD©a6
,

258 
_LMBCSD©a8
,
_LMBCSD©a11
,
_LMBCSD©a16
,
_LMBCSD©a17
,
_LMBCSD©a18
,
_LMBCSD©a19
,

259 
_HZD©a
,
_ISCIID©a
, 
_SCSUD©a
, 
_ASCIID©a
,

260 
_UTF7D©a
, 
_Bocu1D©a
, 
_UTF16D©a
, 
_UTF32D©a
, 
_CESU8D©a
, 
_IMAPD©a
;

262 
U_CDECL_END


265 
	#TO_U_USE_FALLBACK
(
u£FÆlback
Ë
TRUE


	)

266 
	#UCNV_TO_U_USE_FALLBACK
(
˙v
Ë
TRUE


	)

269 
	#IS_PRIVATE_USE
(
c
Ë((
uöt32_t
)((c)-0xe000)<0x1900 || (uöt32_t)((c)-0xf0000)<0x20000)

	)

270 
	#FROM_U_USE_FALLBACK
(
u£FÆlback
, 
c
Ë((u£FÆlbackË|| 
	`IS_PRIVATE_USE
(c))

	)

271 
	#UCNV_FROM_U_USE_FALLBACK
(
˙v
, 
c
Ë
	`FROM_U_USE_FALLBACK
((˙v)->
u£FÆlback
, c)

	)

279 
	#UCNV_GET_NEXT_UCHAR_USE_TO_U
 -9

	)

281 
U_CFUNC
 

282 
	`u˙v_gëCom∂ëeUnicodeSë
(c⁄° 
UC⁄vîãr
 *
˙v
,

283 c⁄° 
USëAddî
 *
ß
,

284 
UC⁄vîãrUnicodeSë
 
which
,

285 
UEº‹Code
 *
pEº‹Code
);

287 
U_CFUNC
 

288 
	`u˙v_gëN⁄Suºog©eUnicodeSë
(c⁄° 
UC⁄vîãr
 *
˙v
,

289 c⁄° 
USëAddî
 *
ß
,

290 
UC⁄vîãrUnicodeSë
 
which
,

291 
UEº‹Code
 *
pEº‹Code
);

293 
U_CFUNC
 

294 
	`u˙v_‰omUWrôeByãs
(
UC⁄vîãr
 *
˙v
,

295 c⁄° *
byãs
, 
öt32_t
 
Àngth
,

296 **
èrgë
, c⁄° *
èrgëLimô
,

297 
öt32_t
 **
off£ts
,

298 
öt32_t
 
sour˚Index
,

299 
UEº‹Code
 *
pEº‹Code
);

300 
U_CFUNC
 

301 
	`u˙v_toUWrôeUCh¨s
(
UC⁄vîãr
 *
˙v
,

302 c⁄° 
UCh¨
 *
uch¨s
, 
öt32_t
 
Àngth
,

303 
UCh¨
 **
èrgë
, c⁄° UCh¨ *
èrgëLimô
,

304 
öt32_t
 **
off£ts
,

305 
öt32_t
 
sour˚Index
,

306 
UEº‹Code
 *
pEº‹Code
);

308 
U_CFUNC
 

309 
	`u˙v_toUWrôeCodePoöt
(
UC⁄vîãr
 *
˙v
,

310 
UCh¨32
 
c
,

311 
UCh¨
 **
èrgë
, c⁄° UCh¨ *
èrgëLimô
,

312 
öt32_t
 **
off£ts
,

313 
öt32_t
 
sour˚Index
,

314 
UEº‹Code
 *
pEº‹Code
);

	@ucnv_err.c

18 
	~"unicode/uty≥s.h
"

20 #i‡!
UCONFIG_NO_CONVERSION


22 
	~"unicode/u˙v_îr.h
"

23 
	~"unicode/u˙v_cb.h
"

24 
	~"u˙v_˙v.h
"

25 
	~"cmem‹y.h
"

26 
	~"unicode/u˙v.h
"

27 
	~"u°rfmt.h
"

29 
	#VALUE_STRING_LENGTH
 32

	)

31 
	#UNICODE_PERCENT_SIGN_CODEPOINT
 0x0025

	)

32 
	#UNICODE_U_CODEPOINT
 0x0055

	)

33 
	#UNICODE_X_CODEPOINT
 0x0058

	)

34 
	#UNICODE_RS_CODEPOINT
 0x005C

	)

35 
	#UNICODE_U_LOW_CODEPOINT
 0x0075

	)

36 
	#UNICODE_X_LOW_CODEPOINT
 0x0078

	)

37 
	#UNICODE_AMP_CODEPOINT
 0x0026

	)

38 
	#UNICODE_HASH_CODEPOINT
 0x0023

	)

39 
	#UNICODE_SEMICOLON_CODEPOINT
 0x003B

	)

40 
	#UNICODE_PLUS_CODEPOINT
 0x002B

	)

41 
	#UNICODE_LEFT_CURLY_CODEPOINT
 0x007B

	)

42 
	#UNICODE_RIGHT_CURLY_CODEPOINT
 0x007D

	)

43 
	#UNICODE_SPACE_CODEPOINT
 0x0020

	)

44 
	#UCNV_PRV_ESCAPE_ICU
 0

	)

45 
	#UCNV_PRV_ESCAPE_C
 'C'

	)

46 
	#UCNV_PRV_ESCAPE_XML_DEC
 'D'

	)

47 
	#UCNV_PRV_ESCAPE_XML_HEX
 'X'

	)

48 
	#UCNV_PRV_ESCAPE_JAVA
 'J'

	)

49 
	#UCNV_PRV_ESCAPE_UNICODE
 'U'

	)

50 
	#UCNV_PRV_ESCAPE_CSS2
 'S'

	)

51 
	#UCNV_PRV_STOP_ON_ILLEGAL
 'i'

	)

54 
U_CAPI
 
U_EXPORT2


55 
	$UCNV_FROM_U_CALLBACK_STOP
 (

56 c⁄° *
c⁄ãxt
,

57 
UC⁄vîãrFromUnicodeArgs
 *
‰omUArgs
,

58 c⁄° 
UCh¨
* 
codeUnôs
,

59 
öt32_t
 
Àngth
,

60 
UCh¨32
 
codePoöt
,

61 
UC⁄vîãrCÆlbackRós⁄
 
ªas⁄
,

62 
UEº‹Code
 * 
îr
)

66 
	}
}

70 
U_CAPI
 
U_EXPORT2


71 
	$UCNV_TO_U_CALLBACK_STOP
 (

72 c⁄° *
c⁄ãxt
,

73 
UC⁄vîãrToUnicodeArgs
 *
toUArgs
,

74 c⁄° * 
codePoöts
,

75 
öt32_t
 
Àngth
,

76 
UC⁄vîãrCÆlbackRós⁄
 
ªas⁄
,

77 
UEº‹Code
 * 
îr
)

81 
	}
}

83 
U_CAPI
 
U_EXPORT2


84 
	$UCNV_FROM_U_CALLBACK_SKIP
 (

85 c⁄° *
c⁄ãxt
,

86 
UC⁄vîãrFromUnicodeArgs
 *
‰omUArgs
,

87 c⁄° 
UCh¨
* 
codeUnôs
,

88 
öt32_t
 
Àngth
,

89 
UCh¨32
 
codePoöt
,

90 
UC⁄vîãrCÆlbackRós⁄
 
ªas⁄
,

91 
UEº‹Code
 * 
îr
)

93 i‡(
ªas⁄
 <
UCNV_IRREGULAR
)

95 i‡(
c⁄ãxt
 =
NULL
 || (*((*)c⁄ãxtË=
UCNV_PRV_STOP_ON_ILLEGAL
 && 
ªas⁄
 =
UCNV_UNASSIGNED
))

97 *
îr
 = 
U_ZERO_ERROR
;

102 
	}
}

104 
U_CAPI
 
U_EXPORT2


105 
	$UCNV_FROM_U_CALLBACK_SUBSTITUTE
 (

106 c⁄° *
c⁄ãxt
,

107 
UC⁄vîãrFromUnicodeArgs
 *
‰omArgs
,

108 c⁄° 
UCh¨
* 
codeUnôs
,

109 
öt32_t
 
Àngth
,

110 
UCh¨32
 
codePoöt
,

111 
UC⁄vîãrCÆlbackRós⁄
 
ªas⁄
,

112 
UEº‹Code
 * 
îr
)

114 i‡(
ªas⁄
 <
UCNV_IRREGULAR
)

116 i‡(
c⁄ãxt
 =
NULL
 || (*((*)c⁄ãxtË=
UCNV_PRV_STOP_ON_ILLEGAL
 && 
ªas⁄
 =
UCNV_UNASSIGNED
))

118 *
îr
 = 
U_ZERO_ERROR
;

119 
	`u˙v_cbFromUWrôeSub
(
‰omArgs
, 0, 
îr
);

124 
	}
}

131 
U_CAPI
 
U_EXPORT2


132 
	$UCNV_FROM_U_CALLBACK_ESCAPE
 (

133 c⁄° *
c⁄ãxt
,

134 
UC⁄vîãrFromUnicodeArgs
 *
‰omArgs
,

135 c⁄° 
UCh¨
 *
codeUnôs
,

136 
öt32_t
 
Àngth
,

137 
UCh¨32
 
codePoöt
,

138 
UC⁄vîãrCÆlbackRós⁄
 
ªas⁄
,

139 
UEº‹Code
 * 
îr
)

142 
UCh¨
 
vÆueSåög
[
VALUE_STRING_LENGTH
];

143 
öt32_t
 
vÆueSåögLígth
 = 0;

144 
öt32_t
 
i
 = 0;

146 c⁄° 
UCh¨
 *
myVÆueSour˚
 = 
NULL
;

147 
UEº‹Code
 
îr2
 = 
U_ZERO_ERROR
;

148 
UC⁄vîãrFromUCÆlback
 
‹igöÆ
 = 
NULL
;

149 c⁄° *
‹igöÆC⁄ãxt
;

151 
UC⁄vîãrFromUCÆlback
 
ign‹edCÆlback
 = 
NULL
;

152 c⁄° *
ign‹edC⁄ãxt
;

154 i‡(
ªas⁄
 > 
UCNV_IRREGULAR
)

159 
	`u˙v_£tFromUCÆlBack
 (
‰omArgs
->
c⁄vîãr
,

160 (
UC⁄vîãrFromUCÆlback
Ë
UCNV_FROM_U_CALLBACK_SUBSTITUTE
,

161 
NULL
,

162 &
‹igöÆ
,

163 &
‹igöÆC⁄ãxt
,

164 &
îr2
);

166 i‡(
	`U_FAILURE
 (
îr2
))

168 *
îr
 = 
îr2
;

171 if(
c⁄ãxt
==
NULL
)

173 
i
 < 
Àngth
)

175 
vÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_PERCENT_SIGN_CODEPOINT
;

176 
vÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_U_CODEPOINT
;

177 
vÆueSåögLígth
 +
	`u¥v_ôou
 (
vÆueSåög
 + vÆueSåögLígth, 
VALUE_STRING_LENGTH
 - vÆueSåögLígth, (
uöt16_t
)
codeUnôs
[
i
++], 16, 4);

182 *((*)
c⁄ãxt
))

184 
UCNV_PRV_ESCAPE_JAVA
:

185 
i
 < 
Àngth
)

187 
vÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_RS_CODEPOINT
;

188 
vÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_U_LOW_CODEPOINT
;

189 
vÆueSåögLígth
 +
	`u¥v_ôou
 (
vÆueSåög
 + vÆueSåögLígth, 
VALUE_STRING_LENGTH
 - vÆueSåögLígth, (
uöt16_t
)
codeUnôs
[
i
++], 16, 4);

193 
UCNV_PRV_ESCAPE_C
:

194 
vÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_RS_CODEPOINT
;

196 if(
Àngth
==2){

197 
vÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_U_CODEPOINT
;

198 
vÆueSåögLígth
 +
	`u¥v_ôou
 (
vÆueSåög
 + vÆueSåögLígth, 
VALUE_STRING_LENGTH
 - vÆueSåögLígth, 
codePoöt
, 16, 8);

202 
vÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_U_LOW_CODEPOINT
;

203 
vÆueSåögLígth
 +
	`u¥v_ôou
 (
vÆueSåög
 + vÆueSåögLígth, 
VALUE_STRING_LENGTH
 - vÆueSåögLígth, (
uöt16_t
)
codeUnôs
[0], 16, 4);

207 
UCNV_PRV_ESCAPE_XML_DEC
:

209 
vÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_AMP_CODEPOINT
;

210 
vÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_HASH_CODEPOINT
;

211 if(
Àngth
==2){

212 
vÆueSåögLígth
 +
	`u¥v_ôou
 (
vÆueSåög
 + vÆueSåögLígth, 
VALUE_STRING_LENGTH
 - vÆueSåögLígth, 
codePoöt
, 10, 0);

215 
vÆueSåögLígth
 +
	`u¥v_ôou
 (
vÆueSåög
 + vÆueSåögLígth, 
VALUE_STRING_LENGTH
 - vÆueSåögLígth, (
uöt16_t
)
codeUnôs
[0], 10, 0);

217 
vÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_SEMICOLON_CODEPOINT
;

220 
UCNV_PRV_ESCAPE_XML_HEX
:

222 
vÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_AMP_CODEPOINT
;

223 
vÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_HASH_CODEPOINT
;

224 
vÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_X_LOW_CODEPOINT
;

225 if(
Àngth
==2){

226 
vÆueSåögLígth
 +
	`u¥v_ôou
 (
vÆueSåög
 + vÆueSåögLígth, 
VALUE_STRING_LENGTH
 - vÆueSåögLígth, 
codePoöt
, 16, 0);

229 
vÆueSåögLígth
 +
	`u¥v_ôou
 (
vÆueSåög
 + vÆueSåögLígth, 
VALUE_STRING_LENGTH
 - vÆueSåögLígth, (
uöt16_t
)
codeUnôs
[0], 16, 0);

231 
vÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_SEMICOLON_CODEPOINT
;

234 
UCNV_PRV_ESCAPE_UNICODE
:

235 
vÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_LEFT_CURLY_CODEPOINT
;

236 
vÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_U_CODEPOINT
;

237 
vÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_PLUS_CODEPOINT
;

238 i‡(
Àngth
 == 2) {

239 
vÆueSåögLígth
 +
	`u¥v_ôou
 (
vÆueSåög
 + vÆueSåögLígth, 
VALUE_STRING_LENGTH
 - vÆueSåögLígth, 
codePoöt
, 16, 4);

241 
vÆueSåögLígth
 +
	`u¥v_ôou
 (
vÆueSåög
 + vÆueSåögLígth, 
VALUE_STRING_LENGTH
 - vÆueSåögLígth, (
uöt16_t
)
codeUnôs
[0], 16, 4);

243 
vÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_RIGHT_CURLY_CODEPOINT
;

246 
UCNV_PRV_ESCAPE_CSS2
:

247 
vÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_RS_CODEPOINT
;

248 
vÆueSåögLígth
 +
	`u¥v_ôou
 (
vÆueSåög
 + vÆueSåögLígth, 
VALUE_STRING_LENGTH
 - vÆueSåögLígth, 
codePoöt
, 16, 0);

251 
vÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_SPACE_CODEPOINT
;

255 
i
 < 
Àngth
)

257 
vÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_PERCENT_SIGN_CODEPOINT
;

258 
vÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_U_CODEPOINT
;

259 
vÆueSåögLígth
 +
	`u¥v_ôou
 (
vÆueSåög
 + vÆueSåögLígth, 
VALUE_STRING_LENGTH
 - vÆueSåögLígth, (
uöt16_t
)
codeUnôs
[
i
++], 16, 4);

263 
myVÆueSour˚
 = 
vÆueSåög
;

266 *
îr
 = 
U_ZERO_ERROR
;

268 
	`u˙v_cbFromUWrôeUCh¨s
(
‰omArgs
, &
myVÆueSour˚
, myVÆueSour˚+
vÆueSåögLígth
, 0, 
îr
);

270 
	`u˙v_£tFromUCÆlBack
 (
‰omArgs
->
c⁄vîãr
,

271 
‹igöÆ
,

272 
‹igöÆC⁄ãxt
,

273 &
ign‹edCÆlback
,

274 &
ign‹edC⁄ãxt
,

275 &
îr2
);

276 i‡(
	`U_FAILURE
 (
îr2
))

278 *
îr
 = 
îr2
;

283 
	}
}

287 
U_CAPI
 
U_EXPORT2


288 
	$UCNV_TO_U_CALLBACK_SKIP
 (

289 c⁄° *
c⁄ãxt
,

290 
UC⁄vîãrToUnicodeArgs
 *
toArgs
,

291 c⁄° * 
codeUnôs
,

292 
öt32_t
 
Àngth
,

293 
UC⁄vîãrCÆlbackRós⁄
 
ªas⁄
,

294 
UEº‹Code
 * 
îr
)

296 i‡(
ªas⁄
 <
UCNV_IRREGULAR
)

298 i‡(
c⁄ãxt
 =
NULL
 || (*((*)c⁄ãxtË=
UCNV_PRV_STOP_ON_ILLEGAL
 && 
ªas⁄
 =
UCNV_UNASSIGNED
))

300 *
îr
 = 
U_ZERO_ERROR
;

305 
	}
}

307 
U_CAPI
 
U_EXPORT2


308 
	$UCNV_TO_U_CALLBACK_SUBSTITUTE
 (

309 c⁄° *
c⁄ãxt
,

310 
UC⁄vîãrToUnicodeArgs
 *
toArgs
,

311 c⁄° * 
codeUnôs
,

312 
öt32_t
 
Àngth
,

313 
UC⁄vîãrCÆlbackRós⁄
 
ªas⁄
,

314 
UEº‹Code
 * 
îr
)

316 i‡(
ªas⁄
 <
UCNV_IRREGULAR
)

318 i‡(
c⁄ãxt
 =
NULL
 || (*((*)c⁄ãxtË=
UCNV_PRV_STOP_ON_ILLEGAL
 && 
ªas⁄
 =
UCNV_UNASSIGNED
))

320 *
îr
 = 
U_ZERO_ERROR
;

321 
	`u˙v_cbToUWrôeSub
(
toArgs
,0,
îr
);

326 
	}
}

331 
U_CAPI
 
U_EXPORT2


332 
	$UCNV_TO_U_CALLBACK_ESCAPE
 (

333 c⁄° *
c⁄ãxt
,

334 
UC⁄vîãrToUnicodeArgs
 *
toArgs
,

335 c⁄° * 
codeUnôs
,

336 
öt32_t
 
Àngth
,

337 
UC⁄vîãrCÆlbackRós⁄
 
ªas⁄
,

338 
UEº‹Code
 * 
îr
)

340 
UCh¨
 
uniVÆueSåög
[
VALUE_STRING_LENGTH
];

341 
öt32_t
 
vÆueSåögLígth
 = 0;

342 
öt32_t
 
i
 = 0;

344 i‡(
ªas⁄
 > 
UCNV_IRREGULAR
)

349 if(
c⁄ãxt
==
NULL
)

351 
i
 < 
Àngth
)

353 
uniVÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_PERCENT_SIGN_CODEPOINT
;

354 
uniVÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_X_CODEPOINT
;

355 
vÆueSåögLígth
 +
	`u¥v_ôou
 (
uniVÆueSåög
 + vÆueSåögLígth, 
VALUE_STRING_LENGTH
 - vÆueSåögLígth, (
uöt8_t
Ë
codeUnôs
[
i
++], 16, 2);

360 *((*)
c⁄ãxt
))

362 
UCNV_PRV_ESCAPE_XML_DEC
:

363 
i
 < 
Àngth
)

365 
uniVÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_AMP_CODEPOINT
;

366 
uniVÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_HASH_CODEPOINT
;

367 
vÆueSåögLígth
 +
	`u¥v_ôou
 (
uniVÆueSåög
 + vÆueSåögLígth, 
VALUE_STRING_LENGTH
 - vÆueSåögLígth, (
uöt8_t
)
codeUnôs
[
i
++], 10, 0);

368 
uniVÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_SEMICOLON_CODEPOINT
;

372 
UCNV_PRV_ESCAPE_XML_HEX
:

373 
i
 < 
Àngth
)

375 
uniVÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_AMP_CODEPOINT
;

376 
uniVÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_HASH_CODEPOINT
;

377 
uniVÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_X_LOW_CODEPOINT
;

378 
vÆueSåögLígth
 +
	`u¥v_ôou
 (
uniVÆueSåög
 + vÆueSåögLígth, 
VALUE_STRING_LENGTH
 - vÆueSåögLígth, (
uöt8_t
)
codeUnôs
[
i
++], 16, 0);

379 
uniVÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_SEMICOLON_CODEPOINT
;

382 
UCNV_PRV_ESCAPE_C
:

383 
i
 < 
Àngth
)

385 
uniVÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_RS_CODEPOINT
;

386 
uniVÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_X_LOW_CODEPOINT
;

387 
vÆueSåögLígth
 +
	`u¥v_ôou
 (
uniVÆueSåög
 + vÆueSåögLígth, 
VALUE_STRING_LENGTH
 - vÆueSåögLígth, (
uöt8_t
)
codeUnôs
[
i
++], 16, 2);

391 
i
 < 
Àngth
)

393 
uniVÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_PERCENT_SIGN_CODEPOINT
;

394 
uniVÆueSåög
[
vÆueSåögLígth
++] = (
UCh¨
Ë
UNICODE_X_CODEPOINT
;

395 
	`u¥v_ôou
 (
uniVÆueSåög
 + 
vÆueSåögLígth
, 
VALUE_STRING_LENGTH
 - vÆueSåögLígth, (
uöt8_t
Ë
codeUnôs
[
i
++], 16, 2);

396 
vÆueSåögLígth
 += 2;

401 *
îr
 = 
U_ZERO_ERROR
;

403 
	`u˙v_cbToUWrôeUCh¨s
(
toArgs
, 
uniVÆueSåög
, 
vÆueSåögLígth
, 0, 
îr
);

404 
	}
}

	@ucnv_ext.c

19 
	~"unicode/uty≥s.h
"

21 #i‡!
UCONFIG_NO_CONVERSION
 && !
UCONFIG_NO_LEGACY_CONVERSION


23 
	~"unicode/u£t.h
"

24 
	~"u˙v_bld.h
"

25 
	~"u˙v_˙v.h
"

26 
	~"u˙v_ext.h
"

27 
	~"cmem‹y.h
"

34 
U_INLINE
 
uöt32_t


35 
	$u˙v_extFödToU
(c⁄° 
uöt32_t
 *
toUSe˘i⁄
, 
öt32_t
 
Àngth
, 
uöt8_t
 
byã
) {

36 
uöt32_t
 
w‹d0
, 
w‹d
;

37 
öt32_t
 
i
, 
°¨t
, 
limô
;

40 
°¨t
=(
öt32_t
)
	`UCNV_EXT_TO_U_GET_BYTE
(
toUSe˘i⁄
[0]);

41 
limô
=(
öt32_t
)
	`UCNV_EXT_TO_U_GET_BYTE
(
toUSe˘i⁄
[
Àngth
-1]);

42 if(
byã
<
°¨t
 || 
limô
<byte) {

46 if(
Àngth
==((
limô
-
°¨t
)+1)) {

48  
	`UCNV_EXT_TO_U_GET_VALUE
(
toUSe˘i⁄
[
byã
-
°¨t
]);

52 
w‹d0
=
	`UCNV_EXT_TO_U_MAKE_WORD
(
byã
, 0);

62 
w‹d
=
w‹d0
|
UCNV_EXT_TO_U_VALUE_MASK
;

65 
°¨t
=0;

66 
limô
=
Àngth
;

68 
i
=
limô
-
°¨t
;

69 if(
i
<=1) {

74 if(
i
<=4) {

76 if(
w‹d0
<=
toUSe˘i⁄
[
°¨t
]) {

79 if(++
°¨t
<
limô
 && 
w‹d0
<=
toUSe˘i⁄
[start]) {

82 if(++
°¨t
<
limô
 && 
w‹d0
<=
toUSe˘i⁄
[start]) {

86 ++
°¨t
;

90 
i
=(
°¨t
+
limô
)/2;

91 if(
w‹d
<
toUSe˘i⁄
[
i
]) {

92 
limô
=
i
;

94 
°¨t
=
i
;

99 if(
°¨t
<
limô
 && 
byã
==
	`UCNV_EXT_TO_U_GET_BYTE
(
w‹d
=
toUSe˘i⁄
[start])) {

100  
	`UCNV_EXT_TO_U_GET_VALUE
(
w‹d
);

104 
	}
}

110 
	#UCNV_EXT_TO_U_VERIFY_SISO_MATCH
(
sisoSèã
, 
m©ch
) \

111 ((
sisoSèã
)<0 || ((sisoSèã)==0Ë=(
m©ch
==1))

	)

119 
öt32_t


120 
	$u˙v_extM©chToU
(c⁄° 
öt32_t
 *
cx
, 
öt8_t
 
sisoSèã
,

121 c⁄° *
¥e
, 
öt32_t
 
¥eLígth
,

122 c⁄° *
§c
, 
öt32_t
 
§cLígth
,

123 
uöt32_t
 *
pM©chVÆue
,

124 
UBoﬁ
 
u£FÆlback
, UBoﬁ 
Êush
) {

125 c⁄° 
uöt32_t
 *
toUTabÀ
, *
toUSe˘i⁄
;

127 
uöt32_t
 
vÆue
, 
m©chVÆue
;

128 
öt32_t
 
i
, 
j
, 
idx
, 
Àngth
, 
m©chLígth
;

129 
uöt8_t
 
b
;

131 if(
cx
==
NULL
 || cx[
UCNV_EXT_TO_U_LENGTH
]<=0) {

136 
toUTabÀ
=
	`UCNV_EXT_ARRAY
(
cx
, 
UCNV_EXT_TO_U_INDEX
, 
uöt32_t
);

137 
idx
=0;

139 
m©chVÆue
=0;

140 
i
=
j
=
m©chLígth
=0;

142 if(
sisoSèã
==0) {

144 if(
¥eLígth
>1) {

146 } if(
¥eLígth
==1) {

147 
§cLígth
=0;

149 if(
§cLígth
>1) {

150 
§cLígth
=1;

153 
Êush
=
TRUE
;

161 
toUSe˘i⁄
=
toUTabÀ
+
idx
;

164 
vÆue
=*
toUSe˘i⁄
++;

165 
Àngth
=
	`UCNV_EXT_TO_U_GET_BYTE
(
vÆue
);

166 
vÆue
=
	`UCNV_EXT_TO_U_GET_VALUE
(value);

167 if–
vÆue
!=0 &&

168 (
	`UCNV_EXT_TO_U_IS_ROUNDTRIP
(
vÆue
) ||

169 
	`TO_U_USE_FALLBACK
(
u£FÆlback
)) &&

170 
	`UCNV_EXT_TO_U_VERIFY_SISO_MATCH
(
sisoSèã
, 
i
+
j
)

173 
m©chVÆue
=
vÆue
;

174 
m©chLígth
=
i
+
j
;

178 if(
i
<
¥eLígth
) {

179 
b
=(
uöt8_t
)
¥e
[
i
++];

180 } if(
j
<
§cLígth
) {

181 
b
=(
uöt8_t
)
§c
[
j
++];

184 if(
Êush
 || (
Àngth
=(
i
+
j
))>
UCNV_EXT_MAX_BYTES
) {

193  -
Àngth
;

198 
vÆue
=
	`u˙v_extFödToU
(
toUSe˘i⁄
, 
Àngth
, 
b
);

199 if(
vÆue
==0) {

203 if(
	`UCNV_EXT_TO_U_IS_PARTIAL
(
vÆue
)) {

205 
idx
=(
öt32_t
)
	`UCNV_EXT_TO_U_GET_PARTIAL_INDEX
(
vÆue
);

207 if–(
	`UCNV_EXT_TO_U_IS_ROUNDTRIP
(
vÆue
) ||

208 
	`TO_U_USE_FALLBACK
(
u£FÆlback
)) &&

209 
	`UCNV_EXT_TO_U_VERIFY_SISO_MATCH
(
sisoSèã
, 
i
+
j
)

212 
m©chVÆue
=
vÆue
;

213 
m©chLígth
=
i
+
j
;

222 if(
m©chLígth
==0) {

228 *
pM©chVÆue
=
	`UCNV_EXT_TO_U_MASK_ROUNDTRIP
(
m©chVÆue
);

229  
m©chLígth
;

230 
	}
}

232 
U_INLINE
 

233 
	$u˙v_extWrôeToU
(
UC⁄vîãr
 *
˙v
, c⁄° 
öt32_t
 *
cx
,

234 
uöt32_t
 
vÆue
,

235 
UCh¨
 **
èrgë
, c⁄° UCh¨ *
èrgëLimô
,

236 
öt32_t
 **
off£ts
, i¡32_à
§cIndex
,

237 
UEº‹Code
 *
pEº‹Code
) {

239 if(
	`UCNV_EXT_TO_U_IS_CODE_POINT
(
vÆue
)) {

241 
	`u˙v_toUWrôeCodePoöt
(

242 
˙v
, 
	`UCNV_EXT_TO_U_GET_CODE_POINT
(
vÆue
),

243 
èrgë
, 
èrgëLimô
,

244 
off£ts
, 
§cIndex
,

245 
pEº‹Code
);

248 
	`u˙v_toUWrôeUCh¨s
(

249 
˙v
,

250 
	`UCNV_EXT_ARRAY
(
cx
, 
UCNV_EXT_TO_U_UCHARS_INDEX
, 
UCh¨
)+

251 
	`UCNV_EXT_TO_U_GET_INDEX
(
vÆue
),

252 
	`UCNV_EXT_TO_U_GET_LENGTH
(
vÆue
),

253 
èrgë
, 
èrgëLimô
,

254 
off£ts
, 
§cIndex
,

255 
pEº‹Code
);

257 
	}
}

267 
	#UCNV_SISO_STATE
(
˙v
) \

268 ((
˙v
)->
sh¨edD©a
->
mbcs
.
ouçutTy≥
==
MBCS_OUTPUT_2_SISO
 ? (
öt8_t
)(˙v)->
mode
 : \

269 (
˙v
)->
sh¨edD©a
->
mbcs
.
ouçutTy≥
==
MBCS_OUTPUT_DBCS_ONLY
 ? 1 : -1)

	)

274 
U_CFUNC
 
UBoﬁ


275 
	$u˙v_extInôülM©chToU
(
UC⁄vîãr
 *
˙v
, c⁄° 
öt32_t
 *
cx
,

276 
öt32_t
 
fú°Lígth
,

277 c⁄° **
§c
, c⁄° *
§cLimô
,

278 
UCh¨
 **
èrgë
, c⁄° UCh¨ *
èrgëLimô
,

279 
öt32_t
 **
off£ts
, i¡32_à
§cIndex
,

280 
UBoﬁ
 
Êush
,

281 
UEº‹Code
 *
pEº‹Code
) {

282 
uöt32_t
 
vÆue
 = 0;

283 
öt32_t
 
m©ch
;

286 
m©ch
=
	`u˙v_extM©chToU
(
cx
, (
öt8_t
)
	`UCNV_SISO_STATE
(
˙v
),

287 (c⁄° *)
˙v
->
toUByãs
, 
fú°Lígth
,

288 *
§c
, (
öt32_t
)(
§cLimô
-*src),

289 &
vÆue
,

290 
˙v
->
u£FÆlback
, 
Êush
);

291 if(
m©ch
>0) {

293 *
§c
+=
m©ch
-
fú°Lígth
;

296 
	`u˙v_extWrôeToU
(
˙v
, 
cx
,

297 
vÆue
,

298 
èrgë
, 
èrgëLimô
,

299 
off£ts
, 
§cIndex
,

300 
pEº‹Code
);

301  
TRUE
;

302 } if(
m©ch
<0) {

304 c⁄° *
s
;

305 
öt32_t
 
j
;

308 
s
=(c⁄° *)
˙v
->
toUByãs
;

309 
˙v
->
¥eToUFú°Lígth
=(
öt8_t
)
fú°Lígth
;

310 
j
=0; j<
fú°Lígth
; ++j) {

311 
˙v
->
¥eToU
[
j
]=*
s
++;

315 
s
=*
§c
;

316 
m©ch
=-match;

317 ; 
j
<
m©ch
; ++j) {

318 
˙v
->
¥eToU
[
j
]=*
s
++;

320 *
§c
=
s
;

321 
˙v
->
¥eToULígth
=(
öt8_t
)
m©ch
;

322  
TRUE
;

324  
FALSE
;

326 
	}
}

328 
U_CFUNC
 
UCh¨32


329 
	$u˙v_extSim∂eM©chToU
(c⁄° 
öt32_t
 *
cx
,

330 c⁄° *
sour˚
, 
öt32_t
 
Àngth
,

331 
UBoﬁ
 
u£FÆlback
) {

332 
uöt32_t
 
vÆue
 = 0;

333 
öt32_t
 
m©ch
;

335 if(
Àngth
<=0) {

340 
m©ch
=
	`u˙v_extM©chToU
(
cx
, -1,

341 
sour˚
, 
Àngth
,

342 
NULL
, 0,

343 &
vÆue
,

344 
u£FÆlback
, 
TRUE
);

345 if(
m©ch
==
Àngth
) {

347 if(
	`UCNV_EXT_TO_U_IS_CODE_POINT
(
vÆue
)) {

348  
	`UCNV_EXT_TO_U_GET_CODE_POINT
(
vÆue
);

360 
	}
}

366 
U_CFUNC
 

367 
	$u˙v_extC⁄töueM©chToU
(
UC⁄vîãr
 *
˙v
,

368 
UC⁄vîãrToUnicodeArgs
 *
pArgs
, 
öt32_t
 
§cIndex
,

369 
UEº‹Code
 *
pEº‹Code
) {

370 
uöt32_t
 
vÆue
 = 0;

371 
öt32_t
 
m©ch
, 
Àngth
;

373 
m©ch
=
	`u˙v_extM©chToU
(
˙v
->
sh¨edD©a
->
mbcs
.
extIndexes
, (
öt8_t
)
	`UCNV_SISO_STATE
(cnv),

374 
˙v
->
¥eToU
, cnv->
¥eToULígth
,

375 
pArgs
->
sour˚
, (
öt32_t
)’Args->
sour˚Limô
-pArgs->source),

376 &
vÆue
,

377 
˙v
->
u£FÆlback
, 
pArgs
->
Êush
);

378 if(
m©ch
>0) {

379 if(
m©ch
>=
˙v
->
¥eToULígth
) {

381 
pArgs
->
sour˚
+=
m©ch
-
˙v
->
¥eToULígth
;

382 
˙v
->
¥eToULígth
=0;

385 
Àngth
=
˙v
->
¥eToULígth
-
m©ch
;

386 
	`u¥v_memmove
(
˙v
->
¥eToU
, cnv->¥eToU+
m©ch
, 
Àngth
);

387 
˙v
->
¥eToULígth
=(
öt8_t
)-
Àngth
;

391 
	`u˙v_extWrôeToU
(
˙v
, cnv->
sh¨edD©a
->
mbcs
.
extIndexes
,

392 
vÆue
,

393 &
pArgs
->
èrgë
,ÖArgs->
èrgëLimô
,

394 &
pArgs
->
off£ts
, 
§cIndex
,

395 
pEº‹Code
);

396 } if(
m©ch
<0) {

398 c⁄° *
s
;

399 
öt32_t
 
j
;

402 
s
=
pArgs
->
sour˚
;

403 
m©ch
=-match;

404 
j
=
˙v
->
¥eToULígth
; j<
m©ch
; ++j) {

405 
˙v
->
¥eToU
[
j
]=*
s
++;

407 
pArgs
->
sour˚
=
s
;

408 
˙v
->
¥eToULígth
=(
öt8_t
)
m©ch
;

429 
	`u¥v_mem˝y
(
˙v
->
toUByãs
, cnv->
¥eToU
, cnv->
¥eToUFú°Lígth
);

430 
˙v
->
toULígth
=˙v->
¥eToUFú°Lígth
;

433 
Àngth
=
˙v
->
¥eToULígth
-˙v->
¥eToUFú°Lígth
;

434 if(
Àngth
>0) {

435 
	`u¥v_memmove
(
˙v
->
¥eToU
, cnv->¥eToU+˙v->
¥eToUFú°Lígth
, 
Àngth
);

439 
˙v
->
¥eToULígth
=(
öt8_t
)-
Àngth
;

442 *
pEº‹Code
=
U_INVALID_CHAR_FOUND
;

444 
	}
}

451 
U_INLINE
 
öt32_t


452 
	$u˙v_extFödFromU
(c⁄° 
UCh¨
 *
‰omUSe˘i⁄
, 
öt32_t
 
Àngth
, UCh¨ 
u
) {

453 
öt32_t
 
i
, 
°¨t
, 
limô
;

456 
°¨t
=0;

457 
limô
=
Àngth
;

459 
i
=
limô
-
°¨t
;

460 if(
i
<=1) {

465 if(
i
<=4) {

467 if(
u
<=
‰omUSe˘i⁄
[
°¨t
]) {

470 if(++
°¨t
<
limô
 && 
u
<=
‰omUSe˘i⁄
[start]) {

473 if(++
°¨t
<
limô
 && 
u
<=
‰omUSe˘i⁄
[start]) {

477 ++
°¨t
;

481 
i
=(
°¨t
+
limô
)/2;

482 if(
u
<
‰omUSe˘i⁄
[
i
]) {

483 
limô
=
i
;

485 
°¨t
=
i
;

490 if(
°¨t
<
limô
 && 
u
==
‰omUSe˘i⁄
[start]) {

491  
°¨t
;

495 
	}
}

517 
öt32_t


518 
	$u˙v_extM©chFromU
(c⁄° 
öt32_t
 *
cx
,

519 
UCh¨32
 
fú°CP
,

520 c⁄° 
UCh¨
 *
¥e
, 
öt32_t
 
¥eLígth
,

521 c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

522 
uöt32_t
 *
pM©chVÆue
,

523 
UBoﬁ
 
u£FÆlback
, UBoﬁ 
Êush
) {

524 c⁄° 
uöt16_t
 *
°age12
, *
°age3
;

525 c⁄° 
uöt32_t
 *
°age3b
;

527 c⁄° 
UCh¨
 *
‰omUTabÀUCh¨s
, *
‰omUSe˘i⁄UCh¨s
;

528 c⁄° 
uöt32_t
 *
‰omUTabÀVÆues
, *
‰omUSe˘i⁄VÆues
;

530 
uöt32_t
 
vÆue
, 
m©chVÆue
;

531 
öt32_t
 
i
, 
j
, 
idx
, 
Àngth
, 
m©chLígth
;

532 
UCh¨
 
c
;

534 if(
cx
==
NULL
) {

539 
idx
=
fú°CP
>>10;

540 if(
idx
>=
cx
[
UCNV_EXT_FROM_U_STAGE_1_LENGTH
]) {

544 
°age12
=
	`UCNV_EXT_ARRAY
(
cx
, 
UCNV_EXT_FROM_U_STAGE_12_INDEX
, 
uöt16_t
);

545 
°age3
=
	`UCNV_EXT_ARRAY
(
cx
, 
UCNV_EXT_FROM_U_STAGE_3_INDEX
, 
uöt16_t
);

546 
idx
=
	`UCNV_EXT_FROM_U
(
°age12
, 
°age3
, idx, 
fú°CP
);

548 
°age3b
=
	`UCNV_EXT_ARRAY
(
cx
, 
UCNV_EXT_FROM_U_STAGE_3B_INDEX
, 
uöt32_t
);

549 
vÆue
=
°age3b
[
idx
];

550 if(
vÆue
==0) {

560 if(
	`UCNV_EXT_TO_U_IS_PARTIAL
(
vÆue
)) {

562 
idx
=(
öt32_t
)
	`UCNV_EXT_FROM_U_GET_PARTIAL_INDEX
(
vÆue
);

565 
‰omUTabÀUCh¨s
=
	`UCNV_EXT_ARRAY
(
cx
, 
UCNV_EXT_FROM_U_UCHARS_INDEX
, 
UCh¨
);

566 
‰omUTabÀVÆues
=
	`UCNV_EXT_ARRAY
(
cx
, 
UCNV_EXT_FROM_U_VALUES_INDEX
, 
uöt32_t
);

568 
m©chVÆue
=0;

569 
i
=
j
=
m©chLígth
=0;

576 
‰omUSe˘i⁄UCh¨s
=
‰omUTabÀUCh¨s
+
idx
;

577 
‰omUSe˘i⁄VÆues
=
‰omUTabÀVÆues
+
idx
;

580 
Àngth
=*
‰omUSe˘i⁄UCh¨s
++;

581 
vÆue
=*
‰omUSe˘i⁄VÆues
++;

582 if–
vÆue
!=0 &&

583 (
	`UCNV_EXT_FROM_U_IS_ROUNDTRIP
(
vÆue
) ||

584 
	`FROM_U_USE_FALLBACK
(
u£FÆlback
, 
fú°CP
)) &&

585 (
vÆue
&
UCNV_EXT_FROM_U_RESERVED_MASK
)==0

588 
m©chVÆue
=
vÆue
;

589 
m©chLígth
=2+
i
+
j
;

593 if(
i
<
¥eLígth
) {

594 
c
=
¥e
[
i
++];

595 } if(
j
<
§cLígth
) {

596 
c
=
§c
[
j
++];

599 if(
Êush
 || (
Àngth
=(
i
+
j
))>
UCNV_EXT_MAX_UCHARS
) {

608  -(2+
Àngth
);

613 
idx
=
	`u˙v_extFödFromU
(
‰omUSe˘i⁄UCh¨s
, 
Àngth
, 
c
);

614 if(
idx
<0) {

618 
vÆue
=
‰omUSe˘i⁄VÆues
[
idx
];

619 if(
	`UCNV_EXT_FROM_U_IS_PARTIAL
(
vÆue
)) {

621 
idx
=(
öt32_t
)
	`UCNV_EXT_FROM_U_GET_PARTIAL_INDEX
(
vÆue
);

623 if–(
	`UCNV_EXT_FROM_U_IS_ROUNDTRIP
(
vÆue
) ||

624 
	`FROM_U_USE_FALLBACK
(
u£FÆlback
, 
fú°CP
)) &&

625 (
vÆue
&
UCNV_EXT_FROM_U_RESERVED_MASK
)==0

628 
m©chVÆue
=
vÆue
;

629 
m©chLígth
=2+
i
+
j
;

638 if(
m©chLígth
==0) {

643 if–(
	`UCNV_EXT_FROM_U_IS_ROUNDTRIP
(
vÆue
) ||

644 
	`FROM_U_USE_FALLBACK
(
u£FÆlback
, 
fú°CP
)) &&

645 (
vÆue
&
UCNV_EXT_FROM_U_RESERVED_MASK
)==0

648 
m©chVÆue
=
vÆue
;

649 
m©chLígth
=2;

657 if(
m©chVÆue
==
UCNV_EXT_FROM_U_SUBCHAR1
) {

661 *
pM©chVÆue
=
m©chVÆue
;

662  
m©chLígth
;

663 
	}
}

668 
U_INLINE
 

669 
	$u˙v_extWrôeFromU
(
UC⁄vîãr
 *
˙v
, c⁄° 
öt32_t
 *
cx
,

670 
uöt32_t
 
vÆue
,

671 **
èrgë
, c⁄° *
èrgëLimô
,

672 
öt32_t
 **
off£ts
, i¡32_à
§cIndex
,

673 
UEº‹Code
 *
pEº‹Code
) {

674 
uöt8_t
 
buf„r
[1+
UCNV_EXT_MAX_BYTES
];

675 c⁄° 
uöt8_t
 *
ªsu…
;

676 
öt32_t
 
Àngth
, 
¥evLígth
;

678 
Àngth
=
	`UCNV_EXT_FROM_U_GET_LENGTH
(
vÆue
);

679 
vÆue
=(
uöt32_t
)
	`UCNV_EXT_FROM_U_GET_DATA
(value);

682 if(
Àngth
<=
UCNV_EXT_FROM_U_MAX_DIRECT_LENGTH
) {

689 
uöt8_t
 *
p
=
buf„r
+1;

690 
Àngth
) {

692 *
p
++=(
uöt8_t
)(
vÆue
>>16);

694 *
p
++=(
uöt8_t
)(
vÆue
>>8);

696 *
p
++=(
uöt8_t
)
vÆue
;

700 
ªsu…
=
buf„r
+1;

702 
ªsu…
=
	`UCNV_EXT_ARRAY
(
cx
, 
UCNV_EXT_FROM_U_BYTES_INDEX
, 
uöt8_t
)+
vÆue
;

707 if((
¥evLígth
=
˙v
->
‰omUnicodeSètus
)!=0) {

709 
uöt8_t
 
shi·Byã
;

711 if(
¥evLígth
>1 && 
Àngth
==1) {

713 
shi·Byã
=(
uöt8_t
)
UCNV_SI
;

714 
˙v
->
‰omUnicodeSètus
=1;

715 } if(
¥evLígth
==1 && 
Àngth
>1) {

717 
shi·Byã
=(
uöt8_t
)
UCNV_SO
;

718 
˙v
->
‰omUnicodeSètus
=2;

720 
shi·Byã
=0;

723 if(
shi·Byã
!=0) {

725 
buf„r
[0]=
shi·Byã
;

726 if(
ªsu…
!=
buf„r
+1) {

727 
	`u¥v_mem˝y
(
buf„r
+1, 
ªsu…
, 
Àngth
);

729 
ªsu…
=
buf„r
;

730 ++
Àngth
;

734 
	`u˙v_‰omUWrôeByãs
(
˙v
, (c⁄° *)
ªsu…
, 
Àngth
,

735 
èrgë
, 
èrgëLimô
,

736 
off£ts
, 
§cIndex
,

737 
pEº‹Code
);

738 
	}
}

743 
U_CFUNC
 
UBoﬁ


744 
	$u˙v_extInôülM©chFromU
(
UC⁄vîãr
 *
˙v
, c⁄° 
öt32_t
 *
cx
,

745 
UCh¨32
 
˝
,

746 c⁄° 
UCh¨
 **
§c
, c⁄° UCh¨ *
§cLimô
,

747 **
èrgë
, c⁄° *
èrgëLimô
,

748 
öt32_t
 **
off£ts
, i¡32_à
§cIndex
,

749 
UBoﬁ
 
Êush
,

750 
UEº‹Code
 *
pEº‹Code
) {

751 
uöt32_t
 
vÆue
 = 0;

752 
öt32_t
 
m©ch
;

755 
m©ch
=
	`u˙v_extM©chFromU
(
cx
, 
˝
,

756 
NULL
, 0,

757 *
§c
, (
öt32_t
)(
§cLimô
-*src),

758 &
vÆue
,

759 
˙v
->
u£FÆlback
, 
Êush
);

762 if–
m©ch
>=2 &&

763 !(
	`UCNV_EXT_FROM_U_GET_LENGTH
(
vÆue
)==1 &&

764 
˙v
->
sh¨edD©a
->
mbcs
.
ouçutTy≥
==
MBCS_OUTPUT_DBCS_ONLY
)

767 *
§c
+=
m©ch
-2;

770 
	`u˙v_extWrôeFromU
(
˙v
, 
cx
,

771 
vÆue
,

772 
èrgë
, 
èrgëLimô
,

773 
off£ts
, 
§cIndex
,

774 
pEº‹Code
);

775  
TRUE
;

776 } if(
m©ch
<0) {

778 c⁄° 
UCh¨
 *
s
;

779 
öt32_t
 
j
;

782 
˙v
->
¥eFromUFú°CP
=
˝
;

785 
s
=*
§c
;

786 
m©ch
=-match-2;

787 
j
=0; j<
m©ch
; ++j) {

788 
˙v
->
¥eFromU
[
j
]=*
s
++;

790 *
§c
=
s
;

791 
˙v
->
¥eFromULígth
=(
öt8_t
)
m©ch
;

792  
TRUE
;

793 } if(
m©ch
==1) {

795 
˙v
->
u£SubCh¨1
=
TRUE
;

796  
FALSE
;

798  
FALSE
;

800 
	}
}

806 
U_CFUNC
 
öt32_t


807 
	$u˙v_extSim∂eM©chFromU
(c⁄° 
öt32_t
 *
cx
,

808 
UCh¨32
 
˝
, 
uöt32_t
 *
pVÆue
,

809 
UBoﬁ
 
u£FÆlback
) {

810 
uöt32_t
 
vÆue
;

811 
öt32_t
 
m©ch
;

814 
m©ch
=
	`u˙v_extM©chFromU
(
cx
,

815 
˝
,

816 
NULL
, 0,

817 
NULL
, 0,

818 &
vÆue
,

819 
u£FÆlback
, 
TRUE
);

820 if(
m©ch
>=2) {

822 
öt32_t
 
Àngth
;

823 
isRoundåù
;

825 
isRoundåù
=
	`UCNV_EXT_FROM_U_IS_ROUNDTRIP
(
vÆue
);

826 
Àngth
=
	`UCNV_EXT_FROM_U_GET_LENGTH
(
vÆue
);

827 
vÆue
=(
uöt32_t
)
	`UCNV_EXT_FROM_U_GET_DATA
(value);

829 if(
Àngth
<=
UCNV_EXT_FROM_U_MAX_DIRECT_LENGTH
) {

830 *
pVÆue
=
vÆue
;

831  
isRoundåù
 ? 
Àngth
 : -length;

833 } if(
Àngth
==4) {

835 c⁄° 
uöt8_t
 *
ªsu…
=
	`UCNV_EXT_ARRAY
(
cx
, 
UCNV_EXT_FROM_U_BYTES_INDEX
, uöt8_t)+
vÆue
;

836 *
pVÆue
=

837 ((
uöt32_t
)
ªsu…
[0]<<24)|

838 ((
uöt32_t
)
ªsu…
[1]<<16)|

839 ((
uöt32_t
)
ªsu…
[2]<<8)|

840 
ªsu…
[3];

841  
isRoundåù
 ? 4 : -4;

854 
	}
}

860 
U_CFUNC
 

861 
	$u˙v_extC⁄töueM©chFromU
(
UC⁄vîãr
 *
˙v
,

862 
UC⁄vîãrFromUnicodeArgs
 *
pArgs
, 
öt32_t
 
§cIndex
,

863 
UEº‹Code
 *
pEº‹Code
) {

864 
uöt32_t
 
vÆue
 = 0;

865 
öt32_t
 
m©ch
;

867 
m©ch
=
	`u˙v_extM©chFromU
(
˙v
->
sh¨edD©a
->
mbcs
.
extIndexes
,

868 
˙v
->
¥eFromUFú°CP
,

869 
˙v
->
¥eFromU
, cnv->
¥eFromULígth
,

870 
pArgs
->
sour˚
, (
öt32_t
)’Args->
sour˚Limô
-pArgs->source),

871 &
vÆue
,

872 
˙v
->
u£FÆlback
, 
pArgs
->
Êush
);

873 if(
m©ch
>=2) {

874 
m©ch
-=2;

876 if(
m©ch
>=
˙v
->
¥eFromULígth
) {

878 
pArgs
->
sour˚
+=
m©ch
-
˙v
->
¥eFromULígth
;

879 
˙v
->
¥eFromULígth
=0;

882 
öt32_t
 
Àngth
=
˙v
->
¥eFromULígth
-
m©ch
;

883 
	`u¥v_memmove
(
˙v
->
¥eFromU
, cnv->¥eFromU+
m©ch
, 
Àngth
*
U_SIZEOF_UCHAR
);

884 
˙v
->
¥eFromULígth
=(
öt8_t
)-
Àngth
;

888 
˙v
->
¥eFromUFú°CP
=
U_SENTINEL
;

891 
	`u˙v_extWrôeFromU
(
˙v
, cnv->
sh¨edD©a
->
mbcs
.
extIndexes
,

892 
vÆue
,

893 &
pArgs
->
èrgë
,ÖArgs->
èrgëLimô
,

894 &
pArgs
->
off£ts
, 
§cIndex
,

895 
pEº‹Code
);

896 } if(
m©ch
<0) {

898 c⁄° 
UCh¨
 *
s
;

899 
öt32_t
 
j
;

902 
s
=
pArgs
->
sour˚
;

903 
m©ch
=-match-2;

904 
j
=
˙v
->
¥eFromULígth
; j<
m©ch
; ++j) {

905 
˙v
->
¥eFromU
[
j
]=*
s
++;

907 
pArgs
->
sour˚
=
s
;

908 
˙v
->
¥eFromULígth
=(
öt8_t
)
m©ch
;

928 if(
m©ch
==1) {

930 
˙v
->
u£SubCh¨1
=
TRUE
;

934 
˙v
->
‰omUCh¨32
=˙v->
¥eFromUFú°CP
;

935 
˙v
->
¥eFromUFú°CP
=
U_SENTINEL
;

938 
˙v
->
¥eFromULígth
=-cnv->preFromULength;

941 *
pEº‹Code
=
U_INVALID_CHAR_FOUND
;

943 
	}
}

946 
	$u˙v_extGëUnicodeSëSåög
(c⁄° 
UC⁄vîãrSh¨edD©a
 *
sh¨edD©a
,

947 c⁄° 
öt32_t
 *
cx
,

948 c⁄° 
USëAddî
 *
ß
,

949 
UBoﬁ
 
u£FÆlback
,

950 
öt32_t
 
möLígth
,

951 
UCh¨32
 
c
,

952 
UCh¨
 
s
[
UCNV_EXT_MAX_UCHARS
], 
öt32_t
 
Àngth
,

953 
öt32_t
 
£˘i⁄Index
,

954 
UEº‹Code
 *
pEº‹Code
) {

955 c⁄° 
UCh¨
 *
‰omUSe˘i⁄UCh¨s
;

956 c⁄° 
uöt32_t
 *
‰omUSe˘i⁄VÆues
;

958 
uöt32_t
 
vÆue
;

959 
öt32_t
 
i
, 
cou¡
;

961 
‰omUSe˘i⁄UCh¨s
=
	`UCNV_EXT_ARRAY
(
cx
, 
UCNV_EXT_FROM_U_UCHARS_INDEX
, 
UCh¨
)+
£˘i⁄Index
;

962 
‰omUSe˘i⁄VÆues
=
	`UCNV_EXT_ARRAY
(
cx
, 
UCNV_EXT_FROM_U_VALUES_INDEX
, 
uöt32_t
)+
£˘i⁄Index
;

965 
cou¡
=*
‰omUSe˘i⁄UCh¨s
++;

966 
vÆue
=*
‰omUSe˘i⁄VÆues
++;

968 if–
vÆue
!=0 &&

969 (
	`UCNV_EXT_FROM_U_IS_ROUNDTRIP
(
vÆue
Ë|| 
u£FÆlback
) &&

970 
	`UCNV_EXT_FROM_U_GET_LENGTH
(
vÆue
)>=
möLígth


972 if(
c
>=0) {

974 
ß
->
	`add
(ß->
£t
, 
c
);

977 
ß
->
	`addSåög
(ß->
£t
, 
s
, 
Àngth
);

981 
i
=0; i<
cou¡
; ++i) {

983 
s
[
Àngth
]=
‰omUSe˘i⁄UCh¨s
[
i
];

984 
vÆue
=
‰omUSe˘i⁄VÆues
[
i
];

986 if(
vÆue
==0) {

988 } if(
	`UCNV_EXT_FROM_U_IS_PARTIAL
(
vÆue
)) {

989 
	`u˙v_extGëUnicodeSëSåög
(

990 
sh¨edD©a
, 
cx
, 
ß
, 
u£FÆlback
, 
möLígth
,

991 
U_SENTINEL
, 
s
, 
Àngth
+1,

992 (
öt32_t
)
	`UCNV_EXT_FROM_U_GET_PARTIAL_INDEX
(
vÆue
),

993 
pEº‹Code
);

994 } if((
u£FÆlback
 ?

995 (
vÆue
&
UCNV_EXT_FROM_U_RESERVED_MASK
)==0 :

996 ((
vÆue
&(
UCNV_EXT_FROM_U_ROUNDTRIP_FLAG
|
UCNV_EXT_FROM_U_RESERVED_MASK
))==

997 
UCNV_EXT_FROM_U_ROUNDTRIP_FLAG
)) &&

998 
	`UCNV_EXT_FROM_U_GET_LENGTH
(
vÆue
)>=
möLígth


1000 
ß
->
	`addSåög
(ß->
£t
, 
s
, 
Àngth
+1);

1003 
	}
}

1005 
U_CFUNC
 

1006 
	$u˙v_extGëUnicodeSë
(c⁄° 
UC⁄vîãrSh¨edD©a
 *
sh¨edD©a
,

1007 c⁄° 
USëAddî
 *
ß
,

1008 
UC⁄vîãrUnicodeSë
 
which
,

1009 
UC⁄vîãrSëFûãr
 
fûãr
,

1010 
UEº‹Code
 *
pEº‹Code
) {

1011 c⁄° 
öt32_t
 *
cx
;

1012 c⁄° 
uöt16_t
 *
°age12
, *
°age3
, *
ps2
, *
ps3
;

1013 c⁄° 
uöt32_t
 *
°age3b
;

1015 
uöt32_t
 
vÆue
;

1016 
öt32_t
 
°1
, 
°age1Lígth
, 
°2
, 
°3
, 
möLígth
;

1017 
UBoﬁ
 
u£FÆlback
;

1019 
UCh¨
 
s
[
UCNV_EXT_MAX_UCHARS
];

1020 
UCh¨32
 
c
;

1021 
öt32_t
 
Àngth
;

1023 
cx
=
sh¨edD©a
->
mbcs
.
extIndexes
;

1024 if(
cx
==
NULL
) {

1028 
°age12
=
	`UCNV_EXT_ARRAY
(
cx
, 
UCNV_EXT_FROM_U_STAGE_12_INDEX
, 
uöt16_t
);

1029 
°age3
=
	`UCNV_EXT_ARRAY
(
cx
, 
UCNV_EXT_FROM_U_STAGE_3_INDEX
, 
uöt16_t
);

1030 
°age3b
=
	`UCNV_EXT_ARRAY
(
cx
, 
UCNV_EXT_FROM_U_STAGE_3B_INDEX
, 
uöt32_t
);

1032 
°age1Lígth
=
cx
[
UCNV_EXT_FROM_U_STAGE_1_LENGTH
];

1034 
u£FÆlback
=(
UBoﬁ
)(
which
==
UCNV_ROUNDTRIP_AND_FALLBACK_SET
);

1037 
c
=0;

1039 if(
fûãr
==
UCNV_SET_FILTER_2022_CN
) {

1040 
möLígth
=3;

1041 } if–
sh¨edD©a
->
mbcs
.
ouçutTy≥
==
MBCS_OUTPUT_DBCS_ONLY
 ||

1042 
fûãr
!=
UCNV_SET_FILTER_NONE


1045 
möLígth
=2;

1047 
möLígth
=1;

1054 
°1
=0; st1<
°age1Lígth
; ++st1) {

1055 
°2
=
°age12
[
°1
];

1056 if(
°2
>
°age1Lígth
) {

1057 
ps2
=
°age12
+
°2
;

1058 
°2
=0; st2<64; ++st2) {

1059 if((
°3
=(
öt32_t
)
ps2
[
°2
]<<
UCNV_EXT_STAGE_2_LEFT_SHIFT
)!=0) {

1061 
ps3
=
°age3
+
°3
;

1070 
vÆue
=
°age3b
[*
ps3
++];

1071 if(
vÆue
==0) {

1073 } if(
	`UCNV_EXT_FROM_U_IS_PARTIAL
(
vÆue
)) {

1074 
Àngth
=0;

1075 
	`U16_APPEND_UNSAFE
(
s
, 
Àngth
, 
c
);

1076 
	`u˙v_extGëUnicodeSëSåög
(

1077 
sh¨edD©a
, 
cx
, 
ß
, 
u£FÆlback
, 
möLígth
,

1078 
c
, 
s
, 
Àngth
,

1079 (
öt32_t
)
	`UCNV_EXT_FROM_U_GET_PARTIAL_INDEX
(
vÆue
),

1080 
pEº‹Code
);

1081 } if((
u£FÆlback
 ?

1082 (
vÆue
&
UCNV_EXT_FROM_U_RESERVED_MASK
)==0 :

1083 ((
vÆue
&(
UCNV_EXT_FROM_U_ROUNDTRIP_FLAG
|
UCNV_EXT_FROM_U_RESERVED_MASK
))==

1084 
UCNV_EXT_FROM_U_ROUNDTRIP_FLAG
)) &&

1085 
	`UCNV_EXT_FROM_U_GET_LENGTH
(
vÆue
)>=
möLígth


1087 
fûãr
) {

1088 
UCNV_SET_FILTER_2022_CN
:

1089 if(!(
	`UCNV_EXT_FROM_U_GET_LENGTH
(
vÆue
)==3 && 
	`UCNV_EXT_FROM_U_GET_DATA
(value)<=0x82ffff)) {

1093 
UCNV_SET_FILTER_SJIS
:

1094 if(!(
	`UCNV_EXT_FROM_U_GET_LENGTH
(
vÆue
)==2 && (vÆue=
	`UCNV_EXT_FROM_U_GET_DATA
(value))>=0x8140 && value<=0xeffc)) {

1098 
UCNV_SET_FILTER_GR94DBCS
:

1099 if(!(
	`UCNV_EXT_FROM_U_GET_LENGTH
(
vÆue
)==2 &&

1100 (
uöt16_t
)((
vÆue
=
	`UCNV_EXT_FROM_U_GET_DATA
(value))-0xa1a1)<=(0xfefe - 0xa1a1) &&

1101 (
uöt8_t
)(
vÆue
-0xa1)<=(0xfe - 0xa1))) {

1105 
UCNV_SET_FILTER_HZ
:

1106 if(!(
	`UCNV_EXT_FROM_U_GET_LENGTH
(
vÆue
)==2 &&

1107 (
uöt16_t
)((
vÆue
=
	`UCNV_EXT_FROM_U_GET_DATA
(value))-0xa1a1)<=(0xfdfe - 0xa1a1) &&

1108 (
uöt8_t
)(
vÆue
-0xa1)<=(0xfe - 0xa1))) {

1119 
ß
->
	`add
(ß->
£t
, 
c
);

1121 } (++
c
&0xf)!=0);

1123 
c
+=16;

1127 
c
+=1024;

1130 
	}
}

	@ucnv_ext.h

19 #i‚de‡
__UCNV_EXT_H__


20 
	#__UCNV_EXT_H__


	)

22 
	~"unicode/uty≥s.h
"

24 #i‡!
UCONFIG_NO_CONVERSION


26 
	~"unicode/u˙v.h
"

27 
	~"u˙v_˙v.h
"

306 
	mUCNV_EXT_INDEXES_LENGTH
,

308 
	mUCNV_EXT_TO_U_INDEX
,

309 
	mUCNV_EXT_TO_U_LENGTH
,

310 
	mUCNV_EXT_TO_U_UCHARS_INDEX
,

311 
	mUCNV_EXT_TO_U_UCHARS_LENGTH
,

313 
	mUCNV_EXT_FROM_U_UCHARS_INDEX
,

314 
	mUCNV_EXT_FROM_U_VALUES_INDEX
,

315 
	mUCNV_EXT_FROM_U_LENGTH
,

316 
	mUCNV_EXT_FROM_U_BYTES_INDEX
,

317 
	mUCNV_EXT_FROM_U_BYTES_LENGTH
,

319 
	mUCNV_EXT_FROM_U_STAGE_12_INDEX
,

320 
	mUCNV_EXT_FROM_U_STAGE_1_LENGTH
,

321 
	mUCNV_EXT_FROM_U_STAGE_12_LENGTH
,

322 
	mUCNV_EXT_FROM_U_STAGE_3_INDEX
,

323 
	mUCNV_EXT_FROM_U_STAGE_3_LENGTH
,

324 
	mUCNV_EXT_FROM_U_STAGE_3B_INDEX
,

325 
	mUCNV_EXT_FROM_U_STAGE_3B_LENGTH
,

327 
	mUCNV_EXT_COUNT_BYTES
,

328 
	mUCNV_EXT_COUNT_UCHARS
,

329 
	mUCNV_EXT_FLAGS
,

331 
	mUCNV_EXT_RESERVED_INDEX
,

333 
	mUCNV_EXT_SIZE
=31,

334 
	mUCNV_EXT_INDEXES_MIN_LENGTH
=32

338 
	#UCNV_EXT_ARRAY
(
ödexes
, 
ödex
, 
ôemTy≥
) \

339 ((c⁄° 
ôemTy≥
 *)((c⁄° *)(
ödexes
)+(ödexes)[
ödex
]))

	)

341 
	#UCNV_GET_MAX_BYTES_PER_UCHAR
(
ödexes
) \

342 ((
ödexes
)[
UCNV_EXT_COUNT_BYTES
]&0xff)

	)

346 
U_CFUNC
 
UBoﬁ


347 
u˙v_extInôülM©chToU
(
UC⁄vîãr
 *
˙v
, c⁄° 
öt32_t
 *
cx
,

348 
öt32_t
 
fú°Lígth
,

349 c⁄° **
§c
, c⁄° *
§cLimô
,

350 
UCh¨
 **
èrgë
, c⁄° UCh¨ *
èrgëLimô
,

351 
öt32_t
 **
off£ts
, i¡32_à
§cIndex
,

352 
UBoﬁ
 
Êush
,

353 
UEº‹Code
 *
pEº‹Code
);

355 
U_CFUNC
 
UCh¨32


356 
u˙v_extSim∂eM©chToU
(c⁄° 
öt32_t
 *
cx
,

357 c⁄° *
sour˚
, 
öt32_t
 
Àngth
,

358 
UBoﬁ
 
u£FÆlback
);

360 
U_CFUNC
 

361 
u˙v_extC⁄töueM©chToU
(
UC⁄vîãr
 *
˙v
,

362 
UC⁄vîãrToUnicodeArgs
 *
pArgs
, 
öt32_t
 
§cIndex
,

363 
UEº‹Code
 *
pEº‹Code
);

366 
U_CFUNC
 
UBoﬁ


367 
u˙v_extInôülM©chFromU
(
UC⁄vîãr
 *
˙v
, c⁄° 
öt32_t
 *
cx
,

368 
UCh¨32
 
˝
,

369 c⁄° 
UCh¨
 **
§c
, c⁄° UCh¨ *
§cLimô
,

370 **
èrgë
, c⁄° *
èrgëLimô
,

371 
öt32_t
 **
off£ts
, i¡32_à
§cIndex
,

372 
UBoﬁ
 
Êush
,

373 
UEº‹Code
 *
pEº‹Code
);

375 
U_CFUNC
 
öt32_t


376 
u˙v_extSim∂eM©chFromU
(c⁄° 
öt32_t
 *
cx
,

377 
UCh¨32
 
˝
, 
uöt32_t
 *
pVÆue
,

378 
UBoﬁ
 
u£FÆlback
);

380 
U_CFUNC
 

381 
u˙v_extC⁄töueM©chFromU
(
UC⁄vîãr
 *
˙v
,

382 
UC⁄vîãrFromUnicodeArgs
 *
pArgs
, 
öt32_t
 
§cIndex
,

383 
UEº‹Code
 *
pEº‹Code
);

394 
U_CFUNC
 

395 
u˙v_extGëUnicodeSë
(c⁄° 
UC⁄vîãrSh¨edD©a
 *
sh¨edD©a
,

396 c⁄° 
USëAddî
 *
ß
,

397 
UC⁄vîãrUnicodeSë
 
which
,

398 
UC⁄vîãrSëFûãr
 
fûãr
,

399 
UEº‹Code
 *
pEº‹Code
);

403 
	#UCNV_EXT_TO_U_BYTE_SHIFT
 24

	)

404 
	#UCNV_EXT_TO_U_VALUE_MASK
 0xffffff

	)

405 
	#UCNV_EXT_TO_U_MIN_CODE_POINT
 0x1f0000

	)

406 
	#UCNV_EXT_TO_U_MAX_CODE_POINT
 0x2fffff

	)

407 
	#UCNV_EXT_TO_U_ROUNDTRIP_FLAG
 ((
uöt32_t
)1<<23)

	)

408 
	#UCNV_EXT_TO_U_INDEX_MASK
 0x3ffff

	)

409 
	#UCNV_EXT_TO_U_LENGTH_SHIFT
 18

	)

410 
	#UCNV_EXT_TO_U_LENGTH_OFFSET
 12

	)

413 
	#UCNV_EXT_MAX_UCHARS
 19

	)

415 
	#UCNV_EXT_TO_U_MAKE_WORD
(
byã
, 
vÆue
Ë(((
uöt32_t
)(byã)<<
UCNV_EXT_TO_U_BYTE_SHIFT
)|(vÆue))

	)

417 
	#UCNV_EXT_TO_U_GET_BYTE
(
w‹d
Ë((w‹d)>>
UCNV_EXT_TO_U_BYTE_SHIFT
)

	)

418 
	#UCNV_EXT_TO_U_GET_VALUE
(
w‹d
Ë((w‹d)&
UCNV_EXT_TO_U_VALUE_MASK
)

	)

420 
	#UCNV_EXT_TO_U_IS_PARTIAL
(
vÆue
Ë((vÆue)<
UCNV_EXT_TO_U_MIN_CODE_POINT
)

	)

421 
	#UCNV_EXT_TO_U_GET_PARTIAL_INDEX
(
vÆue
Ë(vÆue)

	)

423 
	#UCNV_EXT_TO_U_IS_ROUNDTRIP
(
vÆue
Ë(((vÆue)&
UCNV_EXT_TO_U_ROUNDTRIP_FLAG
)!=0)

	)

424 
	#UCNV_EXT_TO_U_MASK_ROUNDTRIP
(
vÆue
Ë((vÆue)&~
UCNV_EXT_TO_U_ROUNDTRIP_FLAG
)

	)

427 
	#UCNV_EXT_TO_U_IS_CODE_POINT
(
vÆue
Ë((vÆue)<=
UCNV_EXT_TO_U_MAX_CODE_POINT
)

	)

428 
	#UCNV_EXT_TO_U_GET_CODE_POINT
(
vÆue
Ë((vÆue)-
UCNV_EXT_TO_U_MIN_CODE_POINT
)

	)

430 
	#UCNV_EXT_TO_U_GET_INDEX
(
vÆue
Ë((vÆue)&
UCNV_EXT_TO_U_INDEX_MASK
)

	)

431 
	#UCNV_EXT_TO_U_GET_LENGTH
(
vÆue
Ë(((vÆue)>>
UCNV_EXT_TO_U_LENGTH_SHIFT
)-
UCNV_EXT_TO_U_LENGTH_OFFSET
)

	)

438 
	#UCNV_EXT_STAGE_2_LEFT_SHIFT
 2

	)

439 
	#UCNV_EXT_STAGE_3_GRANULARITY
 4

	)

442 
	#UCNV_EXT_FROM_U
(
°age12
, 
°age3
, 
s1Index
, 
c
) \

443 (
°age3
)[ ((
öt32_t
)(
°age12
)[ (°age12)[
s1Index
] +(((
c
)>>4)&0x3fË]<<
UCNV_EXT_STAGE_2_LEFT_SHIFT
Ë+((c)&0xfË]

	)

445 
	#UCNV_EXT_FROM_U_LENGTH_SHIFT
 24

	)

446 
	#UCNV_EXT_FROM_U_ROUNDTRIP_FLAG
 ((
uöt32_t
)1<<31)

	)

447 
	#UCNV_EXT_FROM_U_RESERVED_MASK
 0x60000000

	)

448 
	#UCNV_EXT_FROM_U_DATA_MASK
 0xffffff

	)

451 
	#UCNV_EXT_FROM_U_SUBCHAR1
 0x80000001

	)

454 
	#UCNV_EXT_FROM_U_MAX_DIRECT_LENGTH
 3

	)

457 
	#UCNV_EXT_MAX_BYTES
 0x1f

	)

459 
	#UCNV_EXT_FROM_U_IS_PARTIAL
(
vÆue
Ë(((vÆue)>>
UCNV_EXT_FROM_U_LENGTH_SHIFT
)==0)

	)

460 
	#UCNV_EXT_FROM_U_GET_PARTIAL_INDEX
(
vÆue
Ë(vÆue)

	)

462 
	#UCNV_EXT_FROM_U_IS_ROUNDTRIP
(
vÆue
Ë(((vÆue)&
UCNV_EXT_FROM_U_ROUNDTRIP_FLAG
)!=0)

	)

463 
	#UCNV_EXT_FROM_U_MASK_ROUNDTRIP
(
vÆue
Ë((vÆue)&~
UCNV_EXT_FROM_U_ROUNDTRIP_FLAG
)

	)

466 
	#UCNV_EXT_FROM_U_GET_LENGTH
(
vÆue
Ë(
öt32_t
)(((vÆue)>>
UCNV_EXT_FROM_U_LENGTH_SHIFT
)&
UCNV_EXT_MAX_BYTES
)

	)

469 
	#UCNV_EXT_FROM_U_GET_DATA
(
vÆue
Ë((vÆue)&
UCNV_EXT_FROM_U_DATA_MASK
)

	)

	@ucnv_imp.h

20 #i‚de‡
UCNV_IMP_H


21 
	#UCNV_IMP_H


	)

23 
	~"unicode/uty≥s.h
"

25 #i‡!
UCONFIG_NO_CONVERSION


27 
	~"unicode/uloc.h
"

28 
	~"u˙v_bld.h
"

37 
	#UCNV_FAST_IS_UTF8
(
«me
) \

38 (((
«me
[0]=='U' ? \

39 –
«me
[1]=='T' &&Çame[2]=='F') : \

40 (
«me
[0]=='u' &&Çame[1]=='t' &&Çame[2]=='f'))) \

41 && (
«me
[3]=='-' ? \

42 (
«me
[4]=='8' &&Çame[5]==0) : \

43 (
«me
[3]=='8' &&Çame[4]==0)))

	)

46 
	m˙vName
[
UCNV_MAX_CONVERTER_NAME_LENGTH
];

47 
	mloˇÀ
[
ULOC_FULLNAME_CAPACITY
];

48 
uöt32_t
 
	m›ti⁄s
;

49 } 
	tUC⁄vîãrNamePõ˚s
;

51 
U_CFUNC
 
UBoﬁ


52 
u˙v_ˇnCª©eC⁄vîãr
(c⁄° *
c⁄vîãrName
, 
UEº‹Code
 *
îr
);

59 
UC⁄vîãr
 *
u˙v_¸óãC⁄vîãr
 (UC⁄vîã∏*
myUC⁄vîãr
, c⁄° *
c⁄vîãrName
, 
UEº‹Code
 * 
îr
);

72 
U_CFUNC
 
UC⁄vîãr
 *

73 
u˙v_¸óãAlg‹ôhmicC⁄vîãr
(
UC⁄vîãr
 *
myUC⁄vîãr
,

74 
UC⁄vîãrTy≥
 
ty≥
,

75 c⁄° *
loˇÀ
, 
uöt32_t
 
›ti⁄s
,

76 
UEº‹Code
 *
îr
);

84 
UC⁄vîãr
*

85 
u˙v_¸óãC⁄vîãrFromSh¨edD©a
(
UC⁄vîãr
 *
myUC⁄vîãr
,

86 
UC⁄vîãrSh¨edD©a
 *
mySh¨edC⁄vîãrD©a
,

87 
UC⁄vîãrLﬂdArgs
 *
pArgs
,

88 
UEº‹Code
 *
îr
);

90 
UC⁄vîãr
* 
u˙v_¸óãC⁄vîãrFromPackage
(c⁄° *
∑ckageName
, c⁄° *
c⁄vîãrName
,

91 
UEº‹Code
 *
îr
);

108 
UC⁄vîãrSh¨edD©a
 *

109 
u˙v_lﬂdSh¨edD©a
(c⁄° *
c⁄vîãrName
,

110 
UC⁄vîãrNamePõ˚s
 *
põ˚s
,

111 
UC⁄vîãrLﬂdArgs
 *
pArgs
,

112 
UEº‹Code
 * 
îr
);

119 
u˙v_u∆ﬂdSh¨edD©aIfRódy
(
UC⁄vîãrSh¨edD©a
 *
sh¨edD©a
);

125 
u˙v_ö¸emítRefCou¡
(
UC⁄vîãrSh¨edD©a
 *
sh¨edD©a
);

131 
	#UCNV_TO_U_DEFAULT_CALLBACK
 ((
UC⁄vîãrToUCÆlback
Ë
UCNV_TO_U_CALLBACK_SUBSTITUTE
)

	)

132 
	#UCNV_FROM_U_DEFAULT_CALLBACK
 ((
UC⁄vîãrFromUCÆlback
Ë
UCNV_FROM_U_CALLBACK_SUBSTITUTE
)

	)

	@ucnv_io.c

30 
	~"unicode/uty≥s.h
"

32 #i‡!
UCONFIG_NO_CONVERSION


34 
	~"unicode/u˙v.h
"

35 
	~"unicode/ud©a.h
"

37 
	~"umuãx.h
"

38 
	~"u¨rs‹t.h
"

39 
	~"ud©aswp.h
"

40 
	~"c°rög.h
"

41 
	~"cmem‹y.h
"

42 
	~"u˙v_io.h
"

43 
	~"uíumimp.h
"

44 
	~"u˛n_cmn.h
"

166 
	sUAlüsC⁄ãxt
 {

167 
uöt32_t
 
	mli°Off£t
;

168 
uöt32_t
 
	mli°Idx
;

169 } 
	tUAlüsC⁄ãxt
;

171 c⁄° 
	gDATA_NAME
[] = "cnvalias";

172 c⁄° 
	gDATA_TYPE
[] = "icu";

174 
UD©aMem‹y
 *
	ggAlüsD©a
=
NULL
;

177 
	mtocLígthIndex
=0,

178 
	mc⁄vîãrLi°Index
=1,

179 
	mègLi°Index
=2,

180 
	mÆüsLi°Index
=3,

181 
	mu¡aggedC⁄vAºayIndex
=4,

182 
	mèggedAlüsAºayIndex
=5,

183 
	mèggedAlüsLi°sIndex
=6,

184 
	mèbÀO±i⁄sIndex
=7,

185 
	m°rögTabÀIndex
=8,

186 
	mn‹mÆizedSåögTabÀIndex
=9,

187 
	moff£tsCou¡
,

188 
	mmöTocLígth
=8

191 c⁄° 
UC⁄vîãrAlüsO±i⁄s
 
	gdeÁu…TabÀO±i⁄s
 = {

192 
UCNV_IO_UNNORMALIZED
,

195 
UC⁄vîãrAlüs
 
	ggMaöTabÀ
;

197 
	#GET_STRING
(
idx
Ë(c⁄° *)(
gMaöTabÀ
.
°rögTabÀ
 + (idx))

	)

198 
	#GET_NORMALIZED_STRING
(
idx
Ë(c⁄° *)(
gMaöTabÀ
.
n‹mÆizedSåögTabÀ
 + (idx))

	)

200 
UBoﬁ
 
U_CALLCONV


201 
	$isAc˚±abÀ
(*
c⁄ãxt
,

202 c⁄° *
ty≥
, c⁄° *
«me
,

203 c⁄° 
UD©aInfo
 *
pInfo
) {

204  (
UBoﬁ
)(

205 
pInfo
->
size
>=20 &&

206 
pInfo
->
isBigEndün
==
U_IS_BIG_ENDIAN
 &&

207 
pInfo
->
ch¨£tFamûy
==
U_CHARSET_FAMILY
 &&

208 
pInfo
->
d©aF‹m©
[0]==0x43 &&

209 
pInfo
->
d©aF‹m©
[1]==0x76 &&

210 
pInfo
->
d©aF‹m©
[2]==0x41 &&

211 
pInfo
->
d©aF‹m©
[3]==0x6c &&

212 
pInfo
->
f‹m©Vîsi⁄
[0]==3);

213 
	}
}

215 
UBoﬁ
 
U_CALLCONV
 
	$u˙v_io_˛ónup
()

217 i‡(
gAlüsD©a
) {

218 
	`ud©a_˛o£
(
gAlüsD©a
);

219 
gAlüsD©a
 = 
NULL
;

222 
	`u¥v_mem£t
(&
gMaöTabÀ
, 0, (gMainTable));

224  
TRUE
;

225 
	}
}

227 
UBoﬁ


228 
	$haveAlüsD©a
(
UEº‹Code
 *
pEº‹Code
) {

229 
√edInô
;

231 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

232  
FALSE
;

235 
	`UMTX_CHECK
(
NULL
, (
gAlüsD©a
==NULL), 
√edInô
);

238 i‡(
√edInô
) {

239 
UD©aMem‹y
 *
d©a
;

240 c⁄° 
uöt16_t
 *
èbÀ
;

241 c⁄° 
uöt32_t
 *
£˘i⁄Sizes
;

242 
uöt32_t
 
èbÀSèπ
;

243 
uöt32_t
 
cuºOff£t
;

245 
d©a
 = 
	`ud©a_›íChoi˚
(
NULL
, 
DATA_TYPE
, 
DATA_NAME
, 
isAc˚±abÀ
, NULL, 
pEº‹Code
);

246 if(
	`U_FAILURE
(*
pEº‹Code
)) {

247  
FALSE
;

250 
£˘i⁄Sizes
 = (c⁄° 
uöt32_t
 *)
	`ud©a_gëMem‹y
(
d©a
);

251 
èbÀ
 = (c⁄° 
uöt16_t
 *)
£˘i⁄Sizes
;

253 
èbÀSèπ
 = 
£˘i⁄Sizes
[0];

254 i‡(
èbÀSèπ
 < 
möTocLígth
) {

255 *
pEº‹Code
 = 
U_INVALID_FORMAT_ERROR
;

256 
	`ud©a_˛o£
(
d©a
);

257  
FALSE
;

260 
	`umtx_lock
(
NULL
);

261 if(
gAlüsD©a
==
NULL
) {

262 
gMaöTabÀ
.
c⁄vîãrLi°Size
 = 
£˘i⁄Sizes
[1];

263 
gMaöTabÀ
.
ègLi°Size
 = 
£˘i⁄Sizes
[2];

264 
gMaöTabÀ
.
ÆüsLi°Size
 = 
£˘i⁄Sizes
[3];

265 
gMaöTabÀ
.
u¡aggedC⁄vAºaySize
 = 
£˘i⁄Sizes
[4];

266 
gMaöTabÀ
.
èggedAlüsAºaySize
 = 
£˘i⁄Sizes
[5];

267 
gMaöTabÀ
.
èggedAlüsLi°sSize
 = 
£˘i⁄Sizes
[6];

268 
gMaöTabÀ
.
›ti⁄TabÀSize
 = 
£˘i⁄Sizes
[7];

269 
gMaöTabÀ
.
°rögTabÀSize
 = 
£˘i⁄Sizes
[8];

271 i‡(
èbÀSèπ
 > 8) {

272 
gMaöTabÀ
.
n‹mÆizedSåögTabÀSize
 = 
£˘i⁄Sizes
[9];

275 
cuºOff£t
 = 
èbÀSèπ
 * ((
uöt32_t
)/(
uöt16_t
)) + ((uint32_t)/(uint16_t));

276 
gMaöTabÀ
.
c⁄vîãrLi°
 = 
èbÀ
 + 
cuºOff£t
;

278 
cuºOff£t
 +
gMaöTabÀ
.
c⁄vîãrLi°Size
;

279 
gMaöTabÀ
.
ègLi°
 = 
èbÀ
 + 
cuºOff£t
;

281 
cuºOff£t
 +
gMaöTabÀ
.
ègLi°Size
;

282 
gMaöTabÀ
.
ÆüsLi°
 = 
èbÀ
 + 
cuºOff£t
;

284 
cuºOff£t
 +
gMaöTabÀ
.
ÆüsLi°Size
;

285 
gMaöTabÀ
.
u¡aggedC⁄vAºay
 = 
èbÀ
 + 
cuºOff£t
;

287 
cuºOff£t
 +
gMaöTabÀ
.
u¡aggedC⁄vAºaySize
;

288 
gMaöTabÀ
.
èggedAlüsAºay
 = 
èbÀ
 + 
cuºOff£t
;

291 
cuºOff£t
 +
gMaöTabÀ
.
èggedAlüsAºaySize
;

292 
gMaöTabÀ
.
èggedAlüsLi°s
 = 
èbÀ
 + 
cuºOff£t
;

294 
cuºOff£t
 +
gMaöTabÀ
.
èggedAlüsLi°sSize
;

295 i‡(
gMaöTabÀ
.
›ti⁄TabÀSize
 > 0

296 && ((c⁄° 
UC⁄vîãrAlüsO±i⁄s
 *)(
èbÀ
 + 
cuºOff£t
))->
°rögN‹mÆiz©i⁄Ty≥
 < 
UCNV_IO_NORM_TYPE_COUNT
)

299 
gMaöTabÀ
.
›ti⁄TabÀ
 = (c⁄° 
UC⁄vîãrAlüsO±i⁄s
 *)(
èbÀ
 + 
cuºOff£t
);

304 
gMaöTabÀ
.
›ti⁄TabÀ
 = &
deÁu…TabÀO±i⁄s
;

307 
cuºOff£t
 +
gMaöTabÀ
.
›ti⁄TabÀSize
;

308 
gMaöTabÀ
.
°rögTabÀ
 = 
èbÀ
 + 
cuºOff£t
;

310 
cuºOff£t
 +
gMaöTabÀ
.
°rögTabÀSize
;

311 
gMaöTabÀ
.
n‹mÆizedSåögTabÀ
 = ((gMaöTabÀ.
›ti⁄TabÀ
->
°rögN‹mÆiz©i⁄Ty≥
 =
UCNV_IO_UNNORMALIZED
)

312 ? 
gMaöTabÀ
.
°rögTabÀ
 : (
èbÀ
 + 
cuºOff£t
));

314 
	`u˛n_comm⁄_ªgi°îCÀ™up
(
UCLN_COMMON_UCNV_IO
, 
u˙v_io_˛ónup
);

316 
gAlüsD©a
 = 
d©a
;

317 
d©a
=
NULL
;

319 
	`umtx_u∆ock
(
NULL
);

322 if(
d©a
!=
NULL
) {

323 
	`ud©a_˛o£
(
d©a
);

327  
TRUE
;

328 
	}
}

330 
U_INLINE
 
UBoﬁ


331 
	$isAlüs
(c⁄° *
Æüs
, 
UEº‹Code
 *
pEº‹Code
) {

332 if(
Æüs
==
NULL
) {

333 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

334  
FALSE
;

336  (
UBoﬁ
)(*
Æüs
!=0);

337 
	}
}

339 
uöt32_t
 
	$gëTagNumbî
(c⁄° *
èg«me
) {

340 i‡(
gMaöTabÀ
.
ègLi°
) {

341 
uöt32_t
 
ègNum
;

342 
ègNum
 = 0;ÅagNum < 
gMaöTabÀ
.
ègLi°Size
;ÅagNum++) {

343 i‡(!
	`u¥v_°ricmp
(
	`GET_STRING
(
gMaöTabÀ
.
ègLi°
[
ègNum
]), 
èg«me
)) {

344  
ègNum
;

349  
UINT32_MAX
;

350 
	}
}

354 
	mIGNORE
,

355 
	mZERO
,

356 
	mNONZERO
,

357 
	mMINLETTER


361 c⁄° 
uöt8_t
 
	gasciiTy≥s
[128] = {

365 
ZERO
, 
NONZERO
, NONZERO, NONZERO, NONZERO, NONZERO, NONZERO, NONZERO, NONZERO, NONZERO, 0, 0, 0, 0, 0, 0,

372 
	#GET_ASCII_TYPE
(
c
Ë((
öt8_t
)(cË>0 ? 
asciiTy≥s
[(
uöt8_t
)c] : (uöt8_t)
IGNORE
)

	)

375 c⁄° 
uöt8_t
 
	gebcdicTy≥s
[128] = {

383 
ZERO
, 
NONZERO
, NONZERO, NONZERO, NONZERO, NONZERO, NONZERO, NONZERO, NONZERO, NONZERO, 0, 0, 0, 0, 0, 0

386 
	#GET_EBCDIC_TYPE
(
c
Ë((
öt8_t
)(cË< 0 ? 
ebcdicTy≥s
[(c)&0x7f] : (
uöt8_t
)
IGNORE
)

	)

388 #i‡
U_CHARSET_FAMILY
==
U_ASCII_FAMILY


389 
	#GET_CHAR_TYPE
(
c
Ë
	`GET_ASCII_TYPE
(c)

	)

390 #ñi‡
U_CHARSET_FAMILY
==
U_EBCDIC_FAMILY


391 
	#GET_CHAR_TYPE
(
c
Ë
	`GET_EBCDIC_TYPE
(c)

	)

393 #îr‹ 
U_CHARSET_FAMILY
 
is
 
nŸ
 
vÆid


397 
U_CFUNC
 * 
U_EXPORT2


398 
	$u˙v_io_°rùASCIIF‹Com∑ª
(*
d°
, c⁄° *
«me
) {

399 *
d°Iå
 = 
d°
;

400 
uöt8_t
 
ty≥
, 
√xtTy≥
;

401 
c1
;

402 
UBoﬁ
 
a·îDigô
 = 
FALSE
;

404 (
c1
 = *
«me
++) != 0) {

405 
ty≥
 = 
	`GET_ASCII_TYPE
(
c1
);

406 
ty≥
) {

407 
IGNORE
:

408 
a·îDigô
 = 
FALSE
;

410 
ZERO
:

411 i‡(!
a·îDigô
) {

412 
√xtTy≥
 = 
	`GET_ASCII_TYPE
(*
«me
);

413 i‡(
√xtTy≥
 =
ZERO
 ||ÇextTy≥ =
NONZERO
) {

418 
NONZERO
:

419 
a·îDigô
 = 
TRUE
;

422 
c1
 = ()
ty≥
;

423 
a·îDigô
 = 
FALSE
;

426 *
d°Iå
++ = 
c1
;

428 *
d°Iå
 = 0;

429  
d°
;

430 
	}
}

432 
U_CFUNC
 * 
U_EXPORT2


433 
	$u˙v_io_°rùEBCDICF‹Com∑ª
(*
d°
, c⁄° *
«me
) {

434 *
d°Iå
 = 
d°
;

435 
uöt8_t
 
ty≥
, 
√xtTy≥
;

436 
c1
;

437 
UBoﬁ
 
a·îDigô
 = 
FALSE
;

439 (
c1
 = *
«me
++) != 0) {

440 
ty≥
 = 
	`GET_EBCDIC_TYPE
(
c1
);

441 
ty≥
) {

442 
IGNORE
:

443 
a·îDigô
 = 
FALSE
;

445 
ZERO
:

446 i‡(!
a·îDigô
) {

447 
√xtTy≥
 = 
	`GET_EBCDIC_TYPE
(*
«me
);

448 i‡(
√xtTy≥
 =
ZERO
 ||ÇextTy≥ =
NONZERO
) {

453 
NONZERO
:

454 
a·îDigô
 = 
TRUE
;

457 
c1
 = ()
ty≥
;

458 
a·îDigô
 = 
FALSE
;

461 *
d°Iå
++ = 
c1
;

463 *
d°Iå
 = 0;

464  
d°
;

465 
	}
}

488 
U_CAPI
 
U_EXPORT2


489 
	$u˙v_com∑ªNames
(c⁄° *
«me1
, c⁄° *
«me2
) {

490 
rc
;

491 
uöt8_t
 
ty≥
, 
√xtTy≥
;

492 
c1
, 
c2
;

493 
UBoﬁ
 
a·îDigô1
 = 
FALSE
, 
a·îDigô2
 = FALSE;

496 (
c1
 = *
«me1
++) != 0) {

497 
ty≥
 = 
	`GET_CHAR_TYPE
(
c1
);

498 
ty≥
) {

499 
IGNORE
:

500 
a·îDigô1
 = 
FALSE
;

502 
ZERO
:

503 i‡(!
a·îDigô1
) {

504 
√xtTy≥
 = 
	`GET_CHAR_TYPE
(*
«me1
);

505 i‡(
√xtTy≥
 =
ZERO
 ||ÇextTy≥ =
NONZERO
) {

510 
NONZERO
:

511 
a·îDigô1
 = 
TRUE
;

514 
c1
 = ()
ty≥
;

515 
a·îDigô1
 = 
FALSE
;

520 (
c2
 = *
«me2
++) != 0) {

521 
ty≥
 = 
	`GET_CHAR_TYPE
(
c2
);

522 
ty≥
) {

523 
IGNORE
:

524 
a·îDigô2
 = 
FALSE
;

526 
ZERO
:

527 i‡(!
a·îDigô2
) {

528 
√xtTy≥
 = 
	`GET_CHAR_TYPE
(*
«me2
);

529 i‡(
√xtTy≥
 =
ZERO
 ||ÇextTy≥ =
NONZERO
) {

534 
NONZERO
:

535 
a·îDigô2
 = 
TRUE
;

538 
c2
 = ()
ty≥
;

539 
a·îDigô2
 = 
FALSE
;

546 i‡((
c1
|
c2
)==0) {

551 
rc
 = ()()
c1
 - ()()
c2
;

552 i‡(
rc
 != 0) {

553  
rc
;

556 
	}
}

562 
U_INLINE
 
uöt32_t


563 
	$födC⁄vîãr
(c⁄° *
Æüs
, 
UBoﬁ
 *
c⁄èösO±i⁄
, 
UEº‹Code
 *
pEº‹Code
) {

564 
uöt32_t
 
mid
, 
°¨t
, 
limô
;

565 
uöt32_t
 
œ°Mid
;

566 
ªsu…
;

567 
isU¬‹mÆized
 = (
gMaöTabÀ
.
›ti⁄TabÀ
->
°rögN‹mÆiz©i⁄Ty≥
 =
UCNV_IO_UNNORMALIZED
);

568 
°rù≥dName
[
UCNV_MAX_CONVERTER_NAME_LENGTH
];

570 i‡(!
isU¬‹mÆized
) {

571 i‡(
	`u¥v_°æí
(
Æüs
Ë>
UCNV_MAX_CONVERTER_NAME_LENGTH
) {

572 *
pEº‹Code
 = 
U_BUFFER_OVERFLOW_ERROR
;

573  
UINT32_MAX
;

577 
	`u˙v_io_°rùF‹Com∑ª
(
°rù≥dName
, 
Æüs
);

578 
Æüs
 = 
°rù≥dName
;

582 
°¨t
 = 0;

583 
limô
 = 
gMaöTabÀ
.
u¡aggedC⁄vAºaySize
;

584 
mid
 = 
limô
;

585 
œ°Mid
 = 
UINT32_MAX
;

588 
mid
 = (
uöt32_t
)((
°¨t
 + 
limô
) / 2);

589 i‡(
œ°Mid
 =
mid
) {

592 
œ°Mid
 = 
mid
;

593 i‡(
isU¬‹mÆized
) {

594 
ªsu…
 = 
	`u˙v_com∑ªNames
(
Æüs
, 
	`GET_STRING
(
gMaöTabÀ
.
ÆüsLi°
[
mid
]));

597 
ªsu…
 = 
	`u¥v_°rcmp
(
Æüs
, 
	`GET_NORMALIZED_STRING
(
gMaöTabÀ
.
ÆüsLi°
[
mid
]));

600 i‡(
ªsu…
 < 0) {

601 
limô
 = 
mid
;

602 } i‡(
ªsu…
 > 0) {

603 
°¨t
 = 
mid
;

609 i‡(
gMaöTabÀ
.
u¡aggedC⁄vAºay
[
mid
] & 
UCNV_AMBIGUOUS_ALIAS_MAP_BIT
) {

610 *
pEº‹Code
 = 
U_AMBIGUOUS_ALIAS_WARNING
;

614 i‡(
c⁄èösO±i⁄
) {

615 
UBoﬁ
 
c⁄èösCnvO±i⁄Info
 = (UBoﬁ)
gMaöTabÀ
.
›ti⁄TabÀ
->containsCnvOptionInfo;

616 *
c⁄èösO±i⁄
 = (
UBoﬁ
)((
c⁄èösCnvO±i⁄Info


617 && ((
gMaöTabÀ
.
u¡aggedC⁄vAºay
[
mid
] & 
UCNV_CONTAINS_OPTION_BIT
) != 0))

618 || !
c⁄èösCnvO±i⁄Info
);

620  
gMaöTabÀ
.
u¡aggedC⁄vAºay
[
mid
] & 
UCNV_CONVERTER_INDEX_MASK
;

624  
UINT32_MAX
;

625 
	}
}

631 
U_INLINE
 
UBoﬁ


632 
	$isAlüsInLi°
(c⁄° *
Æüs
, 
uöt32_t
 
li°Off£t
) {

633 i‡(
li°Off£t
) {

634 
uöt32_t
 
cuºAlüs
;

635 
uöt32_t
 
li°Cou¡
 = 
gMaöTabÀ
.
èggedAlüsLi°s
[
li°Off£t
];

637 c⁄° 
uöt16_t
 *
cuºLi°
 = 
gMaöTabÀ
.
èggedAlüsLi°s
 + 
li°Off£t
 + 1;

638 
cuºAlüs
 = 0; cuºAlü†< 
li°Cou¡
; currAlias++) {

639 i‡(
cuºLi°
[
cuºAlüs
]

640 && 
	`u˙v_com∑ªNames
(
Æüs
, 
	`GET_STRING
(
cuºLi°
[
cuºAlüs
]))==0)

642  
TRUE
;

646  
FALSE
;

647 
	}
}

655 
uöt32_t


656 
	$födTaggedAlüsLi°sOff£t
(c⁄° *
Æüs
, c⁄° *
°™d¨d
, 
UEº‹Code
 *
pEº‹Code
) {

657 
uöt32_t
 
idx
;

658 
uöt32_t
 
li°Off£t
;

659 
uöt32_t
 
c⁄vNum
;

660 
UEº‹Code
 
myEº
 = 
U_ZERO_ERROR
;

661 
uöt32_t
 
ègNum
 = 
	`gëTagNumbî
(
°™d¨d
);

664 
c⁄vNum
 = 
	`födC⁄vîãr
(
Æüs
, 
NULL
, &
myEº
);

665 i‡(
myEº
 !
U_ZERO_ERROR
) {

666 *
pEº‹Code
 = 
myEº
;

669 i‡(
ègNum
 < (
gMaöTabÀ
.
ègLi°Size
 - 
UCNV_NUM_HIDDEN_TAGS
Ë&& 
c⁄vNum
 < gMaöTabÀ.
c⁄vîãrLi°Size
) {

670 
li°Off£t
 = 
gMaöTabÀ
.
èggedAlüsAºay
[
ègNum
*gMaöTabÀ.
c⁄vîãrLi°Size
 + 
c⁄vNum
];

671 i‡(
li°Off£t
 && 
gMaöTabÀ
.
èggedAlüsLi°s
[listOffset + 1]) {

672  
li°Off£t
;

674 i‡(
myEº
 =
U_AMBIGUOUS_ALIAS_WARNING
) {

680 
idx
 = 0; idx < 
gMaöTabÀ
.
èggedAlüsAºaySize
; idx++) {

681 
li°Off£t
 = 
gMaöTabÀ
.
èggedAlüsAºay
[
idx
];

682 i‡(
li°Off£t
 && 
	`isAlüsInLi°
(
Æüs
,ÜistOffset)) {

683 
uöt32_t
 
cuºTagNum
 = 
idx
/
gMaöTabÀ
.
c⁄vîãrLi°Size
;

684 
uöt32_t
 
cuºC⁄vNum
 = (
idx
 - 
cuºTagNum
*
gMaöTabÀ
.
c⁄vîãrLi°Size
);

685 
uöt32_t
 
ãmpLi°Off£t
 = 
gMaöTabÀ
.
èggedAlüsAºay
[
ègNum
*gMaöTabÀ.
c⁄vîãrLi°Size
 + 
cuºC⁄vNum
];

686 i‡(
ãmpLi°Off£t
 && 
gMaöTabÀ
.
èggedAlüsLi°s
[tempListOffset + 1]) {

687  
ãmpLi°Off£t
;

702  
UINT32_MAX
;

703 
	}
}

706 
uöt32_t


707 
	$födTaggedC⁄vîãrNum
(c⁄° *
Æüs
, c⁄° *
°™d¨d
, 
UEº‹Code
 *
pEº‹Code
) {

708 
uöt32_t
 
idx
;

709 
uöt32_t
 
li°Off£t
;

710 
uöt32_t
 
c⁄vNum
;

711 
UEº‹Code
 
myEº
 = 
U_ZERO_ERROR
;

712 
uöt32_t
 
ègNum
 = 
	`gëTagNumbî
(
°™d¨d
);

715 
c⁄vNum
 = 
	`födC⁄vîãr
(
Æüs
, 
NULL
, &
myEº
);

716 i‡(
myEº
 !
U_ZERO_ERROR
) {

717 *
pEº‹Code
 = 
myEº
;

720 i‡(
ègNum
 < (
gMaöTabÀ
.
ègLi°Size
 - 
UCNV_NUM_HIDDEN_TAGS
Ë&& 
c⁄vNum
 < gMaöTabÀ.
c⁄vîãrLi°Size
) {

721 
li°Off£t
 = 
gMaöTabÀ
.
èggedAlüsAºay
[
ègNum
*gMaöTabÀ.
c⁄vîãrLi°Size
 + 
c⁄vNum
];

722 i‡(
li°Off£t
 && 
	`isAlüsInLi°
(
Æüs
,ÜistOffset)) {

723  
c⁄vNum
;

725 i‡(
myEº
 =
U_AMBIGUOUS_ALIAS_WARNING
) {

731 
uöt32_t
 
c⁄vSèπ
 = (
ègNum
)*
gMaöTabÀ
.
c⁄vîãrLi°Size
;

732 
uöt32_t
 
c⁄vLimô
 = (
ègNum
+1)*
gMaöTabÀ
.
c⁄vîãrLi°Size
;

733 
idx
 = 
c⁄vSèπ
; idx < 
c⁄vLimô
; idx++) {

734 
li°Off£t
 = 
gMaöTabÀ
.
èggedAlüsAºay
[
idx
];

735 i‡(
li°Off£t
 && 
	`isAlüsInLi°
(
Æüs
,ÜistOffset)) {

736  
idx
-
c⁄vSèπ
;

745  
UINT32_MAX
;

746 
	}
}

750 
U_CFUNC
 const *

751 
	$u˙v_io_gëC⁄vîãrName
(c⁄° *
Æüs
, 
UBoﬁ
 *
c⁄èösO±i⁄
, 
UEº‹Code
 *
pEº‹Code
) {

752 if(
	`haveAlüsD©a
(
pEº‹Code
Ë&& 
	`isAlüs
(
Æüs
,ÖErrorCode)) {

753 
uöt32_t
 
c⁄vNum
 = 
	`födC⁄vîãr
(
Æüs
, 
c⁄èösO±i⁄
, 
pEº‹Code
);

754 i‡(
c⁄vNum
 < 
gMaöTabÀ
.
c⁄vîãrLi°Size
) {

755  
	`GET_STRING
(
gMaöTabÀ
.
c⁄vîãrLi°
[
c⁄vNum
]);

759  
NULL
;

760 
	}
}

762 
öt32_t
 
U_CALLCONV


763 
	$u˙v_io_cou¡Sènd¨dAlü£s
(
UEnumî©i⁄
 *
íumî©‹
, 
UEº‹Code
 *
pEº‹Code
) {

764 
öt32_t
 
vÆue
 = 0;

765 
UAlüsC⁄ãxt
 *
myC⁄ãxt
 = (UAlüsC⁄ãxà*)(
íumî©‹
->
c⁄ãxt
);

766 
uöt32_t
 
li°Off£t
 = 
myC⁄ãxt
->listOffset;

768 i‡(
li°Off£t
) {

769 
vÆue
 = 
gMaöTabÀ
.
èggedAlüsLi°s
[
li°Off£t
];

771  
vÆue
;

772 
	}
}

774 c⁄° * 
U_CALLCONV


775 
	$u˙v_io_√xtSènd¨dAlü£s
(
UEnumî©i⁄
 *
íumî©‹
,

776 
öt32_t
* 
ªsu…Lígth
,

777 
UEº‹Code
 *
pEº‹Code
)

779 
UAlüsC⁄ãxt
 *
myC⁄ãxt
 = (UAlüsC⁄ãxà*)(
íumî©‹
->
c⁄ãxt
);

780 
uöt32_t
 
li°Off£t
 = 
myC⁄ãxt
->listOffset;

782 i‡(
li°Off£t
) {

783 
uöt32_t
 
li°Cou¡
 = 
gMaöTabÀ
.
èggedAlüsLi°s
[
li°Off£t
];

784 c⁄° 
uöt16_t
 *
cuºLi°
 = 
gMaöTabÀ
.
èggedAlüsLi°s
 + 
li°Off£t
 + 1;

786 i‡(
myC⁄ãxt
->
li°Idx
 < 
li°Cou¡
) {

787 c⁄° *
mySå
 = 
	`GET_STRING
(
cuºLi°
[
myC⁄ãxt
->
li°Idx
++]);

788 i‡(
ªsu…Lígth
) {

789 *
ªsu…Lígth
 = (
öt32_t
)
	`u¥v_°æí
(
mySå
);

791  
mySå
;

795 i‡(
ªsu…Lígth
) {

796 *
ªsu…Lígth
 = 0;

798  
NULL
;

799 
	}
}

801 
U_CALLCONV


802 
	$u˙v_io_ª£tSènd¨dAlü£s
(
UEnumî©i⁄
 *
íumî©‹
, 
UEº‹Code
 *
pEº‹Code
) {

803 ((
UAlüsC⁄ãxt
 *)(
íumî©‹
->
c⁄ãxt
))->
li°Idx
 = 0;

804 
	}
}

806 
U_CALLCONV


807 
	$u˙v_io_˛o£UEnumî©i⁄
(
UEnumî©i⁄
 *
íumî©‹
) {

808 
	`u¥v_‰ì
(
íumî©‹
->
c⁄ãxt
);

809 
	`u¥v_‰ì
(
íumî©‹
);

810 
	}
}

813 c⁄° 
UEnumî©i⁄
 
	ggEnumAlü£s
 = {

814 
NULL
,

815 
NULL
,

816 
u˙v_io_˛o£UEnumî©i⁄
,

817 
u˙v_io_cou¡Sènd¨dAlü£s
,

818 
uíum_u√xtDeÁu…
,

819 
u˙v_io_√xtSènd¨dAlü£s
,

820 
u˙v_io_ª£tSènd¨dAlü£s


823 
U_CAPI
 
UEnumî©i⁄
 * 
U_EXPORT2


824 
	$u˙v_›íSènd¨dNames
(c⁄° *
c⁄vName
,

825 c⁄° *
°™d¨d
,

826 
UEº‹Code
 *
pEº‹Code
)

828 
UEnumî©i⁄
 *
myEnum
 = 
NULL
;

829 i‡(
	`haveAlüsD©a
(
pEº‹Code
Ë&& 
	`isAlüs
(
c⁄vName
,ÖErrorCode)) {

830 
uöt32_t
 
li°Off£t
 = 
	`födTaggedAlüsLi°sOff£t
(
c⁄vName
, 
°™d¨d
, 
pEº‹Code
);

835 i‡(
li°Off£t
 < 
gMaöTabÀ
.
èggedAlüsLi°sSize
) {

836 
UAlüsC⁄ãxt
 *
myC⁄ãxt
;

838 
myEnum
 = 
	`u¥v_mÆloc
((
UEnumî©i⁄
));

839 i‡(
myEnum
 =
NULL
) {

840 *
pEº‹Code
 = 
U_MEMORY_ALLOCATION_ERROR
;

841  
NULL
;

843 
	`u¥v_mem˝y
(
myEnum
, &
gEnumAlü£s
, (
UEnumî©i⁄
));

844 
myC⁄ãxt
 = 
	`u¥v_mÆloc
((
UAlüsC⁄ãxt
));

845 i‡(
myC⁄ãxt
 =
NULL
) {

846 *
pEº‹Code
 = 
U_MEMORY_ALLOCATION_ERROR
;

847 
	`u¥v_‰ì
(
myEnum
);

848  
NULL
;

850 
myC⁄ãxt
->
li°Off£t
 =ÜistOffset;

851 
myC⁄ãxt
->
li°Idx
 = 0;

852 
myEnum
->
c⁄ãxt
 = 
myC⁄ãxt
;

856  
myEnum
;

857 
	}
}

859 
uöt16_t


860 
	$u˙v_io_cou¡Alü£s
(c⁄° *
Æüs
, 
UEº‹Code
 *
pEº‹Code
) {

861 if(
	`haveAlüsD©a
(
pEº‹Code
Ë&& 
	`isAlüs
(
Æüs
,ÖErrorCode)) {

862 
uöt32_t
 
c⁄vNum
 = 
	`födC⁄vîãr
(
Æüs
, 
NULL
, 
pEº‹Code
);

863 i‡(
c⁄vNum
 < 
gMaöTabÀ
.
c⁄vîãrLi°Size
) {

865 
öt32_t
 
li°Off£t
 = 
gMaöTabÀ
.
èggedAlüsAºay
[(gMaöTabÀ.
ègLi°Size
 - 1)*gMaöTabÀ.
c⁄vîãrLi°Size
 + 
c⁄vNum
];

867 i‡(
li°Off£t
) {

868  
gMaöTabÀ
.
èggedAlüsLi°s
[
li°Off£t
];

875 
	}
}

877 
uöt16_t


878 
	$u˙v_io_gëAlü£s
(c⁄° *
Æüs
, 
uöt16_t
 
°¨t
, c⁄° **
Æü£s
, 
UEº‹Code
 *
pEº‹Code
) {

879 if(
	`haveAlüsD©a
(
pEº‹Code
Ë&& 
	`isAlüs
(
Æüs
,ÖErrorCode)) {

880 
uöt32_t
 
cuºAlüs
;

881 
uöt32_t
 
c⁄vNum
 = 
	`födC⁄vîãr
(
Æüs
, 
NULL
, 
pEº‹Code
);

882 i‡(
c⁄vNum
 < 
gMaöTabÀ
.
c⁄vîãrLi°Size
) {

884 
öt32_t
 
li°Off£t
 = 
gMaöTabÀ
.
èggedAlüsAºay
[(gMaöTabÀ.
ègLi°Size
 - 1)*gMaöTabÀ.
c⁄vîãrLi°Size
 + 
c⁄vNum
];

886 i‡(
li°Off£t
) {

887 
uöt32_t
 
li°Cou¡
 = 
gMaöTabÀ
.
èggedAlüsLi°s
[
li°Off£t
];

889 c⁄° 
uöt16_t
 *
cuºLi°
 = 
gMaöTabÀ
.
èggedAlüsLi°s
 + 
li°Off£t
 + 1;

891 
cuºAlüs
 = 
°¨t
; cuºAlü†< 
li°Cou¡
; currAlias++) {

892 
Æü£s
[
cuºAlüs
] = 
	`GET_STRING
(
cuºLi°
[currAlias]);

900 
	}
}

903 
	$u˙v_io_gëAlüs
(c⁄° *
Æüs
, 
uöt16_t
 
n
, 
UEº‹Code
 *
pEº‹Code
) {

904 if(
	`haveAlüsD©a
(
pEº‹Code
Ë&& 
	`isAlüs
(
Æüs
,ÖErrorCode)) {

905 
uöt32_t
 
c⁄vNum
 = 
	`födC⁄vîãr
(
Æüs
, 
NULL
, 
pEº‹Code
);

906 i‡(
c⁄vNum
 < 
gMaöTabÀ
.
c⁄vîãrLi°Size
) {

908 
öt32_t
 
li°Off£t
 = 
gMaöTabÀ
.
èggedAlüsAºay
[(gMaöTabÀ.
ègLi°Size
 - 1)*gMaöTabÀ.
c⁄vîãrLi°Size
 + 
c⁄vNum
];

910 i‡(
li°Off£t
) {

911 
uöt32_t
 
li°Cou¡
 = 
gMaöTabÀ
.
èggedAlüsLi°s
[
li°Off£t
];

913 c⁄° 
uöt16_t
 *
cuºLi°
 = 
gMaöTabÀ
.
èggedAlüsLi°s
 + 
li°Off£t
 + 1;

915 i‡(
n
 < 
li°Cou¡
) {

916  
	`GET_STRING
(
cuºLi°
[
n
]);

918 *
pEº‹Code
 = 
U_INDEX_OUTOFBOUNDS_ERROR
;

924  
NULL
;

925 
	}
}

927 
uöt16_t


928 
	$u˙v_io_cou¡Sènd¨ds
(
UEº‹Code
 *
pEº‹Code
) {

929 i‡(
	`haveAlüsD©a
(
pEº‹Code
)) {

931  (
uöt16_t
)(
gMaöTabÀ
.
ègLi°Size
 - 
UCNV_NUM_HIDDEN_TAGS
);

935 
	}
}

937 
U_CAPI
 c⁄° * 
U_EXPORT2


938 
	$u˙v_gëSènd¨d
(
uöt16_t
 
n
, 
UEº‹Code
 *
pEº‹Code
) {

939 i‡(
	`haveAlüsD©a
(
pEº‹Code
)) {

940 i‡(
n
 < 
gMaöTabÀ
.
ègLi°Size
 - 
UCNV_NUM_HIDDEN_TAGS
) {

941  
	`GET_STRING
(
gMaöTabÀ
.
ègLi°
[
n
]);

943 *
pEº‹Code
 = 
U_INDEX_OUTOFBOUNDS_ERROR
;

946  
NULL
;

947 
	}
}

949 
U_CAPI
 c⁄° * 
U_EXPORT2


950 
	$u˙v_gëSènd¨dName
(c⁄° *
Æüs
, c⁄° *
°™d¨d
, 
UEº‹Code
 *
pEº‹Code
) {

951 i‡(
	`haveAlüsD©a
(
pEº‹Code
Ë&& 
	`isAlüs
(
Æüs
,ÖErrorCode)) {

952 
uöt32_t
 
li°Off£t
 = 
	`födTaggedAlüsLi°sOff£t
(
Æüs
, 
°™d¨d
, 
pEº‹Code
);

954 i‡(0 < 
li°Off£t
 &&Üi°Off£à< 
gMaöTabÀ
.
èggedAlüsLi°sSize
) {

955 c⁄° 
uöt16_t
 *
cuºLi°
 = 
gMaöTabÀ
.
èggedAlüsLi°s
 + 
li°Off£t
 + 1;

958 i‡(
cuºLi°
[0]) {

959  
	`GET_STRING
(
cuºLi°
[0]);

966  
NULL
;

967 
	}
}

969 
U_CAPI
 
uöt16_t
 
U_EXPORT2


970 
	$u˙v_cou¡Alü£s
(c⁄° *
Æüs
, 
UEº‹Code
 *
pEº‹Code
)

972  
	`u˙v_io_cou¡Alü£s
(
Æüs
, 
pEº‹Code
);

973 
	}
}

976 
U_CAPI
 c⁄° * 
U_EXPORT2


977 
	$u˙v_gëAlüs
(c⁄° *
Æüs
, 
uöt16_t
 
n
, 
UEº‹Code
 *
pEº‹Code
)

979  
	`u˙v_io_gëAlüs
(
Æüs
, 
n
, 
pEº‹Code
);

980 
	}
}

982 
U_CAPI
 
U_EXPORT2


983 
	$u˙v_gëAlü£s
(c⁄° *
Æüs
, c⁄° **
Æü£s
, 
UEº‹Code
 *
pEº‹Code
)

985 
	`u˙v_io_gëAlü£s
(
Æüs
, 0, 
Æü£s
, 
pEº‹Code
);

986 
	}
}

988 
U_CAPI
 
uöt16_t
 
U_EXPORT2


989 
	$u˙v_cou¡Sènd¨ds
()

991 
UEº‹Code
 
îr
 = 
U_ZERO_ERROR
;

992  
	`u˙v_io_cou¡Sènd¨ds
(&
îr
);

993 
	}
}

995 
U_CAPI
 c⁄° * 
U_EXPORT2


996 
	$u˙v_gëC™⁄iˇlName
(c⁄° *
Æüs
, c⁄° *
°™d¨d
, 
UEº‹Code
 *
pEº‹Code
) {

997 i‡(
	`haveAlüsD©a
(
pEº‹Code
Ë&& 
	`isAlüs
(
Æüs
,ÖErrorCode)) {

998 
uöt32_t
 
c⁄vNum
 = 
	`födTaggedC⁄vîãrNum
(
Æüs
, 
°™d¨d
, 
pEº‹Code
);

1000 i‡(
c⁄vNum
 < 
gMaöTabÀ
.
c⁄vîãrLi°Size
) {

1001  
	`GET_STRING
(
gMaöTabÀ
.
c⁄vîãrLi°
[
c⁄vNum
]);

1005  
NULL
;

1006 
	}
}

1008 
öt32_t
 
U_CALLCONV


1009 
	$u˙v_io_cou¡AŒC⁄vîãrs
(
UEnumî©i⁄
 *
íumî©‹
, 
UEº‹Code
 *
pEº‹Code
) {

1010  
gMaöTabÀ
.
c⁄vîãrLi°Size
;

1011 
	}
}

1013 c⁄° * 
U_CALLCONV


1014 
	$u˙v_io_√xtAŒC⁄vîãrs
(
UEnumî©i⁄
 *
íumî©‹
,

1015 
öt32_t
* 
ªsu…Lígth
,

1016 
UEº‹Code
 *
pEº‹Code
)

1018 
uöt16_t
 *
myC⁄ãxt
 = (uöt16_à*)(
íumî©‹
->
c⁄ãxt
);

1020 i‡(*
myC⁄ãxt
 < 
gMaöTabÀ
.
c⁄vîãrLi°Size
) {

1021 c⁄° *
mySå
 = 
	`GET_STRING
(
gMaöTabÀ
.
c⁄vîãrLi°
[(*
myC⁄ãxt
)++]);

1022 i‡(
ªsu…Lígth
) {

1023 *
ªsu…Lígth
 = (
öt32_t
)
	`u¥v_°æí
(
mySå
);

1025  
mySå
;

1028 i‡(
ªsu…Lígth
) {

1029 *
ªsu…Lígth
 = 0;

1031  
NULL
;

1032 
	}
}

1034 
U_CALLCONV


1035 
	$u˙v_io_ª£tAŒC⁄vîãrs
(
UEnumî©i⁄
 *
íumî©‹
, 
UEº‹Code
 *
pEº‹Code
) {

1036 *((
uöt16_t
 *)(
íumî©‹
->
c⁄ãxt
)) = 0;

1037 
	}
}

1039 c⁄° 
UEnumî©i⁄
 
	ggEnumAŒC⁄vîãrs
 = {

1040 
NULL
,

1041 
NULL
,

1042 
u˙v_io_˛o£UEnumî©i⁄
,

1043 
u˙v_io_cou¡AŒC⁄vîãrs
,

1044 
uíum_u√xtDeÁu…
,

1045 
u˙v_io_√xtAŒC⁄vîãrs
,

1046 
u˙v_io_ª£tAŒC⁄vîãrs


1049 
U_CAPI
 
UEnumî©i⁄
 * 
U_EXPORT2


1050 
	$u˙v_›íAŒNames
(
UEº‹Code
 *
pEº‹Code
) {

1051 
UEnumî©i⁄
 *
myEnum
 = 
NULL
;

1052 i‡(
	`haveAlüsD©a
(
pEº‹Code
)) {

1053 
uöt16_t
 *
myC⁄ãxt
;

1055 
myEnum
 = 
	`u¥v_mÆloc
((
UEnumî©i⁄
));

1056 i‡(
myEnum
 =
NULL
) {

1057 *
pEº‹Code
 = 
U_MEMORY_ALLOCATION_ERROR
;

1058  
NULL
;

1060 
	`u¥v_mem˝y
(
myEnum
, &
gEnumAŒC⁄vîãrs
, (
UEnumî©i⁄
));

1061 
myC⁄ãxt
 = 
	`u¥v_mÆloc
((
uöt16_t
));

1062 i‡(
myC⁄ãxt
 =
NULL
) {

1063 *
pEº‹Code
 = 
U_MEMORY_ALLOCATION_ERROR
;

1064 
	`u¥v_‰ì
(
myEnum
);

1065  
NULL
;

1067 *
myC⁄ãxt
 = 0;

1068 
myEnum
->
c⁄ãxt
 = 
myC⁄ãxt
;

1070  
myEnum
;

1071 
	}
}

1073 
U_CFUNC
 
uöt16_t


1074 
	$u˙v_io_cou¡KnownC⁄vîãrs
(
UEº‹Code
 *
pEº‹Code
) {

1075 i‡(
	`haveAlüsD©a
(
pEº‹Code
)) {

1076  (
uöt16_t
)
gMaöTabÀ
.
c⁄vîãrLi°Size
;

1079 
	}
}

1083 * 
	tU_CALLCONV
 
	tSåùF‹Com∑ªFn
(*
	td°
, c⁄° *
	t«me
);

1092 
	sTempRow
 {

1093 
uöt16_t
 
	m°rIndex
, 
	ms‹tIndex
;

1094 } 
	tTempRow
;

1096 
	sTempAlüsTabÀ
 {

1097 c⁄° *
	mch¨s
;

1098 
TempRow
 *
	mrows
;

1099 
uöt16_t
 *
	mªs‹t
;

1100 
SåùF‹Com∑ªFn
 *
	m°rùF‹Com∑ª
;

1101 } 
	tTempAlüsTabÀ
;

1104 
	mSTACK_ROW_CAPACITY
=500

1107 
öt32_t


1108 
	$io_com∑ªRows
(c⁄° *
c⁄ãxt
, c⁄° *
À·
, c⁄° *
right
) {

1109 
°rù≥dLe·
[
UCNV_MAX_CONVERTER_NAME_LENGTH
],

1110 
°rù≥dRight
[
UCNV_MAX_CONVERTER_NAME_LENGTH
];

1112 
TempAlüsTabÀ
 *
ãmpTabÀ
=(TempAlüsTabÀ *)
c⁄ãxt
;

1113 c⁄° *
ch¨s
=
ãmpTabÀ
->chars;

1115  (
öt32_t
)
	`u¥v_°rcmp
(
ãmpTabÀ
->
	`°rùF‹Com∑ª
(
°rù≥dLe·
, 
ch¨s
+2*((c⁄° 
TempRow
 *)
À·
)->
°rIndex
),

1116 
ãmpTabÀ
->
	`°rùF‹Com∑ª
(
°rù≥dRight
, 
ch¨s
+2*((c⁄° 
TempRow
 *)
right
)->
°rIndex
));

1117 
	}
}

1119 
U_CAPI
 
öt32_t
 
U_EXPORT2


1120 
	$u˙v_sw≠Alü£s
(c⁄° 
UD©aSw≠≥r
 *
ds
,

1121 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

1122 
UEº‹Code
 *
pEº‹Code
) {

1123 c⁄° 
UD©aInfo
 *
pInfo
;

1124 
öt32_t
 
hódîSize
;

1126 c⁄° 
uöt16_t
 *
öTabÀ
;

1127 c⁄° 
uöt32_t
 *
öSe˘i⁄Sizes
;

1128 
uöt32_t
 
toc
[
off£tsCou¡
];

1129 
uöt32_t
 
off£ts
[
off£tsCou¡
];

1130 
uöt32_t
 
i
, 
cou¡
, 
tocLígth
, 
t›Off£t
;

1132 
TempRow
 
rows
[
STACK_ROW_CAPACITY
];

1133 
uöt16_t
 
ªs‹t
[
STACK_ROW_CAPACITY
];

1134 
TempAlüsTabÀ
 
ãmpTabÀ
;

1137 
hódîSize
=
	`ud©a_sw≠D©aHódî
(
ds
, 
öD©a
, 
Àngth
, 
outD©a
, 
pEº‹Code
);

1138 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

1143 
pInfo
=(c⁄° 
UD©aInfo
 *)((c⁄° *)
öD©a
+4);

1145 
pInfo
->
d©aF‹m©
[0]==0x43 &&

1146 
pInfo
->
d©aF‹m©
[1]==0x76 &&

1147 
pInfo
->
d©aF‹m©
[2]==0x41 &&

1148 
pInfo
->
d©aF‹m©
[3]==0x6c &&

1149 
pInfo
->
f‹m©Vîsi⁄
[0]==3

1151 
	`ud©a_¥ötEº‹
(
ds
, "ucnv_swapAliases(): data format %02x.%02x.%02x.%02x (format version %02x) isÇotánáliasÅable\n",

1152 
pInfo
->
d©aF‹m©
[0],ÖInfo->dataFormat[1],

1153 
pInfo
->
d©aF‹m©
[2],ÖInfo->dataFormat[3],

1154 
pInfo
->
f‹m©Vîsi⁄
[0]);

1155 *
pEº‹Code
=
U_UNSUPPORTED_ERROR
;

1160 if(
Àngth
>=0 && (Àngth-
hódîSize
)<4*(1+
möTocLígth
)) {

1161 
	`ud©a_¥ötEº‹
(
ds
, "ucnv_swapAliases():Åoo few bytes (%dáfter header) foránáliasÅable\n",

1162 
Àngth
-
hódîSize
);

1163 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

1167 
öSe˘i⁄Sizes
=(c⁄° 
uöt32_t
 *)((c⁄° *)
öD©a
+
hódîSize
);

1168 
öTabÀ
=(c⁄° 
uöt16_t
 *)
öSe˘i⁄Sizes
;

1169 
	`u¥v_mem£t
(
toc
, 0, (toc));

1170 
toc
[
tocLígthIndex
]=
tocLígth
=
ds
->
	`ªadUI¡32
(
öSe˘i⁄Sizes
[tocLengthIndex]);

1171 if(
tocLígth
<
möTocLígth
 || 
off£tsCou¡
<=tocLength) {

1172 
	`ud©a_¥ötEº‹
(
ds
, "u˙v_sw≠Alü£s():ÅabÀ o‡c⁄ã¡†c⁄èö†unsuµ‹ãdÇumbî o‡£˘i⁄†(%u se˘i⁄s)\n", 
tocLígth
);

1173 *
pEº‹Code
=
U_INVALID_FORMAT_ERROR
;

1178 
i
=
c⁄vîãrLi°Index
; i<=
tocLígth
; ++i) {

1179 
toc
[
i
]=
ds
->
	`ªadUI¡32
(
öSe˘i⁄Sizes
[i]);

1183 
	`u¥v_mem£t
(
off£ts
, 0, (offsets));

1184 
off£ts
[
c⁄vîãrLi°Index
]=2*(1+
tocLígth
);

1185 
i
=
ègLi°Index
; i<=
tocLígth
; ++i) {

1186 
off£ts
[
i
]=off£ts[i-1]+
toc
[i-1];

1190 
t›Off£t
=
off£ts
[
i
-1]+
toc
[i-1];

1192 if(
Àngth
>=0) {

1193 
uöt16_t
 *
outTabÀ
;

1194 c⁄° 
uöt16_t
 *
p
, *
p2
;

1195 
uöt16_t
 *
q
, *
q2
;

1196 
uöt16_t
 
ﬁdIndex
;

1198 if((
Àngth
-
hódîSize
)<(2*(
öt32_t
)
t›Off£t
)) {

1199 
	`ud©a_¥ötEº‹
(
ds
, "ucnv_swapAliases():Åoo few bytes (%dáfter header) foránáliasÅable\n",

1200 
Àngth
-
hódîSize
);

1201 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

1205 
outTabÀ
=(
uöt16_t
 *)((*)
outD©a
+
hódîSize
);

1208 
ds
->
	`sw≠Aºay32
(ds, 
öTabÀ
, 4*(1+
tocLígth
), 
outTabÀ
, 
pEº‹Code
);

1211 
ds
->
	`sw≠InvCh¨s
(ds, 
öTabÀ
+
off£ts
[
°rögTabÀIndex
], 2*(
öt32_t
)(
toc
[°rögTabÀIndex]+toc[
n‹mÆizedSåögTabÀIndex
]),

1212 
outTabÀ
+
off£ts
[
°rögTabÀIndex
], 
pEº‹Code
);

1213 if(
	`U_FAILURE
(*
pEº‹Code
)) {

1214 
	`ud©a_¥ötEº‹
(
ds
, "ucnv_swapAliases().swapInvChars(charsetÇames) failed\n");

1218 if(
ds
->
öCh¨£t
==ds->
outCh¨£t
) {

1220 
ds
->
	`sw≠Aºay16
(ds,

1221 
öTabÀ
+
off£ts
[
c⁄vîãrLi°Index
],

1222 2*(
öt32_t
)(
off£ts
[
°rögTabÀIndex
]-off£ts[
c⁄vîãrLi°Index
]),

1223 
outTabÀ
+
off£ts
[
c⁄vîãrLi°Index
],

1224 
pEº‹Code
);

1227 
cou¡
=
toc
[
ÆüsLi°Index
];

1229 
ãmpTabÀ
.
ch¨s
=(c⁄° *)(
outTabÀ
+
off£ts
[
°rögTabÀIndex
]);

1231 if(
cou¡
<=
STACK_ROW_CAPACITY
) {

1232 
ãmpTabÀ
.
rows
=rows;

1233 
ãmpTabÀ
.
ªs‹t
=resort;

1235 
ãmpTabÀ
.
rows
=(
TempRow
 *)
	`u¥v_mÆloc
(
cou¡
*(TempRow)+count*2);

1236 if(
ãmpTabÀ
.
rows
==
NULL
) {

1237 
	`ud©a_¥ötEº‹
(
ds
, "ucnv_swapAliases(): unableÅoállocate memory for sortingÅables (maxÜength: %u)\n",

1238 
cou¡
);

1239 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

1242 
ãmpTabÀ
.
ªs‹t
=(
uöt16_t
 *)—empTabÀ.
rows
+
cou¡
);

1245 if(
ds
->
outCh¨£t
==
U_ASCII_FAMILY
) {

1246 
ãmpTabÀ
.
°rùF‹Com∑ª
=
u˙v_io_°rùASCIIF‹Com∑ª
;

1248 
ãmpTabÀ
.
°rùF‹Com∑ª
=
u˙v_io_°rùEBCDICF‹Com∑ª
;

1260 
p
=
öTabÀ
+
off£ts
[
ÆüsLi°Index
];

1261 
q
=
outTabÀ
+
off£ts
[
ÆüsLi°Index
];

1263 
p2
=
öTabÀ
+
off£ts
[
u¡aggedC⁄vAºayIndex
];

1264 
q2
=
outTabÀ
+
off£ts
[
u¡aggedC⁄vAºayIndex
];

1266 
i
=0; i<
cou¡
; ++i) {

1267 
ãmpTabÀ
.
rows
[
i
].
°rIndex
=
ds
->
	`ªadUI¡16
(
p
[i]);

1268 
ãmpTabÀ
.
rows
[
i
].
s‹tIndex
=(
uöt16_t
)i;

1271 
	`u¥v_s‹tAºay
(
ãmpTabÀ
.
rows
, (
öt32_t
)
cou¡
, (
TempRow
),

1272 
io_com∑ªRows
, &
ãmpTabÀ
,

1273 
FALSE
, 
pEº‹Code
);

1275 if(
	`U_SUCCESS
(*
pEº‹Code
)) {

1277 if(
p
!=
q
) {

1278 
i
=0; i<
cou¡
; ++i) {

1279 
ﬁdIndex
=
ãmpTabÀ
.
rows
[
i
].
s‹tIndex
;

1280 
ds
->
	`sw≠Aºay16
(ds, 
p
+
ﬁdIndex
, 2, 
q
+
i
, 
pEº‹Code
);

1281 
ds
->
	`sw≠Aºay16
(ds, 
p2
+
ﬁdIndex
, 2, 
q2
+
i
, 
pEº‹Code
);

1289 
uöt16_t
 *
r
=
ãmpTabÀ
.
ªs‹t
;

1291 
i
=0; i<
cou¡
; ++i) {

1292 
ﬁdIndex
=
ãmpTabÀ
.
rows
[
i
].
s‹tIndex
;

1293 
ds
->
	`sw≠Aºay16
(ds, 
p
+
ﬁdIndex
, 2, 
r
+
i
, 
pEº‹Code
);

1295 
	`u¥v_mem˝y
(
q
, 
r
, 2*
cou¡
);

1297 
i
=0; i<
cou¡
; ++i) {

1298 
ﬁdIndex
=
ãmpTabÀ
.
rows
[
i
].
s‹tIndex
;

1299 
ds
->
	`sw≠Aºay16
(ds, 
p2
+
ﬁdIndex
, 2, 
r
+
i
, 
pEº‹Code
);

1301 
	`u¥v_mem˝y
(
q2
, 
r
, 2*
cou¡
);

1305 if(
ãmpTabÀ
.
rows
!=rows) {

1306 
	`u¥v_‰ì
(
ãmpTabÀ
.
rows
);

1309 if(
	`U_FAILURE
(*
pEº‹Code
)) {

1310 
	`ud©a_¥ötEº‹
(
ds
, "ucnv_swapAliases().uprv_sortArray(%u items) failed\n",

1311 
cou¡
);

1316 
ds
->
	`sw≠Aºay16
(ds,

1317 
öTabÀ
+
off£ts
[
c⁄vîãrLi°Index
],

1318 2*(
öt32_t
)(
off£ts
[
ÆüsLi°Index
]-off£ts[
c⁄vîãrLi°Index
]),

1319 
outTabÀ
+
off£ts
[
c⁄vîãrLi°Index
],

1320 
pEº‹Code
);

1321 
ds
->
	`sw≠Aºay16
(ds,

1322 
öTabÀ
+
off£ts
[
èggedAlüsAºayIndex
],

1323 2*(
öt32_t
)(
off£ts
[
°rögTabÀIndex
]-off£ts[
èggedAlüsAºayIndex
]),

1324 
outTabÀ
+
off£ts
[
èggedAlüsAºayIndex
],

1325 
pEº‹Code
);

1329  
hódîSize
+2*(
öt32_t
)
t›Off£t
;

1330 
	}
}

	@ucnv_io.h

13 #i‚de‡
UCNV_IO_H


14 
	#UCNV_IO_H


	)

16 
	~"unicode/uty≥s.h
"

18 #i‡!
UCONFIG_NO_CONVERSION


20 
	~"ud©aswp.h
"

22 
	#UCNV_AMBIGUOUS_ALIAS_MAP_BIT
 0x8000

	)

23 
	#UCNV_CONTAINS_OPTION_BIT
 0x4000

	)

24 
	#UCNV_CONVERTER_INDEX_MASK
 0xFFF

	)

25 
	#UCNV_NUM_RESERVED_TAGS
 2

	)

26 
	#UCNV_NUM_HIDDEN_TAGS
 1

	)

29 
	mUCNV_IO_UNNORMALIZED
,

30 
	mUCNV_IO_STD_NORMALIZED
,

31 
	mUCNV_IO_NORM_TYPE_COUNT


35 
uöt16_t
 
	m°rögN‹mÆiz©i⁄Ty≥
;

36 
uöt16_t
 
	mc⁄èösCnvO±i⁄Info
;

37 } 
	tUC⁄vîãrAlüsO±i⁄s
;

39 
	sUC⁄vîãrAlüs
 {

40 c⁄° 
uöt16_t
 *
	mc⁄vîãrLi°
;

41 c⁄° 
uöt16_t
 *
	mègLi°
;

42 c⁄° 
uöt16_t
 *
	mÆüsLi°
;

43 c⁄° 
uöt16_t
 *
	mu¡aggedC⁄vAºay
;

44 c⁄° 
uöt16_t
 *
	mèggedAlüsAºay
;

45 c⁄° 
uöt16_t
 *
	mèggedAlüsLi°s
;

46 c⁄° 
UC⁄vîãrAlüsO±i⁄s
 *
	m›ti⁄TabÀ
;

47 c⁄° 
uöt16_t
 *
	m°rögTabÀ
;

48 c⁄° 
uöt16_t
 *
	mn‹mÆizedSåögTabÀ
;

50 
uöt32_t
 
	mc⁄vîãrLi°Size
;

51 
uöt32_t
 
	mègLi°Size
;

52 
uöt32_t
 
	mÆüsLi°Size
;

53 
uöt32_t
 
	mu¡aggedC⁄vAºaySize
;

54 
uöt32_t
 
	mèggedAlüsAºaySize
;

55 
uöt32_t
 
	mèggedAlüsLi°sSize
;

56 
uöt32_t
 
	m›ti⁄TabÀSize
;

57 
uöt32_t
 
	m°rögTabÀSize
;

58 
uöt32_t
 
	mn‹mÆizedSåögTabÀSize
;

59 } 
	tUC⁄vîãrAlüs
;

70 #i‡
U_CHARSET_FAMILY
==
U_ASCII_FAMILY


71 
	#u˙v_io_°rùF‹Com∑ª
 
u˙v_io_°rùASCIIF‹Com∑ª


	)

72 #ñi‡
U_CHARSET_FAMILY
==
U_EBCDIC_FAMILY


73 
	#u˙v_io_°rùF‹Com∑ª
 
u˙v_io_°rùEBCDICF‹Com∑ª


	)

75 #îr‹ 
U_CHARSET_FAMILY
 
is
 
nŸ
 
vÆid


78 
U_CAPI
 * 
U_EXPORT2


79 
u˙v_io_°rùASCIIF‹Com∑ª
(*
d°
, c⁄° *
«me
);

81 
U_CAPI
 * 
U_EXPORT2


82 
u˙v_io_°rùEBCDICF‹Com∑ª
(*
d°
, c⁄° *
«me
);

94 
U_CFUNC
 const *

95 
u˙v_io_gëC⁄vîãrName
(c⁄° *
Æüs
, 
UBoﬁ
 *
c⁄èösO±i⁄
, 
UEº‹Code
 *
pEº‹Code
);

102 
U_CFUNC
 
uöt16_t


103 
u˙v_io_cou¡KnownC⁄vîãrs
(
UEº‹Code
 *
pEº‹Code
);

109 
U_CAPI
 
öt32_t
 
U_EXPORT2


110 
u˙v_sw≠Alü£s
(c⁄° 
UD©aSw≠≥r
 *
ds
,

111 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

112 
UEº‹Code
 *
pEº‹Code
);

	@ucnv_lmb.c

26 
	~"unicode/uty≥s.h
"

28 #i‡!
UCONFIG_NO_CONVERSION
 && !
UCONFIG_NO_LEGACY_CONVERSION


30 
	~"unicode/u˙v_îr.h
"

31 
	~"unicode/u˙v.h
"

32 
	~"unicode/u£t.h
"

33 
	~"cmem‹y.h
"

34 
	~"c°rög.h
"

35 
	~"uas£π.h
"

36 
	~"u˙v_imp.h
"

37 
	~"u˙v_bld.h
"

38 
	~"u˙v_˙v.h
"

40 #ifde‡
EBCDIC_RTL


41 
	~"ascii_a.h
"

44 
	#LENGTHOF
(
¨øy
Ë(
öt32_t
)(◊ºay)/(◊ºay)[0]))

	)

86 
	#ULMBCS_CHARSIZE_MAX
 3

	)

92 
	#ULMBCS_C0END
 0x1F

	)

93 
	#ULMBCS_C1START
 0x80

	)

99 
uöt8_t
 
	tulmbcs_byã_t
;

108 
	#ULMBCS_GRP_L1
 0x01

	)

109 
	#ULMBCS_GRP_GR
 0x02

	)

110 
	#ULMBCS_GRP_HE
 0x03

	)

111 
	#ULMBCS_GRP_AR
 0x04

	)

112 
	#ULMBCS_GRP_RU
 0x05

	)

113 
	#ULMBCS_GRP_L2
 0x06

	)

114 
	#ULMBCS_GRP_TR
 0x08

	)

115 
	#ULMBCS_GRP_TH
 0x0B

	)

116 
	#ULMBCS_GRP_JA
 0x10

	)

117 
	#ULMBCS_GRP_KO
 0x11

	)

118 
	#ULMBCS_GRP_TW
 0x12

	)

119 
	#ULMBCS_GRP_CN
 0x13

	)

133 
	#ULMBCS_DOUBLEOPTGROUP_START
 0x10

	)

155 
	#ULMBCS_HT
 0x09

	)

156 
	#ULMBCS_LF
 0x0A

	)

157 
	#ULMBCS_CR
 0x0D

	)

162 
	#ULMBCS_123SYSTEMRANGE
 0x19

	)

169 
	#ULMBCS_GRP_CTRL
 0x0F

	)

174 
	#ULMBCS_CTRLOFFSET
 0x20

	)

189 
	#ULMBCS_GRP_EXCEPT
 0x00

	)

194 
	#ULMBCS_GRP_UNICODE
 0x14

	)

201 
	#ULMBCS_UNICOMPATZERO
 0xF6

	)

205 
	#ULMBCS_UNICODE_SIZE
 3

	)

214 
	#ULMBCS_DEFAULTOPTGROUP
 0x1

	)

235 
	#ULMBCS_GRP_LAST
 0x13

	)

237 c⁄° * c⁄° 
	gO±GroupByãToCPName
[
ULMBCS_GRP_LAST
 + 1] = {

245  
NULL
,

247  
NULL
,

248  
NULL
,

250  
NULL
,

251  
NULL
,

252  
NULL
,

253  
NULL
,

280 
	#ULMBCS_AMBIGUOUS_SBCS
 0x80

	)

283 
	#ULMBCS_AMBIGUOUS_MBCS
 0x81

	)

286 
	#ULMBCS_AMBIGUOUS_ALL
 0x82

	)

288 
	#ULMBCS_AMBIGUOUS_MATCH
(
agroup
, 
xgroup
) \

289 ((((
agroup
Ë=
ULMBCS_AMBIGUOUS_SBCS
) && \

290 (
xgroup
Ë< 
ULMBCS_DOUBLEOPTGROUP_START
) || \

291 (((
agroup
Ë=
ULMBCS_AMBIGUOUS_MBCS
) && \

292 (
xgroup
Ë>
ULMBCS_DOUBLEOPTGROUP_START
)) || \

293 ((
agroup
Ë=
ULMBCS_AMBIGUOUS_ALL
)

	)

299 c⁄° 
	s_UniLMBCSGΩM≠


301 c⁄° 
UCh¨
 
	muniSèπR™ge
;

302 c⁄° 
UCh¨
 
	muniEndR™ge
;

303 c⁄° 
ulmbcs_byã_t
 
	mGΩTy≥
;

304 } 
	gUniLMBCSGΩM≠
[]

308 {0x0001, 0x001F, 
ULMBCS_GRP_CTRL
},

309 {0x0080, 0x009F, 
ULMBCS_GRP_CTRL
},

310 {0x00A0, 0x00A6, 
ULMBCS_AMBIGUOUS_SBCS
},

311 {0x00A7, 0x00A8, 
ULMBCS_AMBIGUOUS_ALL
},

312 {0x00A9, 0x00AF, 
ULMBCS_AMBIGUOUS_SBCS
},

313 {0x00B0, 0x00B1, 
ULMBCS_AMBIGUOUS_ALL
},

314 {0x00B2, 0x00B3, 
ULMBCS_AMBIGUOUS_SBCS
},

315 {0x00B4, 0x00B4, 
ULMBCS_AMBIGUOUS_ALL
},

316 {0x00B5, 0x00B5, 
ULMBCS_AMBIGUOUS_SBCS
},

317 {0x00B6, 0x00B6, 
ULMBCS_AMBIGUOUS_ALL
},

318 {0x00B7, 0x00D6, 
ULMBCS_AMBIGUOUS_SBCS
},

319 {0x00D7, 0x00D7, 
ULMBCS_AMBIGUOUS_ALL
},

320 {0x00D8, 0x00F6, 
ULMBCS_AMBIGUOUS_SBCS
},

321 {0x00F7, 0x00F7, 
ULMBCS_AMBIGUOUS_ALL
},

322 {0x00F8, 0x01CD, 
ULMBCS_AMBIGUOUS_SBCS
},

323 {0x01CE, 0x01CE, 
ULMBCS_GRP_TW
 },

324 {0x01CF, 0x02B9, 
ULMBCS_AMBIGUOUS_SBCS
},

325 {0x02BA, 0x02BA, 
ULMBCS_GRP_CN
},

326 {0x02BC, 0x02C8, 
ULMBCS_AMBIGUOUS_SBCS
},

327 {0x02C9, 0x02D0, 
ULMBCS_AMBIGUOUS_MBCS
},

328 {0x02D8, 0x02DD, 
ULMBCS_AMBIGUOUS_SBCS
},

329 {0x0384, 0x0390, 
ULMBCS_AMBIGUOUS_SBCS
},

330 {0x0391, 0x03A9, 
ULMBCS_AMBIGUOUS_ALL
},

331 {0x03AA, 0x03B0, 
ULMBCS_AMBIGUOUS_SBCS
},

332 {0x03B1, 0x03C9, 
ULMBCS_AMBIGUOUS_ALL
},

333 {0x03CA, 0x03CE, 
ULMBCS_AMBIGUOUS_SBCS
},

334 {0x0400, 0x0400, 
ULMBCS_GRP_RU
},

335 {0x0401, 0x0401, 
ULMBCS_AMBIGUOUS_ALL
},

336 {0x0402, 0x040F, 
ULMBCS_GRP_RU
},

337 {0x0410, 0x0431, 
ULMBCS_AMBIGUOUS_ALL
},

338 {0x0432, 0x044E, 
ULMBCS_GRP_RU
},

339 {0x044F, 0x044F, 
ULMBCS_AMBIGUOUS_ALL
},

340 {0x0450, 0x0491, 
ULMBCS_GRP_RU
},

341 {0x05B0, 0x05F2, 
ULMBCS_GRP_HE
},

342 {0x060C, 0x06AF, 
ULMBCS_GRP_AR
},

343 {0x0E01, 0x0E5B, 
ULMBCS_GRP_TH
},

344 {0x200C, 0x200F, 
ULMBCS_AMBIGUOUS_SBCS
},

345 {0x2010, 0x2010, 
ULMBCS_AMBIGUOUS_MBCS
},

346 {0x2013, 0x2014, 
ULMBCS_AMBIGUOUS_SBCS
},

347 {0x2015, 0x2015, 
ULMBCS_AMBIGUOUS_MBCS
},

348 {0x2016, 0x2016, 
ULMBCS_AMBIGUOUS_MBCS
},

349 {0x2017, 0x2017, 
ULMBCS_AMBIGUOUS_SBCS
},

350 {0x2018, 0x2019, 
ULMBCS_AMBIGUOUS_ALL
},

351 {0x201A, 0x201B, 
ULMBCS_AMBIGUOUS_SBCS
},

352 {0x201C, 0x201D, 
ULMBCS_AMBIGUOUS_ALL
},

353 {0x201E, 0x201F, 
ULMBCS_AMBIGUOUS_SBCS
},

354 {0x2020, 0x2021, 
ULMBCS_AMBIGUOUS_ALL
},

355 {0x2022, 0x2024, 
ULMBCS_AMBIGUOUS_SBCS
},

356 {0x2025, 0x2025, 
ULMBCS_AMBIGUOUS_MBCS
},

357 {0x2026, 0x2026, 
ULMBCS_AMBIGUOUS_ALL
},

358 {0x2027, 0x2027, 
ULMBCS_GRP_TW
},

359 {0x2030, 0x2030, 
ULMBCS_AMBIGUOUS_ALL
},

360 {0x2031, 0x2031, 
ULMBCS_AMBIGUOUS_SBCS
},

361 {0x2032, 0x2033, 
ULMBCS_AMBIGUOUS_MBCS
},

362 {0x2035, 0x2035, 
ULMBCS_AMBIGUOUS_MBCS
},

363 {0x2039, 0x203A, 
ULMBCS_AMBIGUOUS_SBCS
},

364 {0x203B, 0x203B, 
ULMBCS_AMBIGUOUS_MBCS
},

365 {0x203C, 0x203C, 
ULMBCS_GRP_EXCEPT
},

366 {0x2074, 0x2074, 
ULMBCS_GRP_KO
},

367 {0x207F, 0x207F, 
ULMBCS_GRP_EXCEPT
},

368 {0x2081, 0x2084, 
ULMBCS_GRP_KO
},

369 {0x20A4, 0x20AC, 
ULMBCS_AMBIGUOUS_SBCS
},

370 {0x2103, 0x2109, 
ULMBCS_AMBIGUOUS_MBCS
},

371 {0x2111, 0x2120, 
ULMBCS_AMBIGUOUS_SBCS
},

373 {0x2121, 0x2121, 
ULMBCS_AMBIGUOUS_MBCS
},

374 {0x2122, 0x2126, 
ULMBCS_AMBIGUOUS_SBCS
},

375 {0x212B, 0x212B, 
ULMBCS_AMBIGUOUS_MBCS
},

376 {0x2135, 0x2135, 
ULMBCS_AMBIGUOUS_SBCS
},

377 {0x2153, 0x2154, 
ULMBCS_GRP_KO
},

378 {0x215B, 0x215E, 
ULMBCS_GRP_EXCEPT
},

379 {0x2160, 0x2179, 
ULMBCS_AMBIGUOUS_MBCS
},

380 {0x2190, 0x2193, 
ULMBCS_AMBIGUOUS_ALL
},

381 {0x2194, 0x2195, 
ULMBCS_GRP_EXCEPT
},

382 {0x2196, 0x2199, 
ULMBCS_AMBIGUOUS_MBCS
},

383 {0x21A8, 0x21A8, 
ULMBCS_GRP_EXCEPT
},

384 {0x21B8, 0x21B9, 
ULMBCS_GRP_CN
},

385 {0x21D0, 0x21D1, 
ULMBCS_GRP_EXCEPT
},

386 {0x21D2, 0x21D2, 
ULMBCS_AMBIGUOUS_MBCS
},

387 {0x21D3, 0x21D3, 
ULMBCS_GRP_EXCEPT
},

388 {0x21D4, 0x21D4, 
ULMBCS_AMBIGUOUS_MBCS
},

389 {0x21D5, 0x21D5, 
ULMBCS_GRP_EXCEPT
},

390 {0x21E7, 0x21E7, 
ULMBCS_GRP_CN
},

391 {0x2200, 0x2200, 
ULMBCS_AMBIGUOUS_MBCS
},

392 {0x2201, 0x2201, 
ULMBCS_GRP_EXCEPT
},

393 {0x2202, 0x2202, 
ULMBCS_AMBIGUOUS_MBCS
},

394 {0x2203, 0x2203, 
ULMBCS_AMBIGUOUS_MBCS
},

395 {0x2204, 0x2206, 
ULMBCS_GRP_EXCEPT
},

396 {0x2207, 0x2208, 
ULMBCS_AMBIGUOUS_MBCS
},

397 {0x2209, 0x220A, 
ULMBCS_GRP_EXCEPT
},

398 {0x220B, 0x220B, 
ULMBCS_AMBIGUOUS_MBCS
},

399 {0x220F, 0x2215, 
ULMBCS_AMBIGUOUS_MBCS
},

400 {0x2219, 0x2219, 
ULMBCS_GRP_EXCEPT
},

401 {0x221A, 0x221A, 
ULMBCS_AMBIGUOUS_MBCS
},

402 {0x221B, 0x221C, 
ULMBCS_GRP_EXCEPT
},

403 {0x221D, 0x221E, 
ULMBCS_AMBIGUOUS_MBCS
},

404 {0x221F, 0x221F, 
ULMBCS_GRP_EXCEPT
},

405 {0x2220, 0x2220, 
ULMBCS_AMBIGUOUS_MBCS
},

406 {0x2223, 0x222A, 
ULMBCS_AMBIGUOUS_MBCS
},

407 {0x222B, 0x223D, 
ULMBCS_AMBIGUOUS_MBCS
},

408 {0x2245, 0x2248, 
ULMBCS_GRP_EXCEPT
},

409 {0x224C, 0x224C, 
ULMBCS_GRP_TW
},

410 {0x2252, 0x2252, 
ULMBCS_AMBIGUOUS_MBCS
},

411 {0x2260, 0x2261, 
ULMBCS_AMBIGUOUS_MBCS
},

412 {0x2262, 0x2265, 
ULMBCS_GRP_EXCEPT
},

413 {0x2266, 0x226F, 
ULMBCS_AMBIGUOUS_MBCS
},

414 {0x2282, 0x2283, 
ULMBCS_AMBIGUOUS_MBCS
},

415 {0x2284, 0x2285, 
ULMBCS_GRP_EXCEPT
},

416 {0x2286, 0x2287, 
ULMBCS_AMBIGUOUS_MBCS
},

417 {0x2288, 0x2297, 
ULMBCS_GRP_EXCEPT
},

418 {0x2299, 0x22BF, 
ULMBCS_AMBIGUOUS_MBCS
},

419 {0x22C0, 0x22C0, 
ULMBCS_GRP_EXCEPT
},

420 {0x2310, 0x2310, 
ULMBCS_GRP_EXCEPT
},

421 {0x2312, 0x2312, 
ULMBCS_AMBIGUOUS_MBCS
},

422 {0x2318, 0x2321, 
ULMBCS_GRP_EXCEPT
},

423 {0x2318, 0x2321, 
ULMBCS_GRP_CN
},

424 {0x2460, 0x24E9, 
ULMBCS_AMBIGUOUS_MBCS
},

425 {0x2500, 0x2500, 
ULMBCS_AMBIGUOUS_SBCS
},

426 {0x2501, 0x2501, 
ULMBCS_AMBIGUOUS_MBCS
},

427 {0x2502, 0x2502, 
ULMBCS_AMBIGUOUS_ALL
},

428 {0x2503, 0x2503, 
ULMBCS_AMBIGUOUS_MBCS
},

429 {0x2504, 0x2505, 
ULMBCS_GRP_TW
},

430 {0x2506, 0x2665, 
ULMBCS_AMBIGUOUS_ALL
},

431 {0x2666, 0x2666, 
ULMBCS_GRP_EXCEPT
},

432 {0x2667, 0x2669, 
ULMBCS_AMBIGUOUS_SBCS
},

433 {0x266A, 0x266A, 
ULMBCS_AMBIGUOUS_ALL
},

434 {0x266B, 0x266C, 
ULMBCS_AMBIGUOUS_SBCS
},

435 {0x266D, 0x266D, 
ULMBCS_AMBIGUOUS_MBCS
},

436 {0x266E, 0x266E, 
ULMBCS_AMBIGUOUS_SBCS
},

437 {0x266F, 0x266F, 
ULMBCS_GRP_JA
},

438 {0x2670, 0x2E7F, 
ULMBCS_AMBIGUOUS_SBCS
},

439 {0x2E80, 0xF861, 
ULMBCS_AMBIGUOUS_MBCS
},

440 {0xF862, 0xF8FF, 
ULMBCS_GRP_EXCEPT
},

441 {0xF900, 0xFA2D, 
ULMBCS_AMBIGUOUS_MBCS
},

442 {0xFB00, 0xFEFF, 
ULMBCS_AMBIGUOUS_SBCS
},

443 {0xFF01, 0xFFEE, 
ULMBCS_AMBIGUOUS_MBCS
},

444 {0xFFFF, 0xFFFF, 
ULMBCS_GRP_UNICODE
}

447 
ulmbcs_byã_t


448 
	$FödLMBCSUniR™ge
(
UCh¨
 
uniCh¨
)

450 c⁄° 
_UniLMBCSGΩM≠
 * 
pTabÀ
 = 
UniLMBCSGΩM≠
;

452 
uniCh¨
 > 
pTabÀ
->
uniEndR™ge
)

454 
pTabÀ
++;

457 i‡(
uniCh¨
 >
pTabÀ
->
uniSèπR™ge
)

459  
pTabÀ
->
GΩTy≥
;

461  
ULMBCS_GRP_UNICODE
;

462 
	}
}

486 c⁄° 
	s_LoˇÀLMBCSGΩM≠


488 c⁄° *
	mLoˇÀID
;

489 c⁄° 
ulmbcs_byã_t
 
	mO±Group
;

490 } 
	gLoˇÀLMBCSGΩM≠
[] =

492 {"¨", 
ULMBCS_GRP_AR
},

493 {"be", 
ULMBCS_GRP_RU
},

494 {"bg", 
ULMBCS_GRP_L2
},

496 {"cs", 
ULMBCS_GRP_L2
},

499 {"ñ", 
ULMBCS_GRP_GR
},

505 {"he", 
ULMBCS_GRP_HE
},

506 {"hu", 
ULMBCS_GRP_L2
},

509 {"iw", 
ULMBCS_GRP_HE
},

510 {"ja", 
ULMBCS_GRP_JA
},

511 {"ko", 
ULMBCS_GRP_KO
},

514 {"mk", 
ULMBCS_GRP_RU
},

517 {"∂", 
ULMBCS_GRP_L2
},

519 {"ro", 
ULMBCS_GRP_L2
},

520 {"ru", 
ULMBCS_GRP_RU
},

521 {"sh", 
ULMBCS_GRP_L2
},

522 {"sk", 
ULMBCS_GRP_L2
},

523 {"¶", 
ULMBCS_GRP_L2
},

524 {"sq", 
ULMBCS_GRP_L2
},

525 {"§", 
ULMBCS_GRP_RU
},

527 {"th", 
ULMBCS_GRP_TH
},

528 {"å", 
ULMBCS_GRP_TR
},

529 {"uk", 
ULMBCS_GRP_RU
},

531 {"zhTW", 
ULMBCS_GRP_TW
},

532 {"zh", 
ULMBCS_GRP_CN
},

533 {
NULL
, 
ULMBCS_GRP_L1
}

537 
ulmbcs_byã_t


538 
	$FödLMBCSLoˇÀ
(c⁄° *
LoˇÀID
)

540 c⁄° 
_LoˇÀLMBCSGΩM≠
 *
pTabÀ
 = 
LoˇÀLMBCSGΩM≠
;

542 i‡((!
LoˇÀID
) || (!*LocaleID))

547 
pTabÀ
->
LoˇÀID
)

549 i‡(*
pTabÀ
->
LoˇÀID
 == *LocaleID)

552 i‡(
	`u¥v_°∫cmp
(
pTabÀ
->
LoˇÀID
, LoˇÀID, 
	`°æí
(pTable->LocaleID)) == 0)

553  
pTabÀ
->
O±Group
;

556 i‡(*
pTabÀ
->
LoˇÀID
 > *LocaleID)

558 
pTabÀ
++;

560  
ULMBCS_GRP_L1
;

561 
	}
}

579 
UC⁄vîãrSh¨edD©a
 *
	mO±GΩC⁄vîãr
[
ULMBCS_GRP_LAST
+1];

580 
uöt8_t
 
	mO±Group
;

581 
uöt8_t
 
	mloˇÀC⁄vîãrIndex
;

583 
	tUC⁄vîãrD©aLMBCS
;

585 
_LMBCSClo£
(
UC⁄vîãr
 * 
_this
);

587 
	#DECLARE_LMBCS_DATA
(
n
) \

588 c⁄° 
UC⁄vîãrIm∂
 
_LMBCSIm∂
##
n
={\

589 
UCNV_LMBCS_
##
n
,\

590 
NULL
,NULL,\

591 
_LMBCSO≥n
##
n
,\

592 
_LMBCSClo£
,\

593 
NULL
,\

594 
_LMBCSToUnicodeWôhOff£ts
,\

595 
_LMBCSToUnicodeWôhOff£ts
,\

596 
_LMBCSFromUnicode
,\

597 
_LMBCSFromUnicode
,\

598 
NULL
,\

599 
NULL
,\

600 
NULL
,\

601 
NULL
,\

602 
_LMBCSSa„Cl⁄e
,\

603 
u˙v_gëCom∂ëeUnicodeSë
\

605 c⁄° 
UC⁄vîãrSèticD©a
 
_LMBCSSèticD©a
##
n
={\

606 (
UC⁄vîãrSèticD©a
),\

608 0, 
UCNV_IBM
, 
UCNV_LMBCS_
##
n
, 1, 3,\

609 { 0x3f, 0, 0, 0 },1,
FALSE
,FALSE,0,0,{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0} \

611 c⁄° 
UC⁄vîãrSh¨edD©a
 
_LMBCSD©a
##
n
={\

612 (
UC⁄vîãrSh¨edD©a
), ~((
uöt32_t
) 0),\

613 
NULL
, NULL, &
_LMBCSSèticD©a
##
n
, 
FALSE
, &
_LMBCSIm∂
##n, \

615 };

	)

621 
	#DEFINE_LMBCS_OPEN
(
n
) \

623 
_LMBCSO≥n
##
	`n
(
UC⁄vîãr
* 
_this
, 
UC⁄vîãrLﬂdArgs
* 
pArgs
, 
UEº‹Code
* 
îr
) \

624 { 
	`_LMBCSO≥nW‹kî
(
_this
, 
pArgs
, 
îr
, 
n
); }

	)

630 
	$_LMBCSO≥nW‹kî
(
UC⁄vîãr
* 
_this
,

631 
UC⁄vîãrLﬂdArgs
 *
pArgs
,

632 
UEº‹Code
* 
îr
,

633 
ulmbcs_byã_t
 
O±Group
)

635 
UC⁄vîãrD©aLMBCS
 * 
exåaInfo
 = 
_this
->extraInfo =

636 (
UC⁄vîãrD©aLMBCS
*)
	`u¥v_mÆloc
 ( (UConverterDataLMBCS));

637 if(
exåaInfo
 !
NULL
)

639 
UC⁄vîãrNamePõ˚s
 
°ackPõ˚s
;

640 
UC⁄vîãrLﬂdArgs
 
°ackArgs
={ (
öt32_t
)(UConverterLoadArgs) };

641 
ulmbcs_byã_t
 
i
;

643 
	`u¥v_mem£t
(
exåaInfo
, 0, (
UC⁄vîãrD©aLMBCS
));

645 
°ackArgs
.
⁄lyTe°IsLﬂdabÀ
 = 
pArgs
->onlyTestIsLoadable;

647 
i
=0; i <
ULMBCS_GRP_LAST
 && 
	`U_SUCCESS
(*
îr
); i++)

649 if(
O±GroupByãToCPName
[
i
] !
NULL
) {

650 
exåaInfo
->
O±GΩC⁄vîãr
[
i
] = 
	`u˙v_lﬂdSh¨edD©a
(
O±GroupByãToCPName
[i], &
°ackPõ˚s
, &
°ackArgs
, 
îr
);

654 if(
	`U_FAILURE
(*
îr
Ë|| 
pArgs
->
⁄lyTe°IsLﬂdabÀ
) {

655 
	`_LMBCSClo£
(
_this
);

658 
exåaInfo
->
O±Group
 = OptGroup;

659 
exåaInfo
->
loˇÀC⁄vîãrIndex
 = 
	`FödLMBCSLoˇÀ
(
pArgs
->
loˇÀ
);

663 *
îr
 = 
U_MEMORY_ALLOCATION_ERROR
;

665 
	}
}

668 
	$_LMBCSClo£
(
UC⁄vîãr
 * 
_this
)

670 i‡(
_this
->
exåaInfo
 !
NULL
)

672 
ulmbcs_byã_t
 
Ix
;

673 
UC⁄vîãrD©aLMBCS
 * 
exåaInfo
 = (UC⁄vîãrD©aLMBCS *Ë
_this
->extraInfo;

675 
Ix
=0; Ix <
ULMBCS_GRP_LAST
; Ix++)

677 i‡(
exåaInfo
->
O±GΩC⁄vîãr
[
Ix
] !
NULL
)

678 
	`u˙v_u∆ﬂdSh¨edD©aIfRódy
(
exåaInfo
->
O±GΩC⁄vîãr
[
Ix
]);

680 i‡(!
_this
->
isExåaLoˇl
) {

681 
	`u¥v_‰ì
 (
_this
->
exåaInfo
);

682 
_this
->
exåaInfo
 = 
NULL
;

685 
	}
}

687 
	sLMBCSCl⁄e
 {

688 
UC⁄vîãr
 
	m˙v
;

689 
UC⁄vîãrD©aLMBCS
 
	mlmbcs
;

690 } 
	tLMBCSCl⁄e
;

692 
UC⁄vîãr
 *

693 
	$_LMBCSSa„Cl⁄e
(c⁄° 
UC⁄vîãr
 *
˙v
,

694 *
°ackBuf„r
,

695 
öt32_t
 *
pBuf„rSize
,

696 
UEº‹Code
 *
°©us
) {

697 
LMBCSCl⁄e
 *
√wLMBCS
;

698 
UC⁄vîãrD©aLMBCS
 *
exåaInfo
;

699 
öt32_t
 
i
;

701 if(*
pBuf„rSize
<=0) {

702 *
pBuf„rSize
=(
öt32_t
)(
LMBCSCl⁄e
);

703  
NULL
;

706 
exåaInfo
=(
UC⁄vîãrD©aLMBCS
 *)
˙v
->extraInfo;

707 
√wLMBCS
=(
LMBCSCl⁄e
 *)
°ackBuf„r
;

711 
	`u¥v_mem˝y
(&
√wLMBCS
->
lmbcs
, 
exåaInfo
, (
UC⁄vîãrD©aLMBCS
));

714 
i
 = 0; i <
ULMBCS_GRP_LAST
; ++i) {

715 if(
exåaInfo
->
O±GΩC⁄vîãr
[
i
] !
NULL
) {

716 
	`u˙v_ö¸emítRefCou¡
(
exåaInfo
->
O±GΩC⁄vîãr
[
i
]);

720 
√wLMBCS
->
˙v
.
exåaInfo
 = &√wLMBCS->
lmbcs
;

721 
√wLMBCS
->
˙v
.
isExåaLoˇl
 = 
TRUE
;

722  &
√wLMBCS
->
˙v
;

723 
	}
}

743 
size_t


744 
	$LMBCSC⁄vîsi⁄W‹kî
 (

745 
UC⁄vîãrD©aLMBCS
 * 
exåaInfo
,

746 
ulmbcs_byã_t
 
group
,

747 
ulmbcs_byã_t
 * 
pSèπLMBCS
,

748 
UCh¨
 * 
pUniCh¨
,

749 
ulmbcs_byã_t
 * 
œ°C⁄vîãrIndex
,

750 
UBoﬁ
 * 
groups_åõd


753 
ulmbcs_byã_t
 * 
pLMBCS
 = 
pSèπLMBCS
;

754 
UC⁄vîãrSh¨edD©a
 * 
x˙v
 = 
exåaInfo
->
O±GΩC⁄vîãr
[
group
];

756 
byãsC⁄vîãd
;

757 
uöt32_t
 
vÆue
;

758 
ulmbcs_byã_t
 
fú°Byã
;

760 
	`U_ASSERT
(
x˙v
);

761 
	`U_ASSERT
(
group
<
ULMBCS_GRP_UNICODE
);

763 
byãsC⁄vîãd
 = 
	`u˙v_MBCSFromUCh¨32
(
x˙v
, *
pUniCh¨
, &
vÆue
, 
FALSE
);

766 if(
byãsC⁄vîãd
 > 0) {

767 
fú°Byã
 = (
ulmbcs_byã_t
)(
vÆue
 >> ((
byãsC⁄vîãd
 - 1) * 8));

770 
groups_åõd
[
group
] = 
TRUE
;

774 *
œ°C⁄vîãrIndex
 = 
group
;

779 
	`U_ASSERT
((
fú°Byã
 <
ULMBCS_C0END
Ë|| (fú°Byã >
ULMBCS_C1START
Ë|| (
group
 =
ULMBCS_GRP_EXCEPT
));

782 i‡(
group
 !
ULMBCS_GRP_EXCEPT
 && 
exåaInfo
->
O±Group
 != group)

784 *
pLMBCS
++ = 
group
;

785 i‡(
byãsC⁄vîãd
 =1 && 
group
 >
ULMBCS_DOUBLEOPTGROUP_START
)

787 *
pLMBCS
++ = 
group
;

792 i‡–
byãsC⁄vîãd
 =1 && 
fú°Byã
 < 0x20 )

797 
byãsC⁄vîãd
)

800 *
pLMBCS
++ = (
ulmbcs_byã_t
)(
vÆue
 >> 24);

802 *
pLMBCS
++ = (
ulmbcs_byã_t
)(
vÆue
 >> 16);

804 *
pLMBCS
++ = (
ulmbcs_byã_t
)(
vÆue
 >> 8);

806 *
pLMBCS
++ = (
ulmbcs_byã_t
)
vÆue
;

812  (
pLMBCS
 - 
pSèπLMBCS
);

813 
	}
}

819 
size_t


820 
	$LMBCSC⁄vîtUni
(
ulmbcs_byã_t
 * 
pLMBCS
, 
UCh¨
 
uniCh¨
)

823 
uöt8_t
 
LowCh
 = (uöt8_t)(
uniCh¨
 & 0x00FF);

824 
uöt8_t
 
HighCh
 = (uöt8_t)(
uniCh¨
 >> 8);

826 *
pLMBCS
++ = 
ULMBCS_GRP_UNICODE
;

828 i‡(
LowCh
 == 0)

830 *
pLMBCS
++ = 
ULMBCS_UNICOMPATZERO
;

831 *
pLMBCS
++ = 
HighCh
;

835 *
pLMBCS
++ = 
HighCh
;

836 *
pLMBCS
++ = 
LowCh
;

838  
ULMBCS_UNICODE_SIZE
;

839 
	}
}

845 
	$_LMBCSFromUnicode
(
UC⁄vîãrFromUnicodeArgs
* 
¨gs
,

846 
UEº‹Code
* 
îr
)

848 
ulmbcs_byã_t
 
œ°C⁄vîãrIndex
 = 0;

849 
UCh¨
 
uniCh¨
;

850 
ulmbcs_byã_t
 
LMBCS
[
ULMBCS_CHARSIZE_MAX
];

851 
ulmbcs_byã_t
 * 
pLMBCS
;

852 
öt32_t
 
byãs_wrôãn
;

853 
UBoﬁ
 
groups_åõd
[
ULMBCS_GRP_LAST
+1];

854 
UC⁄vîãrD©aLMBCS
 * 
exåaInfo
 = (UC⁄vîãrD©aLMBCS *Ë
¨gs
->
c⁄vîãr
->extraInfo;

855 
sour˚Index
 = 0;

881 
ulmbcs_byã_t
 
OldC⁄vîãrIndex
 = 0;

883 
¨gs
->
sour˚
 <árgs->
sour˚Limô
 && !
	`U_FAILURE
(*
îr
))

886 
OldC⁄vîãrIndex
 = 
exåaInfo
->
loˇÀC⁄vîãrIndex
;

888 i‡(
¨gs
->
èrgë
 >¨gs->
èrgëLimô
)

890 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

893 
uniCh¨
 = *(
¨gs
->
sour˚
);

894 
byãs_wrôãn
 = 0;

895 
pLMBCS
 = 
LMBCS
;

901 if((
uniCh¨
>=0x80) && (uniChar<=0xff)

902  &&(
uniCh¨
!=0xB1) &&(uniChar!=0xD7) &&(uniChar!=0xF7)

903 &&(
uniCh¨
!=0xB0) &&(uniChar!=0xB4) &&(uniChar!=0xB6) &&(uniChar!=0xA7) &&(uniChar!=0xA8))

905 
exåaInfo
->
loˇÀC⁄vîãrIndex
 = 
ULMBCS_GRP_L1
;

907 i‡(((
uniCh¨
 > 
ULMBCS_C0END
Ë&& (uniCh¨ < 
ULMBCS_C1START
)) ||

908 
uniCh¨
 =0 || uniCh¨ =
ULMBCS_HT
 || uniCh¨ =
ULMBCS_CR
 ||

909 
uniCh¨
 =
ULMBCS_LF
 || uniCh¨ =
ULMBCS_123SYSTEMRANGE


912 *
pLMBCS
++ = (
ulmbcs_byã_t
 ) 
uniCh¨
;

913 
byãs_wrôãn
 = 1;

917 i‡(!
byãs_wrôãn
)

920 
ulmbcs_byã_t
 
group
 = 
	`FödLMBCSUniR™ge
(
uniCh¨
);

922 i‡(
group
 =
ULMBCS_GRP_UNICODE
)

924 
pLMBCS
 +
	`LMBCSC⁄vîtUni
’LMBCS,
uniCh¨
);

926 
byãs_wrôãn
 = (
öt32_t
)(
pLMBCS
 - 
LMBCS
);

928 i‡(
group
 =
ULMBCS_GRP_CTRL
)

931 i‡(
uniCh¨
 <
ULMBCS_C0END
)

933 *
pLMBCS
++ = 
ULMBCS_GRP_CTRL
;

934 *
pLMBCS
++ = (
ulmbcs_byã_t
)(
ULMBCS_CTRLOFFSET
 + 
uniCh¨
);

936 i‡(
uniCh¨
 >
ULMBCS_C1START
 && uniCh¨ <ULMBCS_C1START + 
ULMBCS_CTRLOFFSET
)

938 *
pLMBCS
++ = 
ULMBCS_GRP_CTRL
;

939 *
pLMBCS
++ = (
ulmbcs_byã_t
 ) (
uniCh¨
 & 0x00FF);

941 
byãs_wrôãn
 = (
öt32_t
)(
pLMBCS
 - 
LMBCS
);

943 i‡(
group
 < 
ULMBCS_GRP_UNICODE
)

946 
byãs_wrôãn
 = (
öt32_t
)
	`LMBCSC⁄vîsi⁄W‹kî
 (

947 
exåaInfo
, 
group
, 
pLMBCS
, &
uniCh¨
,

948 &
œ°C⁄vîãrIndex
, 
groups_åõd
);

950 i‡(!
byãs_wrôãn
)

952 
	`u¥v_mem£t
(
groups_åõd
, 0, (groups_tried));

955 i‡((
exåaInfo
->
O±Group
 !1Ë&& (
	`ULMBCS_AMBIGUOUS_MATCH
(
group
,ÉxtraInfo->OptGroup)))

960 if(
exåaInfo
->
loˇÀC⁄vîãrIndex
 < 
ULMBCS_DOUBLEOPTGROUP_START
)

962 
byãs_wrôãn
 = 
	`LMBCSC⁄vîsi⁄W‹kî
 (
exåaInfo
,

963 
ULMBCS_GRP_L1
, 
pLMBCS
, &
uniCh¨
,

964 &
œ°C⁄vîãrIndex
, 
groups_åõd
);

966 if(!
byãs_wrôãn
)

968 
byãs_wrôãn
 = 
	`LMBCSC⁄vîsi⁄W‹kî
 (
exåaInfo
,

969 
ULMBCS_GRP_EXCEPT
, 
pLMBCS
, &
uniCh¨
,

970 &
œ°C⁄vîãrIndex
, 
groups_åõd
);

972 if(!
byãs_wrôãn
)

974 
byãs_wrôãn
 = 
	`LMBCSC⁄vîsi⁄W‹kî
 (
exåaInfo
,

975 
exåaInfo
->
loˇÀC⁄vîãrIndex
, 
pLMBCS
, &
uniCh¨
,

976 &
œ°C⁄vîãrIndex
, 
groups_åõd
);

981 
byãs_wrôãn
 = 
	`LMBCSC⁄vîsi⁄W‹kî
 (
exåaInfo
,

982 
exåaInfo
->
loˇÀC⁄vîãrIndex
, 
pLMBCS
, &
uniCh¨
,

983 &
œ°C⁄vîãrIndex
, 
groups_åõd
);

987 i‡(!
byãs_wrôãn
 && (
exåaInfo
->
loˇÀC⁄vîãrIndex
Ë&& (
	`ULMBCS_AMBIGUOUS_MATCH
(
group
,ÉxtraInfo->localeConverterIndex)))

989 
byãs_wrôãn
 = (
öt32_t
)
	`LMBCSC⁄vîsi⁄W‹kî
 (
exåaInfo
,

990 
exåaInfo
->
loˇÀC⁄vîãrIndex
, 
pLMBCS
, &
uniCh¨
, &
œ°C⁄vîãrIndex
, 
groups_åõd
);

993 i‡(!
byãs_wrôãn
 && (
œ°C⁄vîãrIndex
Ë&& (
	`ULMBCS_AMBIGUOUS_MATCH
(
group
,ÜastConverterIndex)))

995 
byãs_wrôãn
 = (
öt32_t
)
	`LMBCSC⁄vîsi⁄W‹kî
 (
exåaInfo
,

996 
œ°C⁄vîãrIndex
, 
pLMBCS
, &
uniCh¨
, &œ°C⁄vîãrIndex, 
groups_åõd
);

998 i‡(!
byãs_wrôãn
)

1001 
ulmbcs_byã_t
 
gΩ_°¨t
;

1002 
ulmbcs_byã_t
 
gΩ_íd
;

1003 
ulmbcs_byã_t
 
gΩ_ix
;

1004 
gΩ_°¨t
 = (
ulmbcs_byã_t
)((
group
 =
ULMBCS_AMBIGUOUS_MBCS
)

1005 ? 
ULMBCS_DOUBLEOPTGROUP_START


1006 : 
ULMBCS_GRP_L1
);

1007 
gΩ_íd
 = (
ulmbcs_byã_t
)((
group
 =
ULMBCS_AMBIGUOUS_MBCS
)

1008 ? 
ULMBCS_GRP_LAST


1009 : 
ULMBCS_GRP_TH
);

1010 if(
group
 =
ULMBCS_AMBIGUOUS_ALL
)

1012 
gΩ_°¨t
 = 
ULMBCS_GRP_L1
;

1013 
gΩ_íd
 = 
ULMBCS_GRP_LAST
;

1015 
gΩ_ix
 = 
gΩ_°¨t
;

1016 
gΩ_ix
 <
gΩ_íd
 && !
byãs_wrôãn
;

1017 
gΩ_ix
++)

1019 i‡(
exåaInfo
->
O±GΩC⁄vîãr
 [
gΩ_ix
] && !
groups_åõd
 [grp_ix])

1021 
byãs_wrôãn
 = (
öt32_t
)
	`LMBCSC⁄vîsi⁄W‹kî
 (
exåaInfo
,

1022 
gΩ_ix
, 
pLMBCS
, &
uniCh¨
,

1023 &
œ°C⁄vîãrIndex
, 
groups_åõd
);

1028 i‡(!
byãs_wrôãn
 && 
gΩ_°¨t
 =
ULMBCS_GRP_L1
)

1030 
byãs_wrôãn
 = (
öt32_t
)
	`LMBCSC⁄vîsi⁄W‹kî
 (
exåaInfo
,

1031 
ULMBCS_GRP_EXCEPT
, 
pLMBCS
, &
uniCh¨
,

1032 &
œ°C⁄vîãrIndex
, 
groups_åõd
);

1036 i‡(!
byãs_wrôãn
)

1039 
pLMBCS
 +
	`LMBCSC⁄vîtUni
’LMBCS, 
uniCh¨
);

1040 
byãs_wrôãn
 = (
öt32_t
)(
pLMBCS
 - 
LMBCS
);

1046 
¨gs
->
sour˚
++;

1047 
pLMBCS
 = 
LMBCS
;

1048 
¨gs
->
èrgë
 <árgs->
èrgëLimô
 && 
byãs_wrôãn
--)

1050 *(
¨gs
->
èrgë
)++ = *
pLMBCS
++;

1051 i‡(
¨gs
->
off£ts
)

1053 *(
¨gs
->
off£ts
)++ = 
sour˚Index
;

1056 
sour˚Index
++;

1057 i‡(
byãs_wrôãn
 > 0)

1063 
uöt8_t
 * 
pEº‹Buf„r
 = 
¨gs
->
c⁄vîãr
->
ch¨Eº‹Buf„r
;

1064 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

1065 
¨gs
->
c⁄vîãr
->
ch¨Eº‹Buf„rLígth
 = (
öt8_t
)
byãs_wrôãn
;

1066 
byãs_wrôãn
--)

1068 *
pEº‹Buf„r
++ = *
pLMBCS
++;

1072 
exåaInfo
->
loˇÀC⁄vîãrIndex
 = 
OldC⁄vîãrIndex
;

1074 
	}
}

1081 
UCh¨


1082 
	$GëUniFromLMBCSUni
(c⁄° ** 
µLMBCSö
)

1084 
uöt8_t
 
HighCh
 = *(*
µLMBCSö
)++;

1085 
uöt8_t
 
LowCh
 = *(*
µLMBCSö
)++;

1087 i‡(
HighCh
 =
ULMBCS_UNICOMPATZERO
 )

1089 
HighCh
 = 
LowCh
;

1090 
LowCh
 = 0;

1092  (
UCh¨
)((
HighCh
 << 8Ë| 
LowCh
);

1093 
	}
}

1103 
	#CHECK_SOURCE_LIMIT
(
ödex
) \

1104 i‡(
¨gs
->
sour˚
+
ödex
 >árgs->
sour˚Limô
){\

1105 *
îr
 = 
U_TRUNCATED_CHAR_FOUND
;\

1106 
¨gs
->
sour˚
 =árgs->
sour˚Limô
;\

1107  0xffff;}

	)

1111 
UCh¨32


1112 
	$_LMBCSGëNextUCh¨W‹kî
(
UC⁄vîãrToUnicodeArgs
* 
¨gs
,

1113 
UEº‹Code
* 
îr
)

1115 
UCh¨32
 
uniCh¨
 = 0;

1116 
ulmbcs_byã_t
 
CurByã
;

1119 i‡(
¨gs
->
sour˚
 >¨gs->
sour˚Limô
)

1121 *
îr
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1125 
CurByã
 = *((
ulmbcs_byã_t
 *Ë(
¨gs
->
sour˚
++));

1139 if(((
CurByã
 > 
ULMBCS_C0END
Ë&& (CurByã < 
ULMBCS_C1START
))

1140 || (
CurByã
 == 0)

1141 || 
CurByã
 =
ULMBCS_HT
 || CurByã =
ULMBCS_CR


1142 || 
CurByã
 =
ULMBCS_LF
 || CurByã =
ULMBCS_123SYSTEMRANGE
)

1144 
uniCh¨
 = 
CurByã
;

1148 
UC⁄vîãrD©aLMBCS
 * 
exåaInfo
;

1149 
ulmbcs_byã_t
 
group
;

1150 
UC⁄vîãrSh¨edD©a
 *
˙v
;

1152 i‡(
CurByã
 =
ULMBCS_GRP_CTRL
)

1154 
ulmbcs_byã_t
 
C0C1byã
;

1155 
	`CHECK_SOURCE_LIMIT
(1);

1156 
C0C1byã
 = *(
¨gs
->
sour˚
)++;

1157 
uniCh¨
 = (
C0C1byã
 < 
ULMBCS_C1START
Ë? C0C1byã - 
ULMBCS_CTRLOFFSET
 : C0C1byte;

1160 i‡(
CurByã
 =
ULMBCS_GRP_UNICODE
)

1162 
	`CHECK_SOURCE_LIMIT
(2);

1165  
	`GëUniFromLMBCSUni
(&(
¨gs
->
sour˚
));

1167 i‡(
CurByã
 <
ULMBCS_CTRLOFFSET
)

1169 
group
 = 
CurByã
;

1170 
exåaInfo
 = (
UC⁄vîãrD©aLMBCS
 *Ë
¨gs
->
c⁄vîãr
->extraInfo;

1171 i‡(
group
 > 
ULMBCS_GRP_LAST
 || (
˙v
 = 
exåaInfo
->
O±GΩC⁄vîãr
[group]Ë=
NULL
)

1174 *
îr
 = 
U_INVALID_CHAR_FOUND
;

1176 i‡(
group
 >
ULMBCS_DOUBLEOPTGROUP_START
)

1179 
	`CHECK_SOURCE_LIMIT
(2);

1182 i‡(*
¨gs
->
sour˚
 =
group
) {

1184 ++
¨gs
->
sour˚
;

1185 
uniCh¨
 = 
	`u˙v_MBCSSim∂eGëNextUCh¨
(
˙v
, 
¨gs
->
sour˚
, 1, 
FALSE
);

1186 ++
¨gs
->
sour˚
;

1189 
uniCh¨
 = 
	`u˙v_MBCSSim∂eGëNextUCh¨
(
˙v
, 
¨gs
->
sour˚
, 2, 
FALSE
);

1190 
¨gs
->
sour˚
 += 2;

1194 
	`CHECK_SOURCE_LIMIT
(1);

1195 
CurByã
 = *(
¨gs
->
sour˚
)++;

1197 i‡(
CurByã
 >
ULMBCS_C1START
)

1199 
uniCh¨
 = 
	`_MBCS_SINGLE_SIMPLE_GET_NEXT_BMP
(
˙v
, 
CurByã
);

1206 
byãs
[2];

1208 
exåaInfo
 = (
UC⁄vîãrD©aLMBCS
 *Ë
¨gs
->
c⁄vîãr
->extraInfo;

1209 
˙v
 = 
exåaInfo
->
O±GΩC⁄vîãr
 [
ULMBCS_GRP_EXCEPT
];

1212 
byãs
[0] = 
group
;

1213 
byãs
[1] = 
CurByã
;

1214 
uniCh¨
 = 
	`u˙v_MBCSSim∂eGëNextUCh¨
(
˙v
, 
byãs
, 2, 
FALSE
);

1218 i‡(
CurByã
 >
ULMBCS_C1START
)

1220 
exåaInfo
 = (
UC⁄vîãrD©aLMBCS
 *Ë
¨gs
->
c⁄vîãr
->extraInfo;

1221 
group
 = 
exåaInfo
->
O±Group
;

1222 
˙v
 = 
exåaInfo
->
O±GΩC⁄vîãr
[
group
];

1223 i‡(
group
 >
ULMBCS_DOUBLEOPTGROUP_START
)

1225 i‡(!
	`u˙v_MBCSIsLódByã
(
˙v
, 
CurByã
))

1227 
	`CHECK_SOURCE_LIMIT
(0);

1230 
uniCh¨
 = 
	`u˙v_MBCSSim∂eGëNextUCh¨
(
˙v
, 
¨gs
->
sour˚
 - 1, 1, 
FALSE
);

1234 
	`CHECK_SOURCE_LIMIT
(1);

1236 
uniCh¨
 = 
	`u˙v_MBCSSim∂eGëNextUCh¨
(
˙v
, 
¨gs
->
sour˚
 - 1, 2, 
FALSE
);

1237 ++
¨gs
->
sour˚
;

1242 
uniCh¨
 = 
	`_MBCS_SINGLE_SIMPLE_GET_NEXT_BMP
(
˙v
, 
CurByã
);

1246  
uniCh¨
;

1247 
	}
}

1254 
	$_LMBCSToUnicodeWôhOff£ts
(
UC⁄vîãrToUnicodeArgs
* 
¨gs
,

1255 
UEº‹Code
* 
îr
)

1257 
LMBCS
 [
ULMBCS_CHARSIZE_MAX
];

1258 
UCh¨
 
uniCh¨
;

1259 c⁄° * 
ßveSour˚
;

1260 c⁄° * 
pSèπLMBCS
 = 
¨gs
->
sour˚
;

1261 c⁄° * 
îrSour˚
 = 
NULL
;

1262 
öt8_t
 
ßvebyãs
 = 0;

1265 
	`U_SUCCESS
(*
îr
Ë&& 
¨gs
->
sour˚Limô
 >árgs->
sour˚
 &&árgs->
èrgëLimô
 >árgs->
èrgë
)

1267 
ßveSour˚
 = 
¨gs
->
sour˚
;

1269 i‡(
¨gs
->
c⁄vîãr
->
toULígth
)

1271 c⁄° *
ßveSour˚Limô
;

1272 
size_t
 
size_ﬁd
 = 
¨gs
->
c⁄vîãr
->
toULígth
;

1275 
size_t
 
size_√w_maybe_1
 = (
LMBCS
Ë- 
size_ﬁd
;

1276 
size_t
 
size_√w_maybe_2
 = 
¨gs
->
sour˚Limô
 -árgs->
sour˚
;

1277 
size_t
 
size_√w
 = (
size_√w_maybe_1
 < 
size_√w_maybe_2
) ? size_new_maybe_1 : size_new_maybe_2;

1280 
	`u¥v_mem˝y
(
LMBCS
, 
¨gs
->
c⁄vîãr
->
toUByãs
, 
size_ﬁd
);

1281 
	`u¥v_mem˝y
(
LMBCS
 + 
size_ﬁd
, 
¨gs
->
sour˚
, 
size_√w
);

1282 
ßveSour˚Limô
 = 
¨gs
->
sour˚Limô
;

1283 
¨gs
->
sour˚
 = 
îrSour˚
 = 
LMBCS
;

1284 
¨gs
->
sour˚Limô
 = 
LMBCS
+
size_ﬁd
+
size_√w
;

1285 
ßvebyãs
 = (
öt8_t
)(
size_ﬁd
+
size_√w
);

1286 
uniCh¨
 = (
UCh¨
Ë
	`_LMBCSGëNextUCh¨W‹kî
(
¨gs
, 
îr
);

1287 
¨gs
->
sour˚
 = 
ßveSour˚
 + (◊rgs->sour˚ - 
LMBCS
Ë- 
size_ﬁd
);

1288 
¨gs
->
sour˚Limô
 = 
ßveSour˚Limô
;

1290 i‡(*
îr
 =
U_TRUNCATED_CHAR_FOUND
)

1293 
¨gs
->
c⁄vîãr
->
toULígth
 = 
ßvebyãs
;

1294 
	`u¥v_mem˝y
(
¨gs
->
c⁄vîãr
->
toUByãs
, 
LMBCS
, 
ßvebyãs
);

1295 
¨gs
->
sour˚
 =árgs->
sour˚Limô
;

1296 *
îr
 = 
U_ZERO_ERROR
;

1302 
¨gs
->
c⁄vîãr
->
toULígth
 = 0;

1307 
îrSour˚
 = 
ßveSour˚
;

1308 
uniCh¨
 = (
UCh¨
Ë
	`_LMBCSGëNextUCh¨W‹kî
(
¨gs
, 
îr
);

1309 
ßvebyãs
 = (
öt8_t
)(
¨gs
->
sour˚
 - 
ßveSour˚
);

1311 i‡(
	`U_SUCCESS
(*
îr
))

1313 i‡(
uniCh¨
 < 0xfffe)

1315 *(
¨gs
->
èrgë
)++ = 
uniCh¨
;

1316 if(
¨gs
->
off£ts
)

1318 *(
¨gs
->
off£ts
)++ = (
öt32_t
)(
ßveSour˚
 - 
pSèπLMBCS
);

1321 i‡(
uniCh¨
 == 0xfffe)

1323 *
îr
 = 
U_INVALID_CHAR_FOUND
;

1327 *
îr
 = 
U_ILLEGAL_CHAR_FOUND
;

1332 i‡(
	`U_SUCCESS
(*
îr
Ë&& 
¨gs
->
sour˚Limô
 >árgs->
sour˚
 &&árgs->
èrgëLimô
 <¨gs->
èrgë
)

1334 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

1336 i‡(
	`U_FAILURE
(*
îr
))

1339 
¨gs
->
c⁄vîãr
->
toULígth
 = 
ßvebyãs
;

1340 i‡(
ßvebyãs
 > 0) {

1341 
	`u¥v_mem˝y
(
¨gs
->
c⁄vîãr
->
toUByãs
, 
îrSour˚
, 
ßvebyãs
);

1343 i‡(*
îr
 =
U_TRUNCATED_CHAR_FOUND
) {

1344 *
îr
 = 
U_ZERO_ERROR
;

1347 
	}
}

1350 
	$DEFINE_LMBCS_OPEN
(1)

1351 
	$DEFINE_LMBCS_OPEN
(2)

1352 
	$DEFINE_LMBCS_OPEN
(3)

1353 
	$DEFINE_LMBCS_OPEN
(4)

1354 
	$DEFINE_LMBCS_OPEN
(5)

1355 
	$DEFINE_LMBCS_OPEN
(6)

1356 
	$DEFINE_LMBCS_OPEN
(8)

1357 
	$DEFINE_LMBCS_OPEN
(11)

1358 
	$DEFINE_LMBCS_OPEN
(16)

1359 
	$DEFINE_LMBCS_OPEN
(17)

1360 
	$DEFINE_LMBCS_OPEN
(18)

1361 
	$DEFINE_LMBCS_OPEN
(19)

1364 
	$DECLARE_LMBCS_DATA
(1)

1365 
	$DECLARE_LMBCS_DATA
(2)

1366 
	$DECLARE_LMBCS_DATA
(3)

1367 
	$DECLARE_LMBCS_DATA
(4)

1368 
	$DECLARE_LMBCS_DATA
(5)

1369 
	$DECLARE_LMBCS_DATA
(6)

1370 
	$DECLARE_LMBCS_DATA
(8)

1371 
	$DECLARE_LMBCS_DATA
(11)

1372 
	$DECLARE_LMBCS_DATA
(16)

1373 
	$DECLARE_LMBCS_DATA
(17)

1374 
	$DECLARE_LMBCS_DATA
(18)

1375 
	$DECLARE_LMBCS_DATA
(19)

	@ucnv_set.c

21 
	~"unicode/uty≥s.h
"

22 
	~"unicode/u£t.h
"

23 
	~"unicode/u˙v.h
"

24 
	~"u˙v_bld.h
"

25 
	~"u£t_imp.h
"

27 #i‡!
UCONFIG_NO_CONVERSION


29 
U_CAPI
 
U_EXPORT2


30 
	$u˙v_gëUnicodeSë
(c⁄° 
UC⁄vîãr
 *
˙v
,

31 
USë
 *
£tFûlIn
,

32 
UC⁄vîãrUnicodeSë
 
whichSë
,

33 
UEº‹Code
 *
pEº‹Code
) {

35 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

38 if(
˙v
==
NULL
 || 
£tFûlIn
==NULL || 
whichSë
<
UCNV_ROUNDTRIP_SET
 || 
UCNV_SET_COUNT
<=whichSet) {

39 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

44 if(
˙v
->
sh¨edD©a
->
im∂
->
gëUnicodeSë
==
NULL
) {

45 *
pEº‹Code
=
U_UNSUPPORTED_ERROR
;

50 
USëAddî
 
ß
={

51 
NULL
,

52 
u£t_add
,

53 
u£t_addR™ge
,

54 
u£t_addSåög
,

55 
u£t_ªmove
,

56 
u£t_ªmoveR™ge


58 
ß
.
£t
=
£tFûlIn
;

61 
	`u£t_˛ór
(
£tFûlIn
);

64 
˙v
->
sh¨edD©a
->
im∂
->
	`gëUnicodeSë
(˙v, &
ß
, 
whichSë
, 
pEº‹Code
);

66 
	}
}

	@ucnv_u16.c

17 
	~"unicode/uty≥s.h
"

19 #i‡!
UCONFIG_NO_CONVERSION


21 
	~"unicode/u˙v.h
"

22 
	~"u˙v_bld.h
"

23 
	~"u˙v_˙v.h
"

24 
	~"cmem‹y.h
"

27 
	mUCNV_NEED_TO_WRITE_BOM
=1

35 
_UTF16ToUnicodeWôhOff£ts
(
UC⁄vîãrToUnicodeArgs
 *
pArgs
,

36 
UEº‹Code
 *
pEº‹Code
);

40 #i‡
U_IS_BIG_ENDIAN


41 
	#_UTF16PEFromUnicodeWôhOff£ts
 
_UTF16BEFromUnicodeWôhOff£ts


	)

43 
	#_UTF16PEFromUnicodeWôhOff£ts
 
_UTF16LEFromUnicodeWôhOff£ts


	)

48 
	$_UTF16BEFromUnicodeWôhOff£ts
(
UC⁄vîãrFromUnicodeArgs
 *
pArgs
,

49 
UEº‹Code
 *
pEº‹Code
) {

50 
UC⁄vîãr
 *
˙v
;

51 c⁄° 
UCh¨
 *
sour˚
;

52 *
èrgë
;

53 
öt32_t
 *
off£ts
;

55 
uöt32_t
 
èrgëC≠acôy
, 
Àngth
, 
sour˚Index
;

56 
UCh¨
 
c
, 
åaû
;

57 
ovîÊow
[4];

59 
sour˚
=
pArgs
->source;

60 
Àngth
=(
öt32_t
)(
pArgs
->
sour˚Limô
-
sour˚
);

61 if(
Àngth
<=0) {

66 
˙v
=
pArgs
->
c⁄vîãr
;

69 if(
˙v
->
‰omUnicodeSètus
==
UCNV_NEED_TO_WRITE_BOM
) {

70 c⁄° 
bom
[]={ ()0xfe, ()0xff };

71 
	`u˙v_‰omUWrôeByãs
(
˙v
,

72 
bom
, 2,

73 &
pArgs
->
èrgë
,ÖArgs->
èrgëLimô
,

74 &
pArgs
->
off£ts
, -1,

75 
pEº‹Code
);

76 
˙v
->
‰omUnicodeSètus
=0;

79 
èrgë
=
pArgs
->target;

80 if(
èrgë
 >
pArgs
->
èrgëLimô
) {

81 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

85 
èrgëC≠acôy
=(
uöt32_t
)(
pArgs
->
èrgëLimô
-
èrgë
);

86 
off£ts
=
pArgs
->offsets;

87 
sour˚Index
=0;

91 if((
c
=(
UCh¨
)
˙v
->
‰omUCh¨32
)!=0 && 
	`U16_IS_TRAIL
(
åaû
=*
sour˚
Ë&& 
èrgëC≠acôy
>=4) {

93 ++
sour˚
;

94 --
Àngth
;

95 
èrgë
[0]=(
uöt8_t
)(
c
>>8);

96 
èrgë
[1]=(
uöt8_t
)
c
;

97 
èrgë
[2]=(
uöt8_t
)(
åaû
>>8);

98 
èrgë
[3]=(
uöt8_t
)
åaû
;

99 
èrgë
+=4;

100 
èrgëC≠acôy
-=4;

101 if(
off£ts
!=
NULL
) {

102 *
off£ts
++=-1;

103 *
off£ts
++=-1;

104 *
off£ts
++=-1;

105 *
off£ts
++=-1;

107 
sour˚Index
=1;

108 
˙v
->
‰omUCh¨32
=
c
=0;

111 if(
c
==0) {

113 
uöt32_t
 
cou¡
=2*
Àngth
;

114 if(
cou¡
>
èrgëC≠acôy
) {

115 
cou¡
=
èrgëC≠acôy
&~1;

118 
èrgëC≠acôy
-=
cou¡
;

119 
cou¡
>>=1;

120 
Àngth
-=
cou¡
;

122 if(
off£ts
==
NULL
) {

123 
cou¡
>0) {

124 
c
=*
sour˚
++;

125 if(
	`U16_IS_SINGLE
(
c
)) {

126 
èrgë
[0]=(
uöt8_t
)(
c
>>8);

127 
èrgë
[1]=(
uöt8_t
)
c
;

128 
èrgë
+=2;

129 } if(
	`U16_IS_SURROGATE_LEAD
(
c
Ë&& 
cou¡
>=2 && 
	`U16_IS_TRAIL
(
åaû
=*
sour˚
)) {

130 ++
sour˚
;

131 --
cou¡
;

132 
èrgë
[0]=(
uöt8_t
)(
c
>>8);

133 
èrgë
[1]=(
uöt8_t
)
c
;

134 
èrgë
[2]=(
uöt8_t
)(
åaû
>>8);

135 
èrgë
[3]=(
uöt8_t
)
åaû
;

136 
èrgë
+=4;

140 --
cou¡
;

143 
cou¡
>0) {

144 
c
=*
sour˚
++;

145 if(
	`U16_IS_SINGLE
(
c
)) {

146 
èrgë
[0]=(
uöt8_t
)(
c
>>8);

147 
èrgë
[1]=(
uöt8_t
)
c
;

148 
èrgë
+=2;

149 *
off£ts
++=
sour˚Index
;

150 *
off£ts
++=
sour˚Index
++;

151 } if(
	`U16_IS_SURROGATE_LEAD
(
c
Ë&& 
cou¡
>=2 && 
	`U16_IS_TRAIL
(
åaû
=*
sour˚
)) {

152 ++
sour˚
;

153 --
cou¡
;

154 
èrgë
[0]=(
uöt8_t
)(
c
>>8);

155 
èrgë
[1]=(
uöt8_t
)
c
;

156 
èrgë
[2]=(
uöt8_t
)(
åaû
>>8);

157 
èrgë
[3]=(
uöt8_t
)
åaû
;

158 
èrgë
+=4;

159 *
off£ts
++=
sour˚Index
;

160 *
off£ts
++=
sour˚Index
;

161 *
off£ts
++=
sour˚Index
;

162 *
off£ts
++=
sour˚Index
;

163 
sour˚Index
+=2;

167 --
cou¡
;

171 if(
cou¡
==0) {

173 if(
Àngth
>0 && 
èrgëC≠acôy
>0) {

180 if(
	`U16_IS_SINGLE
(
c
=*
sour˚
++)) {

181 
ovîÊow
[0]=()(
c
>>8);

182 
ovîÊow
[1]=()
c
;

183 
Àngth
=2;

184 
c
=0;

188 
Àngth
=0;

189 
c
=0;

193 
èrgëC≠acôy
+=2*
cou¡
;

196 
Àngth
=0;

199 if(
c
!=0) {

205 
Àngth
=0;

206 if(
	`U16_IS_SURROGATE_LEAD
(
c
)) {

207 if(
sour˚
<
pArgs
->
sour˚Limô
) {

208 if(
	`U16_IS_TRAIL
(
åaû
=*
sour˚
)) {

210 ++
sour˚
;

211 
ovîÊow
[0]=()(
c
>>8);

212 
ovîÊow
[1]=()
c
;

213 
ovîÊow
[2]=()(
åaû
>>8);

214 
ovîÊow
[3]=()
åaû
;

215 
Àngth
=4;

216 
c
=0;

219 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

226 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

228 
˙v
->
‰omUCh¨32
=
c
;

231 if(
Àngth
>0) {

233 
	`u˙v_‰omUWrôeByãs
(
˙v
,

234 
ovîÊow
, 
Àngth
,

235 (**)&
èrgë
, 
pArgs
->
èrgëLimô
,

236 &
off£ts
, 
sour˚Index
,

237 
pEº‹Code
);

238 
èrgëC≠acôy
=(
uöt32_t
)(
pArgs
->
èrgëLimô
-(*)
èrgë
);

241 if(
	`U_SUCCESS
(*
pEº‹Code
Ë&& 
sour˚
<
pArgs
->
sour˚Limô
 && 
èrgëC≠acôy
==0) {

242 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

246 
pArgs
->
sour˚
=source;

247 
pArgs
->
èrgë
=(*)target;

248 
pArgs
->
off£ts
=offsets;

249 
	}
}

252 
	$_UTF16BEToUnicodeWôhOff£ts
(
UC⁄vîãrToUnicodeArgs
 *
pArgs
,

253 
UEº‹Code
 *
pEº‹Code
) {

254 
UC⁄vîãr
 *
˙v
;

255 c⁄° 
uöt8_t
 *
sour˚
;

256 
UCh¨
 *
èrgë
;

257 
öt32_t
 *
off£ts
;

259 
uöt32_t
 
èrgëC≠acôy
, 
Àngth
, 
cou¡
, 
sour˚Index
;

260 
UCh¨
 
c
, 
åaû
;

262 if(
pArgs
->
c⁄vîãr
->
mode
<8) {

263 
	`_UTF16ToUnicodeWôhOff£ts
(
pArgs
, 
pEº‹Code
);

267 
˙v
=
pArgs
->
c⁄vîãr
;

268 
sour˚
=(c⁄° 
uöt8_t
 *)
pArgs
->source;

269 
Àngth
=(
öt32_t
)((c⁄° 
uöt8_t
 *)
pArgs
->
sour˚Limô
-
sour˚
);

270 if(
Àngth
<=0 && 
˙v
->
toUnicodeSètus
==0) {

275 
èrgë
=
pArgs
->target;

276 if(
èrgë
 >
pArgs
->
èrgëLimô
) {

277 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

281 
èrgëC≠acôy
=(
uöt32_t
)(
pArgs
->
èrgëLimô
-
èrgë
);

282 
off£ts
=
pArgs
->offsets;

283 
sour˚Index
=0;

284 
c
=0;

287 if(
˙v
->
toUnicodeSètus
!=0) {

294 
˙v
->
toUByãs
[0]=(
uöt8_t
)˙v->
toUnicodeSètus
;

295 
˙v
->
toULígth
=1;

296 
˙v
->
toUnicodeSètus
=0;

298 if((
cou¡
=
˙v
->
toULígth
)!=0) {

299 
uöt8_t
 *
p
=
˙v
->
toUByãs
;

301 
p
[
cou¡
++]=*
sour˚
++;

302 ++
sour˚Index
;

303 --
Àngth
;

304 if(
cou¡
==2) {

305 
c
=((
UCh¨
)
p
[0]<<8)|p[1];

306 if(
	`U16_IS_SINGLE
(
c
)) {

308 *
èrgë
++=
c
;

309 if(
off£ts
!=
NULL
) {

310 *
off£ts
++=-1;

312 --
èrgëC≠acôy
;

313 
cou¡
=0;

314 
c
=0;

316 } if(
	`U16_IS_SURROGATE_LEAD
(
c
)) {

318 
c
=0;

323 } if(
cou¡
==4) {

324 
c
=((
UCh¨
)
p
[0]<<8)|p[1];

325 
åaû
=((
UCh¨
)
p
[2]<<8)|p[3];

326 if(
	`U16_IS_TRAIL
(
åaû
)) {

328 *
èrgë
++=
c
;

329 if(
èrgëC≠acôy
>=2) {

330 *
èrgë
++=
åaû
;

331 if(
off£ts
!=
NULL
) {

332 *
off£ts
++=-1;

333 *
off£ts
++=-1;

335 
èrgëC≠acôy
-=2;

337 
èrgëC≠acôy
=0;

338 
˙v
->
UCh¨Eº‹Buf„r
[0]=
åaû
;

339 
˙v
->
UCh¨Eº‹Buf„rLígth
=1;

340 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

342 
cou¡
=0;

343 
c
=0;

347 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

350 if(((c⁄° 
uöt8_t
 *)
pArgs
->
sour˚
-source)>=2) {

351 
sour˚
-=2;

358 
˙v
->
toUnicodeSètus
=0x100|
p
[2];

359 --
sour˚
;

361 
˙v
->
toULígth
=2;

364 
pArgs
->
sour˚
=(const *)source;

365 
pArgs
->
èrgë
=target;

366 
pArgs
->
off£ts
=offsets;

370 } 
Àngth
>0);

371 
˙v
->
toULígth
=(
öt8_t
)
cou¡
;

375 
cou¡
=2*
èrgëC≠acôy
;

376 if(
cou¡
>
Àngth
) {

377 
cou¡
=
Àngth
&~1;

379 if(
c
==0 && 
cou¡
>0) {

380 
Àngth
-=
cou¡
;

381 
cou¡
>>=1;

382 
èrgëC≠acôy
-=
cou¡
;

383 if(
off£ts
==
NULL
) {

385 
c
=((
UCh¨
)
sour˚
[0]<<8)|source[1];

386 
sour˚
+=2;

387 if(
	`U16_IS_SINGLE
(
c
)) {

388 *
èrgë
++=
c
;

389 } if(
	`U16_IS_SURROGATE_LEAD
(
c
Ë&& 
cou¡
>=2 &&

390 
	`U16_IS_TRAIL
(
åaû
=((
UCh¨
)
sour˚
[0]<<8)|source[1])

392 
sour˚
+=2;

393 --
cou¡
;

394 *
èrgë
++=
c
;

395 *
èrgë
++=
åaû
;

399 } --
cou¡
>0);

402 
c
=((
UCh¨
)
sour˚
[0]<<8)|source[1];

403 
sour˚
+=2;

404 if(
	`U16_IS_SINGLE
(
c
)) {

405 *
èrgë
++=
c
;

406 *
off£ts
++=
sour˚Index
;

407 
sour˚Index
+=2;

408 } if(
	`U16_IS_SURROGATE_LEAD
(
c
Ë&& 
cou¡
>=2 &&

409 
	`U16_IS_TRAIL
(
åaû
=((
UCh¨
)
sour˚
[0]<<8)|source[1])

411 
sour˚
+=2;

412 --
cou¡
;

413 *
èrgë
++=
c
;

414 *
èrgë
++=
åaû
;

415 *
off£ts
++=
sour˚Index
;

416 *
off£ts
++=
sour˚Index
;

417 
sour˚Index
+=4;

421 } --
cou¡
>0);

424 if(
cou¡
==0) {

426 
c
=0;

429 
Àngth
+=2*(
cou¡
-1);

430 
èrgëC≠acôy
+=
cou¡
;

434 if(
c
!=0) {

440 
˙v
->
toUByãs
[0]=(
uöt8_t
)(
c
>>8);

441 
˙v
->
toUByãs
[1]=(
uöt8_t
)
c
;

442 
˙v
->
toULígth
=2;

444 if(
	`U16_IS_SURROGATE_LEAD
(
c
)) {

445 if(
Àngth
>=2) {

446 if(
	`U16_IS_TRAIL
(
åaû
=((
UCh¨
)
sour˚
[0]<<8)|source[1])) {

448 
sour˚
+=2;

449 
Àngth
-=2;

450 *
èrgë
++=
c
;

451 if(
off£ts
!=
NULL
) {

452 *
off£ts
++=
sour˚Index
;

454 
˙v
->
UCh¨Eº‹Buf„r
[0]=
åaû
;

455 
˙v
->
UCh¨Eº‹Buf„rLígth
=1;

456 
˙v
->
toULígth
=0;

457 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

460 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

467 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

471 if(
	`U_SUCCESS
(*
pEº‹Code
)) {

473 if(
Àngth
>0) {

474 if(
èrgëC≠acôy
==0) {

475 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

478 
˙v
->
toUByãs
[˙v->
toULígth
++]=*
sour˚
++;

484 
pArgs
->
sour˚
=(const *)source;

485 
pArgs
->
èrgë
=target;

486 
pArgs
->
off£ts
=offsets;

487 
	}
}

489 
UCh¨32


490 
	$_UTF16BEGëNextUCh¨
(
UC⁄vîãrToUnicodeArgs
 *
pArgs
, 
UEº‹Code
 *
îr
) {

491 c⁄° 
uöt8_t
 *
s
, *
sour˚Limô
;

492 
UCh¨32
 
c
;

494 if(
pArgs
->
c⁄vîãr
->
mode
<8) {

495  
UCNV_GET_NEXT_UCHAR_USE_TO_U
;

498 
s
=(c⁄° 
uöt8_t
 *)
pArgs
->
sour˚
;

499 
sour˚Limô
=(c⁄° 
uöt8_t
 *)
pArgs
->sourceLimit;

501 if(
s
>=
sour˚Limô
) {

503 *
îr
=
U_INDEX_OUTOFBOUNDS_ERROR
;

507 if(
s
+2>
sour˚Limô
) {

509 
pArgs
->
c⁄vîãr
->
toUByãs
[0]=*
s
++;

510 
pArgs
->
c⁄vîãr
->
toULígth
=1;

511 
pArgs
->
sour˚
=(c⁄° *)
s
;

512 *
îr
 = 
U_TRUNCATED_CHAR_FOUND
;

517 
c
=((
UCh¨32
)*
s
<<8)|s[1];

518 
s
+=2;

521 if(
	`U_IS_SURROGATE
(
c
)) {

522 if(
	`U16_IS_SURROGATE_LEAD
(
c
)) {

523 if(
s
+2<=
sour˚Limô
) {

524 
UCh¨
 
åaû
;

527 
åaû
=((
UCh¨
)*
s
<<8)|s[1];

528 if(
	`U16_IS_TRAIL
(
åaû
)) {

529 
c
=
	`U16_GET_SUPPLEMENTARY
(c, 
åaû
);

530 
s
+=2;

533 
c
=-2;

537 
uöt8_t
 *
byãs
=
pArgs
->
c⁄vîãr
->
toUByãs
;

538 
s
-=2;

539 
pArgs
->
c⁄vîãr
->
toULígth
=(
öt8_t
)(
sour˚Limô
-
s
);

541 *
byãs
++=*
s
++;

542 } 
s
<
sour˚Limô
);

544 
c
=0xffff;

545 *
îr
=
U_TRUNCATED_CHAR_FOUND
;

549 
c
=-2;

552 if(
c
<0) {

554 
uöt8_t
 *
byãs
=
pArgs
->
c⁄vîãr
->
toUByãs
;

555 
pArgs
->
c⁄vîãr
->
toULígth
=2;

556 *
byãs
=*(
s
-2);

557 
byãs
[1]=*(
s
-1);

559 
c
=0xffff;

560 *
îr
=
U_ILLEGAL_CHAR_FOUND
;

564 
pArgs
->
sour˚
=(c⁄° *)
s
;

565  
c
;

566 
	}
}

569 
	$_UTF16BERe£t
(
UC⁄vîãr
 *
˙v
, 
UC⁄vîãrRe£tChoi˚
 
choi˚
) {

570 if(
choi˚
<=
UCNV_RESET_TO_UNICODE
) {

572 if(
	`UCNV_GET_VERSION
(
˙v
)==0) {

573 
˙v
->
mode
=8;

575 
˙v
->
mode
=0;

578 if(
choi˚
!=
UCNV_RESET_TO_UNICODE
 && 
	`UCNV_GET_VERSION
(
˙v
)==1) {

580 
˙v
->
‰omUnicodeSètus
=
UCNV_NEED_TO_WRITE_BOM
;

582 
	}
}

585 
	$_UTF16BEO≥n
(
UC⁄vîãr
 *
˙v
,

586 
UC⁄vîãrLﬂdArgs
 *
pArgs
,

587 
UEº‹Code
 *
pEº‹Code
) {

588 if(
	`UCNV_GET_VERSION
(
˙v
)<=1) {

589 
	`_UTF16BERe£t
(
˙v
, 
UCNV_RESET_BOTH
);

591 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

593 
	}
}

596 
	$_UTF16BEGëName
(c⁄° 
UC⁄vîãr
 *
˙v
) {

597 if(
	`UCNV_GET_VERSION
(
˙v
)==0) {

602 
	}
}

604 c⁄° 
UC⁄vîãrIm∂
 
	g_UTF16BEIm∂
={

605 
UCNV_UTF16_BigEndün
,

607 
NULL
,

608 
NULL
,

610 
_UTF16BEO≥n
,

611 
NULL
,

612 
_UTF16BERe£t
,

614 
_UTF16BEToUnicodeWôhOff£ts
,

615 
_UTF16BEToUnicodeWôhOff£ts
,

616 
_UTF16BEFromUnicodeWôhOff£ts
,

617 
_UTF16BEFromUnicodeWôhOff£ts
,

618 
_UTF16BEGëNextUCh¨
,

620 
NULL
,

621 
_UTF16BEGëName
,

622 
NULL
,

623 
NULL
,

624 
u˙v_gëN⁄Suºog©eUnicodeSë


627 c⁄° 
UC⁄vîãrSèticD©a
 
	g_UTF16BESèticD©a
={

628 (
UC⁄vîãrSèticD©a
),

630 1200, 
UCNV_IBM
, 
UCNV_UTF16_BigEndün
, 2, 2,

631 { 0xff, 0xfd, 0, 0 },2,
FALSE
,FALSE,

638 c⁄° 
UC⁄vîãrSh¨edD©a
 
	g_UTF16BED©a
={

639 (
UC⁄vîãrSh¨edD©a
), ~((
uöt32_t
) 0),

640 
NULL
, NULL, &
_UTF16BESèticD©a
, 
FALSE
, &
_UTF16BEIm∂
,

647 
	$_UTF16LEFromUnicodeWôhOff£ts
(
UC⁄vîãrFromUnicodeArgs
 *
pArgs
,

648 
UEº‹Code
 *
pEº‹Code
) {

649 
UC⁄vîãr
 *
˙v
;

650 c⁄° 
UCh¨
 *
sour˚
;

651 *
èrgë
;

652 
öt32_t
 *
off£ts
;

654 
uöt32_t
 
èrgëC≠acôy
, 
Àngth
, 
sour˚Index
;

655 
UCh¨
 
c
, 
åaû
;

656 
ovîÊow
[4];

658 
sour˚
=
pArgs
->source;

659 
Àngth
=(
öt32_t
)(
pArgs
->
sour˚Limô
-
sour˚
);

660 if(
Àngth
<=0) {

665 
˙v
=
pArgs
->
c⁄vîãr
;

668 if(
˙v
->
‰omUnicodeSètus
==
UCNV_NEED_TO_WRITE_BOM
) {

669 c⁄° 
bom
[]={ ()0xff, ()0xfe };

670 
	`u˙v_‰omUWrôeByãs
(
˙v
,

671 
bom
, 2,

672 &
pArgs
->
èrgë
,ÖArgs->
èrgëLimô
,

673 &
pArgs
->
off£ts
, -1,

674 
pEº‹Code
);

675 
˙v
->
‰omUnicodeSètus
=0;

678 
èrgë
=
pArgs
->target;

679 if(
èrgë
 >
pArgs
->
èrgëLimô
) {

680 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

684 
èrgëC≠acôy
=(
uöt32_t
)(
pArgs
->
èrgëLimô
-pArgs->
èrgë
);

685 
off£ts
=
pArgs
->offsets;

686 
sour˚Index
=0;

690 if((
c
=(
UCh¨
)
˙v
->
‰omUCh¨32
)!=0 && 
	`U16_IS_TRAIL
(
åaû
=*
sour˚
Ë&& 
èrgëC≠acôy
>=4) {

692 ++
sour˚
;

693 --
Àngth
;

694 
èrgë
[0]=(
uöt8_t
)
c
;

695 
èrgë
[1]=(
uöt8_t
)(
c
>>8);

696 
èrgë
[2]=(
uöt8_t
)
åaû
;

697 
èrgë
[3]=(
uöt8_t
)(
åaû
>>8);

698 
èrgë
+=4;

699 
èrgëC≠acôy
-=4;

700 if(
off£ts
!=
NULL
) {

701 *
off£ts
++=-1;

702 *
off£ts
++=-1;

703 *
off£ts
++=-1;

704 *
off£ts
++=-1;

706 
sour˚Index
=1;

707 
˙v
->
‰omUCh¨32
=
c
=0;

710 if(
c
==0) {

712 
uöt32_t
 
cou¡
=2*
Àngth
;

713 if(
cou¡
>
èrgëC≠acôy
) {

714 
cou¡
=
èrgëC≠acôy
&~1;

717 
èrgëC≠acôy
-=
cou¡
;

718 
cou¡
>>=1;

719 
Àngth
-=
cou¡
;

721 if(
off£ts
==
NULL
) {

722 
cou¡
>0) {

723 
c
=*
sour˚
++;

724 if(
	`U16_IS_SINGLE
(
c
)) {

725 
èrgë
[0]=(
uöt8_t
)
c
;

726 
èrgë
[1]=(
uöt8_t
)(
c
>>8);

727 
èrgë
+=2;

728 } if(
	`U16_IS_SURROGATE_LEAD
(
c
Ë&& 
cou¡
>=2 && 
	`U16_IS_TRAIL
(
åaû
=*
sour˚
)) {

729 ++
sour˚
;

730 --
cou¡
;

731 
èrgë
[0]=(
uöt8_t
)
c
;

732 
èrgë
[1]=(
uöt8_t
)(
c
>>8);

733 
èrgë
[2]=(
uöt8_t
)
åaû
;

734 
èrgë
[3]=(
uöt8_t
)(
åaû
>>8);

735 
èrgë
+=4;

739 --
cou¡
;

742 
cou¡
>0) {

743 
c
=*
sour˚
++;

744 if(
	`U16_IS_SINGLE
(
c
)) {

745 
èrgë
[0]=(
uöt8_t
)
c
;

746 
èrgë
[1]=(
uöt8_t
)(
c
>>8);

747 
èrgë
+=2;

748 *
off£ts
++=
sour˚Index
;

749 *
off£ts
++=
sour˚Index
++;

750 } if(
	`U16_IS_SURROGATE_LEAD
(
c
Ë&& 
cou¡
>=2 && 
	`U16_IS_TRAIL
(
åaû
=*
sour˚
)) {

751 ++
sour˚
;

752 --
cou¡
;

753 
èrgë
[0]=(
uöt8_t
)
c
;

754 
èrgë
[1]=(
uöt8_t
)(
c
>>8);

755 
èrgë
[2]=(
uöt8_t
)
åaû
;

756 
èrgë
[3]=(
uöt8_t
)(
åaû
>>8);

757 
èrgë
+=4;

758 *
off£ts
++=
sour˚Index
;

759 *
off£ts
++=
sour˚Index
;

760 *
off£ts
++=
sour˚Index
;

761 *
off£ts
++=
sour˚Index
;

762 
sour˚Index
+=2;

766 --
cou¡
;

770 if(
cou¡
==0) {

772 if(
Àngth
>0 && 
èrgëC≠acôy
>0) {

779 if(
	`U16_IS_SINGLE
(
c
=*
sour˚
++)) {

780 
ovîÊow
[0]=()
c
;

781 
ovîÊow
[1]=()(
c
>>8);

782 
Àngth
=2;

783 
c
=0;

787 
Àngth
=0;

788 
c
=0;

792 
èrgëC≠acôy
+=2*
cou¡
;

795 
Àngth
=0;

798 if(
c
!=0) {

804 
Àngth
=0;

805 if(
	`U16_IS_SURROGATE_LEAD
(
c
)) {

806 if(
sour˚
<
pArgs
->
sour˚Limô
) {

807 if(
	`U16_IS_TRAIL
(
åaû
=*
sour˚
)) {

809 ++
sour˚
;

810 
ovîÊow
[0]=()
c
;

811 
ovîÊow
[1]=()(
c
>>8);

812 
ovîÊow
[2]=()
åaû
;

813 
ovîÊow
[3]=()(
åaû
>>8);

814 
Àngth
=4;

815 
c
=0;

818 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

825 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

827 
˙v
->
‰omUCh¨32
=
c
;

830 if(
Àngth
>0) {

832 
	`u˙v_‰omUWrôeByãs
(
˙v
,

833 
ovîÊow
, 
Àngth
,

834 &
èrgë
, 
pArgs
->
èrgëLimô
,

835 &
off£ts
, 
sour˚Index
,

836 
pEº‹Code
);

837 
èrgëC≠acôy
=(
uöt32_t
)(
pArgs
->
èrgëLimô
-(*)
èrgë
);

840 if(
	`U_SUCCESS
(*
pEº‹Code
Ë&& 
sour˚
<
pArgs
->
sour˚Limô
 && 
èrgëC≠acôy
==0) {

841 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

845 
pArgs
->
sour˚
=source;

846 
pArgs
->
èrgë
=target;

847 
pArgs
->
off£ts
=offsets;

848 
	}
}

851 
	$_UTF16LEToUnicodeWôhOff£ts
(
UC⁄vîãrToUnicodeArgs
 *
pArgs
,

852 
UEº‹Code
 *
pEº‹Code
) {

853 
UC⁄vîãr
 *
˙v
;

854 c⁄° 
uöt8_t
 *
sour˚
;

855 
UCh¨
 *
èrgë
;

856 
öt32_t
 *
off£ts
;

858 
uöt32_t
 
èrgëC≠acôy
, 
Àngth
, 
cou¡
, 
sour˚Index
;

859 
UCh¨
 
c
, 
åaû
;

861 if(
pArgs
->
c⁄vîãr
->
mode
<8) {

862 
	`_UTF16ToUnicodeWôhOff£ts
(
pArgs
, 
pEº‹Code
);

866 
˙v
=
pArgs
->
c⁄vîãr
;

867 
sour˚
=(c⁄° 
uöt8_t
 *)
pArgs
->source;

868 
Àngth
=(
öt32_t
)((c⁄° 
uöt8_t
 *)
pArgs
->
sour˚Limô
-
sour˚
);

869 if(
Àngth
<=0 && 
˙v
->
toUnicodeSètus
==0) {

874 
èrgë
=
pArgs
->target;

875 if(
èrgë
 >
pArgs
->
èrgëLimô
) {

876 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

880 
èrgëC≠acôy
=(
uöt32_t
)(
pArgs
->
èrgëLimô
-pArgs->
èrgë
);

881 
off£ts
=
pArgs
->offsets;

882 
sour˚Index
=0;

883 
c
=0;

886 if(
˙v
->
toUnicodeSètus
!=0) {

893 
˙v
->
toUByãs
[0]=(
uöt8_t
)˙v->
toUnicodeSètus
;

894 
˙v
->
toULígth
=1;

895 
˙v
->
toUnicodeSètus
=0;

897 if((
cou¡
=
˙v
->
toULígth
)!=0) {

898 
uöt8_t
 *
p
=
˙v
->
toUByãs
;

900 
p
[
cou¡
++]=*
sour˚
++;

901 ++
sour˚Index
;

902 --
Àngth
;

903 if(
cou¡
==2) {

904 
c
=((
UCh¨
)
p
[1]<<8)|p[0];

905 if(
	`U16_IS_SINGLE
(
c
)) {

907 *
èrgë
++=
c
;

908 if(
off£ts
!=
NULL
) {

909 *
off£ts
++=-1;

911 --
èrgëC≠acôy
;

912 
cou¡
=0;

913 
c
=0;

915 } if(
	`U16_IS_SURROGATE_LEAD
(
c
)) {

917 
c
=0;

922 } if(
cou¡
==4) {

923 
c
=((
UCh¨
)
p
[1]<<8)|p[0];

924 
åaû
=((
UCh¨
)
p
[3]<<8)|p[2];

925 if(
	`U16_IS_TRAIL
(
åaû
)) {

927 *
èrgë
++=
c
;

928 if(
èrgëC≠acôy
>=2) {

929 *
èrgë
++=
åaû
;

930 if(
off£ts
!=
NULL
) {

931 *
off£ts
++=-1;

932 *
off£ts
++=-1;

934 
èrgëC≠acôy
-=2;

936 
èrgëC≠acôy
=0;

937 
˙v
->
UCh¨Eº‹Buf„r
[0]=
åaû
;

938 
˙v
->
UCh¨Eº‹Buf„rLígth
=1;

939 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

941 
cou¡
=0;

942 
c
=0;

946 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

949 if(((c⁄° 
uöt8_t
 *)
pArgs
->
sour˚
-source)>=2) {

950 
sour˚
-=2;

957 
˙v
->
toUnicodeSètus
=0x100|
p
[2];

958 --
sour˚
;

960 
˙v
->
toULígth
=2;

963 
pArgs
->
sour˚
=(const *)source;

964 
pArgs
->
èrgë
=target;

965 
pArgs
->
off£ts
=offsets;

969 } 
Àngth
>0);

970 
˙v
->
toULígth
=(
öt8_t
)
cou¡
;

974 
cou¡
=2*
èrgëC≠acôy
;

975 if(
cou¡
>
Àngth
) {

976 
cou¡
=
Àngth
&~1;

978 if(
c
==0 && 
cou¡
>0) {

979 
Àngth
-=
cou¡
;

980 
cou¡
>>=1;

981 
èrgëC≠acôy
-=
cou¡
;

982 if(
off£ts
==
NULL
) {

984 
c
=((
UCh¨
)
sour˚
[1]<<8)|source[0];

985 
sour˚
+=2;

986 if(
	`U16_IS_SINGLE
(
c
)) {

987 *
èrgë
++=
c
;

988 } if(
	`U16_IS_SURROGATE_LEAD
(
c
Ë&& 
cou¡
>=2 &&

989 
	`U16_IS_TRAIL
(
åaû
=((
UCh¨
)
sour˚
[1]<<8)|source[0])

991 
sour˚
+=2;

992 --
cou¡
;

993 *
èrgë
++=
c
;

994 *
èrgë
++=
åaû
;

998 } --
cou¡
>0);

1001 
c
=((
UCh¨
)
sour˚
[1]<<8)|source[0];

1002 
sour˚
+=2;

1003 if(
	`U16_IS_SINGLE
(
c
)) {

1004 *
èrgë
++=
c
;

1005 *
off£ts
++=
sour˚Index
;

1006 
sour˚Index
+=2;

1007 } if(
	`U16_IS_SURROGATE_LEAD
(
c
Ë&& 
cou¡
>=2 &&

1008 
	`U16_IS_TRAIL
(
åaû
=((
UCh¨
)
sour˚
[1]<<8)|source[0])

1010 
sour˚
+=2;

1011 --
cou¡
;

1012 *
èrgë
++=
c
;

1013 *
èrgë
++=
åaû
;

1014 *
off£ts
++=
sour˚Index
;

1015 *
off£ts
++=
sour˚Index
;

1016 
sour˚Index
+=4;

1020 } --
cou¡
>0);

1023 if(
cou¡
==0) {

1025 
c
=0;

1028 
Àngth
+=2*(
cou¡
-1);

1029 
èrgëC≠acôy
+=
cou¡
;

1033 if(
c
!=0) {

1039 
˙v
->
toUByãs
[0]=(
uöt8_t
)
c
;

1040 
˙v
->
toUByãs
[1]=(
uöt8_t
)(
c
>>8);

1041 
˙v
->
toULígth
=2;

1043 if(
	`U16_IS_SURROGATE_LEAD
(
c
)) {

1044 if(
Àngth
>=2) {

1045 if(
	`U16_IS_TRAIL
(
åaû
=((
UCh¨
)
sour˚
[1]<<8)|source[0])) {

1047 
sour˚
+=2;

1048 
Àngth
-=2;

1049 *
èrgë
++=
c
;

1050 if(
off£ts
!=
NULL
) {

1051 *
off£ts
++=
sour˚Index
;

1053 
˙v
->
UCh¨Eº‹Buf„r
[0]=
åaû
;

1054 
˙v
->
UCh¨Eº‹Buf„rLígth
=1;

1055 
˙v
->
toULígth
=0;

1056 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

1059 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

1066 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

1070 if(
	`U_SUCCESS
(*
pEº‹Code
)) {

1072 if(
Àngth
>0) {

1073 if(
èrgëC≠acôy
==0) {

1074 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

1077 
˙v
->
toUByãs
[˙v->
toULígth
++]=*
sour˚
++;

1083 
pArgs
->
sour˚
=(const *)source;

1084 
pArgs
->
èrgë
=target;

1085 
pArgs
->
off£ts
=offsets;

1086 
	}
}

1088 
UCh¨32


1089 
	$_UTF16LEGëNextUCh¨
(
UC⁄vîãrToUnicodeArgs
 *
pArgs
, 
UEº‹Code
 *
îr
) {

1090 c⁄° 
uöt8_t
 *
s
, *
sour˚Limô
;

1091 
UCh¨32
 
c
;

1093 if(
pArgs
->
c⁄vîãr
->
mode
<8) {

1094  
UCNV_GET_NEXT_UCHAR_USE_TO_U
;

1097 
s
=(c⁄° 
uöt8_t
 *)
pArgs
->
sour˚
;

1098 
sour˚Limô
=(c⁄° 
uöt8_t
 *)
pArgs
->sourceLimit;

1100 if(
s
>=
sour˚Limô
) {

1102 *
îr
=
U_INDEX_OUTOFBOUNDS_ERROR
;

1106 if(
s
+2>
sour˚Limô
) {

1108 
pArgs
->
c⁄vîãr
->
toUByãs
[0]=*
s
++;

1109 
pArgs
->
c⁄vîãr
->
toULígth
=1;

1110 
pArgs
->
sour˚
=(c⁄° *)
s
;

1111 *
îr
 = 
U_TRUNCATED_CHAR_FOUND
;

1116 
c
=((
UCh¨32
)
s
[1]<<8)|*s;

1117 
s
+=2;

1120 if(
	`U_IS_SURROGATE
(
c
)) {

1121 if(
	`U16_IS_SURROGATE_LEAD
(
c
)) {

1122 if(
s
+2<=
sour˚Limô
) {

1123 
UCh¨
 
åaû
;

1126 
åaû
=((
UCh¨
)
s
[1]<<8)|*s;

1127 if(
	`U16_IS_TRAIL
(
åaû
)) {

1128 
c
=
	`U16_GET_SUPPLEMENTARY
(c, 
åaû
);

1129 
s
+=2;

1132 
c
=-2;

1136 
uöt8_t
 *
byãs
=
pArgs
->
c⁄vîãr
->
toUByãs
;

1137 
s
-=2;

1138 
pArgs
->
c⁄vîãr
->
toULígth
=(
öt8_t
)(
sour˚Limô
-
s
);

1140 *
byãs
++=*
s
++;

1141 } 
s
<
sour˚Limô
);

1143 
c
=0xffff;

1144 *
îr
=
U_TRUNCATED_CHAR_FOUND
;

1148 
c
=-2;

1151 if(
c
<0) {

1153 
uöt8_t
 *
byãs
=
pArgs
->
c⁄vîãr
->
toUByãs
;

1154 
pArgs
->
c⁄vîãr
->
toULígth
=2;

1155 *
byãs
=*(
s
-2);

1156 
byãs
[1]=*(
s
-1);

1158 
c
=0xffff;

1159 *
îr
=
U_ILLEGAL_CHAR_FOUND
;

1163 
pArgs
->
sour˚
=(c⁄° *)
s
;

1164  
c
;

1165 
	}
}

1168 
	$_UTF16LERe£t
(
UC⁄vîãr
 *
˙v
, 
UC⁄vîãrRe£tChoi˚
 
choi˚
) {

1169 if(
choi˚
<=
UCNV_RESET_TO_UNICODE
) {

1171 if(
	`UCNV_GET_VERSION
(
˙v
)==0) {

1172 
˙v
->
mode
=8;

1174 
˙v
->
mode
=0;

1177 if(
choi˚
!=
UCNV_RESET_TO_UNICODE
 && 
	`UCNV_GET_VERSION
(
˙v
)==1) {

1179 
˙v
->
‰omUnicodeSètus
=
UCNV_NEED_TO_WRITE_BOM
;

1181 
	}
}

1184 
	$_UTF16LEO≥n
(
UC⁄vîãr
 *
˙v
,

1185 
UC⁄vîãrLﬂdArgs
 *
pArgs
,

1186 
UEº‹Code
 *
pEº‹Code
) {

1187 if(
	`UCNV_GET_VERSION
(
˙v
)<=1) {

1188 
	`_UTF16LERe£t
(
˙v
, 
UCNV_RESET_BOTH
);

1190 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

1192 
	}
}

1195 
	$_UTF16LEGëName
(c⁄° 
UC⁄vîãr
 *
˙v
) {

1196 if(
	`UCNV_GET_VERSION
(
˙v
)==0) {

1201 
	}
}

1203 c⁄° 
UC⁄vîãrIm∂
 
	g_UTF16LEIm∂
={

1204 
UCNV_UTF16_LôéeEndün
,

1206 
NULL
,

1207 
NULL
,

1209 
_UTF16LEO≥n
,

1210 
NULL
,

1211 
_UTF16LERe£t
,

1213 
_UTF16LEToUnicodeWôhOff£ts
,

1214 
_UTF16LEToUnicodeWôhOff£ts
,

1215 
_UTF16LEFromUnicodeWôhOff£ts
,

1216 
_UTF16LEFromUnicodeWôhOff£ts
,

1217 
_UTF16LEGëNextUCh¨
,

1219 
NULL
,

1220 
_UTF16LEGëName
,

1221 
NULL
,

1222 
NULL
,

1223 
u˙v_gëN⁄Suºog©eUnicodeSë


1227 c⁄° 
UC⁄vîãrSèticD©a
 
	g_UTF16LESèticD©a
={

1228 (
UC⁄vîãrSèticD©a
),

1230 1202, 
UCNV_IBM
, 
UCNV_UTF16_LôéeEndün
, 2, 2,

1231 { 0xfd, 0xff, 0, 0 },2,
FALSE
,FALSE,

1238 c⁄° 
UC⁄vîãrSh¨edD©a
 
	g_UTF16LED©a
={

1239 (
UC⁄vîãrSh¨edD©a
), ~((
uöt32_t
) 0),

1240 
NULL
, NULL, &
_UTF16LESèticD©a
, 
FALSE
, &
_UTF16LEIm∂
,

1271 
	$_UTF16Re£t
(
UC⁄vîãr
 *
˙v
, 
UC⁄vîãrRe£tChoi˚
 
choi˚
) {

1272 if(
choi˚
<=
UCNV_RESET_TO_UNICODE
) {

1274 
˙v
->
mode
=0;

1276 if(
choi˚
!=
UCNV_RESET_TO_UNICODE
) {

1278 
˙v
->
‰omUnicodeSètus
=
UCNV_NEED_TO_WRITE_BOM
;

1280 
	}
}

1282 c⁄° 
UC⁄vîãrSh¨edD©a
 
	g_UTF16v2D©a
;

1285 
	$_UTF16O≥n
(
UC⁄vîãr
 *
˙v
,

1286 
UC⁄vîãrLﬂdArgs
 *
pArgs
,

1287 
UEº‹Code
 *
pEº‹Code
) {

1288 if(
	`UCNV_GET_VERSION
(
˙v
)<=2) {

1289 if(
	`UCNV_GET_VERSION
(
˙v
)==2 && !
pArgs
->
⁄lyTe°IsLﬂdabÀ
) {

1296 
˙v
->
sh¨edD©a
=(
UC⁄vîãrSh¨edD©a
*)&
_UTF16v2D©a
;

1297 
	`u¥v_mem˝y
(
˙v
->
subCh¨s
, 
_UTF16v2D©a
.
°©icD©a
->
subCh¨
, 
UCNV_MAX_SUBCHAR_LEN
);

1299 
	`_UTF16Re£t
(
˙v
, 
UCNV_RESET_BOTH
);

1301 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

1303 
	}
}

1306 
	$_UTF16GëName
(c⁄° 
UC⁄vîãr
 *
˙v
) {

1307 if(
	`UCNV_GET_VERSION
(
˙v
)==0) {

1309 } if(
	`UCNV_GET_VERSION
(
˙v
)==1) {

1314 
	}
}

1316 c⁄° 
UC⁄vîãrSh¨edD©a
 
	g_UTF16D©a
;

1318 
	#IS_UTF16BE
(
˙v
Ë((˙v)->
sh¨edD©a
==&
_UTF16BED©a
)

	)

1319 
	#IS_UTF16LE
(
˙v
Ë((˙v)->
sh¨edD©a
==&
_UTF16LED©a
)

	)

1320 
	#IS_UTF16
(
˙v
Ë((˙v)->
sh¨edD©a
==&
_UTF16D©a
 || (˙v)->sh¨edD©a==&
_UTF16v2D©a
)

	)

1323 
	$_UTF16ToUnicodeWôhOff£ts
(
UC⁄vîãrToUnicodeArgs
 *
pArgs
,

1324 
UEº‹Code
 *
pEº‹Code
) {

1325 
UC⁄vîãr
 *
˙v
=
pArgs
->
c⁄vîãr
;

1326 c⁄° *
sour˚
=
pArgs
->source;

1327 c⁄° *
sour˚Limô
=
pArgs
->sourceLimit;

1328 
öt32_t
 *
off£ts
=
pArgs
->offsets;

1330 
öt32_t
 
°©e
, 
off£tDñè
;

1331 
uöt8_t
 
b
;

1333 
°©e
=
˙v
->
mode
;

1340 
off£tDñè
=0;

1342 
sour˚
<
sour˚Limô
 && 
	`U_SUCCESS
(*
pEº‹Code
)) {

1343 
°©e
) {

1345 
˙v
->
toUByãs
[0]=(
uöt8_t
)*
sour˚
++;

1346 
˙v
->
toULígth
=1;

1347 
°©e
=1;

1356 
b
=*
sour˚
;

1357 if(
˙v
->
toUByãs
[0]==0x„ && 
b
==0xff) {

1358 if(
	`IS_UTF16LE
(
˙v
)) {

1359 
°©e
=7;

1361 
°©e
=8;

1363 } if(
˙v
->
toUByãs
[0]==0xf‡&& 
b
==0xfe) {

1364 if(
	`IS_UTF16BE
(
˙v
)) {

1365 
°©e
=6;

1367 
°©e
=9;

1369 } if((
	`IS_UTF16
(
˙v
Ë&& 
	`UCNV_GET_VERSION
(cnv)==1)) {

1370 
°©e
=6;

1372 if(
°©e
>=8) {

1374 ++
sour˚
;

1375 
˙v
->
toULígth
=0;

1376 
off£tDñè
=(
öt32_t
)(
sour˚
-
pArgs
->source);

1377 } if(
°©e
<6) {

1379 if(
sour˚
!=
pArgs
->source) {

1381 
sour˚
=
pArgs
->source;

1382 
˙v
->
toULígth
=0;

1384 if(
	`IS_UTF16LE
(
˙v
)) {

1386 
°©e
=9;

1389 
°©e
=8;

1399 
˙v
->
toUByãs
[1]=
b
;

1400 
˙v
->
toULígth
=2;

1401 
pArgs
->
sour˚
=source+1;

1408 
˙v
->
mode
=
°©e
+2;

1409 *
pEº‹Code
=
U_ILLEGAL_ESCAPE_SEQUENCE
;

1413 
˙v
->
mode
=
°©e
;

1417 
pArgs
->
sour˚
=source;

1418 
	`_UTF16BEToUnicodeWôhOff£ts
(
pArgs
, 
pEº‹Code
);

1419 
sour˚
=
pArgs
->source;

1423 
pArgs
->
sour˚
=source;

1424 
	`_UTF16LEToUnicodeWôhOff£ts
(
pArgs
, 
pEº‹Code
);

1425 
sour˚
=
pArgs
->source;

1433 if(
off£ts
!=
NULL
 && 
off£tDñè
!=0) {

1434 
öt32_t
 *
off£tsLimô
=
pArgs
->
off£ts
;

1435 
off£ts
<
off£tsLimô
) {

1436 *
off£ts
++ +
off£tDñè
;

1440 
pArgs
->
sour˚
=source;

1442 if(
sour˚
==
sour˚Limô
 && 
pArgs
->
Êush
) {

1444 
°©e
) {

1448 
	`_UTF16BEToUnicodeWôhOff£ts
(
pArgs
, 
pEº‹Code
);

1451 
	`_UTF16LEToUnicodeWôhOff£ts
(
pArgs
, 
pEº‹Code
);

1459 
˙v
->
mode
=
°©e
;

1460 
	}
}

1462 
UCh¨32


1463 
	$_UTF16GëNextUCh¨
(
UC⁄vîãrToUnicodeArgs
 *
pArgs
,

1464 
UEº‹Code
 *
pEº‹Code
) {

1465 
pArgs
->
c⁄vîãr
->
mode
) {

1467  
	`_UTF16BEGëNextUCh¨
(
pArgs
, 
pEº‹Code
);

1469  
	`_UTF16LEGëNextUCh¨
(
pArgs
, 
pEº‹Code
);

1471  
UCNV_GET_NEXT_UCHAR_USE_TO_U
;

1473 
	}
}

1475 c⁄° 
UC⁄vîãrIm∂
 
	g_UTF16Im∂
 = {

1476 
UCNV_UTF16
,

1478 
NULL
,

1479 
NULL
,

1481 
_UTF16O≥n
,

1482 
NULL
,

1483 
_UTF16Re£t
,

1485 
_UTF16ToUnicodeWôhOff£ts
,

1486 
_UTF16ToUnicodeWôhOff£ts
,

1487 
_UTF16PEFromUnicodeWôhOff£ts
,

1488 
_UTF16PEFromUnicodeWôhOff£ts
,

1489 
_UTF16GëNextUCh¨
,

1491 
NULL
,

1492 
_UTF16GëName
,

1493 
NULL
,

1494 
NULL
,

1495 
u˙v_gëN⁄Suºog©eUnicodeSë


1498 c⁄° 
UC⁄vîãrSèticD©a
 
	g_UTF16SèticD©a
 = {

1499 (
UC⁄vîãrSèticD©a
),

1502 
UCNV_IBM
, 
UCNV_UTF16
, 2, 2,

1503 #i‡
U_IS_BIG_ENDIAN


1508 
FALSE
, FALSE,

1514 c⁄° 
UC⁄vîãrSh¨edD©a
 
	g_UTF16D©a
 = {

1515 (
UC⁄vîãrSh¨edD©a
), ~((
uöt32_t
) 0),

1516 
NULL
, NULL, &
_UTF16SèticD©a
, 
FALSE
, &
_UTF16Im∂
,

1520 c⁄° 
UC⁄vîãrIm∂
 
	g_UTF16v2Im∂
 = {

1521 
UCNV_UTF16
,

1523 
NULL
,

1524 
NULL
,

1526 
_UTF16O≥n
,

1527 
NULL
,

1528 
_UTF16Re£t
,

1530 
_UTF16ToUnicodeWôhOff£ts
,

1531 
_UTF16ToUnicodeWôhOff£ts
,

1532 
_UTF16BEFromUnicodeWôhOff£ts
,

1533 
_UTF16BEFromUnicodeWôhOff£ts
,

1534 
_UTF16GëNextUCh¨
,

1536 
NULL
,

1537 
_UTF16GëName
,

1538 
NULL
,

1539 
NULL
,

1540 
u˙v_gëN⁄Suºog©eUnicodeSë


1543 c⁄° 
UC⁄vîãrSèticD©a
 
	g_UTF16v2SèticD©a
 = {

1544 (
UC⁄vîãrSèticD©a
),

1547 
UCNV_IBM
, 
UCNV_UTF16
, 2, 2,

1549 
FALSE
, FALSE,

1555 c⁄° 
UC⁄vîãrSh¨edD©a
 
	g_UTF16v2D©a
 = {

1556 (
UC⁄vîãrSh¨edD©a
), ~((
uöt32_t
) 0),

1557 
NULL
, NULL, &
_UTF16v2SèticD©a
, 
FALSE
, &
_UTF16v2Im∂
,

	@ucnv_u32.c

17 
	~"unicode/uty≥s.h
"

19 #i‡!
UCONFIG_NO_CONVERSION


21 
	~"unicode/u˙v.h
"

22 
	~"u˙v_bld.h
"

23 
	~"u˙v_˙v.h
"

24 
	~"cmem‹y.h
"

26 
	#MAXIMUM_UCS2
 0x0000FFFF

	)

27 
	#MAXIMUM_UTF
 0x0010FFFF

	)

28 
	#HALF_SHIFT
 10

	)

29 
	#HALF_BASE
 0x0010000

	)

30 
	#HALF_MASK
 0x3FF

	)

31 
	#SURROGATE_HIGH_START
 0xD800

	)

32 
	#SURROGATE_LOW_START
 0xDC00

	)

35 
	#SURROGATE_LOW_BASE
 9216

	)

38 
	mUCNV_NEED_TO_WRITE_BOM
=1

44 
	$T_UC⁄vîãr_toUnicode_UTF32_BE
(
UC⁄vîãrToUnicodeArgs
 * 
¨gs
,

45 
UEº‹Code
 * 
îr
)

47 c⁄° *
mySour˚
 = (*Ë
¨gs
->
sour˚
;

48 
UCh¨
 *
myT¨gë
 = 
¨gs
->
èrgë
;

49 c⁄° *
sour˚Limô
 = (*Ë
¨gs
->sourceLimit;

50 c⁄° 
UCh¨
 *
èrgëLimô
 = 
¨gs
->targetLimit;

51 *
toUByãs
 = 
¨gs
->
c⁄vîãr
->toUBytes;

52 
uöt32_t
 
ch
, 
i
;

55 i‡(
¨gs
->
c⁄vîãr
->
toUnicodeSètus
 && 
myT¨gë
 < 
èrgëLimô
) {

56 
i
 = 
¨gs
->
c⁄vîãr
->
toULígth
;

57 
¨gs
->
c⁄vîãr
->
toULígth
 = 0;

59 
ch
 = 
¨gs
->
c⁄vîãr
->
toUnicodeSètus
 - 1;

60 
¨gs
->
c⁄vîãr
->
toUnicodeSètus
 = 0;

61 
m‹ebyãs
;

64 
mySour˚
 < 
sour˚Limô
 && 
myT¨gë
 < 
èrgëLimô
) {

65 
i
 = 0;

66 
ch
 = 0;

67 
m‹ebyãs
:

68 
i
 < (
uöt32_t
)) {

69 i‡(
mySour˚
 < 
sour˚Limô
) {

70 
ch
 = (ch << 8Ë| (
uöt8_t
)(*
mySour˚
);

71 
toUByãs
[
i
++] = (Ë*(
mySour˚
++);

76 
¨gs
->
c⁄vîãr
->
toUnicodeSètus
 = 
ch
 + 1;

77 
¨gs
->
c⁄vîãr
->
toULígth
 = (
öt8_t
Ë
i
;

78 
d⁄ef‹now
;

82 i‡(
ch
 <
MAXIMUM_UTF
 && !
	`U_IS_SURROGATE
(ch)) {

84 i‡(
ch
 <
MAXIMUM_UCS2
)

87 *(
myT¨gë
++Ë(
UCh¨
Ë
ch
;

91 *(
myT¨gë
++Ë
	`U16_LEAD
(
ch
);

92 
ch
 = 
	`U16_TRAIL
(ch);

93 i‡(
myT¨gë
 < 
èrgëLimô
) {

94 *(
myT¨gë
++Ë(
UCh¨
)
ch
;

98 
¨gs
->
c⁄vîãr
->
UCh¨Eº‹Buf„r
[0] = (
UCh¨
Ë
ch
;

99 
¨gs
->
c⁄vîãr
->
UCh¨Eº‹Buf„rLígth
 = 1;

100 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

106 
¨gs
->
c⁄vîãr
->
toULígth
 = (
öt8_t
)
i
;

107 *
îr
 = 
U_ILLEGAL_CHAR_FOUND
;

112 
d⁄ef‹now
:

113 i‡(
mySour˚
 < 
sour˚Limô
 && 
myT¨gë
 >
èrgëLimô
 && 
	`U_SUCCESS
(*
îr
)) {

115 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

118 
¨gs
->
èrgë
 = 
myT¨gë
;

119 
¨gs
->
sour˚
 = (c⁄° *Ë
mySour˚
;

120 
	}
}

123 
	$T_UC⁄vîãr_toUnicode_UTF32_BE_OFFSET_LOGIC
(
UC⁄vîãrToUnicodeArgs
 * 
¨gs
,

124 
UEº‹Code
 * 
îr
)

126 c⁄° *
mySour˚
 = (*Ë
¨gs
->
sour˚
;

127 
UCh¨
 *
myT¨gë
 = 
¨gs
->
èrgë
;

128 
öt32_t
 *
myOff£ts
 = 
¨gs
->
off£ts
;

129 c⁄° *
sour˚Limô
 = (*Ë
¨gs
->sourceLimit;

130 c⁄° 
UCh¨
 *
èrgëLimô
 = 
¨gs
->targetLimit;

131 *
toUByãs
 = 
¨gs
->
c⁄vîãr
->toUBytes;

132 
uöt32_t
 
ch
, 
i
;

133 
öt32_t
 
off£tNum
 = 0;

136 i‡(
¨gs
->
c⁄vîãr
->
toUnicodeSètus
 && 
myT¨gë
 < 
èrgëLimô
) {

137 
i
 = 
¨gs
->
c⁄vîãr
->
toULígth
;

138 
¨gs
->
c⁄vîãr
->
toULígth
 = 0;

140 
ch
 = 
¨gs
->
c⁄vîãr
->
toUnicodeSètus
 - 1;

141 
¨gs
->
c⁄vîãr
->
toUnicodeSètus
 = 0;

142 
m‹ebyãs
;

145 
mySour˚
 < 
sour˚Limô
 && 
myT¨gë
 < 
èrgëLimô
) {

146 
i
 = 0;

147 
ch
 = 0;

148 
m‹ebyãs
:

149 
i
 < (
uöt32_t
)) {

150 i‡(
mySour˚
 < 
sour˚Limô
) {

151 
ch
 = (ch << 8Ë| (
uöt8_t
)(*
mySour˚
);

152 
toUByãs
[
i
++] = (Ë*(
mySour˚
++);

157 
¨gs
->
c⁄vîãr
->
toUnicodeSètus
 = 
ch
 + 1;

158 
¨gs
->
c⁄vîãr
->
toULígth
 = (
öt8_t
Ë
i
;

159 
d⁄ef‹now
;

163 i‡(
ch
 <
MAXIMUM_UTF
 && !
	`U_IS_SURROGATE
(ch)) {

165 i‡(
ch
 <
MAXIMUM_UCS2
) {

167 *(
myT¨gë
++Ë(
UCh¨
Ë
ch
;

168 *(
myOff£ts
++Ë
off£tNum
;

172 *(
myT¨gë
++Ë
	`U16_LEAD
(
ch
);

173 *
myOff£ts
++ = 
off£tNum
;

174 
ch
 = 
	`U16_TRAIL
(ch);

175 i‡(
myT¨gë
 < 
èrgëLimô
)

177 *(
myT¨gë
++Ë(
UCh¨
)
ch
;

178 *(
myOff£ts
++Ë
off£tNum
;

182 
¨gs
->
c⁄vîãr
->
UCh¨Eº‹Buf„r
[0] = (
UCh¨
Ë
ch
;

183 
¨gs
->
c⁄vîãr
->
UCh¨Eº‹Buf„rLígth
 = 1;

184 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

190 
¨gs
->
c⁄vîãr
->
toULígth
 = (
öt8_t
)
i
;

191 *
îr
 = 
U_ILLEGAL_CHAR_FOUND
;

194 
off£tNum
 +
i
;

197 
d⁄ef‹now
:

198 i‡(
mySour˚
 < 
sour˚Limô
 && 
myT¨gë
 >
èrgëLimô
 && 
	`U_SUCCESS
(*
îr
))

201 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

204 
¨gs
->
èrgë
 = 
myT¨gë
;

205 
¨gs
->
sour˚
 = (c⁄° *Ë
mySour˚
;

206 
¨gs
->
off£ts
 = 
myOff£ts
;

207 
	}
}

210 
	$T_UC⁄vîãr_‰omUnicode_UTF32_BE
(
UC⁄vîãrFromUnicodeArgs
 * 
¨gs
,

211 
UEº‹Code
 * 
îr
)

213 c⁄° 
UCh¨
 *
mySour˚
 = 
¨gs
->
sour˚
;

214 *
myT¨gë
;

215 c⁄° 
UCh¨
 *
sour˚Limô
 = 
¨gs
->sourceLimit;

216 c⁄° *
èrgëLimô
 = (*Ë
¨gs
->targetLimit;

217 
UCh¨32
 
ch
, 
ch2
;

218 
ödexToWrôe
;

219 
ãmp
[(
uöt32_t
)];

221 if(
mySour˚
 >
sour˚Limô
) {

227 if(
¨gs
->
c⁄vîãr
->
‰omUnicodeSètus
==
UCNV_NEED_TO_WRITE_BOM
) {

228 c⁄° 
bom
[]={ 0, 0, ()0xfe, ()0xff };

229 
	`u˙v_‰omUWrôeByãs
(
¨gs
->
c⁄vîãr
,

230 
bom
, 4,

231 &
¨gs
->
èrgë
,árgs->
èrgëLimô
,

232 &
¨gs
->
off£ts
, -1,

233 
îr
);

234 
¨gs
->
c⁄vîãr
->
‰omUnicodeSètus
=0;

237 
myT¨gë
 = (*Ë
¨gs
->
èrgë
;

238 
ãmp
[0] = 0;

240 i‡(
¨gs
->
c⁄vîãr
->
‰omUCh¨32
) {

241 
ch
 = 
¨gs
->
c⁄vîãr
->
‰omUCh¨32
;

242 
¨gs
->
c⁄vîãr
->
‰omUCh¨32
 = 0;

243 
lowsurog©e
;

246 
mySour˚
 < 
sour˚Limô
 && 
myT¨gë
 < 
èrgëLimô
) {

247 
ch
 = *(
mySour˚
++);

249 i‡(
	`UTF_IS_SURROGATE
(
ch
)) {

250 i‡(
	`U_IS_LEAD
(
ch
)) {

251 
lowsurog©e
:

252 i‡(
mySour˚
 < 
sour˚Limô
) {

253 
ch2
 = *
mySour˚
;

254 i‡(
	`U_IS_TRAIL
(
ch2
)) {

255 
ch
 = ((ch - 
SURROGATE_HIGH_START
Ë<< 
HALF_SHIFT
Ë+ 
ch2
 + 
SURROGATE_LOW_BASE
;

256 
mySour˚
++;

261 
¨gs
->
c⁄vîãr
->
‰omUCh¨32
 = 
ch
;

262 *
îr
 = 
U_ILLEGAL_CHAR_FOUND
;

268 
¨gs
->
c⁄vîãr
->
‰omUCh¨32
 = 
ch
;

269 i‡(
¨gs
->
Êush
) {

272 *
îr
 = 
U_ILLEGAL_CHAR_FOUND
;

280 
¨gs
->
c⁄vîãr
->
‰omUCh¨32
 = 
ch
;

281 *
îr
 = 
U_ILLEGAL_CHAR_FOUND
;

287 
ãmp
[1] = (
uöt8_t
Ë(
ch
 >> 16 & 0x1F);

288 
ãmp
[2] = (
uöt8_t
Ë(
ch
 >> 8);

289 
ãmp
[3] = (
uöt8_t
Ë(
ch
);

291 
ödexToWrôe
 = 0; indexToWrôê<(
uöt32_t
) - 1; indexToWrite++) {

292 i‡(
myT¨gë
 < 
èrgëLimô
) {

293 *(
myT¨gë
++Ë
ãmp
[
ödexToWrôe
];

296 
¨gs
->
c⁄vîãr
->
ch¨Eº‹Buf„r
[¨gs->c⁄vîãr->
ch¨Eº‹Buf„rLígth
++] = 
ãmp
[
ödexToWrôe
];

297 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

302 i‡(
mySour˚
 < 
sour˚Limô
 && 
myT¨gë
 >
èrgëLimô
 && 
	`U_SUCCESS
(*
îr
)) {

303 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

306 
¨gs
->
èrgë
 = (*Ë
myT¨gë
;

307 
¨gs
->
sour˚
 = 
mySour˚
;

308 
	}
}

311 
	$T_UC⁄vîãr_‰omUnicode_UTF32_BE_OFFSET_LOGIC
(
UC⁄vîãrFromUnicodeArgs
 * 
¨gs
,

312 
UEº‹Code
 * 
îr
)

314 c⁄° 
UCh¨
 *
mySour˚
 = 
¨gs
->
sour˚
;

315 *
myT¨gë
;

316 
öt32_t
 *
myOff£ts
;

317 c⁄° 
UCh¨
 *
sour˚Limô
 = 
¨gs
->sourceLimit;

318 c⁄° *
èrgëLimô
 = (*Ë
¨gs
->targetLimit;

319 
UCh¨32
 
ch
, 
ch2
;

320 
öt32_t
 
off£tNum
 = 0;

321 
ödexToWrôe
;

322 
ãmp
[(
uöt32_t
)];

324 if(
mySour˚
 >
sour˚Limô
) {

330 if(
¨gs
->
c⁄vîãr
->
‰omUnicodeSètus
==
UCNV_NEED_TO_WRITE_BOM
) {

331 c⁄° 
bom
[]={ 0, 0, ()0xfe, ()0xff };

332 
	`u˙v_‰omUWrôeByãs
(
¨gs
->
c⁄vîãr
,

333 
bom
, 4,

334 &
¨gs
->
èrgë
,árgs->
èrgëLimô
,

335 &
¨gs
->
off£ts
, -1,

336 
îr
);

337 
¨gs
->
c⁄vîãr
->
‰omUnicodeSètus
=0;

340 
myT¨gë
 = (*Ë
¨gs
->
èrgë
;

341 
myOff£ts
 = 
¨gs
->
off£ts
;

342 
ãmp
[0] = 0;

344 i‡(
¨gs
->
c⁄vîãr
->
‰omUCh¨32
) {

345 
ch
 = 
¨gs
->
c⁄vîãr
->
‰omUCh¨32
;

346 
¨gs
->
c⁄vîãr
->
‰omUCh¨32
 = 0;

347 
lowsurog©e
;

350 
mySour˚
 < 
sour˚Limô
 && 
myT¨gë
 < 
èrgëLimô
) {

351 
ch
 = *(
mySour˚
++);

353 i‡(
	`UTF_IS_SURROGATE
(
ch
)) {

354 i‡(
	`U_IS_LEAD
(
ch
)) {

355 
lowsurog©e
:

356 i‡(
mySour˚
 < 
sour˚Limô
) {

357 
ch2
 = *
mySour˚
;

358 i‡(
	`U_IS_TRAIL
(
ch2
)) {

359 
ch
 = ((ch - 
SURROGATE_HIGH_START
Ë<< 
HALF_SHIFT
Ë+ 
ch2
 + 
SURROGATE_LOW_BASE
;

360 
mySour˚
++;

365 
¨gs
->
c⁄vîãr
->
‰omUCh¨32
 = 
ch
;

366 *
îr
 = 
U_ILLEGAL_CHAR_FOUND
;

372 
¨gs
->
c⁄vîãr
->
‰omUCh¨32
 = 
ch
;

373 i‡(
¨gs
->
Êush
) {

376 *
îr
 = 
U_ILLEGAL_CHAR_FOUND
;

384 
¨gs
->
c⁄vîãr
->
‰omUCh¨32
 = 
ch
;

385 *
îr
 = 
U_ILLEGAL_CHAR_FOUND
;

391 
ãmp
[1] = (
uöt8_t
Ë(
ch
 >> 16 & 0x1F);

392 
ãmp
[2] = (
uöt8_t
Ë(
ch
 >> 8);

393 
ãmp
[3] = (
uöt8_t
Ë(
ch
);

395 
ödexToWrôe
 = 0; indexToWrôê<(
uöt32_t
) - 1; indexToWrite++) {

396 i‡(
myT¨gë
 < 
èrgëLimô
) {

397 *(
myT¨gë
++Ë
ãmp
[
ödexToWrôe
];

398 *(
myOff£ts
++Ë
off£tNum
;

401 
¨gs
->
c⁄vîãr
->
ch¨Eº‹Buf„r
[¨gs->c⁄vîãr->
ch¨Eº‹Buf„rLígth
++] = 
ãmp
[
ödexToWrôe
];

402 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

405 
off£tNum
 = off£tNum + 1 + (
ãmp
[1] != 0);

408 i‡(
mySour˚
 < 
sour˚Limô
 && 
myT¨gë
 >
èrgëLimô
 && 
	`U_SUCCESS
(*
îr
)) {

409 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

412 
¨gs
->
èrgë
 = (*Ë
myT¨gë
;

413 
¨gs
->
sour˚
 = 
mySour˚
;

414 
¨gs
->
off£ts
 = 
myOff£ts
;

415 
	}
}

417 
UCh¨32


418 
	$T_UC⁄vîãr_gëNextUCh¨_UTF32_BE
(
UC⁄vîãrToUnicodeArgs
* 
¨gs
,

419 
UEº‹Code
* 
îr
)

421 c⁄° 
uöt8_t
 *
mySour˚
;

422 
UCh¨32
 
myUCh¨
;

423 
öt32_t
 
Àngth
;

425 
mySour˚
 = (c⁄° 
uöt8_t
 *)
¨gs
->
sour˚
;

426 i‡(
mySour˚
 >(c⁄° 
uöt8_t
 *)
¨gs
->
sour˚Limô
)

429 *
îr
 = 
U_INDEX_OUTOFBOUNDS_ERROR
;

433 
Àngth
 = (
öt32_t
)((c⁄° 
uöt8_t
 *)
¨gs
->
sour˚Limô
 - 
mySour˚
);

434 i‡(
Àngth
 < 4)

437 
	`u¥v_mem˝y
(
¨gs
->
c⁄vîãr
->
toUByãs
, 
mySour˚
, 
Àngth
);

438 
¨gs
->
c⁄vîãr
->
toULígth
 = (
öt8_t
)
Àngth
;

439 
¨gs
->
sour˚
 = (c⁄° *)(
mySour˚
 + 
Àngth
);

440 *
îr
 = 
U_TRUNCATED_CHAR_FOUND
;

445 
myUCh¨
 = ((
UCh¨32
)
mySour˚
[0] << 24)

446 | ((
UCh¨32
)
mySour˚
[1] << 16)

447 | ((
UCh¨32
)
mySour˚
[2] << 8)

448 | ((
UCh¨32
)
mySour˚
[3]);

450 
¨gs
->
sour˚
 = (c⁄° *)(
mySour˚
 + 4);

451 i‡((
uöt32_t
)
myUCh¨
 <
MAXIMUM_UTF
 && !
	`U_IS_SURROGATE
(myUChar)) {

452  
myUCh¨
;

455 
	`u¥v_mem˝y
(
¨gs
->
c⁄vîãr
->
toUByãs
, 
mySour˚
, 4);

456 
¨gs
->
c⁄vîãr
->
toULígth
 = 4;

458 *
îr
 = 
U_ILLEGAL_CHAR_FOUND
;

460 
	}
}

462 c⁄° 
UC⁄vîãrIm∂
 
	g_UTF32BEIm∂
 = {

463 
UCNV_UTF32_BigEndün
,

465 
NULL
,

466 
NULL
,

468 
NULL
,

469 
NULL
,

470 
NULL
,

472 
T_UC⁄vîãr_toUnicode_UTF32_BE
,

473 
T_UC⁄vîãr_toUnicode_UTF32_BE_OFFSET_LOGIC
,

474 
T_UC⁄vîãr_‰omUnicode_UTF32_BE
,

475 
T_UC⁄vîãr_‰omUnicode_UTF32_BE_OFFSET_LOGIC
,

476 
T_UC⁄vîãr_gëNextUCh¨_UTF32_BE
,

478 
NULL
,

479 
NULL
,

480 
NULL
,

481 
NULL
,

482 
u˙v_gëN⁄Suºog©eUnicodeSë


486 c⁄° 
UC⁄vîãrSèticD©a
 
	g_UTF32BESèticD©a
 = {

487 (
UC⁄vîãrSèticD©a
),

490 
UCNV_IBM
, 
UCNV_UTF32_BigEndün
, 4, 4,

491 { 0, 0, 0xff, 0xfd }, 4, 
FALSE
, FALSE,

497 c⁄° 
UC⁄vîãrSh¨edD©a
 
	g_UTF32BED©a
 = {

498 (
UC⁄vîãrSh¨edD©a
), ~((
uöt32_t
) 0),

499 
NULL
, NULL, &
_UTF32BESèticD©a
, 
FALSE
, &
_UTF32BEIm∂
,

506 
	$T_UC⁄vîãr_toUnicode_UTF32_LE
(
UC⁄vîãrToUnicodeArgs
 * 
¨gs
,

507 
UEº‹Code
 * 
îr
)

509 c⁄° *
mySour˚
 = (*Ë
¨gs
->
sour˚
;

510 
UCh¨
 *
myT¨gë
 = 
¨gs
->
èrgë
;

511 c⁄° *
sour˚Limô
 = (*Ë
¨gs
->sourceLimit;

512 c⁄° 
UCh¨
 *
èrgëLimô
 = 
¨gs
->targetLimit;

513 *
toUByãs
 = 
¨gs
->
c⁄vîãr
->toUBytes;

514 
uöt32_t
 
ch
, 
i
;

517 i‡(
¨gs
->
c⁄vîãr
->
toUnicodeSètus
 && 
myT¨gë
 < 
èrgëLimô
)

519 
i
 = 
¨gs
->
c⁄vîãr
->
toULígth
;

520 
¨gs
->
c⁄vîãr
->
toULígth
 = 0;

523 
ch
 = 
¨gs
->
c⁄vîãr
->
toUnicodeSètus
 - 1;

524 
¨gs
->
c⁄vîãr
->
toUnicodeSètus
 = 0;

525 
m‹ebyãs
;

528 
mySour˚
 < 
sour˚Limô
 && 
myT¨gë
 < 
èrgëLimô
)

530 
i
 = 0;

531 
ch
 = 0;

532 
m‹ebyãs
:

533 
i
 < (
uöt32_t
))

535 i‡(
mySour˚
 < 
sour˚Limô
)

537 
ch
 |((
uöt8_t
)(*
mySour˚
)Ë<< (
i
 * 8);

538 
toUByãs
[
i
++] = (Ë*(
mySour˚
++);

544 
¨gs
->
c⁄vîãr
->
toUnicodeSètus
 = 
ch
 + 1;

545 
¨gs
->
c⁄vîãr
->
toULígth
 = (
öt8_t
Ë
i
;

546 
d⁄ef‹now
;

550 i‡(
ch
 <
MAXIMUM_UTF
 && !
	`U_IS_SURROGATE
(ch)) {

552 i‡(
ch
 <
MAXIMUM_UCS2
) {

554 *(
myT¨gë
++Ë(
UCh¨
Ë
ch
;

558 *(
myT¨gë
++Ë
	`U16_LEAD
(
ch
);

559 
ch
 = 
	`U16_TRAIL
(ch);

560 i‡(
myT¨gë
 < 
èrgëLimô
) {

561 *(
myT¨gë
++Ë(
UCh¨
)
ch
;

565 
¨gs
->
c⁄vîãr
->
UCh¨Eº‹Buf„r
[0] = (
UCh¨
Ë
ch
;

566 
¨gs
->
c⁄vîãr
->
UCh¨Eº‹Buf„rLígth
 = 1;

567 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

573 
¨gs
->
c⁄vîãr
->
toULígth
 = (
öt8_t
)
i
;

574 *
îr
 = 
U_ILLEGAL_CHAR_FOUND
;

579 
d⁄ef‹now
:

580 i‡(
mySour˚
 < 
sour˚Limô
 && 
myT¨gë
 >
èrgëLimô
 && 
	`U_SUCCESS
(*
îr
))

583 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

586 
¨gs
->
èrgë
 = 
myT¨gë
;

587 
¨gs
->
sour˚
 = (c⁄° *Ë
mySour˚
;

588 
	}
}

591 
	$T_UC⁄vîãr_toUnicode_UTF32_LE_OFFSET_LOGIC
(
UC⁄vîãrToUnicodeArgs
 * 
¨gs
,

592 
UEº‹Code
 * 
îr
)

594 c⁄° *
mySour˚
 = (*Ë
¨gs
->
sour˚
;

595 
UCh¨
 *
myT¨gë
 = 
¨gs
->
èrgë
;

596 
öt32_t
 *
myOff£ts
 = 
¨gs
->
off£ts
;

597 c⁄° *
sour˚Limô
 = (*Ë
¨gs
->sourceLimit;

598 c⁄° 
UCh¨
 *
èrgëLimô
 = 
¨gs
->targetLimit;

599 *
toUByãs
 = 
¨gs
->
c⁄vîãr
->toUBytes;

600 
uöt32_t
 
ch
, 
i
;

601 
öt32_t
 
off£tNum
 = 0;

604 i‡(
¨gs
->
c⁄vîãr
->
toUnicodeSètus
 && 
myT¨gë
 < 
èrgëLimô
)

606 
i
 = 
¨gs
->
c⁄vîãr
->
toULígth
;

607 
¨gs
->
c⁄vîãr
->
toULígth
 = 0;

610 
ch
 = 
¨gs
->
c⁄vîãr
->
toUnicodeSètus
 - 1;

611 
¨gs
->
c⁄vîãr
->
toUnicodeSètus
 = 0;

612 
m‹ebyãs
;

615 
mySour˚
 < 
sour˚Limô
 && 
myT¨gë
 < 
èrgëLimô
)

617 
i
 = 0;

618 
ch
 = 0;

619 
m‹ebyãs
:

620 
i
 < (
uöt32_t
))

622 i‡(
mySour˚
 < 
sour˚Limô
)

624 
ch
 |((
uöt8_t
)(*
mySour˚
)Ë<< (
i
 * 8);

625 
toUByãs
[
i
++] = (Ë*(
mySour˚
++);

631 
¨gs
->
c⁄vîãr
->
toUnicodeSètus
 = 
ch
 + 1;

632 
¨gs
->
c⁄vîãr
->
toULígth
 = (
öt8_t
Ë
i
;

633 
d⁄ef‹now
;

637 i‡(
ch
 <
MAXIMUM_UTF
 && !
	`U_IS_SURROGATE
(ch))

640 i‡(
ch
 <
MAXIMUM_UCS2
)

643 *(
myT¨gë
++Ë(
UCh¨
Ë
ch
;

644 *(
myOff£ts
++Ë
off£tNum
;

648 *(
myT¨gë
++Ë
	`U16_LEAD
(
ch
);

649 *(
myOff£ts
++Ë
off£tNum
;

650 
ch
 = 
	`U16_TRAIL
(ch);

651 i‡(
myT¨gë
 < 
èrgëLimô
)

653 *(
myT¨gë
++Ë(
UCh¨
)
ch
;

654 *(
myOff£ts
++Ë
off£tNum
;

659 
¨gs
->
c⁄vîãr
->
UCh¨Eº‹Buf„r
[0] = (
UCh¨
Ë
ch
;

660 
¨gs
->
c⁄vîãr
->
UCh¨Eº‹Buf„rLígth
 = 1;

661 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

668 
¨gs
->
c⁄vîãr
->
toULígth
 = (
öt8_t
)
i
;

669 *
îr
 = 
U_ILLEGAL_CHAR_FOUND
;

672 
off£tNum
 +
i
;

675 
d⁄ef‹now
:

676 i‡(
mySour˚
 < 
sour˚Limô
 && 
myT¨gë
 >
èrgëLimô
 && 
	`U_SUCCESS
(*
îr
))

679 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

682 
¨gs
->
èrgë
 = 
myT¨gë
;

683 
¨gs
->
sour˚
 = (c⁄° *Ë
mySour˚
;

684 
¨gs
->
off£ts
 = 
myOff£ts
;

685 
	}
}

688 
	$T_UC⁄vîãr_‰omUnicode_UTF32_LE
(
UC⁄vîãrFromUnicodeArgs
 * 
¨gs
,

689 
UEº‹Code
 * 
îr
)

691 c⁄° 
UCh¨
 *
mySour˚
 = 
¨gs
->
sour˚
;

692 *
myT¨gë
;

693 c⁄° 
UCh¨
 *
sour˚Limô
 = 
¨gs
->sourceLimit;

694 c⁄° *
èrgëLimô
 = (*Ë
¨gs
->targetLimit;

695 
UCh¨32
 
ch
, 
ch2
;

696 
ödexToWrôe
;

697 
ãmp
[(
uöt32_t
)];

699 if(
mySour˚
 >
sour˚Limô
) {

705 if(
¨gs
->
c⁄vîãr
->
‰omUnicodeSètus
==
UCNV_NEED_TO_WRITE_BOM
) {

706 c⁄° 
bom
[]={ ()0xff, ()0xfe, 0, 0 };

707 
	`u˙v_‰omUWrôeByãs
(
¨gs
->
c⁄vîãr
,

708 
bom
, 4,

709 &
¨gs
->
èrgë
,árgs->
èrgëLimô
,

710 &
¨gs
->
off£ts
, -1,

711 
îr
);

712 
¨gs
->
c⁄vîãr
->
‰omUnicodeSètus
=0;

715 
myT¨gë
 = (*Ë
¨gs
->
èrgë
;

716 
ãmp
[3] = 0;

718 i‡(
¨gs
->
c⁄vîãr
->
‰omUCh¨32
)

720 
ch
 = 
¨gs
->
c⁄vîãr
->
‰omUCh¨32
;

721 
¨gs
->
c⁄vîãr
->
‰omUCh¨32
 = 0;

722 
lowsurog©e
;

725 
mySour˚
 < 
sour˚Limô
 && 
myT¨gë
 < 
èrgëLimô
)

727 
ch
 = *(
mySour˚
++);

729 i‡(
	`UTF_IS_SURROGATE
(
ch
)) {

730 i‡(
	`U_IS_LEAD
(
ch
))

732 
lowsurog©e
:

733 i‡(
mySour˚
 < 
sour˚Limô
)

735 
ch2
 = *
mySour˚
;

736 i‡(
	`U_IS_TRAIL
(
ch2
)) {

737 
ch
 = ((ch - 
SURROGATE_HIGH_START
Ë<< 
HALF_SHIFT
Ë+ 
ch2
 + 
SURROGATE_LOW_BASE
;

738 
mySour˚
++;

743 
¨gs
->
c⁄vîãr
->
‰omUCh¨32
 = 
ch
;

744 *
îr
 = 
U_ILLEGAL_CHAR_FOUND
;

750 
¨gs
->
c⁄vîãr
->
‰omUCh¨32
 = 
ch
;

751 i‡(
¨gs
->
Êush
) {

754 *
îr
 = 
U_ILLEGAL_CHAR_FOUND
;

762 
¨gs
->
c⁄vîãr
->
‰omUCh¨32
 = 
ch
;

763 *
îr
 = 
U_ILLEGAL_CHAR_FOUND
;

769 
ãmp
[2] = (
uöt8_t
Ë(
ch
 >> 16 & 0x1F);

770 
ãmp
[1] = (
uöt8_t
Ë(
ch
 >> 8);

771 
ãmp
[0] = (
uöt8_t
Ë(
ch
);

773 
ödexToWrôe
 = 0; indexToWrôê<(
uöt32_t
) - 1; indexToWrite++)

775 i‡(
myT¨gë
 < 
èrgëLimô
)

777 *(
myT¨gë
++Ë
ãmp
[
ödexToWrôe
];

781 
¨gs
->
c⁄vîãr
->
ch¨Eº‹Buf„r
[¨gs->c⁄vîãr->
ch¨Eº‹Buf„rLígth
++] = 
ãmp
[
ödexToWrôe
];

782 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

787 i‡(
mySour˚
 < 
sour˚Limô
 && 
myT¨gë
 >
èrgëLimô
 && 
	`U_SUCCESS
(*
îr
))

789 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

792 
¨gs
->
èrgë
 = (*Ë
myT¨gë
;

793 
¨gs
->
sour˚
 = 
mySour˚
;

794 
	}
}

797 
	$T_UC⁄vîãr_‰omUnicode_UTF32_LE_OFFSET_LOGIC
(
UC⁄vîãrFromUnicodeArgs
 * 
¨gs
,

798 
UEº‹Code
 * 
îr
)

800 c⁄° 
UCh¨
 *
mySour˚
 = 
¨gs
->
sour˚
;

801 *
myT¨gë
;

802 
öt32_t
 *
myOff£ts
;

803 c⁄° 
UCh¨
 *
sour˚Limô
 = 
¨gs
->sourceLimit;

804 c⁄° *
èrgëLimô
 = (*Ë
¨gs
->targetLimit;

805 
UCh¨32
 
ch
, 
ch2
;

806 
ödexToWrôe
;

807 
ãmp
[(
uöt32_t
)];

808 
öt32_t
 
off£tNum
 = 0;

810 if(
mySour˚
 >
sour˚Limô
) {

816 if(
¨gs
->
c⁄vîãr
->
‰omUnicodeSètus
==
UCNV_NEED_TO_WRITE_BOM
) {

817 c⁄° 
bom
[]={ ()0xff, ()0xfe, 0, 0 };

818 
	`u˙v_‰omUWrôeByãs
(
¨gs
->
c⁄vîãr
,

819 
bom
, 4,

820 &
¨gs
->
èrgë
,árgs->
èrgëLimô
,

821 &
¨gs
->
off£ts
, -1,

822 
îr
);

823 
¨gs
->
c⁄vîãr
->
‰omUnicodeSètus
=0;

826 
myT¨gë
 = (*Ë
¨gs
->
èrgë
;

827 
myOff£ts
 = 
¨gs
->
off£ts
;

828 
ãmp
[3] = 0;

830 i‡(
¨gs
->
c⁄vîãr
->
‰omUCh¨32
)

832 
ch
 = 
¨gs
->
c⁄vîãr
->
‰omUCh¨32
;

833 
¨gs
->
c⁄vîãr
->
‰omUCh¨32
 = 0;

834 
lowsurog©e
;

837 
mySour˚
 < 
sour˚Limô
 && 
myT¨gë
 < 
èrgëLimô
)

839 
ch
 = *(
mySour˚
++);

841 i‡(
	`UTF_IS_SURROGATE
(
ch
)) {

842 i‡(
	`U_IS_LEAD
(
ch
))

844 
lowsurog©e
:

845 i‡(
mySour˚
 < 
sour˚Limô
)

847 
ch2
 = *
mySour˚
;

848 i‡(
	`U_IS_TRAIL
(
ch2
))

850 
ch
 = ((ch - 
SURROGATE_HIGH_START
Ë<< 
HALF_SHIFT
Ë+ 
ch2
 + 
SURROGATE_LOW_BASE
;

851 
mySour˚
++;

856 
¨gs
->
c⁄vîãr
->
‰omUCh¨32
 = 
ch
;

857 *
îr
 = 
U_ILLEGAL_CHAR_FOUND
;

863 
¨gs
->
c⁄vîãr
->
‰omUCh¨32
 = 
ch
;

864 i‡(
¨gs
->
Êush
) {

867 *
îr
 = 
U_ILLEGAL_CHAR_FOUND
;

875 
¨gs
->
c⁄vîãr
->
‰omUCh¨32
 = 
ch
;

876 *
îr
 = 
U_ILLEGAL_CHAR_FOUND
;

882 
ãmp
[2] = (
uöt8_t
Ë(
ch
 >> 16 & 0x1F);

883 
ãmp
[1] = (
uöt8_t
Ë(
ch
 >> 8);

884 
ãmp
[0] = (
uöt8_t
Ë(
ch
);

886 
ödexToWrôe
 = 0; indexToWrôê<(
uöt32_t
) - 1; indexToWrite++)

888 i‡(
myT¨gë
 < 
èrgëLimô
)

890 *(
myT¨gë
++Ë
ãmp
[
ödexToWrôe
];

891 *(
myOff£ts
++Ë
off£tNum
;

895 
¨gs
->
c⁄vîãr
->
ch¨Eº‹Buf„r
[¨gs->c⁄vîãr->
ch¨Eº‹Buf„rLígth
++] = 
ãmp
[
ödexToWrôe
];

896 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

899 
off£tNum
 = off£tNum + 1 + (
ãmp
[2] != 0);

902 i‡(
mySour˚
 < 
sour˚Limô
 && 
myT¨gë
 >
èrgëLimô
 && 
	`U_SUCCESS
(*
îr
))

904 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

907 
¨gs
->
èrgë
 = (*Ë
myT¨gë
;

908 
¨gs
->
sour˚
 = 
mySour˚
;

909 
¨gs
->
off£ts
 = 
myOff£ts
;

910 
	}
}

912 
UCh¨32


913 
	$T_UC⁄vîãr_gëNextUCh¨_UTF32_LE
(
UC⁄vîãrToUnicodeArgs
* 
¨gs
,

914 
UEº‹Code
* 
îr
)

916 c⁄° 
uöt8_t
 *
mySour˚
;

917 
UCh¨32
 
myUCh¨
;

918 
öt32_t
 
Àngth
;

920 
mySour˚
 = (c⁄° 
uöt8_t
 *)
¨gs
->
sour˚
;

921 i‡(
mySour˚
 >(c⁄° 
uöt8_t
 *)
¨gs
->
sour˚Limô
)

924 *
îr
 = 
U_INDEX_OUTOFBOUNDS_ERROR
;

928 
Àngth
 = (
öt32_t
)((c⁄° 
uöt8_t
 *)
¨gs
->
sour˚Limô
 - 
mySour˚
);

929 i‡(
Àngth
 < 4)

932 
	`u¥v_mem˝y
(
¨gs
->
c⁄vîãr
->
toUByãs
, 
mySour˚
, 
Àngth
);

933 
¨gs
->
c⁄vîãr
->
toULígth
 = (
öt8_t
)
Àngth
;

934 
¨gs
->
sour˚
 = (c⁄° *)(
mySour˚
 + 
Àngth
);

935 *
îr
 = 
U_TRUNCATED_CHAR_FOUND
;

940 
myUCh¨
 = ((
UCh¨32
)
mySour˚
[3] << 24)

941 | ((
UCh¨32
)
mySour˚
[2] << 16)

942 | ((
UCh¨32
)
mySour˚
[1] << 8)

943 | ((
UCh¨32
)
mySour˚
[0]);

945 
¨gs
->
sour˚
 = (c⁄° *)(
mySour˚
 + 4);

946 i‡((
uöt32_t
)
myUCh¨
 <
MAXIMUM_UTF
 && !
	`U_IS_SURROGATE
(myUChar)) {

947  
myUCh¨
;

950 
	`u¥v_mem˝y
(
¨gs
->
c⁄vîãr
->
toUByãs
, 
mySour˚
, 4);

951 
¨gs
->
c⁄vîãr
->
toULígth
 = 4;

953 *
îr
 = 
U_ILLEGAL_CHAR_FOUND
;

955 
	}
}

957 c⁄° 
UC⁄vîãrIm∂
 
	g_UTF32LEIm∂
 = {

958 
UCNV_UTF32_LôéeEndün
,

960 
NULL
,

961 
NULL
,

963 
NULL
,

964 
NULL
,

965 
NULL
,

967 
T_UC⁄vîãr_toUnicode_UTF32_LE
,

968 
T_UC⁄vîãr_toUnicode_UTF32_LE_OFFSET_LOGIC
,

969 
T_UC⁄vîãr_‰omUnicode_UTF32_LE
,

970 
T_UC⁄vîãr_‰omUnicode_UTF32_LE_OFFSET_LOGIC
,

971 
T_UC⁄vîãr_gëNextUCh¨_UTF32_LE
,

973 
NULL
,

974 
NULL
,

975 
NULL
,

976 
NULL
,

977 
u˙v_gëN⁄Suºog©eUnicodeSë


981 c⁄° 
UC⁄vîãrSèticD©a
 
	g_UTF32LESèticD©a
 = {

982 (
UC⁄vîãrSèticD©a
),

985 
UCNV_IBM
, 
UCNV_UTF32_LôéeEndün
, 4, 4,

986 { 0xfd, 0xff, 0, 0 }, 4, 
FALSE
, FALSE,

993 c⁄° 
UC⁄vîãrSh¨edD©a
 
	g_UTF32LED©a
 = {

994 (
UC⁄vîãrSh¨edD©a
), ~((
uöt32_t
) 0),

995 
NULL
, NULL, &
_UTF32LESèticD©a
, 
FALSE
, &
_UTF32LEIm∂
,

1023 
	$_UTF32Re£t
(
UC⁄vîãr
 *
˙v
, 
UC⁄vîãrRe£tChoi˚
 
choi˚
) {

1024 if(
choi˚
<=
UCNV_RESET_TO_UNICODE
) {

1026 
˙v
->
mode
=0;

1028 if(
choi˚
!=
UCNV_RESET_TO_UNICODE
) {

1030 
˙v
->
‰omUnicodeSètus
=
UCNV_NEED_TO_WRITE_BOM
;

1032 
	}
}

1035 
	$_UTF32O≥n
(
UC⁄vîãr
 *
˙v
,

1036 
UC⁄vîãrLﬂdArgs
 *
pArgs
,

1037 
UEº‹Code
 *
pEº‹Code
) {

1038 
	`_UTF32Re£t
(
˙v
, 
UCNV_RESET_BOTH
);

1039 
	}
}

1041 c⁄° 
	gutf32BOM
[8]={ 0, 0, ()0xfe, ()0xff, ()0xff, ()0xfe, 0, 0 };

1044 
	$_UTF32ToUnicodeWôhOff£ts
(
UC⁄vîãrToUnicodeArgs
 *
pArgs
,

1045 
UEº‹Code
 *
pEº‹Code
) {

1046 
UC⁄vîãr
 *
˙v
=
pArgs
->
c⁄vîãr
;

1047 c⁄° *
sour˚
=
pArgs
->source;

1048 c⁄° *
sour˚Limô
=
pArgs
->sourceLimit;

1049 
öt32_t
 *
off£ts
=
pArgs
->offsets;

1051 
öt32_t
 
°©e
, 
off£tDñè
;

1052 
b
;

1054 
°©e
=
˙v
->
mode
;

1061 
off£tDñè
=0;

1063 
sour˚
<
sour˚Limô
 && 
	`U_SUCCESS
(*
pEº‹Code
)) {

1064 
°©e
) {

1066 
b
=*
sour˚
;

1067 if(
b
==0) {

1068 
°©e
=1;

1069 } if(
b
==()0xff) {

1070 
°©e
=5;

1072 
°©e
=8;

1075 ++
sour˚
;

1083 if(*
sour˚
==
utf32BOM
[
°©e
]) {

1084 ++
°©e
;

1085 ++
sour˚
;

1086 if(
°©e
==4) {

1087 
°©e
=8;

1088 
off£tDñè
=(
öt32_t
)(
sour˚
-
pArgs
->source);

1089 } if(
°©e
==8) {

1090 
°©e
=9;

1091 
off£tDñè
=(
öt32_t
)(
sour˚
-
pArgs
->source);

1095 
öt32_t
 
cou¡
=(öt32_t)(
sour˚
-
pArgs
->source);

1098 
sour˚
=
pArgs
->source;

1100 if(
cou¡
==(
°©e
&3)) {

1103 
UBoﬁ
 
ﬁdFlush
=
pArgs
->
Êush
;

1106 
pArgs
->
sour˚
=
utf32BOM
+(
°©e
&4);

1107 
pArgs
->
sour˚Limô
ıArgs->
sour˚
+((
°©e
&3)-
cou¡
);

1108 
pArgs
->
Êush
=
FALSE
;

1111 
	`T_UC⁄vîãr_toUnicode_UTF32_BE
(
pArgs
, 
pEº‹Code
);

1114 
pArgs
->
sour˚Limô
=sourceLimit;

1115 
pArgs
->
Êush
=
ﬁdFlush
;

1117 
°©e
=8;

1123 
pArgs
->
sour˚
=source;

1124 if(
off£ts
==
NULL
) {

1125 
	`T_UC⁄vîãr_toUnicode_UTF32_BE
(
pArgs
, 
pEº‹Code
);

1127 
	`T_UC⁄vîãr_toUnicode_UTF32_BE_OFFSET_LOGIC
(
pArgs
, 
pEº‹Code
);

1129 
sour˚
=
pArgs
->source;

1133 
pArgs
->
sour˚
=source;

1134 if(
off£ts
==
NULL
) {

1135 
	`T_UC⁄vîãr_toUnicode_UTF32_LE
(
pArgs
, 
pEº‹Code
);

1137 
	`T_UC⁄vîãr_toUnicode_UTF32_LE_OFFSET_LOGIC
(
pArgs
, 
pEº‹Code
);

1139 
sour˚
=
pArgs
->source;

1147 if(
off£ts
!=
NULL
 && 
off£tDñè
!=0) {

1148 
öt32_t
 *
off£tsLimô
=
pArgs
->
off£ts
;

1149 
off£ts
<
off£tsLimô
) {

1150 *
off£ts
++ +
off£tDñè
;

1154 
pArgs
->
sour˚
=source;

1156 if(
sour˚
==
sour˚Limô
 && 
pArgs
->
Êush
) {

1158 
°©e
) {

1162 
	`T_UC⁄vîãr_toUnicode_UTF32_BE
(
pArgs
, 
pEº‹Code
);

1165 
	`T_UC⁄vîãr_toUnicode_UTF32_LE
(
pArgs
, 
pEº‹Code
);

1169 
pArgs
->
sour˚
=
utf32BOM
+(
°©e
&4);

1170 
pArgs
->
sour˚Limô
ıArgs->
sour˚
+(
°©e
&3);

1173 
	`T_UC⁄vîãr_toUnicode_UTF32_BE
(
pArgs
, 
pEº‹Code
);

1174 
pArgs
->
sour˚
=source;

1175 
pArgs
->
sour˚Limô
=sourceLimit;

1176 
°©e
=8;

1181 
˙v
->
mode
=
°©e
;

1182 
	}
}

1184 
UCh¨32


1185 
	$_UTF32GëNextUCh¨
(
UC⁄vîãrToUnicodeArgs
 *
pArgs
,

1186 
UEº‹Code
 *
pEº‹Code
) {

1187 
pArgs
->
c⁄vîãr
->
mode
) {

1189  
	`T_UC⁄vîãr_gëNextUCh¨_UTF32_BE
(
pArgs
, 
pEº‹Code
);

1191  
	`T_UC⁄vîãr_gëNextUCh¨_UTF32_LE
(
pArgs
, 
pEº‹Code
);

1193  
UCNV_GET_NEXT_UCHAR_USE_TO_U
;

1195 
	}
}

1197 c⁄° 
UC⁄vîãrIm∂
 
	g_UTF32Im∂
 = {

1198 
UCNV_UTF32
,

1200 
NULL
,

1201 
NULL
,

1203 
_UTF32O≥n
,

1204 
NULL
,

1205 
_UTF32Re£t
,

1207 
_UTF32ToUnicodeWôhOff£ts
,

1208 
_UTF32ToUnicodeWôhOff£ts
,

1209 #i‡
U_IS_BIG_ENDIAN


1210 
T_UC⁄vîãr_‰omUnicode_UTF32_BE
,

1211 
T_UC⁄vîãr_‰omUnicode_UTF32_BE_OFFSET_LOGIC
,

1213 
T_UC⁄vîãr_‰omUnicode_UTF32_LE
,

1214 
T_UC⁄vîãr_‰omUnicode_UTF32_LE_OFFSET_LOGIC
,

1216 
_UTF32GëNextUCh¨
,

1218 
NULL
,

1219 
NULL
,

1220 
NULL
,

1221 
NULL
,

1222 
u˙v_gëN⁄Suºog©eUnicodeSë


1226 c⁄° 
UC⁄vîãrSèticD©a
 
	g_UTF32SèticD©a
 = {

1227 (
UC⁄vîãrSèticD©a
),

1230 
UCNV_IBM
, 
UCNV_UTF32
, 4, 4,

1231 #i‡
U_IS_BIG_ENDIAN


1236 
FALSE
, FALSE,

1242 c⁄° 
UC⁄vîãrSh¨edD©a
 
	g_UTF32D©a
 = {

1243 (
UC⁄vîãrSh¨edD©a
), ~((
uöt32_t
) 0),

1244 
NULL
, NULL, &
_UTF32SèticD©a
, 
FALSE
, &
_UTF32Im∂
,

	@ucnv_u7.c

17 
	~"unicode/uty≥s.h
"

19 #i‡!
UCONFIG_NO_CONVERSION


21 
	~"unicode/u˙v.h
"

22 
	~"u˙v_bld.h
"

23 
	~"u˙v_˙v.h
"

69 
	#öSëD
(
c
) \

70 ((
uöt8_t
)((
c
)-97)<26 || (uint8_t)((c)-65)<26 || \

71 (
uöt8_t
)((
c
)-48)<10 || \

72 (
uöt8_t
)((
c
)-39)<3 || \

73 (
uöt8_t
)((
c
)-44)<4 || \

74 (
c
)==58 || (c)==63 \

75 )

	)

77 
	#öSëO
(
c
) \

78 ((
uöt8_t
)((
c
)-33)<6 || \

79 (
uöt8_t
)((
c
)-59)<4 || \

80 (
uöt8_t
)((
c
)-93)<4 || \

81 (
uöt8_t
)((
c
)-123)<3 || \

82 (
c
)==42 || (c)==64 || (c)==91 \

83 )

	)

85 
	#isCRLFTAB
(
c
Ë((c)==13 || (c)==10 || (c)==9)

	)

86 
	#isCRLFSPTAB
(
c
Ë((c)==32 || (c)==13 || (c)==10 || (c)==9)

	)

88 
	#PLUS
 43

	)

89 
	#MINUS
 45

	)

90 
	#BACKSLASH
 92

	)

91 
	#TILDE
 126

	)

94 
	#isLegÆUTF7
(
c
Ë(((
uöt8_t
)((c)-32)<94 && (c)!=
BACKSLASH
Ë|| 
	`isCRLFTAB
(c))

	)

97 c⁄° 
UBoﬁ
 
	gícodeDúe˘lyMaximum
[128]={

113 c⁄° 
UBoﬁ
 
	gícodeDúe˘lyRe°ri˘ed
[128]={

128 c⁄° 
uöt8_t


129 
	gtoBa£64
[64]={

142 c⁄° 
öt8_t


143 
	g‰omBa£64
[128]={

179 
	$_UTF7Re£t
(
UC⁄vîãr
 *
˙v
, 
UC⁄vîãrRe£tChoi˚
 
choi˚
) {

180 if(
choi˚
<=
UCNV_RESET_TO_UNICODE
) {

182 
˙v
->
toUnicodeSètus
=0x1000000;

183 
˙v
->
toULígth
=0;

185 if(
choi˚
!=
UCNV_RESET_TO_UNICODE
) {

187 
˙v
->
‰omUnicodeSètus
=(cnv->fromUnicodeStatus&0xf0000000)|0x1000000;

189 
	}
}

192 
	$_UTF7O≥n
(
UC⁄vîãr
 *
˙v
,

193 
UC⁄vîãrLﬂdArgs
 *
pArgs
,

194 
UEº‹Code
 *
pEº‹Code
) {

195 if(
	`UCNV_GET_VERSION
(
˙v
)<=1) {

197 
˙v
->
‰omUnicodeSètus
=
	`UCNV_GET_VERSION
(cnv)<<28;

198 
	`_UTF7Re£t
(
˙v
, 
UCNV_RESET_BOTH
);

200 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

202 
	}
}

205 
	$_UTF7ToUnicodeWôhOff£ts
(
UC⁄vîãrToUnicodeArgs
 *
pArgs
,

206 
UEº‹Code
 *
pEº‹Code
) {

207 
UC⁄vîãr
 *
˙v
;

208 c⁄° 
uöt8_t
 *
sour˚
, *
sour˚Limô
;

209 
UCh¨
 *
èrgë
;

210 c⁄° 
UCh¨
 *
èrgëLimô
;

211 
öt32_t
 *
off£ts
;

213 
uöt8_t
 *
byãs
;

214 
uöt8_t
 
byãIndex
;

216 
öt32_t
 
Àngth
, 
èrgëC≠acôy
;

219 
uöt16_t
 
bôs
;

220 
öt8_t
 
ba£64Cou¡î
;

221 
UBoﬁ
 
öDúe˘Mode
;

223 
öt8_t
 
ba£64VÆue
;

225 
öt32_t
 
sour˚Index
, 
√xtSour˚Index
;

227 
uöt8_t
 
b
;

229 
˙v
=
pArgs
->
c⁄vîãr
;

231 
sour˚
=(c⁄° 
uöt8_t
 *)
pArgs
->source;

232 
sour˚Limô
=(c⁄° 
uöt8_t
 *)
pArgs
->sourceLimit;

233 
èrgë
=
pArgs
->target;

234 
èrgëLimô
=
pArgs
->targetLimit;

235 
off£ts
=
pArgs
->offsets;

238 
uöt32_t
 
°©us
=
˙v
->
toUnicodeSètus
;

239 
öDúe˘Mode
=(
UBoﬁ
)((
°©us
>>24)&1);

240 
ba£64Cou¡î
=(
öt8_t
)(
°©us
>>16);

241 
bôs
=(
uöt16_t
)
°©us
;

243 
byãs
=
˙v
->
toUByãs
;

244 
byãIndex
=
˙v
->
toULígth
;

247 
sour˚Index
=
byãIndex
==0 ? 0 : -1;

248 
√xtSour˚Index
=0;

250 if(
öDúe˘Mode
) {

251 
dúe˘Mode
:

260 
byãIndex
=0;

261 
Àngth
=(
öt32_t
)(
sour˚Limô
-
sour˚
);

262 
èrgëC≠acôy
=(
öt32_t
)(
èrgëLimô
-
èrgë
);

263 if(
Àngth
>
èrgëC≠acôy
) {

264 
Àngth
=
èrgëC≠acôy
;

266 
Àngth
>0) {

267 
b
=*
sour˚
++;

268 if(!
	`isLegÆUTF7
(
b
)) {

270 
byãs
[0]=
b
;

271 
byãIndex
=1;

272 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

274 } if(
b
!=
PLUS
) {

276 *
èrgë
++=
b
;

277 if(
off£ts
!=
NULL
) {

278 *
off£ts
++=
sour˚Index
++;

282 
√xtSour˚Index
=++
sour˚Index
;

283 
öDúe˘Mode
=
FALSE
;

284 
byãIndex
=0;

285 
bôs
=0;

286 
ba£64Cou¡î
=-1;

287 
unicodeMode
;

289 --
Àngth
;

291 if(
sour˚
<
sour˚Limô
 && 
èrgë
>=
èrgëLimô
) {

293 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

296 
unicodeMode
:

307 
sour˚
<
sour˚Limô
) {

308 if(
èrgë
<
èrgëLimô
) {

309 
byãs
[
byãIndex
++]=
b
=*
sour˚
++;

310 ++
√xtSour˚Index
;

311 if(
b
>=126) {

313 
öDúe˘Mode
=
TRUE
;

314 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

316 } if((
ba£64VÆue
=
‰omBa£64
[
b
])>=0) {

318 
ba£64Cou¡î
) {

321 
bôs
=
ba£64VÆue
;

322 
ba£64Cou¡î
=1;

328 
bôs
=(
uöt16_t
)((bôs<<6)|
ba£64VÆue
);

329 ++
ba£64Cou¡î
;

332 *
èrgë
++=(
UCh¨
)((
bôs
<<4)|(
ba£64VÆue
>>2));

333 if(
off£ts
!=
NULL
) {

334 *
off£ts
++=
sour˚Index
;

335 
sour˚Index
=
√xtSour˚Index
-1;

337 
byãs
[0]=
b
;

338 
byãIndex
=1;

339 
bôs
=(
uöt16_t
)(
ba£64VÆue
&3);

340 
ba£64Cou¡î
=3;

343 *
èrgë
++=(
UCh¨
)((
bôs
<<2)|(
ba£64VÆue
>>4));

344 if(
off£ts
!=
NULL
) {

345 *
off£ts
++=
sour˚Index
;

346 
sour˚Index
=
√xtSour˚Index
-1;

348 
byãs
[0]=
b
;

349 
byãIndex
=1;

350 
bôs
=(
uöt16_t
)(
ba£64VÆue
&15);

351 
ba£64Cou¡î
=6;

354 *
èrgë
++=(
UCh¨
)((
bôs
<<6)|
ba£64VÆue
);

355 if(
off£ts
!=
NULL
) {

356 *
off£ts
++=
sour˚Index
;

357 
sour˚Index
=
√xtSour˚Index
;

359 
byãIndex
=0;

360 
bôs
=0;

361 
ba£64Cou¡î
=0;

367 } if(
ba£64VÆue
==-2) {

369 
öDúe˘Mode
=
TRUE
;

370 if(
ba£64Cou¡î
==-1) {

372 *
èrgë
++=
PLUS
;

373 if(
off£ts
!=
NULL
) {

374 *
off£ts
++=
sour˚Index
-1;

378 if(
bôs
!=0) {

380 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

384 
sour˚Index
=
√xtSour˚Index
;

385 
dúe˘Mode
;

386 } if(
ba£64VÆue
==-1) {

388 
öDúe˘Mode
=
TRUE
;

389 if(
ba£64Cou¡î
==-1) {

392 --
sour˚Index
;

393 
byãs
[0]=
PLUS
;

394 
byãs
[1]=
b
;

395 
byãIndex
=2;

396 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

398 } if(
bôs
==0) {

400 --
sour˚
;

401 
sour˚Index
=
√xtSour˚Index
-1;

402 
dúe˘Mode
;

405 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

410 
öDúe˘Mode
=
TRUE
;

411 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

416 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

422 if(
	`U_SUCCESS
(*
pEº‹Code
Ë&& 
pArgs
->
Êush
 && 
sour˚
==
sour˚Limô
 && 
bôs
==0) {

429 
byãIndex
=0;

433 
˙v
->
toUnicodeSètus
=((
uöt32_t
)
öDúe˘Mode
<<24)|((uöt32_t)((
uöt8_t
)
ba£64Cou¡î
)<<16)|(uöt32_t)
bôs
;

434 
˙v
->
toULígth
=
byãIndex
;

437 
pArgs
->
sour˚
=(const *)source;

438 
pArgs
->
èrgë
=target;

439 
pArgs
->
off£ts
=offsets;

441 
	}
}

444 
	$_UTF7FromUnicodeWôhOff£ts
(
UC⁄vîãrFromUnicodeArgs
 *
pArgs
,

445 
UEº‹Code
 *
pEº‹Code
) {

446 
UC⁄vîãr
 *
˙v
;

447 c⁄° 
UCh¨
 *
sour˚
, *
sour˚Limô
;

448 
uöt8_t
 *
èrgë
, *
èrgëLimô
;

449 
öt32_t
 *
off£ts
;

451 
öt32_t
 
Àngth
, 
èrgëC≠acôy
, 
sour˚Index
;

452 
UCh¨
 
c
;

455 c⁄° 
UBoﬁ
 *
ícodeDúe˘ly
;

456 
uöt8_t
 
bôs
;

457 
öt8_t
 
ba£64Cou¡î
;

458 
UBoﬁ
 
öDúe˘Mode
;

461 
˙v
=
pArgs
->
c⁄vîãr
;

464 
sour˚
=
pArgs
->source;

465 
sour˚Limô
=
pArgs
->sourceLimit;

466 
èrgë
=(
uöt8_t
 *)
pArgs
->target;

467 
èrgëLimô
=(
uöt8_t
 *)
pArgs
->targetLimit;

468 
off£ts
=
pArgs
->offsets;

472 
uöt32_t
 
°©us
=
˙v
->
‰omUnicodeSètus
;

473 
ícodeDúe˘ly

°©us
<0x10000000 ? 
ícodeDúe˘lyMaximum
 : 
ícodeDúe˘lyRe°ri˘ed
;

474 
öDúe˘Mode
=(
UBoﬁ
)((
°©us
>>24)&1);

475 
ba£64Cou¡î
=(
öt8_t
)(
°©us
>>16);

476 
bôs
=(
uöt8_t
)
°©us
;

480 
sour˚Index
=0;

482 if(
öDúe˘Mode
) {

483 
dúe˘Mode
:

484 
Àngth
=(
öt32_t
)(
sour˚Limô
-
sour˚
);

485 
èrgëC≠acôy
=(
öt32_t
)(
èrgëLimô
-
èrgë
);

486 if(
Àngth
>
èrgëC≠acôy
) {

487 
Àngth
=
èrgëC≠acôy
;

489 
Àngth
>0) {

490 
c
=*
sour˚
++;

492 if(
c
<=127 && 
ícodeDúe˘ly
[c]) {

494 *
èrgë
++=(
uöt8_t
)
c
;

495 if(
off£ts
!=
NULL
) {

496 *
off£ts
++=
sour˚Index
++;

498 } if(
c
==
PLUS
) {

500 *
èrgë
++=
PLUS
;

501 if(
èrgë
<
èrgëLimô
) {

502 *
èrgë
++=
MINUS
;

503 if(
off£ts
!=
NULL
) {

504 *
off£ts
++=
sour˚Index
;

505 *
off£ts
++=
sour˚Index
++;

508 
dúe˘Mode
;

510 if(
off£ts
!=
NULL
) {

511 *
off£ts
++=
sour˚Index
++;

513 
˙v
->
ch¨Eº‹Buf„r
[0]=
MINUS
;

514 
˙v
->
ch¨Eº‹Buf„rLígth
=1;

515 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

520 --
sour˚
;

521 *
èrgë
++=
PLUS
;

522 if(
off£ts
!=
NULL
) {

523 *
off£ts
++=
sour˚Index
;

525 
öDúe˘Mode
=
FALSE
;

526 
ba£64Cou¡î
=0;

527 
unicodeMode
;

529 --
Àngth
;

531 if(
sour˚
<
sour˚Limô
 && 
èrgë
>=
èrgëLimô
) {

533 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

536 
unicodeMode
:

537 
sour˚
<
sour˚Limô
) {

538 if(
èrgë
<
èrgëLimô
) {

539 
c
=*
sour˚
++;

540 if(
c
<=127 && 
ícodeDúe˘ly
[c]) {

542 
öDúe˘Mode
=
TRUE
;

545 --
sour˚
;

548 if(
ba£64Cou¡î
!=0) {

550 *
èrgë
++=
toBa£64
[
bôs
];

551 if(
off£ts
!=
NULL
) {

552 *
off£ts
++=
sour˚Index
-1;

555 if(
‰omBa£64
[
c
]!=-1) {

557 if(
èrgë
<
èrgëLimô
) {

558 *
èrgë
++=
MINUS
;

559 if(
off£ts
!=
NULL
) {

560 *
off£ts
++=
sour˚Index
-1;

563 
˙v
->
ch¨Eº‹Buf„r
[0]=
MINUS
;

564 
˙v
->
ch¨Eº‹Buf„rLígth
=1;

565 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

569 
dúe˘Mode
;

580 
ba£64Cou¡î
) {

582 *
èrgë
++=
toBa£64
[
c
>>10];

583 if(
èrgë
<
èrgëLimô
) {

584 *
èrgë
++=
toBa£64
[(
c
>>4)&0x3f];

585 if(
off£ts
!=
NULL
) {

586 *
off£ts
++=
sour˚Index
;

587 *
off£ts
++=
sour˚Index
++;

590 if(
off£ts
!=
NULL
) {

591 *
off£ts
++=
sour˚Index
++;

593 
˙v
->
ch¨Eº‹Buf„r
[0]=
toBa£64
[(
c
>>4)&0x3f];

594 
˙v
->
ch¨Eº‹Buf„rLígth
=1;

595 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

597 
bôs
=(
uöt8_t
)((
c
&15)<<2);

598 
ba£64Cou¡î
=1;

601 *
èrgë
++=
toBa£64
[
bôs
|(
c
>>14)];

602 if(
èrgë
<
èrgëLimô
) {

603 *
èrgë
++=
toBa£64
[(
c
>>8)&0x3f];

604 if(
èrgë
<
èrgëLimô
) {

605 *
èrgë
++=
toBa£64
[(
c
>>2)&0x3f];

606 if(
off£ts
!=
NULL
) {

607 *
off£ts
++=
sour˚Index
;

608 *
off£ts
++=
sour˚Index
;

609 *
off£ts
++=
sour˚Index
++;

612 if(
off£ts
!=
NULL
) {

613 *
off£ts
++=
sour˚Index
;

614 *
off£ts
++=
sour˚Index
++;

616 
˙v
->
ch¨Eº‹Buf„r
[0]=
toBa£64
[(
c
>>2)&0x3f];

617 
˙v
->
ch¨Eº‹Buf„rLígth
=1;

618 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

621 if(
off£ts
!=
NULL
) {

622 *
off£ts
++=
sour˚Index
++;

624 
˙v
->
ch¨Eº‹Buf„r
[0]=
toBa£64
[(
c
>>8)&0x3f];

625 
˙v
->
ch¨Eº‹Buf„r
[1]=
toBa£64
[(
c
>>2)&0x3f];

626 
˙v
->
ch¨Eº‹Buf„rLígth
=2;

627 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

629 
bôs
=(
uöt8_t
)((
c
&3)<<4);

630 
ba£64Cou¡î
=2;

633 *
èrgë
++=
toBa£64
[
bôs
|(
c
>>12)];

634 if(
èrgë
<
èrgëLimô
) {

635 *
èrgë
++=
toBa£64
[(
c
>>6)&0x3f];

636 if(
èrgë
<
èrgëLimô
) {

637 *
èrgë
++=
toBa£64
[
c
&0x3f];

638 if(
off£ts
!=
NULL
) {

639 *
off£ts
++=
sour˚Index
;

640 *
off£ts
++=
sour˚Index
;

641 *
off£ts
++=
sour˚Index
++;

644 if(
off£ts
!=
NULL
) {

645 *
off£ts
++=
sour˚Index
;

646 *
off£ts
++=
sour˚Index
++;

648 
˙v
->
ch¨Eº‹Buf„r
[0]=
toBa£64
[
c
&0x3f];

649 
˙v
->
ch¨Eº‹Buf„rLígth
=1;

650 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

653 if(
off£ts
!=
NULL
) {

654 *
off£ts
++=
sour˚Index
++;

656 
˙v
->
ch¨Eº‹Buf„r
[0]=
toBa£64
[(
c
>>6)&0x3f];

657 
˙v
->
ch¨Eº‹Buf„r
[1]=
toBa£64
[
c
&0x3f];

658 
˙v
->
ch¨Eº‹Buf„rLígth
=2;

659 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

661 
bôs
=0;

662 
ba£64Cou¡î
=0;

671 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

677 if(
pArgs
->
Êush
 && 
sour˚
>=
sour˚Limô
) {

679 if(!
öDúe˘Mode
 && 
ba£64Cou¡î
!=0) {

680 if(
èrgë
<
èrgëLimô
) {

681 *
èrgë
++=
toBa£64
[
bôs
];

682 if(
off£ts
!=
NULL
) {

683 *
off£ts
++=
sour˚Index
-1;

686 
˙v
->
ch¨Eº‹Buf„r
[˙v->
ch¨Eº‹Buf„rLígth
++]=
toBa£64
[
bôs
];

687 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

691 
˙v
->
‰omUnicodeSètus
=(cnv->fromUnicodeStatus&0xf0000000)|0x1000000;

694 
˙v
->
‰omUnicodeSètus
=

695 (
˙v
->
‰omUnicodeSètus
&0xf0000000)|

696 ((
uöt32_t
)
öDúe˘Mode
<<24)|((uöt32_t)
ba£64Cou¡î
<<16)|(uöt32_t)
bôs
;

700 
pArgs
->
sour˚
=source;

701 
pArgs
->
èrgë
=(*)target;

702 
pArgs
->
off£ts
=offsets;

704 
	}
}

707 
	$_UTF7GëName
(c⁄° 
UC⁄vîãr
 *
˙v
) {

708 
˙v
->
‰omUnicodeSètus
>>28) {

714 
	}
}

716 c⁄° 
UC⁄vîãrIm∂
 
	g_UTF7Im∂
={

717 
UCNV_UTF7
,

719 
NULL
,

720 
NULL
,

722 
_UTF7O≥n
,

723 
NULL
,

724 
_UTF7Re£t
,

726 
_UTF7ToUnicodeWôhOff£ts
,

727 
_UTF7ToUnicodeWôhOff£ts
,

728 
_UTF7FromUnicodeWôhOff£ts
,

729 
_UTF7FromUnicodeWôhOff£ts
,

730 
NULL
,

732 
NULL
,

733 
_UTF7GëName
,

734 
NULL
,

735 
NULL
,

736 
u˙v_gëCom∂ëeUnicodeSë


739 c⁄° 
UC⁄vîãrSèticD©a
 
	g_UTF7SèticD©a
={

740 (
UC⁄vîãrSèticD©a
),

743 
UCNV_IBM
, 
UCNV_UTF7
,

746 
FALSE
, FALSE,

752 c⁄° 
UC⁄vîãrSh¨edD©a
 
	g_UTF7D©a
={

753 (
UC⁄vîãrSh¨edD©a
), ~((
uöt32_t
)0),

754 
NULL
, NULL, &
_UTF7SèticD©a
, 
FALSE
, &
_UTF7Im∂
,

832 
	#AMPERSAND
 0x26

	)

833 
	#COMMA
 0x2c

	)

834 
	#SLASH
 0x2f

	)

837 
	#isLegÆIMAP
(
c
Ë(0x20<=(cË&& (c)<=0x7e)

	)

840 
	#öSëDIMAP
(
c
Ë(
	`isLegÆIMAP
(cË&& c!=
AMPERSAND
)

	)

842 
	#TO_BASE64_IMAP
(
n
Ë(“)<63 ? 
toBa£64
[n] : 
COMMA
)

	)

843 
	#FROM_BASE64_IMAP
(
c
Ë((c)==
COMMA
 ? 63 : (c)==
SLASH
 ? -1 : 
‰omBa£64
[c])

	)

862 
	$_IMAPToUnicodeWôhOff£ts
(
UC⁄vîãrToUnicodeArgs
 *
pArgs
,

863 
UEº‹Code
 *
pEº‹Code
) {

864 
UC⁄vîãr
 *
˙v
;

865 c⁄° 
uöt8_t
 *
sour˚
, *
sour˚Limô
;

866 
UCh¨
 *
èrgë
;

867 c⁄° 
UCh¨
 *
èrgëLimô
;

868 
öt32_t
 *
off£ts
;

870 
uöt8_t
 *
byãs
;

871 
uöt8_t
 
byãIndex
;

873 
öt32_t
 
Àngth
, 
èrgëC≠acôy
;

876 
uöt16_t
 
bôs
;

877 
öt8_t
 
ba£64Cou¡î
;

878 
UBoﬁ
 
öDúe˘Mode
;

880 
öt8_t
 
ba£64VÆue
;

882 
öt32_t
 
sour˚Index
, 
√xtSour˚Index
;

884 
UCh¨
 
c
;

885 
uöt8_t
 
b
;

888 
˙v
=
pArgs
->
c⁄vîãr
;

890 
sour˚
=(c⁄° 
uöt8_t
 *)
pArgs
->source;

891 
sour˚Limô
=(c⁄° 
uöt8_t
 *)
pArgs
->sourceLimit;

892 
èrgë
=
pArgs
->target;

893 
èrgëLimô
=
pArgs
->targetLimit;

894 
off£ts
=
pArgs
->offsets;

897 
uöt32_t
 
°©us
=
˙v
->
toUnicodeSètus
;

898 
öDúe˘Mode
=(
UBoﬁ
)((
°©us
>>24)&1);

899 
ba£64Cou¡î
=(
öt8_t
)(
°©us
>>16);

900 
bôs
=(
uöt16_t
)
°©us
;

902 
byãs
=
˙v
->
toUByãs
;

903 
byãIndex
=
˙v
->
toULígth
;

906 
sour˚Index
=
byãIndex
==0 ? 0 : -1;

907 
√xtSour˚Index
=0;

909 if(
öDúe˘Mode
) {

910 
dúe˘Mode
:

918 
byãIndex
=0;

919 
Àngth
=(
öt32_t
)(
sour˚Limô
-
sour˚
);

920 
èrgëC≠acôy
=(
öt32_t
)(
èrgëLimô
-
èrgë
);

921 if(
Àngth
>
èrgëC≠acôy
) {

922 
Àngth
=
èrgëC≠acôy
;

924 
Àngth
>0) {

925 
b
=*
sour˚
++;

926 if(!
	`isLegÆIMAP
(
b
)) {

928 
byãs
[0]=
b
;

929 
byãIndex
=1;

930 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

932 } if(
b
!=
AMPERSAND
) {

934 *
èrgë
++=
b
;

935 if(
off£ts
!=
NULL
) {

936 *
off£ts
++=
sour˚Index
++;

940 
√xtSour˚Index
=++
sour˚Index
;

941 
öDúe˘Mode
=
FALSE
;

942 
byãIndex
=0;

943 
bôs
=0;

944 
ba£64Cou¡î
=-1;

945 
unicodeMode
;

947 --
Àngth
;

949 if(
sour˚
<
sour˚Limô
 && 
èrgë
>=
èrgëLimô
) {

951 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

954 
unicodeMode
:

966 
sour˚
<
sour˚Limô
) {

967 if(
èrgë
<
èrgëLimô
) {

968 
byãs
[
byãIndex
++]=
b
=*
sour˚
++;

969 ++
√xtSour˚Index
;

970 if(
b
>0x7e) {

972 
öDúe˘Mode
=
TRUE
;

973 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

975 } if((
ba£64VÆue
=
	`FROM_BASE64_IMAP
(
b
))>=0) {

977 
ba£64Cou¡î
) {

980 
bôs
=
ba£64VÆue
;

981 
ba£64Cou¡î
=1;

987 
bôs
=(
uöt16_t
)((bôs<<6)|
ba£64VÆue
);

988 ++
ba£64Cou¡î
;

991 
c
=(
UCh¨
)((
bôs
<<4)|(
ba£64VÆue
>>2));

992 if(
	`isLegÆIMAP
(
c
)) {

994 
öDúe˘Mode
=
TRUE
;

995 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

996 
ídlo›
;

998 *
èrgë
++=
c
;

999 if(
off£ts
!=
NULL
) {

1000 *
off£ts
++=
sour˚Index
;

1001 
sour˚Index
=
√xtSour˚Index
-1;

1003 
byãs
[0]=
b
;

1004 
byãIndex
=1;

1005 
bôs
=(
uöt16_t
)(
ba£64VÆue
&3);

1006 
ba£64Cou¡î
=3;

1009 
c
=(
UCh¨
)((
bôs
<<2)|(
ba£64VÆue
>>4));

1010 if(
	`isLegÆIMAP
(
c
)) {

1012 
öDúe˘Mode
=
TRUE
;

1013 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

1014 
ídlo›
;

1016 *
èrgë
++=
c
;

1017 if(
off£ts
!=
NULL
) {

1018 *
off£ts
++=
sour˚Index
;

1019 
sour˚Index
=
√xtSour˚Index
-1;

1021 
byãs
[0]=
b
;

1022 
byãIndex
=1;

1023 
bôs
=(
uöt16_t
)(
ba£64VÆue
&15);

1024 
ba£64Cou¡î
=6;

1027 
c
=(
UCh¨
)((
bôs
<<6)|
ba£64VÆue
);

1028 if(
	`isLegÆIMAP
(
c
)) {

1030 
öDúe˘Mode
=
TRUE
;

1031 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

1032 
ídlo›
;

1034 *
èrgë
++=
c
;

1035 if(
off£ts
!=
NULL
) {

1036 *
off£ts
++=
sour˚Index
;

1037 
sour˚Index
=
√xtSour˚Index
;

1039 
byãIndex
=0;

1040 
bôs
=0;

1041 
ba£64Cou¡î
=0;

1047 } if(
ba£64VÆue
==-2) {

1049 
öDúe˘Mode
=
TRUE
;

1050 if(
ba£64Cou¡î
==-1) {

1052 *
èrgë
++=
AMPERSAND
;

1053 if(
off£ts
!=
NULL
) {

1054 *
off£ts
++=
sour˚Index
-1;

1058 if(
bôs
!=0 || (
ba£64Cou¡î
!=0 && base64Counter!=3 && base64Counter!=6)) {

1061 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

1065 
sour˚Index
=
√xtSour˚Index
;

1066 
dúe˘Mode
;

1068 if(
ba£64Cou¡î
==-1) {

1071 --
sour˚Index
;

1072 
byãs
[0]=
AMPERSAND
;

1073 
byãs
[1]=
b
;

1074 
byãIndex
=2;

1079 
öDúe˘Mode
=
TRUE
;

1080 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

1085 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

1090 
ídlo›
:

1102 if–
	`U_SUCCESS
(*
pEº‹Code
) &&

1103 !
öDúe˘Mode
 && 
byãIndex
==0 &&

1104 
pArgs
->
Êush
 && 
sour˚
>=
sour˚Limô


1106 if(
ba£64Cou¡î
==-1) {

1109 
byãs
[0]=
AMPERSAND
;

1110 
byãIndex
=1;

1114 
öDúe˘Mode
=
TRUE
;

1115 *
pEº‹Code
=
U_TRUNCATED_CHAR_FOUND
;

1119 
˙v
->
toUnicodeSètus
=((
uöt32_t
)
öDúe˘Mode
<<24)|((uöt32_t)((
uöt8_t
)
ba£64Cou¡î
)<<16)|(uöt32_t)
bôs
;

1120 
˙v
->
toULígth
=
byãIndex
;

1123 
pArgs
->
sour˚
=(const *)source;

1124 
pArgs
->
èrgë
=target;

1125 
pArgs
->
off£ts
=offsets;

1127 
	}
}

1130 
	$_IMAPFromUnicodeWôhOff£ts
(
UC⁄vîãrFromUnicodeArgs
 *
pArgs
,

1131 
UEº‹Code
 *
pEº‹Code
) {

1132 
UC⁄vîãr
 *
˙v
;

1133 c⁄° 
UCh¨
 *
sour˚
, *
sour˚Limô
;

1134 
uöt8_t
 *
èrgë
, *
èrgëLimô
;

1135 
öt32_t
 *
off£ts
;

1137 
öt32_t
 
Àngth
, 
èrgëC≠acôy
, 
sour˚Index
;

1138 
UCh¨
 
c
;

1139 
uöt8_t
 
b
;

1142 
uöt8_t
 
bôs
;

1143 
öt8_t
 
ba£64Cou¡î
;

1144 
UBoﬁ
 
öDúe˘Mode
;

1147 
˙v
=
pArgs
->
c⁄vîãr
;

1150 
sour˚
=
pArgs
->source;

1151 
sour˚Limô
=
pArgs
->sourceLimit;

1152 
èrgë
=(
uöt8_t
 *)
pArgs
->target;

1153 
èrgëLimô
=(
uöt8_t
 *)
pArgs
->targetLimit;

1154 
off£ts
=
pArgs
->offsets;

1158 
uöt32_t
 
°©us
=
˙v
->
‰omUnicodeSètus
;

1159 
öDúe˘Mode
=(
UBoﬁ
)((
°©us
>>24)&1);

1160 
ba£64Cou¡î
=(
öt8_t
)(
°©us
>>16);

1161 
bôs
=(
uöt8_t
)
°©us
;

1165 
sour˚Index
=0;

1167 if(
öDúe˘Mode
) {

1168 
dúe˘Mode
:

1169 
Àngth
=(
öt32_t
)(
sour˚Limô
-
sour˚
);

1170 
èrgëC≠acôy
=(
öt32_t
)(
èrgëLimô
-
èrgë
);

1171 if(
Àngth
>
èrgëC≠acôy
) {

1172 
Àngth
=
èrgëC≠acôy
;

1174 
Àngth
>0) {

1175 
c
=*
sour˚
++;

1177 if(
	`öSëDIMAP
(
c
)) {

1179 *
èrgë
++=(
uöt8_t
)
c
;

1180 if(
off£ts
!=
NULL
) {

1181 *
off£ts
++=
sour˚Index
++;

1183 } if(
c
==
AMPERSAND
) {

1185 *
èrgë
++=
AMPERSAND
;

1186 if(
èrgë
<
èrgëLimô
) {

1187 *
èrgë
++=
MINUS
;

1188 if(
off£ts
!=
NULL
) {

1189 *
off£ts
++=
sour˚Index
;

1190 *
off£ts
++=
sour˚Index
++;

1193 
dúe˘Mode
;

1195 if(
off£ts
!=
NULL
) {

1196 *
off£ts
++=
sour˚Index
++;

1198 
˙v
->
ch¨Eº‹Buf„r
[0]=
MINUS
;

1199 
˙v
->
ch¨Eº‹Buf„rLígth
=1;

1200 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

1205 --
sour˚
;

1206 *
èrgë
++=
AMPERSAND
;

1207 if(
off£ts
!=
NULL
) {

1208 *
off£ts
++=
sour˚Index
;

1210 
öDúe˘Mode
=
FALSE
;

1211 
ba£64Cou¡î
=0;

1212 
unicodeMode
;

1214 --
Àngth
;

1216 if(
sour˚
<
sour˚Limô
 && 
èrgë
>=
èrgëLimô
) {

1218 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

1221 
unicodeMode
:

1222 
sour˚
<
sour˚Limô
) {

1223 if(
èrgë
<
èrgëLimô
) {

1224 
c
=*
sour˚
++;

1225 if(
	`isLegÆIMAP
(
c
)) {

1227 
öDúe˘Mode
=
TRUE
;

1230 --
sour˚
;

1233 if(
ba£64Cou¡î
!=0) {

1235 *
èrgë
++=
	`TO_BASE64_IMAP
(
bôs
);

1236 if(
off£ts
!=
NULL
) {

1237 *
off£ts
++=
sour˚Index
-1;

1241 if(
èrgë
<
èrgëLimô
) {

1242 *
èrgë
++=
MINUS
;

1243 if(
off£ts
!=
NULL
) {

1244 *
off£ts
++=
sour˚Index
-1;

1247 
˙v
->
ch¨Eº‹Buf„r
[0]=
MINUS
;

1248 
˙v
->
ch¨Eº‹Buf„rLígth
=1;

1249 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

1252 
dúe˘Mode
;

1263 
ba£64Cou¡î
) {

1265 
b
=(
uöt8_t
)(
c
>>10);

1266 *
èrgë
++=
	`TO_BASE64_IMAP
(
b
);

1267 if(
èrgë
<
èrgëLimô
) {

1268 
b
=(
uöt8_t
)((
c
>>4)&0x3f);

1269 *
èrgë
++=
	`TO_BASE64_IMAP
(
b
);

1270 if(
off£ts
!=
NULL
) {

1271 *
off£ts
++=
sour˚Index
;

1272 *
off£ts
++=
sour˚Index
++;

1275 if(
off£ts
!=
NULL
) {

1276 *
off£ts
++=
sour˚Index
++;

1278 
b
=(
uöt8_t
)((
c
>>4)&0x3f);

1279 
˙v
->
ch¨Eº‹Buf„r
[0]=
	`TO_BASE64_IMAP
(
b
);

1280 
˙v
->
ch¨Eº‹Buf„rLígth
=1;

1281 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

1283 
bôs
=(
uöt8_t
)((
c
&15)<<2);

1284 
ba£64Cou¡î
=1;

1287 
b
=(
uöt8_t
)(
bôs
|(
c
>>14));

1288 *
èrgë
++=
	`TO_BASE64_IMAP
(
b
);

1289 if(
èrgë
<
èrgëLimô
) {

1290 
b
=(
uöt8_t
)((
c
>>8)&0x3f);

1291 *
èrgë
++=
	`TO_BASE64_IMAP
(
b
);

1292 if(
èrgë
<
èrgëLimô
) {

1293 
b
=(
uöt8_t
)((
c
>>2)&0x3f);

1294 *
èrgë
++=
	`TO_BASE64_IMAP
(
b
);

1295 if(
off£ts
!=
NULL
) {

1296 *
off£ts
++=
sour˚Index
;

1297 *
off£ts
++=
sour˚Index
;

1298 *
off£ts
++=
sour˚Index
++;

1301 if(
off£ts
!=
NULL
) {

1302 *
off£ts
++=
sour˚Index
;

1303 *
off£ts
++=
sour˚Index
++;

1305 
b
=(
uöt8_t
)((
c
>>2)&0x3f);

1306 
˙v
->
ch¨Eº‹Buf„r
[0]=
	`TO_BASE64_IMAP
(
b
);

1307 
˙v
->
ch¨Eº‹Buf„rLígth
=1;

1308 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

1311 if(
off£ts
!=
NULL
) {

1312 *
off£ts
++=
sour˚Index
++;

1314 
b
=(
uöt8_t
)((
c
>>8)&0x3f);

1315 
˙v
->
ch¨Eº‹Buf„r
[0]=
	`TO_BASE64_IMAP
(
b
);

1316 
b
=(
uöt8_t
)((
c
>>2)&0x3f);

1317 
˙v
->
ch¨Eº‹Buf„r
[1]=
	`TO_BASE64_IMAP
(
b
);

1318 
˙v
->
ch¨Eº‹Buf„rLígth
=2;

1319 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

1321 
bôs
=(
uöt8_t
)((
c
&3)<<4);

1322 
ba£64Cou¡î
=2;

1325 
b
=(
uöt8_t
)(
bôs
|(
c
>>12));

1326 *
èrgë
++=
	`TO_BASE64_IMAP
(
b
);

1327 if(
èrgë
<
èrgëLimô
) {

1328 
b
=(
uöt8_t
)((
c
>>6)&0x3f);

1329 *
èrgë
++=
	`TO_BASE64_IMAP
(
b
);

1330 if(
èrgë
<
èrgëLimô
) {

1331 
b
=(
uöt8_t
)(
c
&0x3f);

1332 *
èrgë
++=
	`TO_BASE64_IMAP
(
b
);

1333 if(
off£ts
!=
NULL
) {

1334 *
off£ts
++=
sour˚Index
;

1335 *
off£ts
++=
sour˚Index
;

1336 *
off£ts
++=
sour˚Index
++;

1339 if(
off£ts
!=
NULL
) {

1340 *
off£ts
++=
sour˚Index
;

1341 *
off£ts
++=
sour˚Index
++;

1343 
b
=(
uöt8_t
)(
c
&0x3f);

1344 
˙v
->
ch¨Eº‹Buf„r
[0]=
	`TO_BASE64_IMAP
(
b
);

1345 
˙v
->
ch¨Eº‹Buf„rLígth
=1;

1346 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

1349 if(
off£ts
!=
NULL
) {

1350 *
off£ts
++=
sour˚Index
++;

1352 
b
=(
uöt8_t
)((
c
>>6)&0x3f);

1353 
˙v
->
ch¨Eº‹Buf„r
[0]=
	`TO_BASE64_IMAP
(
b
);

1354 
b
=(
uöt8_t
)(
c
&0x3f);

1355 
˙v
->
ch¨Eº‹Buf„r
[1]=
	`TO_BASE64_IMAP
(
b
);

1356 
˙v
->
ch¨Eº‹Buf„rLígth
=2;

1357 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

1359 
bôs
=0;

1360 
ba£64Cou¡î
=0;

1369 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

1375 if(
pArgs
->
Êush
 && 
sour˚
>=
sour˚Limô
) {

1377 if(!
öDúe˘Mode
) {

1378 if(
ba£64Cou¡î
!=0) {

1379 if(
èrgë
<
èrgëLimô
) {

1380 *
èrgë
++=
	`TO_BASE64_IMAP
(
bôs
);

1381 if(
off£ts
!=
NULL
) {

1382 *
off£ts
++=
sour˚Index
-1;

1385 
˙v
->
ch¨Eº‹Buf„r
[˙v->
ch¨Eº‹Buf„rLígth
++]=
	`TO_BASE64_IMAP
(
bôs
);

1386 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

1390 if(
èrgë
<
èrgëLimô
) {

1391 *
èrgë
++=
MINUS
;

1392 if(
off£ts
!=
NULL
) {

1393 *
off£ts
++=
sour˚Index
-1;

1396 
˙v
->
ch¨Eº‹Buf„r
[˙v->
ch¨Eº‹Buf„rLígth
++]=
MINUS
;

1397 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

1401 
˙v
->
‰omUnicodeSètus
=(cnv->fromUnicodeStatus&0xf0000000)|0x1000000;

1404 
˙v
->
‰omUnicodeSètus
=

1405 (
˙v
->
‰omUnicodeSètus
&0xf0000000)|

1406 ((
uöt32_t
)
öDúe˘Mode
<<24)|((uöt32_t)
ba£64Cou¡î
<<16)|(uöt32_t)
bôs
;

1410 
pArgs
->
sour˚
=source;

1411 
pArgs
->
èrgë
=(*)target;

1412 
pArgs
->
off£ts
=offsets;

1414 
	}
}

1416 c⁄° 
UC⁄vîãrIm∂
 
	g_IMAPIm∂
={

1417 
UCNV_IMAP_MAILBOX
,

1419 
NULL
,

1420 
NULL
,

1422 
_UTF7O≥n
,

1423 
NULL
,

1424 
_UTF7Re£t
,

1426 
_IMAPToUnicodeWôhOff£ts
,

1427 
_IMAPToUnicodeWôhOff£ts
,

1428 
_IMAPFromUnicodeWôhOff£ts
,

1429 
_IMAPFromUnicodeWôhOff£ts
,

1430 
NULL
,

1432 
NULL
,

1433 
NULL
,

1434 
NULL
,

1435 
NULL
,

1436 
u˙v_gëCom∂ëeUnicodeSë


1439 c⁄° 
UC⁄vîãrSèticD©a
 
	g_IMAPSèticD©a
={

1440 (
UC⁄vîãrSèticD©a
),

1443 
UCNV_IBM
, 
UCNV_IMAP_MAILBOX
,

1446 
FALSE
, FALSE,

1452 c⁄° 
UC⁄vîãrSh¨edD©a
 
	g_IMAPD©a
={

1453 (
UC⁄vîãrSh¨edD©a
), ~((
uöt32_t
)0),

1454 
NULL
, NULL, &
_IMAPSèticD©a
, 
FALSE
, &
_IMAPIm∂
,

	@ucnv_u8.c

21 
	~"unicode/uty≥s.h
"

23 #i‡!
UCONFIG_NO_CONVERSION


25 
	~"unicode/u˙v.h
"

26 
	~"u˙v_bld.h
"

27 
	~"u˙v_˙v.h
"

28 
	~"cmem‹y.h
"

34 
U_CFUNC
 
u˙v_‰omUnicode_UTF8
(
UC⁄vîãrFromUnicodeArgs
 *
¨gs
,

35 
UEº‹Code
 *
îr
);

36 
U_CFUNC
 
u˙v_‰omUnicode_UTF8_OFFSETS_LOGIC
(
UC⁄vîãrFromUnicodeArgs
 *
¨gs
,

37 
UEº‹Code
 *
îr
);

46 
	#MAXIMUM_UCS2
 0x0000FFFF

	)

47 
	#MAXIMUM_UTF
 0x0010FFFF

	)

48 
	#MAXIMUM_UCS4
 0x7FFFFFFF

	)

49 
	#HALF_SHIFT
 10

	)

50 
	#HALF_BASE
 0x0010000

	)

51 
	#HALF_MASK
 0x3FF

	)

52 
	#SURROGATE_HIGH_START
 0xD800

	)

53 
	#SURROGATE_HIGH_END
 0xDBFF

	)

54 
	#SURROGATE_LOW_START
 0xDC00

	)

55 
	#SURROGATE_LOW_END
 0xDFFF

	)

58 
	#SURROGATE_LOW_BASE
 9216

	)

60 c⁄° 
uöt32_t
 
	goff£tsFromUTF8
[7] = {0,

61 (
uöt32_t
) 0x00000000, (uint32_t) 0x00003080, (uint32_t) 0x000E2080,

62 (
uöt32_t
) 0x03C82080, (uint32_t) 0xFA082080, (uint32_t) 0x82082080

67 c⁄° 
öt8_t
 
	gbyãsFromUTF8
[256] = {

84 c⁄° 
uöt32_t


85 
	gutf8_möCh¨32
[7]={ 0, 0, 0x80, 0x800, 0x10000, 0xffffffff, 0xffffffff };

87 
	$u˙v_toUnicode_UTF8
 (
UC⁄vîãrToUnicodeArgs
 * 
¨gs
,

88 
UEº‹Code
 * 
îr
)

90 
UC⁄vîãr
 *
˙v
 = 
¨gs
->
c⁄vîãr
;

91 c⁄° *
mySour˚
 = (*Ë
¨gs
->
sour˚
;

92 
UCh¨
 *
myT¨gë
 = 
¨gs
->
èrgë
;

93 c⁄° *
sour˚Limô
 = (*Ë
¨gs
->sourceLimit;

94 c⁄° 
UCh¨
 *
èrgëLimô
 = 
¨gs
->targetLimit;

95 *
toUByãs
 = 
˙v
->toUBytes;

96 
UBoﬁ
 
isCESU8
 = (UBoﬁ)(
˙v
->
sh¨edD©a
 =&
_CESU8D©a
);

97 
uöt32_t
 
ch
, 
ch2
 = 0;

98 
öt32_t
 
i
, 
öByãs
;

101 i‡(
˙v
->
toUnicodeSètus
 && 
myT¨gë
 < 
èrgëLimô
)

103 
öByãs
 = 
˙v
->
mode
;

104 
i
 = 
˙v
->
toULígth
;

105 
˙v
->
toULígth
 = 0;

107 
ch
 = 
˙v
->
toUnicodeSètus
;

108 
˙v
->
toUnicodeSètus
 = 0;

109 
m‹ebyãs
;

113 
mySour˚
 < 
sour˚Limô
 && 
myT¨gë
 < 
èrgëLimô
)

115 
ch
 = *(
mySour˚
++);

116 i‡(
ch
 < 0x80)

118 *(
myT¨gë
++Ë(
UCh¨
Ë
ch
;

123 
toUByãs
[0] = ()
ch
;

124 
öByãs
 = 
byãsFromUTF8
[
ch
];

125 
i
 = 1;

127 
m‹ebyãs
:

128 
i
 < 
öByãs
)

130 i‡(
mySour˚
 < 
sour˚Limô
)

132 
toUByãs
[
i
] = (Ë(
ch2
 = *
mySour˚
);

133 i‡(!
	`UTF8_IS_TRAIL
(
ch2
))

137 
ch
 = (ch << 6Ë+ 
ch2
;

138 ++
mySour˚
;

139 
i
++;

144 
˙v
->
toUnicodeSètus
 = 
ch
;

145 
˙v
->
mode
 = 
öByãs
;

146 
˙v
->
toULígth
 = (
öt8_t
Ë
i
;

147 
d⁄ef‹now
;

152 
ch
 -
off£tsFromUTF8
[
öByãs
];

166 i‡(
i
 =
öByãs
 && 
ch
 <
MAXIMUM_UTF
 && ch >
utf8_möCh¨32
[i] &&

167 (
isCESU8
 ? 
i
 <3 : !
	`UTF_IS_SURROGATE
(
ch
)))

170 i‡(
ch
 <
MAXIMUM_UCS2
)

173 *(
myT¨gë
++Ë(
UCh¨
Ë
ch
;

178 
ch
 -
HALF_BASE
;

179 *(
myT¨gë
++Ë(
UCh¨
Ë((
ch
 >> 
HALF_SHIFT
Ë+ 
SURROGATE_HIGH_START
);

180 
ch
 = (ch & 
HALF_MASK
Ë+ 
SURROGATE_LOW_START
;

181 i‡(
myT¨gë
 < 
èrgëLimô
)

183 *(
myT¨gë
++Ë(
UCh¨
)
ch
;

188 
˙v
->
UCh¨Eº‹Buf„r
[0] = (
UCh¨
Ë
ch
;

189 
˙v
->
UCh¨Eº‹Buf„rLígth
 = 1;

190 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

197 
˙v
->
toULígth
 = (
öt8_t
)
i
;

198 *
îr
 = 
U_ILLEGAL_CHAR_FOUND
;

204 
d⁄ef‹now
:

205 i‡(
mySour˚
 < 
sour˚Limô
 && 
myT¨gë
 >
èrgëLimô
 && 
	`U_SUCCESS
(*
îr
))

208 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

211 
¨gs
->
èrgë
 = 
myT¨gë
;

212 
¨gs
->
sour˚
 = (c⁄° *Ë
mySour˚
;

213 
	}
}

215 
	$u˙v_toUnicode_UTF8_OFFSETS_LOGIC
 (
UC⁄vîãrToUnicodeArgs
 * 
¨gs
,

216 
UEº‹Code
 * 
îr
)

218 
UC⁄vîãr
 *
˙v
 = 
¨gs
->
c⁄vîãr
;

219 c⁄° *
mySour˚
 = (*Ë
¨gs
->
sour˚
;

220 
UCh¨
 *
myT¨gë
 = 
¨gs
->
èrgë
;

221 
öt32_t
 *
myOff£ts
 = 
¨gs
->
off£ts
;

222 
öt32_t
 
off£tNum
 = 0;

223 c⁄° *
sour˚Limô
 = (*Ë
¨gs
->sourceLimit;

224 c⁄° 
UCh¨
 *
èrgëLimô
 = 
¨gs
->targetLimit;

225 *
toUByãs
 = 
˙v
->toUBytes;

226 
UBoﬁ
 
isCESU8
 = (UBoﬁ)(
˙v
->
sh¨edD©a
 =&
_CESU8D©a
);

227 
uöt32_t
 
ch
, 
ch2
 = 0;

228 
öt32_t
 
i
, 
öByãs
;

231 i‡(
˙v
->
toUnicodeSètus
 && 
myT¨gë
 < 
èrgëLimô
)

233 
öByãs
 = 
˙v
->
mode
;

234 
i
 = 
˙v
->
toULígth
;

235 
˙v
->
toULígth
 = 0;

237 
ch
 = 
˙v
->
toUnicodeSètus
;

238 
˙v
->
toUnicodeSètus
 = 0;

239 
m‹ebyãs
;

242 
mySour˚
 < 
sour˚Limô
 && 
myT¨gë
 < 
èrgëLimô
)

244 
ch
 = *(
mySour˚
++);

245 i‡(
ch
 < 0x80)

247 *(
myT¨gë
++Ë(
UCh¨
Ë
ch
;

248 *(
myOff£ts
++Ë
off£tNum
++;

252 
toUByãs
[0] = ()
ch
;

253 
öByãs
 = 
byãsFromUTF8
[
ch
];

254 
i
 = 1;

256 
m‹ebyãs
:

257 
i
 < 
öByãs
)

259 i‡(
mySour˚
 < 
sour˚Limô
)

261 
toUByãs
[
i
] = (Ë(
ch2
 = *
mySour˚
);

262 i‡(!
	`UTF8_IS_TRAIL
(
ch2
))

266 
ch
 = (ch << 6Ë+ 
ch2
;

267 ++
mySour˚
;

268 
i
++;

272 
˙v
->
toUnicodeSètus
 = 
ch
;

273 
˙v
->
mode
 = 
öByãs
;

274 
˙v
->
toULígth
 = (
öt8_t
)
i
;

275 
d⁄ef‹now
;

280 
ch
 -
off£tsFromUTF8
[
öByãs
];

294 i‡(
i
 =
öByãs
 && 
ch
 <
MAXIMUM_UTF
 && ch >
utf8_möCh¨32
[i] &&

295 (
isCESU8
 ? 
i
 <3 : !
	`UTF_IS_SURROGATE
(
ch
)))

298 i‡(
ch
 <
MAXIMUM_UCS2
)

301 *(
myT¨gë
++Ë(
UCh¨
Ë
ch
;

302 *(
myOff£ts
++Ë
off£tNum
;

307 
ch
 -
HALF_BASE
;

308 *(
myT¨gë
++Ë(
UCh¨
Ë((
ch
 >> 
HALF_SHIFT
Ë+ 
SURROGATE_HIGH_START
);

309 *(
myOff£ts
++Ë
off£tNum
;

310 
ch
 = (ch & 
HALF_MASK
Ë+ 
SURROGATE_LOW_START
;

311 i‡(
myT¨gë
 < 
èrgëLimô
)

313 *(
myT¨gë
++Ë(
UCh¨
)
ch
;

314 *(
myOff£ts
++Ë
off£tNum
;

318 
˙v
->
UCh¨Eº‹Buf„r
[0] = (
UCh¨
Ë
ch
;

319 
˙v
->
UCh¨Eº‹Buf„rLígth
 = 1;

320 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

323 
off£tNum
 +
i
;

327 
˙v
->
toULígth
 = (
öt8_t
)
i
;

328 *
îr
 = 
U_ILLEGAL_CHAR_FOUND
;

334 
d⁄ef‹now
:

335 i‡(
mySour˚
 < 
sour˚Limô
 && 
myT¨gë
 >
èrgëLimô
 && 
	`U_SUCCESS
(*
îr
))

337 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

340 
¨gs
->
èrgë
 = 
myT¨gë
;

341 
¨gs
->
sour˚
 = (c⁄° *Ë
mySour˚
;

342 
¨gs
->
off£ts
 = 
myOff£ts
;

343 
	}
}

345 
U_CFUNC
 
	$u˙v_‰omUnicode_UTF8
 (
UC⁄vîãrFromUnicodeArgs
 * 
¨gs
,

346 
UEº‹Code
 * 
îr
)

348 
UC⁄vîãr
 *
˙v
 = 
¨gs
->
c⁄vîãr
;

349 c⁄° 
UCh¨
 *
mySour˚
 = 
¨gs
->
sour˚
;

350 c⁄° 
UCh¨
 *
sour˚Limô
 = 
¨gs
->sourceLimit;

351 
uöt8_t
 *
myT¨gë
 = (uöt8_à*Ë
¨gs
->
èrgë
;

352 c⁄° 
uöt8_t
 *
èrgëLimô
 = (uöt8_à*Ë
¨gs
->targetLimit;

353 
uöt8_t
 *
ãmpPå
;

354 
UCh¨32
 
ch
;

355 
uöt8_t
 
ãmpBuf
[4];

356 
öt32_t
 
ödexToWrôe
;

357 
UBoﬁ
 
isNŸCESU8
 = (UBoﬁ)(
˙v
->
sh¨edD©a
 !&
_CESU8D©a
);

359 i‡(
˙v
->
‰omUCh¨32
 && 
myT¨gë
 < 
èrgëLimô
)

361 
ch
 = 
˙v
->
‰omUCh¨32
;

362 
˙v
->
‰omUCh¨32
 = 0;

363 
lowsuºog©e
;

366 
mySour˚
 < 
sour˚Limô
 && 
myT¨gë
 < 
èrgëLimô
)

368 
ch
 = *(
mySour˚
++);

370 i‡(
ch
 < 0x80)

372 *(
myT¨gë
++Ë(
uöt8_t
Ë
ch
;

374 i‡(
ch
 < 0x800)

376 *(
myT¨gë
++Ë(
uöt8_t
Ë((
ch
 >> 6) | 0xc0);

377 i‡(
myT¨gë
 < 
èrgëLimô
)

379 *(
myT¨gë
++Ë(
uöt8_t
Ë((
ch
 & 0x3f) | 0x80);

383 
˙v
->
ch¨Eº‹Buf„r
[0] = (
uöt8_t
Ë((
ch
 & 0x3f) | 0x80);

384 
˙v
->
ch¨Eº‹Buf„rLígth
 = 1;

385 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

390 if(
	`UTF_IS_SURROGATE
(
ch
Ë&& 
isNŸCESU8
) {

391 
lowsuºog©e
:

392 i‡(
mySour˚
 < 
sour˚Limô
) {

394 if(
	`UTF_IS_SURROGATE_FIRST
(
ch
Ë&& 
	`UTF_IS_SECOND_SURROGATE
(*
mySour˚
)) {

396 
ch
=
	`UTF16_GET_PAIR_VALUE
(ch, *
mySour˚
);

397 ++
mySour˚
;

403 
˙v
->
‰omUCh¨32
 = 
ch
;

404 *
îr
 = 
U_ILLEGAL_CHAR_FOUND
;

410 
˙v
->
‰omUCh¨32
 = 
ch
;

417 
ãmpPå
 = (((
èrgëLimô
 - 
myT¨gë
Ë>4Ë? myT¨gë : 
ãmpBuf
);

419 i‡(
ch
 <
MAXIMUM_UCS2
) {

420 
ödexToWrôe
 = 2;

421 
ãmpPå
[0] = (
uöt8_t
Ë((
ch
 >> 12) | 0xe0);

424 
ödexToWrôe
 = 3;

425 
ãmpPå
[0] = (
uöt8_t
Ë((
ch
 >> 18) | 0xf0);

426 
ãmpPå
[1] = (
uöt8_t
Ë(((
ch
 >> 12) & 0x3f) | 0x80);

428 
ãmpPå
[
ödexToWrôe
-1] = (
uöt8_t
Ë(((
ch
 >> 6) & 0x3f) | 0x80);

429 
ãmpPå
[
ödexToWrôe
] = (
uöt8_t
Ë((
ch
 & 0x3f) | 0x80);

431 i‡(
ãmpPå
 =
myT¨gë
) {

433 
myT¨gë
 +(
ödexToWrôe
 + 1);

437 ; 
ãmpPå
 <(
ãmpBuf
 + 
ödexToWrôe
);ÅempPtr++) {

438 i‡(
myT¨gë
 < 
èrgëLimô
) {

439 *(
myT¨gë
++Ë*
ãmpPå
;

442 
˙v
->
ch¨Eº‹Buf„r
[˙v->
ch¨Eº‹Buf„rLígth
++] = *
ãmpPå
;

443 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

450 i‡(
mySour˚
 < 
sour˚Limô
 && 
myT¨gë
 >
èrgëLimô
 && 
	`U_SUCCESS
(*
îr
))

452 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

455 
¨gs
->
èrgë
 = (*Ë
myT¨gë
;

456 
¨gs
->
sour˚
 = 
mySour˚
;

457 
	}
}

459 
U_CFUNC
 
	$u˙v_‰omUnicode_UTF8_OFFSETS_LOGIC
 (
UC⁄vîãrFromUnicodeArgs
 * 
¨gs
,

460 
UEº‹Code
 * 
îr
)

462 
UC⁄vîãr
 *
˙v
 = 
¨gs
->
c⁄vîãr
;

463 c⁄° 
UCh¨
 *
mySour˚
 = 
¨gs
->
sour˚
;

464 
öt32_t
 *
myOff£ts
 = 
¨gs
->
off£ts
;

465 c⁄° 
UCh¨
 *
sour˚Limô
 = 
¨gs
->sourceLimit;

466 
uöt8_t
 *
myT¨gë
 = (uöt8_à*Ë
¨gs
->
èrgë
;

467 c⁄° 
uöt8_t
 *
èrgëLimô
 = (uöt8_à*Ë
¨gs
->targetLimit;

468 
uöt8_t
 *
ãmpPå
;

469 
UCh¨32
 
ch
;

470 
öt32_t
 
off£tNum
, 
√xtSour˚Index
;

471 
öt32_t
 
ödexToWrôe
;

472 
uöt8_t
 
ãmpBuf
[4];

473 
UBoﬁ
 
isNŸCESU8
 = (UBoﬁ)(
˙v
->
sh¨edD©a
 !&
_CESU8D©a
);

475 i‡(
˙v
->
‰omUCh¨32
 && 
myT¨gë
 < 
èrgëLimô
)

477 
ch
 = 
˙v
->
‰omUCh¨32
;

478 
˙v
->
‰omUCh¨32
 = 0;

479 
off£tNum
 = -1;

480 
√xtSour˚Index
 = 0;

481 
lowsuºog©e
;

483 
off£tNum
 = 0;

486 
mySour˚
 < 
sour˚Limô
 && 
myT¨gë
 < 
èrgëLimô
)

488 
ch
 = *(
mySour˚
++);

490 i‡(
ch
 < 0x80)

492 *(
myOff£ts
++Ë
off£tNum
++;

493 *(
myT¨gë
++Ë(Ë
ch
;

495 i‡(
ch
 < 0x800)

497 *(
myOff£ts
++Ë
off£tNum
;

498 *(
myT¨gë
++Ë(
uöt8_t
Ë((
ch
 >> 6) | 0xc0);

499 i‡(
myT¨gë
 < 
èrgëLimô
)

501 *(
myOff£ts
++Ë
off£tNum
++;

502 *(
myT¨gë
++Ë(
uöt8_t
Ë((
ch
 & 0x3f) | 0x80);

506 
˙v
->
ch¨Eº‹Buf„r
[0] = (
uöt8_t
Ë((
ch
 & 0x3f) | 0x80);

507 
˙v
->
ch¨Eº‹Buf„rLígth
 = 1;

508 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

514 
√xtSour˚Index
 = 
off£tNum
 + 1;

516 if(
	`UTF_IS_SURROGATE
(
ch
Ë&& 
isNŸCESU8
) {

517 
lowsuºog©e
:

518 i‡(
mySour˚
 < 
sour˚Limô
) {

520 if(
	`UTF_IS_SURROGATE_FIRST
(
ch
Ë&& 
	`UTF_IS_SECOND_SURROGATE
(*
mySour˚
)) {

522 
ch
=
	`UTF16_GET_PAIR_VALUE
(ch, *
mySour˚
);

523 ++
mySour˚
;

524 ++
√xtSour˚Index
;

530 
˙v
->
‰omUCh¨32
 = 
ch
;

531 *
îr
 = 
U_ILLEGAL_CHAR_FOUND
;

537 
˙v
->
‰omUCh¨32
 = 
ch
;

544 
ãmpPå
 = (((
èrgëLimô
 - 
myT¨gë
Ë>4Ë? myT¨gë : 
ãmpBuf
);

546 i‡(
ch
 <
MAXIMUM_UCS2
) {

547 
ödexToWrôe
 = 2;

548 
ãmpPå
[0] = (
uöt8_t
Ë((
ch
 >> 12) | 0xe0);

551 
ödexToWrôe
 = 3;

552 
ãmpPå
[0] = (
uöt8_t
Ë((
ch
 >> 18) | 0xf0);

553 
ãmpPå
[1] = (
uöt8_t
Ë(((
ch
 >> 12) & 0x3f) | 0x80);

555 
ãmpPå
[
ödexToWrôe
-1] = (
uöt8_t
Ë(((
ch
 >> 6) & 0x3f) | 0x80);

556 
ãmpPå
[
ödexToWrôe
] = (
uöt8_t
Ë((
ch
 & 0x3f) | 0x80);

558 i‡(
ãmpPå
 =
myT¨gë
) {

560 
myT¨gë
 +(
ödexToWrôe
 + 1);

561 
myOff£ts
[0] = 
off£tNum
;

562 
myOff£ts
[1] = 
off£tNum
;

563 
myOff£ts
[2] = 
off£tNum
;

564 i‡(
ödexToWrôe
 >= 3) {

565 
myOff£ts
[3] = 
off£tNum
;

567 
myOff£ts
 +(
ödexToWrôe
 + 1);

571 ; 
ãmpPå
 <(
ãmpBuf
 + 
ödexToWrôe
);ÅempPtr++) {

572 i‡(
myT¨gë
 < 
èrgëLimô
)

574 *(
myOff£ts
++Ë
off£tNum
;

575 *(
myT¨gë
++Ë*
ãmpPå
;

579 
˙v
->
ch¨Eº‹Buf„r
[˙v->
ch¨Eº‹Buf„rLígth
++] = *
ãmpPå
;

580 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

584 
off£tNum
 = 
√xtSour˚Index
;

588 i‡(
mySour˚
 < 
sour˚Limô
 && 
myT¨gë
 >
èrgëLimô
 && 
	`U_SUCCESS
(*
îr
))

590 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

593 
¨gs
->
èrgë
 = (*Ë
myT¨gë
;

594 
¨gs
->
sour˚
 = 
mySour˚
;

595 
¨gs
->
off£ts
 = 
myOff£ts
;

596 
	}
}

598 
UCh¨32
 
	$u˙v_gëNextUCh¨_UTF8
(
UC⁄vîãrToUnicodeArgs
 *
¨gs
,

599 
UEº‹Code
 *
îr
) {

600 
UC⁄vîãr
 *
˙v
;

601 c⁄° 
uöt8_t
 *
sour˚Inôül
;

602 c⁄° 
uöt8_t
 *
sour˚
;

603 
uöt16_t
 
exåaByãsToWrôe
;

604 
uöt8_t
 
myByã
;

605 
UCh¨32
 
ch
;

606 
öt8_t
 
i
, 
isLegÆSequí˚
;

610 
˙v
 = 
¨gs
->
c⁄vîãr
;

611 
sour˚Inôül
 = 
sour˚
 = (c⁄° 
uöt8_t
 *)
¨gs
->source;

612 i‡(
sour˚
 >(c⁄° 
uöt8_t
 *)
¨gs
->
sour˚Limô
)

615 *
îr
 = 
U_INDEX_OUTOFBOUNDS_ERROR
;

619 
myByã
 = (
uöt8_t
)*(
sour˚
++);

620 i‡(
myByã
 < 0x80)

622 
¨gs
->
sour˚
 = (const *)source;

623  (
UCh¨32
)
myByã
;

626 
exåaByãsToWrôe
 = (
uöt16_t
)
byãsFromUTF8
[
myByã
];

627 i‡(
exåaByãsToWrôe
 == 0) {

628 
˙v
->
toUByãs
[0] = 
myByã
;

629 
˙v
->
toULígth
 = 1;

630 *
îr
 = 
U_ILLEGAL_CHAR_FOUND
;

631 
¨gs
->
sour˚
 = (const *)source;

636 i‡(((c⁄° *)
sour˚
 + 
exåaByãsToWrôe
 - 1Ë> 
¨gs
->
sour˚Limô
)

639 
˙v
->
toUByãs
[0] = 
myByã
;

640 
i
 = 1;

641 *
îr
 = 
U_TRUNCATED_CHAR_FOUND
;

642 
sour˚
 < (c⁄° 
uöt8_t
 *)
¨gs
->
sour˚Limô
) {

643 if(
	`U8_IS_TRAIL
(
myByã
 = *
sour˚
)) {

644 
˙v
->
toUByãs
[
i
++] = 
myByã
;

645 ++
sour˚
;

648 *
îr
 = 
U_ILLEGAL_CHAR_FOUND
;

652 
˙v
->
toULígth
 = 
i
;

653 
¨gs
->
sour˚
 = (const *)source;

657 
isLegÆSequí˚
 = 1;

658 
ch
 = 
myByã
 << 6;

659 
exåaByãsToWrôe
)

663 
ch
 +(
myByã
 = *
sour˚
);

664 
ch
 <<= 6;

665 i‡(!
	`UTF8_IS_TRAIL
(
myByã
))

667 
isLegÆSequí˚
 = 0;

670 ++
sour˚
;

672 
ch
 +(
myByã
 = *
sour˚
);

673 
ch
 <<= 6;

674 i‡(!
	`UTF8_IS_TRAIL
(
myByã
))

676 
isLegÆSequí˚
 = 0;

679 ++
sour˚
;

681 
ch
 +(
myByã
 = *
sour˚
);

682 
ch
 <<= 6;

683 i‡(!
	`UTF8_IS_TRAIL
(
myByã
))

685 
isLegÆSequí˚
 = 0;

688 ++
sour˚
;

690 
ch
 +(
myByã
 = *
sour˚
);

691 
ch
 <<= 6;

692 i‡(!
	`UTF8_IS_TRAIL
(
myByã
))

694 
isLegÆSequí˚
 = 0;

697 ++
sour˚
;

699 
ch
 +(
myByã
 = *
sour˚
);

700 i‡(!
	`UTF8_IS_TRAIL
(
myByã
))

702 
isLegÆSequí˚
 = 0;

705 ++
sour˚
;

707 
ch
 -
off£tsFromUTF8
[
exåaByãsToWrôe
];

708 
¨gs
->
sour˚
 = (const *)source;

721 i‡(
isLegÆSequí˚
 &&

722 (
uöt32_t
)
ch
 <
MAXIMUM_UTF
 &&

723 (
uöt32_t
)
ch
 >
utf8_möCh¨32
[
exåaByãsToWrôe
] &&

724 !
	`U_IS_SURROGATE
(
ch
)

726  
ch
;

729 
i
 = 0; 
sour˚Inôül
 < 
sour˚
; ++i) {

730 
˙v
->
toUByãs
[
i
] = *
sour˚Inôül
++;

732 
˙v
->
toULígth
 = 
i
;

733 *
îr
 = 
U_ILLEGAL_CHAR_FOUND
;

735 
	}
}

740 c⁄° 
UCh¨32


741 
	gutf8_möLegÆ
[5]={ 0, 0, 0x80, 0x800, 0x10000 };

744 c⁄° 
UCh¨32


745 
	gutf8_off£ts
[7]={ 0, 0, 0x3080, 0xE2080, 0x3C82080 };

749 
	$u˙v_UTF8FromUTF8
(
UC⁄vîãrFromUnicodeArgs
 *
pFromUArgs
,

750 
UC⁄vîãrToUnicodeArgs
 *
pToUArgs
,

751 
UEº‹Code
 *
pEº‹Code
) {

752 
UC⁄vîãr
 *
utf8
, *
˙v
;

753 c⁄° 
uöt8_t
 *
sour˚
, *
sour˚Limô
;

754 
uöt8_t
 *
èrgë
;

755 
öt32_t
 
èrgëC≠acôy
;

756 
öt32_t
 
cou¡
;

758 
öt8_t
 
ﬁdToULígth
, 
toULígth
, 
toULimô
;

760 
UCh¨32
 
c
;

761 
uöt8_t
 
b
, 
t1
, 
t2
;

764 
utf8
=
pToUArgs
->
c⁄vîãr
;

765 
˙v
=
pFromUArgs
->
c⁄vîãr
;

766 
sour˚
=(
uöt8_t
 *)
pToUArgs
->source;

767 
sour˚Limô
=(
uöt8_t
 *)
pToUArgs
->sourceLimit;

768 
èrgë
=(
uöt8_t
 *)
pFromUArgs
->target;

769 
èrgëC≠acôy
=(
öt32_t
)(
pFromUArgs
->
èrgëLimô
-pFromUArgs->
èrgë
);

772 
c
=(
UCh¨32
)
utf8
->
toUnicodeSètus
;

773 if(
c
!=0) {

774 
toULígth
=
ﬁdToULígth
=
utf8
->toULength;

775 
toULimô
=(
öt8_t
)
utf8
->
mode
;

777 
toULígth
=
ﬁdToULígth
=
toULimô
=0;

780 
cou¡
=(
öt32_t
)(
sour˚Limô
-
sour˚
)+
ﬁdToULígth
;

781 if(
cou¡
<
toULimô
) {

786 } if(
èrgëC≠acôy
<
toULimô
) {

791 *
pEº‹Code
=
U_USING_DEFAULT_WARNING
;

810 
öt32_t
 
i
;

812 if(
cou¡
>
èrgëC≠acôy
) {

813 
cou¡
=
èrgëC≠acôy
;

816 
i
=0;

817 
i
<3 && i<(
cou¡
-
toULimô
)) {

818 
b
=
sour˚
[
cou¡
-
ﬁdToULígth
-
i
-1];

819 if(
	`U8_IS_TRAIL
(
b
)) {

820 ++
i
;

822 if(
i
<
utf8_cou¡TøûByãs
[
b
]) {

824 
cou¡
-=
i
+1;

831 if(
c
!=0) {

832 
utf8
->
toUnicodeSètus
=0;

833 
utf8
->
toULígth
=0;

834 
m‹eByãs
;

839 
cou¡
>0) {

840 
b
=*
sour˚
++;

841 if((
öt8_t
)
b
>=0) {

843 *
èrgë
++=
b
;

844 --
cou¡
;

847 if(
b
>0xe0) {

849 (
t1
=
sour˚
[0]Ë>0x80 && ((
b
<0xed && (t1 <= 0xbf)) ||

850 (
b
==0xed && (
t1
 <= 0x9f))) &&

851 (
t2
=
sour˚
[1]) >= 0x80 &&Å2 <= 0xbf

853 
sour˚
+=2;

854 *
èrgë
++=
b
;

855 *
èrgë
++=
t1
;

856 *
èrgë
++=
t2
;

857 
cou¡
-=3;

860 } if(
b
<0xe0) {

862 
b
>=0xc2 &&

863 (
t1
=*
sour˚
) >= 0x80 &&Å1 <= 0xbf

865 ++
sour˚
;

866 *
èrgë
++=
b
;

867 *
èrgë
++=
t1
;

868 
cou¡
-=2;

871 } if(
b
==0xe0) {

873 (
t1
=
sour˚
[0]) >= 0xa0 &&Å1 <= 0xbf &&

874 (
t2
=
sour˚
[1]) >= 0x80 &&Å2 <= 0xbf

876 
sour˚
+=2;

877 *
èrgë
++=
b
;

878 *
èrgë
++=
t1
;

879 *
èrgë
++=
t2
;

880 
cou¡
-=3;

886 
ﬁdToULígth
=0;

887 
toULígth
=1;

888 
toULimô
=
utf8_cou¡TøûByãs
[
b
]+1;

889 
c
=
b
;

890 
m‹eByãs
:

891 
toULígth
<
toULimô
) {

892 if(
sour˚
<
sour˚Limô
) {

893 
b
=*
sour˚
;

894 if(
	`U8_IS_TRAIL
(
b
)) {

895 ++
sour˚
;

896 ++
toULígth
;

897 
c
=(c<<6)+
b
;

903 
sour˚
-=(
toULígth
-
ﬁdToULígth
);

904 
ﬁdToULígth
<
toULígth
) {

905 
utf8
->
toUByãs
[
ﬁdToULígth
++]=*
sour˚
++;

907 
utf8
->
toUnicodeSètus
=
c
;

908 
utf8
->
toULígth
=toULength;

909 
utf8
->
mode
=
toULimô
;

910 
pToUArgs
->
sour˚
=(*)source;

911 
pFromUArgs
->
èrgë
=(*)target;

916 if–
toULígth
==
toULimô
 &&

917 (
toULígth
==3 ||ÅoULength==2) &&

918 (
c
-=
utf8_off£ts
[
toULígth
])>=
utf8_möLegÆ
[toULength] &&

919 (
c
<=0xd7ff || 0xe000<=c)

923 
toULígth
==
toULimô
 &&ÅoULength==4 &&

924 (0x10000<=(
c
-=
utf8_off£ts
[4]) && c<=0x10ffff)

929 
sour˚
-=(
toULígth
-
ﬁdToULígth
);

930 
ﬁdToULígth
<
toULígth
) {

931 
utf8
->
toUByãs
[
ﬁdToULígth
++]=*
sour˚
++;

933 
utf8
->
toULígth
=toULength;

934 
pToUArgs
->
sour˚
=(*)source;

935 
pFromUArgs
->
èrgë
=(*)target;

936 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

942 
öt8_t
 
i
;

944 
i
=0; i<
ﬁdToULígth
; ++i) {

945 *
èrgë
++=
utf8
->
toUByãs
[
i
];

947 
sour˚
-=(
toULígth
-
ﬁdToULígth
);

948 ; 
i
<
toULígth
; ++i) {

949 *
èrgë
++=*
sour˚
++;

951 
cou¡
-=
toULígth
;

956 if(
	`U_SUCCESS
(*
pEº‹Code
Ë&& 
sour˚
<
sour˚Limô
) {

957 if(
èrgë
==(c⁄° 
uöt8_t
 *)
pFromUArgs
->
èrgëLimô
) {

958 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

960 
b
=*
sour˚
;

961 
toULimô
=
utf8_cou¡TøûByãs
[
b
]+1;

962 if(
toULimô
>(
sour˚Limô
-
sour˚
)) {

964 
toULígth
=0;

965 
c
=
b
;

967 
utf8
->
toUByãs
[
toULígth
++]=
b
;

968 if(++
sour˚
==
sour˚Limô
) {

970 
utf8
->
toUnicodeSètus
=
c
;

971 
utf8
->
toULígth
=toULength;

972 
utf8
->
mode
=
toULimô
;

974 } if(!
	`U8_IS_TRAIL
(
b
=*
sour˚
)) {

976 
utf8
->
toULígth
=toULength;

977 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

980 
c
=(c<<6)+
b
;

984 *
pEº‹Code
=
U_USING_DEFAULT_WARNING
;

990 
pToUArgs
->
sour˚
=(*)source;

991 
pFromUArgs
->
èrgë
=(*)target;

992 
	}
}

996 c⁄° 
UC⁄vîãrIm∂
 
	g_UTF8Im∂
={

997 
UCNV_UTF8
,

999 
NULL
,

1000 
NULL
,

1002 
NULL
,

1003 
NULL
,

1004 
NULL
,

1006 
u˙v_toUnicode_UTF8
,

1007 
u˙v_toUnicode_UTF8_OFFSETS_LOGIC
,

1008 
u˙v_‰omUnicode_UTF8
,

1009 
u˙v_‰omUnicode_UTF8_OFFSETS_LOGIC
,

1010 
u˙v_gëNextUCh¨_UTF8
,

1012 
NULL
,

1013 
NULL
,

1014 
NULL
,

1015 
NULL
,

1016 
u˙v_gëN⁄Suºog©eUnicodeSë
,

1018 
u˙v_UTF8FromUTF8
,

1019 
u˙v_UTF8FromUTF8


1023 c⁄° 
UC⁄vîãrSèticD©a
 
	g_UTF8SèticD©a
={

1024 (
UC⁄vîãrSèticD©a
),

1026 1208, 
UCNV_IBM
, 
UCNV_UTF8
,

1028 { 0xef, 0xbf, 0xbd, 0 },3,
FALSE
,FALSE,

1035 c⁄° 
UC⁄vîãrSh¨edD©a
 
	g_UTF8D©a
={

1036 (
UC⁄vîãrSh¨edD©a
), ~((
uöt32_t
) 0),

1037 
NULL
, NULL, &
_UTF8SèticD©a
, 
FALSE
, &
_UTF8Im∂
,

1043 c⁄° 
UC⁄vîãrIm∂
 
	g_CESU8Im∂
={

1044 
UCNV_CESU8
,

1046 
NULL
,

1047 
NULL
,

1049 
NULL
,

1050 
NULL
,

1051 
NULL
,

1053 
u˙v_toUnicode_UTF8
,

1054 
u˙v_toUnicode_UTF8_OFFSETS_LOGIC
,

1055 
u˙v_‰omUnicode_UTF8
,

1056 
u˙v_‰omUnicode_UTF8_OFFSETS_LOGIC
,

1057 
NULL
,

1059 
NULL
,

1060 
NULL
,

1061 
NULL
,

1062 
NULL
,

1063 
u˙v_gëCom∂ëeUnicodeSë


1066 c⁄° 
UC⁄vîãrSèticD©a
 
	g_CESU8SèticD©a
={

1067 (
UC⁄vîãrSèticD©a
),

1070 
UCNV_UNKNOWN
, 
UCNV_CESU8
, 1, 3,

1071 { 0xef, 0xbf, 0xbd, 0 },3,
FALSE
,FALSE,

1078 c⁄° 
UC⁄vîãrSh¨edD©a
 
	g_CESU8D©a
={

1079 (
UC⁄vîãrSh¨edD©a
), ~((
uöt32_t
) 0),

1080 
NULL
, NULL, &
_CESU8SèticD©a
, 
FALSE
, &
_CESU8Im∂
,

	@ucnvbocu.c

20 
	~"unicode/uty≥s.h
"

22 #i‡!
UCONFIG_NO_CONVERSION


24 
	~"unicode/u˙v.h
"

25 
	~"unicode/u˙v_cb.h
"

26 
	~"u˙v_bld.h
"

27 
	~"u˙v_˙v.h
"

51 
	#BOCU1_ASCII_PREV
 0x40

	)

54 
	#BOCU1_MIN
 0x21

	)

55 
	#BOCU1_MIDDLE
 0x90

	)

56 
	#BOCU1_MAX_LEAD
 0x„

	)

57 
	#BOCU1_MAX_TRAIL
 0xff

	)

58 
	#BOCU1_RESET
 0xff

	)

61 
	#BOCU1_COUNT
 (
BOCU1_MAX_LEAD
-
BOCU1_MIN
+1)

	)

64 
	#BOCU1_TRAIL_CONTROLS_COUNT
 20

	)

65 
	#BOCU1_TRAIL_BYTE_OFFSET
 (
BOCU1_MIN
-
BOCU1_TRAIL_CONTROLS_COUNT
)

	)

68 
	#BOCU1_TRAIL_COUNT
 ((
BOCU1_MAX_TRAIL
-
BOCU1_MIN
+1)+
BOCU1_TRAIL_CONTROLS_COUNT
)

	)

74 
	#BOCU1_SINGLE
 64

	)

77 
	#BOCU1_LEAD_2
 43

	)

78 
	#BOCU1_LEAD_3
 3

	)

79 
	#BOCU1_LEAD_4
 1

	)

82 
	#BOCU1_REACH_POS_1
 (
BOCU1_SINGLE
-1)

	)

83 
	#BOCU1_REACH_NEG_1
 (-
BOCU1_SINGLE
)

	)

86 
	#BOCU1_REACH_POS_2
 (
BOCU1_REACH_POS_1
+
BOCU1_LEAD_2
*
BOCU1_TRAIL_COUNT
)

	)

87 
	#BOCU1_REACH_NEG_2
 (
BOCU1_REACH_NEG_1
-
BOCU1_LEAD_2
*
BOCU1_TRAIL_COUNT
)

	)

90 
	#BOCU1_REACH_POS_3
 \

91 (
BOCU1_REACH_POS_2
+
BOCU1_LEAD_3
*
BOCU1_TRAIL_COUNT
*BOCU1_TRAIL_COUNT)

	)

93 
	#BOCU1_REACH_NEG_3
 (
BOCU1_REACH_NEG_2
-
BOCU1_LEAD_3
*
BOCU1_TRAIL_COUNT
*BOCU1_TRAIL_COUNT)

	)

96 
	#BOCU1_START_POS_2
 (
BOCU1_MIDDLE
+
BOCU1_REACH_POS_1
+1)

	)

97 
	#BOCU1_START_POS_3
 (
BOCU1_START_POS_2
+
BOCU1_LEAD_2
)

	)

98 
	#BOCU1_START_POS_4
 (
BOCU1_START_POS_3
+
BOCU1_LEAD_3
)

	)

101 
	#BOCU1_START_NEG_2
 (
BOCU1_MIDDLE
+
BOCU1_REACH_NEG_1
)

	)

102 
	#BOCU1_START_NEG_3
 (
BOCU1_START_NEG_2
-
BOCU1_LEAD_2
)

	)

103 
	#BOCU1_START_NEG_4
 (
BOCU1_START_NEG_3
-
BOCU1_LEAD_3
)

	)

107 
	#BOCU1_LENGTH_FROM_LEAD
(
Àad
) \

108 ((
BOCU1_START_NEG_2
<=(
Àad
Ë&& (Àad)<
BOCU1_START_POS_2
) ? 1 : \

109 (
BOCU1_START_NEG_3
<=(
Àad
Ë&& (Àad)<
BOCU1_START_POS_3
) ? 2 : \

110 (
BOCU1_START_NEG_4
<=(
Àad
Ë&& (Àad)<
BOCU1_START_POS_4
Ë? 3 : 4)

	)

113 
	#BOCU1_LENGTH_FROM_PACKED
(
∑cked
) \

114 ((
uöt32_t
)(
∑cked
)<0x04000000 ? (∑cked)>>24 : 4)

	)

144 
	#BOCU1_TRAIL_TO_BYTE
(
t
Ë(—)>=
BOCU1_TRAIL_CONTROLS_COUNT
 ? (t)+
BOCU1_TRAIL_BYTE_OFFSET
 : 
bocu1TøûToByã
[t])

	)

152 c⁄° 
öt8_t


153 
	gbocu1ByãToTøû
[
BOCU1_MIN
]={

175 c⁄° 
öt8_t


176 
	gbocu1TøûToByã
[
BOCU1_TRAIL_CONTROLS_COUNT
]={

200 
	#NEGDIVMOD
(
n
, 
d
, 
m
) { \

201 (
m
)=(
n
)%(
d
); \

202 (
n
)/=(
d
); \

203 if((
m
)<0) { \

204 --(
n
); \

205 (
m
)+=(
d
); \

207 }

	)

211 
	#BOCU1_SIMPLE_PREV
(
c
Ë(((c)&~0x7f)+
BOCU1_ASCII_PREV
)

	)

220 
U_INLINE
 
öt32_t


221 
	$bocu1Pªv
(
öt32_t
 
c
) {

223 if–
c
<=0x309f) {

226 } if(0x4e00<=
c
 && c<=0x9fa5) {

228  0x4e00-
BOCU1_REACH_NEG_2
;

229 } if(0xac00<=
c
 ) {

234  
	`BOCU1_SIMPLE_PREV
(
c
);

236 
	}
}

239 
	#BOCU1_PREV
(
c
Ë((c)<0x3040 || (c)>0xd7a3 ? 
	`BOCU1_SIMPLE_PREV
(cË: 
	`bocu1Pªv
(c))

	)

270 
öt32_t


271 
	$∑ckDiff
(
öt32_t
 
diff
) {

272 
öt32_t
 
ªsu…
, 
m
;

274 if(
diff
>=
BOCU1_REACH_NEG_1
) {

277 if(
diff
<=
BOCU1_REACH_POS_1
) {

279  0x01000000|(
BOCU1_MIDDLE
+
diff
);

282 if(
diff
<=
BOCU1_REACH_POS_2
) {

284 
diff
-=
BOCU1_REACH_POS_1
+1;

285 
ªsu…
=0x02000000;

287 
m
=
diff
%
BOCU1_TRAIL_COUNT
;

288 
diff
/=
BOCU1_TRAIL_COUNT
;

289 
ªsu…
|=
	`BOCU1_TRAIL_TO_BYTE
(
m
);

291 
ªsu…
|=(
BOCU1_START_POS_2
+
diff
)<<8;

292 } if(
diff
<=
BOCU1_REACH_POS_3
) {

294 
diff
-=
BOCU1_REACH_POS_2
+1;

295 
ªsu…
=0x03000000;

297 
m
=
diff
%
BOCU1_TRAIL_COUNT
;

298 
diff
/=
BOCU1_TRAIL_COUNT
;

299 
ªsu…
|=
	`BOCU1_TRAIL_TO_BYTE
(
m
);

301 
m
=
diff
%
BOCU1_TRAIL_COUNT
;

302 
diff
/=
BOCU1_TRAIL_COUNT
;

303 
ªsu…
|=
	`BOCU1_TRAIL_TO_BYTE
(
m
)<<8;

305 
ªsu…
|=(
BOCU1_START_POS_3
+
diff
)<<16;

308 
diff
-=
BOCU1_REACH_POS_3
+1;

310 
m
=
diff
%
BOCU1_TRAIL_COUNT
;

311 
diff
/=
BOCU1_TRAIL_COUNT
;

312 
ªsu…
=
	`BOCU1_TRAIL_TO_BYTE
(
m
);

314 
m
=
diff
%
BOCU1_TRAIL_COUNT
;

315 
diff
/=
BOCU1_TRAIL_COUNT
;

316 
ªsu…
|=
	`BOCU1_TRAIL_TO_BYTE
(
m
)<<8;

322 
ªsu…
|=
	`BOCU1_TRAIL_TO_BYTE
(
diff
)<<16;

324 
ªsu…
|=((
uöt32_t
)
BOCU1_START_POS_4
)<<24;

328 if(
diff
>=
BOCU1_REACH_NEG_2
) {

330 
diff
-=
BOCU1_REACH_NEG_1
;

331 
ªsu…
=0x02000000;

333 
	`NEGDIVMOD
(
diff
, 
BOCU1_TRAIL_COUNT
, 
m
);

334 
ªsu…
|=
	`BOCU1_TRAIL_TO_BYTE
(
m
);

336 
ªsu…
|=(
BOCU1_START_NEG_2
+
diff
)<<8;

337 } if(
diff
>=
BOCU1_REACH_NEG_3
) {

339 
diff
-=
BOCU1_REACH_NEG_2
;

340 
ªsu…
=0x03000000;

342 
	`NEGDIVMOD
(
diff
, 
BOCU1_TRAIL_COUNT
, 
m
);

343 
ªsu…
|=
	`BOCU1_TRAIL_TO_BYTE
(
m
);

345 
	`NEGDIVMOD
(
diff
, 
BOCU1_TRAIL_COUNT
, 
m
);

346 
ªsu…
|=
	`BOCU1_TRAIL_TO_BYTE
(
m
)<<8;

348 
ªsu…
|=(
BOCU1_START_NEG_3
+
diff
)<<16;

351 
diff
-=
BOCU1_REACH_NEG_3
;

353 
	`NEGDIVMOD
(
diff
, 
BOCU1_TRAIL_COUNT
, 
m
);

354 
ªsu…
=
	`BOCU1_TRAIL_TO_BYTE
(
m
);

356 
	`NEGDIVMOD
(
diff
, 
BOCU1_TRAIL_COUNT
, 
m
);

357 
ªsu…
|=
	`BOCU1_TRAIL_TO_BYTE
(
m
)<<8;

364 
m
=
diff
+
BOCU1_TRAIL_COUNT
;

365 
ªsu…
|=
	`BOCU1_TRAIL_TO_BYTE
(
m
)<<16;

367 
ªsu…
|=
BOCU1_MIN
<<24;

370  
ªsu…
;

371 
	}
}

376 
	#DIFF_IS_SINGLE
(
diff
Ë(
BOCU1_REACH_NEG_1
<=(diffË&& (diff)<=
BOCU1_REACH_POS_1
)

	)

379 
	#PACK_SINGLE_DIFF
(
diff
Ë(
BOCU1_MIDDLE
+(diff))

	)

382 
	#DIFF_IS_DOUBLE
(
diff
Ë(
BOCU1_REACH_NEG_2
<=(diffË&& (diff)<=
BOCU1_REACH_POS_2
)

	)

385 
	$_Bocu1FromUnicodeWôhOff£ts
(
UC⁄vîãrFromUnicodeArgs
 *
pArgs
,

386 
UEº‹Code
 *
pEº‹Code
) {

387 
UC⁄vîãr
 *
˙v
;

388 c⁄° 
UCh¨
 *
sour˚
, *
sour˚Limô
;

389 
uöt8_t
 *
èrgë
;

390 
öt32_t
 
èrgëC≠acôy
;

391 
öt32_t
 *
off£ts
;

393 
öt32_t
 
¥ev
, 
c
, 
diff
;

395 
öt32_t
 
sour˚Index
, 
√xtSour˚Index
;

397 
	`U_ALIGN_CODE
(16)

400 
˙v
=
pArgs
->
c⁄vîãr
;

401 
sour˚
=
pArgs
->source;

402 
sour˚Limô
=
pArgs
->sourceLimit;

403 
èrgë
=(
uöt8_t
 *)
pArgs
->target;

404 
èrgëC≠acôy
=(
öt32_t
)(
pArgs
->
èrgëLimô
-pArgs->
èrgë
);

405 
off£ts
=
pArgs
->offsets;

408 
c
=
˙v
->
‰omUCh¨32
;

409 
¥ev
=(
öt32_t
)
˙v
->
‰omUnicodeSètus
;

410 if(
¥ev
==0) {

411 
¥ev
=
BOCU1_ASCII_PREV
;

415 
sour˚Index

c
==0 ? 0 : -1;

416 
√xtSour˚Index
=0;

419 if(
c
!=0 && 
èrgëC≠acôy
>0) {

420 
gëTøû
;

423 
Á°SögÀ
:

426 
diff
=(
öt32_t
)(
sour˚Limô
-
sour˚
);

427 if(
èrgëC≠acôy
>
diff
) {

428 
èrgëC≠acôy
=
diff
;

430 
èrgëC≠acôy
>0 && (
c
=*
sour˚
)<0x3000) {

431 if(
c
<=0x20) {

432 if(
c
!=0x20) {

433 
¥ev
=
BOCU1_ASCII_PREV
;

435 *
èrgë
++=(
uöt8_t
)
c
;

436 *
off£ts
++=
√xtSour˚Index
++;

437 ++
sour˚
;

438 --
èrgëC≠acôy
;

440 
diff
=
c
-
¥ev
;

441 if(
	`DIFF_IS_SINGLE
(
diff
)) {

442 
¥ev
=
	`BOCU1_SIMPLE_PREV
(
c
);

443 *
èrgë
++=(
uöt8_t
)
	`PACK_SINGLE_DIFF
(
diff
);

444 *
off£ts
++=
√xtSour˚Index
++;

445 ++
sour˚
;

446 --
èrgëC≠acôy
;

453 
èrgëC≠acôy
=(
öt32_t
)((c⁄° 
uöt8_t
 *)
pArgs
->
èrgëLimô
-
èrgë
);

454 
sour˚Index
=
√xtSour˚Index
;

457 
sour˚
<
sour˚Limô
) {

458 if(
èrgëC≠acôy
>0) {

459 
c
=*
sour˚
++;

460 ++
√xtSour˚Index
;

462 if(
c
<=0x20) {

468 if(
c
!=0x20) {

469 
¥ev
=
BOCU1_ASCII_PREV
;

471 *
èrgë
++=(
uöt8_t
)
c
;

472 *
off£ts
++=
sour˚Index
;

473 --
èrgëC≠acôy
;

475 
sour˚Index
=
√xtSour˚Index
;

479 if(
	`UTF_IS_LEAD
(
c
)) {

480 
gëTøû
:

481 if(
sour˚
<
sour˚Limô
) {

483 
UCh¨
 
åaû
=*
sour˚
;

484 if(
	`UTF_IS_SECOND_SURROGATE
(
åaû
)) {

485 ++
sour˚
;

486 ++
√xtSour˚Index
;

487 
c
=
	`UTF16_GET_PAIR_VALUE
(c, 
åaû
);

491 
c
=-c;

505 
diff
=
c
-
¥ev
;

506 
¥ev
=
	`BOCU1_PREV
(
c
);

507 if(
	`DIFF_IS_SINGLE
(
diff
)) {

508 *
èrgë
++=(
uöt8_t
)
	`PACK_SINGLE_DIFF
(
diff
);

509 *
off£ts
++=
sour˚Index
;

510 --
èrgëC≠acôy
;

511 
sour˚Index
=
√xtSour˚Index
;

512 if(
c
<0x3000) {

513 
Á°SögÀ
;

515 } if(
	`DIFF_IS_DOUBLE
(
diff
Ë&& 2<=
èrgëC≠acôy
) {

517 
öt32_t
 
m
;

519 if(
diff
>=0) {

520 
diff
-=
BOCU1_REACH_POS_1
+1;

521 
m
=
diff
%
BOCU1_TRAIL_COUNT
;

522 
diff
/=
BOCU1_TRAIL_COUNT
;

523 
diff
+=
BOCU1_START_POS_2
;

525 
diff
-=
BOCU1_REACH_NEG_1
;

526 
	`NEGDIVMOD
(
diff
, 
BOCU1_TRAIL_COUNT
, 
m
);

527 
diff
+=
BOCU1_START_NEG_2
;

529 *
èrgë
++=(
uöt8_t
)
diff
;

530 *
èrgë
++=(
uöt8_t
)
	`BOCU1_TRAIL_TO_BYTE
(
m
);

531 *
off£ts
++=
sour˚Index
;

532 *
off£ts
++=
sour˚Index
;

533 
èrgëC≠acôy
-=2;

534 
sour˚Index
=
√xtSour˚Index
;

536 
öt32_t
 
Àngth
;

538 
diff
=
	`∑ckDiff
(diff);

539 
Àngth
=
	`BOCU1_LENGTH_FROM_PACKED
(
diff
);

543 if(
Àngth
<=
èrgëC≠acôy
) {

544 
Àngth
) {

547 *
èrgë
++=(
uöt8_t
)(
diff
>>24);

548 *
off£ts
++=
sour˚Index
;

550 *
èrgë
++=(
uöt8_t
)(
diff
>>16);

551 *
off£ts
++=
sour˚Index
;

553 *
èrgë
++=(
uöt8_t
)(
diff
>>8);

554 *
off£ts
++=
sour˚Index
;

556 *
èrgë
++=(
uöt8_t
)
diff
;

557 *
off£ts
++=
sour˚Index
;

562 
èrgëC≠acôy
-=
Àngth
;

563 
sour˚Index
=
√xtSour˚Index
;

565 
uöt8_t
 *
ch¨Eº‹Buf„r
;

574 
Àngth
-=
èrgëC≠acôy
;

575 
ch¨Eº‹Buf„r
=(
uöt8_t
 *)
˙v
->charErrorBuffer;

576 
Àngth
) {

579 *
ch¨Eº‹Buf„r
++=(
uöt8_t
)(
diff
>>16);

581 *
ch¨Eº‹Buf„r
++=(
uöt8_t
)(
diff
>>8);

583 *
ch¨Eº‹Buf„r
=(
uöt8_t
)
diff
;

588 
˙v
->
ch¨Eº‹Buf„rLígth
=(
öt8_t
)
Àngth
;

591 
diff
>>=8*
Àngth
;

592 
èrgëC≠acôy
) {

595 *
èrgë
++=(
uöt8_t
)(
diff
>>16);

596 *
off£ts
++=
sour˚Index
;

598 *
èrgë
++=(
uöt8_t
)(
diff
>>8);

599 *
off£ts
++=
sour˚Index
;

601 *
èrgë
++=(
uöt8_t
)
diff
;

602 *
off£ts
++=
sour˚Index
;

609 
èrgëC≠acôy
=0;

610 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

616 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

622 
˙v
->
‰omUCh¨32

c
<0 ? -c : 0;

623 
˙v
->
‰omUnicodeSètus
=(
uöt32_t
)
¥ev
;

626 
pArgs
->
sour˚
=source;

627 
pArgs
->
èrgë
=(*)target;

628 
pArgs
->
off£ts
=offsets;

629 
	}
}

639 
	$_Bocu1FromUnicode
(
UC⁄vîãrFromUnicodeArgs
 *
pArgs
,

640 
UEº‹Code
 *
pEº‹Code
) {

641 
UC⁄vîãr
 *
˙v
;

642 c⁄° 
UCh¨
 *
sour˚
, *
sour˚Limô
;

643 
uöt8_t
 *
èrgë
;

644 
öt32_t
 
èrgëC≠acôy
;

646 
öt32_t
 
¥ev
, 
c
, 
diff
;

649 
˙v
=
pArgs
->
c⁄vîãr
;

650 
sour˚
=
pArgs
->source;

651 
sour˚Limô
=
pArgs
->sourceLimit;

652 
èrgë
=(
uöt8_t
 *)
pArgs
->target;

653 
èrgëC≠acôy
=(
öt32_t
)(
pArgs
->
èrgëLimô
-pArgs->
èrgë
);

656 
c
=
˙v
->
‰omUCh¨32
;

657 
¥ev
=(
öt32_t
)
˙v
->
‰omUnicodeSètus
;

658 if(
¥ev
==0) {

659 
¥ev
=
BOCU1_ASCII_PREV
;

663 if(
c
!=0 && 
èrgëC≠acôy
>0) {

664 
gëTøû
;

667 
Á°SögÀ
:

670 
diff
=(
öt32_t
)(
sour˚Limô
-
sour˚
);

671 if(
èrgëC≠acôy
>
diff
) {

672 
èrgëC≠acôy
=
diff
;

674 
èrgëC≠acôy
>0 && (
c
=*
sour˚
)<0x3000) {

675 if(
c
<=0x20) {

676 if(
c
!=0x20) {

677 
¥ev
=
BOCU1_ASCII_PREV
;

679 *
èrgë
++=(
uöt8_t
)
c
;

681 
diff
=
c
-
¥ev
;

682 if(
	`DIFF_IS_SINGLE
(
diff
)) {

683 
¥ev
=
	`BOCU1_SIMPLE_PREV
(
c
);

684 *
èrgë
++=(
uöt8_t
)
	`PACK_SINGLE_DIFF
(
diff
);

689 ++
sour˚
;

690 --
èrgëC≠acôy
;

693 
èrgëC≠acôy
=(
öt32_t
)((c⁄° 
uöt8_t
 *)
pArgs
->
èrgëLimô
-
èrgë
);

696 
sour˚
<
sour˚Limô
) {

697 if(
èrgëC≠acôy
>0) {

698 
c
=*
sour˚
++;

700 if(
c
<=0x20) {

706 if(
c
!=0x20) {

707 
¥ev
=
BOCU1_ASCII_PREV
;

709 *
èrgë
++=(
uöt8_t
)
c
;

710 --
èrgëC≠acôy
;

714 if(
	`UTF_IS_LEAD
(
c
)) {

715 
gëTøû
:

716 if(
sour˚
<
sour˚Limô
) {

718 
UCh¨
 
åaû
=*
sour˚
;

719 if(
	`UTF_IS_SECOND_SURROGATE
(
åaû
)) {

720 ++
sour˚
;

721 
c
=
	`UTF16_GET_PAIR_VALUE
(c, 
åaû
);

725 
c
=-c;

739 
diff
=
c
-
¥ev
;

740 
¥ev
=
	`BOCU1_PREV
(
c
);

741 if(
	`DIFF_IS_SINGLE
(
diff
)) {

742 *
èrgë
++=(
uöt8_t
)
	`PACK_SINGLE_DIFF
(
diff
);

743 --
èrgëC≠acôy
;

744 if(
c
<0x3000) {

745 
Á°SögÀ
;

747 } if(
	`DIFF_IS_DOUBLE
(
diff
Ë&& 2<=
èrgëC≠acôy
) {

749 
öt32_t
 
m
;

751 if(
diff
>=0) {

752 
diff
-=
BOCU1_REACH_POS_1
+1;

753 
m
=
diff
%
BOCU1_TRAIL_COUNT
;

754 
diff
/=
BOCU1_TRAIL_COUNT
;

755 
diff
+=
BOCU1_START_POS_2
;

757 
diff
-=
BOCU1_REACH_NEG_1
;

758 
	`NEGDIVMOD
(
diff
, 
BOCU1_TRAIL_COUNT
, 
m
);

759 
diff
+=
BOCU1_START_NEG_2
;

761 *
èrgë
++=(
uöt8_t
)
diff
;

762 *
èrgë
++=(
uöt8_t
)
	`BOCU1_TRAIL_TO_BYTE
(
m
);

763 
èrgëC≠acôy
-=2;

765 
öt32_t
 
Àngth
;

767 
diff
=
	`∑ckDiff
(diff);

768 
Àngth
=
	`BOCU1_LENGTH_FROM_PACKED
(
diff
);

772 if(
Àngth
<=
èrgëC≠acôy
) {

773 
Àngth
) {

776 *
èrgë
++=(
uöt8_t
)(
diff
>>24);

778 *
èrgë
++=(
uöt8_t
)(
diff
>>16);

780 *
èrgë
++=(
uöt8_t
)(
diff
>>8);

782 *
èrgë
++=(
uöt8_t
)
diff
;

787 
èrgëC≠acôy
-=
Àngth
;

789 
uöt8_t
 *
ch¨Eº‹Buf„r
;

798 
Àngth
-=
èrgëC≠acôy
;

799 
ch¨Eº‹Buf„r
=(
uöt8_t
 *)
˙v
->charErrorBuffer;

800 
Àngth
) {

803 *
ch¨Eº‹Buf„r
++=(
uöt8_t
)(
diff
>>16);

805 *
ch¨Eº‹Buf„r
++=(
uöt8_t
)(
diff
>>8);

807 *
ch¨Eº‹Buf„r
=(
uöt8_t
)
diff
;

812 
˙v
->
ch¨Eº‹Buf„rLígth
=(
öt8_t
)
Àngth
;

815 
diff
>>=8*
Àngth
;

816 
èrgëC≠acôy
) {

819 *
èrgë
++=(
uöt8_t
)(
diff
>>16);

821 *
èrgë
++=(
uöt8_t
)(
diff
>>8);

823 *
èrgë
++=(
uöt8_t
)
diff
;

830 
èrgëC≠acôy
=0;

831 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

837 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

843 
˙v
->
‰omUCh¨32

c
<0 ? -c : 0;

844 
˙v
->
‰omUnicodeSètus
=(
uöt32_t
)
¥ev
;

847 
pArgs
->
sour˚
=source;

848 
pArgs
->
èrgë
=(*)target;

849 
	}
}

860 
U_INLINE
 
öt32_t


861 
	$decodeBocu1LódByã
(
öt32_t
 
b
) {

862 
öt32_t
 
diff
, 
cou¡
;

864 if(
b
>=
BOCU1_START_NEG_2
) {

866 if(
b
<
BOCU1_START_POS_3
) {

868 
diff
=((
öt32_t
)
b
-
BOCU1_START_POS_2
)*
BOCU1_TRAIL_COUNT
+
BOCU1_REACH_POS_1
+1;

869 
cou¡
=1;

870 } if(
b
<
BOCU1_START_POS_4
) {

872 
diff
=((
öt32_t
)
b
-
BOCU1_START_POS_3
)*
BOCU1_TRAIL_COUNT
*BOCU1_TRAIL_COUNT+
BOCU1_REACH_POS_2
+1;

873 
cou¡
=2;

876 
diff
=
BOCU1_REACH_POS_3
+1;

877 
cou¡
=3;

881 if(
b
>=
BOCU1_START_NEG_3
) {

883 
diff
=((
öt32_t
)
b
-
BOCU1_START_NEG_2
)*
BOCU1_TRAIL_COUNT
+
BOCU1_REACH_NEG_1
;

884 
cou¡
=1;

885 } if(
b
>
BOCU1_MIN
) {

887 
diff
=((
öt32_t
)
b
-
BOCU1_START_NEG_3
)*
BOCU1_TRAIL_COUNT
*BOCU1_TRAIL_COUNT+
BOCU1_REACH_NEG_2
;

888 
cou¡
=2;

891 
diff
=-
BOCU1_TRAIL_COUNT
*BOCU1_TRAIL_COUNT*BOCU1_TRAIL_COUNT+
BOCU1_REACH_NEG_3
;

892 
cou¡
=3;

897  (
diff
<<2)|
cou¡
;

898 
	}
}

909 
U_INLINE
 
öt32_t


910 
	$decodeBocu1TøûByã
(
öt32_t
 
cou¡
, i¡32_à
b
) {

911 if(
b
<=0x20) {

913 
b
=
bocu1ByãToTøû
[b];

915 #i‡
BOCU1_MAX_TRAIL
<0xff

916 } if(
b
>
BOCU1_MAX_TRAIL
) {

920 
b
-=
BOCU1_TRAIL_BYTE_OFFSET
;

924 if(
cou¡
==1) {

925  
b
;

926 } if(
cou¡
==2) {

927  
b
*
BOCU1_TRAIL_COUNT
;

929  
b
*(
BOCU1_TRAIL_COUNT
*BOCU1_TRAIL_COUNT);

931 
	}
}

934 
	$_Bocu1ToUnicodeWôhOff£ts
(
UC⁄vîãrToUnicodeArgs
 *
pArgs
,

935 
UEº‹Code
 *
pEº‹Code
) {

936 
UC⁄vîãr
 *
˙v
;

937 c⁄° 
uöt8_t
 *
sour˚
, *
sour˚Limô
;

938 
UCh¨
 *
èrgë
;

939 c⁄° 
UCh¨
 *
èrgëLimô
;

940 
öt32_t
 *
off£ts
;

942 
öt32_t
 
¥ev
, 
cou¡
, 
diff
, 
c
;

944 
öt8_t
 
byãIndex
;

945 
uöt8_t
 *
byãs
;

947 
öt32_t
 
sour˚Index
, 
√xtSour˚Index
;

950 
˙v
=
pArgs
->
c⁄vîãr
;

951 
sour˚
=(c⁄° 
uöt8_t
 *)
pArgs
->source;

952 
sour˚Limô
=(c⁄° 
uöt8_t
 *)
pArgs
->sourceLimit;

953 
èrgë
=
pArgs
->target;

954 
èrgëLimô
=
pArgs
->targetLimit;

955 
off£ts
=
pArgs
->offsets;

958 
¥ev
=(
öt32_t
)
˙v
->
toUnicodeSètus
;

959 if(
¥ev
==0) {

960 
¥ev
=
BOCU1_ASCII_PREV
;

962 
diff
=
˙v
->
mode
;

963 
cou¡
=
diff
&3;

964 
diff
>>=2;

966 
byãIndex
=
˙v
->
toULígth
;

967 
byãs
=
˙v
->
toUByãs
;

970 
sour˚Index
=
byãIndex
==0 ? 0 : -1;

971 
√xtSour˚Index
=0;

974 if(
cou¡
>0 && 
byãIndex
>0 && 
èrgë
<
èrgëLimô
) {

975 
gëTøû
;

978 
Á°SögÀ
:

981 
diff
=(
öt32_t
)(
sour˚Limô
-
sour˚
);

982 
cou¡
=(
öt32_t
)(
pArgs
->
èrgëLimô
-
èrgë
);

983 if(
cou¡
>
diff
) {

984 
cou¡
=
diff
;

986 
cou¡
>0) {

987 if(
BOCU1_START_NEG_2
<=(
c
=*
sour˚
Ë&& c<
BOCU1_START_POS_2
) {

988 
c
=
¥ev
+(c-
BOCU1_MIDDLE
);

989 if(
c
<0x3000) {

990 *
èrgë
++=(
UCh¨
)
c
;

991 *
off£ts
++=
√xtSour˚Index
++;

992 
¥ev
=
	`BOCU1_SIMPLE_PREV
(
c
);

996 } if(
c
<=0x20) {

997 if(
c
!=0x20) {

998 
¥ev
=
BOCU1_ASCII_PREV
;

1000 *
èrgë
++=(
UCh¨
)
c
;

1001 *
off£ts
++=
√xtSour˚Index
++;

1005 ++
sour˚
;

1006 --
cou¡
;

1008 
sour˚Index
=
√xtSour˚Index
;

1011 
sour˚
<
sour˚Limô
) {

1012 if(
èrgë
>=
èrgëLimô
) {

1014 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

1018 ++
√xtSour˚Index
;

1019 
c
=*
sour˚
++;

1020 if(
BOCU1_START_NEG_2
<=
c
 && c<
BOCU1_START_POS_2
) {

1022 
c
=
¥ev
+(c-
BOCU1_MIDDLE
);

1023 if(
c
<0x3000) {

1024 *
èrgë
++=(
UCh¨
)
c
;

1025 *
off£ts
++=
sour˚Index
;

1026 
¥ev
=
	`BOCU1_SIMPLE_PREV
(
c
);

1027 
sour˚Index
=
√xtSour˚Index
;

1028 
Á°SögÀ
;

1030 } if(
c
<=0x20) {

1035 if(
c
!=0x20) {

1036 
¥ev
=
BOCU1_ASCII_PREV
;

1038 *
èrgë
++=(
UCh¨
)
c
;

1039 *
off£ts
++=
sour˚Index
;

1040 
sour˚Index
=
√xtSour˚Index
;

1042 } if(
BOCU1_START_NEG_3
<=
c
 && c<
BOCU1_START_POS_3
 && 
sour˚
<
sour˚Limô
) {

1044 if(
c
>=
BOCU1_MIDDLE
) {

1045 
diff
=((
öt32_t
)
c
-
BOCU1_START_POS_2
)*
BOCU1_TRAIL_COUNT
+
BOCU1_REACH_POS_1
+1;

1047 
diff
=((
öt32_t
)
c
-
BOCU1_START_NEG_2
)*
BOCU1_TRAIL_COUNT
+
BOCU1_REACH_NEG_1
;

1051 ++
√xtSour˚Index
;

1052 
c
=
	`decodeBocu1TøûByã
(1, *
sour˚
++);

1053 if(
c
<0 || (
uöt32_t
)(c=
¥ev
+
diff
+c)>0x10ffff) {

1054 
byãs
[0]=
sour˚
[-2];

1055 
byãs
[1]=
sour˚
[-1];

1056 
byãIndex
=2;

1057 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

1060 } if(
c
==
BOCU1_RESET
) {

1062 
¥ev
=
BOCU1_ASCII_PREV
;

1063 
sour˚Index
=
√xtSour˚Index
;

1071 
byãs
[0]=(
uöt8_t
)
c
;

1072 
byãIndex
=1;

1074 
diff
=
	`decodeBocu1LódByã
(
c
);

1075 
cou¡
=
diff
&3;

1076 
diff
>>=2;

1077 
gëTøû
:

1079 if(
sour˚
>=
sour˚Limô
) {

1080 
ídlo›
;

1082 ++
√xtSour˚Index
;

1083 
c
=
byãs
[
byãIndex
++]=*
sour˚
++;

1086 
c
=
	`decodeBocu1TøûByã
(
cou¡
, c);

1087 if(
c
<0) {

1088 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

1089 
ídlo›
;

1092 
diff
+=
c
;

1093 if(--
cou¡
==0) {

1095 
byãIndex
=0;

1096 
c
=
¥ev
+
diff
;

1097 if((
uöt32_t
)
c
>0x10ffff) {

1098 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

1099 
ídlo›
;

1107 
¥ev
=
	`BOCU1_PREV
(
c
);

1108 if(
c
<=0xffff) {

1109 *
èrgë
++=(
UCh¨
)
c
;

1110 *
off£ts
++=
sour˚Index
;

1113 *
èrgë
++=
	`UTF16_LEAD
(
c
);

1114 if(
èrgë
<
èrgëLimô
) {

1115 *
èrgë
++=
	`UTF16_TRAIL
(
c
);

1116 *
off£ts
++=
sour˚Index
;

1117 *
off£ts
++=
sour˚Index
;

1120 *
off£ts
++=
sour˚Index
;

1121 
˙v
->
UCh¨Eº‹Buf„r
[0]=
	`UTF16_TRAIL
(
c
);

1122 
˙v
->
UCh¨Eº‹Buf„rLígth
=1;

1123 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

1127 
sour˚Index
=
√xtSour˚Index
;

1129 
ídlo›
:

1131 if(*
pEº‹Code
==
U_ILLEGAL_CHAR_FOUND
) {

1133 
˙v
->
toUnicodeSètus
=
BOCU1_ASCII_PREV
;

1134 
˙v
->
mode
=0;

1137 
˙v
->
toUnicodeSètus
=(
uöt32_t
)
¥ev
;

1138 
˙v
->
mode
=(
diff
<<2)|
cou¡
;

1140 
˙v
->
toULígth
=
byãIndex
;

1143 
pArgs
->
sour˚
=(const *)source;

1144 
pArgs
->
èrgë
=target;

1145 
pArgs
->
off£ts
=offsets;

1147 
	}
}

1157 
	$_Bocu1ToUnicode
(
UC⁄vîãrToUnicodeArgs
 *
pArgs
,

1158 
UEº‹Code
 *
pEº‹Code
) {

1159 
UC⁄vîãr
 *
˙v
;

1160 c⁄° 
uöt8_t
 *
sour˚
, *
sour˚Limô
;

1161 
UCh¨
 *
èrgë
;

1162 c⁄° 
UCh¨
 *
èrgëLimô
;

1164 
öt32_t
 
¥ev
, 
cou¡
, 
diff
, 
c
;

1166 
öt8_t
 
byãIndex
;

1167 
uöt8_t
 *
byãs
;

1169 
	`U_ALIGN_CODE
(16)

1172 
˙v
=
pArgs
->
c⁄vîãr
;

1173 
sour˚
=(c⁄° 
uöt8_t
 *)
pArgs
->source;

1174 
sour˚Limô
=(c⁄° 
uöt8_t
 *)
pArgs
->sourceLimit;

1175 
èrgë
=
pArgs
->target;

1176 
èrgëLimô
=
pArgs
->targetLimit;

1179 
¥ev
=(
öt32_t
)
˙v
->
toUnicodeSètus
;

1180 if(
¥ev
==0) {

1181 
¥ev
=
BOCU1_ASCII_PREV
;

1183 
diff
=
˙v
->
mode
;

1184 
cou¡
=
diff
&3;

1185 
diff
>>=2;

1187 
byãIndex
=
˙v
->
toULígth
;

1188 
byãs
=
˙v
->
toUByãs
;

1191 if(
cou¡
>0 && 
byãIndex
>0 && 
èrgë
<
èrgëLimô
) {

1192 
gëTøû
;

1195 
Á°SögÀ
:

1198 
diff
=(
öt32_t
)(
sour˚Limô
-
sour˚
);

1199 
cou¡
=(
öt32_t
)(
pArgs
->
èrgëLimô
-
èrgë
);

1200 if(
cou¡
>
diff
) {

1201 
cou¡
=
diff
;

1203 
cou¡
>0) {

1204 if(
BOCU1_START_NEG_2
<=(
c
=*
sour˚
Ë&& c<
BOCU1_START_POS_2
) {

1205 
c
=
¥ev
+(c-
BOCU1_MIDDLE
);

1206 if(
c
<0x3000) {

1207 *
èrgë
++=(
UCh¨
)
c
;

1208 
¥ev
=
	`BOCU1_SIMPLE_PREV
(
c
);

1212 } if(
c
<=0x20) {

1213 if(
c
!=0x20) {

1214 
¥ev
=
BOCU1_ASCII_PREV
;

1216 *
èrgë
++=(
UCh¨
)
c
;

1220 ++
sour˚
;

1221 --
cou¡
;

1225 
sour˚
<
sour˚Limô
) {

1226 if(
èrgë
>=
èrgëLimô
) {

1228 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

1232 
c
=*
sour˚
++;

1233 if(
BOCU1_START_NEG_2
<=
c
 && c<
BOCU1_START_POS_2
) {

1235 
c
=
¥ev
+(c-
BOCU1_MIDDLE
);

1236 if(
c
<0x3000) {

1237 *
èrgë
++=(
UCh¨
)
c
;

1238 
¥ev
=
	`BOCU1_SIMPLE_PREV
(
c
);

1239 
Á°SögÀ
;

1241 } if(
c
<=0x20) {

1246 if(
c
!=0x20) {

1247 
¥ev
=
BOCU1_ASCII_PREV
;

1249 *
èrgë
++=(
UCh¨
)
c
;

1251 } if(
BOCU1_START_NEG_3
<=
c
 && c<
BOCU1_START_POS_3
 && 
sour˚
<
sour˚Limô
) {

1253 if(
c
>=
BOCU1_MIDDLE
) {

1254 
diff
=((
öt32_t
)
c
-
BOCU1_START_POS_2
)*
BOCU1_TRAIL_COUNT
+
BOCU1_REACH_POS_1
+1;

1256 
diff
=((
öt32_t
)
c
-
BOCU1_START_NEG_2
)*
BOCU1_TRAIL_COUNT
+
BOCU1_REACH_NEG_1
;

1260 
c
=
	`decodeBocu1TøûByã
(1, *
sour˚
++);

1261 if(
c
<0 || (
uöt32_t
)(c=
¥ev
+
diff
+c)>0x10ffff) {

1262 
byãs
[0]=
sour˚
[-2];

1263 
byãs
[1]=
sour˚
[-1];

1264 
byãIndex
=2;

1265 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

1268 } if(
c
==
BOCU1_RESET
) {

1270 
¥ev
=
BOCU1_ASCII_PREV
;

1278 
byãs
[0]=(
uöt8_t
)
c
;

1279 
byãIndex
=1;

1281 
diff
=
	`decodeBocu1LódByã
(
c
);

1282 
cou¡
=
diff
&3;

1283 
diff
>>=2;

1284 
gëTøû
:

1286 if(
sour˚
>=
sour˚Limô
) {

1287 
ídlo›
;

1289 
c
=
byãs
[
byãIndex
++]=*
sour˚
++;

1292 
c
=
	`decodeBocu1TøûByã
(
cou¡
, c);

1293 if(
c
<0) {

1294 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

1295 
ídlo›
;

1298 
diff
+=
c
;

1299 if(--
cou¡
==0) {

1301 
byãIndex
=0;

1302 
c
=
¥ev
+
diff
;

1303 if((
uöt32_t
)
c
>0x10ffff) {

1304 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

1305 
ídlo›
;

1313 
¥ev
=
	`BOCU1_PREV
(
c
);

1314 if(
c
<=0xffff) {

1315 *
èrgë
++=(
UCh¨
)
c
;

1318 *
èrgë
++=
	`UTF16_LEAD
(
c
);

1319 if(
èrgë
<
èrgëLimô
) {

1320 *
èrgë
++=
	`UTF16_TRAIL
(
c
);

1323 
˙v
->
UCh¨Eº‹Buf„r
[0]=
	`UTF16_TRAIL
(
c
);

1324 
˙v
->
UCh¨Eº‹Buf„rLígth
=1;

1325 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

1330 
ídlo›
:

1332 if(*
pEº‹Code
==
U_ILLEGAL_CHAR_FOUND
) {

1334 
˙v
->
toUnicodeSètus
=
BOCU1_ASCII_PREV
;

1335 
˙v
->
mode
=0;

1338 
˙v
->
toUnicodeSètus
=(
uöt32_t
)
¥ev
;

1339 
˙v
->
mode
=(
diff
<<2)|
cou¡
;

1341 
˙v
->
toULígth
=
byãIndex
;

1344 
pArgs
->
sour˚
=(const *)source;

1345 
pArgs
->
èrgë
=target;

1347 
	}
}

1351 c⁄° 
UC⁄vîãrIm∂
 
	g_Bocu1Im∂
={

1352 
UCNV_BOCU1
,

1354 
NULL
,

1355 
NULL
,

1357 
NULL
,

1358 
NULL
,

1359 
NULL
,

1361 
_Bocu1ToUnicode
,

1362 
_Bocu1ToUnicodeWôhOff£ts
,

1363 
_Bocu1FromUnicode
,

1364 
_Bocu1FromUnicodeWôhOff£ts
,

1365 
NULL
,

1367 
NULL
,

1368 
NULL
,

1369 
NULL
,

1370 
NULL
,

1371 
u˙v_gëCom∂ëeUnicodeSë


1374 c⁄° 
UC⁄vîãrSèticD©a
 
	g_Bocu1SèticD©a
={

1375 (
UC⁄vîãrSèticD©a
),

1378 
UCNV_IBM
, 
UCNV_BOCU1
,

1381 
FALSE
, FALSE,

1387 c⁄° 
UC⁄vîãrSh¨edD©a
 
	g_Bocu1D©a
={

1388 (
UC⁄vîãrSh¨edD©a
), ~((
uöt32_t
)0),

1389 
NULL
, NULL, &
_Bocu1SèticD©a
, 
FALSE
, &
_Bocu1Im∂
,

	@ucnvdisp.c

21 
	~"unicode/uty≥s.h
"

23 #i‡!
UCONFIG_NO_CONVERSION


25 
	~"unicode/u°rög.h
"

26 
	~"unicode/uªs.h
"

27 
	~"unicode/u˙v.h
"

28 
	~"c°rög.h
"

29 
	~"u°r_imp.h
"

30 
	~"u˙v_imp.h
"

31 
	~"putûimp.h
"

33 
U_CAPI
 
öt32_t
 
U_EXPORT2


34 
	$u˙v_gëDi•œyName
(c⁄° 
UC⁄vîãr
 *
˙v
,

35 c⁄° *
di•œyLoˇÀ
,

36 
UCh¨
 *
di•œyName
, 
öt32_t
 
di•œyNameC≠acôy
,

37 
UEº‹Code
 *
pEº‹Code
) {

38 
UResour˚BundÀ
 *
rb
;

39 c⁄° 
UCh¨
 *
«me
;

40 
öt32_t
 
Àngth
;

41 
UEº‹Code
 
loˇlSètus
 = 
U_ZERO_ERROR
;

44 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

48 if(
˙v
==
NULL
 || 
di•œyNameC≠acôy
<0 || (di•œyNameC≠acôy>0 && 
di•œyName
==NULL)) {

49 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

54 
rb
=
	`uªs_›í
(
NULL
, 
di•œyLoˇÀ
, 
pEº‹Code
);

55 if(
	`U_FAILURE
(*
pEº‹Code
)) {

60 
«me
=
	`uªs_gëSåögByKey
(
rb
, 
˙v
->
sh¨edD©a
->
°©icD©a
->«me, &
Àngth
, &
loˇlSètus
);

61 
	`uªs_˛o£
(
rb
);

63 if(
	`U_SUCCESS
(
loˇlSètus
)) {

65 i‡(*
pEº‹Code
 =
U_ZERO_ERROR
) {

66 *
pEº‹Code
 = 
loˇlSètus
;

68 
	`u_mem˝y
(
di•œyName
, 
«me
, 
	`u¥v_mö
(
Àngth
, 
di•œyNameC≠acôy
)*
U_SIZEOF_UCHAR
);

71 
Àngth
=(
öt32_t
)
	`u¥v_°æí
(
˙v
->
sh¨edD©a
->
°©icD©a
->
«me
);

72 
	`u_ch¨sToUCh¨s
(
˙v
->
sh¨edD©a
->
°©icD©a
->
«me
, 
di•œyName
, 
	`u¥v_mö
(
Àngth
, 
di•œyNameC≠acôy
));

74  
	`u_ãrmö©eUCh¨s
(
di•œyName
, 
di•œyNameC≠acôy
, 
Àngth
, 
pEº‹Code
);

75 
	}
}

	@ucnvhz.c

17 
	~"unicode/uty≥s.h
"

19 #i‡!
UCONFIG_NO_CONVERSION
 && !
UCONFIG_NO_LEGACY_CONVERSION


21 
	~"cmem‹y.h
"

22 
	~"unicode/u˙v.h
"

23 
	~"unicode/u˙v_cb.h
"

24 
	~"unicode/u£t.h
"

25 
	~"u˙v_bld.h
"

26 
	~"u˙v_˙v.h
"

27 
	~"u˙v_imp.h
"

29 
	#UCNV_TILDE
 0x7E

	)

30 
	#UCNV_OPEN_BRACE
 0x7B

	)

31 
	#UCNV_CLOSE_BRACE
 0x7D

	)

32 
	#SB_ESCAPE
 "\x7E\x7D"

	)

33 
	#DB_ESCAPE
 "\x7E\x7B"

	)

34 
	#TILDE_ESCAPE
 "\x7E\x7E"

	)

35 
	#ESC_LEN
 2

	)

38 
	#CONCAT_ESCAPE_MACRO
–
¨gs
, 
èrgëIndex
,
èrgëLígth
,
°rToAµíd
, 
îr
, 
Àn
,
sour˚Index
){ \

39 
Àn
-->0){ \

40 if(
èrgëIndex
 < 
èrgëLígth
){ \

41 
¨gs
->
èrgë
[
èrgëIndex
] = (Ë*
°rToAµíd
; \

42 if(
¨gs
->
off£ts
!=
NULL
){ \

43 *(
off£ts
++Ë
sour˚Index
-1; \

45 
èrgëIndex
++; \

48 
¨gs
->
c⁄vîãr
->
ch¨Eº‹Buf„r
[(Ôrgs->c⁄vîãr->
ch¨Eº‹Buf„rLígth
++] = (Ë*
°rToAµíd
; \

49 *
îr
 =
U_BUFFER_OVERFLOW_ERROR
; \

51 
°rToAµíd
++; \

53 }

	)

57 
UC⁄vîãr
* 
	mgbC⁄vîãr
;

58 
öt32_t
 
	mèrgëIndex
;

59 
öt32_t
 
	msour˚Index
;

60 
UBoﬁ
 
	misEsˇ≥Aµíded
;

61 
UBoﬁ
 
	misSèãDBCS
;

62 
UBoﬁ
 
	misT¨gëUCh¨DBCS
;

63 
UBoﬁ
 
	misEm±ySegmít
;

64 }
	tUC⁄vîãrD©aHZ
;

69 
	$_HZO≥n
(
UC⁄vîãr
 *
˙v
, 
UC⁄vîãrLﬂdArgs
 *
pArgs
, 
UEº‹Code
 *
îr‹Code
){

70 
UC⁄vîãr
 *
gbC⁄vîãr
;

71 if(
pArgs
->
⁄lyTe°IsLﬂdabÀ
) {

72 
	`u˙v_ˇnCª©eC⁄vîãr
("GBK", 
îr‹Code
);

75 
gbC⁄vîãr
 = 
	`u˙v_›í
("GBK", 
îr‹Code
);

76 if(
	`U_FAILURE
(*
îr‹Code
)) {

79 
˙v
->
toUnicodeSètus
 = 0;

80 
˙v
->
‰omUnicodeSètus
= 0;

81 
˙v
->
mode
=0;

82 
˙v
->
‰omUCh¨32
=0x0000;

83 
˙v
->
exåaInfo
 = 
	`u¥v_mÆloc
((
UC⁄vîãrD©aHZ
));

84 if(
˙v
->
exåaInfo
 !
NULL
){

85 
	`u¥v_mem£t
(
˙v
->
exåaInfo
, 0, (
UC⁄vîãrD©aHZ
));

86 ((
UC⁄vîãrD©aHZ
*)
˙v
->
exåaInfo
)->
gbC⁄vîãr
 = gbConverter;

89 
	`u˙v_˛o£
(
gbC⁄vîãr
);

90 *
îr‹Code
 = 
U_MEMORY_ALLOCATION_ERROR
;

93 
	}
}

96 
	$_HZClo£
(
UC⁄vîãr
 *
˙v
){

97 if(
˙v
->
exåaInfo
 !
NULL
) {

98 
	`u˙v_˛o£
 (((
UC⁄vîãrD©aHZ
 *Ë(
˙v
->
exåaInfo
))->
gbC⁄vîãr
);

99 if(!
˙v
->
isExåaLoˇl
) {

100 
	`u¥v_‰ì
(
˙v
->
exåaInfo
);

102 
˙v
->
exåaInfo
 = 
NULL
;

104 
	}
}

107 
	$_HZRe£t
(
UC⁄vîãr
 *
˙v
, 
UC⁄vîãrRe£tChoi˚
 
choi˚
){

108 if(
choi˚
<=
UCNV_RESET_TO_UNICODE
) {

109 
˙v
->
toUnicodeSètus
 = 0;

110 
˙v
->
mode
=0;

111 if(
˙v
->
exåaInfo
 !
NULL
){

112 ((
UC⁄vîãrD©aHZ
*)
˙v
->
exåaInfo
)->
isSèãDBCS
 = 
FALSE
;

113 ((
UC⁄vîãrD©aHZ
*)
˙v
->
exåaInfo
)->
isEm±ySegmít
 = 
FALSE
;

116 if(
choi˚
!=
UCNV_RESET_TO_UNICODE
) {

117 
˙v
->
‰omUnicodeSètus
= 0;

118 
˙v
->
‰omUCh¨32
=0x0000;

119 if(
˙v
->
exåaInfo
 !
NULL
){

120 ((
UC⁄vîãrD©aHZ
*)
˙v
->
exåaInfo
)->
isEsˇ≥Aµíded
 = 
FALSE
;

121 ((
UC⁄vîãrD©aHZ
*)
˙v
->
exåaInfo
)->
èrgëIndex
 = 0;

122 ((
UC⁄vîãrD©aHZ
*)
˙v
->
exåaInfo
)->
sour˚Index
 = 0;

123 ((
UC⁄vîãrD©aHZ
*)
˙v
->
exåaInfo
)->
isT¨gëUCh¨DBCS
 = 
FALSE
;

126 
	}
}

154 
	$UC⁄vîãr_toUnicode_HZ_OFFSETS_LOGIC
(
UC⁄vîãrToUnicodeArgs
 *
¨gs
,

155 
UEº‹Code
* 
îr
){

156 
ãmpBuf
[2];

157 c⁄° *
mySour˚
 = ( *Ë
¨gs
->
sour˚
;

158 
UCh¨
 *
myT¨gë
 = 
¨gs
->
èrgë
;

159 c⁄° *
mySour˚Limô
 = 
¨gs
->
sour˚Limô
;

160 
UCh¨32
 
èrgëUniCh¨
 = 0x0000;

161 
öt32_t
 
mySour˚Ch¨
 = 0x0000;

162 
UC⁄vîãrD©aHZ
* 
myD©a
=(UC⁄vîãrD©aHZ*)(
¨gs
->
c⁄vîãr
->
exåaInfo
);

163 
ãmpBuf
[0]=0;

164 
ãmpBuf
[1]=0;

172 
mySour˚
< 
mySour˚Limô
){

174 if(
myT¨gë
 < 
¨gs
->
èrgëLimô
){

176 
mySour˚Ch¨
(Ë*
mySour˚
++;

178 if(
¨gs
->
c⁄vîãr
->
mode
 =
UCNV_TILDE
) {

180 
¨gs
->
c⁄vîãr
->
mode
=0;

181 
mySour˚Ch¨
) {

185 
UCNV_TILDE
:

186 if(
¨gs
->
off£ts
) {

187 
¨gs
->
off£ts
[
myT¨gë
 -árgs->
èrgë
]=(
öt32_t
)(
mySour˚
 -árgs->
sour˚
 - 2);

189 *(
myT¨gë
++)=(
UCh¨
)
mySour˚Ch¨
;

190 
myD©a
->
isEm±ySegmít
 = 
FALSE
;

192 
UCNV_OPEN_BRACE
:

193 
UCNV_CLOSE_BRACE
:

194 
myD©a
->
isSèãDBCS
 = (
mySour˚Ch¨
 =
UCNV_OPEN_BRACE
);

195 i‡(
myD©a
->
isEm±ySegmít
) {

196 
myD©a
->
isEm±ySegmít
 = 
FALSE
;

197 *
îr
 = 
U_ILLEGAL_ESCAPE_SEQUENCE
;

198 
¨gs
->
c⁄vîãr
->
toUCÆlbackRós⁄
 = 
UCNV_IRREGULAR
;

199 
¨gs
->
c⁄vîãr
->
toUByãs
[0] = 
UCNV_TILDE
;

200 
¨gs
->
c⁄vîãr
->
toUByãs
[1] = 
mySour˚Ch¨
;

201 
¨gs
->
c⁄vîãr
->
toULígth
 = 2;

202 
¨gs
->
èrgë
 = 
myT¨gë
;

203 
¨gs
->
sour˚
 = 
mySour˚
;

206 
myD©a
->
isEm±ySegmít
 = 
TRUE
;

218 
myD©a
->
isEm±ySegmít
 = 
FALSE
;

219 *
îr
 = 
U_ILLEGAL_ESCAPE_SEQUENCE
;

220 
¨gs
->
c⁄vîãr
->
toUByãs
[0] = 
UCNV_TILDE
;

221 if–
myD©a
->
isSèãDBCS
 ?

222 (0x21 <
mySour˚Ch¨
 && mySourceChar <= 0x7e) :

223 
mySour˚Ch¨
 <= 0x7f

226 
¨gs
->
c⁄vîãr
->
toULígth
 = 1;

227 --
mySour˚
;

230 
¨gs
->
c⁄vîãr
->
toUByãs
[1] = 
mySour˚Ch¨
;

231 
¨gs
->
c⁄vîãr
->
toULígth
 = 2;

233 
¨gs
->
èrgë
 = 
myT¨gë
;

234 
¨gs
->
sour˚
 = 
mySour˚
;

237 } if(
myD©a
->
isSèãDBCS
) {

238 if(
¨gs
->
c⁄vîãr
->
toUnicodeSètus
 == 0x00){

240 if(
mySour˚Ch¨
 =
UCNV_TILDE
) {

241 
¨gs
->
c⁄vîãr
->
mode
 = 
UCNV_TILDE
;

244 
¨gs
->
c⁄vîãr
->
toUnicodeSètus
 = (
uöt32_t
Ë(
mySour˚Ch¨
 | 0x100);

245 
myD©a
->
isEm±ySegmít
 = 
FALSE
;

251 
ÀadIsOk
, 
åaûIsOk
;

252 
uöt32_t
 
ÀadByã
 = 
¨gs
->
c⁄vîãr
->
toUnicodeSètus
 & 0xff;

253 
èrgëUniCh¨
 = 0xffff;

264 
ÀadIsOk
 = (
uöt8_t
)(
ÀadByã
 - 0x21) <= (0x7d - 0x21);

265 
åaûIsOk
 = (
uöt8_t
)(
mySour˚Ch¨
 - 0x21) <= (0x7e - 0x21);

266 i‡(
ÀadIsOk
 && 
åaûIsOk
) {

267 
ãmpBuf
[0] = (Ë(
ÀadByã
+0x80) ;

268 
ãmpBuf
[1] = (Ë(
mySour˚Ch¨
+0x80);

269 
èrgëUniCh¨
 = 
	`u˙v_MBCSSim∂eGëNextUCh¨
(
myD©a
->
gbC⁄vîãr
->
sh¨edD©a
,

270 
ãmpBuf
, 2, 
¨gs
->
c⁄vîãr
->
u£FÆlback
);

271 
mySour˚Ch¨
(
ÀadByã
 << 8) | mySourceChar;

272 } i‡(
åaûIsOk
) {

274 --
mySour˚
;

275 
mySour˚Ch¨
 = (
öt32_t
)
ÀadByã
;

279 
mySour˚Ch¨
0x10000 | (
ÀadByã
 << 8) | mySourceChar;

281 
¨gs
->
c⁄vîãr
->
toUnicodeSètus
 =0x00;

285 if(
mySour˚Ch¨
 =
UCNV_TILDE
) {

286 
¨gs
->
c⁄vîãr
->
mode
 = 
UCNV_TILDE
;

288 } if(
mySour˚Ch¨
 <= 0x7f) {

289 
èrgëUniCh¨
 = (
UCh¨
)
mySour˚Ch¨
;

290 
myD©a
->
isEm±ySegmít
 = 
FALSE
;

292 
èrgëUniCh¨
 = 0xffff;

293 
myD©a
->
isEm±ySegmít
 = 
FALSE
;

296 if(
èrgëUniCh¨
 < 0xfffe){

297 if(
¨gs
->
off£ts
) {

298 
¨gs
->
off£ts
[
myT¨gë
 -árgs->
èrgë
]=(
öt32_t
)(
mySour˚
 -árgs->
sour˚
 - 1-(
myD©a
->
isSèãDBCS
));

301 *(
myT¨gë
++)=(
UCh¨
)
èrgëUniCh¨
;

304 if(
èrgëUniCh¨
 == 0xfffe){

305 *
îr
 = 
U_INVALID_CHAR_FOUND
;

308 *
îr
 = 
U_ILLEGAL_CHAR_FOUND
;

310 if(
mySour˚Ch¨
 > 0xff){

311 
¨gs
->
c⁄vîãr
->
toUByãs
[0] = (
uöt8_t
)(
mySour˚Ch¨
 >> 8);

312 
¨gs
->
c⁄vîãr
->
toUByãs
[1] = (
uöt8_t
)
mySour˚Ch¨
;

313 
¨gs
->
c⁄vîãr
->
toULígth
=2;

316 
¨gs
->
c⁄vîãr
->
toUByãs
[0] = (
uöt8_t
)
mySour˚Ch¨
;

317 
¨gs
->
c⁄vîãr
->
toULígth
=1;

323 *
îr
 =
U_BUFFER_OVERFLOW_ERROR
;

328 
¨gs
->
èrgë
 = 
myT¨gë
;

329 
¨gs
->
sour˚
 = 
mySour˚
;

330 
	}
}

334 
	$UC⁄vîãr_‰omUnicode_HZ_OFFSETS_LOGIC
 (
UC⁄vîãrFromUnicodeArgs
 * 
¨gs
,

335 
UEº‹Code
 * 
îr
){

336 c⁄° 
UCh¨
 *
mySour˚
 = 
¨gs
->
sour˚
;

337 *
myT¨gë
 = 
¨gs
->
èrgë
;

338 
öt32_t
* 
off£ts
 = 
¨gs
->offsets;

339 
öt32_t
 
mySour˚Index
 = 0;

340 
öt32_t
 
myT¨gëIndex
 = 0;

341 
öt32_t
 
èrgëLígth
 = (öt32_t)(
¨gs
->
èrgëLimô
 - 
myT¨gë
);

342 
öt32_t
 
mySour˚Lígth
 = (öt32_t)(
¨gs
->
sour˚Limô
 -árgs->
sour˚
);

343 
öt32_t
 
Àngth
=0;

344 
uöt32_t
 
èrgëUniCh¨
 = 0x0000;

345 
UCh¨32
 
mySour˚Ch¨
 = 0x0000;

346 
UC⁄vîãrD©aHZ
 *
myC⁄vîãrD©a
=(UC⁄vîãrD©aHZ*)
¨gs
->
c⁄vîãr
->
exåaInfo
;

347 
UBoﬁ
 
isT¨gëUCh¨DBCS
 = (UBoﬁË
myC⁄vîãrD©a
->isTargetUCharDBCS;

348 
UBoﬁ
 
ﬁdIsT¨gëUCh¨DBCS
 = 
isT¨gëUCh¨DBCS
;

349 
Àn
 =0;

350 c⁄° * 
escSeq
=
NULL
;

357 if(
¨gs
->
c⁄vîãr
->
‰omUCh¨32
!=0 && 
myT¨gëIndex
 < 
èrgëLígth
) {

358 
gëTøû
;

361 
mySour˚Index
 < 
mySour˚Lígth
){

362 
èrgëUniCh¨
 = 
missögCh¨M¨kî
;

363 i‡(
myT¨gëIndex
 < 
èrgëLígth
){

365 
mySour˚Ch¨
 = (
UCh¨
Ë
mySour˚
[
mySour˚Index
++];

368 
ﬁdIsT¨gëUCh¨DBCS
 = 
isT¨gëUCh¨DBCS
;

369 if(
mySour˚Ch¨
 ==
UCNV_TILDE
){

371 
Àn
 = 
ESC_LEN
;

372 
escSeq
 = 
TILDE_ESCAPE
;

373 
	`CONCAT_ESCAPE_MACRO
(
¨gs
, 
myT¨gëIndex
, 
èrgëLígth
, 
escSeq
,
îr
,
Àn
,
mySour˚Index
);

375 } if(
mySour˚Ch¨
 <= 0x7f) {

376 
Àngth
 = 1;

377 
èrgëUniCh¨
 = 
mySour˚Ch¨
;

379 
Àngth

	`u˙v_MBCSFromUCh¨32
(
myC⁄vîãrD©a
->
gbC⁄vîãr
->
sh¨edD©a
,

380 
mySour˚Ch¨
,&
èrgëUniCh¨
,
¨gs
->
c⁄vîãr
->
u£FÆlback
);

382 if–
Àngth
 == 2 &&

383 (
uöt16_t
)(
èrgëUniCh¨
 - 0xa1a1) <= (0xfdfe - 0xa1a1) &&

384 (
uöt8_t
)(
èrgëUniCh¨
 - 0xa1) <= (0xfe - 0xa1)

386 
èrgëUniCh¨
 -= 0x8080;

388 
èrgëUniCh¨
 = 
missögCh¨M¨kî
;

391 i‡(
èrgëUniCh¨
 !
missögCh¨M¨kî
){

392 
myC⁄vîãrD©a
->
isT¨gëUCh¨DBCS
 = isT¨gëUCh¨DBCS = (
UBoﬁ
)(
èrgëUniCh¨
>0x00FF);

393 if(
ﬁdIsT¨gëUCh¨DBCS
 !
isT¨gëUCh¨DBCS
 || !
myC⁄vîãrD©a
->
isEsˇ≥Aµíded
 ){

395 if(!
isT¨gëUCh¨DBCS
){

396 
Àn
 =
ESC_LEN
;

397 
escSeq
 = 
SB_ESCAPE
;

398 
	`CONCAT_ESCAPE_MACRO
(
¨gs
, 
myT¨gëIndex
, 
èrgëLígth
, 
escSeq
,
îr
,
Àn
,
mySour˚Index
);

399 
myC⁄vîãrD©a
->
isEsˇ≥Aµíded
 = 
TRUE
;

402 
Àn
 =
ESC_LEN
;

403 
escSeq
 = 
DB_ESCAPE
;

404 
	`CONCAT_ESCAPE_MACRO
(
¨gs
, 
myT¨gëIndex
, 
èrgëLígth
, 
escSeq
,
îr
,
Àn
,
mySour˚Index
);

405 
myC⁄vîãrD©a
->
isEsˇ≥Aµíded
 = 
TRUE
;

410 if(
isT¨gëUCh¨DBCS
){

411 if–
myT¨gëIndex
 <
èrgëLígth
){

412 
myT¨gë
[
myT¨gëIndex
++] =(Ë(
èrgëUniCh¨
 >> 8);

413 if(
off£ts
){

414 *(
off£ts
++Ë
mySour˚Index
-1;

416 if(
myT¨gëIndex
 < 
èrgëLígth
){

417 
myT¨gë
[
myT¨gëIndex
++] =(Ë
èrgëUniCh¨
;

418 if(
off£ts
){

419 *(
off£ts
++Ë
mySour˚Index
-1;

422 
¨gs
->
c⁄vîãr
->
ch¨Eº‹Buf„r
[¨gs->c⁄vîãr->
ch¨Eº‹Buf„rLígth
++] = (Ë
èrgëUniCh¨
;

423 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

426 
¨gs
->
c⁄vîãr
->
ch¨Eº‹Buf„r
[¨gs->c⁄vîãr->
ch¨Eº‹Buf„rLígth
++] =(Ë(
èrgëUniCh¨
 >> 8);

427 
¨gs
->
c⁄vîãr
->
ch¨Eº‹Buf„r
[¨gs->c⁄vîãr->
ch¨Eº‹Buf„rLígth
++] = (Ë
èrgëUniCh¨
;

428 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

432 if–
myT¨gëIndex
 <
èrgëLígth
){

433 
myT¨gë
[
myT¨gëIndex
++] = (Ë(
èrgëUniCh¨
 );

434 if(
off£ts
){

435 *(
off£ts
++Ë
mySour˚Index
-1;

439 
¨gs
->
c⁄vîãr
->
ch¨Eº‹Buf„r
[¨gs->c⁄vîãr->
ch¨Eº‹Buf„rLígth
++] = (Ë
èrgëUniCh¨
;

440 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

449 if(
	`UTF_IS_SURROGATE
(
mySour˚Ch¨
)) {

450 if(
	`UTF_IS_SURROGATE_FIRST
(
mySour˚Ch¨
)) {

451 
¨gs
->
c⁄vîãr
->
‰omUCh¨32
=
mySour˚Ch¨
;

452 
gëTøû
:

454 if(
mySour˚Index
 < 
mySour˚Lígth
) {

456 
UCh¨
 
åaû
=(UCh¨Ë
¨gs
->
sour˚
[
mySour˚Index
];

457 if(
	`UTF_IS_SECOND_SURROGATE
(
åaû
)) {

458 ++
mySour˚Index
;

459 
mySour˚Ch¨
=
	`UTF16_GET_PAIR_VALUE
(
¨gs
->
c⁄vîãr
->
‰omUCh¨32
, 
åaû
);

460 
¨gs
->
c⁄vîãr
->
‰omUCh¨32
=0x00;

462 *
îr
 = 
U_INVALID_CHAR_FOUND
;

467 *
îr
=
U_ILLEGAL_CHAR_FOUND
;

471 *
îr
 = 
U_ZERO_ERROR
;

476 *
îr
=
U_ILLEGAL_CHAR_FOUND
;

480 *
îr
 = 
U_INVALID_CHAR_FOUND
;

483 
¨gs
->
c⁄vîãr
->
‰omUCh¨32
=
mySour˚Ch¨
;

488 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
;

491 
èrgëUniCh¨
=
missögCh¨M¨kî
;

494 
¨gs
->
èrgë
 +
myT¨gëIndex
;

495 
¨gs
->
sour˚
 +
mySour˚Index
;

496 
myC⁄vîãrD©a
->
isT¨gëUCh¨DBCS
 = isTargetUCharDBCS;

497 
	}
}

500 
	$_HZ_WrôeSub
(
UC⁄vîãrFromUnicodeArgs
 *
¨gs
, 
öt32_t
 
off£tIndex
, 
UEº‹Code
 *
îr
) {

501 
UC⁄vîãr
 *
˙v
 = 
¨gs
->
c⁄vîãr
;

502 
UC⁄vîãrD©aHZ
 *
c⁄vD©a
=(UC⁄vîãrD©aHZ *Ë
˙v
->
exåaInfo
;

503 *
p
;

504 
buf„r
[4];

505 
p
 = 
buf„r
;

507 if–
c⁄vD©a
->
isT¨gëUCh¨DBCS
){

508 *
p
++
UCNV_TILDE
;

509 *
p
++
UCNV_CLOSE_BRACE
;

510 
c⁄vD©a
->
isT¨gëUCh¨DBCS
=
FALSE
;

512 *
p
++()
˙v
->
subCh¨s
[0];

514 
	`u˙v_cbFromUWrôeByãs
(
¨gs
,

515 
buf„r
, (
öt32_t
)(
p
 - buffer),

516 
off£tIndex
, 
îr
);

517 
	}
}

529 
	s˛⁄eHZSåu˘


531 
UC⁄vîãr
 
	m˙v
;

532 
UC⁄vîãr
 
	msubCnv
;

533 
UAlig√dMem‹y
 
	mdódS∑˚
;

534 
UC⁄vîãrD©aHZ
 
	mmyd©a
;

538 
UC⁄vîãr
 *

539 
	$_HZ_Sa„Cl⁄e
(c⁄° 
UC⁄vîãr
 *
˙v
,

540 *
°ackBuf„r
,

541 
öt32_t
 *
pBuf„rSize
,

542 
UEº‹Code
 *
°©us
)

544 
˛⁄eHZSåu˘
 * 
loˇlCl⁄e
;

545 
öt32_t
 
size
, 
buf„rSizeNìded
 = (
˛⁄eHZSåu˘
);

547 i‡(
	`U_FAILURE
(*
°©us
)){

551 i‡(*
pBuf„rSize
 == 0){

552 *
pBuf„rSize
 = 
buf„rSizeNìded
;

556 
loˇlCl⁄e
 = (
˛⁄eHZSåu˘
 *)
°ackBuf„r
;

559 
	`u¥v_mem˝y
(&
loˇlCl⁄e
->
myd©a
, 
˙v
->
exåaInfo
, (
UC⁄vîãrD©aHZ
));

560 
loˇlCl⁄e
->
˙v
.
exåaInfo
 = &loˇlCl⁄e->
myd©a
;

561 
loˇlCl⁄e
->
˙v
.
isExåaLoˇl
 = 
TRUE
;

564 
size
 = (
öt32_t
)((
UC⁄vîãr
Ë+ (
UAlig√dMem‹y
));

565 ((
UC⁄vîãrD©aHZ
*)
loˇlCl⁄e
->
˙v
.
exåaInfo
)->
gbC⁄vîãr
 =

566 
	`u˙v_ß„Cl⁄e
(((
UC⁄vîãrD©aHZ
*)
˙v
->
exåaInfo
)->
gbC⁄vîãr
, &
loˇlCl⁄e
->
subCnv
, &
size
, 
°©us
);

568  &
loˇlCl⁄e
->
˙v
;

569 
	}
}

572 
	$_HZ_GëUnicodeSë
(c⁄° 
UC⁄vîãr
 *
˙v
,

573 c⁄° 
USëAddî
 *
ß
,

574 
UC⁄vîãrUnicodeSë
 
which
,

575 
UEº‹Code
 *
pEº‹Code
) {

577 
ß
->
	`addR™ge
(ß->
£t
, 0, 0x7f);

580 
	`u˙v_MBCSGëFûãªdUnicodeSëF‹Unicode
(

581 ((
UC⁄vîãrD©aHZ
*)
˙v
->
exåaInfo
)->
gbC⁄vîãr
->
sh¨edD©a
,

582 
ß
, 
which
, 
UCNV_SET_FILTER_HZ
,

583 
pEº‹Code
);

584 
	}
}

586 c⁄° 
UC⁄vîãrIm∂
 
	g_HZIm∂
={

588 
UCNV_HZ
,

590 
NULL
,

591 
NULL
,

593 
_HZO≥n
,

594 
_HZClo£
,

595 
_HZRe£t
,

597 
UC⁄vîãr_toUnicode_HZ_OFFSETS_LOGIC
,

598 
UC⁄vîãr_toUnicode_HZ_OFFSETS_LOGIC
,

599 
UC⁄vîãr_‰omUnicode_HZ_OFFSETS_LOGIC
,

600 
UC⁄vîãr_‰omUnicode_HZ_OFFSETS_LOGIC
,

601 
NULL
,

603 
NULL
,

604 
NULL
,

605 
_HZ_WrôeSub
,

606 
_HZ_Sa„Cl⁄e
,

607 
_HZ_GëUnicodeSë


610 c⁄° 
UC⁄vîãrSèticD©a
 
	g_HZSèticD©a
={

611 (
UC⁄vîãrSèticD©a
),

614 
UCNV_IBM
,

615 
UCNV_HZ
,

620 
FALSE
,

621 
FALSE
,

629 c⁄° 
UC⁄vîãrSh¨edD©a
 
	g_HZD©a
={

630 (
UC⁄vîãrSh¨edD©a
),

631 ~((
uöt32_t
) 0),

632 
NULL
,

633 
NULL
,

634 &
_HZSèticD©a
,

635 
FALSE
,

636 &
_HZIm∂
,

	@ucnvisci.c

18 
	~"unicode/uty≥s.h
"

20 #i‡!
UCONFIG_NO_CONVERSION
 && !
UCONFIG_NO_LEGACY_CONVERSION


22 
	~"cmem‹y.h
"

23 
	~"u˙v_bld.h
"

24 
	~"unicode/u˙v.h
"

25 
	~"u˙v_˙v.h
"

26 
	~"unicode/u˙v_cb.h
"

27 
	~"unicode/u£t.h
"

28 
	~"c°rög.h
"

30 
	#UCNV_OPTIONS_VERSION_MASK
 0xf

	)

31 
	#NUKTA
 0x093c

	)

32 
	#HALANT
 0x094d

	)

33 
	#ZWNJ
 0x200¯

	)

34 
	#ZWJ
 0x200d

	)

35 
	#INVALID_CHAR
 0xffff

	)

36 
	#ATR
 0xEF

	)

37 
	#EXT
 0xF0

	)

38 
	#DANDA
 0x0964

	)

39 
	#DOUBLE_DANDA
 0x0965

	)

40 
	#ISCII_NUKTA
 0xE9

	)

41 
	#ISCII_HALANT
 0xE8

	)

42 
	#ISCII_DANDA
 0xEA

	)

43 
	#ISCII_INV
 0xD9

	)

44 
	#ISCII_VOWEL_SIGN_E
 0xE0

	)

45 
	#INDIC_BLOCK_BEGIN
 0x0900

	)

46 
	#INDIC_BLOCK_END
 0x0D7F

	)

47 
	#INDIC_RANGE
 (
INDIC_BLOCK_END
 - 
INDIC_BLOCK_BEGIN
)

	)

48 
	#VOCALLIC_RR
 0x0931

	)

49 
	#LF
 0x0A

	)

50 
	#ASCII_END
 0xA0

	)

51 
	#NO_CHAR_MARKER
 0xFFFE

	)

52 
	#TELUGU_DELTA
 
DELTA
 * 
TELUGU


	)

53 
	#DEV_ABBR_SIGN
 0x0970

	)

54 
	#DEV_ANUDATTA
 0x0952

	)

55 
	#EXT_RANGE_BEGIN
 0xA1

	)

56 
	#EXT_RANGE_END
 0xEE

	)

58 
	#PNJ_DELTA
 0x0100

	)

59 
	#PNJ_BINDI
 0x0A02

	)

60 
	#PNJ_TIPPI
 0x0A70

	)

61 
	#PNJ_SIGN_VIRAMA
 0x0A4D

	)

62 
	#PNJ_ADHAK
 0x0A71

	)

63 
	#PNJ_HA
 0x0A39

	)

64 
	#PNJ_RRA
 0x0A5C

	)

66 
USë
* 
	gPNJ_BINDI_TIPPI_SET

NULL
;

67 
USë
* 
	gPNJ_CONSONANT_SET

NULL
;

70 
	mDEVANAGARI
 =0,

71 
	mBENGALI
,

72 
	mGURMUKHI
,

73 
	mGUJARATI
,

74 
	mORIYA
,

75 
	mTAMIL
,

76 
	mTELUGU
,

77 
	mKANNADA
,

78 
	mMALAYALAM
,

79 
	mDELTA
=0x80

80 }
	tUniL™g
;

87 
	mDEF
 = 0x40,

88 
	mRMN
 = 0x41,

89 
	mDEV
 = 0x42,

90 
	mBNG
 = 0x43,

91 
	mTML
 = 0x44,

92 
	mTLG
 = 0x45,

93 
	mASM
 = 0x46,

94 
	mORI
 = 0x47,

95 
	mKND
 = 0x48,

96 
	mMLM
 = 0x49,

97 
	mGJR
 = 0x4A,

98 
	mPNJ
 = 0x4B,

99 
	mARB
 = 0x71,

100 
	mPES
 = 0x72,

101 
	mURD
 = 0x73,

102 
	mSND
 = 0x74,

103 
	mKSM
 = 0x75,

104 
	mPST
 = 0x76

105 }
	tISCIIL™g
;

108 
	mDEV_MASK
 =0x80,

109 
	mPNJ_MASK
 =0x40,

110 
	mGJR_MASK
 =0x20,

111 
	mORI_MASK
 =0x10,

112 
	mBNG_MASK
 =0x08,

113 
	mKND_MASK
 =0x04,

114 
	mMLM_MASK
 =0x02,

115 
	mTML_MASK
 =0x01,

116 
	mZERO
 =0x00

117 }
	tMaskEnum
;

119 
	#ISCII_CNV_PREFIX
 "ISCII,vîsi⁄="

	)

122 
UCh¨
 
	mc⁄ãxtCh¨ToUnicode
;

123 
UCh¨
 
	mc⁄ãxtCh¨FromUnicode
;

124 
uöt16_t
 
	mdefDñèToUnicode
;

125 
uöt16_t
 
	mcuºítDñèFromUnicode
;

126 
uöt16_t
 
	mcuºítDñèToUnicode
;

127 
MaskEnum
 
	mcuºítMaskFromUnicode
;

128 
MaskEnum
 
	mcuºítMaskToUnicode
;

129 
MaskEnum
 
	mdefMaskToUnicode
;

130 
UBoﬁ
 
	misFú°Buf„r
;

131 
UBoﬁ
 
	mª£tToDeÁu…ToUnicode
;

132 
	m«me
[(
ISCII_CNV_PREFIX
) + 1];

133 
UCh¨32
 
	m¥evToUnicodeSètus
;

134 } 
	tUC⁄vîãrD©aISCII
;

136 
	sLookupD©aSåu˘
 {

137 
UniL™g
 
	muniL™g
;

138 
MaskEnum
 
	mmaskEnum
;

139 
ISCIIL™g
 
	misciiL™g
;

140 } 
	tLookupD©aSåu˘
;

142 c⁄° 
LookupD©aSåu˘
 
	glookupInôülD©a
[]={

143 { 
DEVANAGARI
, 
DEV_MASK
, 
DEV
 },

144 { 
BENGALI
, 
BNG_MASK
, 
BNG
 },

145 { 
GURMUKHI
, 
PNJ_MASK
, 
PNJ
 },

146 { 
GUJARATI
, 
GJR_MASK
, 
GJR
 },

147 { 
ORIYA
, 
ORI_MASK
, 
ORI
 },

148 { 
TAMIL
, 
TML_MASK
, 
TML
 },

149 { 
TELUGU
, 
KND_MASK
, 
TLG
 },

150 { 
KANNADA
, 
KND_MASK
, 
KND
 },

151 { 
MALAYALAM
, 
MLM_MASK
, 
MLM
 }

154 
	$öôülizeSës
() {

156 
PNJ_CONSONANT_SET
 = 
	`u£t_›í
(0,0);

157 
	`u£t_˛ór
(
PNJ_CONSONANT_SET
);

159 
	`u£t_addR™ge
(
PNJ_CONSONANT_SET
, 0x0A15, 0x0A28);

160 
	`u£t_addR™ge
(
PNJ_CONSONANT_SET
, 0x0A2A, 0x0A30);

161 
	`u£t_addR™ge
(
PNJ_CONSONANT_SET
, 0x0A35, 0x0A36);

162 
	`u£t_addR™ge
(
PNJ_CONSONANT_SET
, 0x0A38, 0x0A39);

164 
PNJ_BINDI_TIPPI_SET
 = 
	`u£t_˛⁄e
(
PNJ_CONSONANT_SET
);

165 
	`u£t_add
(
PNJ_BINDI_TIPPI_SET
, 0x0A05);

166 
	`u£t_add
(
PNJ_BINDI_TIPPI_SET
, 0x0A07);

167 
	`u£t_add
(
PNJ_BINDI_TIPPI_SET
, 0x0A3F);

168 
	`u£t_addR™ge
(
PNJ_BINDI_TIPPI_SET
, 0x0A41, 0x0A42);

170 
	`u£t_com∑˘
(
PNJ_CONSONANT_SET
);

171 
	`u£t_com∑˘
(
PNJ_BINDI_TIPPI_SET
);

172 
	}
}

174 
	$_ISCIIO≥n
(
UC⁄vîãr
 *
˙v
, 
UC⁄vîãrLﬂdArgs
 *
pArgs
, 
UEº‹Code
 *
îr‹Code
) {

175 if(
pArgs
->
⁄lyTe°IsLﬂdabÀ
) {

180 
	`öôülizeSës
();

182 
˙v
->
exåaInfo
 = 
	`u¥v_mÆloc
((
UC⁄vîãrD©aISCII
));

184 i‡(
˙v
->
exåaInfo
 !
NULL
) {

185 
öt32_t
 
Àn
=0;

186 
UC⁄vîãrD©aISCII
 *
c⁄vîãrD©a
=

187 (
UC⁄vîãrD©aISCII
 *Ë
˙v
->
exåaInfo
;

188 
c⁄vîãrD©a
->
c⁄ãxtCh¨ToUnicode
=
NO_CHAR_MARKER
;

189 
˙v
->
toUnicodeSètus
 = 
missögCh¨M¨kî
;

190 
c⁄vîãrD©a
->
c⁄ãxtCh¨FromUnicode
=0x0000;

191 
c⁄vîãrD©a
->
ª£tToDeÁu…ToUnicode
=
FALSE
;

193 i‡((
pArgs
->
›ti⁄s
 & 
UCNV_OPTIONS_VERSION_MASK
) < 9) {

195 
c⁄vîãrD©a
->
cuºítDñèFromUnicode


196 
c⁄vîãrD©a
->
cuºítDñèToUnicode


197 
c⁄vîãrD©a
->
defDñèToUnicode
 = (
uöt16_t
)(
lookupInôülD©a
[
pArgs
->
›ti⁄s
 & 
UCNV_OPTIONS_VERSION_MASK
].
uniL™g
 * 
DELTA
);

199 
c⁄vîãrD©a
->
cuºítMaskFromUnicode


200 
c⁄vîãrD©a
->
cuºítMaskToUnicode


201 
c⁄vîãrD©a
->
defMaskToUnicode
 = 
lookupInôülD©a
[
pArgs
->
›ti⁄s
 & 
UCNV_OPTIONS_VERSION_MASK
].
maskEnum
;

203 
c⁄vîãrD©a
->
isFú°Buf„r
=
TRUE
;

204 ()
	`u¥v_°r˝y
(
c⁄vîãrD©a
->
«me
, 
ISCII_CNV_PREFIX
);

205 
Àn
 = (
öt32_t
)
	`u¥v_°æí
(
c⁄vîãrD©a
->
«me
);

206 
c⁄vîãrD©a
->
«me
[
Àn
]()((
pArgs
->
›ti⁄s
 & 
UCNV_OPTIONS_VERSION_MASK
) + '0');

207 
c⁄vîãrD©a
->
«me
[
Àn
+1]=0;

209 
c⁄vîãrD©a
->
¥evToUnicodeSètus
 = 0x0000;

211 
	`u¥v_‰ì
(
˙v
->
exåaInfo
);

212 
˙v
->
exåaInfo
 = 
NULL
;

213 *
îr‹Code
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

217 *
îr‹Code
 =
U_MEMORY_ALLOCATION_ERROR
;

219 
	}
}

221 
	$_ISCIIClo£
(
UC⁄vîãr
 *
˙v
) {

222 i‡(
˙v
->
exåaInfo
!=
NULL
) {

223 i‡(!
˙v
->
isExåaLoˇl
) {

224 
	`u¥v_‰ì
(
˙v
->
exåaInfo
);

226 
˙v
->
exåaInfo
=
NULL
;

228 i‡(
PNJ_CONSONANT_SET
 !
NULL
) {

229 
	`u£t_˛o£
(
PNJ_CONSONANT_SET
);

230 
PNJ_CONSONANT_SET
 = 
NULL
;

232 i‡(
PNJ_BINDI_TIPPI_SET
 !
NULL
) {

233 
	`u£t_˛o£
(
PNJ_BINDI_TIPPI_SET
);

234 
PNJ_BINDI_TIPPI_SET
 = 
NULL
;

236 
	}
}

238 c⁄° * 
	$_ISCIIgëName
(c⁄° 
UC⁄vîãr
* 
˙v
) {

239 i‡(
˙v
->
exåaInfo
) {

240 
UC⁄vîãrD©aISCII
* 
myD©a
(UC⁄vîãrD©aISCII*)
˙v
->
exåaInfo
;

241  
myD©a
->
«me
;

243  
NULL
;

244 
	}
}

246 
	$_ISCIIRe£t
(
UC⁄vîãr
 *
˙v
, 
UC⁄vîãrRe£tChoi˚
 
choi˚
) {

247 
UC⁄vîãrD©aISCII
* 
d©a
 =(UC⁄vîãrD©aISCII *Ë(
˙v
->
exåaInfo
);

248 i‡(
choi˚
<=
UCNV_RESET_TO_UNICODE
) {

249 
˙v
->
toUnicodeSètus
 = 
missögCh¨M¨kî
;

250 
˙v
->
mode
=0;

251 
d©a
->
cuºítDñèToUnicode
=d©a->
defDñèToUnicode
;

252 
d©a
->
cuºítMaskToUnicode
 = d©a->
defMaskToUnicode
;

253 
d©a
->
c⁄ãxtCh¨ToUnicode
=
NO_CHAR_MARKER
;

254 
d©a
->
¥evToUnicodeSètus
 = 0x0000;

256 i‡(
choi˚
!=
UCNV_RESET_TO_UNICODE
) {

257 
˙v
->
‰omUCh¨32
=0x0000;

258 
d©a
->
c⁄ãxtCh¨FromUnicode
=0x00;

259 
d©a
->
cuºítMaskFromUnicode
=d©a->
defMaskToUnicode
;

260 
d©a
->
cuºítDñèFromUnicode
=d©a->
defDñèToUnicode
;

261 
d©a
->
isFú°Buf„r
=
TRUE
;

262 
d©a
->
ª£tToDeÁu…ToUnicode
=
FALSE
;

264 
	}
}

286 c⁄° 
uöt8_t
 
	gvÆidôyTabÀ
[128] = {

290  
ZERO
 + ZERO + ZERO + ZERO + ZERO + ZERO + ZERO + ZERO ,

291  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
ZERO
 + ZERO + ZERO ,

292  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

293  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

294  
DEV_MASK
 + 
ZERO
 + ZERO + ZERO + ZERO + ZERO + ZERO + ZERO ,

295  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

296  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

297  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

298  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

299  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

300  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

301  
DEV_MASK
 + 
ZERO
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + ZERO ,

302  
DEV_MASK
 + 
ZERO
 + ZERO + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + ZERO ,

303  
DEV_MASK
 + 
ZERO
 + 
GJR_MASK
 + ZERO + ZERO + ZERO + ZERO + ZERO ,

304  
DEV_MASK
 + 
ZERO
 + ZERO + ZERO + ZERO + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

305  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

306  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

307  
DEV_MASK
 + 
ZERO
 + 
GJR_MASK
 + ZERO + ZERO + ZERO + ZERO + ZERO ,

308  
DEV_MASK
 + 
ZERO
 + ZERO + ZERO + ZERO + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

309  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

310  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

311  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

312  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
ZERO
 ,

313  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
ZERO
 ,

314  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
ZERO
 ,

315  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

316  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

317  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
ZERO
 ,

318  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

319  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
ZERO
 ,

320  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

321  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

322  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
ZERO
 ,

323  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
ZERO
 ,

324  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
ZERO
 ,

325  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

326  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

327  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
ZERO
 ,

328  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
ZERO
 ,

329  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
ZERO
 ,

330  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

331  
DEV_MASK
 + 
ZERO
 + ZERO + ZERO + ZERO + ZERO + ZERO + 
TML_MASK
 ,

332  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

333  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
ZERO
 ,

334  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
ZERO
 ,

335  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
ZERO
 ,

336  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

337  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

338  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

339  
DEV_MASK
 + 
ZERO
 + ZERO + ZERO + ZERO + ZERO + 
MLM_MASK
 + 
TML_MASK
 ,

340  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

341  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
ZERO
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

342  
DEV_MASK
 + 
ZERO
 + ZERO + ZERO + ZERO + ZERO + 
MLM_MASK
 + 
TML_MASK
 ,

343  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
ZERO
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

344  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
ZERO
 ,

345  
DEV_MASK
 + 
ZERO
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

346  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

347  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

348  
ZERO
 + ZERO + ZERO + ZERO + ZERO + ZERO + ZERO + ZERO ,

349  
ZERO
 + ZERO + ZERO + ZERO + ZERO + ZERO + ZERO + ZERO ,

350  
DEV_MASK
 + 
PNJ_MASK
 + 
ZERO
 + 
ORI_MASK
 + 
BNG_MASK
 + ZERO + ZERO + ZERO ,

351  
DEV_MASK
 + 
ZERO
 + ZERO + ZERO + ZERO + ZERO + ZERO + ZERO ,

352  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

353  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

354  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

355  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

356  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

357  
DEV_MASK
 + 
ZERO
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + ZERO ,

358  
DEV_MASK
 + 
ZERO
 + 
GJR_MASK
 + ZERO + 
BNG_MASK
 + 
KND_MASK
 + ZERO + ZERO ,

359  
DEV_MASK
 + 
ZERO
 + 
GJR_MASK
 + ZERO + ZERO + ZERO + ZERO + ZERO ,

360  
DEV_MASK
 + 
ZERO
 + ZERO + ZERO + ZERO + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

361  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

362  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

363  
DEV_MASK
 + 
ZERO
 + 
GJR_MASK
 + ZERO + ZERO + ZERO + ZERO + ZERO ,

364  
DEV_MASK
 + 
ZERO
 + ZERO + ZERO + ZERO + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

365  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

366  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

367  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

368  
ZERO
 + ZERO + ZERO + ZERO + ZERO + ZERO + ZERO + ZERO ,

369  
ZERO
 + ZERO + ZERO + ZERO + ZERO + ZERO + ZERO + ZERO ,

370  
DEV_MASK
 + 
ZERO
 + 
GJR_MASK
 + ZERO + ZERO + ZERO + ZERO + ZERO ,

371  
DEV_MASK
 + 
ZERO
 + ZERO + ZERO + ZERO + ZERO + ZERO + ZERO ,

372  
DEV_MASK
 + 
ZERO
 + ZERO + ZERO + ZERO + ZERO + ZERO + ZERO ,

373  
DEV_MASK
 + 
ZERO
 + ZERO + ZERO + ZERO + ZERO + ZERO + ZERO ,

374  
DEV_MASK
 + 
ZERO
 + ZERO + ZERO + ZERO + ZERO + ZERO + ZERO ,

375  
ZERO
 + ZERO + ZERO + ZERO + ZERO + 
KND_MASK
 + ZERO + ZERO ,

376  
ZERO
 + ZERO + ZERO + 
ORI_MASK
 + ZERO + 
KND_MASK
 + ZERO + ZERO ,

377  
ZERO
 + ZERO + ZERO + 
ORI_MASK
 + 
BNG_MASK
 + ZERO + 
MLM_MASK
 + ZERO ,

378  
DEV_MASK
 + 
ZERO
 + ZERO + ZERO + ZERO + ZERO + ZERO + ZERO ,

379  
DEV_MASK
 + 
PNJ_MASK
 + 
ZERO
 + ZERO + ZERO + ZERO + ZERO + ZERO ,

380  
DEV_MASK
 + 
PNJ_MASK
 + 
ZERO
 + ZERO + ZERO + ZERO + ZERO + ZERO ,

381  
DEV_MASK
 + 
PNJ_MASK
 + 
ZERO
 + ZERO + ZERO + ZERO + ZERO + ZERO ,

382  
DEV_MASK
 + 
PNJ_MASK
 + 
ZERO
 + ZERO + 
BNG_MASK
 + ZERO + ZERO + ZERO ,

383  
DEV_MASK
 + 
ZERO
 + ZERO + 
ORI_MASK
 + 
BNG_MASK
 + ZERO + ZERO + ZERO ,

384  
DEV_MASK
 + 
PNJ_MASK
 + 
ZERO
 + ZERO + ZERO + ZERO + ZERO + ZERO ,

385  
DEV_MASK
 + 
ZERO
 + ZERO + 
ORI_MASK
 + 
BNG_MASK
 + ZERO + ZERO + ZERO ,

386  
DEV_MASK
 + 
ZERO
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + ZERO ,

387  
DEV_MASK
 + 
ZERO
 + ZERO + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + ZERO ,

388  
DEV_MASK
 + 
ZERO
 + ZERO + ZERO + 
BNG_MASK
 + ZERO + ZERO + ZERO ,

389  
DEV_MASK
 + 
ZERO
 + ZERO + ZERO + 
BNG_MASK
 + ZERO + ZERO + ZERO ,

390  
DEV_MASK
 + 
ZERO
 + ZERO + ZERO + ZERO + ZERO + ZERO + ZERO ,

391  
DEV_MASK
 + 
ZERO
 + ZERO + ZERO + ZERO + ZERO + ZERO + ZERO ,

392  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

393  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

394  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

395  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

396  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

397  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

398  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

399  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

400  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

401  
DEV_MASK
 + 
PNJ_MASK
 + 
GJR_MASK
 + 
ORI_MASK
 + 
BNG_MASK
 + 
KND_MASK
 + 
MLM_MASK
 + 
TML_MASK
 ,

402  
DEV_MASK
 + 
PNJ_MASK
 + 
ZERO
 + ZERO + ZERO + ZERO + ZERO + ZERO ,

408  
ZERO
 + ZERO + ZERO + ZERO + ZERO + ZERO + ZERO + ZERO

411 c⁄° 
uöt16_t
 
	g‰omUnicodeTabÀ
[128]={

541 c⁄° 
uöt16_t
 
	gtoUnicodeTabÀ
[256]={

800 c⁄° 
uöt16_t
 
	gvowñSignES≥cülCa£s
[][2]={

805 c⁄° 
uöt16_t
 
	gnukèS≥cülCa£s
[][2]={

825 
	#WRITE_TO_TARGET_FROM_U
(
¨gs
,
off£ts
,
sour˚
,
èrgë
,
èrgëLimô
,
èrgëByãUnô
,
îr
){ \

826 
öt32_t
 
off£t
 = (öt32_t)(
sour˚
 - 
¨gs
->source-1); \

828 if(
èrgë
 < 
èrgëLimô
){ \

829 if(
èrgëByãUnô
 <= 0xFF){ \

830 *(
èrgë
)++ = (
uöt8_t
)(
èrgëByãUnô
); \

831 if(
off£ts
){ \

832 *(
off£ts
++Ë
off£t
; \

835 i‡(
èrgëByãUnô
 > 0xFFFF) { \

836 *(
èrgë
)++ = (
uöt8_t
)(
èrgëByãUnô
>>16); \

837 i‡(
off£ts
) { \

838 --
off£t
; \

839 *(
off£ts
++Ë
off£t
; \

842 i‡(!(
èrgë
 < 
èrgëLimô
)) { \

843 
¨gs
->
c⁄vîãr
->
ch¨Eº‹Buf„r
[¨gs->c⁄vîãr->
ch¨Eº‹Buf„rLígth
++] = \

844 (
uöt8_t
)(
èrgëByãUnô
 >> 8); \

845 
¨gs
->
c⁄vîãr
->
ch¨Eº‹Buf„r
[¨gs->c⁄vîãr->
ch¨Eº‹Buf„rLígth
++] = \

846 (
uöt8_t
)
èrgëByãUnô
; \

847 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
; \

849 *(
èrgë
)++ = (
uöt8_t
)(
èrgëByãUnô
>>8); \

850 if(
off£ts
){ \

851 *(
off£ts
++Ë
off£t
; \

853 if(
èrgë
 < 
èrgëLimô
){ \

854 *(
èrgë
)++ = (
uöt8_t
Ë
èrgëByãUnô
; \

855 if(
off£ts
){ \

856 *(
off£ts
++Ë
off£t
 ; \

859 
¨gs
->
c⁄vîãr
->
ch¨Eº‹Buf„r
[¨gs->c⁄vîãr->
ch¨Eº‹Buf„rLígth
++] =\

860 (
uöt8_t
Ë(
èrgëByãUnô
); \

861 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
; \

866 i‡(
èrgëByãUnô
 & 0xFF0000) { \

867 
¨gs
->
c⁄vîãr
->
ch¨Eº‹Buf„r
[¨gs->c⁄vîãr->
ch¨Eº‹Buf„rLígth
++] = \

868 (
uöt8_t
Ë(
èrgëByãUnô
 >>16); \

870 if(
èrgëByãUnô
 & 0xFF00){ \

871 
¨gs
->
c⁄vîãr
->
ch¨Eº‹Buf„r
[¨gs->c⁄vîãr->
ch¨Eº‹Buf„rLígth
++] = \

872 (
uöt8_t
Ë(
èrgëByãUnô
 >>8); \

874 
¨gs
->
c⁄vîãr
->
ch¨Eº‹Buf„r
[¨gs->c⁄vîãr->
ch¨Eº‹Buf„rLígth
++] = \

875 (
uöt8_t
Ë(
èrgëByãUnô
); \

876 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
; \

878 }

	)

887 
	$UC⁄vîãr_‰omUnicode_ISCII_OFFSETS_LOGIC
(

888 
UC⁄vîãrFromUnicodeArgs
 * 
¨gs
, 
UEº‹Code
 * 
îr
) {

889 c⁄° 
UCh¨
 *
sour˚
 = 
¨gs
->source;

890 c⁄° 
UCh¨
 *
sour˚Limô
 = 
¨gs
->sourceLimit;

891 *
èrgë
 = (*Ë
¨gs
->target;

892 *
èrgëLimô
 = (*Ë
¨gs
->targetLimit;

893 
öt32_t
* 
off£ts
 = 
¨gs
->offsets;

894 
uöt32_t
 
èrgëByãUnô
 = 0x0000;

895 
UCh¨32
 
sour˚Ch¨
 = 0x0000;

896 
UCh¨32
 
ãmpC⁄ãxtFromUnicode
 = 0x0000;

897 
UC⁄vîãrD©aISCII
 *
c⁄vîãrD©a
;

898 
uöt16_t
 
√wDñè
=0;

899 
uöt16_t
 
ønge
 = 0;

900 
UBoﬁ
 
dñèCh™ged
 = 
FALSE
;

902 i‡((
¨gs
->
c⁄vîãr
 =
NULL
Ë|| (¨gs->
èrgëLimô
 <árgs->
èrgë
Ë|| (¨gs->
sour˚Limô
 <árgs->
sour˚
)) {

903 *
îr
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

907 
c⁄vîãrD©a
=(
UC⁄vîãrD©aISCII
*)
¨gs
->
c⁄vîãr
->
exåaInfo
;

908 
√wDñè
=
c⁄vîãrD©a
->
cuºítDñèFromUnicode
;

909 
ønge
 = (
uöt16_t
)(
√wDñè
/
DELTA
);

911 i‡((
sour˚Ch¨
 = 
¨gs
->
c⁄vîãr
->
‰omUCh¨32
)!=0) {

912 
gëTøû
;

916 
sour˚
 < 
sour˚Limô
) {

918 i‡(
¨gs
->
c⁄vîãr
->
‰omUnicodeSètus
 =
LF
) {

919 
èrgëByãUnô
 = 
ATR
<<8;

920 
èrgëByãUnô
 +(
uöt8_t
Ë
lookupInôülD©a
[
ønge
].
isciiL™g
;

921 
¨gs
->
c⁄vîãr
->
‰omUnicodeSètus
 = 0x0000;

923 
	`WRITE_TO_TARGET_FROM_U
(
¨gs
,
off£ts
,
sour˚
,
èrgë
,
èrgëLimô
,
èrgëByãUnô
,
îr
);

924 i‡(
	`U_FAILURE
(*
îr
)) {

929 
sour˚Ch¨
 = *
sour˚
++;

930 
ãmpC⁄ãxtFromUnicode
 = 
c⁄vîãrD©a
->
c⁄ãxtCh¨FromUnicode
;

932 
èrgëByãUnô
 = 
missögCh¨M¨kî
;

935 i‡(
sour˚Ch¨
 <
ASCII_END
) {

936 
¨gs
->
c⁄vîãr
->
‰omUnicodeSètus
 = 
sour˚Ch¨
;

937 
	`WRITE_TO_TARGET_FROM_U
(
¨gs
,
off£ts
,
sour˚
,
èrgë
,
èrgëLimô
,
sour˚Ch¨
,
îr
);

938 i‡(
	`U_FAILURE
(*
îr
)) {

943 
sour˚Ch¨
) {

944 
ZWNJ
:

946 i‡(
c⁄vîãrD©a
->
c⁄ãxtCh¨FromUnicode
) {

947 
c⁄vîãrD©a
->
c⁄ãxtCh¨FromUnicode
 = 0x00;

948 
èrgëByãUnô
 = 
ISCII_HALANT
;

951 
c⁄vîãrD©a
->
c⁄ãxtCh¨FromUnicode
 = 0x00;

955 
ZWJ
:

957 i‡(
c⁄vîãrD©a
->
c⁄ãxtCh¨FromUnicode
) {

958 
èrgëByãUnô
 = 
ISCII_NUKTA
;

960 
èrgëByãUnô
 =
ISCII_INV
;

962 
c⁄vîãrD©a
->
c⁄ãxtCh¨FromUnicode
 = 0x00;

966 i‡((
uöt16_t
)(
INDIC_BLOCK_END
-
sour˚Ch¨
Ë<
INDIC_RANGE
) {

971 i‡(
sour˚Ch¨
!
DANDA
 && sour˚Ch¨ !
DOUBLE_DANDA
) {

973 
ønge
 =(
uöt16_t
)((
sour˚Ch¨
-
INDIC_BLOCK_BEGIN
)/
DELTA
);

974 
√wDñè
 =(
uöt16_t
)(
ønge
*
DELTA
);

977 i‡(
√wDñè
!
c⁄vîãrD©a
->
cuºítDñèFromUnicode
 || c⁄vîãrD©a->
isFú°Buf„r
) {

978 
c⁄vîãrD©a
->
cuºítDñèFromUnicode
 = 
√wDñè
;

979 
c⁄vîãrD©a
->
cuºítMaskFromUnicode
 = 
lookupInôülD©a
[
ønge
].
maskEnum
;

980 
dñèCh™ged
 =
TRUE
;

981 
c⁄vîãrD©a
->
isFú°Buf„r
=
FALSE
;

984 i‡(
c⁄vîãrD©a
->
cuºítDñèFromUnicode
 =
PNJ_DELTA
) {

985 i‡(
sour˚Ch¨
 =
PNJ_TIPPI
) {

987 
sour˚Ch¨
 = 
PNJ_BINDI
;

988 } i‡(
sour˚Ch¨
 =
PNJ_ADHAK
) {

990 
c⁄vîãrD©a
->
c⁄ãxtCh¨FromUnicode
 = 
PNJ_ADHAK
;

996 
sour˚Ch¨
 -
c⁄vîãrD©a
->
cuºítDñèFromUnicode
;

1000 
èrgëByãUnô
=
‰omUnicodeTabÀ
[(
uöt8_t
)
sour˚Ch¨
];

1003 i‡((
vÆidôyTabÀ
[(
uöt8_t
)
sour˚Ch¨
] & 
c⁄vîãrD©a
->
cuºítMaskFromUnicode
)==0) {

1005 i‡(
c⁄vîãrD©a
->
cuºítDñèFromUnicode
!=(
TELUGU_DELTA
Ë|| 
sour˚Ch¨
!=
VOCALLIC_RR
) {

1006 
èrgëByãUnô
=
missögCh¨M¨kî
;

1010 i‡(
dñèCh™ged
) {

1014 
uöt32_t
 
ãmp
=0;

1015 
ãmp
 =(
uöt16_t
)(
ATR
<<8);

1016 
ãmp
 +(
uöt16_t
)((
uöt8_t
Ë
lookupInôülD©a
[
ønge
].
isciiL™g
);

1018 
dñèCh™ged
=
FALSE
;

1020 
	`WRITE_TO_TARGET_FROM_U
(
¨gs
,
off£ts
,
sour˚
,
èrgë
,
èrgëLimô
,
ãmp
,
îr
);

1021 i‡(
	`U_FAILURE
(*
îr
)) {

1026 i‡(
c⁄vîãrD©a
->
cuºítDñèFromUnicode
 =
PNJ_DELTA
 && (
sour˚Ch¨
 + PNJ_DELTAË=
PNJ_ADHAK
) {

1031 
c⁄vîãrD©a
->
c⁄ãxtCh¨FromUnicode
 = 0x00;

1034 i‡(
c⁄vîãrD©a
->
cuºítDñèFromUnicode
 =
PNJ_DELTA
 && 
ãmpC⁄ãxtFromUnicode
 =
PNJ_ADHAK
 && 
	`u£t_c⁄èös
(
PNJ_CONSONANT_SET
, (
sour˚Ch¨
 + PNJ_DELTA))) {

1037 
c⁄vîãrD©a
->
c⁄ãxtCh¨FromUnicode
 = 0x0000;

1038 
èrgëByãUnô
 =Å¨gëByãUnô << 16 | 
ISCII_HALANT
 << 8 |ÅargetByteUnit;

1040 
	`WRITE_TO_TARGET_FROM_U
(
¨gs
, 
off£ts
, 
sour˚
, 
èrgë
, 
èrgëLimô
, 
èrgëByãUnô
,
îr
);

1041 i‡(
	`U_FAILURE
(*
îr
)) {

1044 } i‡(
èrgëByãUnô
 !
missögCh¨M¨kî
) {

1045 i‡(
èrgëByãUnô
==
ISCII_HALANT
) {

1046 
c⁄vîãrD©a
->
c⁄ãxtCh¨FromUnicode
 = (
UCh¨
)
èrgëByãUnô
;

1049 
	`WRITE_TO_TARGET_FROM_U
(
¨gs
,
off£ts
,
sour˚
,
èrgë
,
èrgëLimô
,
èrgëByãUnô
,
îr
);

1050 i‡(
	`U_FAILURE
(*
îr
)) {

1056 i‡(
	`UTF_IS_SURROGATE
(
sour˚Ch¨
)) {

1057 i‡(
	`UTF_IS_SURROGATE_FIRST
(
sour˚Ch¨
)) {

1058 
gëTøû
:

1060 i‡(
sour˚
 < 
sour˚Limô
) {

1062 
UCh¨
 
åaû
(*
sour˚
);

1063 i‡(
	`UTF_IS_SECOND_SURROGATE
(
åaû
)) {

1064 
sour˚
++;

1065 
sour˚Ch¨
=
	`UTF16_GET_PAIR_VALUE
(sour˚Ch¨, 
åaû
);

1066 *
îr
 =
U_INVALID_CHAR_FOUND
;

1072 *
îr
=
U_ILLEGAL_CHAR_FOUND
;

1076 *
îr
 = 
U_ZERO_ERROR
;

1081 *
îr
=
U_ILLEGAL_CHAR_FOUND
;

1085 *
îr
 = 
U_INVALID_CHAR_FOUND
;

1088 
¨gs
->
c⁄vîãr
->
‰omUCh¨32
=
sour˚Ch¨
;

1094 
¨gs
->
sour˚
 = source;

1095 
¨gs
->
èrgë
 = (*)target;

1096 
	}
}

1098 c⁄° 
uöt16_t
 
	glookupTabÀ
[][2]={

1099 { 
ZERO
, ZERO },

1100 { 
ZERO
, ZERO },

1101 { 
DEVANAGARI
, 
DEV_MASK
 },

1102 { 
BENGALI
, 
BNG_MASK
 },

1103 { 
TAMIL
, 
TML_MASK
 },

1104 { 
TELUGU
, 
KND_MASK
 },

1105 { 
BENGALI
, 
BNG_MASK
 },

1106 { 
ORIYA
, 
ORI_MASK
 },

1107 { 
KANNADA
, 
KND_MASK
 },

1108 { 
MALAYALAM
, 
MLM_MASK
 },

1109 { 
GUJARATI
, 
GJR_MASK
 },

1110 { 
GURMUKHI
, 
PNJ_MASK
 }

1113 
	#WRITE_TO_TARGET_TO_U
(
¨gs
,
sour˚
,
èrgë
,
off£ts
,
off£t
,
èrgëUniCh¨
,
dñè
, 
îr
){\

1115 if(
èrgëUniCh¨
>
ASCII_END
 && \

1116 
èrgëUniCh¨
 !
ZWJ
 && \

1117 
èrgëUniCh¨
 !
ZWNJ
 && \

1118 
èrgëUniCh¨
 !
DANDA
 && \

1119 
èrgëUniCh¨
 !
DOUBLE_DANDA
){ \

1121 
èrgëUniCh¨
+=(
uöt16_t
)(
dñè
); \

1124 if(
èrgë
<
¨gs
->
èrgëLimô
){ \

1125 *(
èrgë
)++ = (
UCh¨
)
èrgëUniCh¨
; \

1126 if(
off£ts
){ \

1127 *(
off£ts
)++ = (
öt32_t
)(
off£t
); \

1130 
¨gs
->
c⁄vîãr
->
UCh¨Eº‹Buf„r
[¨gs->c⁄vîãr->
UCh¨Eº‹Buf„rLígth
++] = \

1131 (
UCh¨
)
èrgëUniCh¨
; \

1132 *
îr
 = 
U_BUFFER_OVERFLOW_ERROR
; \

1134 }

	)

1136 
	#GET_MAPPING
(
sour˚Ch¨
,
èrgëUniCh¨
,
d©a
){ \

1137 
èrgëUniCh¨
 = 
toUnicodeTabÀ
[(
sour˚Ch¨
)] ; \

1139 if(
sour˚Ch¨
> 
ASCII_END
 && \

1140 (
vÆidôyTabÀ
[(
uöt8_t
)
èrgëUniCh¨
] & 
d©a
->
cuºítMaskToUnicode
)==0){ \

1142 if(
d©a
->
cuºítDñèToUnicode
!=(
TELUGU_DELTA
) || \

1143 
èrgëUniCh¨
!=
VOCALLIC_RR
){ \

1144 
èrgëUniCh¨
=
missögCh¨M¨kî
; \

1147 }

	)

1170 
	$UC⁄vîãr_toUnicode_ISCII_OFFSETS_LOGIC
(
UC⁄vîãrToUnicodeArgs
 *
¨gs
, 
UEº‹Code
* 
îr
) {

1171 c⁄° *
sour˚
 = ( *Ë
¨gs
->source;

1172 
UCh¨
 *
èrgë
 = 
¨gs
->target;

1173 c⁄° *
sour˚Limô
 = 
¨gs
->sourceLimit;

1174 c⁄° 
UCh¨
* 
èrgëLimô
 = 
¨gs
->targetLimit;

1175 
uöt32_t
 
èrgëUniCh¨
 = 0x0000;

1176 
uöt8_t
 
sour˚Ch¨
 = 0x0000;

1177 
UC⁄vîãrD©aISCII
* 
d©a
;

1178 
UCh¨32
* 
toUnicodeSètus
=
NULL
;

1179 
UCh¨32
 
ãmpT¨gëUniCh¨
 = 0x0000;

1180 
UCh¨
* 
c⁄ãxtCh¨ToUnicode

NULL
;

1181 
UBoﬁ
 
found
;

1182 
i
;

1183 
off£t
 = 0;

1185 i‡((
¨gs
->
c⁄vîãr
 =
NULL
Ë|| (
èrgë
 <árgs->èrgëË|| (
sour˚
 <árgs->source)) {

1186 *
îr
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1190 
d©a
 = (
UC⁄vîãrD©aISCII
*)(
¨gs
->
c⁄vîãr
->
exåaInfo
);

1191 
c⁄ãxtCh¨ToUnicode
 = &
d©a
->contextCharToUnicode;

1192 
toUnicodeSètus
 = (
UCh¨32
*)&
¨gs
->
c⁄vîãr
->toUnicodeStatus;

1194 
	`U_SUCCESS
(*
îr
Ë&& 
sour˚
<
sour˚Limô
) {

1196 
èrgëUniCh¨
 = 
missögCh¨M¨kî
;

1198 i‡(
èrgë
 < 
èrgëLimô
) {

1199 
sour˚Ch¨
 = ()*(
sour˚
)++;

1202 i‡(*
c⁄ãxtCh¨ToUnicode
==
ATR
) {

1209 i‡((
uöt8_t
)(
PNJ
-
sour˚Ch¨
)<=PNJ-
DEV
) {

1210 
d©a
->
cuºítDñèToUnicode
 = (
uöt16_t
)(
lookupTabÀ
[
sour˚Ch¨
 & 0x0F][0] * 
DELTA
);

1211 
d©a
->
cuºítMaskToUnicode
 = (
MaskEnum
)
lookupTabÀ
[
sour˚Ch¨
 & 0x0F][1];

1212 } i‡(
sour˚Ch¨
==
DEF
) {

1214 
d©a
->
cuºítDñèToUnicode
 = d©a->
defDñèToUnicode
;

1215 
d©a
->
cuºítMaskToUnicode
 = d©a->
defMaskToUnicode
;

1217 i‡((
sour˚Ch¨
 >= 0x21 && sourceChar <= 0x3F)) {

1220 *
îr
 =
U_ILLEGAL_CHAR_FOUND
;

1222 *
c⁄ãxtCh¨ToUnicode
=
NO_CHAR_MARKER
;

1223 
CALLBACK
;

1228 *
c⁄ãxtCh¨ToUnicode
=
NO_CHAR_MARKER
;

1232 } i‡(*
c⁄ãxtCh¨ToUnicode
==
EXT
) {

1234 i‡((
uöt8_t
Ë(
EXT_RANGE_END
 - 
sour˚Ch¨
Ë<(EXT_RANGE_END - 
EXT_RANGE_BEGIN
)) {

1236 i‡(
sour˚Ch¨
==0xBF || sourceChar == 0xB8) {

1237 
èrgëUniCh¨
 = (
sour˚Ch¨
==0xBFË? 
DEV_ABBR_SIGN
 : 
DEV_ANUDATTA
;

1240 i‡(
vÆidôyTabÀ
[(
uöt8_t
)
èrgëUniCh¨
] & 
d©a
->
cuºítMaskToUnicode
) {

1241 *
c⁄ãxtCh¨ToUnicode

NO_CHAR_MARKER
;

1244 i‡(
d©a
->
¥evToUnicodeSètus
) {

1245 
	`WRITE_TO_TARGET_TO_U
(
¨gs
,
sour˚
,
èrgë
,¨gs->
off£ts
,(sour˚-¨gs->sour˚ -1),
d©a
->
¥evToUnicodeSètus
,0,
îr
);

1246 
d©a
->
¥evToUnicodeSètus
 = 0x0000;

1249 
	`WRITE_TO_TARGET_TO_U
(
¨gs
,
sour˚
,
èrgë
,¨gs->
off£ts
,(sour˚-¨gs->sour˚ -2),
èrgëUniCh¨
,
d©a
->
cuºítDñèToUnicode
,
îr
);

1255 
èrgëUniCh¨
 = 
missögCh¨M¨kî
;

1256 *
îr

U_INVALID_CHAR_FOUND
;

1259 *
c⁄ãxtCh¨ToUnicode

NO_CHAR_MARKER
;

1260 *
îr
 = 
U_ILLEGAL_CHAR_FOUND
;

1262 
CALLBACK
;

1263 } i‡(*
c⁄ãxtCh¨ToUnicode
==
ISCII_INV
) {

1264 i‡(
sour˚Ch¨
==
ISCII_HALANT
) {

1265 
èrgëUniCh¨
 = 0x0020;

1267 
èrgëUniCh¨
 = 
ZWJ
;

1271 i‡(
d©a
->
¥evToUnicodeSètus
) {

1272 
	`WRITE_TO_TARGET_TO_U
(
¨gs
,
sour˚
,
èrgë
,¨gs->
off£ts
,(sour˚-¨gs->sour˚ -1),
d©a
->
¥evToUnicodeSètus
,0,
îr
);

1273 
d©a
->
¥evToUnicodeSètus
 = 0x0000;

1276 
	`WRITE_TO_TARGET_TO_U
(
¨gs
,
sour˚
,
èrgë
,¨gs->
off£ts
,(sour˚-¨gs->sour˚ -2),
èrgëUniCh¨
,
d©a
->
cuºítDñèToUnicode
,
îr
);

1278 *
c⁄ãxtCh¨ToUnicode
=
NO_CHAR_MARKER
;

1282 
sour˚Ch¨
) {

1283 
ISCII_INV
:

1284 
EXT
:

1285 
ATR
:

1286 *
c⁄ãxtCh¨ToUnicode
 = (
UCh¨
)
sour˚Ch¨
;

1288 i‡(*
toUnicodeSètus
 !
missögCh¨M¨kî
) {

1290 i‡(
d©a
->
¥evToUnicodeSètus
) {

1291 
	`WRITE_TO_TARGET_TO_U
(
¨gs
,
sour˚
,
èrgë
,¨gs->
off£ts
,(sour˚-¨gs->sour˚ -1),
d©a
->
¥evToUnicodeSètus
,0,
îr
);

1292 
d©a
->
¥evToUnicodeSètus
 = 0x0000;

1294 
	`WRITE_TO_TARGET_TO_U
(
¨gs
,
sour˚
,
èrgë
,¨gs->
off£ts
,(sour˚-¨gs->sour˚ -2),*
toUnicodeSètus
,
d©a
->
cuºítDñèToUnicode
,
îr
);

1295 *
toUnicodeSètus
 = 
missögCh¨M¨kî
;

1298 
ISCII_DANDA
:

1300 i‡(*
c⁄ãxtCh¨ToUnicode
=
ISCII_DANDA
) {

1301 
èrgëUniCh¨
 = 
DOUBLE_DANDA
;

1303 *
c⁄ãxtCh¨ToUnicode
 = 
NO_CHAR_MARKER
;

1304 *
toUnicodeSètus
 = 
missögCh¨M¨kî
;

1306 
	`GET_MAPPING
(
sour˚Ch¨
,
èrgëUniCh¨
,
d©a
);

1307 *
c⁄ãxtCh¨ToUnicode
 = 
sour˚Ch¨
;

1310 
ISCII_HALANT
:

1312 i‡(*
c⁄ãxtCh¨ToUnicode
 =
ISCII_HALANT
) {

1313 
èrgëUniCh¨
 = 
ZWNJ
;

1315 *
c⁄ãxtCh¨ToUnicode
 = 
NO_CHAR_MARKER
;

1317 
	`GET_MAPPING
(
sour˚Ch¨
,
èrgëUniCh¨
,
d©a
);

1318 *
c⁄ãxtCh¨ToUnicode
 = 
sour˚Ch¨
;

1324 
d©a
->
ª£tToDeÁu…ToUnicode
 = 
TRUE
;

1325 
	`GET_MAPPING
(
sour˚Ch¨
,
èrgëUniCh¨
,
d©a
)

1327 *
c⁄ãxtCh¨ToUnicode
 = 
sour˚Ch¨
;

1330 
ISCII_VOWEL_SIGN_E
:

1331 
i
=1;

1332 
found
=
FALSE
;

1333 ; 
i
<
vowñSignES≥cülCa£s
[0][0]; i++) {

1334 i‡(
vowñSignES≥cülCa£s
[
i
][0]==(
uöt8_t
)*
c⁄ãxtCh¨ToUnicode
) {

1335 
èrgëUniCh¨
=
vowñSignES≥cülCa£s
[
i
][1];

1336 
found
=
TRUE
;

1340 i‡(
found
) {

1342 i‡(
vÆidôyTabÀ
[(
uöt8_t
)
èrgëUniCh¨
] & 
d©a
->
cuºítMaskToUnicode
) {

1344 *
c⁄ãxtCh¨ToUnicode

NO_CHAR_MARKER
;

1345 *
toUnicodeSètus
 = 
missögCh¨M¨kî
;

1349 
	`GET_MAPPING
(
sour˚Ch¨
,
èrgëUniCh¨
,
d©a
);

1350 *
c⁄ãxtCh¨ToUnicode
 = 
sour˚Ch¨
;

1353 
ISCII_NUKTA
:

1355 i‡(*
c⁄ãxtCh¨ToUnicode
 =
ISCII_HALANT
) {

1356 
èrgëUniCh¨
 = 
ZWJ
;

1358 *
c⁄ãxtCh¨ToUnicode
 = 
NO_CHAR_MARKER
;

1360 } i‡(
d©a
->
cuºítDñèToUnicode
 =
PNJ_DELTA
 && d©a->
c⁄ãxtCh¨ToUnicode
 == 0xc0) {

1362 i‡(
d©a
->
¥evToUnicodeSètus
) {

1363 
	`WRITE_TO_TARGET_TO_U
(
¨gs
,
sour˚
,
èrgë
,¨gs->
off£ts
,(sour˚-¨gs->sour˚ -1),
d©a
->
¥evToUnicodeSètus
,0,
îr
);

1364 
d©a
->
¥evToUnicodeSètus
 = 0x0000;

1369 
èrgëUniCh¨
 = 
PNJ_RRA
;

1370 
	`WRITE_TO_TARGET_TO_U
(
¨gs
, 
sour˚
, 
èrgë
,árgs->
off£ts
, (sour˚-¨gs->sour˚)-2, 
èrgëUniCh¨
, 0, 
îr
);

1371 i‡(
	`U_SUCCESS
(*
îr
)) {

1372 
èrgëUniCh¨
 = 
PNJ_SIGN_VIRAMA
;

1373 
	`WRITE_TO_TARGET_TO_U
(
¨gs
, 
sour˚
, 
èrgë
,árgs->
off£ts
, (sour˚-¨gs->sour˚)-2, 
èrgëUniCh¨
, 0, 
îr
);

1374 i‡(
	`U_SUCCESS
(*
îr
)) {

1375 
èrgëUniCh¨
 = 
PNJ_HA
;

1376 
	`WRITE_TO_TARGET_TO_U
(
¨gs
, 
sour˚
, 
èrgë
,árgs->
off£ts
, (sour˚-¨gs->sour˚)-2, 
èrgëUniCh¨
, 0, 
îr
);

1378 
¨gs
->
c⁄vîãr
->
UCh¨Eº‹Buf„r
[¨gs->c⁄vîãr->
UCh¨Eº‹Buf„rLígth
++]
PNJ_HA
;

1381 
¨gs
->
c⁄vîãr
->
UCh¨Eº‹Buf„r
[¨gs->c⁄vîãr->
UCh¨Eº‹Buf„rLígth
++]
PNJ_SIGN_VIRAMA
;

1382 
¨gs
->
c⁄vîãr
->
UCh¨Eº‹Buf„r
[¨gs->c⁄vîãr->
UCh¨Eº‹Buf„rLígth
++]
PNJ_HA
;

1384 *
toUnicodeSètus
 = 
missögCh¨M¨kî
;

1385 
d©a
->
c⁄ãxtCh¨ToUnicode
 = 
NO_CHAR_MARKER
;

1389 
i
=1;

1390 
found
 =
FALSE
;

1391 ; 
i
<
nukèS≥cülCa£s
[0][0]; i++) {

1392 i‡(
nukèS≥cülCa£s
[
i
][0]==(
uöt8_t
)

1393 *
c⁄ãxtCh¨ToUnicode
) {

1394 
èrgëUniCh¨
=
nukèS≥cülCa£s
[
i
][1];

1395 
found
 =
TRUE
;

1399 i‡(
found
) {

1401 i‡(
vÆidôyTabÀ
[(
uöt8_t
)
èrgëUniCh¨
] & 
d©a
->
cuºítMaskToUnicode
) {

1403 *
c⁄ãxtCh¨ToUnicode

NO_CHAR_MARKER
;

1404 *
toUnicodeSètus
 = 
missögCh¨M¨kî
;

1405 i‡(
d©a
->
cuºítDñèToUnicode
 =
PNJ_DELTA
) {

1407 i‡(
d©a
->
¥evToUnicodeSètus
) {

1408 
	`WRITE_TO_TARGET_TO_U
(
¨gs
,
sour˚
,
èrgë
,¨gs->
off£ts
,(sour˚-¨gs->sour˚ -1),
d©a
->
¥evToUnicodeSètus
,0,
îr
);

1409 
d©a
->
¥evToUnicodeSètus
 = 0x0000;

1411 
	`WRITE_TO_TARGET_TO_U
(
¨gs
,
sour˚
,
èrgë
,¨gs->
off£ts
,(sour˚-¨gs->sour˚ -2),
èrgëUniCh¨
,
d©a
->
cuºítDñèToUnicode
,
îr
);

1420 :
	`GET_MAPPING
(
sour˚Ch¨
,
èrgëUniCh¨
,
d©a
)

1422 *
c⁄ãxtCh¨ToUnicode
 = 
sour˚Ch¨
;

1426 i‡(*
toUnicodeSètus
 !
missögCh¨M¨kî
) {

1428 i‡(
d©a
->
cuºítDñèToUnicode
 =
PNJ_DELTA
 && d©a->
¥evToUnicodeSètus
 !0 && 
	`u£t_c⁄èös
(
PNJ_CONSONANT_SET
, data->prevToUnicodeStatus) &&

1429 (*
toUnicodeSètus
 + 
PNJ_DELTA
Ë=
PNJ_SIGN_VIRAMA
 && (
èrgëUniCh¨
 + PNJ_DELTAË=
d©a
->
¥evToUnicodeSètus
) {

1431 
off£t
 = ()(
sour˚
-
¨gs
->source - 3);

1432 
ãmpT¨gëUniCh¨
 = 
PNJ_ADHAK
;

1433 
	`WRITE_TO_TARGET_TO_U
(
¨gs
,
sour˚
,
èrgë
,¨gs->
off£ts
,
off£t
,
ãmpT¨gëUniCh¨
,0,
îr
);

1434 
	`WRITE_TO_TARGET_TO_U
(
¨gs
,
sour˚
,
èrgë
,¨gs->
off£ts
,
off£t
,
d©a
->
¥evToUnicodeSètus
,0,
îr
);

1435 
d©a
->
¥evToUnicodeSètus
 = 0x0000;

1436 *
toUnicodeSètus
 = 
missögCh¨M¨kî
;

1440 i‡(
d©a
->
¥evToUnicodeSètus
) {

1441 
	`WRITE_TO_TARGET_TO_U
(
¨gs
,
sour˚
,
èrgë
,¨gs->
off£ts
,(sour˚-¨gs->sour˚ -1),
d©a
->
¥evToUnicodeSètus
,0,
îr
);

1442 
d©a
->
¥evToUnicodeSètus
 = 0x0000;

1447 i‡(
d©a
->
cuºítDñèToUnicode
 =
PNJ_DELTA
 && (
èrgëUniCh¨
 + PNJ_DELTAË=
PNJ_BINDI
 && 
	`u£t_c⁄èös
(
PNJ_BINDI_TIPPI_SET
, (*
toUnicodeSètus
 + PNJ_DELTA))) {

1448 
èrgëUniCh¨
 = 
PNJ_TIPPI
 - 
PNJ_DELTA
;

1449 
	`WRITE_TO_TARGET_TO_U
(
¨gs
,
sour˚
,
èrgë
,¨gs->
off£ts
,(sour˚-¨gs->sour˚ -2),*
toUnicodeSètus
,
PNJ_DELTA
,
îr
);

1450 } i‡(
d©a
->
cuºítDñèToUnicode
 =
PNJ_DELTA
 && (
èrgëUniCh¨
 + PNJ_DELTAË=
PNJ_SIGN_VIRAMA
 && 
	`u£t_c⁄èös
(
PNJ_CONSONANT_SET
, (*
toUnicodeSètus
 + PNJ_DELTA))) {

1452 
d©a
->
¥evToUnicodeSètus
 = *
toUnicodeSètus
 + 
PNJ_DELTA
;

1455 
	`WRITE_TO_TARGET_TO_U
(
¨gs
,
sour˚
,
èrgë
,¨gs->
off£ts
,(sour˚-¨gs->sour˚ -2),*
toUnicodeSètus
,
d©a
->
cuºítDñèToUnicode
,
îr
);

1458 *
toUnicodeSètus
 = 
missögCh¨M¨kî
;

1461 i‡(
èrgëUniCh¨
 !
missögCh¨M¨kî
) {

1463 *
toUnicodeSètus
 = (
UCh¨
Ë
èrgëUniCh¨
;

1464 i‡(
d©a
->
ª£tToDeÁu…ToUnicode
==
TRUE
) {

1465 
d©a
->
cuºítDñèToUnicode
 = d©a->
defDñèToUnicode
;

1466 
d©a
->
cuºítMaskToUnicode
 = d©a->
defMaskToUnicode
;

1467 
d©a
->
ª£tToDeÁu…ToUnicode
=
FALSE
;

1474 *
îr
 = 
U_INVALID_CHAR_FOUND
;

1475 
CALLBACK
:

1476 
¨gs
->
c⁄vîãr
->
toUByãs
[0] = (
uöt8_t
Ë
sour˚Ch¨
;

1477 
¨gs
->
c⁄vîãr
->
toULígth
 = 1;

1482 *
îr
 =
U_BUFFER_OVERFLOW_ERROR
;

1487 i‡(
	`U_SUCCESS
(*
îr
Ë&& 
¨gs
->
Êush
 && 
sour˚
 =
sour˚Limô
) {

1489 
UC⁄vîãr
 *
˙v
 = 
¨gs
->
c⁄vîãr
;

1491 i‡(*
c⁄ãxtCh¨ToUnicode
==
ATR
 || *c⁄ãxtCh¨ToUnicode==
EXT
 || *c⁄ãxtCh¨ToUnicode==
ISCII_INV
) {

1493 
˙v
->
toUByãs
[0] = (
uöt8_t
)*
c⁄ãxtCh¨ToUnicode
;

1494 
˙v
->
toULígth
 = 1;

1497 *
c⁄ãxtCh¨ToUnicode
 = 
NO_CHAR_MARKER
;

1499 
˙v
->
toULígth
 = 0;

1502 i‡(*
toUnicodeSètus
 !
missögCh¨M¨kî
) {

1504 
	`WRITE_TO_TARGET_TO_U
(
¨gs
,
sour˚
,
èrgë
,¨gs->
off£ts
,(sour˚ -árgs->sour˚ -1),*
toUnicodeSètus
,
d©a
->
cuºítDñèToUnicode
,
îr
);

1505 *
toUnicodeSètus
 = 
missögCh¨M¨kî
;

1509 
¨gs
->
èrgë
 =Åarget;

1510 
¨gs
->
sour˚
 = source;

1511 
	}
}

1514 
	s˛⁄eISCIISåu˘
 {

1515 
UC⁄vîãr
 
	m˙v
;

1516 
UC⁄vîãrD©aISCII
 
	mmyd©a
;

1519 
UC⁄vîãr
 *

1520 
	$_ISCII_Sa„Cl⁄e
(c⁄° 
UC⁄vîãr
 *
˙v
,

1521 *
°ackBuf„r
,

1522 
öt32_t
 *
pBuf„rSize
,

1523 
UEº‹Code
 *
°©us
)

1525 
˛⁄eISCIISåu˘
 * 
loˇlCl⁄e
;

1526 
öt32_t
 
buf„rSizeNìded
 = (
˛⁄eISCIISåu˘
);

1528 i‡(
	`U_FAILURE
(*
°©us
)) {

1532 i‡(*
pBuf„rSize
 == 0) {

1533 *
pBuf„rSize
 = 
buf„rSizeNìded
;

1537 
loˇlCl⁄e
 = (
˛⁄eISCIISåu˘
 *)
°ackBuf„r
;

1540 
	`u¥v_mem˝y
(&
loˇlCl⁄e
->
myd©a
, 
˙v
->
exåaInfo
, (
UC⁄vîãrD©aISCII
));

1541 
loˇlCl⁄e
->
˙v
.
exåaInfo
 = &loˇlCl⁄e->
myd©a
;

1542 
loˇlCl⁄e
->
˙v
.
isExåaLoˇl
 = 
TRUE
;

1544  &
loˇlCl⁄e
->
˙v
;

1545 
	}
}

1548 
	$_ISCIIGëUnicodeSë
(c⁄° 
UC⁄vîãr
 *
˙v
,

1549 c⁄° 
USëAddî
 *
ß
,

1550 
UC⁄vîãrUnicodeSë
 
which
,

1551 
UEº‹Code
 *
pEº‹Code
)

1553 
öt32_t
 
idx
, 
s¸ùt
;

1554 
uöt8_t
 
mask
;

1558 
ß
->
	`addR™ge
(ß->
£t
, 0, 
ASCII_END
);

1559 
s¸ùt
 = 
DEVANAGARI
; s¸ùà<
MALAYALAM
; script++) {

1560 
mask
 = (
uöt8_t
)(
lookupInôülD©a
[
s¸ùt
].
maskEnum
);

1561 
idx
 = 0; idx < 
DELTA
; idx++) {

1563 i‡((
vÆidôyTabÀ
[
idx
] & 
mask
Ë|| (
s¸ùt
==
TELUGU
 && idx==0x31)) {

1564 
ß
->
	`add
(ß->
£t
, 
idx
 + (
s¸ùt
 * 
DELTA
Ë+ 
INDIC_BLOCK_BEGIN
);

1568 
ß
->
	`add
(ß->
£t
, 
DANDA
);

1569 
ß
->
	`add
(ß->
£t
, 
DOUBLE_DANDA
);

1570 
ß
->
	`add
(ß->
£t
, 
ZWNJ
);

1571 
ß
->
	`add
(ß->
£t
, 
ZWJ
);

1572 
	}
}

1574 c⁄° 
UC⁄vîãrIm∂
 
	g_ISCIIIm∂
={

1576 
UCNV_ISCII
,

1578 
NULL
,

1579 
NULL
,

1581 
_ISCIIO≥n
,

1582 
_ISCIIClo£
,

1583 
_ISCIIRe£t
,

1585 
UC⁄vîãr_toUnicode_ISCII_OFFSETS_LOGIC
,

1586 
UC⁄vîãr_toUnicode_ISCII_OFFSETS_LOGIC
,

1587 
UC⁄vîãr_‰omUnicode_ISCII_OFFSETS_LOGIC
,

1588 
UC⁄vîãr_‰omUnicode_ISCII_OFFSETS_LOGIC
,

1589 
NULL
,

1591 
NULL
,

1592 
_ISCIIgëName
,

1593 
NULL
,

1594 
_ISCII_Sa„Cl⁄e
,

1595 
_ISCIIGëUnicodeSë


1598 c⁄° 
UC⁄vîãrSèticD©a
 
	g_ISCIISèticD©a
={

1599 (
UC⁄vîãrSèticD©a
),

1602 
UCNV_IBM
,

1603 
UCNV_ISCII
,

1608 
FALSE
,

1609 
FALSE
,

1616 c⁄° 
UC⁄vîãrSh¨edD©a
 
	g_ISCIID©a
={

1617 (
UC⁄vîãrSh¨edD©a
),

1618 ~((
uöt32_t
) 0),

1619 
NULL
,

1620 
NULL
,

1621 &
_ISCIISèticD©a
,

1622 
FALSE
,

1623 &
_ISCIIIm∂
,

	@ucnvlat1.c

15 
	~"unicode/uty≥s.h
"

17 #i‡!
UCONFIG_NO_CONVERSION


19 
	~"unicode/u˙v.h
"

20 
	~"unicode/u£t.h
"

21 
	~"u˙v_bld.h
"

22 
	~"u˙v_˙v.h
"

25 
	#LATIN1_UNROLL_FROM_UNICODE
 1

	)

31 
	$_L©ö1ToUnicodeWôhOff£ts
(
UC⁄vîãrToUnicodeArgs
 *
pArgs
,

32 
UEº‹Code
 *
pEº‹Code
) {

33 c⁄° 
uöt8_t
 *
sour˚
;

34 
UCh¨
 *
èrgë
;

35 
öt32_t
 
èrgëC≠acôy
, 
Àngth
;

36 
öt32_t
 *
off£ts
;

38 
öt32_t
 
sour˚Index
;

41 
sour˚
=(c⁄° 
uöt8_t
 *)
pArgs
->source;

42 
èrgë
=
pArgs
->target;

43 
èrgëC≠acôy
=(
öt32_t
)(
pArgs
->
èrgëLimô
-pArgs->
èrgë
);

44 
off£ts
=
pArgs
->offsets;

46 
sour˚Index
=0;

52 
Àngth
=(
öt32_t
)((c⁄° 
uöt8_t
 *)
pArgs
->
sour˚Limô
-
sour˚
);

53 if(
Àngth
<=
èrgëC≠acôy
) {

54 
èrgëC≠acôy
=
Àngth
;

57 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

58 
Àngth
=
èrgëC≠acôy
;

61 if(
èrgëC≠acôy
>=8) {

63 
öt32_t
 
cou¡
, 
lo›s
;

65 
lo›s
=
cou¡
=
èrgëC≠acôy
>>3;

66 
Àngth
=
èrgëC≠acôy
&=0x7;

68 
èrgë
[0]=
sour˚
[0];

69 
èrgë
[1]=
sour˚
[1];

70 
èrgë
[2]=
sour˚
[2];

71 
èrgë
[3]=
sour˚
[3];

72 
èrgë
[4]=
sour˚
[4];

73 
èrgë
[5]=
sour˚
[5];

74 
èrgë
[6]=
sour˚
[6];

75 
èrgë
[7]=
sour˚
[7];

76 
èrgë
+=8;

77 
sour˚
+=8;

78 } --
cou¡
>0);

80 if(
off£ts
!=
NULL
) {

82 
off£ts
[0]=
sour˚Index
++;

83 
off£ts
[1]=
sour˚Index
++;

84 
off£ts
[2]=
sour˚Index
++;

85 
off£ts
[3]=
sour˚Index
++;

86 
off£ts
[4]=
sour˚Index
++;

87 
off£ts
[5]=
sour˚Index
++;

88 
off£ts
[6]=
sour˚Index
++;

89 
off£ts
[7]=
sour˚Index
++;

90 
off£ts
+=8;

91 } --
lo›s
>0);

96 
èrgëC≠acôy
>0) {

97 *
èrgë
++=*
sour˚
++;

98 --
èrgëC≠acôy
;

102 
pArgs
->
sour˚
=(const *)source;

103 
pArgs
->
èrgë
=target;

106 if(
off£ts
!=
NULL
) {

107 
Àngth
>0) {

108 *
off£ts
++=
sour˚Index
++;

109 --
Àngth
;

111 
pArgs
->
off£ts
=offsets;

113 
	}
}

116 
UCh¨32


117 
	$_L©ö1GëNextUCh¨
(
UC⁄vîãrToUnicodeArgs
 *
pArgs
,

118 
UEº‹Code
 *
pEº‹Code
) {

119 c⁄° 
uöt8_t
 *
sour˚
=(c⁄° uöt8_à*)
pArgs
->source;

120 if(
sour˚
<(c⁄° 
uöt8_t
 *)
pArgs
->
sour˚Limô
) {

121 
pArgs
->
sour˚
=(const *)(source+1);

122  *
sour˚
;

126 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

128 
	}
}

132 
	$_L©ö1FromUnicodeWôhOff£ts
(
UC⁄vîãrFromUnicodeArgs
 *
pArgs
,

133 
UEº‹Code
 *
pEº‹Code
) {

134 
UC⁄vîãr
 *
˙v
;

135 c⁄° 
UCh¨
 *
sour˚
, *
sour˚Limô
;

136 
uöt8_t
 *
èrgë
, *
ﬁdT¨gë
;

137 
öt32_t
 
èrgëC≠acôy
, 
Àngth
;

138 
öt32_t
 *
off£ts
;

140 
UCh¨32
 
˝
;

141 
UCh¨
 
c
, 
max
;

143 
öt32_t
 
sour˚Index
;

146 
˙v
=
pArgs
->
c⁄vîãr
;

147 
sour˚
=
pArgs
->source;

148 
sour˚Limô
=
pArgs
->sourceLimit;

149 
èrgë
=
ﬁdT¨gë
=(
uöt8_t
 *)
pArgs
->target;

150 
èrgëC≠acôy
=(
öt32_t
)(
pArgs
->
èrgëLimô
-pArgs->
èrgë
);

151 
off£ts
=
pArgs
->offsets;

153 if(
˙v
->
sh¨edD©a
==&
_L©ö1D©a
) {

154 
max
=0xff;

156 
max
=0x7f;

160 
˝
=
˙v
->
‰omUCh¨32
;

163 
sour˚Index

˝
==0 ? 0 : -1;

169 
Àngth
=(
öt32_t
)(
sour˚Limô
-
sour˚
);

170 if(
Àngth
<
èrgëC≠acôy
) {

171 
èrgëC≠acôy
=
Àngth
;

175 if(
˝
!=0 && 
èrgëC≠acôy
>0) {

176 
gëTøû
;

179 #i‡
LATIN1_UNROLL_FROM_UNICODE


181 if(
èrgëC≠acôy
>=16) {

182 
öt32_t
 
cou¡
, 
lo›s
;

183 
UCh¨
 
u
, 
‹edCh¨s
;

185 
lo›s
=
cou¡
=
èrgëC≠acôy
>>4;

187 
‹edCh¨s
=
u
=*
sour˚
++;

188 *
èrgë
++=(
uöt8_t
)
u
;

189 
‹edCh¨s
|=
u
=*
sour˚
++;

190 *
èrgë
++=(
uöt8_t
)
u
;

191 
‹edCh¨s
|=
u
=*
sour˚
++;

192 *
èrgë
++=(
uöt8_t
)
u
;

193 
‹edCh¨s
|=
u
=*
sour˚
++;

194 *
èrgë
++=(
uöt8_t
)
u
;

195 
‹edCh¨s
|=
u
=*
sour˚
++;

196 *
èrgë
++=(
uöt8_t
)
u
;

197 
‹edCh¨s
|=
u
=*
sour˚
++;

198 *
èrgë
++=(
uöt8_t
)
u
;

199 
‹edCh¨s
|=
u
=*
sour˚
++;

200 *
èrgë
++=(
uöt8_t
)
u
;

201 
‹edCh¨s
|=
u
=*
sour˚
++;

202 *
èrgë
++=(
uöt8_t
)
u
;

203 
‹edCh¨s
|=
u
=*
sour˚
++;

204 *
èrgë
++=(
uöt8_t
)
u
;

205 
‹edCh¨s
|=
u
=*
sour˚
++;

206 *
èrgë
++=(
uöt8_t
)
u
;

207 
‹edCh¨s
|=
u
=*
sour˚
++;

208 *
èrgë
++=(
uöt8_t
)
u
;

209 
‹edCh¨s
|=
u
=*
sour˚
++;

210 *
èrgë
++=(
uöt8_t
)
u
;

211 
‹edCh¨s
|=
u
=*
sour˚
++;

212 *
èrgë
++=(
uöt8_t
)
u
;

213 
‹edCh¨s
|=
u
=*
sour˚
++;

214 *
èrgë
++=(
uöt8_t
)
u
;

215 
‹edCh¨s
|=
u
=*
sour˚
++;

216 *
èrgë
++=(
uöt8_t
)
u
;

217 
‹edCh¨s
|=
u
=*
sour˚
++;

218 *
èrgë
++=(
uöt8_t
)
u
;

221 if(
‹edCh¨s
>
max
) {

223 
sour˚
-=16;

224 
èrgë
-=16;

227 } --
cou¡
>0);

228 
cou¡
=
lo›s
-count;

229 
èrgëC≠acôy
-=16*
cou¡
;

231 if(
off£ts
!=
NULL
) {

232 
ﬁdT¨gë
+=16*
cou¡
;

233 
cou¡
>0) {

234 *
off£ts
++=
sour˚Index
++;

235 *
off£ts
++=
sour˚Index
++;

236 *
off£ts
++=
sour˚Index
++;

237 *
off£ts
++=
sour˚Index
++;

238 *
off£ts
++=
sour˚Index
++;

239 *
off£ts
++=
sour˚Index
++;

240 *
off£ts
++=
sour˚Index
++;

241 *
off£ts
++=
sour˚Index
++;

242 *
off£ts
++=
sour˚Index
++;

243 *
off£ts
++=
sour˚Index
++;

244 *
off£ts
++=
sour˚Index
++;

245 *
off£ts
++=
sour˚Index
++;

246 *
off£ts
++=
sour˚Index
++;

247 *
off£ts
++=
sour˚Index
++;

248 *
off£ts
++=
sour˚Index
++;

249 *
off£ts
++=
sour˚Index
++;

250 --
cou¡
;

257 
c
=0;

258 
èrgëC≠acôy
>0 && (
c
=*
sour˚
++)<=
max
) {

260 *
èrgë
++=(
uöt8_t
)
c
;

261 --
èrgëC≠acôy
;

264 if(
c
>
max
) {

265 
˝
=
c
;

266 if(!
	`U_IS_SURROGATE
(
˝
)) {

268 } if(
	`U_IS_SURROGATE_LEAD
(
˝
)) {

269 
gëTøû
:

270 if(
sour˚
<
sour˚Limô
) {

272 
UCh¨
 
åaû
=*
sour˚
;

273 if(
	`U16_IS_TRAIL
(
åaû
)) {

274 ++
sour˚
;

275 
˝
=
	`U16_GET_SUPPLEMENTARY
(˝, 
åaû
);

284 
˙v
->
‰omUCh¨32
=
˝
;

285 
noM‹eI≈ut
;

292 *
pEº‹Code

	`U_IS_SURROGATE
(
˝
Ë? 
U_ILLEGAL_CHAR_FOUND
 : 
U_INVALID_CHAR_FOUND
;

293 
˙v
->
‰omUCh¨32
=
˝
;

295 
noM‹eI≈ut
:

298 if(
off£ts
!=
NULL
) {

299 
size_t
 
cou¡
=
èrgë
-
ﬁdT¨gë
;

300 
cou¡
>0) {

301 *
off£ts
++=
sour˚Index
++;

302 --
cou¡
;

306 if(
	`U_SUCCESS
(*
pEº‹Code
Ë&& 
sour˚
<
sour˚Limô
 && 
èrgë
>=(
uöt8_t
 *)
pArgs
->
èrgëLimô
) {

308 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

312 
pArgs
->
sour˚
=source;

313 
pArgs
->
èrgë
=(*)target;

314 
pArgs
->
off£ts
=offsets;

315 
	}
}

319 
	$u˙v_L©ö1FromUTF8
(
UC⁄vîãrFromUnicodeArgs
 *
pFromUArgs
,

320 
UC⁄vîãrToUnicodeArgs
 *
pToUArgs
,

321 
UEº‹Code
 *
pEº‹Code
) {

322 
UC⁄vîãr
 *
utf8
;

323 c⁄° 
uöt8_t
 *
sour˚
, *
sour˚Limô
;

324 
uöt8_t
 *
èrgë
;

325 
öt32_t
 
èrgëC≠acôy
;

327 
UCh¨32
 
c
;

328 
uöt8_t
 
b
, 
t1
;

331 
utf8
=
pToUArgs
->
c⁄vîãr
;

332 
sour˚
=(
uöt8_t
 *)
pToUArgs
->source;

333 
sour˚Limô
=(
uöt8_t
 *)
pToUArgs
->sourceLimit;

334 
èrgë
=(
uöt8_t
 *)
pFromUArgs
->target;

335 
èrgëC≠acôy
=(
öt32_t
)(
pFromUArgs
->
èrgëLimô
-pFromUArgs->
èrgë
);

338 
c
=(
UCh¨32
)
utf8
->
toUnicodeSètus
;

339 if(
c
!=0 && 
sour˚
<
sour˚Limô
) {

340 if(
èrgëC≠acôy
==0) {

341 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

343 } if(
c
>=0xc2 && c<=0xc3 && (
t1
=(
uöt8_t
)(*
sour˚
-0x80)) <= 0x3f) {

344 ++
sour˚
;

345 *
èrgë
++=(
uöt8_t
)(((
c
&3)<<6)|
t1
);

346 --
èrgëC≠acôy
;

348 
utf8
->
toUnicodeSètus
=0;

349 
utf8
->
toULígth
=0;

352 *
pEº‹Code
=
U_USING_DEFAULT_WARNING
;

365 if(
sour˚
<
sour˚Limô
 && 
	`U8_IS_LEAD
(*(sourceLimit-1))) {

366 --
sour˚Limô
;

370 
sour˚
<
sour˚Limô
) {

371 if(
èrgëC≠acôy
>0) {

372 
b
=*
sour˚
++;

373 if((
öt8_t
)
b
>=0) {

375 *
èrgë
++=(
uöt8_t
)
b
;

376 --
èrgëC≠acôy
;

378 
b
>=0xc2 && b<=0xc3 &&

379 (
t1
=(
uöt8_t
)(*
sour˚
-0x80)) <= 0x3f

381 ++
sour˚
;

382 *
èrgë
++=(
uöt8_t
)(((
b
&3)<<6)|
t1
);

383 --
èrgëC≠acôy
;

386 
pToUArgs
->
sour˚
=(*)(source-1);

387 
pFromUArgs
->
èrgë
=(*)target;

388 *
pEº‹Code
=
U_USING_DEFAULT_WARNING
;

393 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

405 if(
	`U_SUCCESS
(*
pEº‹Code
Ë&& 
sour˚
<(
sour˚Limô
=(
uöt8_t
 *)
pToUArgs
->sourceLimit)) {

406 
utf8
->
toUnicodeSètus
=utf8->
toUByãs
[0]=
b
=*
sour˚
++;

407 
utf8
->
toULígth
=1;

408 
utf8
->
mode
=
utf8_cou¡TøûByãs
[
b
]+1;

412 
pToUArgs
->
sour˚
=(*)source;

413 
pFromUArgs
->
èrgë
=(*)target;

414 
	}
}

417 
	$_L©ö1GëUnicodeSë
(c⁄° 
UC⁄vîãr
 *
˙v
,

418 c⁄° 
USëAddî
 *
ß
,

419 
UC⁄vîãrUnicodeSë
 
which
,

420 
UEº‹Code
 *
pEº‹Code
) {

421 
ß
->
	`addR™ge
(ß->
£t
, 0, 0xff);

422 
	}
}

424 c⁄° 
UC⁄vîãrIm∂
 
	g_L©ö1Im∂
={

425 
UCNV_LATIN_1
,

427 
NULL
,

428 
NULL
,

430 
NULL
,

431 
NULL
,

432 
NULL
,

434 
_L©ö1ToUnicodeWôhOff£ts
,

435 
_L©ö1ToUnicodeWôhOff£ts
,

436 
_L©ö1FromUnicodeWôhOff£ts
,

437 
_L©ö1FromUnicodeWôhOff£ts
,

438 
_L©ö1GëNextUCh¨
,

440 
NULL
,

441 
NULL
,

442 
NULL
,

443 
NULL
,

444 
_L©ö1GëUnicodeSë
,

446 
NULL
,

447 
u˙v_L©ö1FromUTF8


450 c⁄° 
UC⁄vîãrSèticD©a
 
	g_L©ö1SèticD©a
={

451 (
UC⁄vîãrSèticD©a
),

453 819, 
UCNV_IBM
, 
UCNV_LATIN_1
, 1, 1,

454 { 0x1a, 0, 0, 0 }, 1, 
FALSE
, FALSE,

460 c⁄° 
UC⁄vîãrSh¨edD©a
 
	g_L©ö1D©a
={

461 (
UC⁄vîãrSh¨edD©a
), ~((
uöt32_t
) 0),

462 
NULL
, NULL, &
_L©ö1SèticD©a
, 
FALSE
, &
_L©ö1Im∂
,

470 
	$_ASCIIToUnicodeWôhOff£ts
(
UC⁄vîãrToUnicodeArgs
 *
pArgs
,

471 
UEº‹Code
 *
pEº‹Code
) {

472 c⁄° 
uöt8_t
 *
sour˚
, *
sour˚Limô
;

473 
UCh¨
 *
èrgë
, *
ﬁdT¨gë
;

474 
öt32_t
 
èrgëC≠acôy
, 
Àngth
;

475 
öt32_t
 *
off£ts
;

477 
öt32_t
 
sour˚Index
;

479 
uöt8_t
 
c
;

482 
sour˚
=(c⁄° 
uöt8_t
 *)
pArgs
->source;

483 
sour˚Limô
=(c⁄° 
uöt8_t
 *)
pArgs
->sourceLimit;

484 
èrgë
=
ﬁdT¨gë
=
pArgs
->target;

485 
èrgëC≠acôy
=(
öt32_t
)(
pArgs
->
èrgëLimô
-pArgs->
èrgë
);

486 
off£ts
=
pArgs
->offsets;

489 
sour˚Index
=0;

495 
Àngth
=(
öt32_t
)(
sour˚Limô
-
sour˚
);

496 if(
Àngth
<
èrgëC≠acôy
) {

497 
èrgëC≠acôy
=
Àngth
;

500 if(
èrgëC≠acôy
>=8) {

502 
öt32_t
 
cou¡
, 
lo›s
;

503 
UCh¨
 
‹edCh¨s
;

505 
lo›s
=
cou¡
=
èrgëC≠acôy
>>3;

507 
‹edCh¨s
=
èrgë
[0]=
sour˚
[0];

508 
‹edCh¨s
|=
èrgë
[1]=
sour˚
[1];

509 
‹edCh¨s
|=
èrgë
[2]=
sour˚
[2];

510 
‹edCh¨s
|=
èrgë
[3]=
sour˚
[3];

511 
‹edCh¨s
|=
èrgë
[4]=
sour˚
[4];

512 
‹edCh¨s
|=
èrgë
[5]=
sour˚
[5];

513 
‹edCh¨s
|=
èrgë
[6]=
sour˚
[6];

514 
‹edCh¨s
|=
èrgë
[7]=
sour˚
[7];

517 if(
‹edCh¨s
>0x7f) {

521 
sour˚
+=8;

522 
èrgë
+=8;

523 } --
cou¡
>0);

524 
cou¡
=
lo›s
-count;

525 
èrgëC≠acôy
-=
cou¡
*8;

527 if(
off£ts
!=
NULL
) {

528 
ﬁdT¨gë
+=
cou¡
*8;

529 
cou¡
>0) {

530 
off£ts
[0]=
sour˚Index
++;

531 
off£ts
[1]=
sour˚Index
++;

532 
off£ts
[2]=
sour˚Index
++;

533 
off£ts
[3]=
sour˚Index
++;

534 
off£ts
[4]=
sour˚Index
++;

535 
off£ts
[5]=
sour˚Index
++;

536 
off£ts
[6]=
sour˚Index
++;

537 
off£ts
[7]=
sour˚Index
++;

538 
off£ts
+=8;

539 --
cou¡
;

545 
c
=0;

546 
èrgëC≠acôy
>0 && (
c
=*
sour˚
++)<=0x7f) {

547 *
èrgë
++=
c
;

548 --
èrgëC≠acôy
;

551 if(
c
>0x7f) {

553 
UC⁄vîãr
 *
˙v
=
pArgs
->
c⁄vîãr
;

554 
˙v
->
toUByãs
[0]=
c
;

555 
˙v
->
toULígth
=1;

556 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

557 } if(
sour˚
<
sour˚Limô
 && 
èrgë
>=
pArgs
->
èrgëLimô
) {

559 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

563 if(
off£ts
!=
NULL
) {

564 
size_t
 
cou¡
=
èrgë
-
ﬁdT¨gë
;

565 
cou¡
>0) {

566 *
off£ts
++=
sour˚Index
++;

567 --
cou¡
;

572 
pArgs
->
sour˚
=(const *)source;

573 
pArgs
->
èrgë
=target;

574 
pArgs
->
off£ts
=offsets;

575 
	}
}

578 
UCh¨32


579 
	$_ASCIIGëNextUCh¨
(
UC⁄vîãrToUnicodeArgs
 *
pArgs
,

580 
UEº‹Code
 *
pEº‹Code
) {

581 c⁄° 
uöt8_t
 *
sour˚
;

582 
uöt8_t
 
b
;

584 
sour˚
=(c⁄° 
uöt8_t
 *)
pArgs
->source;

585 if(
sour˚
<(c⁄° 
uöt8_t
 *)
pArgs
->
sour˚Limô
) {

586 
b
=*
sour˚
++;

587 
pArgs
->
sour˚
=(const *)source;

588 if(
b
<=0x7f) {

589  
b
;

591 
UC⁄vîãr
 *
˙v
=
pArgs
->
c⁄vîãr
;

592 
˙v
->
toUByãs
[0]=
b
;

593 
˙v
->
toULígth
=1;

594 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

600 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

602 
	}
}

606 
	$u˙v_ASCIIFromUTF8
(
UC⁄vîãrFromUnicodeArgs
 *
pFromUArgs
,

607 
UC⁄vîãrToUnicodeArgs
 *
pToUArgs
,

608 
UEº‹Code
 *
pEº‹Code
) {

609 c⁄° 
uöt8_t
 *
sour˚
, *
sour˚Limô
;

610 
uöt8_t
 *
èrgë
;

611 
öt32_t
 
èrgëC≠acôy
, 
Àngth
;

613 
uöt8_t
 
c
;

615 if(
pToUArgs
->
c⁄vîãr
->
toUnicodeSètus
!=0) {

617 *
pEº‹Code
=
U_USING_DEFAULT_WARNING
;

622 
sour˚
=(c⁄° 
uöt8_t
 *)
pToUArgs
->source;

623 
sour˚Limô
=(c⁄° 
uöt8_t
 *)
pToUArgs
->sourceLimit;

624 
èrgë
=(
uöt8_t
 *)
pFromUArgs
->target;

625 
èrgëC≠acôy
=(
öt32_t
)(
pFromUArgs
->
èrgëLimô
-pFromUArgs->
èrgë
);

631 
Àngth
=(
öt32_t
)(
sour˚Limô
-
sour˚
);

632 if(
Àngth
<
èrgëC≠acôy
) {

633 
èrgëC≠acôy
=
Àngth
;

637 if(
èrgëC≠acôy
>=16) {

638 
öt32_t
 
cou¡
, 
lo›s
;

639 
uöt8_t
 
‹edCh¨s
;

641 
lo›s
=
cou¡
=
èrgëC≠acôy
>>4;

643 
‹edCh¨s
=*
èrgë
++=*
sour˚
++;

644 
‹edCh¨s
|=*
èrgë
++=*
sour˚
++;

645 
‹edCh¨s
|=*
èrgë
++=*
sour˚
++;

646 
‹edCh¨s
|=*
èrgë
++=*
sour˚
++;

647 
‹edCh¨s
|=*
èrgë
++=*
sour˚
++;

648 
‹edCh¨s
|=*
èrgë
++=*
sour˚
++;

649 
‹edCh¨s
|=*
èrgë
++=*
sour˚
++;

650 
‹edCh¨s
|=*
èrgë
++=*
sour˚
++;

651 
‹edCh¨s
|=*
èrgë
++=*
sour˚
++;

652 
‹edCh¨s
|=*
èrgë
++=*
sour˚
++;

653 
‹edCh¨s
|=*
èrgë
++=*
sour˚
++;

654 
‹edCh¨s
|=*
èrgë
++=*
sour˚
++;

655 
‹edCh¨s
|=*
èrgë
++=*
sour˚
++;

656 
‹edCh¨s
|=*
èrgë
++=*
sour˚
++;

657 
‹edCh¨s
|=*
èrgë
++=*
sour˚
++;

658 
‹edCh¨s
|=*
èrgë
++=*
sour˚
++;

661 if(
‹edCh¨s
>0x7f) {

663 
sour˚
-=16;

664 
èrgë
-=16;

667 } --
cou¡
>0);

668 
cou¡
=
lo›s
-count;

669 
èrgëC≠acôy
-=16*
cou¡
;

673 
c
=0;

674 
èrgëC≠acôy
>0 && (
c
=*
sour˚
)<=0x7f) {

675 ++
sour˚
;

676 *
èrgë
++=
c
;

677 --
èrgëC≠acôy
;

680 if(
c
>0x7f) {

682 *
pEº‹Code
=
U_USING_DEFAULT_WARNING
;

683 } if(
sour˚
<
sour˚Limô
 && 
èrgë
>=(c⁄° 
uöt8_t
 *)
pFromUArgs
->
èrgëLimô
) {

685 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

689 
pToUArgs
->
sour˚
=(const *)source;

690 
pFromUArgs
->
èrgë
=(*)target;

691 
	}
}

694 
	$_ASCIIGëUnicodeSë
(c⁄° 
UC⁄vîãr
 *
˙v
,

695 c⁄° 
USëAddî
 *
ß
,

696 
UC⁄vîãrUnicodeSë
 
which
,

697 
UEº‹Code
 *
pEº‹Code
) {

698 
ß
->
	`addR™ge
(ß->
£t
, 0, 0x7f);

699 
	}
}

701 c⁄° 
UC⁄vîãrIm∂
 
	g_ASCIIIm∂
={

702 
UCNV_US_ASCII
,

704 
NULL
,

705 
NULL
,

707 
NULL
,

708 
NULL
,

709 
NULL
,

711 
_ASCIIToUnicodeWôhOff£ts
,

712 
_ASCIIToUnicodeWôhOff£ts
,

713 
_L©ö1FromUnicodeWôhOff£ts
,

714 
_L©ö1FromUnicodeWôhOff£ts
,

715 
_ASCIIGëNextUCh¨
,

717 
NULL
,

718 
NULL
,

719 
NULL
,

720 
NULL
,

721 
_ASCIIGëUnicodeSë
,

723 
NULL
,

724 
u˙v_ASCIIFromUTF8


727 c⁄° 
UC⁄vîãrSèticD©a
 
	g_ASCIISèticD©a
={

728 (
UC⁄vîãrSèticD©a
),

730 367, 
UCNV_IBM
, 
UCNV_US_ASCII
, 1, 1,

731 { 0x1a, 0, 0, 0 }, 1, 
FALSE
, FALSE,

737 c⁄° 
UC⁄vîãrSh¨edD©a
 
	g_ASCIID©a
={

738 (
UC⁄vîãrSh¨edD©a
), ~((
uöt32_t
) 0),

739 
NULL
, NULL, &
_ASCIISèticD©a
, 
FALSE
, &
_ASCIIIm∂
,

	@ucnvmbcs.c

43 
	~"unicode/uty≥s.h
"

45 #i‡!
UCONFIG_NO_CONVERSION
 && !
UCONFIG_NO_LEGACY_CONVERSION


47 
	~"unicode/u˙v.h
"

48 
	~"unicode/u˙v_cb.h
"

49 
	~"unicode/ud©a.h
"

50 
	~"unicode/u£t.h
"

51 
	~"u˙v_bld.h
"

52 
	~"u˙vmbcs.h
"

53 
	~"u˙v_ext.h
"

54 
	~"u˙v_˙v.h
"

55 
	~"umuãx.h
"

56 
	~"cmem‹y.h
"

57 
	~"c°rög.h
"

60 
	#MBCS_UNROLL_SINGLE_TO_BMP
 1

	)

61 
	#MBCS_UNROLL_SINGLE_FROM_BMP
 0

	)

360 c⁄° 
UC⁄vîãrIm∂
 
	g_SBCSUTF8Im∂
;

361 c⁄° 
UC⁄vîãrIm∂
 
	g_DBCSUTF8Im∂
;

366 
	#LINEAR_18030
(
a
, 
b
, 
c
, 
d
Ë(((◊)*10+(b))*126L+(c))*10L+(d))

	)

368 
	#LINEAR_18030_BASE
 
	`LINEAR_18030
(0x81, 0x30, 0x81, 0x30)

	)

370 
	#LINEAR
(
x
Ë
	`LINEAR_18030
(x>>24, (x>>16)&0xff, (x>>8)&0xff, x&0xff)

	)

381 c⁄° 
uöt32_t


382 
	ggb18030R™ges
[13][4]={

383 {0x10000, 0x10FFFF, 
LINEAR
(0x90308130), LINEAR(0xE3329A35)},

384 {0x9FA6, 0xD7FF, 
LINEAR
(0x82358F33), LINEAR(0x8336C738)},

385 {0x0452, 0x200F, 
LINEAR
(0x8130D330), LINEAR(0x8136A531)},

386 {0xE865, 0xF92B, 
LINEAR
(0x8336D030), LINEAR(0x84308534)},

387 {0x2643, 0x2E80, 
LINEAR
(0x8137A839), LINEAR(0x8138FD38)},

388 {0xFA2A, 0xFE2F, 
LINEAR
(0x84309C38), LINEAR(0x84318537)},

389 {0x3CE1, 0x4055, 
LINEAR
(0x8231D438), LINEAR(0x8232AF32)},

390 {0x361B, 0x3917, 
LINEAR
(0x8230A633), LINEAR(0x8230F237)},

391 {0x49B8, 0x4C76, 
LINEAR
(0x8234A131), LINEAR(0x8234E733)},

392 {0x4160, 0x4336, 
LINEAR
(0x8232C937), LINEAR(0x8232F837)},

393 {0x478E, 0x4946, 
LINEAR
(0x8233E838), LINEAR(0x82349638)},

394 {0x44D7, 0x464B, 
LINEAR
(0x8233A339), LINEAR(0x8233C931)},

395 {0xFFE6, 0xFFFF, 
LINEAR
(0x8431A234), LINEAR(0x8431A439)}

399 
	#_MBCS_OPTION_GB18030
 0x8000

	)

402 
	#_MBCS_OPTION_KEIS
 0x01000

	)

403 
	#_MBCS_OPTION_JEF
 0x02000

	)

404 
	#_MBCS_OPTION_JIPS
 0x04000

	)

406 
	#KEIS_SO_CHAR_1
 0x0A

	)

407 
	#KEIS_SO_CHAR_2
 0x42

	)

408 
	#KEIS_SI_CHAR_1
 0x0A

	)

409 
	#KEIS_SI_CHAR_2
 0x41

	)

411 
	#JEF_SO_CHAR
 0x28

	)

412 
	#JEF_SI_CHAR
 0x29

	)

414 
	#JIPS_SO_CHAR_1
 0x1A

	)

415 
	#JIPS_SO_CHAR_2
 0x70

	)

416 
	#JIPS_SI_CHAR_1
 0x1A

	)

417 
	#JIPS_SI_CHAR_2
 0x71

	)

419 
	eSISO_O±i⁄
 {

420 
	mSI
,

421 
	mSO


423 
SISO_O±i⁄
 
	tSISO_O±i⁄
;

425 
öt32_t
 
	$gëSISOByãs
(
SISO_O±i⁄
 
›ti⁄
, 
uöt32_t
 
˙vO±i⁄
, 
uöt8_t
 *
vÆue
) {

426 
öt32_t
 
SISOLígth
 = 0;

428 
›ti⁄
) {

429 
SI
:

430 i‡((
˙vO±i⁄
&
_MBCS_OPTION_KEIS
)!=0) {

431 
vÆue
[0] = 
KEIS_SI_CHAR_1
;

432 
vÆue
[1] = 
KEIS_SI_CHAR_2
;

433 
SISOLígth
 = 2;

434 } i‡((
˙vO±i⁄
&
_MBCS_OPTION_JEF
)!=0) {

435 
vÆue
[0] = 
JEF_SI_CHAR
;

436 
SISOLígth
 = 1;

437 } i‡((
˙vO±i⁄
&
_MBCS_OPTION_JIPS
)!=0) {

438 
vÆue
[0] = 
JIPS_SI_CHAR_1
;

439 
vÆue
[1] = 
JIPS_SI_CHAR_2
;

440 
SISOLígth
 = 2;

442 
vÆue
[0] = 
UCNV_SI
;

443 
SISOLígth
 = 1;

446 
SO
:

447 i‡((
˙vO±i⁄
&
_MBCS_OPTION_KEIS
)!=0) {

448 
vÆue
[0] = 
KEIS_SO_CHAR_1
;

449 
vÆue
[1] = 
KEIS_SO_CHAR_2
;

450 
SISOLígth
 = 2;

451 } i‡((
˙vO±i⁄
&
_MBCS_OPTION_JEF
)!=0) {

452 
vÆue
[0] = 
JEF_SO_CHAR
;

453 
SISOLígth
 = 1;

454 } i‡((
˙vO±i⁄
&
_MBCS_OPTION_JIPS
)!=0) {

455 
vÆue
[0] = 
JIPS_SO_CHAR_1
;

456 
vÆue
[1] = 
JIPS_SO_CHAR_2
;

457 
SISOLígth
 = 2;

459 
vÆue
[0] = 
UCNV_SO
;

460 
SISOLígth
 = 1;

468  
SISOLígth
;

469 
	}
}

486 
UBoﬁ
 
	tU_CALLCONV


487 
	tUC⁄vîãrEnumToUCÆlback
(c⁄° *
	tc⁄ãxt
, 
	tuöt32_t
 
	tvÆue
, 
	tUCh¨32
 
	tcodePoöts
[32]);

490 
UBoﬁ


491 
	$íumToU
(
UC⁄vîãrMBCSTabÀ
 *
mbcsTabÀ
, 
öt8_t
 
°©ePr›s
[],

492 
öt32_t
 
°©e
, 
uöt32_t
 
off£t
,

493 
uöt32_t
 
vÆue
,

494 
UC⁄vîãrEnumToUCÆlback
 *
ˇŒback
, c⁄° *
c⁄ãxt
,

495 
UEº‹Code
 *
pEº‹Code
) {

496 
UCh¨32
 
codePoöts
[32];

497 c⁄° 
öt32_t
 *
row
;

498 c⁄° 
uöt16_t
 *
unicodeCodeUnôs
;

499 
UCh¨32
 
™yCodePoöts
;

500 
öt32_t
 
b
, 
limô
;

502 
row
=
mbcsTabÀ
->
°©eTabÀ
[
°©e
];

503 
unicodeCodeUnôs
=
mbcsTabÀ
->unicodeCodeUnits;

505 
vÆue
<<=8;

506 
™yCodePoöts
=-1;

508 
b
=(
°©ePr›s
[
°©e
]&0x38)<<2;

509 if(
b
==0 && 
°©ePr›s
[
°©e
]>=0x40) {

511 
codePoöts
[0]=
U_SENTINEL
;

512 
b
=1;

514 
limô
=((
°©ePr›s
[
°©e
]&7)+1)<<5;

515 
b
<
limô
) {

516 
öt32_t
 
íåy
=
row
[
b
];

517 if(
	`MBCS_ENTRY_IS_TRANSITION
(
íåy
)) {

518 
öt32_t
 
√xtSèã
=
	`MBCS_ENTRY_TRANSITION_STATE
(
íåy
);

519 if(
°©ePr›s
[
√xtSèã
]>=0) {

521 if(!
	`íumToU
(

522 
mbcsTabÀ
, 
°©ePr›s
, 
√xtSèã
,

523 
off£t
+
	`MBCS_ENTRY_TRANSITION_OFFSET
(
íåy
),

524 
vÆue
|(
uöt32_t
)
b
,

525 
ˇŒback
, 
c⁄ãxt
,

526 
pEº‹Code
)) {

527  
FALSE
;

530 
codePoöts
[
b
&0x1f]=
U_SENTINEL
;

532 
UCh¨32
 
c
;

533 
öt32_t
 
a˘i⁄
;

539 
a˘i⁄
=
	`MBCS_ENTRY_FINAL_ACTION
(
íåy
);

540 if(
a˘i⁄
==
MBCS_STATE_VALID_DIRECT_16
) {

542 
c
=(
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

543 } if(
a˘i⁄
==
MBCS_STATE_VALID_16
) {

544 
öt32_t
 
föÆOff£t
=
off£t
+
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

545 
c
=
unicodeCodeUnôs
[
föÆOff£t
];

546 if(
c
<0xfffe) {

549 
c
=
U_SENTINEL
;

551 } if(
a˘i⁄
==
MBCS_STATE_VALID_16_PAIR
) {

552 
öt32_t
 
föÆOff£t
=
off£t
+
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

553 
c
=
unicodeCodeUnôs
[
föÆOff£t
++];

554 if(
c
<0xd800) {

556 } if(
c
<=0xdbff) {

558 
c
=((c&0x3ff)<<10)+
unicodeCodeUnôs
[
föÆOff£t
]+(0x10000-0xdc00);

559 } if(
c
==0xe000) {

561 
c
=
unicodeCodeUnôs
[
föÆOff£t
];

563 
c
=
U_SENTINEL
;

565 } if(
a˘i⁄
==
MBCS_STATE_VALID_DIRECT_20
) {

567 
c
=(
UCh¨32
)(
	`MBCS_ENTRY_FINAL_VALUE
(
íåy
)+0x10000);

569 
c
=
U_SENTINEL
;

572 
codePoöts
[
b
&0x1f]=
c
;

573 
™yCodePoöts
&=
c
;

575 if(((++
b
)&0x1f)==0) {

576 if(
™yCodePoöts
>=0) {

577 if(!
	`ˇŒback
(
c⁄ãxt
, 
vÆue
|(
uöt32_t
)(
b
-0x20), 
codePoöts
)) {

578  
FALSE
;

580 
™yCodePoöts
=-1;

584  
TRUE
;

585 
	}
}

592 
öt8_t


593 
gëSèãPr›
(c⁄° 
öt32_t
 (*
°©eTabÀ
)[256], 
öt8_t
 
°©ePr›s
[], 
°©e
) {

594 c⁄° 
öt32_t
 *
	grow
;

595 
öt32_t
 
	gmö
, 
	gmax
, 
	gíåy
, 
	g√xtSèã
;

597 
	grow
=
°©eTabÀ
[
°©e
];

598 
	g°©ePr›s
[
°©e
]=0;

601 
	gmö
=0;; ++min) {

602 
	gíåy
=
row
[
mö
];

603 
	g√xtSèã
=
MBCS_ENTRY_STATE
(
íåy
);

604 if(
	g°©ePr›s
[
√xtSèã
]==-1) {

605 
gëSèãPr›
(
°©eTabÀ
, 
°©ePr›s
, 
√xtSèã
);

607 if(
MBCS_ENTRY_IS_TRANSITION
(
íåy
)) {

608 if(
	g°©ePr›s
[
√xtSèã
]>=0) {

611 } if(
MBCS_ENTRY_FINAL_ACTION
(
íåy
)<
	gMBCS_STATE_UNASSIGNED
) {

614 if(
	gmö
==0xff) {

615 
°©ePr›s
[
°©e
]=-0x40;

616  
	g°©ePr›s
[
°©e
];

619 
	g°©ePr›s
[
°©e
]|=(
öt8_t
)((
mö
>>5)<<3);

622 
	gmax
=0xff; 
	gmö
<max; --max) {

623 
	gíåy
=
row
[
max
];

624 
	g√xtSèã
=
MBCS_ENTRY_STATE
(
íåy
);

625 if(
	g°©ePr›s
[
√xtSèã
]==-1) {

626 
gëSèãPr›
(
°©eTabÀ
, 
°©ePr›s
, 
√xtSèã
);

628 if(
MBCS_ENTRY_IS_TRANSITION
(
íåy
)) {

629 if(
	g°©ePr›s
[
√xtSèã
]>=0) {

632 } if(
MBCS_ENTRY_FINAL_ACTION
(
íåy
)<
	gMBCS_STATE_UNASSIGNED
) {

636 
	g°©ePr›s
[
°©e
]|=(
öt8_t
)(
max
>>5);

639 
	gmö
<=
max
) {

640 
íåy
=
row
[
mö
];

641 
	g√xtSèã
=
MBCS_ENTRY_STATE
(
íåy
);

642 if(
	g°©ePr›s
[
√xtSèã
]==-1) {

643 
gëSèãPr›
(
°©eTabÀ
, 
°©ePr›s
, 
√xtSèã
);

645 if(
MBCS_ENTRY_IS_FINAL
(
íåy
)) {

646 
	g°©ePr›s
[
√xtSèã
]|=0x40;

647 if(
MBCS_ENTRY_FINAL_ACTION
(
íåy
)<=
MBCS_STATE_FALLBACK_DIRECT_20
) {

648 
°©ePr›s
[
°©e
]|=0x40;

651 ++
	gmö
;

653  
	g°©ePr›s
[
°©e
];

665 
	$u˙v_MBCSEnumToUnicode
(
UC⁄vîãrMBCSTabÀ
 *
mbcsTabÀ
,

666 
UC⁄vîãrEnumToUCÆlback
 *
ˇŒback
, c⁄° *
c⁄ãxt
,

667 
UEº‹Code
 *
pEº‹Code
) {

686 
öt8_t
 
°©ePr›s
[
MBCS_MAX_STATE_COUNT
];

687 
öt32_t
 
°©e
;

689 
	`u¥v_mem£t
(
°©ePr›s
, -1, (stateProps));

692 
	`gëSèãPr›
(
mbcsTabÀ
->
°©eTabÀ
, 
°©ePr›s
, 0);

694 
°©e
=0; sèã<
mbcsTabÀ
->
cou¡Sèãs
; ++state) {

698 if(
°©ePr›s
[
°©e
]>=0x40) {

700 
	`íumToU
(

701 
mbcsTabÀ
, 
°©ePr›s
, 
°©e
, 0, 0,

702 
ˇŒback
, 
c⁄ãxt
,

703 
pEº‹Code
);

706 
	}
}

708 
U_CFUNC
 

709 
	$u˙v_MBCSGëFûãªdUnicodeSëF‹Unicode
(c⁄° 
UC⁄vîãrSh¨edD©a
 *
sh¨edD©a
,

710 c⁄° 
USëAddî
 *
ß
,

711 
UC⁄vîãrUnicodeSë
 
which
,

712 
UC⁄vîãrSëFûãr
 
fûãr
,

713 
UEº‹Code
 *
pEº‹Code
) {

714 c⁄° 
UC⁄vîãrMBCSTabÀ
 *
mbcsTabÀ
;

715 c⁄° 
uöt16_t
 *
èbÀ
;

717 
uöt32_t
 
°3
;

718 
uöt16_t
 
°1
, 
maxSège1
, 
°2
;

720 
UCh¨32
 
c
;

723 
mbcsTabÀ
=&
sh¨edD©a
->
mbcs
;

724 
èbÀ
=
mbcsTabÀ
->
‰omUnicodeTabÀ
;

725 if(
mbcsTabÀ
->
unicodeMask
&
UCNV_HAS_SUPPLEMENTARY
) {

726 
maxSège1
=0x440;

728 
maxSège1
=0x40;

731 
c
=0;

733 if(
mbcsTabÀ
->
ouçutTy≥
==
MBCS_OUTPUT_1
) {

734 c⁄° 
uöt16_t
 *
°age2
, *
°age3
, *
ªsu…s
;

735 
uöt16_t
 
möVÆue
;

737 
ªsu…s
=(c⁄° 
uöt16_t
 *)
mbcsTabÀ
->
‰omUnicodeByãs
;

744 if(
which
==
UCNV_ROUNDTRIP_SET
) {

746 
möVÆue
=0xf00;

749 
möVÆue
=0x800;

752 
°1
=0; st1<
maxSège1
; ++st1) {

753 
°2
=
èbÀ
[
°1
];

754 if(
°2
>
maxSège1
) {

755 
°age2
=
èbÀ
+
°2
;

756 
°2
=0; st2<64; ++st2) {

757 if((
°3
=
°age2
[
°2
])!=0) {

759 
°age3
=
ªsu…s
+
°3
;

762 if(*
°age3
++>=
möVÆue
) {

763 
ß
->
	`add
(ß->
£t
, 
c
);

765 } (++
c
&0xf)!=0);

767 
c
+=16;

771 
c
+=1024;

775 c⁄° 
uöt32_t
 *
°age2
;

776 c⁄° 
uöt8_t
 *
°age3
, *
byãs
;

777 
uöt32_t
 
°3Mu…ùlõr
;

778 
uöt32_t
 
vÆue
;

779 
UBoﬁ
 
u£FÆlback
;

781 
byãs
=
mbcsTabÀ
->
‰omUnicodeByãs
;

783 
u£FÆlback
=(
UBoﬁ
)(
which
==
UCNV_ROUNDTRIP_AND_FALLBACK_SET
);

785 
mbcsTabÀ
->
ouçutTy≥
) {

786 
MBCS_OUTPUT_3
:

787 
MBCS_OUTPUT_4_EUC
:

788 
°3Mu…ùlõr
=3;

790 
MBCS_OUTPUT_4
:

791 
°3Mu…ùlõr
=4;

794 
°3Mu…ùlõr
=2;

798 
°1
=0; st1<
maxSège1
; ++st1) {

799 
°2
=
èbÀ
[
°1
];

800 if(
°2
>(
maxSège1
>>1)) {

801 
°age2
=(c⁄° 
uöt32_t
 *)
èbÀ
+
°2
;

802 
°2
=0; st2<64; ++st2) {

803 if((
°3
=
°age2
[
°2
])!=0) {

805 
°age3
=
byãs
+
°3Mu…ùlõr
*16*(
uöt32_t
)(
uöt16_t
)
°3
;

808 
°3
>>=16;

815 
fûãr
) {

816 
UCNV_SET_FILTER_NONE
:

818 if(
°3
&1) {

819 
ß
->
	`add
(ß->
£t
, 
c
);

820 
°age3
+=
°3Mu…ùlõr
;

821 } if(
u£FÆlback
) {

822 
uöt8_t
 
b
=0;

823 
°3Mu…ùlõr
) {

825 
b
|=*
°age3
++;

827 
b
|=*
°age3
++;

829 
b
|=
°age3
[0]|stage3[1];

830 
°age3
+=2;

834 if(
b
!=0) {

835 
ß
->
	`add
(ß->
£t
, 
c
);

838 
°3
>>=1;

839 } (++
c
&0xf)!=0);

841 
UCNV_SET_FILTER_DBCS_ONLY
:

844 if(((
°3
&1)!=0 || 
u£FÆlback
Ë&& *((c⁄° 
uöt16_t
 *)
°age3
)>=0x100) {

845 
ß
->
	`add
(ß->
£t
, 
c
);

847 
°3
>>=1;

848 
°age3
+=2;

849 } (++
c
&0xf)!=0);

851 
UCNV_SET_FILTER_2022_CN
:

854 if(((
°3
&1)!=0 || 
u£FÆlback
Ë&& ((
vÆue
=*
°age3
)==0x81 || value==0x82)) {

855 
ß
->
	`add
(ß->
£t
, 
c
);

857 
°3
>>=1;

858 
°age3
+=3;

859 } (++
c
&0xf)!=0);

861 
UCNV_SET_FILTER_SJIS
:

864 if(((
°3
&1)!=0 || 
u£FÆlback
Ë&& (
vÆue
=*((c⁄° 
uöt16_t
 *)
°age3
))>=0x8140 && value<=0xeffc) {

865 
ß
->
	`add
(ß->
£t
, 
c
);

867 
°3
>>=1;

868 
°age3
+=2;

869 } (++
c
&0xf)!=0);

871 
UCNV_SET_FILTER_GR94DBCS
:

874 if–((
°3
&1)!=0 || 
u£FÆlback
) &&

875 (
uöt16_t
)((
vÆue
=*((c⁄° uöt16_à*)
°age3
)) - 0xa1a1)<=(0xfefe - 0xa1a1) &&

876 (
uöt8_t
)(
vÆue
-0xa1)<=(0xfe - 0xa1)

878 
ß
->
	`add
(ß->
£t
, 
c
);

880 
°3
>>=1;

881 
°age3
+=2;

882 } (++
c
&0xf)!=0);

884 
UCNV_SET_FILTER_HZ
:

887 if–((
°3
&1)!=0 || 
u£FÆlback
) &&

888 (
uöt16_t
)((
vÆue
=*((c⁄° uöt16_à*)
°age3
))-0xa1a1)<=(0xfdfe - 0xa1a1) &&

889 (
uöt8_t
)(
vÆue
-0xa1)<=(0xfe - 0xa1)

891 
ß
->
	`add
(ß->
£t
, 
c
);

893 
°3
>>=1;

894 
°age3
+=2;

895 } (++
c
&0xf)!=0);

898 *
pEº‹Code
=
U_INTERNAL_PROGRAM_ERROR
;

902 
c
+=16;

906 
c
+=1024;

911 
	`u˙v_extGëUnicodeSë
(
sh¨edD©a
, 
ß
, 
which
, 
fûãr
, 
pEº‹Code
);

912 
	}
}

914 
U_CFUNC
 

915 
	$u˙v_MBCSGëUnicodeSëF‹Unicode
(c⁄° 
UC⁄vîãrSh¨edD©a
 *
sh¨edD©a
,

916 c⁄° 
USëAddî
 *
ß
,

917 
UC⁄vîãrUnicodeSë
 
which
,

918 
UEº‹Code
 *
pEº‹Code
) {

919 
	`u˙v_MBCSGëFûãªdUnicodeSëF‹Unicode
(

920 
sh¨edD©a
, 
ß
, 
which
,

921 
sh¨edD©a
->
mbcs
.
ouçutTy≥
==
MBCS_OUTPUT_DBCS_ONLY
 ?

922 
UCNV_SET_FILTER_DBCS_ONLY
 :

923 
UCNV_SET_FILTER_NONE
,

924 
pEº‹Code
);

925 
	}
}

928 
	$u˙v_MBCSGëUnicodeSë
(c⁄° 
UC⁄vîãr
 *
˙v
,

929 c⁄° 
USëAddî
 *
ß
,

930 
UC⁄vîãrUnicodeSë
 
which
,

931 
UEº‹Code
 *
pEº‹Code
) {

932 if(
˙v
->
›ti⁄s
&
_MBCS_OPTION_GB18030
) {

933 
ß
->
	`addR™ge
(ß->
£t
, 0, 0xd7ff);

934 
ß
->
	`addR™ge
(ß->
£t
, 0xe000, 0x10ffff);

936 
	`u˙v_MBCSGëUnicodeSëF‹Unicode
(
˙v
->
sh¨edD©a
, 
ß
, 
which
, 
pEº‹Code
);

938 
	}
}

957 
UCh¨32


958 
	$_extFromU
(
UC⁄vîãr
 *
˙v
, c⁄° 
UC⁄vîãrSh¨edD©a
 *
sh¨edD©a
,

959 
UCh¨32
 
˝
,

960 c⁄° 
UCh¨
 **
sour˚
, c⁄° UCh¨ *
sour˚Limô
,

961 
uöt8_t
 **
èrgë
, c⁄° uöt8_à*
èrgëLimô
,

962 
öt32_t
 **
off£ts
, i¡32_à
sour˚Index
,

963 
UBoﬁ
 
Êush
,

964 
UEº‹Code
 *
pEº‹Code
) {

965 c⁄° 
öt32_t
 *
cx
;

967 
˙v
->
u£SubCh¨1
=
FALSE
;

969 if–(
cx
=
sh¨edD©a
->
mbcs
.
extIndexes
)!=
NULL
 &&

970 
	`u˙v_extInôülM©chFromU
(

971 
˙v
, 
cx
,

972 
˝
, 
sour˚
, 
sour˚Limô
,

973 (**)
èrgë
, (*)
èrgëLimô
,

974 
off£ts
, 
sour˚Index
,

975 
Êush
,

976 
pEº‹Code
)

982 if((
˙v
->
›ti⁄s
&
_MBCS_OPTION_GB18030
)!=0) {

983 c⁄° 
uöt32_t
 *
ønge
;

984 
öt32_t
 
i
;

986 
ønge
=
gb18030R™ges
[0];

987 
i
=0; i<(
gb18030R™ges
)/(gb18030R™ges[0]); 
ønge
+=4, ++i) {

988 if(
ønge
[0]<=(
uöt32_t
)
˝
 && (uint32_t)cp<=range[1]) {

990 
uöt32_t
 
löór
;

991 
byãs
[4];

994 
löór
=
ønge
[2]-
LINEAR_18030_BASE
;

997 
löór
+=((
uöt32_t
)
˝
-
ønge
[0]);

1000 
byãs
[3]=()(0x30+
löór
%10);Üinear/=10;

1001 
byãs
[2]=()(0x81+
löór
%126);Üinear/=126;

1002 
byãs
[1]=()(0x30+
löór
%10);Üinear/=10;

1003 
byãs
[0]=()(0x81+
löór
);

1006 
	`u˙v_‰omUWrôeByãs
(
˙v
,

1007 
byãs
, 4, (**)
èrgë
, (*)
èrgëLimô
,

1008 
off£ts
, 
sour˚Index
, 
pEº‹Code
);

1015 *
pEº‹Code
=
U_INVALID_CHAR_FOUND
;

1016  
˝
;

1017 
	}
}

1024 
öt8_t


1025 
	$_extToU
(
UC⁄vîãr
 *
˙v
, c⁄° 
UC⁄vîãrSh¨edD©a
 *
sh¨edD©a
,

1026 
öt8_t
 
Àngth
,

1027 c⁄° 
uöt8_t
 **
sour˚
, c⁄° uöt8_à*
sour˚Limô
,

1028 
UCh¨
 **
èrgë
, c⁄° UCh¨ *
èrgëLimô
,

1029 
öt32_t
 **
off£ts
, i¡32_à
sour˚Index
,

1030 
UBoﬁ
 
Êush
,

1031 
UEº‹Code
 *
pEº‹Code
) {

1032 c⁄° 
öt32_t
 *
cx
;

1034 if–(
cx
=
sh¨edD©a
->
mbcs
.
extIndexes
)!=
NULL
 &&

1035 
	`u˙v_extInôülM©chToU
(

1036 
˙v
, 
cx
,

1037 
Àngth
, (c⁄° **)
sour˚
, (c⁄° *)
sour˚Limô
,

1038 
èrgë
, 
èrgëLimô
,

1039 
off£ts
, 
sour˚Index
,

1040 
Êush
,

1041 
pEº‹Code
)

1047 if(
Àngth
==4 && (
˙v
->
›ti⁄s
&
_MBCS_OPTION_GB18030
)!=0) {

1048 c⁄° 
uöt32_t
 *
ønge
;

1049 
uöt32_t
 
löór
;

1050 
öt32_t
 
i
;

1052 
löór
=
	`LINEAR_18030
(
˙v
->
toUByãs
[0], cnv->toUBytes[1], cnv->toUBytes[2], cnv->toUBytes[3]);

1053 
ønge
=
gb18030R™ges
[0];

1054 
i
=0; i<(
gb18030R™ges
)/(gb18030R™ges[0]); 
ønge
+=4, ++i) {

1055 if(
ønge
[2]<=
löór
 &&Üinear<=range[3]) {

1057 *
pEº‹Code
=
U_ZERO_ERROR
;

1060 
löór
=
ønge
[0]+(linear-range[2]);

1063 
	`u˙v_toUWrôeCodePoöt
(
˙v
, 
löór
, 
èrgë
, 
èrgëLimô
, 
off£ts
, 
sour˚Index
, 
pEº‹Code
);

1071 *
pEº‹Code
=
U_INVALID_CHAR_FOUND
;

1072  
Àngth
;

1073 
	}
}

1099 
	#EBCDIC_LF
 0x25

	)

1100 
	#EBCDIC_NL
 0x15

	)

1103 
	#EBCDIC_RT_LF
 0xf25

	)

1104 
	#EBCDIC_RT_NL
 0xf15

	)

1107 
	#U_LF
 0x0a

	)

1108 
	#U_NL
 0x85

	)

1110 
UBoﬁ


1111 
	$_EBCDICSw≠LFNL
(
UC⁄vîãrSh¨edD©a
 *
sh¨edD©a
, 
UEº‹Code
 *
pEº‹Code
) {

1112 
UC⁄vîãrMBCSTabÀ
 *
mbcsTabÀ
;

1114 c⁄° 
uöt16_t
 *
èbÀ
, *
ªsu…s
;

1115 c⁄° 
uöt8_t
 *
byãs
;

1117 
	`öt32_t
 (*
√wSèãTabÀ
)[256];

1118 
uöt16_t
 *
√wResu…s
;

1119 
uöt8_t
 *
p
;

1120 *
«me
;

1122 
uöt32_t
 
°age2E¡ry
;

1123 
uöt32_t
 
size
, 
sizeofFromUByãs
;

1125 
mbcsTabÀ
=&
sh¨edD©a
->
mbcs
;

1127 
èbÀ
=
mbcsTabÀ
->
‰omUnicodeTabÀ
;

1128 
byãs
=
mbcsTabÀ
->
‰omUnicodeByãs
;

1129 
ªsu…s
=(c⁄° 
uöt16_t
 *)
byãs
;

1138 (
mbcsTabÀ
->
ouçutTy≥
==
MBCS_OUTPUT_1
 || mbcsTabÀ->ouçutTy≥==
MBCS_OUTPUT_2_SISO
) &&

1139 
mbcsTabÀ
->
°©eTabÀ
[0][
EBCDIC_LF
]==
	`MBCS_ENTRY_FINAL
(0, 
MBCS_STATE_VALID_DIRECT_16
, 
U_LF
) &&

1140 
mbcsTabÀ
->
°©eTabÀ
[0][
EBCDIC_NL
]==
	`MBCS_ENTRY_FINAL
(0, 
MBCS_STATE_VALID_DIRECT_16
, 
U_NL
)

1142  
FALSE
;

1145 if(
mbcsTabÀ
->
ouçutTy≥
==
MBCS_OUTPUT_1
) {

1147 
EBCDIC_RT_LF
==
	`MBCS_SINGLE_RESULT_FROM_U
(
èbÀ
, 
ªsu…s
, 
U_LF
) &&

1148 
EBCDIC_RT_NL
==
	`MBCS_SINGLE_RESULT_FROM_U
(
èbÀ
, 
ªsu…s
, 
U_NL
)

1150  
FALSE
;

1153 
°age2E¡ry
=
	`MBCS_STAGE_2_FROM_U
(
èbÀ
, 
U_LF
);

1155 
	`MBCS_FROM_U_IS_ROUNDTRIP
(
°age2E¡ry
, 
U_LF
)!=0 &&

1156 
EBCDIC_LF
==
	`MBCS_VALUE_2_FROM_STAGE_2
(
byãs
, 
°age2E¡ry
, 
U_LF
)

1158  
FALSE
;

1161 
°age2E¡ry
=
	`MBCS_STAGE_2_FROM_U
(
èbÀ
, 
U_NL
);

1163 
	`MBCS_FROM_U_IS_ROUNDTRIP
(
°age2E¡ry
, 
U_NL
)!=0 &&

1164 
EBCDIC_NL
==
	`MBCS_VALUE_2_FROM_STAGE_2
(
byãs
, 
°age2E¡ry
, 
U_NL
)

1166  
FALSE
;

1170 if(
mbcsTabÀ
->
‰omUByãsLígth
>0) {

1175 
sizeofFromUByãs
=
mbcsTabÀ
->
‰omUByãsLígth
;

1189 *
pEº‹Code
=
U_INVALID_FORMAT_ERROR
;

1190  
FALSE
;

1200 
size
=

1201 
mbcsTabÀ
->
cou¡Sèãs
*1024+

1202 
sizeofFromUByãs
+

1203 
UCNV_MAX_CONVERTER_NAME_LENGTH
+20;

1204 
p
=(
uöt8_t
 *)
	`u¥v_mÆloc
(
size
);

1205 if(
p
==
NULL
) {

1206 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

1207  
FALSE
;

1211 
√wSèãTabÀ
=(
	`öt32_t
 (*)[256])
p
;

1212 
	`u¥v_mem˝y
(
√wSèãTabÀ
, 
mbcsTabÀ
->
°©eTabÀ
, mbcsTabÀ->
cou¡Sèãs
*1024);

1214 
√wSèãTabÀ
[0][
EBCDIC_LF
]=
	`MBCS_ENTRY_FINAL
(0, 
MBCS_STATE_VALID_DIRECT_16
, 
U_NL
);

1215 
√wSèãTabÀ
[0][
EBCDIC_NL
]=
	`MBCS_ENTRY_FINAL
(0, 
MBCS_STATE_VALID_DIRECT_16
, 
U_LF
);

1218 
√wResu…s
=(
uöt16_t
 *)
√wSèãTabÀ
[
mbcsTabÀ
->
cou¡Sèãs
];

1219 
	`u¥v_mem˝y
(
√wResu…s
, 
byãs
, 
sizeofFromUByãs
);

1222 if(
mbcsTabÀ
->
ouçutTy≥
==
MBCS_OUTPUT_1
) {

1223 
	`MBCS_SINGLE_RESULT_FROM_U
(
èbÀ
, 
√wResu…s
, 
U_LF
)=
EBCDIC_RT_NL
;

1224 
	`MBCS_SINGLE_RESULT_FROM_U
(
èbÀ
, 
√wResu…s
, 
U_NL
)=
EBCDIC_RT_LF
;

1226 
°age2E¡ry
=
	`MBCS_STAGE_2_FROM_U
(
èbÀ
, 
U_LF
);

1227 
	`MBCS_VALUE_2_FROM_STAGE_2
(
√wResu…s
, 
°age2E¡ry
, 
U_LF
)=
EBCDIC_NL
;

1229 
°age2E¡ry
=
	`MBCS_STAGE_2_FROM_U
(
èbÀ
, 
U_NL
);

1230 
	`MBCS_VALUE_2_FROM_STAGE_2
(
√wResu…s
, 
°age2E¡ry
, 
U_NL
)=
EBCDIC_LF
;

1234 
«me
=(*)
√wResu…s
+
sizeofFromUByãs
;

1235 
	`u¥v_°r˝y
(
«me
, 
sh¨edD©a
->
°©icD©a
->name);

1236 
	`u¥v_°rˇt
(
«me
, 
UCNV_SWAP_LFNL_OPTION_STRING
);

1239 
	`umtx_lock
(
NULL
);

1240 if(
mbcsTabÀ
->
sw≠LFNLSèãTabÀ
==
NULL
) {

1241 
mbcsTabÀ
->
sw≠LFNLSèãTabÀ
=
√wSèãTabÀ
;

1242 
mbcsTabÀ
->
sw≠LFNLFromUnicodeByãs
=(
uöt8_t
 *)
√wResu…s
;

1243 
mbcsTabÀ
->
sw≠LFNLName
=
«me
;

1245 
√wSèãTabÀ
=
NULL
;

1247 
	`umtx_u∆ock
(
NULL
);

1250 if(
√wSèãTabÀ
!=
NULL
) {

1251 
	`u¥v_‰ì
(
√wSèãTabÀ
);

1253  
TRUE
;

1254 
	}
}

1259 
UBoﬁ
 
U_CALLCONV


1260 
	$wrôeSège3Roundåù
(c⁄° *
c⁄ãxt
, 
uöt32_t
 
vÆue
, 
UCh¨32
 
codePoöts
[32]) {

1261 
UC⁄vîãrMBCSTabÀ
 *
mbcsTabÀ
=(UC⁄vîãrMBCSTabÀ *)
c⁄ãxt
;

1262 c⁄° 
uöt16_t
 *
èbÀ
;

1263 
uöt32_t
 *
°age2
;

1264 
uöt8_t
 *
byãs
, *
p
;

1265 
UCh¨32
 
c
;

1266 
öt32_t
 
i
, 
°3
;

1268 
èbÀ
=
mbcsTabÀ
->
‰omUnicodeTabÀ
;

1269 
byãs
=(
uöt8_t
 *)
mbcsTabÀ
->
‰omUnicodeByãs
;

1272 
mbcsTabÀ
->
ouçutTy≥
) {

1273 
MBCS_OUTPUT_3_EUC
:

1274 if(
vÆue
<=0xffff) {

1277 } if(
vÆue
<=0x8effff) {

1279 
vÆue
&=0x7fff;

1282 
vÆue
&=0xff7f;

1285 
MBCS_OUTPUT_4_EUC
:

1286 if(
vÆue
<=0xffffff) {

1289 } if(
vÆue
<=0x8effffff) {

1291 
vÆue
&=0x7fffff;

1294 
vÆue
&=0xff7fff;

1301 
i
=0; i<=0x1f; ++
vÆue
, ++i) {

1302 
c
=
codePoöts
[
i
];

1303 if(
c
<0) {

1308 
°age2
=((
uöt32_t
 *)
èbÀ
)+èbÀ[
c
>>10]+((c>>4)&0x3f);

1309 
p
=
byãs
;

1310 
°3
=(
öt32_t
)(
uöt16_t
)*
°age2
*16+(
c
&0xf);

1313 
mbcsTabÀ
->
ouçutTy≥
) {

1314 
MBCS_OUTPUT_3
:

1315 
MBCS_OUTPUT_4_EUC
:

1316 
p
+=
°3
*3;

1317 
p
[0]=(
uöt8_t
)(
vÆue
>>16);

1318 
p
[1]=(
uöt8_t
)(
vÆue
>>8);

1319 
p
[2]=(
uöt8_t
)
vÆue
;

1321 
MBCS_OUTPUT_4
:

1322 ((
uöt32_t
 *)
p
)[
°3
]=
vÆue
;

1326 ((
uöt16_t
 *)
p
)[
°3
]=(uöt16_t)
vÆue
;

1331 *
°age2
|=(1UL<<(16+(
c
&0xf)));

1333  
TRUE
;

1334 
	}
}

1337 
	$ªc⁄°ôuãD©a
(
UC⁄vîãrMBCSTabÀ
 *
mbcsTabÀ
,

1338 
uöt32_t
 
°age1Lígth
, uöt32_à
°age2Lígth
,

1339 
uöt32_t
 
fuŒSège2Lígth
,

1340 
UEº‹Code
 *
pEº‹Code
) {

1341 
uöt16_t
 *
°age1
;

1342 
uöt32_t
 *
°age2
;

1343 
uöt8_t
 *
byãs
;

1344 
uöt32_t
 
d©aLígth
=
°age1Lígth
*2+
fuŒSège2Lígth
*4+
mbcsTabÀ
->
‰omUByãsLígth
;

1345 
mbcsTabÀ
->
ªc⁄°ôuãdD©a
=(
uöt8_t
 *)
	`u¥v_mÆloc
(
d©aLígth
);

1346 if(
mbcsTabÀ
->
ªc⁄°ôuãdD©a
==
NULL
) {

1347 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

1350 
	`u¥v_mem£t
(
mbcsTabÀ
->
ªc⁄°ôuãdD©a
, 0, 
d©aLígth
);

1353 
°age1
=(
uöt16_t
 *)
mbcsTabÀ
->
ªc⁄°ôuãdD©a
;

1354 
	`u¥v_mem˝y
(
°age1
, 
mbcsTabÀ
->
‰omUnicodeTabÀ
, 
°age1Lígth
*2);

1356 
°age2
=(
uöt32_t
 *)(
°age1
+
°age1Lígth
);

1357 
	`u¥v_mem˝y
(
°age2
+(
fuŒSège2Lígth
-
°age2Lígth
),

1358 
mbcsTabÀ
->
‰omUnicodeTabÀ
+
°age1Lígth
,

1359 
°age2Lígth
*4);

1361 
mbcsTabÀ
->
‰omUnicodeTabÀ
=
°age1
;

1362 
mbcsTabÀ
->
‰omUnicodeByãs
=
byãs
=(
uöt8_t
 *)(
°age2
+
fuŒSège2Lígth
);

1365 
°age2
=(
uöt32_t
 *)
°age1
;

1369 
öt32_t
 
°ageUTF8Lígth
=((öt32_t)
mbcsTabÀ
->
maxFa°UCh¨
+1)>>6;

1370 
öt32_t
 
°ageUTF8Index
=0;

1371 
öt32_t
 
°1
, 
°2
, 
°3
, 
i
;

1373 
°1
=0; 
°ageUTF8Index
<
°ageUTF8Lígth
; ++st1) {

1374 
°2
=
°age1
[
°1
];

1375 if(
°2
!=
°age1Lígth
/2) {

1377 
i
=0; i<16; ++i) {

1378 
°3
=
mbcsTabÀ
->
mbcsIndex
[
°ageUTF8Index
++];

1379 if(
°3
!=0) {

1381 
°3
>>=4;

1386 
°age2
[
°2
++]=
°3
++;

1387 
°age2
[
°2
++]=
°3
++;

1388 
°age2
[
°2
++]=
°3
++;

1389 
°age2
[
°2
++]=
°3
;

1392 
°2
+=4;

1397 
°ageUTF8Index
+=16;

1403 
	`u˙v_MBCSEnumToUnicode
(
mbcsTabÀ
, 
wrôeSège3Roundåù
, mbcsTabÀ, 
pEº‹Code
);

1404 
	}
}

1409 
	$u˙v_MBCSLﬂd
(
UC⁄vîãrSh¨edD©a
 *
sh¨edD©a
,

1410 
UC⁄vîãrLﬂdArgs
 *
pArgs
,

1411 c⁄° 
uöt8_t
 *
øw
,

1412 
UEº‹Code
 *
pEº‹Code
) {

1413 
UD©aInfo
 
öfo
;

1414 
UC⁄vîãrMBCSTabÀ
 *
mbcsTabÀ
=&
sh¨edD©a
->
mbcs
;

1415 
_MBCSHódî
 *
hódî
=(_MBCSHódî *)
øw
;

1416 
uöt32_t
 
off£t
;

1417 
uöt32_t
 
hódîLígth
;

1418 
UBoﬁ
 
noFromU
=
FALSE
;

1420 if(
hódî
->
vîsi⁄
[0]==4) {

1421 
hódîLígth
=
MBCS_HEADER_V4_LENGTH
;

1422 } if(
hódî
->
vîsi⁄
[0]==5 && header->version[1]>=3 &&

1423 (
hódî
->
›ti⁄s
&
MBCS_OPT_UNKNOWN_INCOMPATIBLE_MASK
)==0) {

1424 
hódîLígth
=
hódî
->
›ti⁄s
&
MBCS_OPT_LENGTH_MASK
;

1425 
noFromU
=(
UBoﬁ
)((
hódî
->
›ti⁄s
&
MBCS_OPT_NO_FROM_U
)!=0);

1427 *
pEº‹Code
=
U_INVALID_TABLE_FORMAT
;

1431 
mbcsTabÀ
->
ouçutTy≥
=(
uöt8_t
)
hódî
->
Êags
;

1432 if(
noFromU
 && 
mbcsTabÀ
->
ouçutTy≥
==
MBCS_OUTPUT_1
) {

1433 *
pEº‹Code
=
U_INVALID_TABLE_FORMAT
;

1438 
off£t
=
hódî
->
Êags
>>8;

1439 if(
off£t
!=0) {

1440 
mbcsTabÀ
->
extIndexes
=(c⁄° 
öt32_t
 *)(
øw
+
off£t
);

1443 if(
mbcsTabÀ
->
ouçutTy≥
==
MBCS_OUTPUT_EXT_ONLY
) {

1444 
UC⁄vîãrLﬂdArgs
 
¨gs
={ 0 };

1445 
UC⁄vîãrSh¨edD©a
 *
ba£Sh¨edD©a
;

1446 c⁄° 
öt32_t
 *
extIndexes
;

1447 c⁄° *
ba£Name
;

1450 if((
extIndexes
=
mbcsTabÀ
->extIndexes)==
NULL
) {

1452 *
pEº‹Code
=
U_INVALID_TABLE_FORMAT
;

1456 if(
pArgs
->
√°edLﬂds
!=1) {

1458 *
pEº‹Code
=
U_INVALID_TABLE_FILE
;

1463 
ba£Name
=(c⁄° *)
hódî
+
hódîLígth
*4;

1464 if(0==
	`u¥v_°rcmp
(
ba£Name
, 
sh¨edD©a
->
°©icD©a
->
«me
)) {

1466 *
pEº‹Code
=
U_INVALID_TABLE_FORMAT
;

1471 
¨gs
.
size
=(
UC⁄vîãrLﬂdArgs
);

1472 
¨gs
.
√°edLﬂds
=2;

1473 
¨gs
.
⁄lyTe°IsLﬂdabÀ
=
pArgs
->onlyTestIsLoadable;

1474 
¨gs
.
ª£rved
=
pArgs
->reserved;

1475 
¨gs
.
›ti⁄s
=
pArgs
->options;

1476 
¨gs
.
pkg
=
pArgs
->pkg;

1477 
¨gs
.
«me
=
ba£Name
;

1478 
ba£Sh¨edD©a
=
	`u˙v_lﬂd
(&
¨gs
, 
pEº‹Code
);

1479 if(
	`U_FAILURE
(*
pEº‹Code
)) {

1482 if–
ba£Sh¨edD©a
->
°©icD©a
->
c⁄vîsi⁄Ty≥
!=
UCNV_MBCS
 ||

1483 
ba£Sh¨edD©a
->
mbcs
.ba£Sh¨edD©a!=
NULL


1485 
	`u˙v_u∆ﬂd
(
ba£Sh¨edD©a
);

1486 *
pEº‹Code
=
U_INVALID_TABLE_FORMAT
;

1489 if(
pArgs
->
⁄lyTe°IsLﬂdabÀ
) {

1496 
	`u˙v_u∆ﬂd
(
ba£Sh¨edD©a
);

1501 
	`u¥v_mem˝y
(
mbcsTabÀ
, &
ba£Sh¨edD©a
->
mbcs
, (
UC⁄vîãrMBCSTabÀ
));

1504 
mbcsTabÀ
->
ba£Sh¨edD©a
=baseSharedData;

1505 
mbcsTabÀ
->
extIndexes
=extIndexes;

1514 
mbcsTabÀ
->
sw≠LFNLSèãTabÀ
=
NULL
;

1515 
mbcsTabÀ
->
sw≠LFNLFromUnicodeByãs
=
NULL
;

1516 
mbcsTabÀ
->
sw≠LFNLName
=
NULL
;

1522 
mbcsTabÀ
->
ªc⁄°ôuãdD©a
=
NULL
;

1528 if–
sh¨edD©a
->
°©icD©a
->
c⁄vîsi⁄Ty≥
==
UCNV_DBCS
 ||

1529 (
sh¨edD©a
->
°©icD©a
->
c⁄vîsi⁄Ty≥
==
UCNV_MBCS
 &&

1530 
sh¨edD©a
->
°©icD©a
->
möByãsPîCh¨
>=2)

1532 if(
ba£Sh¨edD©a
->
mbcs
.
ouçutTy≥
==
MBCS_OUTPUT_2_SISO
) {

1534 
öt32_t
 
íåy
;

1537 
íåy
=
mbcsTabÀ
->
°©eTabÀ
[0][0xe];

1538 if–
	`MBCS_ENTRY_IS_FINAL
(
íåy
) &&

1539 
	`MBCS_ENTRY_FINAL_ACTION
(
íåy
)==
MBCS_STATE_CHANGE_ONLY
 &&

1540 
	`MBCS_ENTRY_FINAL_STATE
(
íåy
)!=0

1542 
mbcsTabÀ
->
dbcsO∆ySèã
=(
uöt8_t
)
	`MBCS_ENTRY_FINAL_STATE
(
íåy
);

1544 
mbcsTabÀ
->
ouçutTy≥
=
MBCS_OUTPUT_DBCS_ONLY
;

1547 
ba£Sh¨edD©a
->
°©icD©a
->
c⁄vîsi⁄Ty≥
==
UCNV_MBCS
 &&

1548 
ba£Sh¨edD©a
->
°©icD©a
->
möByãsPîCh¨
==1 &&

1549 
ba£Sh¨edD©a
->
°©icD©a
->
maxByãsPîCh¨
==2 &&

1550 
mbcsTabÀ
->
cou¡Sèãs
<=127

1553 
	`öt32_t
 (*
√wSèãTabÀ
)[256];

1554 
öt32_t
 *
°©e
;

1555 
öt32_t
 
i
, 
cou¡
;

1558 
cou¡
=
mbcsTabÀ
->
cou¡Sèãs
;

1559 
√wSèãTabÀ
=(
	`öt32_t
 (*)[256])
	`u¥v_mÆloc
((
cou¡
+1)*1024);

1560 if(
√wSèãTabÀ
==
NULL
) {

1561 
	`u˙v_u∆ﬂd
(
ba£Sh¨edD©a
);

1562 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

1566 
	`u¥v_mem˝y
(
√wSèãTabÀ
, 
mbcsTabÀ
->
°©eTabÀ
, 
cou¡
*1024);

1569 
°©e
=
√wSèãTabÀ
[0];

1570 
i
=0; i<256; ++i) {

1571 if(
	`MBCS_ENTRY_IS_FINAL
(
°©e
[
i
])) {

1572 
°©e
[
i
]=
	`MBCS_ENTRY_TRANSITION
(
cou¡
, 0);

1577 
°©e
=
√wSèãTabÀ
[
cou¡
];

1578 
i
=0; i<256; ++i) {

1579 
°©e
[
i
]=
	`MBCS_ENTRY_FINAL
(0, 
MBCS_STATE_ILLEGAL
, 0);

1581 
mbcsTabÀ
->
°©eTabÀ
=(c⁄° 
	`öt32_t
 (*)[256])
√wSèãTabÀ
;

1582 
mbcsTabÀ
->
cou¡Sèãs
=(
uöt8_t
)(
cou¡
+1);

1583 
mbcsTabÀ
->
°©eTabÀOw√d
=
TRUE
;

1585 
mbcsTabÀ
->
ouçutTy≥
=
MBCS_OUTPUT_DBCS_ONLY
;

1599 
mbcsTabÀ
->
ouçutTy≥
) {

1600 
MBCS_OUTPUT_1
:

1601 
MBCS_OUTPUT_2
:

1602 
MBCS_OUTPUT_3
:

1603 
MBCS_OUTPUT_4
:

1604 
MBCS_OUTPUT_3_EUC
:

1605 
MBCS_OUTPUT_4_EUC
:

1606 
MBCS_OUTPUT_2_SISO
:

1610 *
pEº‹Code
=
U_INVALID_TABLE_FORMAT
;

1613 if(
pArgs
->
⁄lyTe°IsLﬂdabÀ
) {

1623 
mbcsTabÀ
->
cou¡Sèãs
=(
uöt8_t
)
hódî
->countStates;

1624 
mbcsTabÀ
->
cou¡ToUFÆlbacks
=
hódî
->countToUFallbacks;

1625 
mbcsTabÀ
->
°©eTabÀ
=(c⁄° 
	`öt32_t
 (*)[256])(
øw
+
hódîLígth
*4);

1626 
mbcsTabÀ
->
toUFÆlbacks
=(c⁄° 
_MBCSToUFÆlback
 *)(mbcsTabÀ->
°©eTabÀ
+
hódî
->
cou¡Sèãs
);

1627 
mbcsTabÀ
->
unicodeCodeUnôs
=(c⁄° 
uöt16_t
 *)(
øw
+
hódî
->
off£tToUCodeUnôs
);

1629 
mbcsTabÀ
->
‰omUnicodeTabÀ
=(c⁄° 
uöt16_t
 *)(
øw
+
hódî
->
off£tFromUTabÀ
);

1630 
mbcsTabÀ
->
‰omUnicodeByãs
=(c⁄° 
uöt8_t
 *)(
øw
+
hódî
->
off£tFromUByãs
);

1631 
mbcsTabÀ
->
‰omUByãsLígth
=
hódî
->fromUBytesLength;

1637 
öfo
.
size
=(
UD©aInfo
);

1638 
	`ud©a_gëInfo
((
UD©aMem‹y
 *)
sh¨edD©a
->
d©aMem‹y
, &
öfo
);

1639 if(
öfo
.
f‹m©Vîsi⁄
[0]>6 || (info.formatVersion[0]==6 && info.formatVersion[1]>=1)) {

1641 
mbcsTabÀ
->
unicodeMask
=(
uöt8_t
)(
sh¨edD©a
->
°©icD©a
->unicodeMask&3);

1644 
mbcsTabÀ
->
unicodeMask
=
UCNV_HAS_SUPPLEMENTARY
|
UCNV_HAS_SURROGATES
;

1655 if–
hódî
->
vîsi⁄
[1]>=3 &&

1656 (
mbcsTabÀ
->
unicodeMask
&
UCNV_HAS_SURROGATES
)==0 &&

1657 (
mbcsTabÀ
->
cou¡Sèãs
==1 ?

1658 (
hódî
->
vîsi⁄
[2]>=(
SBCS_FAST_MAX
>>8)) :

1659 (
hódî
->
vîsi⁄
[2]>=(
MBCS_FAST_MAX
>>8))

1662 
mbcsTabÀ
->
utf8Frõndly
=
TRUE
;

1664 if(
mbcsTabÀ
->
cou¡Sèãs
==1) {

1670 
öt32_t
 
i
;

1671 
i
=0; i<(
SBCS_FAST_LIMIT
>>6); ++i) {

1672 
mbcsTabÀ
->
sbcsIndex
[
i
]=mbcsTabÀ->
‰omUnicodeTabÀ
[mbcsTable->fromUnicodeTable[i>>4]+((i<<2)&0x3c)];

1675 
mbcsTabÀ
->
maxFa°UCh¨
=
SBCS_FAST_MAX
;

1682 
mbcsTabÀ
->
mbcsIndex
=(c⁄° 
uöt16_t
 *)

1683 (
mbcsTabÀ
->
‰omUnicodeByãs
+

1684 (
noFromU
 ? 0 : 
mbcsTabÀ
->
‰omUByãsLígth
));

1685 
mbcsTabÀ
->
maxFa°UCh¨
=(((
UCh¨
)
hódî
->
vîsi⁄
[2])<<8)|0xff;

1691 
uöt32_t
 
asciiRoundåùs
=0xffffffff;

1692 
öt32_t
 
i
;

1694 
i
=0; i<0x80; ++i) {

1695 if(
mbcsTabÀ
->
°©eTabÀ
[0][
i
]!=
	`MBCS_ENTRY_FINAL
(0, 
MBCS_STATE_VALID_DIRECT_16
, i)) {

1696 
asciiRoundåùs
&=~((
uöt32_t
)1<<(
i
>>2));

1699 
mbcsTabÀ
->
asciiRoundåùs
=asciiRoundtrips;

1702 if(
noFromU
) {

1703 
uöt32_t
 
°age1Lígth
=

1704 
mbcsTabÀ
->
unicodeMask
&
UCNV_HAS_SUPPLEMENTARY
 ?

1706 
uöt32_t
 
°age2Lígth
=

1707 (
hódî
->
off£tFromUByãs
-hódî->
off£tFromUTabÀ
)/4-

1708 
°age1Lígth
/2;

1709 
	`ªc⁄°ôuãD©a
(
mbcsTabÀ
, 
°age1Lígth
, 
°age2Lígth
, 
hódî
->
fuŒSège2Lígth
, 
pEº‹Code
);

1714 if(
mbcsTabÀ
->
utf8Frõndly
) {

1715 if(
mbcsTabÀ
->
cou¡Sèãs
==1) {

1716 
sh¨edD©a
->
im∂
=&
_SBCSUTF8Im∂
;

1718 if(
mbcsTabÀ
->
ouçutTy≥
==
MBCS_OUTPUT_2
) {

1719 
sh¨edD©a
->
im∂
=&
_DBCSUTF8Im∂
;

1724 if(
mbcsTabÀ
->
ouçutTy≥
==
MBCS_OUTPUT_DBCS_ONLY
 || mbcsTabÀ->ouçutTy≥==
MBCS_OUTPUT_2_SISO
) {

1729 
mbcsTabÀ
->
asciiRoundåùs
=0;

1731 
	}
}

1734 
	$u˙v_MBCSU∆ﬂd
(
UC⁄vîãrSh¨edD©a
 *
sh¨edD©a
) {

1735 
UC⁄vîãrMBCSTabÀ
 *
mbcsTabÀ
=&
sh¨edD©a
->
mbcs
;

1737 if(
mbcsTabÀ
->
sw≠LFNLSèãTabÀ
!=
NULL
) {

1738 
	`u¥v_‰ì
(
mbcsTabÀ
->
sw≠LFNLSèãTabÀ
);

1740 if(
mbcsTabÀ
->
°©eTabÀOw√d
) {

1741 
	`u¥v_‰ì
((*)
mbcsTabÀ
->
°©eTabÀ
);

1743 if(
mbcsTabÀ
->
ba£Sh¨edD©a
!=
NULL
) {

1744 
	`u˙v_u∆ﬂd
(
mbcsTabÀ
->
ba£Sh¨edD©a
);

1746 if(
mbcsTabÀ
->
ªc⁄°ôuãdD©a
!=
NULL
) {

1747 
	`u¥v_‰ì
(
mbcsTabÀ
->
ªc⁄°ôuãdD©a
);

1749 
	}
}

1752 
	$u˙v_MBCSO≥n
(
UC⁄vîãr
 *
˙v
,

1753 
UC⁄vîãrLﬂdArgs
 *
pArgs
,

1754 
UEº‹Code
 *
pEº‹Code
) {

1755 
UC⁄vîãrMBCSTabÀ
 *
mbcsTabÀ
;

1756 c⁄° 
öt32_t
 *
extIndexes
;

1757 
uöt8_t
 
ouçutTy≥
;

1758 
öt8_t
 
maxByãsPîUCh¨
;

1760 if(
pArgs
->
⁄lyTe°IsLﬂdabÀ
) {

1764 
mbcsTabÀ
=&
˙v
->
sh¨edD©a
->
mbcs
;

1765 
ouçutTy≥
=
mbcsTabÀ
->outputType;

1767 if(
ouçutTy≥
==
MBCS_OUTPUT_DBCS_ONLY
) {

1769 
˙v
->
›ti⁄s
=
pArgs
->›ti⁄s&=~
UCNV_OPTION_SWAP_LFNL
;

1772 if((
pArgs
->
›ti⁄s
&
UCNV_OPTION_SWAP_LFNL
)!=0) {

1774 
UBoﬁ
 
isCached
;

1776 
	`umtx_lock
(
NULL
);

1777 
isCached
=
mbcsTabÀ
->
sw≠LFNLSèãTabÀ
!=
NULL
;

1778 
	`umtx_u∆ock
(
NULL
);

1780 if(!
isCached
) {

1781 if(!
	`_EBCDICSw≠LFNL
(
˙v
->
sh¨edD©a
, 
pEº‹Code
)) {

1782 if(
	`U_FAILURE
(*
pEº‹Code
)) {

1787 
˙v
->
›ti⁄s
=
pArgs
->›ti⁄s&=~
UCNV_OPTION_SWAP_LFNL
;

1792 if(
	`u¥v_°r°r
(
pArgs
->
«me
, "18030")!=
NULL
) {

1793 if(
	`u¥v_°r°r
(
pArgs
->
«me
, "gb18030")!=
NULL
 || uprv_strstr(pArgs->name, "GB18030")!=NULL) {

1795 
˙v
->
›ti⁄s
|=
_MBCS_OPTION_GB18030
;

1797 } if((
	`u¥v_°r°r
(
pArgs
->
«me
, "KEIS")!=
NULL
) || (uprv_strstr(pArgs->name, "keis")!=NULL)) {

1799 
˙v
->
›ti⁄s
|=
_MBCS_OPTION_KEIS
;

1800 } if((
	`u¥v_°r°r
(
pArgs
->
«me
, "JEF")!=
NULL
) || (uprv_strstr(pArgs->name, "jef")!=NULL)) {

1802 
˙v
->
›ti⁄s
|=
_MBCS_OPTION_JEF
;

1803 } if((
	`u¥v_°r°r
(
pArgs
->
«me
, "JIPS")!=
NULL
) || (uprv_strstr(pArgs->name, "jips")!=NULL)) {

1805 
˙v
->
›ti⁄s
|=
_MBCS_OPTION_JIPS
;

1809 if(
ouçutTy≥
==
MBCS_OUTPUT_2_SISO
) {

1810 
˙v
->
maxByãsPîUCh¨
=3;

1813 
extIndexes
=
mbcsTabÀ
->extIndexes;

1814 if(
extIndexes
!=
NULL
) {

1815 
maxByãsPîUCh¨
=(
öt8_t
)
	`UCNV_GET_MAX_BYTES_PER_UCHAR
(
extIndexes
);

1816 if(
ouçutTy≥
==
MBCS_OUTPUT_2_SISO
) {

1817 ++
maxByãsPîUCh¨
;

1820 if(
maxByãsPîUCh¨
>
˙v
->maxBytesPerUChar) {

1821 
˙v
->
maxByãsPîUCh¨
=maxBytesPerUChar;

1832 
˙v
->
toUnicodeSètus
=0;

1833 
˙v
->
mode
=0;

1834 
˙v
->
toULígth
=0;

1837 
˙v
->
‰omUCh¨32
=0;

1838 
˙v
->
‰omUnicodeSètus
=1;

1840 
	}
}

1843 
	$u˙v_MBCSGëName
(c⁄° 
UC⁄vîãr
 *
˙v
) {

1844 if((
˙v
->
›ti⁄s
&
UCNV_OPTION_SWAP_LFNL
)!=0 && cnv->
sh¨edD©a
->
mbcs
.
sw≠LFNLName
!=
NULL
) {

1845  
˙v
->
sh¨edD©a
->
mbcs
.
sw≠LFNLName
;

1847  
˙v
->
sh¨edD©a
->
°©icD©a
->
«me
;

1849 
	}
}

1853 
UCh¨32


1854 
	$u˙v_MBCSGëFÆlback
(
UC⁄vîãrMBCSTabÀ
 *
mbcsTabÀ
, 
uöt32_t
 
off£t
) {

1855 c⁄° 
_MBCSToUFÆlback
 *
toUFÆlbacks
;

1856 
uöt32_t
 
i
, 
°¨t
, 
limô
;

1858 
limô
=
mbcsTabÀ
->
cou¡ToUFÆlbacks
;

1859 if(
limô
>0) {

1861 
toUFÆlbacks
=
mbcsTabÀ
->toUFallbacks;

1862 
°¨t
=0;

1863 
°¨t
<
limô
-1) {

1864 
i
=(
°¨t
+
limô
)/2;

1865 if(
off£t
<
toUFÆlbacks
[
i
].offset) {

1866 
limô
=
i
;

1868 
°¨t
=
i
;

1873 if(
off£t
==
toUFÆlbacks
[
°¨t
].offset) {

1874  
toUFÆlbacks
[
°¨t
].
codePoöt
;

1879 
	}
}

1883 
	$u˙v_MBCSSögÀToUnicodeWôhOff£ts
(
UC⁄vîãrToUnicodeArgs
 *
pArgs
,

1884 
UEº‹Code
 *
pEº‹Code
) {

1885 
UC⁄vîãr
 *
˙v
;

1886 c⁄° 
uöt8_t
 *
sour˚
, *
sour˚Limô
;

1887 
UCh¨
 *
èrgë
;

1888 c⁄° 
UCh¨
 *
èrgëLimô
;

1889 
öt32_t
 *
off£ts
;

1891 c⁄° 
	`öt32_t
 (*
°©eTabÀ
)[256];

1893 
öt32_t
 
sour˚Index
;

1895 
öt32_t
 
íåy
;

1896 
UCh¨
 
c
;

1897 
uöt8_t
 
a˘i⁄
;

1900 
˙v
=
pArgs
->
c⁄vîãr
;

1901 
sour˚
=(c⁄° 
uöt8_t
 *)
pArgs
->source;

1902 
sour˚Limô
=(c⁄° 
uöt8_t
 *)
pArgs
->sourceLimit;

1903 
èrgë
=
pArgs
->target;

1904 
èrgëLimô
=
pArgs
->targetLimit;

1905 
off£ts
=
pArgs
->offsets;

1907 if((
˙v
->
›ti⁄s
&
UCNV_OPTION_SWAP_LFNL
)!=0) {

1908 
°©eTabÀ
=(c⁄° 
	`öt32_t
 (*)[256])
˙v
->
sh¨edD©a
->
mbcs
.
sw≠LFNLSèãTabÀ
;

1910 
°©eTabÀ
=
˙v
->
sh¨edD©a
->
mbcs
.stateTable;

1914 
sour˚Index
=0;

1917 
sour˚
<
sour˚Limô
) {

1926 if(
èrgë
>=
èrgëLimô
) {

1928 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

1932 
íåy
=
°©eTabÀ
[0][*
sour˚
++];

1936 if(
	`MBCS_ENTRY_FINAL_IS_VALID_DIRECT_16
(
íåy
)) {

1938 *
èrgë
++=(
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

1939 if(
off£ts
!=
NULL
) {

1940 *
off£ts
++=
sour˚Index
;

1944 ++
sour˚Index
;

1952 
a˘i⁄
=(
uöt8_t
)(
	`MBCS_ENTRY_FINAL_ACTION
(
íåy
));

1953 if(
a˘i⁄
==
MBCS_STATE_VALID_DIRECT_20
 ||

1954 (
a˘i⁄
==
MBCS_STATE_FALLBACK_DIRECT_20
 && 
	`UCNV_TO_U_USE_FALLBACK
(
˙v
))

1956 
íåy
=
	`MBCS_ENTRY_FINAL_VALUE
(entry);

1958 *
èrgë
++=(
UCh¨
)(0xd800|(UCh¨)(
íåy
>>10));

1959 if(
off£ts
!=
NULL
) {

1960 *
off£ts
++=
sour˚Index
;

1962 
c
=(
UCh¨
)(0xdc00|(UCh¨)(
íåy
&0x3ff));

1963 if(
èrgë
<
èrgëLimô
) {

1964 *
èrgë
++=
c
;

1965 if(
off£ts
!=
NULL
) {

1966 *
off£ts
++=
sour˚Index
;

1970 
˙v
->
UCh¨Eº‹Buf„r
[0]=
c
;

1971 
˙v
->
UCh¨Eº‹Buf„rLígth
=1;

1972 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

1976 ++
sour˚Index
;

1978 } if(
a˘i⁄
==
MBCS_STATE_FALLBACK_DIRECT_16
) {

1979 if(
	`UCNV_TO_U_USE_FALLBACK
(
˙v
)) {

1981 *
èrgë
++=(
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

1982 if(
off£ts
!=
NULL
) {

1983 *
off£ts
++=
sour˚Index
;

1986 ++
sour˚Index
;

1989 } if(
a˘i⁄
==
MBCS_STATE_UNASSIGNED
) {

1991 } if(
a˘i⁄
==
MBCS_STATE_ILLEGAL
) {

1993 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

1996 ++
sour˚Index
;

2000 if(
	`U_FAILURE
(*
pEº‹Code
)) {

2005 
pArgs
->
sour˚
=(const *)source;

2006 
˙v
->
toUByãs
[0]=*(
sour˚
-1);

2007 
˙v
->
toULígth
=
	`_extToU
(˙v, cnv->
sh¨edD©a
,

2008 1, &
sour˚
, 
sour˚Limô
,

2009 &
èrgë
, 
èrgëLimô
,

2010 &
off£ts
, 
sour˚Index
,

2011 
pArgs
->
Êush
,

2012 
pEº‹Code
);

2013 
sour˚Index
+=1+(
öt32_t
)(
sour˚
-(c⁄° 
uöt8_t
 *)
pArgs
->source);

2015 if(
	`U_FAILURE
(*
pEº‹Code
)) {

2023 
pArgs
->
sour˚
=(const *)source;

2024 
pArgs
->
èrgë
=target;

2025 
pArgs
->
off£ts
=offsets;

2026 
	}
}

2035 
	$u˙v_MBCSSögÀToBMPWôhOff£ts
(
UC⁄vîãrToUnicodeArgs
 *
pArgs
,

2036 
UEº‹Code
 *
pEº‹Code
) {

2037 
UC⁄vîãr
 *
˙v
;

2038 c⁄° 
uöt8_t
 *
sour˚
, *
sour˚Limô
, *
œ°Sour˚
;

2039 
UCh¨
 *
èrgë
;

2040 
öt32_t
 
èrgëC≠acôy
, 
Àngth
;

2041 
öt32_t
 *
off£ts
;

2043 c⁄° 
	`öt32_t
 (*
°©eTabÀ
)[256];

2045 
öt32_t
 
sour˚Index
;

2047 
öt32_t
 
íåy
;

2048 
uöt8_t
 
a˘i⁄
;

2051 
˙v
=
pArgs
->
c⁄vîãr
;

2052 
sour˚
=(c⁄° 
uöt8_t
 *)
pArgs
->source;

2053 
sour˚Limô
=(c⁄° 
uöt8_t
 *)
pArgs
->sourceLimit;

2054 
èrgë
=
pArgs
->target;

2055 
èrgëC≠acôy
=(
öt32_t
)(
pArgs
->
èrgëLimô
-pArgs->
èrgë
);

2056 
off£ts
=
pArgs
->offsets;

2058 if((
˙v
->
›ti⁄s
&
UCNV_OPTION_SWAP_LFNL
)!=0) {

2059 
°©eTabÀ
=(c⁄° 
	`öt32_t
 (*)[256])
˙v
->
sh¨edD©a
->
mbcs
.
sw≠LFNLSèãTabÀ
;

2061 
°©eTabÀ
=
˙v
->
sh¨edD©a
->
mbcs
.stateTable;

2065 
sour˚Index
=0;

2066 
œ°Sour˚
=
sour˚
;

2072 
Àngth
=(
öt32_t
)(
sour˚Limô
-
sour˚
);

2073 if(
Àngth
<
èrgëC≠acôy
) {

2074 
èrgëC≠acôy
=
Àngth
;

2077 #i‡
MBCS_UNROLL_SINGLE_TO_BMP


2080 
uƒﬁÀd
:

2081 if(
èrgëC≠acôy
>=16) {

2082 
öt32_t
 
cou¡
, 
lo›s
, 
‹edE¡rõs
;

2084 
lo›s
=
cou¡
=
èrgëC≠acôy
>>4;

2086 
‹edE¡rõs
=
íåy
=
°©eTabÀ
[0][*
sour˚
++];

2087 *
èrgë
++=(
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

2088 
‹edE¡rõs
|=
íåy
=
°©eTabÀ
[0][*
sour˚
++];

2089 *
èrgë
++=(
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

2090 
‹edE¡rõs
|=
íåy
=
°©eTabÀ
[0][*
sour˚
++];

2091 *
èrgë
++=(
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

2092 
‹edE¡rõs
|=
íåy
=
°©eTabÀ
[0][*
sour˚
++];

2093 *
èrgë
++=(
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

2094 
‹edE¡rõs
|=
íåy
=
°©eTabÀ
[0][*
sour˚
++];

2095 *
èrgë
++=(
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

2096 
‹edE¡rõs
|=
íåy
=
°©eTabÀ
[0][*
sour˚
++];

2097 *
èrgë
++=(
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

2098 
‹edE¡rõs
|=
íåy
=
°©eTabÀ
[0][*
sour˚
++];

2099 *
èrgë
++=(
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

2100 
‹edE¡rõs
|=
íåy
=
°©eTabÀ
[0][*
sour˚
++];

2101 *
èrgë
++=(
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

2102 
‹edE¡rõs
|=
íåy
=
°©eTabÀ
[0][*
sour˚
++];

2103 *
èrgë
++=(
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

2104 
‹edE¡rõs
|=
íåy
=
°©eTabÀ
[0][*
sour˚
++];

2105 *
èrgë
++=(
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

2106 
‹edE¡rõs
|=
íåy
=
°©eTabÀ
[0][*
sour˚
++];

2107 *
èrgë
++=(
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

2108 
‹edE¡rõs
|=
íåy
=
°©eTabÀ
[0][*
sour˚
++];

2109 *
èrgë
++=(
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

2110 
‹edE¡rõs
|=
íåy
=
°©eTabÀ
[0][*
sour˚
++];

2111 *
èrgë
++=(
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

2112 
‹edE¡rõs
|=
íåy
=
°©eTabÀ
[0][*
sour˚
++];

2113 *
èrgë
++=(
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

2114 
‹edE¡rõs
|=
íåy
=
°©eTabÀ
[0][*
sour˚
++];

2115 *
èrgë
++=(
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

2116 
‹edE¡rõs
|=
íåy
=
°©eTabÀ
[0][*
sour˚
++];

2117 *
èrgë
++=(
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

2120 if(!
	`MBCS_ENTRY_FINAL_IS_VALID_DIRECT_16
(
‹edE¡rõs
)) {

2122 
sour˚
-=16;

2123 
èrgë
-=16;

2126 } --
cou¡
>0);

2127 
cou¡
=
lo›s
-count;

2128 
èrgëC≠acôy
-=16*
cou¡
;

2130 if(
off£ts
!=
NULL
) {

2131 
œ°Sour˚
+=16*
cou¡
;

2132 
cou¡
>0) {

2133 *
off£ts
++=
sour˚Index
++;

2134 *
off£ts
++=
sour˚Index
++;

2135 *
off£ts
++=
sour˚Index
++;

2136 *
off£ts
++=
sour˚Index
++;

2137 *
off£ts
++=
sour˚Index
++;

2138 *
off£ts
++=
sour˚Index
++;

2139 *
off£ts
++=
sour˚Index
++;

2140 *
off£ts
++=
sour˚Index
++;

2141 *
off£ts
++=
sour˚Index
++;

2142 *
off£ts
++=
sour˚Index
++;

2143 *
off£ts
++=
sour˚Index
++;

2144 *
off£ts
++=
sour˚Index
++;

2145 *
off£ts
++=
sour˚Index
++;

2146 *
off£ts
++=
sour˚Index
++;

2147 *
off£ts
++=
sour˚Index
++;

2148 *
off£ts
++=
sour˚Index
++;

2149 --
cou¡
;

2156 
èrgëC≠acôy
 > 0 && 
sour˚
 < 
sour˚Limô
) {

2157 
íåy
=
°©eTabÀ
[0][*
sour˚
++];

2161 if(
	`MBCS_ENTRY_FINAL_IS_VALID_DIRECT_16
(
íåy
)) {

2163 *
èrgë
++=(
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

2164 --
èrgëC≠acôy
;

2172 
a˘i⁄
=(
uöt8_t
)(
	`MBCS_ENTRY_FINAL_ACTION
(
íåy
));

2173 if(
a˘i⁄
==
MBCS_STATE_FALLBACK_DIRECT_16
) {

2174 if(
	`UCNV_TO_U_USE_FALLBACK
(
˙v
)) {

2176 *
èrgë
++=(
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

2177 --
èrgëC≠acôy
;

2180 } if(
a˘i⁄
==
MBCS_STATE_UNASSIGNED
) {

2182 } if(
a˘i⁄
==
MBCS_STATE_ILLEGAL
) {

2184 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

2191 if(
off£ts
!=
NULL
) {

2192 
öt32_t
 
cou¡
=(öt32_t)(
sour˚
-
œ°Sour˚
);

2195 --
cou¡
>0) {

2196 *
off£ts
++=
sour˚Index
++;

2201 if(
	`U_FAILURE
(*
pEº‹Code
)) {

2206 
œ°Sour˚
=
sour˚
;

2207 
˙v
->
toUByãs
[0]=*(
sour˚
-1);

2208 
˙v
->
toULígth
=
	`_extToU
(˙v, cnv->
sh¨edD©a
,

2209 1, &
sour˚
, 
sour˚Limô
,

2210 &
èrgë
, 
pArgs
->
èrgëLimô
,

2211 &
off£ts
, 
sour˚Index
,

2212 
pArgs
->
Êush
,

2213 
pEº‹Code
);

2214 
sour˚Index
+=1+(
öt32_t
)(
sour˚
-
œ°Sour˚
);

2216 if(
	`U_FAILURE
(*
pEº‹Code
)) {

2222 
èrgëC≠acôy
=(
öt32_t
)(
pArgs
->
èrgëLimô
-
èrgë
);

2223 
Àngth
=(
öt32_t
)(
sour˚Limô
-
sour˚
);

2224 if(
Àngth
<
èrgëC≠acôy
) {

2225 
èrgëC≠acôy
=
Àngth
;

2229 #i‡
MBCS_UNROLL_SINGLE_TO_BMP


2231 
uƒﬁÀd
;

2235 if(
	`U_SUCCESS
(*
pEº‹Code
Ë&& 
sour˚
<
sour˚Limô
 && 
èrgë
>=
pArgs
->
èrgëLimô
) {

2237 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

2241 if(
off£ts
!=
NULL
) {

2242 
size_t
 
cou¡
=
sour˚
-
œ°Sour˚
;

2243 
cou¡
>0) {

2244 *
off£ts
++=
sour˚Index
++;

2245 --
cou¡
;

2250 
pArgs
->
sour˚
=(const *)source;

2251 
pArgs
->
èrgë
=target;

2252 
pArgs
->
off£ts
=offsets;

2253 
	}
}

2255 
UBoﬁ


2256 
hasVÆidTøûByãs
(c⁄° 
öt32_t
 (*
°©eTabÀ
)[256], 
uöt8_t
 
°©e
) {

2257 c⁄° 
öt32_t
 *
	grow
=
°©eTabÀ
[
°©e
];

2258 
öt32_t
 
	gb
, 
	gíåy
;

2260 
	gíåy
=
row
[0xa1];

2261 if–!
MBCS_ENTRY_IS_TRANSITION
(
íåy
) &&

2262 
MBCS_ENTRY_FINAL_ACTION
(
íåy
)!=
MBCS_STATE_ILLEGAL


2264  
TRUE
;

2266 
	gíåy
=
row
[0x41];

2267 if–!
MBCS_ENTRY_IS_TRANSITION
(
íåy
) &&

2268 
MBCS_ENTRY_FINAL_ACTION
(
íåy
)!=
MBCS_STATE_ILLEGAL


2270  
TRUE
;

2273 
	gb
=0; b<=0xff; ++b) {

2274 
	gíåy
=
row
[
b
];

2275 if–!
MBCS_ENTRY_IS_TRANSITION
(
íåy
) &&

2276 
MBCS_ENTRY_FINAL_ACTION
(
íåy
)!=
MBCS_STATE_ILLEGAL


2278  
TRUE
;

2282 
	gb
=0; b<=0xff; ++b) {

2283 
	gíåy
=
row
[
b
];

2284 if–
MBCS_ENTRY_IS_TRANSITION
(
íåy
) &&

2285 
hasVÆidTøûByãs
(
°©eTabÀ
, (
uöt8_t
)
MBCS_ENTRY_TRANSITION_STATE
(
íåy
))

2287  
	gTRUE
;

2290  
	gFALSE
;

2298 
UBoﬁ


2299 
isSögÀOrLód
(c⁄° 
öt32_t
 (*
°©eTabÀ
)[256], 
uöt8_t
 
°©e
, 
UBoﬁ
 
isDBCSO∆y
, uöt8_à
b
) {

2300 c⁄° 
öt32_t
 *
	grow
=
°©eTabÀ
[
°©e
];

2301 
öt32_t
 
	gíåy
=
row
[
b
];

2302 if(
MBCS_ENTRY_IS_TRANSITION
(
íåy
)) {

2303  
hasVÆidTøûByãs
(
°©eTabÀ
, (
uöt8_t
)
MBCS_ENTRY_TRANSITION_STATE
(
íåy
));

2305 
uöt8_t
 
	ga˘i⁄
=(uöt8_t)(
MBCS_ENTRY_FINAL_ACTION
(
íåy
));

2306 if(
	ga˘i⁄
==
MBCS_STATE_CHANGE_ONLY
 && 
isDBCSO∆y
) {

2307  
FALSE
;

2309  
	ga˘i⁄
!=
MBCS_STATE_ILLEGAL
;

2314 
U_CFUNC
 

2315 
	$u˙v_MBCSToUnicodeWôhOff£ts
(
UC⁄vîãrToUnicodeArgs
 *
pArgs
,

2316 
UEº‹Code
 *
pEº‹Code
) {

2317 
UC⁄vîãr
 *
˙v
;

2318 c⁄° 
uöt8_t
 *
sour˚
, *
sour˚Limô
;

2319 
UCh¨
 *
èrgë
;

2320 c⁄° 
UCh¨
 *
èrgëLimô
;

2321 
öt32_t
 *
off£ts
;

2323 c⁄° 
	`öt32_t
 (*
°©eTabÀ
)[256];

2324 c⁄° 
uöt16_t
 *
unicodeCodeUnôs
;

2326 
uöt32_t
 
off£t
;

2327 
uöt8_t
 
°©e
;

2328 
öt8_t
 
byãIndex
;

2329 
uöt8_t
 *
byãs
;

2331 
öt32_t
 
sour˚Index
, 
√xtSour˚Index
;

2333 
öt32_t
 
íåy
;

2334 
UCh¨
 
c
;

2335 
uöt8_t
 
a˘i⁄
;

2338 
˙v
=
pArgs
->
c⁄vîãr
;

2340 if(
˙v
->
¥eToULígth
>0) {

2345 
	`u˙v_extC⁄töueM©chToU
(
˙v
, 
pArgs
, -1, 
pEº‹Code
);

2347 if(
	`U_FAILURE
(*
pEº‹Code
Ë|| 
˙v
->
¥eToULígth
<0) {

2352 if(
˙v
->
sh¨edD©a
->
mbcs
.
cou¡Sèãs
==1) {

2353 if(!(
˙v
->
sh¨edD©a
->
mbcs
.
unicodeMask
&
UCNV_HAS_SUPPLEMENTARY
)) {

2354 
	`u˙v_MBCSSögÀToBMPWôhOff£ts
(
pArgs
, 
pEº‹Code
);

2356 
	`u˙v_MBCSSögÀToUnicodeWôhOff£ts
(
pArgs
, 
pEº‹Code
);

2362 
sour˚
=(c⁄° 
uöt8_t
 *)
pArgs
->source;

2363 
sour˚Limô
=(c⁄° 
uöt8_t
 *)
pArgs
->sourceLimit;

2364 
èrgë
=
pArgs
->target;

2365 
èrgëLimô
=
pArgs
->targetLimit;

2366 
off£ts
=
pArgs
->offsets;

2368 if((
˙v
->
›ti⁄s
&
UCNV_OPTION_SWAP_LFNL
)!=0) {

2369 
°©eTabÀ
=(c⁄° 
	`öt32_t
 (*)[256])
˙v
->
sh¨edD©a
->
mbcs
.
sw≠LFNLSèãTabÀ
;

2371 
°©eTabÀ
=
˙v
->
sh¨edD©a
->
mbcs
.stateTable;

2373 
unicodeCodeUnôs
=
˙v
->
sh¨edD©a
->
mbcs
.unicodeCodeUnits;

2376 
off£t
=
˙v
->
toUnicodeSètus
;

2377 
byãIndex
=
˙v
->
toULígth
;

2378 
byãs
=
˙v
->
toUByãs
;

2385 if((
°©e
=(
uöt8_t
)(
˙v
->
mode
))==0) {

2386 
°©e
=
˙v
->
sh¨edD©a
->
mbcs
.
dbcsO∆ySèã
;

2390 
sour˚Index
=
byãIndex
==0 ? 0 : -1;

2391 
√xtSour˚Index
=0;

2394 
sour˚
<
sour˚Limô
) {

2403 if(
èrgë
>=
èrgëLimô
) {

2405 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

2409 if(
byãIndex
==0) {

2411 if(
off£ts
==
NULL
) {

2413 
íåy
=
°©eTabÀ
[
°©e
][*
sour˚
];

2414 if(
	`MBCS_ENTRY_IS_TRANSITION
(
íåy
)) {

2415 
°©e
=(
uöt8_t
)
	`MBCS_ENTRY_TRANSITION_STATE
(
íåy
);

2416 
off£t
=
	`MBCS_ENTRY_TRANSITION_OFFSET
(
íåy
);

2418 ++
sour˚
;

2419 if–
sour˚
<
sour˚Limô
 &&

2420 
	`MBCS_ENTRY_IS_FINAL
(
íåy
=
°©eTabÀ
[
°©e
][*
sour˚
]) &&

2421 
	`MBCS_ENTRY_FINAL_ACTION
(
íåy
)==
MBCS_STATE_VALID_16
 &&

2422 (
c
=
unicodeCodeUnôs
[
off£t
+
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
)])<0xfffe

2424 ++
sour˚
;

2425 *
èrgë
++=
c
;

2426 
°©e
=(
uöt8_t
)
	`MBCS_ENTRY_FINAL_STATE
(
íåy
);

2427 
off£t
=0;

2430 
byãs
[0]=*(
sour˚
-1);

2431 
byãIndex
=1;

2435 if(
	`MBCS_ENTRY_FINAL_IS_VALID_DIRECT_16
(
íåy
)) {

2437 ++
sour˚
;

2438 *
èrgë
++=(
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

2439 
°©e
=(
uöt8_t
)
	`MBCS_ENTRY_FINAL_STATE
(
íåy
);

2445 } 
sour˚
<
sour˚Limô
 && 
èrgë
<
èrgëLimô
);

2448 
íåy
=
°©eTabÀ
[
°©e
][*
sour˚
];

2449 if(
	`MBCS_ENTRY_IS_TRANSITION
(
íåy
)) {

2450 
°©e
=(
uöt8_t
)
	`MBCS_ENTRY_TRANSITION_STATE
(
íåy
);

2451 
off£t
=
	`MBCS_ENTRY_TRANSITION_OFFSET
(
íåy
);

2453 ++
sour˚
;

2454 if–
sour˚
<
sour˚Limô
 &&

2455 
	`MBCS_ENTRY_IS_FINAL
(
íåy
=
°©eTabÀ
[
°©e
][*
sour˚
]) &&

2456 
	`MBCS_ENTRY_FINAL_ACTION
(
íåy
)==
MBCS_STATE_VALID_16
 &&

2457 (
c
=
unicodeCodeUnôs
[
off£t
+
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
)])<0xfffe

2459 ++
sour˚
;

2460 *
èrgë
++=
c
;

2461 if(
off£ts
!=
NULL
) {

2462 *
off£ts
++=
sour˚Index
;

2463 
sour˚Index
=(
√xtSour˚Index
+=2);

2465 
°©e
=(
uöt8_t
)
	`MBCS_ENTRY_FINAL_STATE
(
íåy
);

2466 
off£t
=0;

2469 ++
√xtSour˚Index
;

2470 
byãs
[0]=*(
sour˚
-1);

2471 
byãIndex
=1;

2475 if(
	`MBCS_ENTRY_FINAL_IS_VALID_DIRECT_16
(
íåy
)) {

2477 ++
sour˚
;

2478 *
èrgë
++=(
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

2479 if(
off£ts
!=
NULL
) {

2480 *
off£ts
++=
sour˚Index
;

2481 
sour˚Index
=++
√xtSour˚Index
;

2483 
°©e
=(
uöt8_t
)
	`MBCS_ENTRY_FINAL_STATE
(
íåy
);

2489 } 
sour˚
<
sour˚Limô
 && 
èrgë
<
èrgëLimô
);

2496 if(
sour˚
>=
sour˚Limô
) {

2499 if(
èrgë
>=
èrgëLimô
) {

2501 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

2505 ++
√xtSour˚Index
;

2506 
byãs
[
byãIndex
++]=*
sour˚
++;

2508 ++
√xtSour˚Index
;

2509 
íåy
=
°©eTabÀ
[
°©e
][
byãs
[
byãIndex
++]=*
sour˚
++];

2512 if(
	`MBCS_ENTRY_IS_TRANSITION
(
íåy
)) {

2513 
°©e
=(
uöt8_t
)
	`MBCS_ENTRY_TRANSITION_STATE
(
íåy
);

2514 
off£t
+=
	`MBCS_ENTRY_TRANSITION_OFFSET
(
íåy
);

2519 
˙v
->
mode
=
°©e
;

2522 
°©e
=(
uöt8_t
)
	`MBCS_ENTRY_FINAL_STATE
(
íåy
);

2528 
a˘i⁄
=(
uöt8_t
)(
	`MBCS_ENTRY_FINAL_ACTION
(
íåy
));

2529 if(
a˘i⁄
==
MBCS_STATE_VALID_16
) {

2530 
off£t
+=
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

2531 
c
=
unicodeCodeUnôs
[
off£t
];

2532 if(
c
<0xfffe) {

2534 *
èrgë
++=
c
;

2535 if(
off£ts
!=
NULL
) {

2536 *
off£ts
++=
sour˚Index
;

2538 
byãIndex
=0;

2539 } if(
c
==0xfffe) {

2540 if(
	`UCNV_TO_U_USE_FALLBACK
(
˙v
Ë&& (
íåy
=(
öt32_t
)
	`u˙v_MBCSGëFÆlback
(&˙v->
sh¨edD©a
->
mbcs
, 
off£t
))!=0xfffe) {

2542 *
èrgë
++=(
UCh¨
)
íåy
;

2543 if(
off£ts
!=
NULL
) {

2544 *
off£ts
++=
sour˚Index
;

2546 
byãIndex
=0;

2550 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

2552 } if(
a˘i⁄
==
MBCS_STATE_VALID_DIRECT_16
) {

2554 *
èrgë
++=(
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

2555 if(
off£ts
!=
NULL
) {

2556 *
off£ts
++=
sour˚Index
;

2558 
byãIndex
=0;

2559 } if(
a˘i⁄
==
MBCS_STATE_VALID_16_PAIR
) {

2560 
off£t
+=
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

2561 
c
=
unicodeCodeUnôs
[
off£t
++];

2562 if(
c
<0xd800) {

2564 *
èrgë
++=
c
;

2565 if(
off£ts
!=
NULL
) {

2566 *
off£ts
++=
sour˚Index
;

2568 
byãIndex
=0;

2569 } if(
	`UCNV_TO_U_USE_FALLBACK
(
˙v
Ë? 
c
<=0xdfff : c<=0xdbff) {

2571 *
èrgë
++=(
UCh¨
)(
c
&0xdbff);

2572 if(
off£ts
!=
NULL
) {

2573 *
off£ts
++=
sour˚Index
;

2575 
byãIndex
=0;

2576 if(
èrgë
<
èrgëLimô
) {

2577 *
èrgë
++=
unicodeCodeUnôs
[
off£t
];

2578 if(
off£ts
!=
NULL
) {

2579 *
off£ts
++=
sour˚Index
;

2583 
˙v
->
UCh¨Eº‹Buf„r
[0]=
unicodeCodeUnôs
[
off£t
];

2584 
˙v
->
UCh¨Eº‹Buf„rLígth
=1;

2585 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

2587 
off£t
=0;

2590 } if(
	`UCNV_TO_U_USE_FALLBACK
(
˙v
Ë? (
c
&0xfffe)==0xe000 : c==0xe000) {

2592 *
èrgë
++=
unicodeCodeUnôs
[
off£t
];

2593 if(
off£ts
!=
NULL
) {

2594 *
off£ts
++=
sour˚Index
;

2596 
byãIndex
=0;

2597 } if(
c
==0xffff) {

2599 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

2601 } if(
a˘i⁄
==
MBCS_STATE_VALID_DIRECT_20
 ||

2602 (
a˘i⁄
==
MBCS_STATE_FALLBACK_DIRECT_20
 && 
	`UCNV_TO_U_USE_FALLBACK
(
˙v
))

2604 
íåy
=
	`MBCS_ENTRY_FINAL_VALUE
(entry);

2606 *
èrgë
++=(
UCh¨
)(0xd800|(UCh¨)(
íåy
>>10));

2607 if(
off£ts
!=
NULL
) {

2608 *
off£ts
++=
sour˚Index
;

2610 
byãIndex
=0;

2611 
c
=(
UCh¨
)(0xdc00|(UCh¨)(
íåy
&0x3ff));

2612 if(
èrgë
<
èrgëLimô
) {

2613 *
èrgë
++=
c
;

2614 if(
off£ts
!=
NULL
) {

2615 *
off£ts
++=
sour˚Index
;

2619 
˙v
->
UCh¨Eº‹Buf„r
[0]=
c
;

2620 
˙v
->
UCh¨Eº‹Buf„rLígth
=1;

2621 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

2623 
off£t
=0;

2626 } if(
a˘i⁄
==
MBCS_STATE_CHANGE_ONLY
) {

2634 if(
˙v
->
sh¨edD©a
->
mbcs
.
dbcsO∆ySèã
==0) {

2635 
byãIndex
=0;

2638 
°©e
=(
uöt8_t
)(
˙v
->
mode
);

2641 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

2643 } if(
a˘i⁄
==
MBCS_STATE_FALLBACK_DIRECT_16
) {

2644 if(
	`UCNV_TO_U_USE_FALLBACK
(
˙v
)) {

2646 *
èrgë
++=(
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

2647 if(
off£ts
!=
NULL
) {

2648 *
off£ts
++=
sour˚Index
;

2650 
byãIndex
=0;

2652 } if(
a˘i⁄
==
MBCS_STATE_UNASSIGNED
) {

2654 } if(
a˘i⁄
==
MBCS_STATE_ILLEGAL
) {

2656 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

2659 
byãIndex
=0;

2663 
off£t
=0;

2665 if(
byãIndex
==0) {

2666 
sour˚Index
=
√xtSour˚Index
;

2667 } if(
	`U_FAILURE
(*
pEº‹Code
)) {

2669 if(
byãIndex
>1) {

2676 
UBoﬁ
 
isDBCSO∆y
=(UBoﬁ)(
˙v
->
sh¨edD©a
->
mbcs
.
dbcsO∆ySèã
!=0);

2677 
öt8_t
 
i
;

2678 
i
=1;

2679 
i
<
byãIndex
 && !
	`isSögÀOrLód
(
°©eTabÀ
, 
°©e
, 
isDBCSO∆y
, 
byãs
[i]);

2680 ++
i
) {}

2681 if(
i
<
byãIndex
) {

2683 
öt8_t
 
backOutDi°™˚
=
byãIndex
-
i
;

2684 
öt32_t
 
byãsFromThisBuf„r
=(öt32_t)(
sour˚
-(c⁄° 
uöt8_t
 *)
pArgs
->source);

2685 
byãIndex
=
i
;

2686 if(
backOutDi°™˚
<=
byãsFromThisBuf„r
) {

2687 
sour˚
-=
backOutDi°™˚
;

2690 
˙v
->
¥eToULígth
=(
öt8_t
)(
byãsFromThisBuf„r
-
backOutDi°™˚
);

2692 
	`u¥v_mem˝y
(
˙v
->
¥eToU
, 
byãs
+
i
, -˙v->
¥eToULígth
);

2693 
sour˚
=(c⁄° 
uöt8_t
 *)
pArgs
->source;

2700 
pArgs
->
sour˚
=(const *)source;

2701 
byãIndex
=
	`_extToU
(
˙v
, cnv->
sh¨edD©a
,

2702 
byãIndex
, &
sour˚
, 
sour˚Limô
,

2703 &
èrgë
, 
èrgëLimô
,

2704 &
off£ts
, 
sour˚Index
,

2705 
pArgs
->
Êush
,

2706 
pEº‹Code
);

2707 
sour˚Index
=
√xtSour˚Index
+=(
öt32_t
)(
sour˚
-(c⁄° 
uöt8_t
 *)
pArgs
->source);

2709 if(
	`U_FAILURE
(*
pEº‹Code
)) {

2717 
˙v
->
toUnicodeSètus
=
off£t
;

2718 
˙v
->
mode
=
°©e
;

2719 
˙v
->
toULígth
=
byãIndex
;

2722 
pArgs
->
sour˚
=(const *)source;

2723 
pArgs
->
èrgë
=target;

2724 
pArgs
->
off£ts
=offsets;

2725 
	}
}

2731 
UCh¨32


2732 
	$u˙v_MBCSSögÀGëNextUCh¨
(
UC⁄vîãrToUnicodeArgs
 *
pArgs
,

2733 
UEº‹Code
 *
pEº‹Code
) {

2734 
UC⁄vîãr
 *
˙v
;

2735 c⁄° 
	`öt32_t
 (*
°©eTabÀ
)[256];

2736 c⁄° 
uöt8_t
 *
sour˚
, *
sour˚Limô
;

2738 
öt32_t
 
íåy
;

2739 
uöt8_t
 
a˘i⁄
;

2742 
˙v
=
pArgs
->
c⁄vîãr
;

2743 
sour˚
=(c⁄° 
uöt8_t
 *)
pArgs
->source;

2744 
sour˚Limô
=(c⁄° 
uöt8_t
 *)
pArgs
->sourceLimit;

2745 if((
˙v
->
›ti⁄s
&
UCNV_OPTION_SWAP_LFNL
)!=0) {

2746 
°©eTabÀ
=(c⁄° 
	`öt32_t
 (*)[256])
˙v
->
sh¨edD©a
->
mbcs
.
sw≠LFNLSèãTabÀ
;

2748 
°©eTabÀ
=
˙v
->
sh¨edD©a
->
mbcs
.stateTable;

2752 
sour˚
<
sour˚Limô
) {

2753 
íåy
=
°©eTabÀ
[0][*
sour˚
++];

2757 
pArgs
->
sour˚
=(const *)source;

2759 if(
	`MBCS_ENTRY_FINAL_IS_VALID_DIRECT_16
(
íåy
)) {

2761  (
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

2768 
a˘i⁄
=(
uöt8_t
)(
	`MBCS_ENTRY_FINAL_ACTION
(
íåy
));

2769 if–
a˘i⁄
==
MBCS_STATE_VALID_DIRECT_20
 ||

2770 (
a˘i⁄
==
MBCS_STATE_FALLBACK_DIRECT_20
 && 
	`UCNV_TO_U_USE_FALLBACK
(
˙v
))

2773  (
UCh¨32
)(
	`MBCS_ENTRY_FINAL_VALUE
(
íåy
)+0x10000);

2774 } if(
a˘i⁄
==
MBCS_STATE_FALLBACK_DIRECT_16
) {

2775 if(
	`UCNV_TO_U_USE_FALLBACK
(
˙v
)) {

2777  (
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

2779 } if(
a˘i⁄
==
MBCS_STATE_UNASSIGNED
) {

2781 } if(
a˘i⁄
==
MBCS_STATE_ILLEGAL
) {

2783 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

2789 if(
	`U_FAILURE
(*
pEº‹Code
)) {

2794 
pArgs
->
sour˚
=(const *)source-1;

2795  
UCNV_GET_NEXT_UCHAR_USE_TO_U
;

2800 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

2802 
	}
}

2816 
UCh¨32


2817 
	$u˙v_MBCSGëNextUCh¨
(
UC⁄vîãrToUnicodeArgs
 *
pArgs
,

2818 
UEº‹Code
 *
pEº‹Code
) {

2819 
UC⁄vîãr
 *
˙v
;

2820 c⁄° 
uöt8_t
 *
sour˚
, *
sour˚Limô
, *
œ°Sour˚
;

2822 c⁄° 
	`öt32_t
 (*
°©eTabÀ
)[256];

2823 c⁄° 
uöt16_t
 *
unicodeCodeUnôs
;

2825 
uöt32_t
 
off£t
;

2826 
uöt8_t
 
°©e
;

2828 
öt32_t
 
íåy
;

2829 
UCh¨32
 
c
;

2830 
uöt8_t
 
a˘i⁄
;

2833 
˙v
=
pArgs
->
c⁄vîãr
;

2835 if(
˙v
->
¥eToULígth
>0) {

2837  
UCNV_GET_NEXT_UCHAR_USE_TO_U
;

2840 if(
˙v
->
sh¨edD©a
->
mbcs
.
unicodeMask
&
UCNV_HAS_SURROGATES
) {

2846  
UCNV_GET_NEXT_UCHAR_USE_TO_U
;

2847 } if(
˙v
->
sh¨edD©a
->
mbcs
.
cou¡Sèãs
==1) {

2848  
	`u˙v_MBCSSögÀGëNextUCh¨
(
pArgs
, 
pEº‹Code
);

2852 
sour˚
=
œ°Sour˚
=(c⁄° 
uöt8_t
 *)
pArgs
->source;

2853 
sour˚Limô
=(c⁄° 
uöt8_t
 *)
pArgs
->sourceLimit;

2855 if((
˙v
->
›ti⁄s
&
UCNV_OPTION_SWAP_LFNL
)!=0) {

2856 
°©eTabÀ
=(c⁄° 
	`öt32_t
 (*)[256])
˙v
->
sh¨edD©a
->
mbcs
.
sw≠LFNLSèãTabÀ
;

2858 
°©eTabÀ
=
˙v
->
sh¨edD©a
->
mbcs
.stateTable;

2860 
unicodeCodeUnôs
=
˙v
->
sh¨edD©a
->
mbcs
.unicodeCodeUnits;

2863 
off£t
=
˙v
->
toUnicodeSètus
;

2870 if((
°©e
=(
uöt8_t
)(
˙v
->
mode
))==0) {

2871 
°©e
=
˙v
->
sh¨edD©a
->
mbcs
.
dbcsO∆ySèã
;

2875 
c
=
U_SENTINEL
;

2876 
sour˚
<
sour˚Limô
) {

2877 
íåy
=
°©eTabÀ
[
°©e
][*
sour˚
++];

2878 if(
	`MBCS_ENTRY_IS_TRANSITION
(
íåy
)) {

2879 
°©e
=(
uöt8_t
)
	`MBCS_ENTRY_TRANSITION_STATE
(
íåy
);

2880 
off£t
+=
	`MBCS_ENTRY_TRANSITION_OFFSET
(
íåy
);

2883 if–
sour˚
<
sour˚Limô
 &&

2884 
	`MBCS_ENTRY_IS_FINAL
(
íåy
=
°©eTabÀ
[
°©e
][*
sour˚
]) &&

2885 
	`MBCS_ENTRY_FINAL_ACTION
(
íåy
)==
MBCS_STATE_VALID_16
 &&

2886 (
c
=
unicodeCodeUnôs
[
off£t
+
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
)])<0xfffe

2888 ++
sour˚
;

2889 
°©e
=(
uöt8_t
)
	`MBCS_ENTRY_FINAL_STATE
(
íåy
);

2895 
˙v
->
mode
=
°©e
;

2898 
°©e
=(
uöt8_t
)
	`MBCS_ENTRY_FINAL_STATE
(
íåy
);

2904 
a˘i⁄
=(
uöt8_t
)(
	`MBCS_ENTRY_FINAL_ACTION
(
íåy
));

2905 if(
a˘i⁄
==
MBCS_STATE_VALID_DIRECT_16
) {

2907 
c
=(
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

2909 } if(
a˘i⁄
==
MBCS_STATE_VALID_16
) {

2910 
off£t
+=
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

2911 
c
=
unicodeCodeUnôs
[
off£t
];

2912 if(
c
<0xfffe) {

2915 } if(
c
==0xfffe) {

2916 if(
	`UCNV_TO_U_USE_FALLBACK
(
˙v
Ë&& (
c
=
	`u˙v_MBCSGëFÆlback
(&˙v->
sh¨edD©a
->
mbcs
, 
off£t
))!=0xfffe) {

2921 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

2923 } if(
a˘i⁄
==
MBCS_STATE_VALID_16_PAIR
) {

2924 
off£t
+=
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

2925 
c
=
unicodeCodeUnôs
[
off£t
++];

2926 if(
c
<0xd800) {

2929 } if(
	`UCNV_TO_U_USE_FALLBACK
(
˙v
Ë? 
c
<=0xdfff : c<=0xdbff) {

2931 
c
=((c&0x3ff)<<10)+
unicodeCodeUnôs
[
off£t
]+(0x10000-0xdc00);

2933 } if(
	`UCNV_TO_U_USE_FALLBACK
(
˙v
Ë? (
c
&0xfffe)==0xe000 : c==0xe000) {

2935 
c
=
unicodeCodeUnôs
[
off£t
];

2937 } if(
c
==0xffff) {

2939 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

2941 } if(
a˘i⁄
==
MBCS_STATE_VALID_DIRECT_20
 ||

2942 (
a˘i⁄
==
MBCS_STATE_FALLBACK_DIRECT_20
 && 
	`UCNV_TO_U_USE_FALLBACK
(
˙v
))

2945 
c
=(
UCh¨32
)(
	`MBCS_ENTRY_FINAL_VALUE
(
íåy
)+0x10000);

2947 } if(
a˘i⁄
==
MBCS_STATE_CHANGE_ONLY
) {

2955 if(
˙v
->
sh¨edD©a
->
mbcs
.
dbcsO∆ySèã
!=0) {

2957 
°©e
=(
uöt8_t
)(
˙v
->
mode
);

2960 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

2962 } if(
a˘i⁄
==
MBCS_STATE_FALLBACK_DIRECT_16
) {

2963 if(
	`UCNV_TO_U_USE_FALLBACK
(
˙v
)) {

2965 
c
=(
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

2968 } if(
a˘i⁄
==
MBCS_STATE_UNASSIGNED
) {

2970 } if(
a˘i⁄
==
MBCS_STATE_ILLEGAL
) {

2972 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

2975 
off£t
=0;

2976 
œ°Sour˚
=
sour˚
;

2981 
off£t
=0;

2983 if(
	`U_FAILURE
(*
pEº‹Code
)) {

2988 
˙v
->
toUnicodeSètus
=0;

2989 
˙v
->
mode
=
°©e
;

2990 
pArgs
->
sour˚
=(c⁄° *)
œ°Sour˚
;

2991  
UCNV_GET_NEXT_UCHAR_USE_TO_U
;

2996 if(
c
<0) {

2997 if(
	`U_SUCCESS
(*
pEº‹Code
Ë&& 
sour˚
==
sour˚Limô
 && 
œ°Sour˚
<source) {

2999 
uöt8_t
 *
byãs
=
˙v
->
toUByãs
;

3000 
˙v
->
toULígth
=(
öt8_t
)(
sour˚
-
œ°Sour˚
);

3002 *
byãs
++=*
œ°Sour˚
++;

3003 } 
œ°Sour˚
<
sour˚
);

3004 *
pEº‹Code
=
U_TRUNCATED_CHAR_FOUND
;

3005 } if(
	`U_FAILURE
(*
pEº‹Code
)) {

3013 
UBoﬁ
 
isDBCSO∆y
=(UBoﬁ)(
˙v
->
sh¨edD©a
->
mbcs
.
dbcsO∆ySèã
!=0);

3014 
uöt8_t
 *
byãs
=
˙v
->
toUByãs
;

3015 *
byãs
++=*
œ°Sour˚
++;

3016 if(
œ°Sour˚
==
sour˚
) {

3017 
˙v
->
toULígth
=1;

3019 
öt8_t
 
i
;

3020 
i
=1;

3021 
œ°Sour˚
<
sour˚
 && !
	`isSögÀOrLód
(
°©eTabÀ
, 
°©e
, 
isDBCSO∆y
, *lastSource);

3022 ++
i


3024 *
byãs
++=*
œ°Sour˚
++;

3026 
˙v
->
toULígth
=
i
;

3027 
sour˚
=
œ°Sour˚
;

3031 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

3033 
c
=0xffff;

3037 
˙v
->
toUnicodeSètus
=0;

3038 
˙v
->
mode
=
°©e
;

3041 
pArgs
->
sour˚
=(const *)source;

3042  
c
;

3043 
	}
}

3055 
U_CFUNC
 
UCh¨32


3056 
	$u˙v_MBCSSögÀSim∂eGëNextUCh¨
(
UC⁄vîãrSh¨edD©a
 *
sh¨edD©a
,

3057 
uöt8_t
 
b
, 
UBoﬁ
 
u£FÆlback
) {

3058 
öt32_t
 
íåy
;

3059 
uöt8_t
 
a˘i⁄
;

3061 
íåy
=
sh¨edD©a
->
mbcs
.
°©eTabÀ
[0][
b
];

3064 if(
	`MBCS_ENTRY_FINAL_IS_VALID_DIRECT_16
(
íåy
)) {

3066  (
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

3073 
a˘i⁄
=(
uöt8_t
)(
	`MBCS_ENTRY_FINAL_ACTION
(
íåy
));

3074 if(
a˘i⁄
==
MBCS_STATE_VALID_DIRECT_20
) {

3076  0x10000+
	`MBCS_ENTRY_FINAL_VALUE
(
íåy
);

3077 } if(
a˘i⁄
==
MBCS_STATE_FALLBACK_DIRECT_16
) {

3078 if(!
	`TO_U_USE_FALLBACK
(
u£FÆlback
)) {

3082  (
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

3083 } if(
a˘i⁄
==
MBCS_STATE_FALLBACK_DIRECT_20
) {

3084 if(!
	`TO_U_USE_FALLBACK
(
u£FÆlback
)) {

3088  0x10000+
	`MBCS_ENTRY_FINAL_VALUE
(
íåy
);

3089 } if(
a˘i⁄
==
MBCS_STATE_UNASSIGNED
) {

3091 } if(
a˘i⁄
==
MBCS_STATE_ILLEGAL
) {

3097 
	}
}

3113 
U_CFUNC
 
UCh¨32


3114 
	$u˙v_MBCSSim∂eGëNextUCh¨
(
UC⁄vîãrSh¨edD©a
 *
sh¨edD©a
,

3115 c⁄° *
sour˚
, 
öt32_t
 
Àngth
,

3116 
UBoﬁ
 
u£FÆlback
) {

3117 c⁄° 
	`öt32_t
 (*
°©eTabÀ
)[256];

3118 c⁄° 
uöt16_t
 *
unicodeCodeUnôs
;

3120 
uöt32_t
 
off£t
;

3121 
uöt8_t
 
°©e
, 
a˘i⁄
;

3123 
UCh¨32
 
c
;

3124 
öt32_t
 
i
, 
íåy
;

3126 if(
Àngth
<=0) {

3139 if(
sh¨edD©a
->
mbcs
.
cou¡Sèãs
==1) {

3140 if(
Àngth
==1) {

3141  
	`u˙v_MBCSSögÀSim∂eGëNextUCh¨
(
sh¨edD©a
, (
uöt8_t
)*
sour˚
, 
u£FÆlback
);

3149 
°©eTabÀ
=
sh¨edD©a
->
mbcs
.stateTable;

3150 
unicodeCodeUnôs
=
sh¨edD©a
->
mbcs
.unicodeCodeUnits;

3153 
off£t
=0;

3154 
°©e
=
sh¨edD©a
->
mbcs
.
dbcsO∆ySèã
;

3157 
i
=0;;) {

3158 
íåy
=
°©eTabÀ
[
°©e
][(
uöt8_t
)
sour˚
[
i
++]];

3159 if(
	`MBCS_ENTRY_IS_TRANSITION
(
íåy
)) {

3160 
°©e
=(
uöt8_t
)
	`MBCS_ENTRY_TRANSITION_STATE
(
íåy
);

3161 
off£t
+=
	`MBCS_ENTRY_TRANSITION_OFFSET
(
íåy
);

3163 if(
i
==
Àngth
) {

3171 
a˘i⁄
=(
uöt8_t
)(
	`MBCS_ENTRY_FINAL_ACTION
(
íåy
));

3172 if(
a˘i⁄
==
MBCS_STATE_VALID_16
) {

3173 
off£t
+=
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

3174 
c
=
unicodeCodeUnôs
[
off£t
];

3175 if(
c
!=0xfffe) {

3177 } if(
	`UCNV_TO_U_USE_FALLBACK
(
˙v
)) {

3178 
c
=
	`u˙v_MBCSGëFÆlback
(&
sh¨edD©a
->
mbcs
, 
off£t
);

3182 } if(
a˘i⁄
==
MBCS_STATE_VALID_DIRECT_16
) {

3184 
c
=(
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

3186 } if(
a˘i⁄
==
MBCS_STATE_VALID_16_PAIR
) {

3187 
off£t
+=
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

3188 
c
=
unicodeCodeUnôs
[
off£t
++];

3189 if(
c
<0xd800) {

3191 } if(
	`UCNV_TO_U_USE_FALLBACK
(
˙v
Ë? 
c
<=0xdfff : c<=0xdbff) {

3193 
c
=(
UCh¨32
)(((c&0x3ff)<<10)+
unicodeCodeUnôs
[
off£t
]+(0x10000-0xdc00));

3194 } if(
	`UCNV_TO_U_USE_FALLBACK
(
˙v
Ë? (
c
&0xfffe)==0xe000 : c==0xe000) {

3196 
c
=
unicodeCodeUnôs
[
off£t
];

3197 } if(
c
==0xffff) {

3200 
c
=0xfffe;

3203 } if(
a˘i⁄
==
MBCS_STATE_VALID_DIRECT_20
) {

3205 
c
=0x10000+
	`MBCS_ENTRY_FINAL_VALUE
(
íåy
);

3207 } if(
a˘i⁄
==
MBCS_STATE_FALLBACK_DIRECT_16
) {

3208 if(!
	`TO_U_USE_FALLBACK
(
u£FÆlback
)) {

3209 
c
=0xfffe;

3213 
c
=(
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
(
íåy
);

3215 } if(
a˘i⁄
==
MBCS_STATE_FALLBACK_DIRECT_20
) {

3216 if(!
	`TO_U_USE_FALLBACK
(
u£FÆlback
)) {

3217 
c
=0xfffe;

3221 
c
=0x10000+
	`MBCS_ENTRY_FINAL_VALUE
(
íåy
);

3223 } if(
a˘i⁄
==
MBCS_STATE_UNASSIGNED
) {

3224 
c
=0xfffe;

3236 if(
i
!=
Àngth
) {

3241 if(
c
==0xfffe) {

3243 c⁄° 
öt32_t
 *
cx
=
sh¨edD©a
->
mbcs
.
extIndexes
;

3244 if(
cx
!=
NULL
) {

3245  
	`u˙v_extSim∂eM©chToU
(
cx
, 
sour˚
, 
Àngth
, 
u£FÆlback
);

3249  
c
;

3250 
	}
}

3256 
	$u˙v_MBCSDoubÀFromUnicodeWôhOff£ts
(
UC⁄vîãrFromUnicodeArgs
 *
pArgs
,

3257 
UEº‹Code
 *
pEº‹Code
) {

3258 
UC⁄vîãr
 *
˙v
;

3259 c⁄° 
UCh¨
 *
sour˚
, *
sour˚Limô
;

3260 
uöt8_t
 *
èrgë
;

3261 
öt32_t
 
èrgëC≠acôy
;

3262 
öt32_t
 *
off£ts
;

3264 c⁄° 
uöt16_t
 *
èbÀ
;

3265 c⁄° 
uöt16_t
 *
mbcsIndex
;

3266 c⁄° 
uöt8_t
 *
byãs
;

3268 
UCh¨32
 
c
;

3270 
öt32_t
 
sour˚Index
, 
√xtSour˚Index
;

3272 
uöt32_t
 
°age2E¡ry
;

3273 
uöt32_t
 
asciiRoundåùs
;

3274 
uöt32_t
 
vÆue
;

3275 
uöt8_t
 
unicodeMask
;

3278 
˙v
=
pArgs
->
c⁄vîãr
;

3279 
unicodeMask
=
˙v
->
sh¨edD©a
->
mbcs
.unicodeMask;

3282 
sour˚
=
pArgs
->source;

3283 
sour˚Limô
=
pArgs
->sourceLimit;

3284 
èrgë
=(
uöt8_t
 *)
pArgs
->target;

3285 
èrgëC≠acôy
=(
öt32_t
)(
pArgs
->
èrgëLimô
-pArgs->
èrgë
);

3286 
off£ts
=
pArgs
->offsets;

3288 
èbÀ
=
˙v
->
sh¨edD©a
->
mbcs
.
‰omUnicodeTabÀ
;

3289 
mbcsIndex
=
˙v
->
sh¨edD©a
->
mbcs
.mbcsIndex;

3290 if((
˙v
->
›ti⁄s
&
UCNV_OPTION_SWAP_LFNL
)!=0) {

3291 
byãs
=
˙v
->
sh¨edD©a
->
mbcs
.
sw≠LFNLFromUnicodeByãs
;

3293 
byãs
=
˙v
->
sh¨edD©a
->
mbcs
.
‰omUnicodeByãs
;

3295 
asciiRoundåùs
=
˙v
->
sh¨edD©a
->
mbcs
.asciiRoundtrips;

3298 
c
=
˙v
->
‰omUCh¨32
;

3301 
sour˚Index

c
==0 ? 0 : -1;

3302 
√xtSour˚Index
=0;

3305 if(
c
!=0 && 
èrgëC≠acôy
>0) {

3306 
gëTøû
;

3309 
sour˚
<
sour˚Limô
) {

3318 if(
èrgëC≠acôy
>0) {

3324 
c
=*
sour˚
++;

3325 ++
√xtSour˚Index
;

3326 if(
c
<=0x7‡&& 
	`IS_ASCII_ROUNDTRIP
(c, 
asciiRoundåùs
)) {

3327 *
èrgë
++=(
uöt8_t
)
c
;

3328 if(
off£ts
!=
NULL
) {

3329 *
off£ts
++=
sour˚Index
;

3330 
sour˚Index
=
√xtSour˚Index
;

3332 --
èrgëC≠acôy
;

3333 
c
=0;

3341 if(
c
<=0xd7ff) {

3342 
vÆue
=
	`DBCS_RESULT_FROM_MOST_BMP
(
mbcsIndex
, (c⁄° 
uöt16_t
 *)
byãs
, 
c
);

3344 if(
vÆue
==0) {

3345 
u«ssig√d
;

3354 if(
	`UTF_IS_SURROGATE
(
c
Ë&& !(
unicodeMask
&
UCNV_HAS_SURROGATES
)) {

3355 if(
	`UTF_IS_SURROGATE_FIRST
(
c
)) {

3356 
gëTøû
:

3357 if(
sour˚
<
sour˚Limô
) {

3359 
UCh¨
 
åaû
=*
sour˚
;

3360 if(
	`UTF_IS_SECOND_SURROGATE
(
åaû
)) {

3361 ++
sour˚
;

3362 ++
√xtSour˚Index
;

3363 
c
=
	`UTF16_GET_PAIR_VALUE
(c, 
åaû
);

3364 if(!(
unicodeMask
&
UCNV_HAS_SUPPLEMENTARY
)) {

3367 
u«ssig√d
;

3374 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

3384 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

3390 
°age2E¡ry
=
	`MBCS_STAGE_2_FROM_U
(
èbÀ
, 
c
);

3394 
vÆue
=
	`MBCS_VALUE_2_FROM_STAGE_2
(
byãs
, 
°age2E¡ry
, 
c
);

3397 if(!(
	`MBCS_FROM_U_IS_ROUNDTRIP
(
°age2E¡ry
, 
c
) ||

3398 (
	`UCNV_FROM_U_USE_FALLBACK
(
˙v
, 
c
Ë&& 
vÆue
!=0))

3406 
u«ssig√d
:

3408 
pArgs
->
sour˚
=source;

3409 
c
=
	`_extFromU
(
˙v
, cnv->
sh¨edD©a
,

3410 
c
, &
sour˚
, 
sour˚Limô
,

3411 &
èrgë
,Å¨gë+
èrgëC≠acôy
,

3412 &
off£ts
, 
sour˚Index
,

3413 
pArgs
->
Êush
,

3414 
pEº‹Code
);

3415 
√xtSour˚Index
+=(
öt32_t
)(
sour˚
-
pArgs
->source);

3417 if(
	`U_FAILURE
(*
pEº‹Code
)) {

3424 
èrgëC≠acôy
=(
öt32_t
)(
pArgs
->
èrgëLimô
-(*)
èrgë
);

3427 
sour˚Index
=
√xtSour˚Index
;

3435 if(
vÆue
<=0xff) {

3437 *
èrgë
++=(
uöt8_t
)
vÆue
;

3438 if(
off£ts
!=
NULL
) {

3439 *
off£ts
++=
sour˚Index
;

3441 --
èrgëC≠acôy
;

3443 *
èrgë
++=(
uöt8_t
)(
vÆue
>>8);

3444 if(2<=
èrgëC≠acôy
) {

3445 *
èrgë
++=(
uöt8_t
)
vÆue
;

3446 if(
off£ts
!=
NULL
) {

3447 *
off£ts
++=
sour˚Index
;

3448 *
off£ts
++=
sour˚Index
;

3450 
èrgëC≠acôy
-=2;

3452 if(
off£ts
!=
NULL
) {

3453 *
off£ts
++=
sour˚Index
;

3455 
˙v
->
ch¨Eº‹Buf„r
[0]=()
vÆue
;

3456 
˙v
->
ch¨Eº‹Buf„rLígth
=1;

3459 
èrgëC≠acôy
=0;

3460 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

3461 
c
=0;

3467 
c
=0;

3468 
sour˚Index
=
√xtSour˚Index
;

3472 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

3478 
˙v
->
‰omUCh¨32
=
c
;

3481 
pArgs
->
sour˚
=source;

3482 
pArgs
->
èrgë
=(*)target;

3483 
pArgs
->
off£ts
=offsets;

3484 
	}
}

3488 
	$u˙v_MBCSSögÀFromUnicodeWôhOff£ts
(
UC⁄vîãrFromUnicodeArgs
 *
pArgs
,

3489 
UEº‹Code
 *
pEº‹Code
) {

3490 
UC⁄vîãr
 *
˙v
;

3491 c⁄° 
UCh¨
 *
sour˚
, *
sour˚Limô
;

3492 
uöt8_t
 *
èrgë
;

3493 
öt32_t
 
èrgëC≠acôy
;

3494 
öt32_t
 *
off£ts
;

3496 c⁄° 
uöt16_t
 *
èbÀ
;

3497 c⁄° 
uöt16_t
 *
ªsu…s
;

3499 
UCh¨32
 
c
;

3501 
öt32_t
 
sour˚Index
, 
√xtSour˚Index
;

3503 
uöt16_t
 
vÆue
, 
möVÆue
;

3504 
UBoﬁ
 
hasSuµÀmíèry
;

3507 
˙v
=
pArgs
->
c⁄vîãr
;

3508 
sour˚
=
pArgs
->source;

3509 
sour˚Limô
=
pArgs
->sourceLimit;

3510 
èrgë
=(
uöt8_t
 *)
pArgs
->target;

3511 
èrgëC≠acôy
=(
öt32_t
)(
pArgs
->
èrgëLimô
-pArgs->
èrgë
);

3512 
off£ts
=
pArgs
->offsets;

3514 
èbÀ
=
˙v
->
sh¨edD©a
->
mbcs
.
‰omUnicodeTabÀ
;

3515 if((
˙v
->
›ti⁄s
&
UCNV_OPTION_SWAP_LFNL
)!=0) {

3516 
ªsu…s
=(
uöt16_t
 *)
˙v
->
sh¨edD©a
->
mbcs
.
sw≠LFNLFromUnicodeByãs
;

3518 
ªsu…s
=(
uöt16_t
 *)
˙v
->
sh¨edD©a
->
mbcs
.
‰omUnicodeByãs
;

3521 if(
˙v
->
u£FÆlback
) {

3523 
möVÆue
=0x800;

3526 
möVÆue
=0xc00;

3528 
hasSuµÀmíèry
=(
UBoﬁ
)(
˙v
->
sh¨edD©a
->
mbcs
.
unicodeMask
&
UCNV_HAS_SUPPLEMENTARY
);

3531 
c
=
˙v
->
‰omUCh¨32
;

3534 
sour˚Index

c
==0 ? 0 : -1;

3535 
√xtSour˚Index
=0;

3538 if(
c
!=0 && 
èrgëC≠acôy
>0) {

3539 
gëTøû
;

3542 
sour˚
<
sour˚Limô
) {

3551 if(
èrgëC≠acôy
>0) {

3557 
c
=*
sour˚
++;

3558 ++
√xtSour˚Index
;

3559 if(
	`UTF_IS_SURROGATE
(
c
)) {

3560 if(
	`UTF_IS_SURROGATE_FIRST
(
c
)) {

3561 
gëTøû
:

3562 if(
sour˚
<
sour˚Limô
) {

3564 
UCh¨
 
åaû
=*
sour˚
;

3565 if(
	`UTF_IS_SECOND_SURROGATE
(
åaû
)) {

3566 ++
sour˚
;

3567 ++
√xtSour˚Index
;

3568 
c
=
	`UTF16_GET_PAIR_VALUE
(c, 
åaû
);

3569 if(!
hasSuµÀmíèry
) {

3572 
u«ssig√d
;

3579 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

3589 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

3595 
vÆue
=
	`MBCS_SINGLE_RESULT_FROM_U
(
èbÀ
, 
ªsu…s
, 
c
);

3598 if(
vÆue
>=
möVÆue
) {

3602 *
èrgë
++=(
uöt8_t
)
vÆue
;

3603 if(
off£ts
!=
NULL
) {

3604 *
off£ts
++=
sour˚Index
;

3606 --
èrgëC≠acôy
;

3609 
c
=0;

3610 
sour˚Index
=
√xtSour˚Index
;

3612 
u«ssig√d
:

3614 
pArgs
->
sour˚
=source;

3615 
c
=
	`_extFromU
(
˙v
, cnv->
sh¨edD©a
,

3616 
c
, &
sour˚
, 
sour˚Limô
,

3617 &
èrgë
,Å¨gë+
èrgëC≠acôy
,

3618 &
off£ts
, 
sour˚Index
,

3619 
pArgs
->
Êush
,

3620 
pEº‹Code
);

3621 
√xtSour˚Index
+=(
öt32_t
)(
sour˚
-
pArgs
->source);

3623 if(
	`U_FAILURE
(*
pEº‹Code
)) {

3630 
èrgëC≠acôy
=(
öt32_t
)(
pArgs
->
èrgëLimô
-(*)
èrgë
);

3633 
sour˚Index
=
√xtSour˚Index
;

3638 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

3644 
˙v
->
‰omUCh¨32
=
c
;

3647 
pArgs
->
sour˚
=source;

3648 
pArgs
->
èrgë
=(*)target;

3649 
pArgs
->
off£ts
=offsets;

3650 
	}
}

3664 
	$u˙v_MBCSSögÀFromBMPWôhOff£ts
(
UC⁄vîãrFromUnicodeArgs
 *
pArgs
,

3665 
UEº‹Code
 *
pEº‹Code
) {

3666 
UC⁄vîãr
 *
˙v
;

3667 c⁄° 
UCh¨
 *
sour˚
, *
sour˚Limô
, *
œ°Sour˚
;

3668 
uöt8_t
 *
èrgë
;

3669 
öt32_t
 
èrgëC≠acôy
, 
Àngth
;

3670 
öt32_t
 *
off£ts
;

3672 c⁄° 
uöt16_t
 *
èbÀ
;

3673 c⁄° 
uöt16_t
 *
ªsu…s
;

3675 
UCh¨32
 
c
;

3677 
öt32_t
 
sour˚Index
;

3679 
uöt32_t
 
asciiRoundåùs
;

3680 
uöt16_t
 
vÆue
, 
möVÆue
;

3683 
˙v
=
pArgs
->
c⁄vîãr
;

3684 
sour˚
=
pArgs
->source;

3685 
sour˚Limô
=
pArgs
->sourceLimit;

3686 
èrgë
=(
uöt8_t
 *)
pArgs
->target;

3687 
èrgëC≠acôy
=(
öt32_t
)(
pArgs
->
èrgëLimô
-pArgs->
èrgë
);

3688 
off£ts
=
pArgs
->offsets;

3690 
èbÀ
=
˙v
->
sh¨edD©a
->
mbcs
.
‰omUnicodeTabÀ
;

3691 if((
˙v
->
›ti⁄s
&
UCNV_OPTION_SWAP_LFNL
)!=0) {

3692 
ªsu…s
=(
uöt16_t
 *)
˙v
->
sh¨edD©a
->
mbcs
.
sw≠LFNLFromUnicodeByãs
;

3694 
ªsu…s
=(
uöt16_t
 *)
˙v
->
sh¨edD©a
->
mbcs
.
‰omUnicodeByãs
;

3696 
asciiRoundåùs
=
˙v
->
sh¨edD©a
->
mbcs
.asciiRoundtrips;

3698 if(
˙v
->
u£FÆlback
) {

3700 
möVÆue
=0x800;

3703 
möVÆue
=0xc00;

3707 
c
=
˙v
->
‰omUCh¨32
;

3710 
sour˚Index

c
==0 ? 0 : -1;

3711 
œ°Sour˚
=
sour˚
;

3717 
Àngth
=(
öt32_t
)(
sour˚Limô
-
sour˚
);

3718 if(
Àngth
<
èrgëC≠acôy
) {

3719 
èrgëC≠acôy
=
Àngth
;

3723 if(
c
!=0 && 
èrgëC≠acôy
>0) {

3724 
gëTøû
;

3727 #i‡
MBCS_UNROLL_SINGLE_FROM_BMP


3730 
uƒﬁÀd
:

3731 if(
èrgëC≠acôy
>=4) {

3732 
öt32_t
 
cou¡
, 
lo›s
;

3733 
uöt16_t
 
™dedVÆues
;

3735 
lo›s
=
cou¡
=
èrgëC≠acôy
>>2;

3737 
c
=*
sour˚
++;

3738 
™dedVÆues
=
vÆue
=
	`MBCS_SINGLE_RESULT_FROM_U
(
èbÀ
, 
ªsu…s
, 
c
);

3739 *
èrgë
++=(
uöt8_t
)
vÆue
;

3740 
c
=*
sour˚
++;

3741 
™dedVÆues
&=
vÆue
=
	`MBCS_SINGLE_RESULT_FROM_U
(
èbÀ
, 
ªsu…s
, 
c
);

3742 *
èrgë
++=(
uöt8_t
)
vÆue
;

3743 
c
=*
sour˚
++;

3744 
™dedVÆues
&=
vÆue
=
	`MBCS_SINGLE_RESULT_FROM_U
(
èbÀ
, 
ªsu…s
, 
c
);

3745 *
èrgë
++=(
uöt8_t
)
vÆue
;

3746 
c
=*
sour˚
++;

3747 
™dedVÆues
&=
vÆue
=
	`MBCS_SINGLE_RESULT_FROM_U
(
èbÀ
, 
ªsu…s
, 
c
);

3748 *
èrgë
++=(
uöt8_t
)
vÆue
;

3751 if(
™dedVÆues
<
möVÆue
) {

3753 
sour˚
-=4;

3754 
èrgë
-=4;

3757 } --
cou¡
>0);

3758 
cou¡
=
lo›s
-count;

3759 
èrgëC≠acôy
-=4*
cou¡
;

3761 if(
off£ts
!=
NULL
) {

3762 
œ°Sour˚
+=4*
cou¡
;

3763 
cou¡
>0) {

3764 *
off£ts
++=
sour˚Index
++;

3765 *
off£ts
++=
sour˚Index
++;

3766 *
off£ts
++=
sour˚Index
++;

3767 *
off£ts
++=
sour˚Index
++;

3768 --
cou¡
;

3772 
c
=0;

3776 
èrgëC≠acôy
>0) {

3782 
c
=*
sour˚
++;

3789 if(
c
<=0x7‡&& 
	`IS_ASCII_ROUNDTRIP
(c, 
asciiRoundåùs
)) {

3790 *
èrgë
++=(
uöt8_t
)
c
;

3791 --
èrgëC≠acôy
;

3792 
c
=0;

3795 
vÆue
=
	`MBCS_SINGLE_RESULT_FROM_U
(
èbÀ
, 
ªsu…s
, 
c
);

3797 if(
vÆue
>=
möVÆue
) {

3801 *
èrgë
++=(
uöt8_t
)
vÆue
;

3802 --
èrgëC≠acôy
;

3805 
c
=0;

3807 } if(!
	`UTF_IS_SURROGATE
(
c
)) {

3809 } if(
	`UTF_IS_SURROGATE_FIRST
(
c
)) {

3810 
gëTøû
:

3811 if(
sour˚
<
sour˚Limô
) {

3813 
UCh¨
 
åaû
=*
sour˚
;

3814 if(
	`UTF_IS_SECOND_SURROGATE
(
åaû
)) {

3815 ++
sour˚
;

3816 
c
=
	`UTF16_GET_PAIR_VALUE
(c, 
åaû
);

3822 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

3827 i‡(
pArgs
->
Êush
) {

3828 *
pEº‹Code
=
U_TRUNCATED_CHAR_FOUND
;

3835 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

3842 
Àngth
=
	`U16_LENGTH
(
c
);

3845 if(
off£ts
!=
NULL
) {

3846 
öt32_t
 
cou¡
=(öt32_t)(
sour˚
-
œ°Sour˚
);

3849 
cou¡
-=
Àngth
;

3851 
cou¡
>0) {

3852 *
off£ts
++=
sour˚Index
++;

3853 --
cou¡
;

3859 
œ°Sour˚
=
sour˚
;

3860 
c
=
	`_extFromU
(
˙v
, cnv->
sh¨edD©a
,

3861 
c
, &
sour˚
, 
sour˚Limô
,

3862 &
èrgë
, (c⁄° 
uöt8_t
 *)(
pArgs
->
èrgëLimô
),

3863 &
off£ts
, 
sour˚Index
,

3864 
pArgs
->
Êush
,

3865 
pEº‹Code
);

3866 
sour˚Index
+=
Àngth
+(
öt32_t
)(
sour˚
-
œ°Sour˚
);

3867 
œ°Sour˚
=
sour˚
;

3869 if(
	`U_FAILURE
(*
pEº‹Code
)) {

3876 
èrgëC≠acôy
=(
öt32_t
)(
pArgs
->
èrgëLimô
-(*)
èrgë
);

3877 
Àngth
=(
öt32_t
)(
sour˚Limô
-
sour˚
);

3878 if(
Àngth
<
èrgëC≠acôy
) {

3879 
èrgëC≠acôy
=
Àngth
;

3883 #i‡
MBCS_UNROLL_SINGLE_FROM_BMP


3885 
uƒﬁÀd
;

3889 if(
	`U_SUCCESS
(*
pEº‹Code
Ë&& 
sour˚
<
sour˚Limô
 && 
èrgë
>=(
uöt8_t
 *)
pArgs
->
èrgëLimô
) {

3891 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

3895 if(
off£ts
!=
NULL
) {

3896 
size_t
 
cou¡
=
sour˚
-
œ°Sour˚
;

3897 i‡(
cou¡
 > 0 && *
pEº‹Code
 =
U_TRUNCATED_CHAR_FOUND
) {

3903 
cou¡
--;

3905 
cou¡
>0) {

3906 *
off£ts
++=
sour˚Index
++;

3907 --
cou¡
;

3912 
˙v
->
‰omUCh¨32
=
c
;

3915 
pArgs
->
sour˚
=source;

3916 
pArgs
->
èrgë
=(*)target;

3917 
pArgs
->
off£ts
=offsets;

3918 
	}
}

3920 
U_CFUNC
 

3921 
	$u˙v_MBCSFromUnicodeWôhOff£ts
(
UC⁄vîãrFromUnicodeArgs
 *
pArgs
,

3922 
UEº‹Code
 *
pEº‹Code
) {

3923 
UC⁄vîãr
 *
˙v
;

3924 c⁄° 
UCh¨
 *
sour˚
, *
sour˚Limô
;

3925 
uöt8_t
 *
èrgë
;

3926 
öt32_t
 
èrgëC≠acôy
;

3927 
öt32_t
 *
off£ts
;

3929 c⁄° 
uöt16_t
 *
èbÀ
;

3930 c⁄° 
uöt16_t
 *
mbcsIndex
;

3931 c⁄° 
uöt8_t
 *
p
, *
byãs
;

3932 
uöt8_t
 
ouçutTy≥
;

3934 
UCh¨32
 
c
;

3936 
öt32_t
 
¥evSour˚Index
, 
sour˚Index
, 
√xtSour˚Index
;

3938 
uöt32_t
 
°age2E¡ry
;

3939 
uöt32_t
 
asciiRoundåùs
;

3940 
uöt32_t
 
vÆue
;

3941 
uöt8_t
 
si_vÆue
[2] = {0, 0};

3942 
uöt8_t
 
so_vÆue
[2] = {0, 0};

3943 
uöt8_t
 
si_vÆue_Àngth
, 
so_vÆue_Àngth
;

3944 
öt32_t
 
Àngth
 = 0, 
¥evLígth
;

3945 
uöt8_t
 
unicodeMask
;

3947 
˙v
=
pArgs
->
c⁄vîãr
;

3949 if(
˙v
->
¥eFromUFú°CP
>=0) {

3954 
	`u˙v_extC⁄töueM©chFromU
(
˙v
, 
pArgs
, -1, 
pEº‹Code
);

3956 if(
	`U_FAILURE
(*
pEº‹Code
Ë|| 
˙v
->
¥eFromULígth
<0) {

3962 
ouçutTy≥
=
˙v
->
sh¨edD©a
->
mbcs
.outputType;

3963 
unicodeMask
=
˙v
->
sh¨edD©a
->
mbcs
.unicodeMask;

3964 if(
ouçutTy≥
==
MBCS_OUTPUT_1
 && !(
unicodeMask
&
UCNV_HAS_SURROGATES
)) {

3965 if(!(
unicodeMask
&
UCNV_HAS_SUPPLEMENTARY
)) {

3966 
	`u˙v_MBCSSögÀFromBMPWôhOff£ts
(
pArgs
, 
pEº‹Code
);

3968 
	`u˙v_MBCSSögÀFromUnicodeWôhOff£ts
(
pArgs
, 
pEº‹Code
);

3971 } if(
ouçutTy≥
==
MBCS_OUTPUT_2
 && 
˙v
->
sh¨edD©a
->
mbcs
.
utf8Frõndly
) {

3972 
	`u˙v_MBCSDoubÀFromUnicodeWôhOff£ts
(
pArgs
, 
pEº‹Code
);

3977 
sour˚
=
pArgs
->source;

3978 
sour˚Limô
=
pArgs
->sourceLimit;

3979 
èrgë
=(
uöt8_t
 *)
pArgs
->target;

3980 
èrgëC≠acôy
=(
öt32_t
)(
pArgs
->
èrgëLimô
-pArgs->
èrgë
);

3981 
off£ts
=
pArgs
->offsets;

3983 
èbÀ
=
˙v
->
sh¨edD©a
->
mbcs
.
‰omUnicodeTabÀ
;

3984 if(
˙v
->
sh¨edD©a
->
mbcs
.
utf8Frõndly
) {

3985 
mbcsIndex
=
˙v
->
sh¨edD©a
->
mbcs
.mbcsIndex;

3987 
mbcsIndex
=
NULL
;

3989 if((
˙v
->
›ti⁄s
&
UCNV_OPTION_SWAP_LFNL
)!=0) {

3990 
byãs
=
˙v
->
sh¨edD©a
->
mbcs
.
sw≠LFNLFromUnicodeByãs
;

3992 
byãs
=
˙v
->
sh¨edD©a
->
mbcs
.
‰omUnicodeByãs
;

3994 
asciiRoundåùs
=
˙v
->
sh¨edD©a
->
mbcs
.asciiRoundtrips;

3997 
c
=
˙v
->
‰omUCh¨32
;

3999 if(
ouçutTy≥
==
MBCS_OUTPUT_2_SISO
) {

4000 
¥evLígth
=
˙v
->
‰omUnicodeSètus
;

4001 if(
¥evLígth
==0) {

4003 
¥evLígth
=1;

4007 
¥evLígth
=0;

4011 
¥evSour˚Index
=-1;

4012 
sour˚Index

c
==0 ? 0 : -1;

4013 
√xtSour˚Index
=0;

4016 
si_vÆue_Àngth
 = 
	`gëSISOByãs
(
SI
, 
˙v
->
›ti⁄s
, 
si_vÆue
);

4017 
so_vÆue_Àngth
 = 
	`gëSISOByãs
(
SO
, 
˙v
->
›ti⁄s
, 
so_vÆue
);

4033 if(
c
!=0 && 
èrgëC≠acôy
>0) {

4034 
gëTøû
;

4037 
sour˚
<
sour˚Limô
) {

4046 if(
èrgëC≠acôy
>0) {

4052 
c
=*
sour˚
++;

4053 ++
√xtSour˚Index
;

4054 if(
c
<=0x7‡&& 
	`IS_ASCII_ROUNDTRIP
(c, 
asciiRoundåùs
)) {

4055 *
èrgë
++=(
uöt8_t
)
c
;

4056 if(
off£ts
!=
NULL
) {

4057 *
off£ts
++=
sour˚Index
;

4058 
¥evSour˚Index
=
sour˚Index
;

4059 
sour˚Index
=
√xtSour˚Index
;

4061 --
èrgëC≠acôy
;

4062 
c
=0;

4070 if(
c
<=0xd7f‡&& 
mbcsIndex
!=
NULL
) {

4071 
vÆue
=
mbcsIndex
[
c
>>6];

4075 
ouçutTy≥
) {

4076 
MBCS_OUTPUT_2
:

4077 
vÆue
=((c⁄° 
uöt16_t
 *)
byãs
)[vÆuê+(
c
&0x3f)];

4078 if(
vÆue
<=0xff) {

4079 if(
vÆue
==0) {

4080 
u«ssig√d
;

4082 
Àngth
=1;

4085 
Àngth
=2;

4088 
MBCS_OUTPUT_2_SISO
:

4099 
˙v
->
‰omUnicodeSètus
=
¥evLígth
;

4100 
vÆue
=((c⁄° 
uöt16_t
 *)
byãs
)[vÆuê+(
c
&0x3f)];

4101 if(
vÆue
<=0xff) {

4102 if(
vÆue
==0) {

4103 
u«ssig√d
;

4104 } if(
¥evLígth
<=1) {

4105 
Àngth
=1;

4108 i‡(
si_vÆue_Àngth
 == 1) {

4109 
vÆue
|=(
uöt32_t
)
si_vÆue
[0]<<8;

4110 
Àngth
 = 2;

4111 } i‡(
si_vÆue_Àngth
 == 2) {

4112 
vÆue
|=(
uöt32_t
)
si_vÆue
[1]<<8;

4113 
vÆue
|=(
uöt32_t
)
si_vÆue
[0]<<16;

4114 
Àngth
 = 3;

4116 
¥evLígth
=1;

4119 if(
¥evLígth
==2) {

4120 
Àngth
=2;

4123 i‡(
so_vÆue_Àngth
 == 1) {

4124 
vÆue
|=(
uöt32_t
)
so_vÆue
[0]<<16;

4125 
Àngth
 = 3;

4126 } i‡(
so_vÆue_Àngth
 == 2) {

4127 
vÆue
|=(
uöt32_t
)
so_vÆue
[1]<<16;

4128 
vÆue
|=(
uöt32_t
)
so_vÆue
[0]<<24;

4129 
Àngth
 = 4;

4131 
¥evLígth
=2;

4135 
MBCS_OUTPUT_DBCS_ONLY
:

4137 
vÆue
=((c⁄° 
uöt16_t
 *)
byãs
)[vÆuê+(
c
&0x3f)];

4138 if(
vÆue
<=0xff) {

4140 
u«ssig√d
;

4142 
Àngth
=2;

4145 
MBCS_OUTPUT_3
:

4146 
p
=
byãs
+(
vÆue
+(
c
&0x3f))*3;

4147 
vÆue
=((
uöt32_t
)*
p
<<16)|((uint32_t)p[1]<<8)|p[2];

4148 if(
vÆue
<=0xff) {

4149 if(
vÆue
==0) {

4150 
u«ssig√d
;

4152 
Àngth
=1;

4154 } if(
vÆue
<=0xffff) {

4155 
Àngth
=2;

4157 
Àngth
=3;

4160 
MBCS_OUTPUT_4
:

4161 
vÆue
=((c⁄° 
uöt32_t
 *)
byãs
)[vÆuê+(
c
&0x3f)];

4162 if(
vÆue
<=0xff) {

4163 if(
vÆue
==0) {

4164 
u«ssig√d
;

4166 
Àngth
=1;

4168 } if(
vÆue
<=0xffff) {

4169 
Àngth
=2;

4170 } if(
vÆue
<=0xffffff) {

4171 
Àngth
=3;

4173 
Àngth
=4;

4176 
MBCS_OUTPUT_3_EUC
:

4177 
vÆue
=((c⁄° 
uöt16_t
 *)
byãs
)[vÆuê+(
c
&0x3f)];

4179 if(
vÆue
<=0xff) {

4180 if(
vÆue
==0) {

4181 
u«ssig√d
;

4183 
Àngth
=1;

4185 } if((
vÆue
&0x8000)==0) {

4186 
vÆue
|=0x8e8000;

4187 
Àngth
=3;

4188 } if((
vÆue
&0x80)==0) {

4189 
vÆue
|=0x8f0080;

4190 
Àngth
=3;

4192 
Àngth
=2;

4195 
MBCS_OUTPUT_4_EUC
:

4196 
p
=
byãs
+(
vÆue
+(
c
&0x3f))*3;

4197 
vÆue
=((
uöt32_t
)*
p
<<16)|((uint32_t)p[1]<<8)|p[2];

4199 if(
vÆue
<=0xff) {

4200 if(
vÆue
==0) {

4201 
u«ssig√d
;

4203 
Àngth
=1;

4205 } if(
vÆue
<=0xffff) {

4206 
Àngth
=2;

4207 } if((
vÆue
&0x800000)==0) {

4208 
vÆue
|=0x8e800000;

4209 
Àngth
=4;

4210 } if((
vÆue
&0x8000)==0) {

4211 
vÆue
|=0x8f008000;

4212 
Àngth
=4;

4214 
Àngth
=3;

4226 
vÆue
=0;

4227 
Àngth
=0;

4237 if(
	`UTF_IS_SURROGATE
(
c
Ë&& !(
unicodeMask
&
UCNV_HAS_SURROGATES
)) {

4238 if(
	`UTF_IS_SURROGATE_FIRST
(
c
)) {

4239 
gëTøû
:

4240 if(
sour˚
<
sour˚Limô
) {

4242 
UCh¨
 
åaû
=*
sour˚
;

4243 if(
	`UTF_IS_SECOND_SURROGATE
(
åaû
)) {

4244 ++
sour˚
;

4245 ++
√xtSour˚Index
;

4246 
c
=
	`UTF16_GET_PAIR_VALUE
(c, 
åaû
);

4247 if(!(
unicodeMask
&
UCNV_HAS_SUPPLEMENTARY
)) {

4249 
˙v
->
‰omUnicodeSètus
=
¥evLígth
;

4251 
u«ssig√d
;

4258 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

4268 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

4307 
°age2E¡ry
=
	`MBCS_STAGE_2_FROM_U
(
èbÀ
, 
c
);

4310 
ouçutTy≥
) {

4311 
MBCS_OUTPUT_2
:

4312 
vÆue
=
	`MBCS_VALUE_2_FROM_STAGE_2
(
byãs
, 
°age2E¡ry
, 
c
);

4313 if(
vÆue
<=0xff) {

4314 
Àngth
=1;

4316 
Àngth
=2;

4319 
MBCS_OUTPUT_2_SISO
:

4330 
˙v
->
‰omUnicodeSètus
=
¥evLígth
;

4331 
vÆue
=
	`MBCS_VALUE_2_FROM_STAGE_2
(
byãs
, 
°age2E¡ry
, 
c
);

4332 if(
vÆue
<=0xff) {

4333 if(
vÆue
==0 && 
	`MBCS_FROM_U_IS_ROUNDTRIP
(
°age2E¡ry
, 
c
)==0) {

4335 
Àngth
=0;

4336 } if(
¥evLígth
<=1) {

4337 
Àngth
=1;

4340 i‡(
si_vÆue_Àngth
 == 1) {

4341 
vÆue
|=(
uöt32_t
)
si_vÆue
[0]<<8;

4342 
Àngth
 = 2;

4343 } i‡(
si_vÆue_Àngth
 == 2) {

4344 
vÆue
|=(
uöt32_t
)
si_vÆue
[1]<<8;

4345 
vÆue
|=(
uöt32_t
)
si_vÆue
[0]<<16;

4346 
Àngth
 = 3;

4348 
¥evLígth
=1;

4351 if(
¥evLígth
==2) {

4352 
Àngth
=2;

4355 i‡(
so_vÆue_Àngth
 == 1) {

4356 
vÆue
|=(
uöt32_t
)
so_vÆue
[0]<<16;

4357 
Àngth
 = 3;

4358 } i‡(
so_vÆue_Àngth
 == 2) {

4359 
vÆue
|=(
uöt32_t
)
so_vÆue
[1]<<16;

4360 
vÆue
|=(
uöt32_t
)
so_vÆue
[0]<<24;

4361 
Àngth
 = 4;

4363 
¥evLígth
=2;

4367 
MBCS_OUTPUT_DBCS_ONLY
:

4369 
vÆue
=
	`MBCS_VALUE_2_FROM_STAGE_2
(
byãs
, 
°age2E¡ry
, 
c
);

4370 if(
vÆue
<=0xff) {

4372 
vÆue
=
°age2E¡ry
=0;

4373 
Àngth
=0;

4375 
Àngth
=2;

4378 
MBCS_OUTPUT_3
:

4379 
p
=
	`MBCS_POINTER_3_FROM_STAGE_2
(
byãs
, 
°age2E¡ry
, 
c
);

4380 
vÆue
=((
uöt32_t
)*
p
<<16)|((uint32_t)p[1]<<8)|p[2];

4381 if(
vÆue
<=0xff) {

4382 
Àngth
=1;

4383 } if(
vÆue
<=0xffff) {

4384 
Àngth
=2;

4386 
Àngth
=3;

4389 
MBCS_OUTPUT_4
:

4390 
vÆue
=
	`MBCS_VALUE_4_FROM_STAGE_2
(
byãs
, 
°age2E¡ry
, 
c
);

4391 if(
vÆue
<=0xff) {

4392 
Àngth
=1;

4393 } if(
vÆue
<=0xffff) {

4394 
Àngth
=2;

4395 } if(
vÆue
<=0xffffff) {

4396 
Àngth
=3;

4398 
Àngth
=4;

4401 
MBCS_OUTPUT_3_EUC
:

4402 
vÆue
=
	`MBCS_VALUE_2_FROM_STAGE_2
(
byãs
, 
°age2E¡ry
, 
c
);

4404 if(
vÆue
<=0xff) {

4405 
Àngth
=1;

4406 } if((
vÆue
&0x8000)==0) {

4407 
vÆue
|=0x8e8000;

4408 
Àngth
=3;

4409 } if((
vÆue
&0x80)==0) {

4410 
vÆue
|=0x8f0080;

4411 
Àngth
=3;

4413 
Àngth
=2;

4416 
MBCS_OUTPUT_4_EUC
:

4417 
p
=
	`MBCS_POINTER_3_FROM_STAGE_2
(
byãs
, 
°age2E¡ry
, 
c
);

4418 
vÆue
=((
uöt32_t
)*
p
<<16)|((uint32_t)p[1]<<8)|p[2];

4420 if(
vÆue
<=0xff) {

4421 
Àngth
=1;

4422 } if(
vÆue
<=0xffff) {

4423 
Àngth
=2;

4424 } if((
vÆue
&0x800000)==0) {

4425 
vÆue
|=0x8e800000;

4426 
Àngth
=4;

4427 } if((
vÆue
&0x8000)==0) {

4428 
vÆue
|=0x8f008000;

4429 
Àngth
=4;

4431 
Àngth
=3;

4443 
vÆue
=
°age2E¡ry
=0;

4444 
Àngth
=0;

4449 if(!(
	`MBCS_FROM_U_IS_ROUNDTRIP
(
°age2E¡ry
, 
c
)!=0 ||

4450 (
	`UCNV_FROM_U_USE_FALLBACK
(
˙v
, 
c
Ë&& 
vÆue
!=0))

4458 
u«ssig√d
:

4460 
pArgs
->
sour˚
=source;

4461 
c
=
	`_extFromU
(
˙v
, cnv->
sh¨edD©a
,

4462 
c
, &
sour˚
, 
sour˚Limô
,

4463 &
èrgë
,Å¨gë+
èrgëC≠acôy
,

4464 &
off£ts
, 
sour˚Index
,

4465 
pArgs
->
Êush
,

4466 
pEº‹Code
);

4467 
√xtSour˚Index
+=(
öt32_t
)(
sour˚
-
pArgs
->source);

4468 
¥evLígth
=
˙v
->
‰omUnicodeSètus
;

4470 if(
	`U_FAILURE
(*
pEº‹Code
)) {

4477 
èrgëC≠acôy
=(
öt32_t
)(
pArgs
->
èrgëLimô
-(*)
èrgë
);

4480 if(
off£ts
!=
NULL
) {

4481 
¥evSour˚Index
=
sour˚Index
;

4482 
sour˚Index
=
√xtSour˚Index
;

4491 if(
Àngth
<=
èrgëC≠acôy
) {

4492 if(
off£ts
==
NULL
) {

4493 
Àngth
) {

4496 *
èrgë
++=(
uöt8_t
)(
vÆue
>>24);

4498 *
èrgë
++=(
uöt8_t
)(
vÆue
>>16);

4500 *
èrgë
++=(
uöt8_t
)(
vÆue
>>8);

4502 *
èrgë
++=(
uöt8_t
)
vÆue
;

4508 
Àngth
) {

4511 *
èrgë
++=(
uöt8_t
)(
vÆue
>>24);

4512 *
off£ts
++=
sour˚Index
;

4514 *
èrgë
++=(
uöt8_t
)(
vÆue
>>16);

4515 *
off£ts
++=
sour˚Index
;

4517 *
èrgë
++=(
uöt8_t
)(
vÆue
>>8);

4518 *
off£ts
++=
sour˚Index
;

4520 *
èrgë
++=(
uöt8_t
)
vÆue
;

4521 *
off£ts
++=
sour˚Index
;

4527 
èrgëC≠acôy
-=
Àngth
;

4529 
uöt8_t
 *
ch¨Eº‹Buf„r
;

4538 
Àngth
-=
èrgëC≠acôy
;

4539 
ch¨Eº‹Buf„r
=(
uöt8_t
 *)
˙v
->charErrorBuffer;

4540 
Àngth
) {

4543 *
ch¨Eº‹Buf„r
++=(
uöt8_t
)(
vÆue
>>16);

4545 *
ch¨Eº‹Buf„r
++=(
uöt8_t
)(
vÆue
>>8);

4547 *
ch¨Eº‹Buf„r
=(
uöt8_t
)
vÆue
;

4552 
˙v
->
ch¨Eº‹Buf„rLígth
=(
öt8_t
)
Àngth
;

4555 
vÆue
>>=8*
Àngth
;

4556 
èrgëC≠acôy
) {

4559 *
èrgë
++=(
uöt8_t
)(
vÆue
>>16);

4560 if(
off£ts
!=
NULL
) {

4561 *
off£ts
++=
sour˚Index
;

4564 *
èrgë
++=(
uöt8_t
)(
vÆue
>>8);

4565 if(
off£ts
!=
NULL
) {

4566 *
off£ts
++=
sour˚Index
;

4569 *
èrgë
++=(
uöt8_t
)
vÆue
;

4570 if(
off£ts
!=
NULL
) {

4571 *
off£ts
++=
sour˚Index
;

4579 
èrgëC≠acôy
=0;

4580 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

4581 
c
=0;

4586 
c
=0;

4587 if(
off£ts
!=
NULL
) {

4588 
¥evSour˚Index
=
sour˚Index
;

4589 
sour˚Index
=
√xtSour˚Index
;

4594 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

4609 if–
	`U_SUCCESS
(*
pEº‹Code
) &&

4610 
ouçutTy≥
==
MBCS_OUTPUT_2_SISO
 && 
¥evLígth
==2 &&

4611 
pArgs
->
Êush
 && 
sour˚
>=
sour˚Limô
 && 
c
==0

4614 if(
èrgëC≠acôy
>0) {

4615 *
èrgë
++=(
uöt8_t
)
si_vÆue
[0];

4616 i‡(
si_vÆue_Àngth
 == 2) {

4617 i‡(
èrgëC≠acôy
<2) {

4618 
˙v
->
ch¨Eº‹Buf„r
[0]=(
uöt8_t
)
si_vÆue
[1];

4619 
˙v
->
ch¨Eº‹Buf„rLígth
=1;

4620 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

4622 *
èrgë
++=(
uöt8_t
)
si_vÆue
[1];

4625 if(
off£ts
!=
NULL
) {

4627 *
off£ts
++=
¥evSour˚Index
;

4631 
˙v
->
ch¨Eº‹Buf„r
[0]=(
uöt8_t
)
si_vÆue
[0];

4632 i‡(
si_vÆue_Àngth
 == 2) {

4633 
˙v
->
ch¨Eº‹Buf„r
[1]=(
uöt8_t
)
si_vÆue
[1];

4635 
˙v
->
ch¨Eº‹Buf„rLígth
=
si_vÆue_Àngth
;

4636 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

4638 
¥evLígth
=1;

4642 
˙v
->
‰omUCh¨32
=
c
;

4643 
˙v
->
‰omUnicodeSètus
=
¥evLígth
;

4646 
pArgs
->
sour˚
=source;

4647 
pArgs
->
èrgë
=(*)target;

4648 
pArgs
->
off£ts
=offsets;

4649 
	}
}

4668 
U_CFUNC
 
öt32_t


4669 
	$u˙v_MBCSFromUCh¨32
(
UC⁄vîãrSh¨edD©a
 *
sh¨edD©a
,

4670 
UCh¨32
 
c
, 
uöt32_t
 *
pVÆue
,

4671 
UBoﬁ
 
u£FÆlback
) {

4672 c⁄° 
öt32_t
 *
cx
;

4673 c⁄° 
uöt16_t
 *
èbÀ
;

4676 c⁄° 
uöt8_t
 *
p
;

4678 
uöt32_t
 
°age2E¡ry
;

4679 
uöt32_t
 
vÆue
;

4680 
öt32_t
 
Àngth
;

4683 if(
c
<=0xfff‡|| (
sh¨edD©a
->
mbcs
.
unicodeMask
&
UCNV_HAS_SUPPLEMENTARY
)) {

4684 
èbÀ
=
sh¨edD©a
->
mbcs
.
‰omUnicodeTabÀ
;

4687 if(
sh¨edD©a
->
mbcs
.
ouçutTy≥
==
MBCS_OUTPUT_1
) {

4688 
vÆue
=
	`MBCS_SINGLE_RESULT_FROM_U
(
èbÀ
, (
uöt16_t
 *)
sh¨edD©a
->
mbcs
.
‰omUnicodeByãs
, 
c
);

4690 if(
u£FÆlback
 ? 
vÆue
>=0x800 : value>=0xc00) {

4691 *
pVÆue
=
vÆue
&0xff;

4695 
°age2E¡ry
=
	`MBCS_STAGE_2_FROM_U
(
èbÀ
, 
c
);

4698 
sh¨edD©a
->
mbcs
.
ouçutTy≥
) {

4699 
MBCS_OUTPUT_2
:

4700 
vÆue
=
	`MBCS_VALUE_2_FROM_STAGE_2
(
sh¨edD©a
->
mbcs
.
‰omUnicodeByãs
, 
°age2E¡ry
, 
c
);

4701 if(
vÆue
<=0xff) {

4702 
Àngth
=1;

4704 
Àngth
=2;

4709 
MBCS_OUTPUT_DBCS_ONLY
:

4711 
vÆue
=
	`MBCS_VALUE_2_FROM_STAGE_2
(
sh¨edD©a
->
mbcs
.
‰omUnicodeByãs
, 
°age2E¡ry
, 
c
);

4712 if(
vÆue
<=0xff) {

4714 
vÆue
=
°age2E¡ry
=0;

4715 
Àngth
=0;

4717 
Àngth
=2;

4720 
MBCS_OUTPUT_3
:

4721 
p
=
	`MBCS_POINTER_3_FROM_STAGE_2
(
sh¨edD©a
->
mbcs
.
‰omUnicodeByãs
, 
°age2E¡ry
, 
c
);

4722 
vÆue
=((
uöt32_t
)*
p
<<16)|((uint32_t)p[1]<<8)|p[2];

4723 if(
vÆue
<=0xff) {

4724 
Àngth
=1;

4725 } if(
vÆue
<=0xffff) {

4726 
Àngth
=2;

4728 
Àngth
=3;

4731 
MBCS_OUTPUT_4
:

4732 
vÆue
=
	`MBCS_VALUE_4_FROM_STAGE_2
(
sh¨edD©a
->
mbcs
.
‰omUnicodeByãs
, 
°age2E¡ry
, 
c
);

4733 if(
vÆue
<=0xff) {

4734 
Àngth
=1;

4735 } if(
vÆue
<=0xffff) {

4736 
Àngth
=2;

4737 } if(
vÆue
<=0xffffff) {

4738 
Àngth
=3;

4740 
Àngth
=4;

4743 
MBCS_OUTPUT_3_EUC
:

4744 
vÆue
=
	`MBCS_VALUE_2_FROM_STAGE_2
(
sh¨edD©a
->
mbcs
.
‰omUnicodeByãs
, 
°age2E¡ry
, 
c
);

4746 if(
vÆue
<=0xff) {

4747 
Àngth
=1;

4748 } if((
vÆue
&0x8000)==0) {

4749 
vÆue
|=0x8e8000;

4750 
Àngth
=3;

4751 } if((
vÆue
&0x80)==0) {

4752 
vÆue
|=0x8f0080;

4753 
Àngth
=3;

4755 
Àngth
=2;

4758 
MBCS_OUTPUT_4_EUC
:

4759 
p
=
	`MBCS_POINTER_3_FROM_STAGE_2
(
sh¨edD©a
->
mbcs
.
‰omUnicodeByãs
, 
°age2E¡ry
, 
c
);

4760 
vÆue
=((
uöt32_t
)*
p
<<16)|((uint32_t)p[1]<<8)|p[2];

4762 if(
vÆue
<=0xff) {

4763 
Àngth
=1;

4764 } if(
vÆue
<=0xffff) {

4765 
Àngth
=2;

4766 } if((
vÆue
&0x800000)==0) {

4767 
vÆue
|=0x8e800000;

4768 
Àngth
=4;

4769 } if((
vÆue
&0x8000)==0) {

4770 
vÆue
|=0x8f008000;

4771 
Àngth
=4;

4773 
Àngth
=3;

4783 if–
	`MBCS_FROM_U_IS_ROUNDTRIP
(
°age2E¡ry
, 
c
) ||

4784 (
	`FROM_U_USE_FALLBACK
(
u£FÆlback
, 
c
Ë&& 
vÆue
!=0)

4792 *
pVÆue
=
vÆue
;

4793  
Àngth
;

4798 
cx
=
sh¨edD©a
->
mbcs
.
extIndexes
;

4799 if(
cx
!=
NULL
) {

4800 
Àngth
=
	`u˙v_extSim∂eM©chFromU
(
cx
, 
c
, 
pVÆue
, 
u£FÆlback
);

4801  
Àngth
>=0 ?Üength : -length;

4806 
	}
}

4822 
U_CFUNC
 
öt32_t


4823 
	$u˙v_MBCSSögÀFromUCh¨32
(
UC⁄vîãrSh¨edD©a
 *
sh¨edD©a
,

4824 
UCh¨32
 
c
,

4825 
UBoﬁ
 
u£FÆlback
) {

4826 c⁄° 
uöt16_t
 *
èbÀ
;

4827 
öt32_t
 
vÆue
;

4830 if(
c
>=0x10000 && !(
sh¨edD©a
->
mbcs
.
unicodeMask
&
UCNV_HAS_SUPPLEMENTARY
)) {

4835 
èbÀ
=
sh¨edD©a
->
mbcs
.
‰omUnicodeTabÀ
;

4838 
vÆue
=
	`MBCS_SINGLE_RESULT_FROM_U
(
èbÀ
, (
uöt16_t
 *)
sh¨edD©a
->
mbcs
.
‰omUnicodeByãs
, 
c
);

4840 if(
u£FÆlback
 ? 
vÆue
>=0x800 : value>=0xc00) {

4841  
vÆue
&0xff;

4845 
	}
}

4851 c⁄° 
UCh¨32


4852 
	gutf8_möLegÆ
[5]={ 0, 0, 0x80, 0x800, 0x10000 };

4855 c⁄° 
UCh¨32


4856 
	gutf8_off£ts
[7]={ 0, 0, 0x3080, 0xE2080, 0x3C82080 };

4859 
	$u˙v_SBCSFromUTF8
(
UC⁄vîãrFromUnicodeArgs
 *
pFromUArgs
,

4860 
UC⁄vîãrToUnicodeArgs
 *
pToUArgs
,

4861 
UEº‹Code
 *
pEº‹Code
) {

4862 
UC⁄vîãr
 *
utf8
, *
˙v
;

4863 c⁄° 
uöt8_t
 *
sour˚
, *
sour˚Limô
;

4864 
uöt8_t
 *
èrgë
;

4865 
öt32_t
 
èrgëC≠acôy
;

4867 c⁄° 
uöt16_t
 *
èbÀ
, *
sbcsIndex
;

4868 c⁄° 
uöt16_t
 *
ªsu…s
;

4870 
öt8_t
 
ﬁdToULígth
, 
toULígth
, 
toULimô
;

4872 
UCh¨32
 
c
;

4873 
uöt8_t
 
b
, 
t1
, 
t2
;

4875 
uöt32_t
 
asciiRoundåùs
;

4876 
uöt16_t
 
vÆue
, 
möVÆue
;

4877 
UBoﬁ
 
hasSuµÀmíèry
;

4880 
utf8
=
pToUArgs
->
c⁄vîãr
;

4881 
˙v
=
pFromUArgs
->
c⁄vîãr
;

4882 
sour˚
=(
uöt8_t
 *)
pToUArgs
->source;

4883 
sour˚Limô
=(
uöt8_t
 *)
pToUArgs
->sourceLimit;

4884 
èrgë
=(
uöt8_t
 *)
pFromUArgs
->target;

4885 
èrgëC≠acôy
=(
öt32_t
)(
pFromUArgs
->
èrgëLimô
-pFromUArgs->
èrgë
);

4887 
èbÀ
=
˙v
->
sh¨edD©a
->
mbcs
.
‰omUnicodeTabÀ
;

4888 
sbcsIndex
=
˙v
->
sh¨edD©a
->
mbcs
.sbcsIndex;

4889 if((
˙v
->
›ti⁄s
&
UCNV_OPTION_SWAP_LFNL
)!=0) {

4890 
ªsu…s
=(
uöt16_t
 *)
˙v
->
sh¨edD©a
->
mbcs
.
sw≠LFNLFromUnicodeByãs
;

4892 
ªsu…s
=(
uöt16_t
 *)
˙v
->
sh¨edD©a
->
mbcs
.
‰omUnicodeByãs
;

4894 
asciiRoundåùs
=
˙v
->
sh¨edD©a
->
mbcs
.asciiRoundtrips;

4896 if(
˙v
->
u£FÆlback
) {

4898 
möVÆue
=0x800;

4901 
möVÆue
=0xc00;

4903 
hasSuµÀmíèry
=(
UBoﬁ
)(
˙v
->
sh¨edD©a
->
mbcs
.
unicodeMask
&
UCNV_HAS_SUPPLEMENTARY
);

4906 
c
=(
UCh¨32
)
utf8
->
toUnicodeSètus
;

4907 if(
c
!=0) {

4908 
toULígth
=
ﬁdToULígth
=
utf8
->toULength;

4909 
toULimô
=(
öt8_t
)
utf8
->
mode
;

4911 
toULígth
=
ﬁdToULígth
=
toULimô
=0;

4923 
öt32_t
 
i
, 
Àngth
;

4925 
Àngth
=(
öt32_t
)(
sour˚Limô
-
sour˚
Ë- (
toULimô
-
ﬁdToULígth
);

4926 
i
=0; i<3 && i<
Àngth
;) {

4927 
b
=*(
sour˚Limô
-
i
-1);

4928 if(
	`U8_IS_TRAIL
(
b
)) {

4929 ++
i
;

4931 if(
i
<
utf8_cou¡TøûByãs
[
b
]) {

4933 
sour˚Limô
-=
i
+1;

4940 if(
c
!=0 && 
èrgëC≠acôy
>0) {

4941 
utf8
->
toUnicodeSètus
=0;

4942 
utf8
->
toULígth
=0;

4943 
m‹eByãs
;

4966 
sour˚
<
sour˚Limô
) {

4967 if(
èrgëC≠acôy
>0) {

4968 
b
=*
sour˚
++;

4969 if((
öt8_t
)
b
>=0) {

4971 if(
	`IS_ASCII_ROUNDTRIP
(
b
, 
asciiRoundåùs
)) {

4972 *
èrgë
++=(
uöt8_t
)
b
;

4973 --
èrgëC≠acôy
;

4976 
c
=
b
;

4977 
vÆue
=
	`SBCS_RESULT_FROM_UTF8
(
sbcsIndex
, 
ªsu…s
, 0, 
c
);

4980 if(
b
<0xe0) {

4982 
b
>=0xc2 &&

4983 (
t1
=(
uöt8_t
)(*
sour˚
-0x80)) <= 0x3f

4985 
c
=
b
&0x1f;

4986 ++
sour˚
;

4987 
vÆue
=
	`SBCS_RESULT_FROM_UTF8
(
sbcsIndex
, 
ªsu…s
, 
c
, 
t1
);

4988 if(
vÆue
>=
möVÆue
) {

4989 *
èrgë
++=(
uöt8_t
)
vÆue
;

4990 --
èrgëC≠acôy
;

4993 
c
=(c<<6)|
t1
;

4996 
c
=-1;

4998 } if(
b
==0xe0) {

5000 (
t1
=(
uöt8_t
)(
sour˚
[0]-0x80)) <= 0x3f &&Å1 >= 0x20 &&

5001 (
t2
=(
uöt8_t
)(
sour˚
[1]-0x80)) <= 0x3f

5003 
c
=
t1
;

5004 
sour˚
+=2;

5005 
vÆue
=
	`SBCS_RESULT_FROM_UTF8
(
sbcsIndex
, 
ªsu…s
, 
c
, 
t2
);

5006 if(
vÆue
>=
möVÆue
) {

5007 *
èrgë
++=(
uöt8_t
)
vÆue
;

5008 --
èrgëC≠acôy
;

5011 
c
=(c<<6)|
t2
;

5014 
c
=-1;

5017 
c
=-1;

5020 if(
c
<0) {

5022 
ﬁdToULígth
=0;

5023 
toULígth
=1;

5024 
toULimô
=
utf8_cou¡TøûByãs
[
b
]+1;

5025 
c
=
b
;

5026 
m‹eByãs
:

5027 
toULígth
<
toULimô
) {

5035 if(
sour˚
<(
uöt8_t
 *)
pToUArgs
->
sour˚Limô
) {

5036 
b
=*
sour˚
;

5037 if(
	`U8_IS_TRAIL
(
b
)) {

5038 ++
sour˚
;

5039 ++
toULígth
;

5040 
c
=(c<<6)+
b
;

5046 
sour˚
-=(
toULígth
-
ﬁdToULígth
);

5047 
ﬁdToULígth
<
toULígth
) {

5048 
utf8
->
toUByãs
[
ﬁdToULígth
++]=*
sour˚
++;

5050 
utf8
->
toUnicodeSètus
=
c
;

5051 
utf8
->
toULígth
=toULength;

5052 
utf8
->
mode
=
toULimô
;

5053 
pToUArgs
->
sour˚
=(*)source;

5054 
pFromUArgs
->
èrgë
=(*)target;

5059 if–
toULígth
==
toULimô
 &&

5060 (
toULígth
==3 ||ÅoULength==2) &&

5061 (
c
-=
utf8_off£ts
[
toULígth
])>=
utf8_möLegÆ
[toULength] &&

5062 (
c
<=0xd7ff || 0xe000<=c)

5064 
vÆue
=
	`MBCS_SINGLE_RESULT_FROM_U
(
èbÀ
, 
ªsu…s
, 
c
);

5066 
toULígth
==
toULimô
 &&ÅoULength==4 &&

5067 (0x10000<=(
c
-=
utf8_off£ts
[4]) && c<=0x10ffff)

5070 if(!
hasSuµÀmíèry
) {

5072 
vÆue
=0;

5074 
vÆue
=
	`MBCS_SINGLE_RESULT_FROM_U
(
èbÀ
, 
ªsu…s
, 
c
);

5078 
sour˚
-=(
toULígth
-
ﬁdToULígth
);

5079 
ﬁdToULígth
<
toULígth
) {

5080 
utf8
->
toUByãs
[
ﬁdToULígth
++]=*
sour˚
++;

5082 
utf8
->
toULígth
=toULength;

5083 
pToUArgs
->
sour˚
=(*)source;

5084 
pFromUArgs
->
èrgë
=(*)target;

5085 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

5091 if(
vÆue
>=
möVÆue
) {

5093 *
èrgë
++=(
uöt8_t
)
vÆue
;

5094 --
èrgëC≠acôy
;

5103 c⁄° 
UCh¨
 
nul
=0;

5104 c⁄° 
UCh¨
 *
noSour˚
=&
nul
;

5105 
c
=
	`_extFromU
(
˙v
, cnv->
sh¨edD©a
,

5106 
c
, &
noSour˚
,ÇoSource,

5107 &
èrgë
,Å¨gë+
èrgëC≠acôy
,

5108 
NULL
, -1,

5109 
pFromUArgs
->
Êush
,

5110 
pEº‹Code
);

5112 if(
	`U_FAILURE
(*
pEº‹Code
)) {

5114 
˙v
->
‰omUCh¨32
=
c
;

5116 } if(
˙v
->
¥eFromUFú°CP
>=0) {

5128 
èrgëC≠acôy
=(
öt32_t
)(
pFromUArgs
->
èrgëLimô
-(*)
èrgë
);

5133 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

5143 if(
	`U_SUCCESS
(*
pEº‹Code
Ë&& 
sour˚
<(
sour˚Limô
=(
uöt8_t
 *)
pToUArgs
->sourceLimit)) {

5144 
c
=
utf8
->
toUByãs
[0]=
b
=*
sour˚
++;

5145 
toULígth
=1;

5146 
toULimô
=
utf8_cou¡TøûByãs
[
b
]+1;

5147 
sour˚
<
sour˚Limô
) {

5148 
utf8
->
toUByãs
[
toULígth
++]=
b
=*
sour˚
++;

5149 
c
=(c<<6)+
b
;

5151 
utf8
->
toUnicodeSètus
=
c
;

5152 
utf8
->
toULígth
=toULength;

5153 
utf8
->
mode
=
toULimô
;

5157 
pToUArgs
->
sour˚
=(*)source;

5158 
pFromUArgs
->
èrgë
=(*)target;

5159 
	}
}

5162 
	$u˙v_DBCSFromUTF8
(
UC⁄vîãrFromUnicodeArgs
 *
pFromUArgs
,

5163 
UC⁄vîãrToUnicodeArgs
 *
pToUArgs
,

5164 
UEº‹Code
 *
pEº‹Code
) {

5165 
UC⁄vîãr
 *
utf8
, *
˙v
;

5166 c⁄° 
uöt8_t
 *
sour˚
, *
sour˚Limô
;

5167 
uöt8_t
 *
èrgë
;

5168 
öt32_t
 
èrgëC≠acôy
;

5170 c⁄° 
uöt16_t
 *
èbÀ
, *
mbcsIndex
;

5171 c⁄° 
uöt16_t
 *
ªsu…s
;

5173 
öt8_t
 
ﬁdToULígth
, 
toULígth
, 
toULimô
;

5175 
UCh¨32
 
c
;

5176 
uöt8_t
 
b
, 
t1
, 
t2
;

5178 
uöt32_t
 
°age2E¡ry
;

5179 
uöt32_t
 
asciiRoundåùs
;

5180 
uöt16_t
 
vÆue
, 
möVÆue
;

5181 
UBoﬁ
 
hasSuµÀmíèry
;

5184 
utf8
=
pToUArgs
->
c⁄vîãr
;

5185 
˙v
=
pFromUArgs
->
c⁄vîãr
;

5186 
sour˚
=(
uöt8_t
 *)
pToUArgs
->source;

5187 
sour˚Limô
=(
uöt8_t
 *)
pToUArgs
->sourceLimit;

5188 
èrgë
=(
uöt8_t
 *)
pFromUArgs
->target;

5189 
èrgëC≠acôy
=(
öt32_t
)(
pFromUArgs
->
èrgëLimô
-pFromUArgs->
èrgë
);

5191 
èbÀ
=
˙v
->
sh¨edD©a
->
mbcs
.
‰omUnicodeTabÀ
;

5192 
mbcsIndex
=
˙v
->
sh¨edD©a
->
mbcs
.mbcsIndex;

5193 if((
˙v
->
›ti⁄s
&
UCNV_OPTION_SWAP_LFNL
)!=0) {

5194 
ªsu…s
=(
uöt16_t
 *)
˙v
->
sh¨edD©a
->
mbcs
.
sw≠LFNLFromUnicodeByãs
;

5196 
ªsu…s
=(
uöt16_t
 *)
˙v
->
sh¨edD©a
->
mbcs
.
‰omUnicodeByãs
;

5198 
asciiRoundåùs
=
˙v
->
sh¨edD©a
->
mbcs
.asciiRoundtrips;

5200 if(
˙v
->
u£FÆlback
) {

5202 
möVÆue
=0x800;

5205 
möVÆue
=0xc00;

5207 
hasSuµÀmíèry
=(
UBoﬁ
)(
˙v
->
sh¨edD©a
->
mbcs
.
unicodeMask
&
UCNV_HAS_SUPPLEMENTARY
);

5210 
c
=(
UCh¨32
)
utf8
->
toUnicodeSètus
;

5211 if(
c
!=0) {

5212 
toULígth
=
ﬁdToULígth
=
utf8
->toULength;

5213 
toULimô
=(
öt8_t
)
utf8
->
mode
;

5215 
toULígth
=
ﬁdToULígth
=
toULimô
=0;

5227 
öt32_t
 
i
, 
Àngth
;

5229 
Àngth
=(
öt32_t
)(
sour˚Limô
-
sour˚
Ë- (
toULimô
-
ﬁdToULígth
);

5230 
i
=0; i<3 && i<
Àngth
;) {

5231 
b
=*(
sour˚Limô
-
i
-1);

5232 if(
	`U8_IS_TRAIL
(
b
)) {

5233 ++
i
;

5235 if(
i
<
utf8_cou¡TøûByãs
[
b
]) {

5237 
sour˚Limô
-=
i
+1;

5244 if(
c
!=0 && 
èrgëC≠acôy
>0) {

5245 
utf8
->
toUnicodeSètus
=0;

5246 
utf8
->
toULígth
=0;

5247 
m‹eByãs
;

5252 
sour˚
<
sour˚Limô
) {

5253 if(
èrgëC≠acôy
>0) {

5254 
b
=*
sour˚
++;

5255 if((
öt8_t
)
b
>=0) {

5257 if(
	`IS_ASCII_ROUNDTRIP
(
b
, 
asciiRoundåùs
)) {

5258 *
èrgë
++=
b
;

5259 --
èrgëC≠acôy
;

5262 
vÆue
=
	`DBCS_RESULT_FROM_UTF8
(
mbcsIndex
, 
ªsu…s
, 0, 
b
);

5263 if(
vÆue
==0) {

5264 
c
=
b
;

5265 
u«ssig√d
;

5269 if(
b
>0xe0) {

5271 (((
t1
=(
uöt8_t
)(
sour˚
[0]-0x80), 
b
<0xed) && (t1 <= 0x3f)) ||

5272 (
b
==0xed && (
t1
 <= 0x1f))) &&

5273 (
t2
=(
uöt8_t
)(
sour˚
[1]-0x80)) <= 0x3f

5275 
c
=((
b
&0xf)<<6)|
t1
;

5276 
sour˚
+=2;

5277 
vÆue
=
	`DBCS_RESULT_FROM_UTF8
(
mbcsIndex
, 
ªsu…s
, 
c
, 
t2
);

5278 if(
vÆue
==0) {

5279 
c
=(c<<6)|
t2
;

5280 
u«ssig√d
;

5283 
c
=-1;

5285 } if(
b
<0xe0) {

5287 
b
>=0xc2 &&

5288 (
t1
=(
uöt8_t
)(*
sour˚
-0x80)) <= 0x3f

5290 
c
=
b
&0x1f;

5291 ++
sour˚
;

5292 
vÆue
=
	`DBCS_RESULT_FROM_UTF8
(
mbcsIndex
, 
ªsu…s
, 
c
, 
t1
);

5293 if(
vÆue
==0) {

5294 
c
=(c<<6)|
t1
;

5295 
u«ssig√d
;

5298 
c
=-1;

5301 
c
=-1;

5304 if(
c
<0) {

5306 
ﬁdToULígth
=0;

5307 
toULígth
=1;

5308 
toULimô
=
utf8_cou¡TøûByãs
[
b
]+1;

5309 
c
=
b
;

5310 
m‹eByãs
:

5311 
toULígth
<
toULimô
) {

5319 if(
sour˚
<(
uöt8_t
 *)
pToUArgs
->
sour˚Limô
) {

5320 
b
=*
sour˚
;

5321 if(
	`U8_IS_TRAIL
(
b
)) {

5322 ++
sour˚
;

5323 ++
toULígth
;

5324 
c
=(c<<6)+
b
;

5330 
sour˚
-=(
toULígth
-
ﬁdToULígth
);

5331 
ﬁdToULígth
<
toULígth
) {

5332 
utf8
->
toUByãs
[
ﬁdToULígth
++]=*
sour˚
++;

5334 
utf8
->
toUnicodeSètus
=
c
;

5335 
utf8
->
toULígth
=toULength;

5336 
utf8
->
mode
=
toULimô
;

5337 
pToUArgs
->
sour˚
=(*)source;

5338 
pFromUArgs
->
èrgë
=(*)target;

5343 if–
toULígth
==
toULimô
 &&

5344 (
toULígth
==3 ||ÅoULength==2) &&

5345 (
c
-=
utf8_off£ts
[
toULígth
])>=
utf8_möLegÆ
[toULength] &&

5346 (
c
<=0xd7ff || 0xe000<=c)

5348 
°age2E¡ry
=
	`MBCS_STAGE_2_FROM_U
(
èbÀ
, 
c
);

5350 
toULígth
==
toULimô
 &&ÅoULength==4 &&

5351 (0x10000<=(
c
-=
utf8_off£ts
[4]) && c<=0x10ffff)

5354 if(!
hasSuµÀmíèry
) {

5356 
°age2E¡ry
=0;

5358 
°age2E¡ry
=
	`MBCS_STAGE_2_FROM_U
(
èbÀ
, 
c
);

5362 
sour˚
-=(
toULígth
-
ﬁdToULígth
);

5363 
ﬁdToULígth
<
toULígth
) {

5364 
utf8
->
toUByãs
[
ﬁdToULígth
++]=*
sour˚
++;

5366 
utf8
->
toULígth
=toULength;

5367 
pToUArgs
->
sour˚
=(*)source;

5368 
pFromUArgs
->
èrgë
=(*)target;

5369 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

5375 
vÆue
=
	`MBCS_VALUE_2_FROM_STAGE_2
(
ªsu…s
, 
°age2E¡ry
, 
c
);

5378 if(!(
	`MBCS_FROM_U_IS_ROUNDTRIP
(
°age2E¡ry
, 
c
) ||

5379 (
	`UCNV_FROM_U_USE_FALLBACK
(
˙v
, 
c
Ë&& 
vÆue
!=0))

5381 
u«ssig√d
;

5388 if(
vÆue
<=0xff) {

5390 *
èrgë
++=(
uöt8_t
)
vÆue
;

5391 --
èrgëC≠acôy
;

5393 *
èrgë
++=(
uöt8_t
)(
vÆue
>>8);

5394 if(2<=
èrgëC≠acôy
) {

5395 *
èrgë
++=(
uöt8_t
)
vÆue
;

5396 
èrgëC≠acôy
-=2;

5398 
˙v
->
ch¨Eº‹Buf„r
[0]=()
vÆue
;

5399 
˙v
->
ch¨Eº‹Buf„rLígth
=1;

5402 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

5408 
u«ssig√d
:

5416 c⁄° 
UCh¨
 
nul
=0;

5417 c⁄° 
UCh¨
 *
noSour˚
=&
nul
;

5418 
c
=
	`_extFromU
(
˙v
, cnv->
sh¨edD©a
,

5419 
c
, &
noSour˚
,ÇoSource,

5420 &
èrgë
,Å¨gë+
èrgëC≠acôy
,

5421 
NULL
, -1,

5422 
pFromUArgs
->
Êush
,

5423 
pEº‹Code
);

5425 if(
	`U_FAILURE
(*
pEº‹Code
)) {

5427 
˙v
->
‰omUCh¨32
=
c
;

5429 } if(
˙v
->
¥eFromUFú°CP
>=0) {

5441 
èrgëC≠acôy
=(
öt32_t
)(
pFromUArgs
->
èrgëLimô
-(*)
èrgë
);

5447 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

5457 if(
	`U_SUCCESS
(*
pEº‹Code
Ë&& 
sour˚
<(
sour˚Limô
=(
uöt8_t
 *)
pToUArgs
->sourceLimit)) {

5458 
c
=
utf8
->
toUByãs
[0]=
b
=*
sour˚
++;

5459 
toULígth
=1;

5460 
toULimô
=
utf8_cou¡TøûByãs
[
b
]+1;

5461 
sour˚
<
sour˚Limô
) {

5462 
utf8
->
toUByãs
[
toULígth
++]=
b
=*
sour˚
++;

5463 
c
=(c<<6)+
b
;

5465 
utf8
->
toUnicodeSètus
=
c
;

5466 
utf8
->
toULígth
=toULength;

5467 
utf8
->
mode
=
toULimô
;

5471 
pToUArgs
->
sour˚
=(*)source;

5472 
pFromUArgs
->
èrgë
=(*)target;

5473 
	}
}

5478 
	$u˙v_MBCSGëSèπîs
(c⁄° 
UC⁄vîãr
* 
˙v
,

5479 
UBoﬁ
 
°¨ãrs
[256],

5480 
UEº‹Code
 *
pEº‹Code
) {

5481 c⁄° 
öt32_t
 *
°©e0
;

5482 
i
;

5484 
°©e0
=
˙v
->
sh¨edD©a
->
mbcs
.
°©eTabÀ
[˙v->sh¨edD©a->mbcs.
dbcsO∆ySèã
];

5485 
i
=0; i<256; ++i) {

5487 
°¨ãrs
[
i
](
UBoﬁ
)
	`MBCS_ENTRY_IS_TRANSITION
(
°©e0
[i]);

5489 
	}
}

5495 
U_CFUNC
 
UBoﬁ


5496 
	$u˙v_MBCSIsLódByã
(
UC⁄vîãrSh¨edD©a
 *
sh¨edD©a
, 
byã
) {

5497  (
UBoﬁ
)
	`MBCS_ENTRY_IS_TRANSITION
(
sh¨edD©a
->
mbcs
.
°©eTabÀ
[0][(
uöt8_t
)
byã
]);

5498 
	}
}

5501 
	$u˙v_MBCSWrôeSub
(
UC⁄vîãrFromUnicodeArgs
 *
pArgs
,

5502 
öt32_t
 
off£tIndex
,

5503 
UEº‹Code
 *
pEº‹Code
) {

5504 
UC⁄vîãr
 *
˙v
=
pArgs
->
c⁄vîãr
;

5505 *
p
, *
subch¨
;

5506 
buf„r
[4];

5507 
öt32_t
 
Àngth
;

5510 if–
˙v
->
subCh¨1
!=0 &&

5511 (
˙v
->
sh¨edD©a
->
mbcs
.
extIndexes
!=
NULL
 ?

5512 
˙v
->
u£SubCh¨1
 :

5513 (
˙v
->
övÆidUCh¨Buf„r
[0]<=0xff))

5516 
subch¨
=(*)&
˙v
->
subCh¨1
;

5517 
Àngth
=1;

5520 
subch¨
=(*)
˙v
->
subCh¨s
;

5521 
Àngth
=
˙v
->
subCh¨Lí
;

5525 
˙v
->
u£SubCh¨1
=
FALSE
;

5527 i‡(
˙v
->
sh¨edD©a
->
mbcs
.
ouçutTy≥
 =
MBCS_OUTPUT_2_SISO
) {

5528 
p
=
buf„r
;

5531 
Àngth
) {

5533 if(
˙v
->
‰omUnicodeSètus
==2) {

5535 
˙v
->
‰omUnicodeSètus
=1;

5536 *
p
++=
UCNV_SI
;

5538 *
p
++=
subch¨
[0];

5541 if(
˙v
->
‰omUnicodeSètus
<=1) {

5543 
˙v
->
‰omUnicodeSètus
=2;

5544 *
p
++=
UCNV_SO
;

5546 *
p
++=
subch¨
[0];

5547 *
p
++=
subch¨
[1];

5550 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

5553 
subch¨
=
buf„r
;

5554 
Àngth
=(
öt32_t
)(
p
-
buf„r
);

5557 
	`u˙v_cbFromUWrôeByãs
(
pArgs
, 
subch¨
, 
Àngth
, 
off£tIndex
, 
pEº‹Code
);

5558 
	}
}

5560 
U_CFUNC
 
UC⁄vîãrTy≥


5561 
	$u˙v_MBCSGëTy≥
(c⁄° 
UC⁄vîãr
* 
c⁄vîãr
) {

5563 if(
c⁄vîãr
->
sh¨edD©a
->
mbcs
.
cou¡Sèãs
==1) {

5564  (
UC⁄vîãrTy≥
)
UCNV_SBCS
;

5565 } if((
c⁄vîãr
->
sh¨edD©a
->
mbcs
.
ouçutTy≥
&0xff)==
MBCS_OUTPUT_2_SISO
) {

5566  (
UC⁄vîãrTy≥
)
UCNV_EBCDIC_STATEFUL
;

5567 } if(
c⁄vîãr
->
sh¨edD©a
->
°©icD©a
->
möByãsPîCh¨
==2 && c⁄vîãr->sh¨edD©a->°©icD©a->
maxByãsPîCh¨
==2) {

5568  (
UC⁄vîãrTy≥
)
UCNV_DBCS
;

5570  (
UC⁄vîãrTy≥
)
UCNV_MBCS
;

5571 
	}
}

5573 c⁄° 
UC⁄vîãrIm∂
 
	g_SBCSUTF8Im∂
={

5574 
UCNV_MBCS
,

5576 
u˙v_MBCSLﬂd
,

5577 
u˙v_MBCSU∆ﬂd
,

5579 
u˙v_MBCSO≥n
,

5580 
NULL
,

5581 
NULL
,

5583 
u˙v_MBCSToUnicodeWôhOff£ts
,

5584 
u˙v_MBCSToUnicodeWôhOff£ts
,

5585 
u˙v_MBCSFromUnicodeWôhOff£ts
,

5586 
u˙v_MBCSFromUnicodeWôhOff£ts
,

5587 
u˙v_MBCSGëNextUCh¨
,

5589 
u˙v_MBCSGëSèπîs
,

5590 
u˙v_MBCSGëName
,

5591 
u˙v_MBCSWrôeSub
,

5592 
NULL
,

5593 
u˙v_MBCSGëUnicodeSë
,

5595 
NULL
,

5596 
u˙v_SBCSFromUTF8


5599 c⁄° 
UC⁄vîãrIm∂
 
	g_DBCSUTF8Im∂
={

5600 
UCNV_MBCS
,

5602 
u˙v_MBCSLﬂd
,

5603 
u˙v_MBCSU∆ﬂd
,

5605 
u˙v_MBCSO≥n
,

5606 
NULL
,

5607 
NULL
,

5609 
u˙v_MBCSToUnicodeWôhOff£ts
,

5610 
u˙v_MBCSToUnicodeWôhOff£ts
,

5611 
u˙v_MBCSFromUnicodeWôhOff£ts
,

5612 
u˙v_MBCSFromUnicodeWôhOff£ts
,

5613 
u˙v_MBCSGëNextUCh¨
,

5615 
u˙v_MBCSGëSèπîs
,

5616 
u˙v_MBCSGëName
,

5617 
u˙v_MBCSWrôeSub
,

5618 
NULL
,

5619 
u˙v_MBCSGëUnicodeSë
,

5621 
NULL
,

5622 
u˙v_DBCSFromUTF8


5625 c⁄° 
UC⁄vîãrIm∂
 
	g_MBCSIm∂
={

5626 
UCNV_MBCS
,

5628 
u˙v_MBCSLﬂd
,

5629 
u˙v_MBCSU∆ﬂd
,

5631 
u˙v_MBCSO≥n
,

5632 
NULL
,

5633 
NULL
,

5635 
u˙v_MBCSToUnicodeWôhOff£ts
,

5636 
u˙v_MBCSToUnicodeWôhOff£ts
,

5637 
u˙v_MBCSFromUnicodeWôhOff£ts
,

5638 
u˙v_MBCSFromUnicodeWôhOff£ts
,

5639 
u˙v_MBCSGëNextUCh¨
,

5641 
u˙v_MBCSGëSèπîs
,

5642 
u˙v_MBCSGëName
,

5643 
u˙v_MBCSWrôeSub
,

5644 
NULL
,

5645 
u˙v_MBCSGëUnicodeSë


5653 c⁄° 
UC⁄vîãrSh¨edD©a
 
	g_MBCSD©a
={

5654 (
UC⁄vîãrSh¨edD©a
), 1,

5655 
NULL
, NULL, NULL, 
FALSE
, &
_MBCSIm∂
,

	@ucnvmbcs.h

17 #i‚de‡
__UCNVMBCS_H__


18 
	#__UCNVMBCS_H__


	)

20 
	~"unicode/uty≥s.h
"

22 #i‡!
UCONFIG_NO_CONVERSION


24 
	~"unicode/u˙v.h
"

25 
	~"u˙v_˙v.h
"

26 
	~"u˙v_ext.h
"

241 
	mMBCS_MAX_STATE_COUNT
=128

249 
	mMBCS_STATE_VALID_DIRECT_16
,

250 
	mMBCS_STATE_VALID_DIRECT_20
,

252 
	mMBCS_STATE_FALLBACK_DIRECT_16
,

253 
	mMBCS_STATE_FALLBACK_DIRECT_20
,

255 
	mMBCS_STATE_VALID_16
,

256 
	mMBCS_STATE_VALID_16_PAIR
,

258 
	mMBCS_STATE_UNASSIGNED
,

259 
	mMBCS_STATE_ILLEGAL
,

261 
	mMBCS_STATE_CHANGE_ONLY


265 
	#MBCS_ENTRY_TRANSITION
(
°©e
, 
off£t
Ë(
öt32_t
)(((öt32_t)(°©e)<<24L)|(off£t))

	)

266 
	#MBCS_ENTRY_TRANSITION_SET_OFFSET
(
íåy
, 
off£t
Ë(
öt32_t
)((”¡ry)&0xff000000)|(off£t))

	)

267 
	#MBCS_ENTRY_TRANSITION_ADD_OFFSET
(
íåy
, 
off£t
Ë(
öt32_t
)(”¡ry)+(off£t))

	)

269 
	#MBCS_ENTRY_FINAL
(
°©e
, 
a˘i⁄
, 
vÆue
Ë(
öt32_t
)(0x80000000|((öt32_t)(°©e)<<24L)|(◊˘i⁄)<<20L)|(vÆue))

	)

270 
	#MBCS_ENTRY_SET_FINAL
(
íåy
Ë(
öt32_t
)(”¡ry)|0x80000000)

	)

271 
	#MBCS_ENTRY_FINAL_SET_ACTION
(
íåy
, 
a˘i⁄
Ë(
öt32_t
)((”¡ry)&0xff0fffff)|((öt32_t)◊˘i⁄)<<20L))

	)

272 
	#MBCS_ENTRY_FINAL_SET_VALUE
(
íåy
, 
vÆue
Ë(
öt32_t
)((”¡ry)&0xfff00000)|(vÆue))

	)

273 
	#MBCS_ENTRY_FINAL_SET_ACTION_VALUE
(
íåy
, 
a˘i⁄
, 
vÆue
Ë(
öt32_t
)((”¡ry)&0xff000000)|((öt32_t)◊˘i⁄)<<20L)|(vÆue))

	)

275 
	#MBCS_ENTRY_SET_STATE
(
íåy
, 
°©e
Ë(
öt32_t
)((”¡ry)&0x80ffffff)|((öt32_t)(°©e)<<24L))

	)

277 
	#MBCS_ENTRY_STATE
(
íåy
Ë((”¡ry)>>24)&0x7f)

	)

279 
	#MBCS_ENTRY_IS_TRANSITION
(
íåy
Ë(”¡ry)>=0)

	)

280 
	#MBCS_ENTRY_IS_FINAL
(
íåy
Ë(”¡ry)<0)

	)

282 
	#MBCS_ENTRY_TRANSITION_STATE
(
íåy
Ë(”¡ry)>>24)

	)

283 
	#MBCS_ENTRY_TRANSITION_OFFSET
(
íåy
Ë(”¡ry)&0xffffff)

	)

285 
	#MBCS_ENTRY_FINAL_STATE
(
íåy
Ë((”¡ry)>>24)&0x7f)

	)

286 
	#MBCS_ENTRY_FINAL_IS_VALID_DIRECT_16
(
íåy
Ë(”¡ry)<(
öt32_t
)0x80100000)

	)

287 
	#MBCS_ENTRY_FINAL_ACTION
(
íåy
Ë((”¡ry)>>20)&0xf)

	)

288 
	#MBCS_ENTRY_FINAL_VALUE
(
íåy
Ë(”¡ry)&0xfffff)

	)

289 
	#MBCS_ENTRY_FINAL_VALUE_16
(
íåy
Ë(
uöt16_t
)”¡ry)

	)

291 
	#IS_ASCII_ROUNDTRIP
(
b
, 
asciiRoundåùs
Ë((◊sciiRoundåùsË& (1<<((b)>>2)))!=0)

	)

294 
	#MBCS_SINGLE_RESULT_FROM_U
(
èbÀ
, 
ªsu…s
, 
c
Ë‘esu…s)[ (èbÀ)[ (èbÀ)[(c)>>10] +(((c)>>4)&0x3fË] +((c)&0xfË]

	)

297 
	#SBCS_RESULT_FROM_LOW_BMP
(
èbÀ
, 
ªsu…s
, 
c
Ë‘esu…s)[ (èbÀ)[(c)>>6] +((c)&0x3fË]

	)

300 
	#SBCS_RESULT_FROM_UTF8
(
èbÀ
, 
ªsu…s
, 
l
, 
t
Ë‘esu…s)[ (èbÀ)[l] +—Ë]

	)

303 
	#MBCS_STAGE_2_FROM_U
(
èbÀ
, 
c
Ë((c⁄° 
uöt32_t
 *)—abÀ))[ (èbÀ)[(c)>>10] +(((c)>>4)&0x3fË]

	)

304 
	#MBCS_FROM_U_IS_ROUNDTRIP
(
°age2E¡ry
, 
c
Ë–((°age2E¡ryË& ((
uöt32_t
)1<< (16+((c)&0xf)Ë)Ë!=0)

	)

306 
	#MBCS_VALUE_2_FROM_STAGE_2
(
byãs
, 
°age2E¡ry
, 
c
Ë((
uöt16_t
 *)(byãs))[16*(
uöt32_t
)(uöt16_t)(°age2E¡ry)+((c)&0xf)]

	)

307 
	#MBCS_VALUE_4_FROM_STAGE_2
(
byãs
, 
°age2E¡ry
, 
c
Ë((
uöt32_t
 *)(byãs))[16*(uöt32_t)(
uöt16_t
)(°age2E¡ry)+((c)&0xf)]

	)

309 
	#MBCS_POINTER_3_FROM_STAGE_2
(
byãs
, 
°age2E¡ry
, 
c
Ë((byãs)+(16*(
uöt32_t
)(
uöt16_t
)(°age2E¡ry)+((c)&0xf))*3)

	)

312 
	#DBCS_RESULT_FROM_MOST_BMP
(
èbÀ
, 
ªsu…s
, 
c
Ë‘esu…s)[ (èbÀ)[(c)>>6] +((c)&0x3fË]

	)

315 
	#DBCS_RESULT_FROM_UTF8
(
èbÀ
, 
ªsu…s
, 
…1
, 
t2
Ë‘esu…s)[ (èbÀ)[…1] +—2Ë]

	)

324 
	mMBCS_OUTPUT_1
,

325 
	mMBCS_OUTPUT_2
,

326 
	mMBCS_OUTPUT_3
,

327 
	mMBCS_OUTPUT_4
,

329 
	mMBCS_OUTPUT_3_EUC
=8,

330 
	mMBCS_OUTPUT_4_EUC
,

332 
	mMBCS_OUTPUT_2_SISO
=12,

333 
	mMBCS_OUTPUT_2_HZ
,

335 
	mMBCS_OUTPUT_EXT_ONLY
,

337 
	mMBCS_OUTPUT_COUNT
,

339 
	mMBCS_OUTPUT_DBCS_ONLY
=0xdb

347 
uöt32_t
 
	moff£t
;

348 
UCh¨32
 
	mcodePoöt
;

349 } 
	t_MBCSToUFÆlback
;

353 
	mSBCS_FAST_MAX
=0x0fff,

354 
	mSBCS_FAST_LIMIT
=
SBCS_FAST_MAX
+1,

355 
	mMBCS_FAST_MAX
=0xd7ff,

356 
	mMBCS_FAST_LIMIT
=
MBCS_FAST_MAX
+1

365 
	sUC⁄vîãrMBCSTabÀ
 {

367 
uöt8_t
 
	mcou¡Sèãs
, 
	mdbcsO∆ySèã
, 
	m°©eTabÀOw√d
;

368 
uöt32_t
 
	mcou¡ToUFÆlbacks
;

370 c⁄° 
öt32_t
 (*
°©eTabÀ
) [256];

371 
öt32_t
 (*
sw≠LFNLSèãTabÀ
) [256];

372 c⁄° 
uöt16_t
 *
	municodeCodeUnôs
 ;

373 c⁄° 
_MBCSToUFÆlback
 *
	mtoUFÆlbacks
;

376 c⁄° 
uöt16_t
 *
	m‰omUnicodeTabÀ
;

377 c⁄° 
uöt16_t
 *
	mmbcsIndex
;

378 
uöt16_t
 
	msbcsIndex
[
SBCS_FAST_LIMIT
>>6];

379 c⁄° 
uöt8_t
 *
	m‰omUnicodeByãs
;

380 
uöt8_t
 *
	msw≠LFNLFromUnicodeByãs
;

381 
uöt32_t
 
	m‰omUByãsLígth
;

382 
uöt8_t
 
	mouçutTy≥
, 
	municodeMask
;

383 
UBoﬁ
 
	mutf8Frõndly
;

384 
UCh¨
 
	mmaxFa°UCh¨
;

387 
uöt32_t
 
	masciiRoundåùs
;

390 
uöt8_t
 *
	mªc⁄°ôuãdD©a
;

393 *
	msw≠LFNLName
;

396 
UC⁄vîãrSh¨edD©a
 *
	mba£Sh¨edD©a
;

397 c⁄° 
öt32_t
 *
	mextIndexes
;

398 } 
	tUC⁄vîãrMBCSTabÀ
;

401 
	mMBCS_OPT_LENGTH_MASK
=0x3f,

402 
	mMBCS_OPT_NO_FROM_U
=0x40,

407 
	mMBCS_OPT_INCOMPATIBLE_MASK
=0xffc0,

412 
	mMBCS_OPT_UNKNOWN_INCOMPATIBLE_MASK
=0xff80

416 
	mMBCS_HEADER_V4_LENGTH
=8,

417 
	mMBCS_HEADER_V5_MIN_LENGTH
=9

424 
UVîsi⁄Info
 
	mvîsi⁄
;

425 
uöt32_t
 
	mcou¡Sèãs
,

426 
	mcou¡ToUFÆlbacks
,

427 
	moff£tToUCodeUnôs
,

428 
	moff£tFromUTabÀ
,

429 
	moff£tFromUByãs
,

430 
	mÊags
,

431 
	m‰omUByãsLígth
;

434 
uöt32_t
 
	m›ti⁄s
;

437 
uöt32_t
 
	mfuŒSège2Lígth
;

438 } 
	t_MBCSHódî
;

453 
U_CFUNC
 
UCh¨32


454 
u˙v_MBCSSim∂eGëNextUCh¨
(
UC⁄vîãrSh¨edD©a
 *
sh¨edD©a
,

455 c⁄° *
sour˚
, 
öt32_t
 
Àngth
,

456 
UBoﬁ
 
u£FÆlback
);

463 
U_CFUNC
 
UCh¨32


464 
u˙v_MBCSSögÀSim∂eGëNextUCh¨
(
UC⁄vîãrSh¨edD©a
 *
sh¨edD©a
,

465 
uöt8_t
 
b
, 
UBoﬁ
 
u£FÆlback
);

473 
	#_MBCS_SINGLE_SIMPLE_GET_NEXT_BMP
(
sh¨edD©a
, 
b
) \

474 (
UCh¨
)
	`MBCS_ENTRY_FINAL_VALUE_16
((
sh¨edD©a
)->
mbcs
.
°©eTabÀ
[0][(
uöt8_t
)(
b
)])

	)

480 
U_CFUNC
 
UBoﬁ


481 
u˙v_MBCSIsLódByã
(
UC⁄vîãrSh¨edD©a
 *
sh¨edD©a
, 
byã
);

484 
	#_MBCS_IS_LEAD_BYTE
(
sh¨edD©a
, 
byã
) \

485 (
UBoﬁ
)
	`MBCS_ENTRY_IS_TRANSITION
((
sh¨edD©a
)->
mbcs
.
°©eTabÀ
[0][(
uöt8_t
)(
byã
)])

	)

504 
U_CFUNC
 
öt32_t


505 
u˙v_MBCSFromUCh¨32
(
UC⁄vîãrSh¨edD©a
 *
sh¨edD©a
,

506 
UCh¨32
 
c
, 
uöt32_t
 *
pVÆue
,

507 
UBoﬁ
 
u£FÆlback
);

515 
U_CFUNC
 
öt32_t


516 
u˙v_MBCSSögÀFromUCh¨32
(
UC⁄vîãrSh¨edD©a
 *
sh¨edD©a
,

517 
UCh¨32
 
c
,

518 
UBoﬁ
 
u£FÆlback
);

524 
U_CFUNC
 
UC⁄vîãrTy≥


525 
u˙v_MBCSGëTy≥
(c⁄° 
UC⁄vîãr
* 
c⁄vîãr
);

527 
U_CFUNC
 

528 
u˙v_MBCSFromUnicodeWôhOff£ts
(
UC⁄vîãrFromUnicodeArgs
 *
pArgs
,

529 
UEº‹Code
 *
pEº‹Code
);

530 
U_CFUNC
 

531 
u˙v_MBCSToUnicodeWôhOff£ts
(
UC⁄vîãrToUnicodeArgs
 *
pArgs
,

532 
UEº‹Code
 *
pEº‹Code
);

542 
U_CFUNC
 

543 
u˙v_MBCSGëUnicodeSëF‹Unicode
(c⁄° 
UC⁄vîãrSh¨edD©a
 *
sh¨edD©a
,

544 c⁄° 
USëAddî
 *
ß
,

545 
UC⁄vîãrUnicodeSë
 
which
,

546 
UEº‹Code
 *
pEº‹Code
);

554 
U_CFUNC
 

555 
u˙v_MBCSGëFûãªdUnicodeSëF‹Unicode
(c⁄° 
UC⁄vîãrSh¨edD©a
 *
sh¨edD©a
,

556 c⁄° 
USëAddî
 *
ß
,

557 
UC⁄vîãrUnicodeSë
 
which
,

558 
UC⁄vîãrSëFûãr
 
fûãr
,

559 
UEº‹Code
 *
pEº‹Code
);

	@ucnvscsu.c

22 
	~"unicode/uty≥s.h
"

24 #i‡!
UCONFIG_NO_CONVERSION


26 
	~"unicode/u˙v.h
"

27 
	~"unicode/u˙v_cb.h
"

28 
	~"u˙v_bld.h
"

29 
	~"u˙v_˙v.h
"

30 
	~"cmem‹y.h
"

36 
	mSQ0
=0x01,

37 
	mSQ7
=0x08,

38 
	mSDX
=0x0B,

39 
	mSrs
=0x0C,

40 
	mSQU
=0x0E,

41 
	mSCU
=0x0F,

42 
	mSC0
=0x10,

43 
	mSC7
=0x17,

44 
	mSD0
=0x18,

45 
	mSD7
=0x1F,

47 
	mUC0
=0xE0,

48 
	mUC7
=0xE7,

49 
	mUD0
=0xE8,

50 
	mUD7
=0xEF,

51 
	mUQU
=0xF0,

52 
	mUDX
=0xF1,

53 
	mUrs
=0xF2

62 
	mg≠Thªshﬁd
=0x68,

63 
	mg≠Off£t
=0xAC00,

66 
	mª£rvedSèπ
=0xA8,

69 
	mfixedThªshﬁd
=0xF9

73 c⁄° 
uöt32_t
 
	g°©icOff£ts
[8]={

85 c⁄° 
uöt32_t
 
	göôülDy«micOff£ts
[8]={

97 c⁄° 
uöt32_t
 
	gfixedOff£ts
[]={

109 
	mªadComm™d
,

110 
	mquŸePaúO√
,

111 
	mquŸePaúTwo
,

112 
	mquŸeO√
,

113 
	mdeföePaúO√
,

114 
	mdeföePaúTwo
,

115 
	mdeföeO√


118 
	sSCSUD©a
 {

120 
uöt32_t
 
	mtoUDy«micOff£ts
[8];

121 
uöt32_t
 
	m‰omUDy«micOff£ts
[8];

124 
UBoﬁ
 
	mtoUIsSögÀByãMode
;

125 
uöt8_t
 
	mtoUSèã
;

126 
öt8_t
 
	mtoUQuŸeWödow
, 
	mtoUDy«micWödow
;

127 
uöt8_t
 
	mtoUByãO√
;

128 
uöt8_t
 
	mtoUPaddög
[3];

131 
UBoﬁ
 
	m‰omUIsSögÀByãMode
;

132 
öt8_t
 
	m‰omUDy«micWödow
;

141 
uöt8_t
 
	mloˇÀ
;

142 
öt8_t
 
	m√xtWödowU£Index
;

143 
öt8_t
 
	mwödowU£
[8];

144 } 
	tSCSUD©a
;

146 c⁄° 
öt8_t
 
	göôülWödowU£
[8]={ 7, 0, 3, 2, 4, 5, 6, 1 };

147 c⁄° 
öt8_t
 
	göôülWödowU£_ja
[8]={ 3, 2, 4, 1, 0, 7, 5, 6 };

150 
	mlGíîic
, 
	ml_ja


156 
	$_SCSURe£t
(
UC⁄vîãr
 *
˙v
, 
UC⁄vîãrRe£tChoi˚
 
choi˚
) {

157 
SCSUD©a
 *
scsu
=(SCSUD©®*)
˙v
->
exåaInfo
;

159 if(
choi˚
<=
UCNV_RESET_TO_UNICODE
) {

161 
	`u¥v_mem˝y
(
scsu
->
toUDy«micOff£ts
, 
öôülDy«micOff£ts
, 32);

163 
scsu
->
toUIsSögÀByãMode
=
TRUE
;

164 
scsu
->
toUSèã
=
ªadComm™d
;

165 
scsu
->
toUQuŸeWödow
=scsu->
toUDy«micWödow
=0;

166 
scsu
->
toUByãO√
=0;

168 
˙v
->
toULígth
=0;

170 if(
choi˚
!=
UCNV_RESET_TO_UNICODE
) {

172 
	`u¥v_mem˝y
(
scsu
->
‰omUDy«micOff£ts
, 
öôülDy«micOff£ts
, 32);

174 
scsu
->
‰omUIsSögÀByãMode
=
TRUE
;

175 
scsu
->
‰omUDy«micWödow
=0;

177 
scsu
->
√xtWödowU£Index
=0;

178 
scsu
->
loˇÀ
) {

179 
l_ja
:

180 
	`u¥v_mem˝y
(
scsu
->
wödowU£
, 
öôülWödowU£_ja
, 8);

183 
	`u¥v_mem˝y
(
scsu
->
wödowU£
, 
öôülWödowU£
, 8);

187 
˙v
->
‰omUCh¨32
=0;

189 
	}
}

192 
	$_SCSUO≥n
(
UC⁄vîãr
 *
˙v
,

193 
UC⁄vîãrLﬂdArgs
 *
pArgs
,

194 
UEº‹Code
 *
pEº‹Code
) {

195 c⁄° *
loˇÀ
=
pArgs
->locale;

196 if(
pArgs
->
⁄lyTe°IsLﬂdabÀ
) {

199 
˙v
->
exåaInfo
=
	`u¥v_mÆloc
((
SCSUD©a
));

200 if(
˙v
->
exåaInfo
!=
NULL
) {

201 if(
loˇÀ
!=
NULL
 &&Üocale[0]=='j' &&Üocale[1]=='a' && (locale[2]==0 ||Üocale[2]=='_')) {

202 ((
SCSUD©a
 *)
˙v
->
exåaInfo
)->
loˇÀ
=
l_ja
;

204 ((
SCSUD©a
 *)
˙v
->
exåaInfo
)->
loˇÀ
=
lGíîic
;

206 
	`_SCSURe£t
(
˙v
, 
UCNV_RESET_BOTH
);

208 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

212 
˙v
->
subUCh¨s
[0]=0xfffd;

213 
˙v
->
subCh¨Lí
=-1;

214 
	}
}

217 
	$_SCSUClo£
(
UC⁄vîãr
 *
˙v
) {

218 if(
˙v
->
exåaInfo
!=
NULL
) {

219 if(!
˙v
->
isExåaLoˇl
) {

220 
	`u¥v_‰ì
(
˙v
->
exåaInfo
);

222 
˙v
->
exåaInfo
=
NULL
;

224 
	}
}

229 
	$_SCSUToUnicodeWôhOff£ts
(
UC⁄vîãrToUnicodeArgs
 *
pArgs
,

230 
UEº‹Code
 *
pEº‹Code
) {

231 
UC⁄vîãr
 *
˙v
;

232 
SCSUD©a
 *
scsu
;

233 c⁄° 
uöt8_t
 *
sour˚
, *
sour˚Limô
;

234 
UCh¨
 *
èrgë
;

235 c⁄° 
UCh¨
 *
èrgëLimô
;

236 
öt32_t
 *
off£ts
;

237 
UBoﬁ
 
isSögÀByãMode
;

238 
uöt8_t
 
°©e
, 
byãO√
;

239 
öt8_t
 
quŸeWödow
, 
dy«micWödow
;

241 
öt32_t
 
sour˚Index
, 
√xtSour˚Index
;

243 
uöt8_t
 
b
;

246 
˙v
=
pArgs
->
c⁄vîãr
;

247 
scsu
=(
SCSUD©a
 *)
˙v
->
exåaInfo
;

249 
sour˚
=(c⁄° 
uöt8_t
 *)
pArgs
->source;

250 
sour˚Limô
=(c⁄° 
uöt8_t
 *)
pArgs
->sourceLimit;

251 
èrgë
=
pArgs
->target;

252 
èrgëLimô
=
pArgs
->targetLimit;

253 
off£ts
=
pArgs
->offsets;

256 
isSögÀByãMode
=
scsu
->
toUIsSögÀByãMode
;

257 
°©e
=
scsu
->
toUSèã
;

258 
quŸeWödow
=
scsu
->
toUQuŸeWödow
;

259 
dy«micWödow
=
scsu
->
toUDy«micWödow
;

260 
byãO√
=
scsu
->
toUByãO√
;

263 
sour˚Index
=
°©e
==
ªadComm™d
 ? 0 : -1;

264 
√xtSour˚Index
=0;

285 if(
isSögÀByãMode
) {

287 if(
°©e
==
ªadComm™d
) {

288 
Á°SögÀ
:

289 
sour˚
<
sour˚Limô
 && 
èrgë
<
èrgëLimô
 && (
b
=*source)>=0x20) {

290 ++
sour˚
;

291 ++
√xtSour˚Index
;

292 if(
b
<=0x7f) {

294 *
èrgë
++=(
UCh¨
)
b
;

295 if(
off£ts
!=
NULL
) {

296 *
off£ts
++=
sour˚Index
;

300 
uöt32_t
 
c
=
scsu
->
toUDy«micOff£ts
[
dy«micWödow
]+(
b
&0x7f);

301 if(
c
<=0xffff) {

302 *
èrgë
++=(
UCh¨
)
c
;

303 if(
off£ts
!=
NULL
) {

304 *
off£ts
++=
sour˚Index
;

308 *
èrgë
++=(
UCh¨
)(0xd7c0+(
c
>>10));

309 if(
èrgë
<
èrgëLimô
) {

310 *
èrgë
++=(
UCh¨
)(0xdc00|(
c
&0x3ff));

311 if(
off£ts
!=
NULL
) {

312 *
off£ts
++=
sour˚Index
;

313 *
off£ts
++=
sour˚Index
;

317 if(
off£ts
!=
NULL
) {

318 *
off£ts
++=
sour˚Index
;

320 
˙v
->
UCh¨Eº‹Buf„r
[0]=(
UCh¨
)(0xdc00|(
c
&0x3ff));

321 
˙v
->
UCh¨Eº‹Buf„rLígth
=1;

322 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

323 
ídlo›
;

327 
sour˚Index
=
√xtSour˚Index
;

332 
sögÀByãMode
:

333 
sour˚
<
sour˚Limô
) {

334 if(
èrgë
>=
èrgëLimô
) {

336 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

339 
b
=*
sour˚
++;

340 ++
√xtSour˚Index
;

341 
°©e
) {

342 
ªadComm™d
:

345 if((1UL<<
b
)&0x2601 ) {

347 *
èrgë
++=(
UCh¨
)
b
;

348 if(
off£ts
!=
NULL
) {

349 *
off£ts
++=
sour˚Index
;

351 
sour˚Index
=
√xtSour˚Index
;

352 
Á°SögÀ
;

353 } if(
SC0
<=
b
) {

354 if(
b
<=
SC7
) {

355 
dy«micWödow
=(
öt8_t
)(
b
-
SC0
);

356 
sour˚Index
=
√xtSour˚Index
;

357 
Á°SögÀ
;

359 
dy«micWödow
=(
öt8_t
)(
b
-
SD0
);

360 
°©e
=
deföeO√
;

362 } if–
b
<=
SQ7
) {

363 
quŸeWödow
=(
öt8_t
)(
b
-
SQ0
);

364 
°©e
=
quŸeO√
;

365 } if(
b
==
SDX
) {

366 
°©e
=
deföePaúO√
;

367 } if(
b
==
SQU
) {

368 
°©e
=
quŸePaúO√
;

369 } if(
b
==
SCU
) {

370 
sour˚Index
=
√xtSour˚Index
;

371 
isSögÀByãMode
=
FALSE
;

372 
Á°Unicode
;

375 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

376 
˙v
->
toUByãs
[0]=
b
;

377 
˙v
->
toULígth
=1;

378 
ídlo›
;

382 
˙v
->
toUByãs
[0]=
b
;

383 
˙v
->
toULígth
=1;

385 
quŸePaúO√
:

386 
byãO√
=
b
;

387 
˙v
->
toUByãs
[1]=
b
;

388 
˙v
->
toULígth
=2;

389 
°©e
=
quŸePaúTwo
;

391 
quŸePaúTwo
:

392 *
èrgë
++=(
UCh¨
)((
byãO√
<<8)|
b
);

393 if(
off£ts
!=
NULL
) {

394 *
off£ts
++=
sour˚Index
;

396 
sour˚Index
=
√xtSour˚Index
;

397 
°©e
=
ªadComm™d
;

398 
Á°SögÀ
;

399 
quŸeO√
:

400 if(
b
<0x80) {

402 *
èrgë
++=(
UCh¨
)(
°©icOff£ts
[
quŸeWödow
]+
b
);

403 if(
off£ts
!=
NULL
) {

404 *
off£ts
++=
sour˚Index
;

408 
uöt32_t
 
c
=
scsu
->
toUDy«micOff£ts
[
quŸeWödow
]+(
b
&0x7f);

409 if(
c
<=0xffff) {

410 *
èrgë
++=(
UCh¨
)
c
;

411 if(
off£ts
!=
NULL
) {

412 *
off£ts
++=
sour˚Index
;

416 *
èrgë
++=(
UCh¨
)(0xd7c0+(
c
>>10));

417 if(
èrgë
<
èrgëLimô
) {

418 *
èrgë
++=(
UCh¨
)(0xdc00|(
c
&0x3ff));

419 if(
off£ts
!=
NULL
) {

420 *
off£ts
++=
sour˚Index
;

421 *
off£ts
++=
sour˚Index
;

425 if(
off£ts
!=
NULL
) {

426 *
off£ts
++=
sour˚Index
;

428 
˙v
->
UCh¨Eº‹Buf„r
[0]=(
UCh¨
)(0xdc00|(
c
&0x3ff));

429 
˙v
->
UCh¨Eº‹Buf„rLígth
=1;

430 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

431 
ídlo›
;

435 
sour˚Index
=
√xtSour˚Index
;

436 
°©e
=
ªadComm™d
;

437 
Á°SögÀ
;

438 
deföePaúO√
:

439 
dy«micWödow
=(
öt8_t
)((
b
>>5)&7);

440 
byãO√
=(
uöt8_t
)(
b
&0x1f);

441 
˙v
->
toUByãs
[1]=
b
;

442 
˙v
->
toULígth
=2;

443 
°©e
=
deföePaúTwo
;

445 
deföePaúTwo
:

446 
scsu
->
toUDy«micOff£ts
[
dy«micWödow
]=0x10000+(
byãO√
<<15UL | 
b
<<7UL);

447 
sour˚Index
=
√xtSour˚Index
;

448 
°©e
=
ªadComm™d
;

449 
Á°SögÀ
;

450 
deföeO√
:

451 if(
b
==0) {

453 
˙v
->
toUByãs
[1]=
b
;

454 
˙v
->
toULígth
=2;

455 
ídlo›
;

456 } if(
b
<
g≠Thªshﬁd
) {

457 
scsu
->
toUDy«micOff£ts
[
dy«micWödow
]=
b
<<7UL;

458 } if((
uöt8_t
)(
b
-
g≠Thªshﬁd
)<(
ª£rvedSèπ
-gapThreshold)) {

459 
scsu
->
toUDy«micOff£ts
[
dy«micWödow
]=(
b
<<7UL)+
g≠Off£t
;

460 } if(
b
>=
fixedThªshﬁd
) {

461 
scsu
->
toUDy«micOff£ts
[
dy«micWödow
]=
fixedOff£ts
[
b
-
fixedThªshﬁd
];

464 
˙v
->
toUByãs
[1]=
b
;

465 
˙v
->
toULígth
=2;

466 
ídlo›
;

468 
sour˚Index
=
√xtSour˚Index
;

469 
°©e
=
ªadComm™d
;

470 
Á°SögÀ
;

475 if(
°©e
==
ªadComm™d
) {

476 
Á°Unicode
:

477 
sour˚
+1<
sour˚Limô
 && 
èrgë
<
èrgëLimô
 && (
uöt8_t
)((
b
=*sour˚)-
UC0
)>(
Urs
-UC0)) {

478 *
èrgë
++=(
UCh¨
)((
b
<<8)|
sour˚
[1]);

479 if(
off£ts
!=
NULL
) {

480 *
off£ts
++=
sour˚Index
;

482 
sour˚Index
=
√xtSour˚Index
;

483 
√xtSour˚Index
+=2;

484 
sour˚
+=2;

490 
sour˚
<
sour˚Limô
) {

491 if(
èrgë
>=
èrgëLimô
) {

493 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

496 
b
=*
sour˚
++;

497 ++
√xtSour˚Index
;

498 
°©e
) {

499 
ªadComm™d
:

500 if((
uöt8_t
)(
b
-
UC0
)>(
Urs
-UC0)) {

501 
byãO√
=
b
;

502 
˙v
->
toUByãs
[0]=
b
;

503 
˙v
->
toULígth
=1;

504 
°©e
=
quŸePaúTwo
;

505 } if–
b
<=
UC7
) {

506 
dy«micWödow
=(
öt8_t
)(
b
-
UC0
);

507 
sour˚Index
=
√xtSour˚Index
;

508 
isSögÀByãMode
=
TRUE
;

509 
Á°SögÀ
;

510 } if–
b
<=
UD7
) {

511 
dy«micWödow
=(
öt8_t
)(
b
-
UD0
);

512 
isSögÀByãMode
=
TRUE
;

513 
˙v
->
toUByãs
[0]=
b
;

514 
˙v
->
toULígth
=1;

515 
°©e
=
deföeO√
;

516 
sögÀByãMode
;

517 } if(
b
==
UDX
) {

518 
isSögÀByãMode
=
TRUE
;

519 
˙v
->
toUByãs
[0]=
b
;

520 
˙v
->
toULígth
=1;

521 
°©e
=
deföePaúO√
;

522 
sögÀByãMode
;

523 } if(
b
==
UQU
) {

524 
˙v
->
toUByãs
[0]=
b
;

525 
˙v
->
toULígth
=1;

526 
°©e
=
quŸePaúO√
;

529 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

530 
˙v
->
toUByãs
[0]=
b
;

531 
˙v
->
toULígth
=1;

532 
ídlo›
;

535 
quŸePaúO√
:

536 
byãO√
=
b
;

537 
˙v
->
toUByãs
[1]=
b
;

538 
˙v
->
toULígth
=2;

539 
°©e
=
quŸePaúTwo
;

541 
quŸePaúTwo
:

542 *
èrgë
++=(
UCh¨
)((
byãO√
<<8)|
b
);

543 if(
off£ts
!=
NULL
) {

544 *
off£ts
++=
sour˚Index
;

546 
sour˚Index
=
√xtSour˚Index
;

547 
°©e
=
ªadComm™d
;

548 
Á°Unicode
;

552 
ídlo›
:

555 if(
	`U_FAILURE
(*
pEº‹Code
Ë&& *pEº‹Code!=
U_BUFFER_OVERFLOW_ERROR
) {

557 
°©e
=
ªadComm™d
;

558 } if(
°©e
==
ªadComm™d
) {

560 
˙v
->
toULígth
=0;

562 
scsu
->
toUIsSögÀByãMode
=
isSögÀByãMode
;

563 
scsu
->
toUSèã
=
°©e
;

564 
scsu
->
toUQuŸeWödow
=
quŸeWödow
;

565 
scsu
->
toUDy«micWödow
=
dy«micWödow
;

566 
scsu
->
toUByãO√
=
byãO√
;

569 
pArgs
->
sour˚
=(const *)source;

570 
pArgs
->
èrgë
=target;

571 
pArgs
->
off£ts
=offsets;

573 
	}
}

583 
	$_SCSUToUnicode
(
UC⁄vîãrToUnicodeArgs
 *
pArgs
,

584 
UEº‹Code
 *
pEº‹Code
) {

585 
UC⁄vîãr
 *
˙v
;

586 
SCSUD©a
 *
scsu
;

587 c⁄° 
uöt8_t
 *
sour˚
, *
sour˚Limô
;

588 
UCh¨
 *
èrgë
;

589 c⁄° 
UCh¨
 *
èrgëLimô
;

590 
UBoﬁ
 
isSögÀByãMode
;

591 
uöt8_t
 
°©e
, 
byãO√
;

592 
öt8_t
 
quŸeWödow
, 
dy«micWödow
;

594 
uöt8_t
 
b
;

597 
˙v
=
pArgs
->
c⁄vîãr
;

598 
scsu
=(
SCSUD©a
 *)
˙v
->
exåaInfo
;

600 
sour˚
=(c⁄° 
uöt8_t
 *)
pArgs
->source;

601 
sour˚Limô
=(c⁄° 
uöt8_t
 *)
pArgs
->sourceLimit;

602 
èrgë
=
pArgs
->target;

603 
èrgëLimô
=
pArgs
->targetLimit;

606 
isSögÀByãMode
=
scsu
->
toUIsSögÀByãMode
;

607 
°©e
=
scsu
->
toUSèã
;

608 
quŸeWödow
=
scsu
->
toUQuŸeWödow
;

609 
dy«micWödow
=
scsu
->
toUDy«micWödow
;

610 
byãO√
=
scsu
->
toUByãO√
;

631 if(
isSögÀByãMode
) {

633 if(
°©e
==
ªadComm™d
) {

634 
Á°SögÀ
:

635 
sour˚
<
sour˚Limô
 && 
èrgë
<
èrgëLimô
 && (
b
=*source)>=0x20) {

636 ++
sour˚
;

637 if(
b
<=0x7f) {

639 *
èrgë
++=(
UCh¨
)
b
;

642 
uöt32_t
 
c
=
scsu
->
toUDy«micOff£ts
[
dy«micWödow
]+(
b
&0x7f);

643 if(
c
<=0xffff) {

644 *
èrgë
++=(
UCh¨
)
c
;

647 *
èrgë
++=(
UCh¨
)(0xd7c0+(
c
>>10));

648 if(
èrgë
<
èrgëLimô
) {

649 *
èrgë
++=(
UCh¨
)(0xdc00|(
c
&0x3ff));

652 
˙v
->
UCh¨Eº‹Buf„r
[0]=(
UCh¨
)(0xdc00|(
c
&0x3ff));

653 
˙v
->
UCh¨Eº‹Buf„rLígth
=1;

654 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

655 
ídlo›
;

663 
sögÀByãMode
:

664 
sour˚
<
sour˚Limô
) {

665 if(
èrgë
>=
èrgëLimô
) {

667 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

670 
b
=*
sour˚
++;

671 
°©e
) {

672 
ªadComm™d
:

675 if((1UL<<
b
)&0x2601 ) {

677 *
èrgë
++=(
UCh¨
)
b
;

678 
Á°SögÀ
;

679 } if(
SC0
<=
b
) {

680 if(
b
<=
SC7
) {

681 
dy«micWödow
=(
öt8_t
)(
b
-
SC0
);

682 
Á°SögÀ
;

684 
dy«micWödow
=(
öt8_t
)(
b
-
SD0
);

685 
°©e
=
deföeO√
;

687 } if–
b
<=
SQ7
) {

688 
quŸeWödow
=(
öt8_t
)(
b
-
SQ0
);

689 
°©e
=
quŸeO√
;

690 } if(
b
==
SDX
) {

691 
°©e
=
deföePaúO√
;

692 } if(
b
==
SQU
) {

693 
°©e
=
quŸePaúO√
;

694 } if(
b
==
SCU
) {

695 
isSögÀByãMode
=
FALSE
;

696 
Á°Unicode
;

699 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

700 
˙v
->
toUByãs
[0]=
b
;

701 
˙v
->
toULígth
=1;

702 
ídlo›
;

706 
˙v
->
toUByãs
[0]=
b
;

707 
˙v
->
toULígth
=1;

709 
quŸePaúO√
:

710 
byãO√
=
b
;

711 
˙v
->
toUByãs
[1]=
b
;

712 
˙v
->
toULígth
=2;

713 
°©e
=
quŸePaúTwo
;

715 
quŸePaúTwo
:

716 *
èrgë
++=(
UCh¨
)((
byãO√
<<8)|
b
);

717 
°©e
=
ªadComm™d
;

718 
Á°SögÀ
;

719 
quŸeO√
:

720 if(
b
<0x80) {

722 *
èrgë
++=(
UCh¨
)(
°©icOff£ts
[
quŸeWödow
]+
b
);

725 
uöt32_t
 
c
=
scsu
->
toUDy«micOff£ts
[
quŸeWödow
]+(
b
&0x7f);

726 if(
c
<=0xffff) {

727 *
èrgë
++=(
UCh¨
)
c
;

730 *
èrgë
++=(
UCh¨
)(0xd7c0+(
c
>>10));

731 if(
èrgë
<
èrgëLimô
) {

732 *
èrgë
++=(
UCh¨
)(0xdc00|(
c
&0x3ff));

735 
˙v
->
UCh¨Eº‹Buf„r
[0]=(
UCh¨
)(0xdc00|(
c
&0x3ff));

736 
˙v
->
UCh¨Eº‹Buf„rLígth
=1;

737 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

738 
ídlo›
;

742 
°©e
=
ªadComm™d
;

743 
Á°SögÀ
;

744 
deföePaúO√
:

745 
dy«micWödow
=(
öt8_t
)((
b
>>5)&7);

746 
byãO√
=(
uöt8_t
)(
b
&0x1f);

747 
˙v
->
toUByãs
[1]=
b
;

748 
˙v
->
toULígth
=2;

749 
°©e
=
deföePaúTwo
;

751 
deföePaúTwo
:

752 
scsu
->
toUDy«micOff£ts
[
dy«micWödow
]=0x10000+(
byãO√
<<15UL | 
b
<<7UL);

753 
°©e
=
ªadComm™d
;

754 
Á°SögÀ
;

755 
deföeO√
:

756 if(
b
==0) {

758 
˙v
->
toUByãs
[1]=
b
;

759 
˙v
->
toULígth
=2;

760 
ídlo›
;

761 } if(
b
<
g≠Thªshﬁd
) {

762 
scsu
->
toUDy«micOff£ts
[
dy«micWödow
]=
b
<<7UL;

763 } if((
uöt8_t
)(
b
-
g≠Thªshﬁd
)<(
ª£rvedSèπ
-gapThreshold)) {

764 
scsu
->
toUDy«micOff£ts
[
dy«micWödow
]=(
b
<<7UL)+
g≠Off£t
;

765 } if(
b
>=
fixedThªshﬁd
) {

766 
scsu
->
toUDy«micOff£ts
[
dy«micWödow
]=
fixedOff£ts
[
b
-
fixedThªshﬁd
];

769 
˙v
->
toUByãs
[1]=
b
;

770 
˙v
->
toULígth
=2;

771 
ídlo›
;

773 
°©e
=
ªadComm™d
;

774 
Á°SögÀ
;

779 if(
°©e
==
ªadComm™d
) {

780 
Á°Unicode
:

781 
sour˚
+1<
sour˚Limô
 && 
èrgë
<
èrgëLimô
 && (
uöt8_t
)((
b
=*sour˚)-
UC0
)>(
Urs
-UC0)) {

782 *
èrgë
++=(
UCh¨
)((
b
<<8)|
sour˚
[1]);

783 
sour˚
+=2;

789 
sour˚
<
sour˚Limô
) {

790 if(
èrgë
>=
èrgëLimô
) {

792 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

795 
b
=*
sour˚
++;

796 
°©e
) {

797 
ªadComm™d
:

798 if((
uöt8_t
)(
b
-
UC0
)>(
Urs
-UC0)) {

799 
byãO√
=
b
;

800 
˙v
->
toUByãs
[0]=
b
;

801 
˙v
->
toULígth
=1;

802 
°©e
=
quŸePaúTwo
;

803 } if–
b
<=
UC7
) {

804 
dy«micWödow
=(
öt8_t
)(
b
-
UC0
);

805 
isSögÀByãMode
=
TRUE
;

806 
Á°SögÀ
;

807 } if–
b
<=
UD7
) {

808 
dy«micWödow
=(
öt8_t
)(
b
-
UD0
);

809 
isSögÀByãMode
=
TRUE
;

810 
˙v
->
toUByãs
[0]=
b
;

811 
˙v
->
toULígth
=1;

812 
°©e
=
deföeO√
;

813 
sögÀByãMode
;

814 } if(
b
==
UDX
) {

815 
isSögÀByãMode
=
TRUE
;

816 
˙v
->
toUByãs
[0]=
b
;

817 
˙v
->
toULígth
=1;

818 
°©e
=
deföePaúO√
;

819 
sögÀByãMode
;

820 } if(
b
==
UQU
) {

821 
˙v
->
toUByãs
[0]=
b
;

822 
˙v
->
toULígth
=1;

823 
°©e
=
quŸePaúO√
;

826 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

827 
˙v
->
toUByãs
[0]=
b
;

828 
˙v
->
toULígth
=1;

829 
ídlo›
;

832 
quŸePaúO√
:

833 
byãO√
=
b
;

834 
˙v
->
toUByãs
[1]=
b
;

835 
˙v
->
toULígth
=2;

836 
°©e
=
quŸePaúTwo
;

838 
quŸePaúTwo
:

839 *
èrgë
++=(
UCh¨
)((
byãO√
<<8)|
b
);

840 
°©e
=
ªadComm™d
;

841 
Á°Unicode
;

845 
ídlo›
:

848 if(
	`U_FAILURE
(*
pEº‹Code
Ë&& *pEº‹Code!=
U_BUFFER_OVERFLOW_ERROR
) {

850 
°©e
=
ªadComm™d
;

851 } if(
°©e
==
ªadComm™d
) {

853 
˙v
->
toULígth
=0;

855 
scsu
->
toUIsSögÀByãMode
=
isSögÀByãMode
;

856 
scsu
->
toUSèã
=
°©e
;

857 
scsu
->
toUQuŸeWödow
=
quŸeWödow
;

858 
scsu
->
toUDy«micWödow
=
dy«micWödow
;

859 
scsu
->
toUByãO√
=
byãO√
;

862 
pArgs
->
sour˚
=(const *)source;

863 
pArgs
->
èrgë
=target;

865 
	}
}

881 
öt8_t


882 
	$gëWödow
(c⁄° 
uöt32_t
 
off£ts
[8], uöt32_à
c
) {

883 
i
;

884 
i
=0; i<8; ++i) {

885 if((
uöt32_t
)(
c
-
off£ts
[
i
])<=0x7f) {

886  (
öt8_t
)(
i
);

890 
	}
}

893 
UBoﬁ


894 
	$isInOff£tWödowOrDúe˘
(
uöt32_t
 
off£t
, uöt32_à
c
) {

895  (
UBoﬁ
)(
c
<=
off£t
+0x7f &&

896 (
c
>=
off£t
 || (c<=0x7f &&

897 (
c
>=0x20 || (1UL<<c)&0x2601))));

900 
	}
}

905 
öt8_t


906 
	$gëNextDy«micWödow
(
SCSUD©a
 *
scsu
) {

907 
öt8_t
 
wödow
=
scsu
->
wödowU£
[scsu->
√xtWödowU£Index
];

908 if(++
scsu
->
√xtWödowU£Index
==8) {

909 
scsu
->
√xtWödowU£Index
=0;

911  
wödow
;

912 
	}
}

921 
	$u£Dy«micWödow
(
SCSUD©a
 *
scsu
, 
öt8_t
 
wödow
) {

928 
i
, 
j
;

930 
i
=
scsu
->
√xtWödowU£Index
;

932 if(--
i
<0) {

933 
i
=7;

935 } 
scsu
->
wödowU£
[
i
]!=
wödow
);

938 
j
=
i
+1;

939 if(
j
==8) {

940 
j
=0;

942 
j
!=
scsu
->
√xtWödowU£Index
) {

943 
scsu
->
wödowU£
[
i
]=scsu->wödowU£[
j
];

944 
i
=
j
;

945 if(++
j
==8) { j=0; }

949 
scsu
->
wödowU£
[
i
]=
wödow
;

950 
	}
}

961 
	$gëDy«micOff£t
(
uöt32_t
 
c
, uöt32_à*
pOff£t
) {

962 
i
;

964 
i
=0; i<7; ++i) {

965 if((
uöt32_t
)(
c
-
fixedOff£ts
[
i
])<=0x7f) {

966 *
pOff£t
=
fixedOff£ts
[
i
];

967  0xf9+
i
;

971 if(
c
<0x80) {

974 } if(
c
<0x3400 ||

975 (
uöt32_t
)(
c
-0x10000)<(0x14000-0x10000) ||

976 (
uöt32_t
)(
c
-0x1d000)<=(0x1ffff-0x1d000)

979 *
pOff£t
=
c
&0x7fffff80;

980  ()(
c
>>7);

981 } if(0xe000<=
c
 && c!=0xfeff && c<0xfff0) {

983 *
pOff£t
=
c
&0x7fffff80;

984  ()((
c
-
g≠Off£t
)>>7);

988 
	}
}

1008 
	$_SCSUFromUnicodeWôhOff£ts
(
UC⁄vîãrFromUnicodeArgs
 *
pArgs
,

1009 
UEº‹Code
 *
pEº‹Code
) {

1010 
UC⁄vîãr
 *
˙v
;

1011 
SCSUD©a
 *
scsu
;

1012 c⁄° 
UCh¨
 *
sour˚
, *
sour˚Limô
;

1013 
uöt8_t
 *
èrgë
;

1014 
öt32_t
 
èrgëC≠acôy
;

1015 
öt32_t
 *
off£ts
;

1017 
UBoﬁ
 
isSögÀByãMode
;

1018 
uöt8_t
 
dy«micWödow
;

1019 
uöt32_t
 
cuºítOff£t
;

1021 
uöt32_t
 
c
, 
dñè
;

1023 
öt32_t
 
sour˚Index
, 
√xtSour˚Index
;

1025 
öt32_t
 
Àngth
;

1028 
uöt32_t
 
off£t
;

1029 
UCh¨
 
Àad
, 
åaû
;

1030 
code
;

1031 
öt8_t
 
wödow
;

1034 
˙v
=
pArgs
->
c⁄vîãr
;

1035 
scsu
=(
SCSUD©a
 *)
˙v
->
exåaInfo
;

1038 
sour˚
=
pArgs
->source;

1039 
sour˚Limô
=
pArgs
->sourceLimit;

1040 
èrgë
=(
uöt8_t
 *)
pArgs
->target;

1041 
èrgëC≠acôy
=(
öt32_t
)(
pArgs
->
èrgëLimô
-pArgs->
èrgë
);

1042 
off£ts
=
pArgs
->offsets;

1045 
isSögÀByãMode
=
scsu
->
‰omUIsSögÀByãMode
;

1046 
dy«micWödow
=
scsu
->
‰omUDy«micWödow
;

1047 
cuºítOff£t
=
scsu
->
‰omUDy«micOff£ts
[
dy«micWödow
];

1049 
c
=
˙v
->
‰omUCh¨32
;

1052 
sour˚Index

c
==0 ? 0 : -1;

1053 
√xtSour˚Index
=0;

1056 
lo›
:

1057 if(
isSögÀByãMode
) {

1058 if(
c
!=0 && 
èrgëC≠acôy
>0) {

1059 
gëTøûSögÀ
;

1064 
sour˚
<
sour˚Limô
) {

1065 if(
èrgëC≠acôy
<=0) {

1067 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

1070 
c
=*
sour˚
++;

1071 ++
√xtSour˚Index
;

1073 if((
c
-0x20)<=0x5f) {

1075 *
èrgë
++=(
uöt8_t
)
c
;

1076 if(
off£ts
!=
NULL
) {

1077 *
off£ts
++=
sour˚Index
;

1079 --
èrgëC≠acôy
;

1080 } if(
c
<0x20) {

1081 if((1UL<<
c
)&0x2601 ) {

1083 *
èrgë
++=(
uöt8_t
)
c
;

1084 if(
off£ts
!=
NULL
) {

1085 *
off£ts
++=
sour˚Index
;

1087 --
èrgëC≠acôy
;

1090 
c
|=
SQ0
<<8;

1091 
Àngth
=2;

1092 
ouçutByãs
;

1094 } if((
dñè
=
c
-
cuºítOff£t
)<=0x7f) {

1096 *
èrgë
++=(
uöt8_t
)(
dñè
|0x80);

1097 if(
off£ts
!=
NULL
) {

1098 *
off£ts
++=
sour˚Index
;

1100 --
èrgëC≠acôy
;

1101 } if(
	`UTF_IS_SURROGATE
(
c
)) {

1102 if(
	`UTF_IS_SURROGATE_FIRST
(
c
)) {

1103 
gëTøûSögÀ
:

1104 
Àad
=(
UCh¨
)
c
;

1105 if(
sour˚
<
sour˚Limô
) {

1107 
åaû
=*
sour˚
;

1108 if(
	`UTF_IS_SECOND_SURROGATE
(
åaû
)) {

1109 ++
sour˚
;

1110 ++
√xtSour˚Index
;

1111 
c
=
	`UTF16_GET_PAIR_VALUE
(c, 
åaû
);

1117 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

1118 
ídlo›
;

1127 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

1128 
ídlo›
;

1132 if((
dñè
=
c
-
cuºítOff£t
)<=0x7f) {

1134 *
èrgë
++=(
uöt8_t
)(
dñè
|0x80);

1135 if(
off£ts
!=
NULL
) {

1136 *
off£ts
++=
sour˚Index
;

1138 --
èrgëC≠acôy
;

1139 } if((
wödow
=
	`gëWödow
(
scsu
->
‰omUDy«micOff£ts
, 
c
))>=0) {

1141 
dy«micWödow
=
wödow
;

1142 
cuºítOff£t
=
scsu
->
‰omUDy«micOff£ts
[
dy«micWödow
];

1143 
	`u£Dy«micWödow
(
scsu
, 
dy«micWödow
);

1144 
c
=((
uöt32_t
)(
SC0
+
dy«micWödow
)<<8)|(c-
cuºítOff£t
)|0x80;

1145 
Àngth
=2;

1146 
ouçutByãs
;

1147 } if((
code
=
	`gëDy«micOff£t
(
c
, &
off£t
))>=0) {

1150 
code
-=0x200;

1151 
dy«micWödow
=
	`gëNextDy«micWödow
(
scsu
);

1152 
cuºítOff£t
=
scsu
->
‰omUDy«micOff£ts
[
dy«micWödow
]=
off£t
;

1153 
	`u£Dy«micWödow
(
scsu
, 
dy«micWödow
);

1154 
c
=((
uöt32_t
)
SDX
<<24)|((uöt32_t)
dy«micWödow
<<21)|((uöt32_t)
code
<<8)|(c-
cuºítOff£t
)|0x80;

1155 
Àngth
=4;

1156 
ouçutByãs
;

1159 
isSögÀByãMode
=
FALSE
;

1160 *
èrgë
++=(
uöt8_t
)
SCU
;

1161 if(
off£ts
!=
NULL
) {

1162 *
off£ts
++=
sour˚Index
;

1164 --
èrgëC≠acôy
;

1165 
c
=((
uöt32_t
)
Àad
<<16)|
åaû
;

1166 
Àngth
=4;

1167 
ouçutByãs
;

1169 } if(
c
<0xa0) {

1171 
c
=(c&0x7f)|(
SQ0
+1)<<8;

1172 
Àngth
=2;

1173 
ouçutByãs
;

1174 } if(
c
==0xfeff || c>=0xfff0) {

1176 
c
|=
SQU
<<16;

1177 
Àngth
=3;

1178 
ouçutByãs
;

1181 if((
wödow
=
	`gëWödow
(
scsu
->
‰omUDy«micOff£ts
, 
c
))>=0) {

1183 if(
sour˚
>=
sour˚Limô
 || 
	`isInOff£tWödowOrDúe˘
(
scsu
->
‰omUDy«micOff£ts
[
wödow
], *source)) {

1185 
dy«micWödow
=
wödow
;

1186 
cuºítOff£t
=
scsu
->
‰omUDy«micOff£ts
[
dy«micWödow
];

1187 
	`u£Dy«micWödow
(
scsu
, 
dy«micWödow
);

1188 
c
=((
uöt32_t
)(
SC0
+
dy«micWödow
)<<8)|(c-
cuºítOff£t
)|0x80;

1189 
Àngth
=2;

1190 
ouçutByãs
;

1193 
c
=((
uöt32_t
)(
SQ0
+
wödow
)<<8)|(c-
scsu
->
‰omUDy«micOff£ts
[window])|0x80;

1194 
Àngth
=2;

1195 
ouçutByãs
;

1197 } if((
wödow
=
	`gëWödow
(
°©icOff£ts
, 
c
))>=0) {

1199 
c
=((
uöt32_t
)(
SQ0
+
wödow
)<<8)|(c-
°©icOff£ts
[window]);

1200 
Àngth
=2;

1201 
ouçutByãs
;

1202 } if((
code
=
	`gëDy«micOff£t
(
c
, &
off£t
))>=0) {

1204 
dy«micWödow
=
	`gëNextDy«micWödow
(
scsu
);

1205 
cuºítOff£t
=
scsu
->
‰omUDy«micOff£ts
[
dy«micWödow
]=
off£t
;

1206 
	`u£Dy«micWödow
(
scsu
, 
dy«micWödow
);

1207 
c
=((
uöt32_t
)(
SD0
+
dy«micWödow
)<<16)|((uöt32_t)
code
<<8)|(c-
cuºítOff£t
)|0x80;

1208 
Àngth
=3;

1209 
ouçutByãs
;

1210 } if((
uöt32_t
)(
c
-0x3400)<(0xd800-0x3400) &&

1211 (
sour˚
>=
sour˚Limô
 || (
uöt32_t
)(*source-0x3400)<(0xd800-0x3400))

1218 
isSögÀByãMode
=
FALSE
;

1219 
c
|=
SCU
<<16;

1220 
Àngth
=3;

1221 
ouçutByãs
;

1224 
c
|=
SQU
<<16;

1225 
Àngth
=3;

1226 
ouçutByãs
;

1231 
c
=0;

1232 
sour˚Index
=
√xtSour˚Index
;

1235 if(
c
!=0 && 
èrgëC≠acôy
>0) {

1236 
gëTøûUnicode
;

1241 
sour˚
<
sour˚Limô
) {

1242 if(
èrgëC≠acôy
<=0) {

1244 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

1247 
c
=*
sour˚
++;

1248 ++
√xtSour˚Index
;

1250 if((
uöt32_t
)(
c
-0x3400)<(0xd800-0x3400)) {

1252 if(
èrgëC≠acôy
>=2) {

1253 *
èrgë
++=(
uöt8_t
)(
c
>>8);

1254 *
èrgë
++=(
uöt8_t
)
c
;

1255 if(
off£ts
!=
NULL
) {

1256 *
off£ts
++=
sour˚Index
;

1257 *
off£ts
++=
sour˚Index
;

1259 
èrgëC≠acôy
-=2;

1261 
Àngth
=2;

1262 
ouçutByãs
;

1264 } if((
uöt32_t
)(
c
-0x3400)>=(0xf300-0x3400) ) {

1266 if(!(
sour˚
<
sour˚Limô
 && (
uöt32_t
)(*source-0x3400)<(0xd800-0x3400))) {

1267 if(((
uöt32_t
)(
c
-0x30)<10 || (uint32_t)(c-0x61)<26 || (uint32_t)(c-0x41)<26)) {

1269 
isSögÀByãMode
=
TRUE
;

1270 
c
|=((
uöt32_t
)(
UC0
+
dy«micWödow
)<<8)|c;

1271 
Àngth
=2;

1272 
ouçutByãs
;

1273 } if((
wödow
=
	`gëWödow
(
scsu
->
‰omUDy«micOff£ts
, 
c
))>=0) {

1275 
isSögÀByãMode
=
TRUE
;

1276 
dy«micWödow
=
wödow
;

1277 
cuºítOff£t
=
scsu
->
‰omUDy«micOff£ts
[
dy«micWödow
];

1278 
	`u£Dy«micWödow
(
scsu
, 
dy«micWödow
);

1279 
c
=((
uöt32_t
)(
UC0
+
dy«micWödow
)<<8)|(c-
cuºítOff£t
)|0x80;

1280 
Àngth
=2;

1281 
ouçutByãs
;

1282 } if((
code
=
	`gëDy«micOff£t
(
c
, &
off£t
))>=0) {

1284 
isSögÀByãMode
=
TRUE
;

1285 
dy«micWödow
=
	`gëNextDy«micWödow
(
scsu
);

1286 
cuºítOff£t
=
scsu
->
‰omUDy«micOff£ts
[
dy«micWödow
]=
off£t
;

1287 
	`u£Dy«micWödow
(
scsu
, 
dy«micWödow
);

1288 
c
=((
uöt32_t
)(
UD0
+
dy«micWödow
)<<16)|((uöt32_t)
code
<<8)|(c-
cuºítOff£t
)|0x80;

1289 
Àngth
=3;

1290 
ouçutByãs
;

1295 
Àngth
=2;

1296 
ouçutByãs
;

1297 } if(
c
<0xe000) {

1299 if(
	`UTF_IS_SURROGATE_FIRST
(
c
)) {

1300 
gëTøûUnicode
:

1301 
Àad
=(
UCh¨
)
c
;

1302 if(
sour˚
<
sour˚Limô
) {

1304 
åaû
=*
sour˚
;

1305 if(
	`UTF_IS_SECOND_SURROGATE
(
åaû
)) {

1306 ++
sour˚
;

1307 ++
√xtSour˚Index
;

1308 
c
=
	`UTF16_GET_PAIR_VALUE
(c, 
åaû
);

1314 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

1315 
ídlo›
;

1324 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

1325 
ídlo›
;

1329 if–(
wödow
=
	`gëWödow
(
scsu
->
‰omUDy«micOff£ts
, 
c
))>=0 &&

1330 !(
sour˚
<
sour˚Limô
 && (
uöt32_t
)(*source-0x3400)<(0xd800-0x3400))

1337 
isSögÀByãMode
=
TRUE
;

1338 
dy«micWödow
=
wödow
;

1339 
cuºítOff£t
=
scsu
->
‰omUDy«micOff£ts
[
dy«micWödow
];

1340 
	`u£Dy«micWödow
(
scsu
, 
dy«micWödow
);

1341 
c
=((
uöt32_t
)(
UC0
+
dy«micWödow
)<<8)|(c-
cuºítOff£t
)|0x80;

1342 
Àngth
=2;

1343 
ouçutByãs
;

1344 } if(
sour˚
<
sour˚Limô
 && 
Àad
==*source &&

1345 (
code
=
	`gëDy«micOff£t
(
c
, &
off£t
))>=0

1348 
isSögÀByãMode
=
TRUE
;

1349 
code
-=0x200;

1350 
dy«micWödow
=
	`gëNextDy«micWödow
(
scsu
);

1351 
cuºítOff£t
=
scsu
->
‰omUDy«micOff£ts
[
dy«micWödow
]=
off£t
;

1352 
	`u£Dy«micWödow
(
scsu
, 
dy«micWödow
);

1353 
c
=((
uöt32_t
)
UDX
<<24)|((uöt32_t)
dy«micWödow
<<21)|((uöt32_t)
code
<<8)|(c-
cuºítOff£t
)|0x80;

1354 
Àngth
=4;

1355 
ouçutByãs
;

1358 
c
=((
uöt32_t
)
Àad
<<16)|
åaû
;

1359 
Àngth
=4;

1360 
ouçutByãs
;

1364 
c
|=
UQU
<<16;

1365 
Àngth
=3;

1366 
ouçutByãs
;

1370 
c
=0;

1371 
sour˚Index
=
√xtSour˚Index
;

1374 
ídlo›
:

1377 
scsu
->
‰omUIsSögÀByãMode
=
isSögÀByãMode
;

1378 
scsu
->
‰omUDy«micWödow
=
dy«micWödow
;

1380 
˙v
->
‰omUCh¨32
=
c
;

1383 
pArgs
->
sour˚
=source;

1384 
pArgs
->
èrgë
=(*)target;

1385 
pArgs
->
off£ts
=offsets;

1388 
ouçutByãs
:

1391 if(
Àngth
<=
èrgëC≠acôy
) {

1392 if(
off£ts
==
NULL
) {

1393 
Àngth
) {

1396 *
èrgë
++=(
uöt8_t
)(
c
>>24);

1398 *
èrgë
++=(
uöt8_t
)(
c
>>16);

1400 *
èrgë
++=(
uöt8_t
)(
c
>>8);

1402 *
èrgë
++=(
uöt8_t
)
c
;

1408 
Àngth
) {

1411 *
èrgë
++=(
uöt8_t
)(
c
>>24);

1412 *
off£ts
++=
sour˚Index
;

1414 *
èrgë
++=(
uöt8_t
)(
c
>>16);

1415 *
off£ts
++=
sour˚Index
;

1417 *
èrgë
++=(
uöt8_t
)(
c
>>8);

1418 *
off£ts
++=
sour˚Index
;

1420 *
èrgë
++=(
uöt8_t
)
c
;

1421 *
off£ts
++=
sour˚Index
;

1427 
èrgëC≠acôy
-=
Àngth
;

1430 
c
=0;

1431 
sour˚Index
=
√xtSour˚Index
;

1432 
lo›
;

1434 
uöt8_t
 *
p
;

1444 
Àngth
-=
èrgëC≠acôy
;

1445 
p
=(
uöt8_t
 *)
˙v
->
ch¨Eº‹Buf„r
;

1446 
Àngth
) {

1449 *
p
++=(
uöt8_t
)(
c
>>24);

1451 *
p
++=(
uöt8_t
)(
c
>>16);

1453 *
p
++=(
uöt8_t
)(
c
>>8);

1455 *
p
=(
uöt8_t
)
c
;

1460 
˙v
->
ch¨Eº‹Buf„rLígth
=(
öt8_t
)
Àngth
;

1463 
c
>>=8*
Àngth
;

1464 
èrgëC≠acôy
) {

1467 *
èrgë
++=(
uöt8_t
)(
c
>>16);

1468 if(
off£ts
!=
NULL
) {

1469 *
off£ts
++=
sour˚Index
;

1472 *
èrgë
++=(
uöt8_t
)(
c
>>8);

1473 if(
off£ts
!=
NULL
) {

1474 *
off£ts
++=
sour˚Index
;

1477 *
èrgë
++=(
uöt8_t
)
c
;

1478 if(
off£ts
!=
NULL
) {

1479 *
off£ts
++=
sour˚Index
;

1486 
èrgëC≠acôy
=0;

1487 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

1488 
c
=0;

1489 
ídlo›
;

1491 
	}
}

1501 
	$_SCSUFromUnicode
(
UC⁄vîãrFromUnicodeArgs
 *
pArgs
,

1502 
UEº‹Code
 *
pEº‹Code
) {

1503 
UC⁄vîãr
 *
˙v
;

1504 
SCSUD©a
 *
scsu
;

1505 c⁄° 
UCh¨
 *
sour˚
, *
sour˚Limô
;

1506 
uöt8_t
 *
èrgë
;

1507 
öt32_t
 
èrgëC≠acôy
;

1509 
UBoﬁ
 
isSögÀByãMode
;

1510 
uöt8_t
 
dy«micWödow
;

1511 
uöt32_t
 
cuºítOff£t
;

1513 
uöt32_t
 
c
, 
dñè
;

1515 
öt32_t
 
Àngth
;

1518 
uöt32_t
 
off£t
;

1519 
UCh¨
 
Àad
, 
åaû
;

1520 
code
;

1521 
öt8_t
 
wödow
;

1524 
˙v
=
pArgs
->
c⁄vîãr
;

1525 
scsu
=(
SCSUD©a
 *)
˙v
->
exåaInfo
;

1528 
sour˚
=
pArgs
->source;

1529 
sour˚Limô
=
pArgs
->sourceLimit;

1530 
èrgë
=(
uöt8_t
 *)
pArgs
->target;

1531 
èrgëC≠acôy
=(
öt32_t
)(
pArgs
->
èrgëLimô
-pArgs->
èrgë
);

1534 
isSögÀByãMode
=
scsu
->
‰omUIsSögÀByãMode
;

1535 
dy«micWödow
=
scsu
->
‰omUDy«micWödow
;

1536 
cuºítOff£t
=
scsu
->
‰omUDy«micOff£ts
[
dy«micWödow
];

1538 
c
=
˙v
->
‰omUCh¨32
;

1541 
lo›
:

1542 if(
isSögÀByãMode
) {

1543 if(
c
!=0 && 
èrgëC≠acôy
>0) {

1544 
gëTøûSögÀ
;

1549 
sour˚
<
sour˚Limô
) {

1550 if(
èrgëC≠acôy
<=0) {

1552 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

1555 
c
=*
sour˚
++;

1557 if((
c
-0x20)<=0x5f) {

1559 *
èrgë
++=(
uöt8_t
)
c
;

1560 --
èrgëC≠acôy
;

1561 } if(
c
<0x20) {

1562 if((1UL<<
c
)&0x2601 ) {

1564 *
èrgë
++=(
uöt8_t
)
c
;

1565 --
èrgëC≠acôy
;

1568 
c
|=
SQ0
<<8;

1569 
Àngth
=2;

1570 
ouçutByãs
;

1572 } if((
dñè
=
c
-
cuºítOff£t
)<=0x7f) {

1574 *
èrgë
++=(
uöt8_t
)(
dñè
|0x80);

1575 --
èrgëC≠acôy
;

1576 } if(
	`UTF_IS_SURROGATE
(
c
)) {

1577 if(
	`UTF_IS_SURROGATE_FIRST
(
c
)) {

1578 
gëTøûSögÀ
:

1579 
Àad
=(
UCh¨
)
c
;

1580 if(
sour˚
<
sour˚Limô
) {

1582 
åaû
=*
sour˚
;

1583 if(
	`UTF_IS_SECOND_SURROGATE
(
åaû
)) {

1584 ++
sour˚
;

1585 
c
=
	`UTF16_GET_PAIR_VALUE
(c, 
åaû
);

1591 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

1592 
ídlo›
;

1601 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

1602 
ídlo›
;

1606 if((
dñè
=
c
-
cuºítOff£t
)<=0x7f) {

1608 *
èrgë
++=(
uöt8_t
)(
dñè
|0x80);

1609 --
èrgëC≠acôy
;

1610 } if((
wödow
=
	`gëWödow
(
scsu
->
‰omUDy«micOff£ts
, 
c
))>=0) {

1612 
dy«micWödow
=
wödow
;

1613 
cuºítOff£t
=
scsu
->
‰omUDy«micOff£ts
[
dy«micWödow
];

1614 
	`u£Dy«micWödow
(
scsu
, 
dy«micWödow
);

1615 
c
=((
uöt32_t
)(
SC0
+
dy«micWödow
)<<8)|(c-
cuºítOff£t
)|0x80;

1616 
Àngth
=2;

1617 
ouçutByãs
;

1618 } if((
code
=
	`gëDy«micOff£t
(
c
, &
off£t
))>=0) {

1621 
code
-=0x200;

1622 
dy«micWödow
=
	`gëNextDy«micWödow
(
scsu
);

1623 
cuºítOff£t
=
scsu
->
‰omUDy«micOff£ts
[
dy«micWödow
]=
off£t
;

1624 
	`u£Dy«micWödow
(
scsu
, 
dy«micWödow
);

1625 
c
=((
uöt32_t
)
SDX
<<24)|((uöt32_t)
dy«micWödow
<<21)|((uöt32_t)
code
<<8)|(c-
cuºítOff£t
)|0x80;

1626 
Àngth
=4;

1627 
ouçutByãs
;

1630 
isSögÀByãMode
=
FALSE
;

1631 *
èrgë
++=(
uöt8_t
)
SCU
;

1632 --
èrgëC≠acôy
;

1633 
c
=((
uöt32_t
)
Àad
<<16)|
åaû
;

1634 
Àngth
=4;

1635 
ouçutByãs
;

1637 } if(
c
<0xa0) {

1639 
c
=(c&0x7f)|(
SQ0
+1)<<8;

1640 
Àngth
=2;

1641 
ouçutByãs
;

1642 } if(
c
==0xfeff || c>=0xfff0) {

1644 
c
|=
SQU
<<16;

1645 
Àngth
=3;

1646 
ouçutByãs
;

1649 if((
wödow
=
	`gëWödow
(
scsu
->
‰omUDy«micOff£ts
, 
c
))>=0) {

1651 if(
sour˚
>=
sour˚Limô
 || 
	`isInOff£tWödowOrDúe˘
(
scsu
->
‰omUDy«micOff£ts
[
wödow
], *source)) {

1653 
dy«micWödow
=
wödow
;

1654 
cuºítOff£t
=
scsu
->
‰omUDy«micOff£ts
[
dy«micWödow
];

1655 
	`u£Dy«micWödow
(
scsu
, 
dy«micWödow
);

1656 
c
=((
uöt32_t
)(
SC0
+
dy«micWödow
)<<8)|(c-
cuºítOff£t
)|0x80;

1657 
Àngth
=2;

1658 
ouçutByãs
;

1661 
c
=((
uöt32_t
)(
SQ0
+
wödow
)<<8)|(c-
scsu
->
‰omUDy«micOff£ts
[window])|0x80;

1662 
Àngth
=2;

1663 
ouçutByãs
;

1665 } if((
wödow
=
	`gëWödow
(
°©icOff£ts
, 
c
))>=0) {

1667 
c
=((
uöt32_t
)(
SQ0
+
wödow
)<<8)|(c-
°©icOff£ts
[window]);

1668 
Àngth
=2;

1669 
ouçutByãs
;

1670 } if((
code
=
	`gëDy«micOff£t
(
c
, &
off£t
))>=0) {

1672 
dy«micWödow
=
	`gëNextDy«micWödow
(
scsu
);

1673 
cuºítOff£t
=
scsu
->
‰omUDy«micOff£ts
[
dy«micWödow
]=
off£t
;

1674 
	`u£Dy«micWödow
(
scsu
, 
dy«micWödow
);

1675 
c
=((
uöt32_t
)(
SD0
+
dy«micWödow
)<<16)|((uöt32_t)
code
<<8)|(c-
cuºítOff£t
)|0x80;

1676 
Àngth
=3;

1677 
ouçutByãs
;

1678 } if((
uöt32_t
)(
c
-0x3400)<(0xd800-0x3400) &&

1679 (
sour˚
>=
sour˚Limô
 || (
uöt32_t
)(*source-0x3400)<(0xd800-0x3400))

1686 
isSögÀByãMode
=
FALSE
;

1687 
c
|=
SCU
<<16;

1688 
Àngth
=3;

1689 
ouçutByãs
;

1692 
c
|=
SQU
<<16;

1693 
Àngth
=3;

1694 
ouçutByãs
;

1699 
c
=0;

1702 if(
c
!=0 && 
èrgëC≠acôy
>0) {

1703 
gëTøûUnicode
;

1708 
sour˚
<
sour˚Limô
) {

1709 if(
èrgëC≠acôy
<=0) {

1711 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

1714 
c
=*
sour˚
++;

1716 if((
uöt32_t
)(
c
-0x3400)<(0xd800-0x3400)) {

1718 if(
èrgëC≠acôy
>=2) {

1719 *
èrgë
++=(
uöt8_t
)(
c
>>8);

1720 *
èrgë
++=(
uöt8_t
)
c
;

1721 
èrgëC≠acôy
-=2;

1723 
Àngth
=2;

1724 
ouçutByãs
;

1726 } if((
uöt32_t
)(
c
-0x3400)>=(0xf300-0x3400) ) {

1728 if(!(
sour˚
<
sour˚Limô
 && (
uöt32_t
)(*source-0x3400)<(0xd800-0x3400))) {

1729 if(((
uöt32_t
)(
c
-0x30)<10 || (uint32_t)(c-0x61)<26 || (uint32_t)(c-0x41)<26)) {

1731 
isSögÀByãMode
=
TRUE
;

1732 
c
|=((
uöt32_t
)(
UC0
+
dy«micWödow
)<<8)|c;

1733 
Àngth
=2;

1734 
ouçutByãs
;

1735 } if((
wödow
=
	`gëWödow
(
scsu
->
‰omUDy«micOff£ts
, 
c
))>=0) {

1737 
isSögÀByãMode
=
TRUE
;

1738 
dy«micWödow
=
wödow
;

1739 
cuºítOff£t
=
scsu
->
‰omUDy«micOff£ts
[
dy«micWödow
];

1740 
	`u£Dy«micWödow
(
scsu
, 
dy«micWödow
);

1741 
c
=((
uöt32_t
)(
UC0
+
dy«micWödow
)<<8)|(c-
cuºítOff£t
)|0x80;

1742 
Àngth
=2;

1743 
ouçutByãs
;

1744 } if((
code
=
	`gëDy«micOff£t
(
c
, &
off£t
))>=0) {

1746 
isSögÀByãMode
=
TRUE
;

1747 
dy«micWödow
=
	`gëNextDy«micWödow
(
scsu
);

1748 
cuºítOff£t
=
scsu
->
‰omUDy«micOff£ts
[
dy«micWödow
]=
off£t
;

1749 
	`u£Dy«micWödow
(
scsu
, 
dy«micWödow
);

1750 
c
=((
uöt32_t
)(
UD0
+
dy«micWödow
)<<16)|((uöt32_t)
code
<<8)|(c-
cuºítOff£t
)|0x80;

1751 
Àngth
=3;

1752 
ouçutByãs
;

1757 
Àngth
=2;

1758 
ouçutByãs
;

1759 } if(
c
<0xe000) {

1761 if(
	`UTF_IS_SURROGATE_FIRST
(
c
)) {

1762 
gëTøûUnicode
:

1763 
Àad
=(
UCh¨
)
c
;

1764 if(
sour˚
<
sour˚Limô
) {

1766 
åaû
=*
sour˚
;

1767 if(
	`UTF_IS_SECOND_SURROGATE
(
åaû
)) {

1768 ++
sour˚
;

1769 
c
=
	`UTF16_GET_PAIR_VALUE
(c, 
åaû
);

1775 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

1776 
ídlo›
;

1785 *
pEº‹Code
=
U_ILLEGAL_CHAR_FOUND
;

1786 
ídlo›
;

1790 if–(
wödow
=
	`gëWödow
(
scsu
->
‰omUDy«micOff£ts
, 
c
))>=0 &&

1791 !(
sour˚
<
sour˚Limô
 && (
uöt32_t
)(*source-0x3400)<(0xd800-0x3400))

1798 
isSögÀByãMode
=
TRUE
;

1799 
dy«micWödow
=
wödow
;

1800 
cuºítOff£t
=
scsu
->
‰omUDy«micOff£ts
[
dy«micWödow
];

1801 
	`u£Dy«micWödow
(
scsu
, 
dy«micWödow
);

1802 
c
=((
uöt32_t
)(
UC0
+
dy«micWödow
)<<8)|(c-
cuºítOff£t
)|0x80;

1803 
Àngth
=2;

1804 
ouçutByãs
;

1805 } if(
sour˚
<
sour˚Limô
 && 
Àad
==*source &&

1806 (
code
=
	`gëDy«micOff£t
(
c
, &
off£t
))>=0

1809 
isSögÀByãMode
=
TRUE
;

1810 
code
-=0x200;

1811 
dy«micWödow
=
	`gëNextDy«micWödow
(
scsu
);

1812 
cuºítOff£t
=
scsu
->
‰omUDy«micOff£ts
[
dy«micWödow
]=
off£t
;

1813 
	`u£Dy«micWödow
(
scsu
, 
dy«micWödow
);

1814 
c
=((
uöt32_t
)
UDX
<<24)|((uöt32_t)
dy«micWödow
<<21)|((uöt32_t)
code
<<8)|(c-
cuºítOff£t
)|0x80;

1815 
Àngth
=4;

1816 
ouçutByãs
;

1819 
c
=((
uöt32_t
)
Àad
<<16)|
åaû
;

1820 
Àngth
=4;

1821 
ouçutByãs
;

1825 
c
|=
UQU
<<16;

1826 
Àngth
=3;

1827 
ouçutByãs
;

1831 
c
=0;

1834 
ídlo›
:

1837 
scsu
->
‰omUIsSögÀByãMode
=
isSögÀByãMode
;

1838 
scsu
->
‰omUDy«micWödow
=
dy«micWödow
;

1840 
˙v
->
‰omUCh¨32
=
c
;

1843 
pArgs
->
sour˚
=source;

1844 
pArgs
->
èrgë
=(*)target;

1847 
ouçutByãs
:

1850 if(
Àngth
<=
èrgëC≠acôy
) {

1851 
Àngth
) {

1854 *
èrgë
++=(
uöt8_t
)(
c
>>24);

1856 *
èrgë
++=(
uöt8_t
)(
c
>>16);

1858 *
èrgë
++=(
uöt8_t
)(
c
>>8);

1860 *
èrgë
++=(
uöt8_t
)
c
;

1865 
èrgëC≠acôy
-=
Àngth
;

1868 
c
=0;

1869 
lo›
;

1871 
uöt8_t
 *
p
;

1881 
Àngth
-=
èrgëC≠acôy
;

1882 
p
=(
uöt8_t
 *)
˙v
->
ch¨Eº‹Buf„r
;

1883 
Àngth
) {

1886 *
p
++=(
uöt8_t
)(
c
>>24);

1888 *
p
++=(
uöt8_t
)(
c
>>16);

1890 *
p
++=(
uöt8_t
)(
c
>>8);

1892 *
p
=(
uöt8_t
)
c
;

1897 
˙v
->
ch¨Eº‹Buf„rLígth
=(
öt8_t
)
Àngth
;

1900 
c
>>=8*
Àngth
;

1901 
èrgëC≠acôy
) {

1904 *
èrgë
++=(
uöt8_t
)(
c
>>16);

1906 *
èrgë
++=(
uöt8_t
)(
c
>>8);

1908 *
èrgë
++=(
uöt8_t
)
c
;

1914 
èrgëC≠acôy
=0;

1915 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

1916 
c
=0;

1917 
ídlo›
;

1919 
	}
}

1924 
	$_SCSUGëName
(c⁄° 
UC⁄vîãr
 *
˙v
) {

1925 
SCSUD©a
 *
scsu
=(SCSUD©®*)
˙v
->
exåaInfo
;

1927 
scsu
->
loˇÀ
) {

1928 
l_ja
:

1933 
	}
}

1936 
	s˛⁄eSCSUSåu˘


1938 
UC⁄vîãr
 
	m˙v
;

1939 
SCSUD©a
 
	mmyd©a
;

1942 
UC⁄vîãr
 *

1943 
	$_SCSUSa„Cl⁄e
(c⁄° 
UC⁄vîãr
 *
˙v
,

1944 *
°ackBuf„r
,

1945 
öt32_t
 *
pBuf„rSize
,

1946 
UEº‹Code
 *
°©us
)

1948 
˛⁄eSCSUSåu˘
 * 
loˇlCl⁄e
;

1949 
öt32_t
 
buf„rSizeNìded
 = (
˛⁄eSCSUSåu˘
);

1951 i‡(
	`U_FAILURE
(*
°©us
)){

1955 i‡(*
pBuf„rSize
 == 0){

1956 *
pBuf„rSize
 = 
buf„rSizeNìded
;

1960 
loˇlCl⁄e
 = (
˛⁄eSCSUSåu˘
 *)
°ackBuf„r
;

1963 
	`u¥v_mem˝y
(&
loˇlCl⁄e
->
myd©a
, 
˙v
->
exåaInfo
, (
SCSUD©a
));

1964 
loˇlCl⁄e
->
˙v
.
exåaInfo
 = &loˇlCl⁄e->
myd©a
;

1965 
loˇlCl⁄e
->
˙v
.
isExåaLoˇl
 = 
TRUE
;

1967  &
loˇlCl⁄e
->
˙v
;

1968 
	}
}

1971 c⁄° 
UC⁄vîãrIm∂
 
	g_SCSUIm∂
={

1972 
UCNV_SCSU
,

1974 
NULL
,

1975 
NULL
,

1977 
_SCSUO≥n
,

1978 
_SCSUClo£
,

1979 
_SCSURe£t
,

1981 
_SCSUToUnicode
,

1982 
_SCSUToUnicodeWôhOff£ts
,

1983 
_SCSUFromUnicode
,

1984 
_SCSUFromUnicodeWôhOff£ts
,

1985 
NULL
,

1987 
NULL
,

1988 
_SCSUGëName
,

1989 
NULL
,

1990 
_SCSUSa„Cl⁄e
,

1991 
u˙v_gëCom∂ëeUnicodeSë


1994 c⁄° 
UC⁄vîãrSèticD©a
 
	g_SCSUSèticD©a
={

1995 (
UC⁄vîãrSèticD©a
),

1998 
UCNV_IBM
, 
UCNV_SCSU
,

2005 
FALSE
, FALSE,

2011 c⁄° 
UC⁄vîãrSh¨edD©a
 
	g_SCSUD©a
={

2012 (
UC⁄vîãrSh¨edD©a
), ~((
uöt32_t
)0),

2013 
NULL
, NULL, &
_SCSUSèticD©a
, 
FALSE
, &
_SCSUIm∂
,

	@ucnvsel.cpp

27 
	~"unicode/u˙v£l.h
"

29 
	~<°rög.h
>

31 
	~"unicode/uch¨.h
"

32 
	~"unicode/uni£t.h
"

33 
	~"unicode/u˙v.h
"

34 
	~"unicode/u°rög.h
"

35 
	~"unicode/uchrôî.h
"

36 
	~"uåõ2.h
"

37 
	~"¥›svec.h
"

38 
	~"uas£π.h
"

39 
	~"ucmnd©a.h
"

40 
	~"uíumimp.h
"

41 
	~"cmem‹y.h
"

42 
	~"c°rög.h
"

44 
U_NAMESPACE_USE


46 
	sUC⁄vîãrSñe˘‹
 {

47 
UTrõ2
 *
	måõ
;

48 
uöt32_t
* 
	mpv
;

49 
öt32_t
 
	mpvCou¡
;

50 ** 
	mícodögs
;

51 
öt32_t
 
	mícodögsCou¡
;

52 
öt32_t
 
	mícodögSåLígth
;

53 
uöt8_t
* 
	msw≠≥d
;

54 
UBoﬁ
 
	mownPv
, 
	mownEncodögSåögs
;

57 
	$gíî©eSñe˘‹D©a
(
UC⁄vîãrSñe˘‹
* 
ªsu…
,

58 
UPr›sVe˘‹s
 *
upvec
,

59 c⁄° 
USë
* 
ex˛udedCodePoöts
,

60 c⁄° 
UC⁄vîãrUnicodeSë
 
whichSë
,

61 
UEº‹Code
* 
°©us
) {

62 i‡(
	`U_FAILURE
(*
°©us
)) {

66 
öt32_t
 
cﬁumns
 = (
ªsu…
->
ícodögsCou¡
+31)/32;

69 
öt32_t
 
cﬁ
 = 0; cﬁ < 
cﬁumns
; col++) {

70 
	`upvec_£tVÆue
(
upvec
, 
UPVEC_ERROR_VALUE_CP
, UPVEC_ERROR_VALUE_CP,

71 
cﬁ
, ~0, ~0, 
°©us
);

74 
öt32_t
 
i
 = 0; i < 
ªsu…
->
ícodögsCou¡
; ++i) {

75 
uöt32_t
 
mask
;

76 
uöt32_t
 
cﬁumn
;

77 
öt32_t
 
ôem_cou¡
;

78 
öt32_t
 
j
;

79 
UC⁄vîãr
* 
ã°_c⁄vîãr
 = 
	`u˙v_›í
(
ªsu…
->
ícodögs
[
i
], 
°©us
);

80 i‡(
	`U_FAILURE
(*
°©us
)) {

83 
USë
* 
unicode_poöt_£t
;

84 
unicode_poöt_£t
 = 
	`u£t_›í
(1, 0);

86 
	`u˙v_gëUnicodeSë
(
ã°_c⁄vîãr
, 
unicode_poöt_£t
,

87 
whichSë
, 
°©us
);

88 i‡(
	`U_FAILURE
(*
°©us
)) {

89 
	`u˙v_˛o£
(
ã°_c⁄vîãr
);

93 
cﬁumn
 = 
i
 / 32;

94 
mask
 = 1 << (
i
%32);

96 
ôem_cou¡
 = 
	`u£t_gëIãmCou¡
(
unicode_poöt_£t
);

98 
j
 = 0; j < 
ôem_cou¡
; ++j) {

99 
UCh¨32
 
°¨t_ch¨
;

100 
UCh¨32
 
íd_ch¨
;

101 
UEº‹Code
 
smÆlSètus
 = 
U_ZERO_ERROR
;

102 
	`u£t_gëIãm
(
unicode_poöt_£t
, 
j
, &
°¨t_ch¨
, &
íd_ch¨
, 
NULL
, 0,

103 &
smÆlSètus
);

104 i‡(
	`U_FAILURE
(
smÆlSètus
)) {

108 
	`upvec_£tVÆue
(
upvec
, 
°¨t_ch¨
, 
íd_ch¨
, 
cﬁumn
, ~0, 
mask
,

109 
°©us
);

112 
	`u˙v_˛o£
(
ã°_c⁄vîãr
);

113 
	`u£t_˛o£
(
unicode_poöt_£t
);

114 i‡(
	`U_FAILURE
(*
°©us
)) {

120 i‡(
ex˛udedCodePoöts
) {

121 
öt32_t
 
ôem_cou¡
 = 
	`u£t_gëIãmCou¡
(
ex˛udedCodePoöts
);

122 
öt32_t
 
j
 = 0; j < 
ôem_cou¡
; ++j) {

123 
UCh¨32
 
°¨t_ch¨
;

124 
UCh¨32
 
íd_ch¨
;

126 
	`u£t_gëIãm
(
ex˛udedCodePoöts
, 
j
, &
°¨t_ch¨
, &
íd_ch¨
, 
NULL
, 0,

127 
°©us
);

128 
öt32_t
 
cﬁ
 = 0; cﬁ < 
cﬁumns
; col++) {

129 
	`upvec_£tVÆue
(
upvec
, 
°¨t_ch¨
, 
íd_ch¨
, 
cﬁ
, ~0, ~0,

130 
°©us
);

137 
ªsu…
->
åõ
 = 
	`upvec_com∑˘ToUTrõ2WôhRowIndexes
(
upvec
, 
°©us
);

138 
ªsu…
->
pv
 = 
	`upvec_˛⁄eAºay
(
upvec
, &ªsu…->
pvCou¡
, 
NULL
, 
°©us
);

139 
ªsu…
->
pvCou¡
 *
cﬁumns
;

140 
ªsu…
->
ownPv
 = 
TRUE
;

141 
	}
}

145 
U_CAPI
 
UC⁄vîãrSñe˘‹
* 
U_EXPORT2


146 
	$u˙v£l_›í
(c⁄° * c⁄°* 
c⁄vîãrLi°
, 
öt32_t
 
c⁄vîãrLi°Size
,

147 c⁄° 
USë
* 
ex˛udedCodePoöts
,

148 c⁄° 
UC⁄vîãrUnicodeSë
 
whichSë
, 
UEº‹Code
* 
°©us
) {

150 i‡(
	`U_FAILURE
(*
°©us
)) {

151  
NULL
;

154 i‡(
c⁄vîãrLi°Size
 < 0 || (
c⁄vîãrLi°
 =
NULL
 && converterListSize != 0)) {

155 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

156  
NULL
;

160 
LoˇlUC⁄vîãrSñe˘‹Poöãr
 
	`√wSñe˘‹
(

161 (
UC⁄vîãrSñe˘‹
*)
	`u¥v_mÆloc
((UConverterSelector)));

162 i‡(
√wSñe˘‹
.
	`isNuŒ
()) {

163 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

164  
NULL
;

166 
	`u¥v_mem£t
(
√wSñe˘‹
.
	`gëAlüs
(), 0, (
UC⁄vîãrSñe˘‹
));

168 i‡(
c⁄vîãrLi°Size
 == 0) {

169 
c⁄vîãrLi°
 = 
NULL
;

170 
c⁄vîãrLi°Size
 = 
	`u˙v_cou¡AvaûabÀ
();

172 
√wSñe˘‹
->
ícodögs
 =

173 (**)
	`u¥v_mÆloc
(
c⁄vîãrLi°Size
 * (*));

174 i‡(!
√wSñe˘‹
->
ícodögs
) {

175 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

176  
NULL
;

178 
√wSñe˘‹
->
ícodögs
[0] = 
NULL
;

181 
öt32_t
 
tŸÆSize
 = 0;

182 
öt32_t
 
i
;

183 
i
 = 0; i < 
c⁄vîãrLi°Size
; i++) {

184 
tŸÆSize
 +=

185 (
öt32_t
)
	`u¥v_°æí
(
c⁄vîãrLi°
 !
NULL
 ? c⁄vîãrLi°[
i
] : 
	`u˙v_gëAvaûabÀName
(i)) + 1;

188 
öt32_t
 
ícodögSåPaddög
 = 
tŸÆSize
 & 3;

189 i‡(
ícodögSåPaddög
 != 0) {

190 
ícodögSåPaddög
 = 4 -ÉncodingStrPadding;

192 
√wSñe˘‹
->
ícodögSåLígth
 = 
tŸÆSize
 +
ícodögSåPaddög
;

193 * 
ÆlSåögs
 = (*Ë
	`u¥v_mÆloc
(
tŸÆSize
);

194 i‡(!
ÆlSåögs
) {

195 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

196  
NULL
;

199 
i
 = 0; i < 
c⁄vîãrLi°Size
; i++) {

200 
√wSñe˘‹
->
ícodögs
[
i
] = 
ÆlSåögs
;

201 
	`u¥v_°r˝y
(
√wSñe˘‹
->
ícodögs
[
i
],

202 
c⁄vîãrLi°
 !
NULL
 ? c⁄vîãrLi°[
i
] : 
	`u˙v_gëAvaûabÀName
(i));

203 
ÆlSåögs
 +
	`u¥v_°æí
(
√wSñe˘‹
->
ícodögs
[
i
]) + 1;

205 
ícodögSåPaddög
 > 0) {

206 *
ÆlSåögs
++ = 0;

207 --
ícodögSåPaddög
;

210 
√wSñe˘‹
->
ownEncodögSåögs
 = 
TRUE
;

211 
√wSñe˘‹
->
ícodögsCou¡
 = 
c⁄vîãrLi°Size
;

212 
UPr›sVe˘‹s
 *
upvec
 = 
	`upvec_›í
((
c⁄vîãrLi°Size
+31)/32, 
°©us
);

213 
	`gíî©eSñe˘‹D©a
(
√wSñe˘‹
.
	`gëAlüs
(), 
upvec
, 
ex˛udedCodePoöts
, 
whichSë
, 
°©us
);

214 
	`upvec_˛o£
(
upvec
);

216 i‡(
	`U_FAILURE
(*
°©us
)) {

217  
NULL
;

220  
√wSñe˘‹
.
	`‹ph™
();

221 
	}
}

224 
U_CAPI
 
U_EXPORT2


225 
	$u˙v£l_˛o£
(
UC⁄vîãrSñe˘‹
 *
£l
) {

226 i‡(!
£l
) {

229 i‡(
£l
->
ownEncodögSåögs
) {

230 
	`u¥v_‰ì
(
£l
->
ícodögs
[0]);

232 
	`u¥v_‰ì
(
£l
->
ícodögs
);

233 i‡(
£l
->
ownPv
) {

234 
	`u¥v_‰ì
(
£l
->
pv
);

236 
	`uåõ2_˛o£
(
£l
->
åõ
);

237 
	`u¥v_‰ì
(
£l
->
sw≠≥d
);

238 
	`u¥v_‰ì
(
£l
);

239 
	}
}

241 c⁄° 
UD©aInfo
 
	gd©aInfo
 = {

242 (
UD©aInfo
),

245 
U_IS_BIG_ENDIAN
,

246 
U_CHARSET_FAMILY
,

247 
U_SIZEOF_UCHAR
,

256 
	mUCNVSEL_INDEX_TRIE_SIZE
,

257 
	mUCNVSEL_INDEX_PV_COUNT
,

258 
	mUCNVSEL_INDEX_NAMES_COUNT
,

259 
	mUCNVSEL_INDEX_NAMES_LENGTH
,

260 
	mUCNVSEL_INDEX_SIZE
 = 15,

261 
	mUCNVSEL_INDEX_COUNT
 = 16

277 
U_CAPI
 
öt32_t
 
U_EXPORT2


278 
	$u˙v£l_£rülize
(c⁄° 
UC⁄vîãrSñe˘‹
* 
£l
,

279 * 
buf„r
, 
öt32_t
 
buf„rC≠acôy
, 
UEº‹Code
* 
°©us
) {

281 i‡(
	`U_FAILURE
(*
°©us
)) {

285 
uöt8_t
 *
p
 = (uöt8_à*)
buf„r
;

286 i‡(
buf„rC≠acôy
 < 0 ||

287 (
buf„rC≠acôy
 > 0 && (
p
 =
NULL
 || (
	`U_POINTER_MASK_LSB
(p, 3) != 0)))

289 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

293 
öt32_t
 
£rülizedTrõSize
 = 
	`uåõ2_£rülize
(
£l
->
åõ
, 
NULL
, 0, 
°©us
);

294 i‡(*
°©us
 !
U_BUFFER_OVERFLOW_ERROR
 && 
	`U_FAILURE
(*status)) {

297 *
°©us
 = 
U_ZERO_ERROR
;

299 
D©aHódî
 
hódî
;

300 
	`u¥v_mem£t
(&
hódî
, 0, (header));

301 
hódî
.
d©aHódî
.
hódîSize
 = (
uöt16_t
)(((header) + 15) & ~15);

302 
hódî
.
d©aHódî
.
magic1
 = 0xda;

303 
hódî
.
d©aHódî
.
magic2
 = 0x27;

304 
	`u¥v_mem˝y
(&
hódî
.
öfo
, &
d©aInfo
, (dataInfo));

306 
öt32_t
 
ödexes
[
UCNVSEL_INDEX_COUNT
] = {

307 
£rülizedTrõSize
,

308 
£l
->
pvCou¡
,

309 
£l
->
ícodögsCou¡
,

310 
£l
->
ícodögSåLígth


313 
öt32_t
 
tŸÆSize
 =

314 
hódî
.
d©aHódî
.
hódîSize
 +

315 (
öt32_t
)(
ödexes
) +

316 
£rülizedTrõSize
 +

317 
£l
->
pvCou¡
 * 4 +

318 
£l
->
ícodögSåLígth
;

319 
ödexes
[
UCNVSEL_INDEX_SIZE
] = 
tŸÆSize
 - 
hódî
.
d©aHódî
.
hódîSize
;

320 i‡(
tŸÆSize
 > 
buf„rC≠acôy
) {

321 *
°©us
 = 
U_BUFFER_OVERFLOW_ERROR
;

322  
tŸÆSize
;

325 
öt32_t
 
Àngth
 = 
hódî
.
d©aHódî
.
hódîSize
;

326 
	`u¥v_mem˝y
(
p
, &
hódî
, (header));

327 
	`u¥v_mem£t
(
p
 + (
hódî
), 0, 
Àngth
 - (header));

328 
p
 +
Àngth
;

330 
Àngth
 = (
öt32_t
)(
ödexes
);

331 
	`u¥v_mem˝y
(
p
, 
ödexes
, 
Àngth
);

332 
p
 +
Àngth
;

334 
	`uåõ2_£rülize
(
£l
->
åõ
, 
p
, 
£rülizedTrõSize
, 
°©us
);

335 
p
 +
£rülizedTrõSize
;

337 
Àngth
 = 
£l
->
pvCou¡
 * 4;

338 
	`u¥v_mem˝y
(
p
, 
£l
->
pv
, 
Àngth
);

339 
p
 +
Àngth
;

341 
	`u¥v_mem˝y
(
p
, 
£l
->
ícodögs
[0], sñ->
ícodögSåLígth
);

342 
p
 +
£l
->
ícodögSåLígth
;

344  
tŸÆSize
;

345 
	}
}

364 
öt32_t


365 
	$u˙v£l_sw≠
(c⁄° 
UD©aSw≠≥r
 *
ds
,

366 c⁄° *
öD©a
, 
öt32_t
 
Àngth
,

367 *
outD©a
, 
UEº‹Code
 *
°©us
) {

369 
öt32_t
 
hódîSize
 = 
	`ud©a_sw≠D©aHódî
(
ds
, 
öD©a
, 
Àngth
, 
outD©a
, 
°©us
);

370 if(
	`U_FAILURE
(*
°©us
)) {

375 c⁄° 
UD©aInfo
 *
pInfo
 = (c⁄° UD©aInfÿ*)((c⁄° *)
öD©a
 + 4);

377 
pInfo
->
d©aF‹m©
[0] == 0x43 &&

378 
pInfo
->
d©aF‹m©
[1] == 0x53 &&

379 
pInfo
->
d©aF‹m©
[2] == 0x65 &&

380 
pInfo
->
d©aF‹m©
[3] == 0x6c

382 
	`ud©a_¥ötEº‹
(
ds
, "ucnvsel_swap(): data format %02x.%02x.%02x.%02x isÇotÑecognizedás UConverterSelector data\n",

383 
pInfo
->
d©aF‹m©
[0],ÖInfo->dataFormat[1],

384 
pInfo
->
d©aF‹m©
[2],ÖInfo->dataFormat[3]);

385 *
°©us
 = 
U_INVALID_FORMAT_ERROR
;

388 if(
pInfo
->
f‹m©Vîsi⁄
[0] != 1) {

389 
	`ud©a_¥ötEº‹
(
ds
, "ucnvsel_swap(): format version %02x isÇot supported\n",

390 
pInfo
->
f‹m©Vîsi⁄
[0]);

391 *
°©us
 = 
U_UNSUPPORTED_ERROR
;

395 if(
Àngth
 >= 0) {

396 
Àngth
 -
hódîSize
;

397 if(
Àngth
 < 16*4) {

398 
	`ud©a_¥ötEº‹
(
ds
, "ucnvsel_swap():Åoo few bytes (%dáfter header) for UConverterSelector data\n",

399 
Àngth
);

400 *
°©us
 = 
U_INDEX_OUTOFBOUNDS_ERROR
;

405 c⁄° 
uöt8_t
 *
öByãs
 = (c⁄° uöt8_à*)
öD©a
 + 
hódîSize
;

406 
uöt8_t
 *
outByãs
 = (uöt8_à*)
outD©a
 + 
hódîSize
;

409 c⁄° 
öt32_t
 *
öIndexes
 = (c⁄° i¡32_à*)
öByãs
;

410 
öt32_t
 
ödexes
[16];

411 
öt32_t
 
i
;

412 
i
 = 0; i < 16; ++i) {

413 
ödexes
[
i
] = 
	`ud©a_ªadI¡32
(
ds
, 
öIndexes
[i]);

417 
öt32_t
 
size
 = 
ödexes
[
UCNVSEL_INDEX_SIZE
];

418 if(
Àngth
 >= 0) {

419 if(
Àngth
 < 
size
) {

420 
	`ud©a_¥ötEº‹
(
ds
, "ucnvsel_swap():Åoo few bytes (%dáfter header) foráll of UConverterSelector data\n",

421 
Àngth
);

422 *
°©us
 = 
U_INDEX_OUTOFBOUNDS_ERROR
;

427 if(
öByãs
 !
outByãs
) {

428 
	`u¥v_mem˝y
(
outByãs
, 
öByãs
, 
size
);

431 
öt32_t
 
off£t
 = 0, 
cou¡
;

434 
cou¡
 = 
UCNVSEL_INDEX_COUNT
*4;

435 
ds
->
	`sw≠Aºay32
(ds, 
öByãs
, 
cou¡
, 
outByãs
, 
°©us
);

436 
off£t
 +
cou¡
;

439 
cou¡
 = 
ödexes
[
UCNVSEL_INDEX_TRIE_SIZE
];

440 
	`uåõ2_sw≠
(
ds
, 
öByãs
 + 
off£t
, 
cou¡
, 
outByãs
 + off£t, 
°©us
);

441 
off£t
 +
cou¡
;

444 
cou¡
 = 
ödexes
[
UCNVSEL_INDEX_PV_COUNT
]*4;

445 
ds
->
	`sw≠Aºay32
(ds, 
öByãs
 + 
off£t
, 
cou¡
, 
outByãs
 + off£t, 
°©us
);

446 
off£t
 +
cou¡
;

449 
cou¡
 = 
ödexes
[
UCNVSEL_INDEX_NAMES_LENGTH
];

450 
ds
->
	`sw≠InvCh¨s
(ds, 
öByãs
 + 
off£t
, 
cou¡
, 
outByãs
 + off£t, 
°©us
);

451 
off£t
 +
cou¡
;

453 
	`U_ASSERT
(
off£t
 =
size
);

456  
hódîSize
 + 
size
;

457 
	}
}

460 
U_CAPI
 
UC⁄vîãrSñe˘‹
* 
U_EXPORT2


461 
	$u˙v£l_›íFromSîülized
(c⁄° * 
buf„r
, 
öt32_t
 
Àngth
, 
UEº‹Code
* 
°©us
) {

463 i‡(
	`U_FAILURE
(*
°©us
)) {

464  
NULL
;

467 c⁄° 
uöt8_t
 *
p
 = (c⁄° uöt8_à*)
buf„r
;

468 i‡(
Àngth
 <= 0 ||

469 (
Àngth
 > 0 && (
p
 =
NULL
 || (
	`U_POINTER_MASK_LSB
(p, 3) != 0)))

471 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

472  
NULL
;

475 i‡(
Àngth
 < 32) {

477 *
°©us
 = 
U_INDEX_OUTOFBOUNDS_ERROR
;

478  
NULL
;

480 c⁄° 
D©aHódî
 *
pHódî
 = (c⁄° D©aHódî *)
p
;

482 
pHódî
->
d©aHódî
.
magic1
==0xda &&

483 
pHódî
->
d©aHódî
.
magic2
==0x27 &&

484 
pHódî
->
öfo
.
d©aF‹m©
[0] == 0x43 &&

485 
pHódî
->
öfo
.
d©aF‹m©
[1] == 0x53 &&

486 
pHódî
->
öfo
.
d©aF‹m©
[2] == 0x65 &&

487 
pHódî
->
öfo
.
d©aF‹m©
[3] == 0x6c

490 *
°©us
 = 
U_INVALID_FORMAT_ERROR
;

491  
NULL
;

493 i‡(
pHódî
->
öfo
.
f‹m©Vîsi⁄
[0] != 1) {

494 *
°©us
 = 
U_UNSUPPORTED_ERROR
;

495  
NULL
;

497 
uöt8_t
* 
sw≠≥d
 = 
NULL
;

498 i‡(
pHódî
->
öfo
.
isBigEndün
 !
U_IS_BIG_ENDIAN
 ||

499 
pHódî
->
öfo
.
ch¨£tFamûy
 !
U_CHARSET_FAMILY


502 
UD©aSw≠≥r
 *
ds
 =

503 
	`ud©a_›íSw≠≥rF‹I≈utD©a
(
p
, 
Àngth
, 
U_IS_BIG_ENDIAN
, 
U_CHARSET_FAMILY
, 
°©us
);

504 
öt32_t
 
tŸÆSize
 = 
	`u˙v£l_sw≠
(
ds
, 
p
, -1, 
NULL
, 
°©us
);

505 i‡(
	`U_FAILURE
(*
°©us
)) {

506 
	`ud©a_˛o£Sw≠≥r
(
ds
);

507  
NULL
;

509 i‡(
Àngth
 < 
tŸÆSize
) {

510 
	`ud©a_˛o£Sw≠≥r
(
ds
);

511 *
°©us
 = 
U_INDEX_OUTOFBOUNDS_ERROR
;

512  
NULL
;

514 
sw≠≥d
 = (
uöt8_t
*)
	`u¥v_mÆloc
(
tŸÆSize
);

515 i‡(
sw≠≥d
 =
NULL
) {

516 
	`ud©a_˛o£Sw≠≥r
(
ds
);

517 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

518  
NULL
;

520 
	`u˙v£l_sw≠
(
ds
, 
p
, 
Àngth
, 
sw≠≥d
, 
°©us
);

521 
	`ud©a_˛o£Sw≠≥r
(
ds
);

522 i‡(
	`U_FAILURE
(*
°©us
)) {

523 
	`u¥v_‰ì
(
sw≠≥d
);

524  
NULL
;

526 
p
 = 
sw≠≥d
;

527 
pHódî
 = (c⁄° 
D©aHódî
 *)
p
;

529 i‡(
Àngth
 < (
pHódî
->
d©aHódî
.
hódîSize
 + 16 * 4)) {

531 
	`u¥v_‰ì
(
sw≠≥d
);

532 *
°©us
 = 
U_INDEX_OUTOFBOUNDS_ERROR
;

533  
NULL
;

535 
p
 +
pHódî
->
d©aHódî
.
hódîSize
;

536 
Àngth
 -
pHódî
->
d©aHódî
.
hódîSize
;

538 c⁄° 
öt32_t
 *
ödexes
 = (c⁄° i¡32_à*)
p
;

539 i‡(
Àngth
 < 
ödexes
[
UCNVSEL_INDEX_SIZE
]) {

540 
	`u¥v_‰ì
(
sw≠≥d
);

541 *
°©us
 = 
U_INDEX_OUTOFBOUNDS_ERROR
;

542  
NULL
;

544 
p
 +
UCNVSEL_INDEX_COUNT
 * 4;

546 
UC⁄vîãrSñe˘‹
* 
£l
 = (UC⁄vîãrSñe˘‹*)
	`u¥v_mÆloc
((UConverterSelector));

547 **
ícodögs
 =

548 (**)
	`u¥v_mÆloc
(

549 
ödexes
[
UCNVSEL_INDEX_NAMES_COUNT
] * (*));

550 i‡(
£l
 =
NULL
 || 
ícodögs
 == NULL) {

551 
	`u¥v_‰ì
(
sw≠≥d
);

552 
	`u¥v_‰ì
(
£l
);

553 
	`u¥v_‰ì
(
ícodögs
);

554 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

555  
NULL
;

557 
	`u¥v_mem£t
(
£l
, 0, (
UC⁄vîãrSñe˘‹
));

558 
£l
->
pvCou¡
 = 
ödexes
[
UCNVSEL_INDEX_PV_COUNT
];

559 
£l
->
ícodögs
 =Éncodings;

560 
£l
->
ícodögsCou¡
 = 
ödexes
[
UCNVSEL_INDEX_NAMES_COUNT
];

561 
£l
->
ícodögSåLígth
 = 
ödexes
[
UCNVSEL_INDEX_NAMES_LENGTH
];

562 
£l
->
sw≠≥d
 = swapped;

564 
£l
->
åõ
 = 
	`uåõ2_›íFromSîülized
(
UTRIE2_16_VALUE_BITS
,

565 
p
, 
ödexes
[
UCNVSEL_INDEX_TRIE_SIZE
], 
NULL
,

566 
°©us
);

567 
p
 +
ödexes
[
UCNVSEL_INDEX_TRIE_SIZE
];

568 i‡(
	`U_FAILURE
(*
°©us
)) {

569 
	`u˙v£l_˛o£
(
£l
);

570  
NULL
;

573 
£l
->
pv
 = (
uöt32_t
 *)
p
;

574 
p
 +
£l
->
pvCou¡
 * 4;

576 * 
s
 = (*)
p
;

577 
öt32_t
 
i
 = 0; i < 
£l
->
ícodögsCou¡
; ++i) {

578 
£l
->
ícodögs
[
i
] = 
s
;

579 
s
 +
	`u¥v_°æí
(s) + 1;

581 
p
 +
£l
->
ícodögSåLígth
;

583  
£l
;

584 
	}
}

588 
	sEnumî©‹
 {

589 
öt16_t
* 
	mödex
;

590 
öt16_t
 
	mÀngth
;

591 
öt16_t
 
	mcur
;

592 c⁄° 
UC⁄vîãrSñe˘‹
* 
	m£l
;

595 
U_CDECL_BEGIN


597 
U_CALLCONV


598 
	$u˙v£l_˛o£_£À˘‹_ôî©‹
(
UEnumî©i⁄
 *
íumî©‹
) {

599 
	`u¥v_‰ì
(((
Enumî©‹
*)(
íumî©‹
->
c⁄ãxt
))->
ödex
);

600 
	`u¥v_‰ì
(
íumî©‹
->
c⁄ãxt
);

601 
	`u¥v_‰ì
(
íumî©‹
);

602 
	}
}

605 
öt32_t
 
U_CALLCONV


606 
	$u˙v£l_cou¡_ícodögs
(
UEnumî©i⁄
 *
íumî©‹
, 
UEº‹Code
 *
°©us
) {

608 i‡(
	`U_FAILURE
(*
°©us
)) {

611  ((
Enumî©‹
*)(
íumî©‹
->
c⁄ãxt
))->
Àngth
;

612 
	}
}

615 c⁄° * 
U_CALLCONV
 
	$u˙v£l_√xt_ícodög
(
UEnumî©i⁄
* 
íumî©‹
,

616 
öt32_t
* 
ªsu…Lígth
,

617 
UEº‹Code
* 
°©us
) {

619 i‡(
	`U_FAILURE
(*
°©us
)) {

620  
NULL
;

623 
öt16_t
 
cur
 = ((
Enumî©‹
*)(
íumî©‹
->
c⁄ãxt
))->cur;

624 c⁄° 
UC⁄vîãrSñe˘‹
* 
£l
;

625 c⁄° * 
ªsu…
;

626 i‡(
cur
 >((
Enumî©‹
*)(
íumî©‹
->
c⁄ãxt
))->
Àngth
) {

627  
NULL
;

629 
£l
 = ((
Enumî©‹
*)(
íumî©‹
->
c⁄ãxt
))->sel;

630 
ªsu…
 = 
£l
->
ícodögs
[((
Enumî©‹
*)(
íumî©‹
->
c⁄ãxt
))->
ödex
[
cur
] ];

631 ((
Enumî©‹
*)(
íumî©‹
->
c⁄ãxt
))->
cur
++;

632 i‡(
ªsu…Lígth
) {

633 *
ªsu…Lígth
 = (
öt32_t
)
	`u¥v_°æí
(
ªsu…
);

635  
ªsu…
;

636 
	}
}

638 
U_CALLCONV
 
	$u˙v£l_ª£t_ôî©‹
(
UEnumî©i⁄
* 
íumî©‹
,

639 
UEº‹Code
* 
°©us
) {

641 i‡(
	`U_FAILURE
(*
°©us
)) {

644 ((
Enumî©‹
*)(
íumî©‹
->
c⁄ãxt
))->
cur
 = 0;

645 
	}
}

647 
U_CDECL_END


650 c⁄° 
UEnumî©i⁄
 
	gdeÁu…Encodögs
 = {

651 
NULL
,

652 
NULL
,

653 
u˙v£l_˛o£_£À˘‹_ôî©‹
,

654 
u˙v£l_cou¡_ícodögs
,

655 
uíum_u√xtDeÁu…
,

656 
u˙v£l_√xt_ícodög
,

657 
u˙v£l_ª£t_ôî©‹


663 
UBoﬁ
 
	$öãr£˘Masks
(
uöt32_t
* 
de°
, c⁄° uöt32_t* 
sour˚1
, 
öt32_t
 
Àn
) {

664 
öt32_t
 
i
;

665 
uöt32_t
 
‹edDe°
 = 0;

666 
i
 = 0 ; i < 
Àn
 ; ++i) {

667 
‹edDe°
 |(
de°
[
i
] &
sour˚1
[i]);

669  
‹edDe°
 == 0;

670 
	}
}

674 
öt16_t
 
	$cou¡O√s
(
uöt32_t
* 
mask
, 
öt32_t
 
Àn
) {

675 
öt32_t
 
i
, 
tŸÆO√s
 = 0;

676 
i
 = 0 ; i < 
Àn
 ; ++i) {

677 
uöt32_t
 
ít
 = 
mask
[
i
];

678 ; 
ít
; 
tŸÆO√s
++)

680 
ít
 &=Ént - 1;

683  
tŸÆO√s
;

684 
	}
}

688 
UEnumî©i⁄
 *
	$£À˘F‹Mask
(c⁄° 
UC⁄vîãrSñe˘‹
* 
£l
,

689 
uöt32_t
 *
mask
, 
UEº‹Code
 *
°©us
) {

692 
Enumî©‹
* 
ªsu…
 = (Enumî©‹*)
	`u¥v_mÆloc
((Enumerator));

693 i‡(
ªsu…
 =
NULL
) {

694 
	`u¥v_‰ì
(
mask
);

695 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

696  
NULL
;

698 
ªsu…
->
ödex
 = 
NULL
;

699 
ªsu…
->
Àngth
 =Ñesu…->
cur
 = 0;

700 
ªsu…
->
£l
 = sel;

702 
UEnumî©i⁄
 *
í
 = (UEnumî©i⁄ *)
	`u¥v_mÆloc
((UEnumeration));

703 i‡(
í
 =
NULL
) {

705 
	`u¥v_‰ì
(
mask
);

706 
	`u¥v_‰ì
(
ªsu…
);

707 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

708  
NULL
;

710 
	`mem˝y
(
í
, &
deÁu…Encodögs
, (
UEnumî©i⁄
));

711 
í
->
c⁄ãxt
 = 
ªsu…
;

713 
öt32_t
 
cﬁumns
 = (
£l
->
ícodögsCou¡
+31)/32;

714 
öt16_t
 
numO√s
 = 
	`cou¡O√s
(
mask
, 
cﬁumns
);

716 i‡(
numO√s
 > 0) {

717 
ªsu…
->
ödex
 = (
öt16_t
*Ë
	`u¥v_mÆloc
(
numO√s
 * (int16_t));

719 
öt32_t
 
i
, 
j
;

720 
öt16_t
 
k
 = 0;

721 
j
 = 0 ; j < 
cﬁumns
; j++) {

722 
uöt32_t
 
v
 = 
mask
[
j
];

723 
i
 = 0 ; i < 32 && 
k
 < 
£l
->
ícodögsCou¡
; i++, k++) {

724 i‡((
v
 & 1) != 0) {

725 
ªsu…
->
ödex
[ªsu…->
Àngth
++] = 
k
;

727 
v
 >>= 1;

732 
	`u¥v_‰ì
(
mask
);

733  
í
;

734 
	}
}

737 
U_CAPI
 
UEnumî©i⁄
 * 
U_EXPORT2


738 
	$u˙v£l_£À˘F‹Såög
(c⁄° 
UC⁄vîãrSñe˘‹
* 
£l
,

739 c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
, 
UEº‹Code
 *
°©us
) {

741 i‡(
	`U_FAILURE
(*
°©us
)) {

742  
NULL
;

745 i‡(
£l
 =
NULL
 || (
s
 =NULL && 
Àngth
 != 0)) {

746 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

747  
NULL
;

750 
öt32_t
 
cﬁumns
 = (
£l
->
ícodögsCou¡
+31)/32;

751 
uöt32_t
* 
mask
 = (uöt32_t*Ë
	`u¥v_mÆloc
(
cﬁumns
 * 4);

752 i‡(
mask
 =
NULL
) {

753 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

754  
NULL
;

756 
	`u¥v_mem£t
(
mask
, ~0, 
cﬁumns
 *4);

758 c⁄° 
UCh¨
 *
limô
;

759 i‡(
Àngth
 >= 0) {

760 
limô
 = 
s
 + 
Àngth
;

762 
limô
 = 
NULL
;

765 
limô
 =
NULL
 ? *
s
 != 0 : s !=Üimit) {

766 
UCh¨32
 
c
;

767 
uöt16_t
 
pvIndex
;

768 
	`UTRIE2_U16_NEXT16
(
£l
->
åõ
, 
s
, 
limô
, 
c
, 
pvIndex
);

769 i‡(
	`öãr£˘Masks
(
mask
, 
£l
->
pv
+
pvIndex
, 
cﬁumns
)) {

773  
	`£À˘F‹Mask
(
£l
, 
mask
, 
°©us
);

774 
	}
}

777 
U_CAPI
 
UEnumî©i⁄
 * 
U_EXPORT2


778 
	$u˙v£l_£À˘F‹UTF8
(c⁄° 
UC⁄vîãrSñe˘‹
* 
£l
,

779 c⁄° *
s
, 
öt32_t
 
Àngth
, 
UEº‹Code
 *
°©us
) {

781 i‡(
	`U_FAILURE
(*
°©us
)) {

782  
NULL
;

785 i‡(
£l
 =
NULL
 || (
s
 =NULL && 
Àngth
 != 0)) {

786 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

787  
NULL
;

790 
öt32_t
 
cﬁumns
 = (
£l
->
ícodögsCou¡
+31)/32;

791 
uöt32_t
* 
mask
 = (uöt32_t*Ë
	`u¥v_mÆloc
(
cﬁumns
 * 4);

792 i‡(
mask
 =
NULL
) {

793 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

794  
NULL
;

796 
	`u¥v_mem£t
(
mask
, ~0, 
cﬁumns
 *4);

798 i‡(
Àngth
 < 0) {

799 
Àngth
 = (
öt32_t
)
	`u¥v_°æí
(
s
);

801 c⁄° *
limô
 = 
s
 + 
Àngth
;

803 
s
 !
limô
) {

804 
uöt16_t
 
pvIndex
;

805 
	`UTRIE2_U8_NEXT16
(
£l
->
åõ
, 
s
, 
limô
, 
pvIndex
);

806 i‡(
	`öãr£˘Masks
(
mask
, 
£l
->
pv
+
pvIndex
, 
cﬁumns
)) {

810  
	`£À˘F‹Mask
(
£l
, 
mask
, 
°©us
);

811 
	}
}

	@ucol_swp.cpp

19 
	~"unicode/ud©a.h
"

20 
	~"uåõ.h
"

21 
	~"ud©aswp.h
"

22 
	~"cmem‹y.h
"

23 
	~"ucﬁ_imp.h
"

24 
	~"ucﬁ_swp.h
"

32 
U_CAPI
 
öt32_t
 
U_EXPORT2


33 
	$uåõ_sw≠
(c⁄° 
UD©aSw≠≥r
 *
ds
,

34 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

35 
UEº‹Code
 *
pEº‹Code
) {

36 c⁄° 
UTrõHódî
 *
öTrõ
;

37 
UTrõHódî
 
åõ
;

38 
öt32_t
 
size
;

39 
UBoﬁ
 
d©aIs32
;

41 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

44 if(
ds
==
NULL
 || 
öD©a
==NULL || (
Àngth
>=0 && 
outD©a
==NULL)) {

45 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

50 if(
Àngth
>=0 && (
uöt32_t
Óígth<(
UTrõHódî
)) {

51 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

55 
öTrõ
=(c⁄° 
UTrõHódî
 *)
öD©a
;

56 
åõ
.
sig«tuª
=
ds
->
	`ªadUI¡32
(
öTrõ
->signature);

57 
åõ
.
›ti⁄s
=
ds
->
	`ªadUI¡32
(
öTrõ
->options);

58 
åõ
.
ödexLígth
=
	`ud©a_ªadI¡32
(
ds
, 
öTrõ
->indexLength);

59 
åõ
.
d©aLígth
=
	`ud©a_ªadI¡32
(
ds
, 
öTrõ
->dataLength);

61 if–
åõ
.
sig«tuª
!=0x54726965 ||

62 (
åõ
.
›ti⁄s
&
UTRIE_OPTIONS_SHIFT_MASK
)!=
UTRIE_SHIFT
 ||

63 ((
åõ
.
›ti⁄s
>>
UTRIE_OPTIONS_INDEX_SHIFT
)&
UTRIE_OPTIONS_SHIFT_MASK
)!=
UTRIE_INDEX_SHIFT
 ||

64 
åõ
.
ödexLígth
<
UTRIE_BMP_INDEX_LENGTH
 ||

65 (
åõ
.
ödexLígth
&(
UTRIE_SURROGATE_BLOCK_COUNT
-1))!=0 ||

66 
åõ
.
d©aLígth
<
UTRIE_DATA_BLOCK_LENGTH
 ||

67 (
åõ
.
d©aLígth
&(
UTRIE_DATA_GRANULARITY
-1))!=0 ||

68 ((
åõ
.
›ti⁄s
&
UTRIE_OPTIONS_LATIN1_IS_LINEAR
)!=0 &&Årõ.
d©aLígth
<(
UTRIE_DATA_BLOCK_LENGTH
+0x100))

70 *
pEº‹Code
=
U_INVALID_FORMAT_ERROR
;

74 
d©aIs32
=(
UBoﬁ
)((
åõ
.
›ti⁄s
&
UTRIE_OPTIONS_DATA_IS_32_BIT
)!=0);

75 
size
=(
UTrõHódî
)+
åõ
.
ödexLígth
*2+åõ.
d©aLígth
*(
d©aIs32
?4:2);

77 if(
Àngth
>=0) {

78 
UTrõHódî
 *
outTrõ
;

80 if(
Àngth
<
size
) {

81 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

85 
outTrõ
=(
UTrõHódî
 *)
outD©a
;

88 
ds
->
	`sw≠Aºay32
(ds, 
öTrõ
, (
UTrõHódî
), 
outTrõ
, 
pEº‹Code
);

91 if(
d©aIs32
) {

92 
ds
->
	`sw≠Aºay16
(ds, 
öTrõ
+1, 
åõ
.
ödexLígth
*2, 
outTrõ
+1, 
pEº‹Code
);

93 
ds
->
	`sw≠Aºay32
(ds, (c⁄° 
uöt16_t
 *)(
öTrõ
+1)+
åõ
.
ödexLígth
,Årõ.
d©aLígth
*4,

94 (
uöt16_t
 *)(
outTrõ
+1)+
åõ
.
ödexLígth
, 
pEº‹Code
);

96 
ds
->
	`sw≠Aºay16
(ds, 
öTrõ
+1, (
åõ
.
ödexLígth
+åõ.
d©aLígth
)*2, 
outTrõ
+1, 
pEº‹Code
);

100  
size
;

101 
	}
}

103 #i‡!
UCONFIG_NO_COLLATION


106 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


107 
	$ucﬁ_looksLikeCﬁœti⁄Bö¨y
(c⁄° 
UD©aSw≠≥r
 *
ds
,

108 c⁄° *
öD©a
, 
öt32_t
 
Àngth
) {

109 c⁄° 
uöt8_t
 *
öByãs
;

110 c⁄° 
UCATabÀHódî
 *
öHódî
;

111 
UCATabÀHódî
 
hódî
;

113 if(
ds
==
NULL
 || 
öD©a
==NULL || 
Àngth
<-1) {

114  
FALSE
;

117 
öByãs
=(c⁄° 
uöt8_t
 *)
öD©a
;

118 
öHódî
=(c⁄° 
UCATabÀHódî
 *)
öD©a
;

126 
	`u¥v_mem£t
(&
hódî
, 0, (header));

127 if(
Àngth
<0) {

128 
hódî
.
size
=
	`ud©a_ªadI¡32
(
ds
, 
öHódî
->size);

129 } if((
Àngth
<(42*4Ë||Üígth<(
hódî
.
size
=
	`ud©a_ªadI¡32
(
ds
, 
öHódî
->size)))) {

130  
FALSE
;

133 
hódî
.
magic
=
ds
->
	`ªadUI¡32
(
öHódî
->magic);

135 
hódî
.
magic
==
UCOL_HEADER_MAGIC
 &&

136 
öHódî
->
f‹m©Vîsi⁄
[0]==3

139  
FALSE
;

142 if(
öHódî
->
isBigEndün
!=
ds
->
öIsBigEndün
 || inHódî->
ch¨SëFamûy
!=ds->
öCh¨£t
) {

143  
FALSE
;

146  
TRUE
;

147 
	}
}

150 
U_CAPI
 
öt32_t
 
U_EXPORT2


151 
	$ucﬁ_sw≠Bö¨y
(c⁄° 
UD©aSw≠≥r
 *
ds
,

152 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

153 
UEº‹Code
 *
pEº‹Code
) {

154 c⁄° 
uöt8_t
 *
öByãs
;

155 
uöt8_t
 *
outByãs
;

157 c⁄° 
UCATabÀHódî
 *
öHódî
;

158 
UCATabÀHódî
 *
outHódî
;

159 
UCATabÀHódî
 
hódî
;

161 
uöt32_t
 
cou¡
;

164 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

167 if(
ds
==
NULL
 || 
öD©a
==NULL || 
Àngth
<-1 || (Àngth>0 && 
outD©a
==NULL)) {

168 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

172 
öByãs
=(c⁄° 
uöt8_t
 *)
öD©a
;

173 
outByãs
=(
uöt8_t
 *)
outD©a
;

175 
öHódî
=(c⁄° 
UCATabÀHódî
 *)
öD©a
;

176 
outHódî
=(
UCATabÀHódî
 *)
outD©a
;

184 
	`u¥v_mem£t
(&
hódî
, 0, (header));

185 if(
Àngth
<0) {

186 
hódî
.
size
=
	`ud©a_ªadI¡32
(
ds
, 
öHódî
->size);

187 } if((
Àngth
<(42*4Ë||Üígth<(
hódî
.
size
=
	`ud©a_ªadI¡32
(
ds
, 
öHódî
->size)))) {

188 
	`ud©a_¥ötEº‹
(
ds
, "ucol_swapBinary():Åoo few bytes (%dáfter header) for collation data\n",

189 
Àngth
);

190 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

194 
hódî
.
magic
=
ds
->
	`ªadUI¡32
(
öHódî
->magic);

196 
hódî
.
magic
==
UCOL_HEADER_MAGIC
 &&

197 
öHódî
->
f‹m©Vîsi⁄
[0]==3

200 
	`ud©a_¥ötEº‹
(
ds
, "ucol_swapBinary(): magic 0x%08x or format version %02x.%02x isÇotá collation binary\n",

201 
hódî
.
magic
,

202 
öHódî
->
f‹m©Vîsi⁄
[0], inHeader->formatVersion[1]);

203 *
pEº‹Code
=
U_UNSUPPORTED_ERROR
;

207 if(
öHódî
->
isBigEndün
!=
ds
->
öIsBigEndün
 || inHódî->
ch¨SëFamûy
!=ds->
öCh¨£t
) {

208 
	`ud©a_¥ötEº‹
(
ds
, "ucol_swapBinary():Éndianness %d or charset %d doesÇot matchÅhe swapper\n",

209 
öHódî
->
isBigEndün
, inHódî->
ch¨SëFamûy
);

210 *
pEº‹Code
=
U_INVALID_FORMAT_ERROR
;

214 if(
Àngth
>=0) {

216 if(
öByãs
!=
outByãs
) {

217 
	`u¥v_mem˝y
(
outByãs
, 
öByãs
, 
hódî
.
size
);

223 
hódî
.
›ti⁄s

ds
->
	`ªadUI¡32
(
öHódî
->options);

224 
hódî
.
UCAC⁄°s

ds
->
	`ªadUI¡32
(
öHódî
->UCAConsts);

225 
hódî
.
c⁄åa˘i⁄UCACombos

ds
->
	`ªadUI¡32
(
öHódî
->contractionUCACombos);

226 
hódî
.
m≠pögPosôi⁄

ds
->
	`ªadUI¡32
(
öHódî
->mappingPosition);

227 
hódî
.
ex∑nsi⁄

ds
->
	`ªadUI¡32
(
öHódî
->expansion);

228 
hódî
.
c⁄åa˘i⁄Index

ds
->
	`ªadUI¡32
(
öHódî
->contractionIndex);

229 
hódî
.
c⁄åa˘i⁄CEs

ds
->
	`ªadUI¡32
(
öHódî
->contractionCEs);

230 
hódî
.
c⁄åa˘i⁄Size

ds
->
	`ªadUI¡32
(
öHódî
->contractionSize);

231 
hódî
.
ídEx∑nsi⁄CE

ds
->
	`ªadUI¡32
(
öHódî
->endExpansionCE);

232 
hódî
.
ex∑nsi⁄CESize

ds
->
	`ªadUI¡32
(
öHódî
->expansionCESize);

233 
hódî
.
ídEx∑nsi⁄CECou¡

	`ud©a_ªadI¡32
(
ds
, 
öHódî
->endExpansionCECount);

234 
hódî
.
c⁄åa˘i⁄UCACombosSize
=
	`ud©a_ªadI¡32
(
ds
, 
öHódî
->contractionUCACombosSize);

235 
hódî
.
s¸ùtToLódByã

ds
->
	`ªadUI¡32
(
öHódî
->scriptToLeadByte);

236 
hódî
.
ÀadByãToS¸ùt

ds
->
	`ªadUI¡32
(
öHódî
->leadByteToScript);

239 
ds
->
	`sw≠Aºay32
(ds, 
öHódî
, (
öt32_t
)((c⁄° *)&öHódî->
jamoS≥cül
-(const *)inHeader),

240 
outHódî
, 
pEº‹Code
);

241 
ds
->
	`sw≠Aºay32
(ds, &(
öHódî
->
s¸ùtToLódByã
), (
hódî
.s¸ùtToLódByãË+ (hódî.
ÀadByãToS¸ùt
),

242 &(
outHódî
->
s¸ùtToLódByã
), 
pEº‹Code
);

244 
outHódî
->
isBigEndün
=
ds
->
outIsBigEndün
;

245 
outHódî
->
ch¨SëFamûy
=
ds
->
outCh¨£t
;

248 if(
hódî
.
›ti⁄s
!=0) {

249 
ds
->
	`sw≠Aºay32
(ds, 
öByãs
+
hódî
.
›ti⁄s
, hódî.
ex∑nsi⁄
-header.options,

250 
outByãs
+
hódî
.
›ti⁄s
, 
pEº‹Code
);

254 if(
hódî
.
m≠pögPosôi⁄
!=0 && hódî.
ex∑nsi⁄
!=0) {

255 if(
hódî
.
c⁄åa˘i⁄Index
!=0) {

257 
cou¡
=
hódî
.
c⁄åa˘i⁄Index
-hódî.
ex∑nsi⁄
;

260 
cou¡
=
hódî
.
m≠pögPosôi⁄
-hódî.
ex∑nsi⁄
;

262 
ds
->
	`sw≠Aºay32
(ds, 
öByãs
+
hódî
.
ex∑nsi⁄
, (
öt32_t
)
cou¡
,

263 
outByãs
+
hódî
.
ex∑nsi⁄
, 
pEº‹Code
);

267 if(
hódî
.
c⁄åa˘i⁄Size
!=0) {

269 
ds
->
	`sw≠Aºay16
(ds, 
öByãs
+
hódî
.
c⁄åa˘i⁄Index
, hódî.
c⁄åa˘i⁄Size
*2,

270 
outByãs
+
hódî
.
c⁄åa˘i⁄Index
, 
pEº‹Code
);

273 
ds
->
	`sw≠Aºay32
(ds, 
öByãs
+
hódî
.
c⁄åa˘i⁄CEs
, hódî.
c⁄åa˘i⁄Size
*4,

274 
outByãs
+
hódî
.
c⁄åa˘i⁄CEs
, 
pEº‹Code
);

278 if(
hódî
.
m≠pögPosôi⁄
!=0) {

279 
cou¡
=
hódî
.
ídEx∑nsi⁄CE
-hódî.
m≠pögPosôi⁄
;

280 
	`uåõ_sw≠
(
ds
, 
öByãs
+
hódî
.
m≠pögPosôi⁄
, (
öt32_t
)
cou¡
,

281 
outByãs
+
hódî
.
m≠pögPosôi⁄
, 
pEº‹Code
);

285 if(
hódî
.
ídEx∑nsi⁄CECou¡
!=0) {

286 
ds
->
	`sw≠Aºay32
(ds, 
öByãs
+
hódî
.
ídEx∑nsi⁄CE
, hódî.
ídEx∑nsi⁄CECou¡
*4,

287 
outByãs
+
hódî
.
ídEx∑nsi⁄CE
, 
pEº‹Code
);

293 if(
hódî
.
UCAC⁄°s
!=0) {

298 
cou¡
=
hódî
.
c⁄åa˘i⁄UCACombos
-hódî.
UCAC⁄°s
;

299 
ds
->
	`sw≠Aºay32
(ds, 
öByãs
+
hódî
.
UCAC⁄°s
, hódî.
c⁄åa˘i⁄UCACombos
-header.UCAConsts,

300 
outByãs
+
hódî
.
UCAC⁄°s
, 
pEº‹Code
);

304 if(
hódî
.
c⁄åa˘i⁄UCACombosSize
!=0) {

305 
cou¡
=
hódî
.
c⁄åa˘i⁄UCACombosSize
*
öHódî
->
c⁄åa˘i⁄UCACombosWidth
*
U_SIZEOF_UCHAR
;

306 
ds
->
	`sw≠Aºay16
(ds, 
öByãs
+
hódî
.
c⁄åa˘i⁄UCACombos
, (
öt32_t
)
cou¡
,

307 
outByãs
+
hódî
.
c⁄åa˘i⁄UCACombos
, 
pEº‹Code
);

311 if(
hódî
.
s¸ùtToLódByã
!=0) {

312 
ödexCou¡
 = 
ds
->
	`ªadUI¡16
(*((
uöt16_t
*)(
öByãs
+
hódî
.
s¸ùtToLódByã
)));

313 
d©aCou¡
 = 
ds
->
	`ªadUI¡16
(*((
uöt16_t
*)(
öByãs
+
hódî
.
s¸ùtToLódByã
 + 2)));

314 
ds
->
	`sw≠Aºay16
(ds, 
öByãs
+
hódî
.
s¸ùtToLódByã
,

315 4 + (4 * 
ödexCou¡
Ë+ (2 * 
d©aCou¡
),

316 
outByãs
+
hódî
.
s¸ùtToLódByã
, 
pEº‹Code
);

320 if(
hódî
.
ÀadByãToS¸ùt
!=0) {

321 
ödexCou¡
 = 
ds
->
	`ªadUI¡16
(*((
uöt16_t
*)(
öByãs
+
hódî
.
ÀadByãToS¸ùt
)));

322 
d©aCou¡
 = 
ds
->
	`ªadUI¡16
(*((
uöt16_t
*)(
öByãs
+
hódî
.
ÀadByãToS¸ùt
 + 2)));

323 
ds
->
	`sw≠Aºay16
(ds, 
öByãs
+
hódî
.
ÀadByãToS¸ùt
,

324 4 + (2 * 
ödexCou¡
Ë+ (2 * 
d©aCou¡
),

325 
outByãs
+
hódî
.
ÀadByãToS¸ùt
, 
pEº‹Code
);

329  
hódî
.
size
;

330 
	}
}

333 
U_CAPI
 
öt32_t
 
U_EXPORT2


334 
	$ucﬁ_sw≠
(c⁄° 
UD©aSw≠≥r
 *
ds
,

335 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

336 
UEº‹Code
 *
pEº‹Code
) {

338 c⁄° 
UD©aInfo
 *
pInfo
;

339 
öt32_t
 
hódîSize
, 
cﬁœti⁄Size
;

342 
hódîSize
=
	`ud©a_sw≠D©aHódî
(
ds
, 
öD©a
, 
Àngth
, 
outD©a
, 
pEº‹Code
);

343 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

348 
pInfo
=(c⁄° 
UD©aInfo
 *)((c⁄° *)
öD©a
+4);

350 
pInfo
->
d©aF‹m©
[0]==0x55 &&

351 
pInfo
->
d©aF‹m©
[1]==0x43 &&

352 
pInfo
->
d©aF‹m©
[2]==0x6f &&

353 
pInfo
->
d©aF‹m©
[3]==0x6c &&

354 
pInfo
->
f‹m©Vîsi⁄
[0]==3

357 
	`ud©a_¥ötEº‹
(
ds
, "ucol_swap(): data format %02x.%02x.%02x.%02x (format version %02x.%02x) isÇotá collation file\n",

358 
pInfo
->
d©aF‹m©
[0],ÖInfo->dataFormat[1],

359 
pInfo
->
d©aF‹m©
[2],ÖInfo->dataFormat[3],

360 
pInfo
->
f‹m©Vîsi⁄
[0],ÖInfo->formatVersion[1]);

361 *
pEº‹Code
=
U_UNSUPPORTED_ERROR
;

365 
cﬁœti⁄Size
=
	`ucﬁ_sw≠Bö¨y
(
ds
,

366 (c⁄° *)
öD©a
+
hódîSize
,

367 
Àngth
>=0 ?Üígth-
hódîSize
 : -1,

368 (*)
outD©a
+
hódîSize
,

369 
pEº‹Code
);

370 if(
	`U_SUCCESS
(*
pEº‹Code
)) {

371  
hódîSize
+
cﬁœti⁄Size
;

375 
	}
}

378 
U_CAPI
 
öt32_t
 
U_EXPORT2


379 
	$ucﬁ_sw≠Invî£UCA
(c⁄° 
UD©aSw≠≥r
 *
ds
,

380 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

381 
UEº‹Code
 *
pEº‹Code
) {

382 c⁄° 
UD©aInfo
 *
pInfo
;

383 
öt32_t
 
hódîSize
;

385 c⁄° 
uöt8_t
 *
öByãs
;

386 
uöt8_t
 *
outByãs
;

388 c⁄° 
Invî£UCATabÀHódî
 *
öHódî
;

389 
Invî£UCATabÀHódî
 *
outHódî
;

390 
Invî£UCATabÀHódî
 
hódî
={ 0,0,0,0,0,{0,0,0,0},{0,0,0,0,0,0,0,0} };

393 
hódîSize
=
	`ud©a_sw≠D©aHódî
(
ds
, 
öD©a
, 
Àngth
, 
outD©a
, 
pEº‹Code
);

394 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

399 
pInfo
=(c⁄° 
UD©aInfo
 *)((c⁄° *)
öD©a
+4);

401 
pInfo
->
d©aF‹m©
[0]==0x49 &&

402 
pInfo
->
d©aF‹m©
[1]==0x6e &&

403 
pInfo
->
d©aF‹m©
[2]==0x76 &&

404 
pInfo
->
d©aF‹m©
[3]==0x43 &&

405 
pInfo
->
f‹m©Vîsi⁄
[0]==2 &&

406 
pInfo
->
f‹m©Vîsi⁄
[1]>=1

408 
	`ud©a_¥ötEº‹
(
ds
, "ucol_swapInverseUCA(): data format %02x.%02x.%02x.%02x (format version %02x.%02x) isÇotán inverse UCA collation file\n",

409 
pInfo
->
d©aF‹m©
[0],ÖInfo->dataFormat[1],

410 
pInfo
->
d©aF‹m©
[2],ÖInfo->dataFormat[3],

411 
pInfo
->
f‹m©Vîsi⁄
[0],ÖInfo->formatVersion[1]);

412 *
pEº‹Code
=
U_UNSUPPORTED_ERROR
;

416 
öByãs
=(c⁄° 
uöt8_t
 *)
öD©a
+
hódîSize
;

417 
outByãs
=(
uöt8_t
 *)
outD©a
+
hódîSize
;

419 
öHódî
=(c⁄° 
Invî£UCATabÀHódî
 *)
öByãs
;

420 
outHódî
=(
Invî£UCATabÀHódî
 *)
outByãs
;

428 if(
Àngth
<0) {

429 
hódî
.
byãSize
=
	`ud©a_ªadI¡32
(
ds
, 
öHódî
->byteSize);

431 ((
Àngth
-
hódîSize
)<(8*4) ||

432 (
uöt32_t
)(
Àngth
-
hódîSize
)<(
hódî
.
byãSize
=
	`ud©a_ªadI¡32
(
ds
, 
öHódî
->byteSize)))

434 
	`ud©a_¥ötEº‹
(
ds
, "ucol_swapInverseUCA():Åoo few bytes (%dáfter header) for inverse UCA collation data\n",

435 
Àngth
);

436 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

440 if(
Àngth
>=0) {

442 if(
öByãs
!=
outByãs
) {

443 
	`u¥v_mem˝y
(
outByãs
, 
öByãs
, 
hódî
.
byãSize
);

449 
hódî
.
èbÀSize

ds
->
	`ªadUI¡32
(
öHódî
->tableSize);

450 
hódî
.
c⁄tsSize

ds
->
	`ªadUI¡32
(
öHódî
->contsSize);

451 
hódî
.
èbÀ

ds
->
	`ªadUI¡32
(
öHódî
->table);

452 
hódî
.
c⁄ts

ds
->
	`ªadUI¡32
(
öHódî
->conts);

455 
ds
->
	`sw≠Aºay32
(ds, 
öHódî
, 5*4, 
outHódî
, 
pEº‹Code
);

458 
ds
->
	`sw≠Aºay32
(ds, 
öByãs
+
hódî
.
èbÀ
, hódî.
èbÀSize
*3*4,

459 
outByãs
+
hódî
.
èbÀ
, 
pEº‹Code
);

462 
ds
->
	`sw≠Aºay16
(ds, 
öByãs
+
hódî
.
c⁄ts
, hódî.
c⁄tsSize
*
U_SIZEOF_UCHAR
,

463 
outByãs
+
hódî
.
c⁄ts
, 
pEº‹Code
);

466  
hódîSize
+
hódî
.
byãSize
;

467 
	}
}

	@ucol_swp.h

19 #i‚de‡
__UCOL_SWP_H__


20 
	#__UCOL_SWP_H__


	)

22 
	~"unicode/uty≥s.h
"

24 #i‡!
UCONFIG_NO_COLLATION


26 
	~"ud©aswp.h
"

32 
U_INTERNAL
 
UBoﬁ
 
U_EXPORT2


33 
ucﬁ_looksLikeCﬁœti⁄Bö¨y
(c⁄° 
UD©aSw≠≥r
 *
ds
,

34 c⁄° *
öD©a
, 
öt32_t
 
Àngth
);

41 
U_CAPI
 
öt32_t
 
U_EXPORT2


42 
ucﬁ_sw≠Bö¨y
(c⁄° 
UD©aSw≠≥r
 *
ds
,

43 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

44 
UEº‹Code
 *
pEº‹Code
);

50 
U_CAPI
 
öt32_t
 
U_EXPORT2


51 
ucﬁ_sw≠
(c⁄° 
UD©aSw≠≥r
 *
ds
,

52 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

53 
UEº‹Code
 *
pEº‹Code
);

59 
U_CAPI
 
öt32_t
 
U_EXPORT2


60 
ucﬁ_sw≠Invî£UCA
(c⁄° 
UD©aSw≠≥r
 *
ds
,

61 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

62 
UEº‹Code
 *
pEº‹Code
);

	@udata.cpp

17 
	~"unicode/uty≥s.h
"

19 #ifde‡
U_LINUX


26 
	~"unicode/putû.h
"

27 
	~"unicode/ud©a.h
"

28 
	~"unicode/uvîsi⁄.h
"

29 
	~"ch¨°r.h
"

30 
	~"cmem‹y.h
"

31 
	~"c°rög.h
"

32 
	~"putûimp.h
"

33 
	~"u˛n_cmn.h
"

34 
	~"ucmnd©a.h
"

35 
	~"ud©amem.h
"

36 
	~"uhash.h
"

37 
	~"um≠fûe.h
"

38 
	~"umuãx.h
"

69 #i‡
deföed
(
UDATA_DEBUG
)

70 
	~<°dio.h
>

73 
	#LENGTHOF
(
¨øy
Ë(
öt32_t
)(◊ºay)/(◊ºay)[0]))

	)

75 
U_NAMESPACE_USE


99 
UD©aMem‹y
 *
	ggComm⁄ICUD©aAºay
[10] = { 
NULL
 };

101 
UBoﬁ
 
	ggHaveTrõdToLﬂdComm⁄D©a
 = 
FALSE
;

103 
UHashèbÀ
 *
	ggComm⁄D©aCache
 = 
NULL
;

105 
UD©aFûeAc˚ss
 
	ggD©aFûeAc˚ss
 = 
UDATA_DEFAULT_ACCESS
;

107 
UBoﬁ
 
U_CALLCONV


108 
	$ud©a_˛ónup
()

110 
öt32_t
 
i
;

112 i‡(
gComm⁄D©aCache
) {

113 
	`uhash_˛o£
(
gComm⁄D©aCache
);

114 
gComm⁄D©aCache
 = 
NULL
;

117 
i
 = 0; i < 
	`LENGTHOF
(
gComm⁄ICUD©aAºay
Ë&& gComm⁄ICUD©aAºay[i] !
NULL
; ++i) {

118 
	`ud©a_˛o£
(
gComm⁄ICUD©aAºay
[
i
]);

119 
gComm⁄ICUD©aAºay
[
i
] = 
NULL
;

121 
gHaveTrõdToLﬂdComm⁄D©a
 = 
FALSE
;

123  
TRUE
;

124 
	}
}

132 
UBoﬁ


133 
	$£tComm⁄ICUD©a
(
UD©aMem‹y
 *
pD©a
,

134 
UBoﬁ
 
w¨n
,

136 
UEº‹Code
 *
pEº
)

138 
UD©aMem‹y
 *
√wComm⁄D©a
 = 
	`UD©aMem‹y_¸óãNewIn°™˚
(
pEº
);

139 
öt32_t
 
i
;

140 
UBoﬁ
 
didUpd©e
 = 
FALSE
;

141 i‡(
	`U_FAILURE
(*
pEº
)) {

142  
FALSE
;

149 
	`UD©amem‹y_assign
(
√wComm⁄D©a
, 
pD©a
);

150 
	`umtx_lock
(
NULL
);

151 
i
 = 0; i < 
	`LENGTHOF
(
gComm⁄ICUD©aAºay
); ++i) {

152 i‡(
gComm⁄ICUD©aAºay
[
i
] =
NULL
) {

153 
gComm⁄ICUD©aAºay
[
i
] = 
√wComm⁄D©a
;

154 
	`u˛n_comm⁄_ªgi°îCÀ™up
(
UCLN_COMMON_UDATA
, 
ud©a_˛ónup
);

155 
didUpd©e
 = 
TRUE
;

157 } i‡(
gComm⁄ICUD©aAºay
[
i
]->
pHódî
 =
pD©a
->pHeader) {

162 
	`umtx_u∆ock
(
NULL
);

164 i‡(
i
 =
	`LENGTHOF
(
gComm⁄ICUD©aAºay
Ë&& 
w¨n
) {

165 *
pEº
 = 
U_USING_DEFAULT_WARNING
;

167 i‡(!
didUpd©e
) {

168 
	`u¥v_‰ì
(
√wComm⁄D©a
);

170  
didUpd©e
;

171 
	}
}

173 
UBoﬁ


174 
	$£tComm⁄ICUD©aPoöãr
(c⁄° *
pD©a
, 
UBoﬁ
 , 
UEº‹Code
 *
pEº‹Code
) {

175 
UD©aMem‹y
 
tD©a
;

176 
	`UD©aMem‹y_öô
(&
tD©a
);

177 
tD©a
.
pHódî
 = (c⁄° 
D©aHódî
 *)
pD©a
;

178 
	`ud©a_checkComm⁄D©a
(&
tD©a
, 
pEº‹Code
);

179  
	`£tComm⁄ICUD©a
(&
tD©a
, 
FALSE
, 
pEº‹Code
);

180 
	}
}

183 
	$födBa£«me
(c⁄° *
∑th
) {

184 c⁄° *
ba£«me
=
	`u¥v_°ºchr
(
∑th
, 
U_FILE_SEP_CHAR
);

185 if(
ba£«me
==
NULL
) {

186  
∑th
;

188  
ba£«me
+1;

190 
	}
}

192 #ifde‡
UDATA_DEBUG


194 
	$∑ckageNameFromP©h
(c⁄° *
∑th
)

196 if((
∑th
 =
NULL
) || (*path == 0)) {

197  
U_ICUDATA_NAME
;

200 
∑th
 = 
	`födBa£«me
(path);

202 if((
∑th
 =
NULL
) || (*path == 0)) {

203  
U_ICUDATA_NAME
;

206  
∑th
;

207 
	}
}

222 
	sD©aCacheEÀmít
 {

223 *
	m«me
;

224 
UD©aMem‹y
 *
	môem
;

225 } 
	tD©aCacheEÀmít
;

234 
U_CALLCONV
 
	$D©aCacheEÀmít_dñëî
(*
pDCEl
) {

235 
D©aCacheEÀmít
 *
p
 = (D©aCacheEÀmíà*)
pDCEl
;

236 
	`ud©a_˛o£
(
p
->
ôem
);

237 
	`u¥v_‰ì
(
p
->
«me
);

238 
	`u¥v_‰ì
(
pDCEl
);

239 
	}
}

245 
UHashèbÀ
 *
	$ud©a_gëHashTabÀ
() {

246 
UEº‹Code
 
îr
 = 
U_ZERO_ERROR
;

247 
UBoﬁ
 
ˇcheIsInôülized
;

248 
UHashèbÀ
 *
tHT
 = 
NULL
;

250 
	`UMTX_CHECK
(
NULL
, (
gComm⁄D©aCache
 !NULL), 
ˇcheIsInôülized
);

252 i‡(
ˇcheIsInôülized
) {

253  
gComm⁄D©aCache
;

256 
tHT
 = 
	`uhash_›í
(
uhash_hashCh¨s
, 
uhash_com∑ªCh¨s
, 
NULL
, &
îr
);

258 i‡(
tHT
 =
NULL
) {

259  
NULL
;

261 
	`uhash_£tVÆueDñëî
(
tHT
, 
D©aCacheEÀmít_dñëî
);

263 
	`umtx_lock
(
NULL
);

264 i‡(
gComm⁄D©aCache
 =
NULL
) {

265 
gComm⁄D©aCache
 = 
tHT
;

266 
tHT
 = 
NULL
;

267 
	`u˛n_comm⁄_ªgi°îCÀ™up
(
UCLN_COMMON_UDATA
, 
ud©a_˛ónup
);

269 
	`umtx_u∆ock
(
NULL
);

270 i‡(
tHT
 !
NULL
) {

271 
	`uhash_˛o£
(
tHT
);

274 i‡(
	`U_FAILURE
(
îr
)) {

275  
NULL
;

277  
gComm⁄D©aCache
;

278 
	}
}

282 
UD©aMem‹y
 *
	$ud©a_födCachedD©a
(c⁄° *
∑th
)

284 
UHashèbÀ
 *
hèbÀ
;

285 
UD©aMem‹y
 *
ªtVÆ
 = 
NULL
;

286 
D©aCacheEÀmít
 *
ñ
;

287 c⁄° *
ba£Name
;

289 
ba£Name
 = 
	`födBa£«me
(
∑th
);

290 
hèbÀ
 = 
	`ud©a_gëHashTabÀ
();

291 
	`umtx_lock
(
NULL
);

292 
ñ
 = (
D©aCacheEÀmít
 *)
	`uhash_gë
(
hèbÀ
, 
ba£Name
);

293 
	`umtx_u∆ock
(
NULL
);

294 i‡(
ñ
 !
NULL
) {

295 
ªtVÆ
 = 
ñ
->
ôem
;

297 #ifde‡
UDATA_DEBUG


298 
	`Ârötf
(
°dîr
, "Cache: [%s] -> %p\n", 
ba£Name
, 
ªtVÆ
);

300  
ªtVÆ
;

301 
	}
}

304 
UD©aMem‹y
 *
	$ud©a_ˇcheD©aIãm
(c⁄° *
∑th
, 
UD©aMem‹y
 *
ôem
, 
UEº‹Code
 *
pEº
) {

305 
D©aCacheEÀmít
 *
√wEÀmít
;

306 c⁄° *
ba£Name
;

307 
öt32_t
 
«meLí
;

308 
UHashèbÀ
 *
hèbÀ
;

309 
D©aCacheEÀmít
 *
ﬁdVÆue
 = 
NULL
;

310 
UEº‹Code
 
subEº
 = 
U_ZERO_ERROR
;

312 i‡(
	`U_FAILURE
(*
pEº
)) {

313  
NULL
;

319 
√wEÀmít
 = (
D©aCacheEÀmít
 *)
	`u¥v_mÆloc
((DataCacheElement));

320 i‡(
√wEÀmít
 =
NULL
) {

321 *
pEº
 = 
U_MEMORY_ALLOCATION_ERROR
;

322  
NULL
;

324 
√wEÀmít
->
ôem
 = 
	`UD©aMem‹y_¸óãNewIn°™˚
(
pEº
);

325 i‡(
	`U_FAILURE
(*
pEº
)) {

326 
	`u¥v_‰ì
(
√wEÀmít
);

327  
NULL
;

329 
	`UD©amem‹y_assign
(
√wEÀmít
->
ôem
, item);

331 
ba£Name
 = 
	`födBa£«me
(
∑th
);

332 
«meLí
 = (
öt32_t
)
	`u¥v_°æí
(
ba£Name
);

333 
√wEÀmít
->
«me
 = (*)
	`u¥v_mÆloc
(
«meLí
+1);

334 i‡(
√wEÀmít
->
«me
 =
NULL
) {

335 *
pEº
 = 
U_MEMORY_ALLOCATION_ERROR
;

336 
	`u¥v_‰ì
(
√wEÀmít
->
ôem
);

337 
	`u¥v_‰ì
(
√wEÀmít
);

338  
NULL
;

340 
	`u¥v_°r˝y
(
√wEÀmít
->
«me
, 
ba£Name
);

344 
hèbÀ
 = 
	`ud©a_gëHashTabÀ
();

345 
	`umtx_lock
(
NULL
);

346 
ﬁdVÆue
 = (
D©aCacheEÀmít
 *)
	`uhash_gë
(
hèbÀ
, 
∑th
);

347 i‡(
ﬁdVÆue
 !
NULL
) {

348 
subEº
 = 
U_USING_DEFAULT_WARNING
;

351 
	`uhash_put
(

352 
hèbÀ
,

353 
√wEÀmít
->
«me
,

354 
√wEÀmít
,

355 &
subEº
);

357 
	`umtx_u∆ock
(
NULL
);

359 #ifde‡
UDATA_DEBUG


360 
	`Ârötf
(
°dîr
, "Cache: [%s] <<< %∞: %s. vFunc=%p\n", 
√wEÀmít
->
«me
,

361 
√wEÀmít
->
ôem
, 
	`u_îr‹Name
(
subEº
),ÇewEÀmít->ôem->
vFuncs
);

364 i‡(
subEº
 =
U_USING_DEFAULT_WARNING
 || 
	`U_FAILURE
(subErr)) {

365 *
pEº
 = 
subEº
;

366 
	`u¥v_‰ì
(
√wEÀmít
->
«me
);

367 
	`u¥v_‰ì
(
√wEÀmít
->
ôem
);

368 
	`u¥v_‰ì
(
√wEÀmít
);

369  
ﬁdVÆue
 ? oldVÆue->
ôem
 : 
NULL
;

372  
√wEÀmít
->
ôem
;

373 
	}
}

382 
	#U_DATA_PATHITER_BUFSIZ
 128

	)

385 
U_NAMESPACE_BEGIN


387 ˛as†
	cUD©aP©hIãøt‹


389 
	mpublic
:

390 
UD©aP©hIãøt‹
(c⁄° *
∑th
, c⁄° *
pkg
,

391 c⁄° *
ôem
, c⁄° *
suffix
, 
UBoﬁ
 
doCheckLa°Four
,

392 
UEº‹Code
 *
pEº‹Code
);

393 c⁄° *
√xt
(
UEº‹Code
 *
pEº‹Code
);

395 
	m¥iv©e
:

396 c⁄° *
∑th
;

397 c⁄° *
	m√xtP©h
;

398 c⁄° *
	mba£«me
;

399 c⁄° *
	msuffix
;

401 
uöt32_t
 
	mba£«meLí
;

403 
Ch¨Såög
 
	môemP©h
;

404 
Ch¨Såög
 
	m∑thBuf„r
;

405 
Ch¨Såög
 
	m∑ckageStub
;

407 
UBoﬁ
 
	mcheckLa°Four
;

421 
	gUD©aP©hIãøt‹
::
	$UD©aP©hIãøt‹
(c⁄° *
öP©h
, c⁄° *
pkg
,

422 c⁄° *
ôem
, c⁄° *
öSuffix
, 
UBoﬁ
 
doCheckLa°Four
,

423 
UEº‹Code
 *
pEº‹Code
)

425 #ifde‡
UDATA_DEBUG


426 
	`Ârötf
(
°dîr
, "SUFFIX1=%†PATH=%s\n", 
öSuffix
, 
öP©h
);

429 if(
öP©h
 =
NULL
) {

430 
∑th
 = 
	`u_gëD©aDúe˘‹y
();

432 
∑th
 = 
öP©h
;

436 if(
pkg
 !
NULL
) {

437 
∑ckageStub
.
	`≠≥nd
(
U_FILE_SEP_CHAR
, *
pEº‹Code
).≠≥nd(
pkg
, *pErrorCode);

438 #ifde‡
UDATA_DEBUG


439 
	`Ârötf
(
°dîr
, "STUB=%†[%d]\n", 
∑ckageStub
.
	`d©a
(),ÖackageStub.
	`Àngth
());

444 
ba£«me
 = 
	`födBa£«me
(
ôem
);

445 
ba£«meLí
 = (
öt32_t
)
	`u¥v_°æí
(
ba£«me
);

448 if(
ba£«me
 =
ôem
) {

449 
√xtP©h
 = 
∑th
;

451 
ôemP©h
.
	`≠≥nd
(
ôem
, (
öt32_t
)(
ba£«me
-ôem), *
pEº‹Code
);

452 
√xtP©h
 = 
ôemP©h
.
	`d©a
();

454 #ifde‡
UDATA_DEBUG


455 
	`Ârötf
(
°dîr
, "SUFFIX=%†[%p]\n", 
öSuffix
, inSuffix);

459 if(
öSuffix
 !
NULL
) {

460 
suffix
 = 
öSuffix
;

462 
suffix
 = "";

465 
checkLa°Four
 = 
doCheckLa°Four
;

469 #ifde‡
UDATA_DEBUG


470 
	`Ârötf
(
°dîr
, "%p: init %s -> [path=%s], [base=%s], [suff=%s], [itempath=%s], [nextpath=%s], [checklast4=%s]\n",

471 
ôî
,

472 
ôem
,

473 
∑th
,

474 
ba£«me
,

475 
suffix
,

476 
ôemP©h
.
	`d©a
(),

477 
√xtP©h
,

478 
checkLa°Four
?"TRUE":"false");

480 
	}
}

489 c⁄° *
	gUD©aP©hIãøt‹
::
	$√xt
(
UEº‹Code
 *
pEº‹Code
)

491 if(
	`U_FAILURE
(*
pEº‹Code
)) {

492  
NULL
;

495 c⁄° *
cuºítP©h
 = 
NULL
;

496 
öt32_t
 
∑thLí
 = 0;

497 c⁄° *
∑thBa£«me
;

501 if–
√xtP©h
 =
NULL
 ) {

504 
cuºítP©h
 = 
√xtP©h
;

506 if(
√xtP©h
 =
ôemP©h
.
	`d©a
()) {

507 
√xtP©h
 = 
∑th
;

508 
∑thLí
 = (
öt32_t
)
	`u¥v_°æí
(
cuºítP©h
);

511 
√xtP©h
 = 
	`u¥v_°rchr
(
cuºítP©h
, 
U_PATH_SEP_CHAR
);

512 if(
√xtP©h
 =
NULL
) {

514 
∑thLí
 = (
öt32_t
)
	`u¥v_°æí
(
cuºítP©h
);

517 
∑thLí
 = (
öt32_t
)(
√xtP©h
 - 
cuºítP©h
);

519 
√xtP©h
 ++;

523 if(
∑thLí
 == 0) {

527 #ifde‡
UDATA_DEBUG


528 
	`Ârötf
(
°dîr
, "ª° o‡∑th (IDDË%s\n", 
cuºítP©h
);

529 
	`Ârötf
(
°dîr
, " ");

531 
uöt32_t
 
qqq
;

532 
qqq
=0;qqq<
∑thLí
;qqq++)

534 
	`Ârötf
(
°dîr
, " ");

537 
	`Ârötf
(
°dîr
, "^\n");

540 
∑thBuf„r
.
	`˛ór
().
	`≠≥nd
(
cuºítP©h
, 
∑thLí
, *
pEº‹Code
);

543 
∑thBa£«me
 = 
	`födBa£«me
(
∑thBuf„r
.
	`d©a
());

545 if(
checkLa°Four
 =
TRUE
 &&

546 (
∑thLí
>=4) &&

547 
	`u¥v_°∫cmp
(
∑thBuf„r
.
	`d©a
(Ë+(
∑thLí
-4), 
suffix
, 4)==0 &&

548 
	`u¥v_°∫cmp
(
	`födBa£«me
(
∑thBuf„r
.
	`d©a
()), 
ba£«me
, 
ba£«meLí
)==0 &&

549 
	`u¥v_°æí
(
∑thBa£«me
)==(
ba£«meLí
+4)) {

551 #ifde‡
UDATA_DEBUG


552 
	`Ârötf
(
°dîr
, "Havê%†fûê⁄Åhê∑th: %s\n", 
suffix
, 
∑thBuf„r
.
	`d©a
());

558 if(
∑thBuf„r
[
∑thLí
-1] !
U_FILE_SEP_CHAR
) {

559 if((
∑thLí
>=4) &&

560 
	`u¥v_°∫cmp
(
∑thBuf„r
.
	`d©a
()+(
∑thLí
-4), ".dat", 4) == 0)

562 #ifde‡
UDATA_DEBUG


563 
	`Ârötf
(
°dîr
, "skùpögÇ⁄-dúe˘‹y .d© fûê%s\n", 
∑thBuf„r
.
	`d©a
());

569 if(!
∑ckageStub
.
	`isEm±y
() &&

570 (
∑thLí
 > 
∑ckageStub
.
	`Àngth
()) &&

571 !
	`u¥v_°rcmp
(
∑thBuf„r
.
	`d©a
(Ë+ 
∑thLí
 - 
∑ckageStub
.
	`Àngth
(),ÖackageStub.data())) {

572 #ifde‡
UDATA_DEBUG


573 
	`Ârötf
(
°dîr
, "Found stub %†(wû»addÖackagê%†o‡À¿%d)\n", 
∑ckageStub
.
	`d©a
(), 
ba£«me
, 
ba£«meLí
);

575 
∑thBuf„r
.
	`åunˇã
(
∑thLí
 - 
∑ckageStub
.
	`Àngth
());

577 
∑thBuf„r
.
	`≠≥nd
(
U_FILE_SEP_CHAR
, *
pEº‹Code
);

581 
∑thBuf„r
.
	`≠≥nd
(
∑ckageStub
.
	`d©a
()+1,ÖackageStub.
	`Àngth
()-1, *
pEº‹Code
);

583 if(*
suffix
)

585 
∑thBuf„r
.
	`≠≥nd
(
suffix
, *
pEº‹Code
);

589 #ifde‡
UDATA_DEBUG


590 
	`Ârötf
(
°dîr
, " --> %s\n", 
∑thBuf„r
.
	`d©a
());

593  
∑thBuf„r
.
	`d©a
();

595 } 
∑th
);

598  
NULL
;

599 
	}
}

601 
U_NAMESPACE_END


613 "C" c⁄° 
D©aHódî
 
U_DATA_API
 
U_ICUDATA_ENTRY_POINT
;

635 
UD©aMem‹y
 *

636 
	$›íComm⁄D©a
(c⁄° *
∑th
,

637 
öt32_t
 
comm⁄D©aIndex
,

638 
UEº‹Code
 *
pEº‹Code
)

640 
UD©aMem‹y
 
tD©a
;

641 c⁄° *
∑thBuf„r
;

642 c⁄° *
öBa£«me
;

644 i‡(
	`U_FAILURE
(*
pEº‹Code
)) {

645  
NULL
;

648 
	`UD©aMem‹y_öô
(&
tD©a
);

651 i‡(
comm⁄D©aIndex
 >= 0) {

653 if(
comm⁄D©aIndex
 >
	`LENGTHOF
(
gComm⁄ICUD©aAºay
)) {

654  
NULL
;

656 if(
gComm⁄ICUD©aAºay
[
comm⁄D©aIndex
] =
NULL
) {

657 
öt32_t
 
i
;

658 
i
 = 0; i < 
comm⁄D©aIndex
; ++i) {

659 if(
gComm⁄ICUD©aAºay
[
i
]->
pHódî
 =&
U_ICUDATA_ENTRY_POINT
) {

661  
NULL
;

678 
	`£tComm⁄ICUD©aPoöãr
(&
U_ICUDATA_ENTRY_POINT
, 
FALSE
, 
pEº‹Code
);

680  
gComm⁄ICUD©aAºay
[
comm⁄D©aIndex
];

688 
öBa£«me
 = 
	`födBa£«me
(
∑th
);

689 #ifde‡
UDATA_DEBUG


690 
	`Ârötf
(
°dîr
, "öBa£«mê%s\n", 
öBa£«me
);

693 if(*
öBa£«me
==0) {

696 #ifde‡
UDATA_DEBUG


697 
	`Ârötf
(
°dîr
, "ocd:Çÿba£«mêö %s, baûög.\n", 
∑th
);

699 *
pEº‹Code
=
U_FILE_ACCESS_ERROR
;

700  
NULL
;

707 
UD©aMem‹y
 *
d©aToRëu∫
 = 
	`ud©a_födCachedD©a
(
öBa£«me
);

708 i‡(
d©aToRëu∫
 !
NULL
) {

709  
d©aToRëu∫
;

717 
UD©aP©hIãøt‹
 
	`ôî
(
	`u_gëD©aDúe˘‹y
(), 
öBa£«me
, 
∑th
, ".d©", 
TRUE
, 
pEº‹Code
);

719 (
	`UD©aMem‹y_isLﬂded
(&
tD©a
)==
FALSE
Ë&& (
∑thBuf„r
 = 
ôî
.
	`√xt
(
pEº‹Code
)Ë!
NULL
)

721 #ifde‡
UDATA_DEBUG


722 
	`Ârötf
(
°dîr
, "ocd:ÅryögÖ©h %†- ", 
∑thBuf„r
);

724 
	`u¥v_m≠Fûe
(&
tD©a
, 
∑thBuf„r
);

725 #ifde‡
UDATA_DEBUG


726 
	`Ârötf
(
°dîr
, "%s\n", 
	`UD©aMem‹y_isLﬂded
(&
tD©a
)?"LOADED":"notÜoaded");

730 #i‡
	`deföed
(
OS390_STUBDATA
Ë&& deföed(
OS390BATCH
)

731 i‡(!
	`UD©aMem‹y_isLﬂded
(&
tD©a
)) {

732 
ourP©hBuf„r
[1024];

734 
	`u¥v_°∫˝y
(
ourP©hBuf„r
, 
∑th
, 1019);

735 
ourP©hBuf„r
[1019]=0;

736 
	`u¥v_°rˇt
(
ourP©hBuf„r
, ".dat");

737 
	`u¥v_m≠Fûe
(&
tD©a
, 
ourP©hBuf„r
);

741 i‡(!
	`UD©aMem‹y_isLﬂded
(&
tD©a
)) {

743 *
pEº‹Code
=
U_FILE_ACCESS_ERROR
;

744  
NULL
;

748 
	`ud©a_checkComm⁄D©a
(&
tD©a
, 
pEº‹Code
);

754  
	`ud©a_ˇcheD©aIãm
(
öBa£«me
, &
tD©a
, 
pEº‹Code
);

755 
	}
}

768 
UBoﬁ
 
	$exãndICUD©a
(
UEº‹Code
 *
pEº
)

770 
UD©aMem‹y
 *
pD©a
;

771 
UD©aMem‹y
 
c›yPD©a
;

772 
UBoﬁ
 
didUpd©e
 = 
FALSE
;

784 #i‡
MAP_IMPLEMENTATION
==
MAP_STDIO


785 
UMTX
 
exãndICUD©aMuãx
 = 
NULL
;

786 
	`umtx_lock
(&
exãndICUD©aMuãx
);

788 if(!
gHaveTrõdToLﬂdComm⁄D©a
) {

789 
gHaveTrõdToLﬂdComm⁄D©a
 = 
TRUE
;

792 
pD©a
 = 
	`›íComm⁄D©a
(

793 
U_ICUDATA_NAME
,

795 
pEº
);

799 
	`UD©aMem‹y_öô
(&
c›yPD©a
);

800 if(
pD©a
 !
NULL
) {

801 
	`UD©amem‹y_assign
(&
c›yPD©a
, 
pD©a
);

802 
c›yPD©a
.
m≠
 = 0;

803 
c›yPD©a
.
m≠Addr
 = 0;

809 
didUpd©e
 =

810 
	`£tComm⁄ICUD©a
(&
c›yPD©a
,

811 
FALSE
,

812 
pEº
);

815 #i‡
MAP_IMPLEMENTATION
==
MAP_STDIO


816 
	`umtx_u∆ock
(&
exãndICUD©aMuãx
);

818  
didUpd©e
;

822 
	}
}

829 
U_CAPI
 
U_EXPORT2


830 
	$ud©a_£tComm⁄D©a
(c⁄° *
d©a
, 
UEº‹Code
 *
pEº‹Code
) {

831 
UD©aMem‹y
 
d©aMem‹y
;

833 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

837 if(
d©a
==
NULL
) {

838 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

843 
	`UD©aMem‹y_öô
(&
d©aMem‹y
);

844 
	`UD©aMem‹y_£tD©a
(&
d©aMem‹y
, 
d©a
);

845 
	`ud©a_checkComm⁄D©a
(&
d©aMem‹y
, 
pEº‹Code
);

846 i‡(
	`U_FAILURE
(*
pEº‹Code
)) {;}

850 
	`£tComm⁄ICUD©a
(&
d©aMem‹y
, 
TRUE
, 
pEº‹Code
);

851 
	}
}

858 
U_CAPI
 
U_EXPORT2


859 
	$ud©a_£tAµD©a
(c⁄° *
∑th
, c⁄° *
d©a
, 
UEº‹Code
 *
îr
)

861 
UD©aMem‹y
 
udm
;

863 if(
îr
==
NULL
 || 
	`U_FAILURE
(*err)) {

866 if(
d©a
==
NULL
) {

867 *
îr
=
U_ILLEGAL_ARGUMENT_ERROR
;

871 
	`UD©aMem‹y_öô
(&
udm
);

872 
	`UD©aMem‹y_£tD©a
(&
udm
, 
d©a
);

873 
	`ud©a_checkComm⁄D©a
(&
udm
, 
îr
);

874 
	`ud©a_ˇcheD©aIãm
(
∑th
, &
udm
, 
îr
);

875 
	}
}

888 
UD©aMem‹y
 *

889 
	gcheckD©aIãm


891 c⁄° 
D©aHódî
 *
	gpHódî
,

892 
UD©aMem‹yIsAc˚±abÀ
 *
	gisAc˚±abÀ
,

893 *
	gc⁄ãxt
,

894 c⁄° *
	gty≥
,

895 c⁄° *
	g«me
,

896 
UEº‹Code
 *
	gn⁄F©ÆEº
,

899 
UEº‹Code
 *
	gÁèlEº


902 
UD©aMem‹y
 *
	grD©aMem
 = 
NULL
;

904 i‡(
U_FAILURE
(*
ÁèlEº
)) {

905  
	gNULL
;

908 if(
	gpHódî
->
	gd©aHódî
.
	gmagic1
==0xda &&

909 
pHódî
->
d©aHódî
.
magic2
==0x27 &&

910 (
isAc˚±abÀ
==
NULL
 || isAc˚±abÀ(
c⁄ãxt
, 
ty≥
, 
«me
, &
pHódî
->
öfo
))

912 
	grD©aMem
=
UD©aMem‹y_¸óãNewIn°™˚
(
ÁèlEº
);

913 i‡(
U_FAILURE
(*
ÁèlEº
)) {

914  
	gNULL
;

916 
	grD©aMem
->
	gpHódî
 = 
pHódî
;

921 *
	gn⁄F©ÆEº
=
U_INVALID_FORMAT_ERROR
;

923  
	grD©aMem
;

929 
UD©aMem‹y
 *
	$doLﬂdFromIndividuÆFûes
(c⁄° *
pkgName
,

930 c⁄° *
d©aP©h
, c⁄° *
tocE¡ryP©hSuffix
,

932 c⁄° *
∑th
, c⁄° *
ty≥
, c⁄° *
«me
,

933 
UD©aMem‹yIsAc˚±abÀ
 *
isAc˚±abÀ
, *
c⁄ãxt
,

934 
UEº‹Code
 *
subEº‹Code
,

935 
UEº‹Code
 *
pEº‹Code
)

937 c⁄° *
∑thBuf„r
;

938 
UD©aMem‹y
 
d©aMem‹y
;

939 
UD©aMem‹y
 *
pE¡ryD©a
;

943 
UD©aP©hIãøt‹
 
	`ôî
(
d©aP©h
, 
pkgName
, 
∑th
, 
tocE¡ryP©hSuffix
, 
FALSE
, 
pEº‹Code
);

945 (
∑thBuf„r
 = 
ôî
.
	`√xt
(
pEº‹Code
)))

947 #ifde‡
UDATA_DEBUG


948 
	`Ârötf
(
°dîr
, "UDATA:Åryög individuÆ fûê%s\n", 
∑thBuf„r
);

950 if(
	`u¥v_m≠Fûe
(&
d©aMem‹y
, 
∑thBuf„r
))

952 
pE¡ryD©a
 = 
	`checkD©aIãm
(
d©aMem‹y
.
pHódî
, 
isAc˚±abÀ
, 
c⁄ãxt
, 
ty≥
, 
«me
, 
subEº‹Code
, 
pEº‹Code
);

953 i‡(
pE¡ryD©a
 !
NULL
) {

957 
pE¡ryD©a
->
m≠Addr
 = 
d©aMem‹y
.mapAddr;

958 
pE¡ryD©a
->
m≠
 = 
d©aMem‹y
.map;

960 #ifde‡
UDATA_DEBUG


961 
	`Ârötf
(
°dîr
, "** M≠≥d fûe: %s\n", 
∑thBuf„r
);

963  
pE¡ryD©a
;

967 
	`ud©a_˛o£
(&
d©aMem‹y
);

970 i‡(
	`U_FAILURE
(*
pEº‹Code
)) {

971  
NULL
;

975 *
subEº‹Code
=
U_INVALID_FORMAT_ERROR
;

977 #ifde‡
UDATA_DEBUG


978 
	`Ârötf
(
°dîr
, "%s\n", 
	`UD©aMem‹y_isLﬂded
(&
d©aMem‹y
)?"LOADED":"notÜoaded");

981  
NULL
;

982 
	}
}

987 
UD©aMem‹y
 *
	$doLﬂdFromComm⁄D©a
(
UBoﬁ
 
isICUD©a
, const * ,

988 c⁄° * , c⁄° * , c⁄° *
tocE¡ryName
,

990 c⁄° *
∑th
, c⁄° *
ty≥
, c⁄° *
«me
,

991 
UD©aMem‹yIsAc˚±abÀ
 *
isAc˚±abÀ
, *
c⁄ãxt
,

992 
UEº‹Code
 *
subEº‹Code
,

993 
UEº‹Code
 *
pEº‹Code
)

995 
UD©aMem‹y
 *
pE¡ryD©a
;

996 c⁄° 
D©aHódî
 *
pHódî
;

997 
UD©aMem‹y
 *
pComm⁄D©a
;

998 
öt32_t
 
comm⁄D©aIndex
;

1008 
comm⁄D©aIndex
 = 
isICUD©a
 ? 0 : -1;;) {

1009 
pComm⁄D©a
=
	`›íComm⁄D©a
(
∑th
, 
comm⁄D©aIndex
, 
subEº‹Code
);

1011 if(
	`U_SUCCESS
(*
subEº‹Code
Ë&& 
pComm⁄D©a
!=
NULL
) {

1012 
öt32_t
 
Àngth
;

1015 
pHódî
=
pComm⁄D©a
->
vFuncs
->
	`Lookup
’Comm⁄D©a, 
tocE¡ryName
, &
Àngth
, 
subEº‹Code
);

1016 #ifde‡
UDATA_DEBUG


1017 
	`Ârötf
(
°dîr
, "%s:ÖHódî=%∞- %s\n", 
tocE¡ryName
, 
pHódî
, 
	`u_îr‹Name
(*
subEº‹Code
));

1020 if(
pHódî
!=
NULL
) {

1021 
pE¡ryD©a
 = 
	`checkD©aIãm
(
pHódî
, 
isAc˚±abÀ
, 
c⁄ãxt
, 
ty≥
, 
«me
, 
subEº‹Code
, 
pEº‹Code
);

1022 #ifde‡
UDATA_DEBUG


1023 
	`Ârötf
(
°dîr
, "pE¡ryD©a=%p\n", 
pE¡ryD©a
);

1025 i‡(
	`U_FAILURE
(*
pEº‹Code
)) {

1026  
NULL
;

1028 i‡(
pE¡ryD©a
 !
NULL
) {

1029 
pE¡ryD©a
->
Àngth
 =Üength;

1030  
pE¡ryD©a
;

1037 i‡(!
isICUD©a
) {

1038  
NULL
;

1039 } i‡(
pComm⁄D©a
 !
NULL
) {

1040 ++
comm⁄D©aIndex
;

1041 } i‡(
	`exãndICUD©a
(
subEº‹Code
)) {

1044  
NULL
;

1047 
	}
}

1081 
UD©aMem‹y
 *

1082 
	$doO≥nChoi˚
(c⁄° *
∑th
, c⁄° *
ty≥
, c⁄° *
«me
,

1083 
UD©aMem‹yIsAc˚±abÀ
 *
isAc˚±abÀ
, *
c⁄ãxt
,

1084 
UEº‹Code
 *
pEº‹Code
)

1086 
UD©aMem‹y
 *
ªtVÆ
 = 
NULL
;

1088 c⁄° *
d©aP©h
;

1090 
öt32_t
 
tocE¡rySuffixIndex
;

1091 c⁄° *
tocE¡ryP©hSuffix
;

1092 
UEº‹Code
 
subEº‹Code
=
U_ZERO_ERROR
;

1093 c⁄° *
åìCh¨
;

1095 
UBoﬁ
 
isICUD©a
 = 
FALSE
;

1099 if(
∑th
 =
NULL
 ||

1100 !
	`°rcmp
(
∑th
, 
U_ICUDATA_ALIAS
) ||

1101 !
	`u¥v_°∫cmp
(
∑th
, 
U_ICUDATA_NAME
 
U_TREE_SEPARATOR_STRING
,

1102 
	`u¥v_°æí
(
U_ICUDATA_NAME
 
U_TREE_SEPARATOR_STRING
)) ||

1103 !
	`u¥v_°∫cmp
(
∑th
, 
U_ICUDATA_ALIAS
 
U_TREE_SEPARATOR_STRING
,

1104 
	`u¥v_°æí
(
U_ICUDATA_ALIAS
 
U_TREE_SEPARATOR_STRING
))) {

1105 
isICUD©a
 = 
TRUE
;

1108 #i‡(
U_FILE_SEP_CHAR
 !
U_FILE_ALT_SEP_CHAR
)

1110 
Ch¨Såög
 
ÆtSïP©h
;

1111 if(
∑th
) {

1112 if(
	`u¥v_°rchr
(
∑th
,
U_FILE_ALT_SEP_CHAR
Ë!
NULL
) {

1113 
ÆtSïP©h
.
	`≠≥nd
(
∑th
, *
pEº‹Code
);

1114 *
p
;

1115 (
p
=
	`u¥v_°rchr
(
ÆtSïP©h
.
	`d©a
(), 
U_FILE_ALT_SEP_CHAR
))) {

1116 *
p
 = 
U_FILE_SEP_CHAR
;

1118 #i‡
	`deföed
 (
UDATA_DEBUG
)

1119 
	`Ârötf
(
°dîr
, "Ch™gedÖ©h from [%s]Åÿ[%s]\n", 
∑th
, 
ÆtSïP©h
.
s
);

1121 
∑th
 = 
ÆtSïP©h
.
	`d©a
();

1126 
Ch¨Såög
 
tocE¡ryName
;

1127 
Ch¨Såög
 
tocE¡ryP©h
;

1129 
Ch¨Såög
 
pkgName
;

1130 
Ch¨Såög
 
åìName
;

1133 if(
∑th
==
NULL
) {

1134 
pkgName
.
	`≠≥nd
(
U_ICUDATA_NAME
, *
pEº‹Code
);

1136 c⁄° *
pkg
;

1137 c⁄° *
fú°
;

1138 
pkg
 = 
	`u¥v_°ºchr
(
∑th
, 
U_FILE_SEP_CHAR
);

1139 
fú°
 = 
	`u¥v_°rchr
(
∑th
, 
U_FILE_SEP_CHAR
);

1140 if(
	`u¥v_∑thIsAbsﬁuã
(
∑th
Ë|| (
pkg
 !
fú°
)) {

1142 if(
pkg
) {

1143 
pkgName
.
	`≠≥nd
(
pkg
+1, *
pEº‹Code
);

1145 
pkgName
.
	`≠≥nd
(
∑th
, *
pEº‹Code
);

1148 
åìCh¨
 = 
	`u¥v_°rchr
(
∑th
, 
U_TREE_SEPARATOR
);

1149 if(
åìCh¨
) {

1150 
åìName
.
	`≠≥nd
(
åìCh¨
+1, *
pEº‹Code
);

1151 if(
isICUD©a
) {

1152 
pkgName
.
	`≠≥nd
(
U_ICUDATA_NAME
, *
pEº‹Code
);

1154 
pkgName
.
	`≠≥nd
(
∑th
, (
öt32_t
)(
åìCh¨
-∑th), *
pEº‹Code
);

1155 i‡(
fú°
 =
NULL
) {

1160 
∑th
 = 
pkgName
.
	`d©a
();

1164 if(
isICUD©a
) {

1165 
pkgName
.
	`≠≥nd
(
U_ICUDATA_NAME
, *
pEº‹Code
);

1167 
pkgName
.
	`≠≥nd
(
∑th
, *
pEº‹Code
);

1173 #ifde‡
UDATA_DEBUG


1174 
	`Ârötf
(
°dîr
, " P=%†T=%s\n", 
pkgName
.
	`d©a
(), 
åìName
.data());

1183 
tocE¡ryName
.
	`≠≥nd
(
pkgName
, *
pEº‹Code
);

1184 
tocE¡ryP©h
.
	`≠≥nd
(
pkgName
, *
pEº‹Code
);

1185 
tocE¡rySuffixIndex
 = 
tocE¡ryName
.
	`Àngth
();

1187 if(!
åìName
.
	`isEm±y
()) {

1188 
tocE¡ryName
.
	`≠≥nd
(
U_TREE_ENTRY_SEP_CHAR
, *
pEº‹Code
).≠≥nd(
åìName
, *pErrorCode);

1189 
tocE¡ryP©h
.
	`≠≥nd
(
U_FILE_SEP_CHAR
, *
pEº‹Code
).≠≥nd(
åìName
, *pErrorCode);

1192 
tocE¡ryName
.
	`≠≥nd
(
U_TREE_ENTRY_SEP_CHAR
, *
pEº‹Code
).≠≥nd(
«me
, *pErrorCode);

1193 
tocE¡ryP©h
.
	`≠≥nd
(
U_FILE_SEP_CHAR
, *
pEº‹Code
).≠≥nd(
«me
, *pErrorCode);

1194 if(
ty≥
!=
NULL
 && *type!=0) {

1195 
tocE¡ryName
.
	`≠≥nd
(".", *
pEº‹Code
).≠≥nd(
ty≥
, *pErrorCode);

1196 
tocE¡ryP©h
.
	`≠≥nd
(".", *
pEº‹Code
).≠≥nd(
ty≥
, *pErrorCode);

1198 
tocE¡ryP©hSuffix
 = 
tocE¡ryP©h
.
	`d©a
()+
tocE¡rySuffixIndex
;

1200 #ifde‡
UDATA_DEBUG


1201 
	`Ârötf
(
°dîr
, "ÅocE¡ryNamê%s\n", 
tocE¡ryName
.
	`d©a
());

1202 
	`Ârötf
(
°dîr
, "ÅocE¡ryP©h = %s\n", 
tocE¡ryName
.
	`d©a
());

1205 if(
∑th
 =
NULL
) {

1206 
∑th
 = 
COMMON_DATA_NAME
;

1210 #ifde‡
UDATA_DEBUG


1211 
	`Ârötf
(
°dîr
, "IND: inBa£«mê%s,Ökg=%s\n", "“/a)", 
	`∑ckageNameFromP©h
(
∑th
));

1215 
d©aP©h
 = 
	`u_gëD©aDúe˘‹y
();

1218 if(
gD©aFûeAc˚ss
 =
UDATA_PACKAGES_FIRST
) {

1219 #ifde‡
UDATA_DEBUG


1220 
	`Ârötf
(
°dîr
, "TryingÖackages (UDATA_PACKAGES_FIRST)\n");

1223 
ªtVÆ
 = 
	`doLﬂdFromComm⁄D©a
(
isICUD©a
,

1224 
pkgName
.
	`d©a
(), 
d©aP©h
, 
tocE¡ryP©hSuffix
, 
tocE¡ryName
.data(),

1225 
∑th
, 
ty≥
, 
«me
, 
isAc˚±abÀ
, 
c⁄ãxt
, &
subEº‹Code
, 
pEº‹Code
);

1226 if((
ªtVÆ
 !
NULL
Ë|| 
	`U_FAILURE
(*
pEº‹Code
)) {

1227  
ªtVÆ
;

1232 if((
gD©aFûeAc˚ss
==
UDATA_PACKAGES_FIRST
) ||

1233 (
gD©aFûeAc˚ss
==
UDATA_FILES_FIRST
)) {

1234 #ifde‡
UDATA_DEBUG


1235 
	`Ârötf
(
°dîr
, "Trying individual files\n");

1238 i‡((
d©aP©h
 && *d©aP©hË|| !
isICUD©a
) {

1239 
ªtVÆ
 = 
	`doLﬂdFromIndividuÆFûes
(
pkgName
.
	`d©a
(), 
d©aP©h
, 
tocE¡ryP©hSuffix
,

1240 
∑th
, 
ty≥
, 
«me
, 
isAc˚±abÀ
, 
c⁄ãxt
, &
subEº‹Code
, 
pEº‹Code
);

1241 if((
ªtVÆ
 !
NULL
Ë|| 
	`U_FAILURE
(*
pEº‹Code
)) {

1242  
ªtVÆ
;

1248 if((
gD©aFûeAc˚ss
==
UDATA_ONLY_PACKAGES
) ||

1249 (
gD©aFûeAc˚ss
==
UDATA_FILES_FIRST
)) {

1250 #ifde‡
UDATA_DEBUG


1251 
	`Ârötf
(
°dîr
, "TryingÖackages (UDATA_ONLY_PACKAGES || UDATA_FILES_FIRST)\n");

1253 
ªtVÆ
 = 
	`doLﬂdFromComm⁄D©a
(
isICUD©a
,

1254 
pkgName
.
	`d©a
(), 
d©aP©h
, 
tocE¡ryP©hSuffix
, 
tocE¡ryName
.data(),

1255 
∑th
, 
ty≥
, 
«me
, 
isAc˚±abÀ
, 
c⁄ãxt
, &
subEº‹Code
, 
pEº‹Code
);

1256 if((
ªtVÆ
 !
NULL
Ë|| 
	`U_FAILURE
(*
pEº‹Code
)) {

1257  
ªtVÆ
;

1264 if(
gD©aFûeAc˚ss
==
UDATA_NO_FILES
) {

1265 #ifde‡
UDATA_DEBUG


1266 
	`Ârötf
(
°dîr
, "Trying common data (UDATA_NO_FILES)\n");

1268 
ªtVÆ
 = 
	`doLﬂdFromComm⁄D©a
(
isICUD©a
,

1269 
pkgName
.
	`d©a
(), "", 
tocE¡ryP©hSuffix
, 
tocE¡ryName
.data(),

1270 
∑th
, 
ty≥
, 
«me
, 
isAc˚±abÀ
, 
c⁄ãxt
, &
subEº‹Code
, 
pEº‹Code
);

1271 if((
ªtVÆ
 !
NULL
Ë|| 
	`U_FAILURE
(*
pEº‹Code
)) {

1272  
ªtVÆ
;

1277 if(
	`U_SUCCESS
(*
pEº‹Code
)) {

1278 if(
	`U_SUCCESS
(
subEº‹Code
)) {

1280 *
pEº‹Code
=
U_FILE_ACCESS_ERROR
;

1283 *
pEº‹Code
=
subEº‹Code
;

1286  
ªtVÆ
;

1287 
	}
}

1293 
U_CAPI
 
UD©aMem‹y
 * 
U_EXPORT2


1294 
	$ud©a_›í
(c⁄° *
∑th
, c⁄° *
ty≥
, c⁄° *
«me
,

1295 
UEº‹Code
 *
pEº‹Code
) {

1296 #ifde‡
UDATA_DEBUG


1297 
	`Ârötf
(
°dîr
, "ud©a_›í(): O≥nög: %†: %†. %s\n", (
∑th
?∑th:"NULL"), 
«me
, 
ty≥
);

1298 
	`fÊush
(
°dîr
);

1301 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

1302  
NULL
;

1303 } if(
«me
==
NULL
 || *name==0) {

1304 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

1305  
NULL
;

1307  
	`doO≥nChoi˚
(
∑th
, 
ty≥
, 
«me
, 
NULL
, NULL, 
pEº‹Code
);

1309 
	}
}

1313 
U_CAPI
 
UD©aMem‹y
 * 
U_EXPORT2


1314 
	$ud©a_›íChoi˚
(c⁄° *
∑th
, c⁄° *
ty≥
, c⁄° *
«me
,

1315 
UD©aMem‹yIsAc˚±abÀ
 *
isAc˚±abÀ
, *
c⁄ãxt
,

1316 
UEº‹Code
 *
pEº‹Code
) {

1317 #ifde‡
UDATA_DEBUG


1318 
	`Ârötf
(
°dîr
, "ud©a_›íChoi˚(): O≥nög: %†: %†. %s\n", (
∑th
?∑th:"NULL"), 
«me
, 
ty≥
);

1321 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

1322  
NULL
;

1323 } if(
«me
==
NULL
 || *«me==0 || 
isAc˚±abÀ
==NULL) {

1324 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

1325  
NULL
;

1327  
	`doO≥nChoi˚
(
∑th
, 
ty≥
, 
«me
, 
isAc˚±abÀ
, 
c⁄ãxt
, 
pEº‹Code
);

1329 
	}
}

1333 
U_CAPI
 
U_EXPORT2


1334 
	$ud©a_gëInfo
(
UD©aMem‹y
 *
pD©a
, 
UD©aInfo
 *
pInfo
) {

1335 if(
pInfo
!=
NULL
) {

1336 if(
pD©a
!=
NULL
 &&ÖD©a->
pHódî
!=NULL) {

1337 c⁄° 
UD©aInfo
 *
öfo
=&
pD©a
->
pHódî
->info;

1338 
uöt16_t
 
d©aInfoSize
=
	`ud©a_gëInfoSize
(
öfo
);

1339 if(
pInfo
->
size
>
d©aInfoSize
) {

1340 
pInfo
->
size
=
d©aInfoSize
;

1342 
	`u¥v_mem˝y
((
uöt16_t
 *)
pInfo
+1, (c⁄° uöt16_à*)
öfo
+1,ÖInfo->
size
-2);

1343 if(
öfo
->
isBigEndün
!=
U_IS_BIG_ENDIAN
) {

1345 
uöt16_t
 
x
=
öfo
->
ª£rvedW‹d
;

1346 
pInfo
->
ª£rvedW‹d
=(
uöt16_t
)((
x
<<8)|(x>>8));

1349 
pInfo
->
size
=0;

1352 
	}
}

1355 
U_CAPI
 
U_EXPORT2
 
	$ud©a_£tFûeAc˚ss
(
UD©aFûeAc˚ss
 
ac˚ss
, 
UEº‹Code
 * )

1357 
gD©aFûeAc˚ss
 = 
ac˚ss
;

1358 
	}
}

	@udatamem.c

20 
	~"unicode/uty≥s.h
"

21 
	~"cmem‹y.h
"

22 
	~"unicode/ud©a.h
"

24 
	~"ud©amem.h
"

26 
U_CFUNC
 
	$UD©aMem‹y_öô
(
UD©aMem‹y
 *
This
) {

27 
	`u¥v_mem£t
(
This
, 0, (
UD©aMem‹y
));

28 
This
->
Àngth
=-1;

29 
	}
}

32 
U_CFUNC
 
	$UD©amem‹y_assign
(
UD©aMem‹y
 *
de°
, UD©aMem‹y *
sour˚
) {

34 
UBoﬁ
 
mÆlo˚dFœg
 = 
de°
->
hópAŒoˇãd
;

35 
	`u¥v_mem˝y
(
de°
, 
sour˚
, (
UD©aMem‹y
));

36 
de°
->
hópAŒoˇãd
 = 
mÆlo˚dFœg
;

37 
	}
}

39 
U_CFUNC
 
UD©aMem‹y
 *
	$UD©aMem‹y_¸óãNewIn°™˚
(
UEº‹Code
 *
pEº
) {

40 
UD©aMem‹y
 *
This
;

42 i‡(
	`U_FAILURE
(*
pEº
)) {

43  
NULL
;

45 
This
 = 
	`u¥v_mÆloc
((
UD©aMem‹y
));

46 i‡(
This
 =
NULL
) {

47 *
pEº
 = 
U_MEMORY_ALLOCATION_ERROR
; }

49 
	`UD©aMem‹y_öô
(
This
);

50 
This
->
hópAŒoˇãd
 = 
TRUE
;

52  
This
;

53 
	}
}

56 
U_CFUNC
 c⁄° 
D©aHódî
 *

57 
	$UD©aMem‹y_n‹mÆizeD©aPoöãr
(c⁄° *
p
) {

59 c⁄° 
D©aHódî
 *
pdh
 = (c⁄° D©aHódî *)
p
;

60 if(
pdh
==
NULL
 || (pdh->
d©aHódî
.
magic1
==0xd®&&Ödh->d©aHódî.
magic2
==0x27)) {

61  
pdh
;

63 #ifde‡
OS400


76  (c⁄° 
D©aHódî
 *)*((c⁄° **)
p
+1);

78  (c⁄° 
D©aHódî
 *)((c⁄° *)
p
+1);

81 
	}
}

84 
U_CFUNC
 
	$UD©aMem‹y_£tD©a
 (
UD©aMem‹y
 *
This
, c⁄° *
d©aAddr
) {

85 
This
->
pHódî
 = 
	`UD©aMem‹y_n‹mÆizeD©aPoöãr
(
d©aAddr
);

86 
	}
}

89 
U_CAPI
 
U_EXPORT2


90 
	$ud©a_˛o£
(
UD©aMem‹y
 *
pD©a
) {

91 if(
pD©a
!=
NULL
) {

92 
	`u¥v_unm≠Fûe
(
pD©a
);

93 if(
pD©a
->
hópAŒoˇãd
 ) {

94 
	`u¥v_‰ì
(
pD©a
);

96 
	`UD©aMem‹y_öô
(
pD©a
);

99 
	}
}

101 
U_CAPI
 c⁄° * 
U_EXPORT2


102 
	$ud©a_gëMem‹y
(
UD©aMem‹y
 *
pD©a
) {

103 if(
pD©a
!=
NULL
 &&ÖD©a->
pHódî
!=NULL) {

104  (*)(
pD©a
->
pHódî
)+
	`ud©a_gëHódîSize
(pData->pHeader);

106  
NULL
;

108 
	}
}

130 
U_CAPI
 
öt32_t
 
U_EXPORT2


131 
	$ud©a_gëLígth
(c⁄° 
UD©aMem‹y
 *
pD©a
) {

132 if(
pD©a
!=
NULL
 &&ÖD©a->
pHódî
!=NULL &&ÖD©a->
Àngth
>=0) {

137  
pD©a
->
Àngth
-
	`ud©a_gëHódîSize
’D©a->
pHódî
);

141 
	}
}

148 
U_CAPI
 c⁄° * 
U_EXPORT2


149 
	$ud©a_gëRawMem‹y
(c⁄° 
UD©aMem‹y
 *
pD©a
) {

150 if(
pD©a
!=
NULL
 &&ÖD©a->
pHódî
!=NULL) {

151  
pD©a
->
pHódî
;

153  
NULL
;

155 
	}
}

157 
U_CFUNC
 
UBoﬁ
 
	$UD©aMem‹y_isLﬂded
(c⁄° 
UD©aMem‹y
 *
This
) {

158  
This
->
pHódî
 !
NULL
;

159 
	}
}

	@udatamem.h

19 #i‚de‡
__UDATAMEM_H__


20 
	#__UDATAMEM_H__


	)

22 
	~"unicode/ud©a.h
"

23 
	~"ucmnd©a.h
"

25 
	sUD©aMem‹y
 {

26 c⁄° 
comm⁄D©aFuncs
 *
	mvFuncs
;

28 c⁄° 
D©aHódî
 *
	mpHódî
;

30 c⁄° *
	mtoc
;

32 
UBoﬁ
 
	mhópAŒoˇãd
;

35 *
	mm≠Addr
;

38 *
	mm≠
;

42 
öt32_t
 
	mÀngth
;

45 
U_CFUNC
 
UD©aMem‹y
 *
UD©aMem‹y_¸óãNewIn°™˚
(
UEº‹Code
 *
pEº
);

46 
U_CFUNC
 
UD©amem‹y_assign
 (
UD©aMem‹y
 *
de°
, UD©aMem‹y *
sour˚
);

47 
U_CFUNC
 
UD©aMem‹y_öô
 (
UD©aMem‹y
 *
This
);

48 
U_CFUNC
 
UBoﬁ
 
UD©aMem‹y_isLﬂded
(c⁄° 
UD©aMem‹y
 *
This
);

49 
U_CFUNC
 
UD©aMem‹y_£tD©a
 (
UD©aMem‹y
 *
This
, c⁄° *
d©aAddr
);

51 
U_CFUNC
 c⁄° 
D©aHódî
 *
UD©aMem‹y_n‹mÆizeD©aPoöãr
(c⁄° *
p
);

53 
U_CAPI
 
öt32_t
 
U_EXPORT2


54 
ud©a_gëLígth
(c⁄° 
UD©aMem‹y
 *
pD©a
);

56 
U_CAPI
 c⁄° * 
U_EXPORT2


57 
ud©a_gëRawMem‹y
(c⁄° 
UD©aMem‹y
 *
pD©a
);

	@udataswp.c

21 
	~<°d¨g.h
>

22 
	~"unicode/uty≥s.h
"

23 
	~"unicode/ud©a.h
"

24 
	~"ucmnd©a.h
"

25 
	~"cmem‹y.h
"

26 
	~"ud©aswp.h
"

30 
öt32_t
 
U_CALLCONV


31 
	$u¥v_sw≠Aºay16
(c⁄° 
UD©aSw≠≥r
 *
ds
,

32 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

33 
UEº‹Code
 *
pEº‹Code
) {

34 c⁄° 
uöt16_t
 *
p
;

35 
uöt16_t
 *
q
;

36 
öt32_t
 
cou¡
;

37 
uöt16_t
 
x
;

39 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

42 if(
ds
==
NULL
 || 
öD©a
==NULL || 
Àngth
<0 || (Àngth&1)!=0 || 
outD©a
==NULL) {

43 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

48 
p
=(c⁄° 
uöt16_t
 *)
öD©a
;

49 
q
=(
uöt16_t
 *)
outD©a
;

50 
cou¡
=
Àngth
/2;

51 
cou¡
>0) {

52 
x
=*
p
++;

53 *
q
++=(
uöt16_t
)((
x
<<8)|(x>>8));

54 --
cou¡
;

57  
Àngth
;

58 
	}
}

60 
öt32_t
 
U_CALLCONV


61 
	$u¥v_c›yAºay16
(c⁄° 
UD©aSw≠≥r
 *
ds
,

62 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

63 
UEº‹Code
 *
pEº‹Code
) {

64 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

67 if(
ds
==
NULL
 || 
öD©a
==NULL || 
Àngth
<0 || (Àngth&1)!=0 || 
outD©a
==NULL) {

68 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

72 if(
Àngth
>0 && 
öD©a
!=
outD©a
) {

73 
	`u¥v_mem˝y
(
outD©a
, 
öD©a
, 
Àngth
);

75  
Àngth
;

76 
	}
}

78 
öt32_t
 
U_CALLCONV


79 
	$u¥v_sw≠Aºay32
(c⁄° 
UD©aSw≠≥r
 *
ds
,

80 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

81 
UEº‹Code
 *
pEº‹Code
) {

82 c⁄° 
uöt32_t
 *
p
;

83 
uöt32_t
 *
q
;

84 
öt32_t
 
cou¡
;

85 
uöt32_t
 
x
;

87 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

90 if(
ds
==
NULL
 || 
öD©a
==NULL || 
Àngth
<0 || (Àngth&3)!=0 || 
outD©a
==NULL) {

91 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

96 
p
=(c⁄° 
uöt32_t
 *)
öD©a
;

97 
q
=(
uöt32_t
 *)
outD©a
;

98 
cou¡
=
Àngth
/4;

99 
cou¡
>0) {

100 
x
=*
p
++;

101 *
q
++=(
uöt32_t
)((
x
<<24)|((x<<8)&0xff0000)|((x>>8)&0xff00)|(x>>24));

102 --
cou¡
;

105  
Àngth
;

106 
	}
}

108 
öt32_t
 
U_CALLCONV


109 
	$u¥v_c›yAºay32
(c⁄° 
UD©aSw≠≥r
 *
ds
,

110 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

111 
UEº‹Code
 *
pEº‹Code
) {

112 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

115 if(
ds
==
NULL
 || 
öD©a
==NULL || 
Àngth
<0 || (Àngth&3)!=0 || 
outD©a
==NULL) {

116 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

120 if(
Àngth
>0 && 
öD©a
!=
outD©a
) {

121 
	`u¥v_mem˝y
(
outD©a
, 
öD©a
, 
Àngth
);

123  
Àngth
;

124 
	}
}

126 
uöt16_t
 
U_CALLCONV


127 
	$u¥v_ªadSw≠UI¡16
(
uöt16_t
 
x
) {

128  (
uöt16_t
)((
x
<<8)|(x>>8));

129 
	}
}

131 
uöt16_t
 
U_CALLCONV


132 
	$u¥v_ªadDúe˘UI¡16
(
uöt16_t
 
x
) {

133  
x
;

134 
	}
}

136 
uöt32_t
 
U_CALLCONV


137 
	$u¥v_ªadSw≠UI¡32
(
uöt32_t
 
x
) {

138  (
uöt32_t
)((
x
<<24)|((x<<8)&0xff0000)|((x>>8)&0xff00)|(x>>24));

139 
	}
}

141 
uöt32_t
 
U_CALLCONV


142 
	$u¥v_ªadDúe˘UI¡32
(
uöt32_t
 
x
) {

143  
x
;

144 
	}
}

146 
U_CALLCONV


147 
	$u¥v_wrôeSw≠UI¡16
(
uöt16_t
 *
p
, uöt16_à
x
) {

148 *
p
=(
uöt16_t
)((
x
<<8)|(x>>8));

149 
	}
}

151 
U_CALLCONV


152 
	$u¥v_wrôeDúe˘UI¡16
(
uöt16_t
 *
p
, uöt16_à
x
) {

153 *
p
=
x
;

154 
	}
}

156 
U_CALLCONV


157 
	$u¥v_wrôeSw≠UI¡32
(
uöt32_t
 *
p
, uöt32_à
x
) {

158 *
p
=(
uöt32_t
)((
x
<<24)|((x<<8)&0xff0000)|((x>>8)&0xff00)|(x>>24));

159 
	}
}

161 
U_CALLCONV


162 
	$u¥v_wrôeDúe˘UI¡32
(
uöt32_t
 *
p
, uöt32_à
x
) {

163 *
p
=
x
;

164 
	}
}

166 
U_CAPI
 
öt16_t
 
U_EXPORT2


167 
	$ud©a_ªadI¡16
(c⁄° 
UD©aSw≠≥r
 *
ds
, 
öt16_t
 
x
) {

168  (
öt16_t
)
ds
->
	`ªadUI¡16
((
uöt16_t
)
x
);

169 
	}
}

171 
U_CAPI
 
öt32_t
 
U_EXPORT2


172 
	$ud©a_ªadI¡32
(c⁄° 
UD©aSw≠≥r
 *
ds
, 
öt32_t
 
x
) {

173  (
öt32_t
)
ds
->
	`ªadUI¡32
((
uöt32_t
)
x
);

174 
	}
}

181 
U_CAPI
 
öt32_t
 
U_EXPORT2


182 
	$ud©a_sw≠InvSåögBlock
(c⁄° 
UD©aSw≠≥r
 *
ds
,

183 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

184 
UEº‹Code
 *
pEº‹Code
) {

185 c⁄° *
öCh¨s
;

186 
öt32_t
 
°rögsLígth
;

188 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

191 if(
ds
==
NULL
 || 
öD©a
==NULL || 
Àngth
<0 || (Àngth>0 && 
outD©a
==NULL)) {

192 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

197 
öCh¨s
=(c⁄° *)
öD©a
;

198 
°rögsLígth
=
Àngth
;

199 
°rögsLígth
>0 && 
öCh¨s
[stringsLength-1]!=0) {

200 --
°rögsLígth
;

204 
ds
->
	`sw≠InvCh¨s
(ds, 
öD©a
, 
°rögsLígth
, 
outD©a
, 
pEº‹Code
);

207 if(
öD©a
!=
outD©a
 && 
Àngth
>
°rögsLígth
) {

208 
	`u¥v_mem˝y
((*)
outD©a
+
°rögsLígth
, 
öCh¨s
+°rögsLígth, 
Àngth
-stringsLength);

212 if(
	`U_SUCCESS
(*
pEº‹Code
)) {

213  
Àngth
;

217 
	}
}

219 
U_CAPI
 
U_EXPORT2


220 
	$ud©a_¥ötEº‹
(c⁄° 
UD©aSw≠≥r
 *
ds
,

221 c⁄° *
fmt
,

223 
va_li°
 
¨gs
;

225 if(
ds
->
¥ötEº‹
!=
NULL
) {

226 
	`va_°¨t
(
¨gs
, 
fmt
);

227 
ds
->
	`¥ötEº‹
(ds->
¥ötEº‹C⁄ãxt
, 
fmt
, 
¨gs
);

228 
	`va_íd
(
¨gs
);

230 
	}
}

234 
U_CAPI
 
öt32_t
 
U_EXPORT2


235 
	$ud©a_sw≠D©aHódî
(c⁄° 
UD©aSw≠≥r
 *
ds
,

236 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

237 
UEº‹Code
 *
pEº‹Code
) {

238 c⁄° 
D©aHódî
 *
pHódî
;

239 
uöt16_t
 
hódîSize
, 
öfoSize
;

242 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

245 if(
ds
==
NULL
 || 
öD©a
==NULL || 
Àngth
<-1 || (Àngth>0 && 
outD©a
==NULL)) {

246 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

251 
pHódî
=(c⁄° 
D©aHódî
 *)
öD©a
;

252 if–(
Àngth
>=0 &&Üígth<(
D©aHódî
)) ||

253 
pHódî
->
d©aHódî
.
magic1
!=0xda ||

254 
pHódî
->
d©aHódî
.
magic2
!=0x27 ||

255 
pHódî
->
öfo
.
sizeofUCh¨
!=2

257 
	`ud©a_¥ötEº‹
(
ds
, "udata_swapDataHeader(): initial bytes doÇotÜookÜike ICU data\n");

258 *
pEº‹Code
=
U_UNSUPPORTED_ERROR
;

262 
hódîSize
=
ds
->
	`ªadUI¡16
(
pHódî
->
d©aHódî
.headerSize);

263 
öfoSize
=
ds
->
	`ªadUI¡16
(
pHódî
->
öfo
.
size
);

265 if–
hódîSize
<(
D©aHódî
) ||

266 
öfoSize
<(
UD©aInfo
) ||

267 
hódîSize
<((
pHódî
->
d©aHódî
)+
öfoSize
) ||

268 (
Àngth
>=0 &&Üígth<
hódîSize
)

270 
	`ud©a_¥ötEº‹
(
ds
, "udata_swapDataHeader(): header size mismatch - headerSize %d infoSize %dÜength %d\n",

271 
hódîSize
, 
öfoSize
, 
Àngth
);

272 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

276 if(
Àngth
>0) {

277 
D©aHódî
 *
outHódî
;

278 c⁄° *
s
;

279 
öt32_t
 
maxLígth
;

282 if(
öD©a
!=
outD©a
) {

283 
	`u¥v_mem˝y
(
outD©a
, 
öD©a
, 
hódîSize
);

285 
outHódî
=(
D©aHódî
 *)
outD©a
;

287 
outHódî
->
öfo
.
isBigEndün
 = 
ds
->
outIsBigEndün
;

288 
outHódî
->
öfo
.
ch¨£tFamûy
 = 
ds
->
outCh¨£t
;

291 
ds
->
	`sw≠Aºay16
(ds, &
pHódî
->
d©aHódî
.
hódîSize
, 2, &
outHódî
->d©aHódî.hódîSize, 
pEº‹Code
);

294 
ds
->
	`sw≠Aºay16
(ds, &
pHódî
->
öfo
.
size
, 4, &
outHódî
->öfo.size, 
pEº‹Code
);

297 
öfoSize
+=(
pHódî
->
d©aHódî
);

298 
s
=(c⁄° *)
öD©a
+
öfoSize
;

299 
maxLígth
=
hódîSize
-
öfoSize
;

301 
Àngth
=0;Üígth<
maxLígth
 && 
s
[length]!=0; ++length) {}

303 
ds
->
	`sw≠InvCh¨s
(ds, 
s
, 
Àngth
, (*)
outD©a
+
öfoSize
, 
pEº‹Code
);

306  
hódîSize
;

307 
	}
}

311 
U_CAPI
 
UD©aSw≠≥r
 * 
U_EXPORT2


312 
	$ud©a_›íSw≠≥r
(
UBoﬁ
 
öIsBigEndün
, 
uöt8_t
 
öCh¨£t
,

313 
UBoﬁ
 
outIsBigEndün
, 
uöt8_t
 
outCh¨£t
,

314 
UEº‹Code
 *
pEº‹Code
) {

315 
UD©aSw≠≥r
 *
sw≠≥r
;

317 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

318  
NULL
;

320 if(
öCh¨£t
>
U_EBCDIC_FAMILY
 || 
outCh¨£t
>U_EBCDIC_FAMILY) {

321 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

322  
NULL
;

326 
sw≠≥r
=
	`u¥v_mÆloc
((
UD©aSw≠≥r
));

327 if(
sw≠≥r
==
NULL
) {

328 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

329  
NULL
;

331 
	`u¥v_mem£t
(
sw≠≥r
, 0, (
UD©aSw≠≥r
));

334 
sw≠≥r
->
öIsBigEndün
=inIsBigEndian;

335 
sw≠≥r
->
öCh¨£t
=inCharset;

336 
sw≠≥r
->
outIsBigEndün
=outIsBigEndian;

337 
sw≠≥r
->
outCh¨£t
=outCharset;

339 
sw≠≥r
->
ªadUI¡16

öIsBigEndün
==
U_IS_BIG_ENDIAN
 ? 
u¥v_ªadDúe˘UI¡16
 : 
u¥v_ªadSw≠UI¡16
;

340 
sw≠≥r
->
ªadUI¡32

öIsBigEndün
==
U_IS_BIG_ENDIAN
 ? 
u¥v_ªadDúe˘UI¡32
 : 
u¥v_ªadSw≠UI¡32
;

342 
sw≠≥r
->
wrôeUI¡16

outIsBigEndün
==
U_IS_BIG_ENDIAN
 ? 
u¥v_wrôeDúe˘UI¡16
 : 
u¥v_wrôeSw≠UI¡16
;

343 
sw≠≥r
->
wrôeUI¡32

outIsBigEndün
==
U_IS_BIG_ENDIAN
 ? 
u¥v_wrôeDúe˘UI¡32
 : 
u¥v_wrôeSw≠UI¡32
;

345 
sw≠≥r
->
com∑ªInvCh¨s

outCh¨£t
==
U_ASCII_FAMILY
 ? 
u¥v_com∑ªInvAscii
 : 
u¥v_com∑ªInvEbcdic
;

347 
sw≠≥r
->
sw≠Aºay16

öIsBigEndün
==
outIsBigEndün
 ? 
u¥v_c›yAºay16
 : 
u¥v_sw≠Aºay16
;

348 
sw≠≥r
->
sw≠Aºay32

öIsBigEndün
==
outIsBigEndün
 ? 
u¥v_c›yAºay32
 : 
u¥v_sw≠Aºay32
;

350 if(
öCh¨£t
==
U_ASCII_FAMILY
) {

351 
sw≠≥r
->
sw≠InvCh¨s

outCh¨£t
==
U_ASCII_FAMILY
 ? 
u¥v_c›yAscii
 : 
u¥v_ebcdicFromAscii
;

353 
sw≠≥r
->
sw≠InvCh¨s

outCh¨£t
==
U_EBCDIC_FAMILY
 ? 
u¥v_c›yEbcdic
 : 
u¥v_asciiFromEbcdic
;

356  
sw≠≥r
;

357 
	}
}

359 
U_CAPI
 
UD©aSw≠≥r
 * 
U_EXPORT2


360 
	$ud©a_›íSw≠≥rF‹I≈utD©a
(c⁄° *
d©a
, 
öt32_t
 
Àngth
,

361 
UBoﬁ
 
outIsBigEndün
, 
uöt8_t
 
outCh¨£t
,

362 
UEº‹Code
 *
pEº‹Code
) {

363 c⁄° 
D©aHódî
 *
pHódî
;

364 
uöt16_t
 
hódîSize
, 
öfoSize
;

365 
UBoﬁ
 
öIsBigEndün
;

366 
öt8_t
 
öCh¨£t
;

368 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

369  
NULL
;

371 if–
d©a
==
NULL
 ||

372 (
Àngth
>=0 &&Üígth<(
D©aHódî
)) ||

373 
outCh¨£t
>
U_EBCDIC_FAMILY


375 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

376  
NULL
;

379 
pHódî
=(c⁄° 
D©aHódî
 *)
d©a
;

380 if–(
Àngth
>=0 &&Üígth<(
D©aHódî
)) ||

381 
pHódî
->
d©aHódî
.
magic1
!=0xda ||

382 
pHódî
->
d©aHódî
.
magic2
!=0x27 ||

383 
pHódî
->
öfo
.
sizeofUCh¨
!=2

385 *
pEº‹Code
=
U_UNSUPPORTED_ERROR
;

389 
öIsBigEndün
=(
UBoﬁ
)
pHódî
->
öfo
.
isBigEndün
;

390 
öCh¨£t
=
pHódî
->
öfo
.
ch¨£tFamûy
;

392 if(
öIsBigEndün
==
U_IS_BIG_ENDIAN
) {

393 
hódîSize
=
pHódî
->
d©aHódî
.headerSize;

394 
öfoSize
=
pHódî
->
öfo
.
size
;

396 
hódîSize
=
	`u¥v_ªadSw≠UI¡16
(
pHódî
->
d©aHódî
.headerSize);

397 
öfoSize
=
	`u¥v_ªadSw≠UI¡16
(
pHódî
->
öfo
.
size
);

400 if–
hódîSize
<(
D©aHódî
) ||

401 
öfoSize
<(
UD©aInfo
) ||

402 
hódîSize
<((
pHódî
->
d©aHódî
)+
öfoSize
) ||

403 (
Àngth
>=0 &&Üígth<
hódîSize
)

405 *
pEº‹Code
=
U_UNSUPPORTED_ERROR
;

409  
	`ud©a_›íSw≠≥r
(
öIsBigEndün
, 
öCh¨£t
, 
outIsBigEndün
, 
outCh¨£t
, 
pEº‹Code
);

410 
	}
}

412 
U_CAPI
 
U_EXPORT2


413 
	$ud©a_˛o£Sw≠≥r
(
UD©aSw≠≥r
 *
ds
) {

414 
	`u¥v_‰ì
(
ds
);

415 
	}
}

	@udataswp.h

21 #i‚de‡
__UDATASWP_H__


22 
	#__UDATASWP_H__


	)

24 
	~<°d¨g.h
>

25 
	~"unicode/uty≥s.h
"

29 
U_CDECL_BEGIN


31 
	gUD©aSw≠≥r
;

32 
UD©aSw≠≥r
 
	tUD©aSw≠≥r
;

87 
öt32_t
 
	tU_CALLCONV


88 
	tUD©aSw≠Fn
(c⁄° 
	tUD©aSw≠≥r
 *
	tds
,

89 c⁄° *
	töD©a
, 
	töt32_t
 
	tÀngth
, *
	toutD©a
,

90 
	tUEº‹Code
 *
	tpEº‹Code
);

96 
uöt16_t
 
	tU_CALLCONV


97 
	tUD©aRódUI¡16
(
	tuöt16_t
 
	tx
);

103 
uöt32_t
 
	tU_CALLCONV


104 
	tUD©aRódUI¡32
(
	tuöt32_t
 
	tx
);

110 
	tU_CALLCONV


111 
	tUD©aWrôeUI¡16
(
	tuöt16_t
 *
	tp
, uöt16_à
	tx
);

117 
	tU_CALLCONV


118 
	tUD©aWrôeUI¡32
(
	tuöt32_t
 *
	tp
, uöt32_à
	tx
);

130 
öt32_t
 
	tU_CALLCONV


131 
	tUD©aCom∑ªInvCh¨s
(c⁄° 
	tUD©aSw≠≥r
 *
	tds
,

132 c⁄° *
	toutSåög
, 
	töt32_t
 
	toutLígth
,

133 c⁄° 
	tUCh¨
 *
	tloˇlSåög
, 
	töt32_t
 
	tloˇlLígth
);

146 
	tU_CALLCONV


147 
	tUD©aPrötEº‹
(*
	tc⁄ãxt
, c⁄° *
	tfmt
, 
	tva_li°
 
	t¨gs
);

149 
	sUD©aSw≠≥r
 {

151 
UBoﬁ
 
	möIsBigEndün
;

153 
uöt8_t
 
	möCh¨£t
;

155 
UBoﬁ
 
	moutIsBigEndün
;

157 
uöt8_t
 
	moutCh¨£t
;

162 
UD©aRódUI¡16
 *
	mªadUI¡16
;

164 
UD©aRódUI¡32
 *
	mªadUI¡32
;

166 
UD©aCom∑ªInvCh¨s
 *
	mcom∑ªInvCh¨s
;

171 
UD©aWrôeUI¡16
 *
	mwrôeUI¡16
;

173 
UD©aWrôeUI¡32
 *
	mwrôeUI¡32
;

178 
UD©aSw≠Fn
 *
	msw≠Aºay16
;

180 
UD©aSw≠Fn
 *
	msw≠Aºay32
;

182 
UD©aSw≠Fn
 *
	msw≠InvCh¨s
;

189 
UD©aPrötEº‹
 *
	m¥ötEº‹
;

191 *
	m¥ötEº‹C⁄ãxt
;

194 
U_CDECL_END


196 
U_CAPI
 
UD©aSw≠≥r
 * 
U_EXPORT2


197 
ud©a_›íSw≠≥r
(
UBoﬁ
 
öIsBigEndün
, 
uöt8_t
 
öCh¨£t
,

198 
UBoﬁ
 
outIsBigEndün
, 
uöt8_t
 
outCh¨£t
,

199 
UEº‹Code
 *
pEº‹Code
);

210 
U_CAPI
 
UD©aSw≠≥r
 * 
U_EXPORT2


211 
ud©a_›íSw≠≥rF‹I≈utD©a
(c⁄° *
d©a
, 
öt32_t
 
Àngth
,

212 
UBoﬁ
 
outIsBigEndün
, 
uöt8_t
 
outCh¨£t
,

213 
UEº‹Code
 *
pEº‹Code
);

215 
U_CAPI
 
U_EXPORT2


216 
ud©a_˛o£Sw≠≥r
(
UD©aSw≠≥r
 *
ds
);

227 
U_CAPI
 
öt32_t
 
U_EXPORT2


228 
ud©a_sw≠D©aHódî
(c⁄° 
UD©aSw≠≥r
 *
ds
,

229 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

230 
UEº‹Code
 *
pEº‹Code
);

236 
U_CAPI
 
öt16_t
 
U_EXPORT2


237 
ud©a_ªadI¡16
(c⁄° 
UD©aSw≠≥r
 *
ds
, 
öt16_t
 
x
);

243 
U_CAPI
 
öt32_t
 
U_EXPORT2


244 
ud©a_ªadI¡32
(c⁄° 
UD©aSw≠≥r
 *
ds
, 
öt32_t
 
x
);

251 
U_CAPI
 
öt32_t
 
U_EXPORT2


252 
ud©a_sw≠InvSåögBlock
(c⁄° 
UD©aSw≠≥r
 *
ds
,

253 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

254 
UEº‹Code
 *
pEº‹Code
);

256 
U_CAPI
 
U_EXPORT2


257 
ud©a_¥ötEº‹
(c⁄° 
UD©aSw≠≥r
 *
ds
,

258 c⁄° *
fmt
,

269 
U_CAPI
 
öt32_t
 
U_EXPORT2


270 
u¥v_ebcdicFromAscii
(c⁄° 
UD©aSw≠≥r
 *
ds
,

271 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

272 
UEº‹Code
 *
pEº‹Code
);

278 
U_CFUNC
 
öt32_t


279 
u¥v_c›yAscii
(c⁄° 
UD©aSw≠≥r
 *
ds
,

280 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

281 
UEº‹Code
 *
pEº‹Code
);

287 
U_CFUNC
 
öt32_t


288 
u¥v_asciiFromEbcdic
(c⁄° 
UD©aSw≠≥r
 *
ds
,

289 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

290 
UEº‹Code
 *
pEº‹Code
);

296 
U_CFUNC
 
öt32_t


297 
u¥v_c›yEbcdic
(c⁄° 
UD©aSw≠≥r
 *
ds
,

298 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

299 
UEº‹Code
 *
pEº‹Code
);

305 
U_CFUNC
 
öt32_t


306 
u¥v_com∑ªInvAscii
(c⁄° 
UD©aSw≠≥r
 *
ds
,

307 c⁄° *
outSåög
, 
öt32_t
 
outLígth
,

308 c⁄° 
UCh¨
 *
loˇlSåög
, 
öt32_t
 
loˇlLígth
);

314 
U_CFUNC
 
öt32_t


315 
u¥v_com∑ªInvEbcdic
(c⁄° 
UD©aSw≠≥r
 *
ds
,

316 c⁄° *
outSåög
, 
öt32_t
 
outLígth
,

317 c⁄° 
UCh¨
 *
loˇlSåög
, 
öt32_t
 
loˇlLígth
);

340 
U_CAPI
 
UD©aMem‹y
 * 
U_EXPORT2


341 
ud©a_›íSw≠
(c⁄° *
∑th
, c⁄° *
ty≥
, c⁄° *
«me
,

342 
UD©aMem‹yIsAc˚±abÀ
 *
isAc˚±abÀ
, *
isAc˚±abÀC⁄ãxt
,

343 
UD©aSw≠Fn
 *
sw≠
,

344 
UD©aPrötEº‹
 *
¥ötEº‹
, *
¥ötEº‹C⁄ãxt
,

345 
UEº‹Code
 *
pEº‹Code
);

	@uenum.c

17 
	~"unicode/putû.h
"

18 
	~"uíumimp.h
"

19 
	~"cmem‹y.h
"

23 
öt32_t
 
	mÀn
;

24 
	md©a
;

25 } 
	t_UEnumBuf„r
;

28 c⁄° 
öt32_t
 
	gPAD
 = 8;

32 * 
	$_gëBuf„r
(
UEnumî©i⁄
* 
í
, 
öt32_t
 
ˇ∑côy
) {

34 i‡(
í
->
ba£C⁄ãxt
 !
NULL
) {

35 i‡(((
_UEnumBuf„r
*Ë
í
->
ba£C⁄ãxt
)->
Àn
 < 
ˇ∑côy
) {

36 
ˇ∑côy
 +
PAD
;

37 
í
->
ba£C⁄ãxt
 = 
	`u¥v_ªÆloc
(en->baseContext,

38 (
öt32_t
Ë+ 
ˇ∑côy
);

39 i‡(
í
->
ba£C⁄ãxt
 =
NULL
) {

40  
NULL
;

42 ((
_UEnumBuf„r
*Ë
í
->
ba£C⁄ãxt
)->
Àn
 = 
ˇ∑côy
;

45 
ˇ∑côy
 +
PAD
;

46 
í
->
ba£C⁄ãxt
 = 
	`u¥v_mÆloc
((
öt32_t
Ë+ 
ˇ∑côy
);

47 i‡(
í
->
ba£C⁄ãxt
 =
NULL
) {

48  
NULL
;

50 ((
_UEnumBuf„r
*Ë
í
->
ba£C⁄ãxt
)->
Àn
 = 
ˇ∑côy
;

53  (*Ë& ((
_UEnumBuf„r
*Ë
í
->
ba£C⁄ãxt
)->
d©a
;

54 
	}
}

56 
U_CAPI
 
U_EXPORT2


57 
	$uíum_˛o£
(
UEnumî©i⁄
* 
í
)

59 i‡(
í
) {

60 i‡(
í
->
˛o£
 !
NULL
) {

61 i‡(
í
->
ba£C⁄ãxt
) {

62 
	`u¥v_‰ì
(
í
->
ba£C⁄ãxt
);

64 
í
->
	`˛o£
(en);

66 
	`u¥v_‰ì
(
í
);

69 
	}
}

71 
U_CAPI
 
öt32_t
 
U_EXPORT2


72 
	$uíum_cou¡
(
UEnumî©i⁄
* 
í
, 
UEº‹Code
* 
°©us
)

74 i‡(!
í
 || 
	`U_FAILURE
(*
°©us
)) {

77 i‡(
í
->
cou¡
 !
NULL
) {

78  
í
->
	`cou¡
”n, 
°©us
);

80 *
°©us
 = 
U_UNSUPPORTED_ERROR
;

83 
	}
}

86 
U_CAPI
 c⁄° 
UCh¨
* 
U_EXPORT2


87 
	$uíum_u√xtDeÁu…
(
UEnumî©i⁄
* 
í
,

88 
öt32_t
* 
ªsu…Lígth
,

89 
UEº‹Code
* 
°©us
)

91 
UCh¨
 *
u°r
 = 
NULL
;

92 
öt32_t
 
Àn
 = 0;

93 i‡(
í
->
√xt
 !
NULL
) {

94 c⁄° *
c°r
 = 
í
->
	`√xt
”n, &
Àn
, 
°©us
);

95 i‡(
c°r
 !
NULL
) {

96 
u°r
 = (
UCh¨
*Ë
	`_gëBuf„r
(
í
, (
Àn
+1) * (UChar));

97 i‡(
u°r
 =
NULL
) {

98 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

100 
	`u_ch¨sToUCh¨s
(
c°r
, 
u°r
, 
Àn
+1);

104 *
°©us
 = 
U_UNSUPPORTED_ERROR
;

106 i‡(
ªsu…Lígth
) {

107 *
ªsu…Lígth
 = 
Àn
;

109  
u°r
;

110 
	}
}

113 
U_CAPI
 c⁄° * 
U_EXPORT2


114 
	$uíum_√xtDeÁu…
(
UEnumî©i⁄
* 
í
,

115 
öt32_t
* 
ªsu…Lígth
,

116 
UEº‹Code
* 
°©us
)

118 i‡(
í
->
uNext
 !
NULL
) {

119 *
ãmpCh¨VÆ
;

120 c⁄° 
UCh¨
 *
ãmpUCh¨VÆ
 = 
í
->
	`uNext
”n, 
ªsu…Lígth
, 
°©us
);

121 i‡(
ãmpUCh¨VÆ
 =
NULL
) {

122  
NULL
;

124 
ãmpCh¨VÆ
 = (*)

125 
	`_gëBuf„r
(
í
, (*
ªsu…Lígth
+1) * ());

126 i‡(!
ãmpCh¨VÆ
) {

127 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

128  
NULL
;

130 
	`u_UCh¨sToCh¨s
(
ãmpUCh¨VÆ
, 
ãmpCh¨VÆ
, *
ªsu…Lígth
 + 1);

131  
ãmpCh¨VÆ
;

133 *
°©us
 = 
U_UNSUPPORTED_ERROR
;

134  
NULL
;

136 
	}
}

138 
U_CAPI
 c⁄° 
UCh¨
* 
U_EXPORT2


139 
	$uíum_u√xt
(
UEnumî©i⁄
* 
í
,

140 
öt32_t
* 
ªsu…Lígth
,

141 
UEº‹Code
* 
°©us
)

143 i‡(!
í
 || 
	`U_FAILURE
(*
°©us
)) {

144  
NULL
;

146 i‡(
í
->
uNext
 !
NULL
) {

147  
í
->
	`uNext
”n, 
ªsu…Lígth
, 
°©us
);

149 *
°©us
 = 
U_UNSUPPORTED_ERROR
;

150  
NULL
;

152 
	}
}

154 
U_CAPI
 c⁄° * 
U_EXPORT2


155 
	$uíum_√xt
(
UEnumî©i⁄
* 
í
,

156 
öt32_t
* 
ªsu…Lígth
,

157 
UEº‹Code
* 
°©us
)

159 i‡(!
í
 || 
	`U_FAILURE
(*
°©us
)) {

160  
NULL
;

162 i‡(
í
->
√xt
 !
NULL
) {

163  
í
->
	`√xt
”n, 
ªsu…Lígth
, 
°©us
);

165 *
°©us
 = 
U_UNSUPPORTED_ERROR
;

166  
NULL
;

168 
	}
}

170 
U_CAPI
 
U_EXPORT2


171 
	$uíum_ª£t
(
UEnumî©i⁄
* 
í
, 
UEº‹Code
* 
°©us
)

173 i‡(!
í
 || 
	`U_FAILURE
(*
°©us
)) {

176 i‡(
í
->
ª£t
 !
NULL
) {

177 
í
->
	`ª£t
”n, 
°©us
);

179 *
°©us
 = 
U_UNSUPPORTED_ERROR
;

181 
	}
}

	@uenumimp.h

17 #i‚de‡
__UENUMIMP_H


18 
	#__UENUMIMP_H


	)

20 
	~"unicode/uíum.h
"

22 
U_CDECL_BEGIN


42 
	tU_CALLCONV


43 
	tUEnumClo£
(
	tUEnumî©i⁄
 *
	tí
);

55 
öt32_t
 
	tU_CALLCONV


56 
	tUEnumCou¡
(
	tUEnumî©i⁄
 *
	tí
, 
	tUEº‹Code
 *
	t°©us
);

70 c⁄° 
	tUCh¨
* 
	tU_CALLCONV


71 
	tUEnumUNext
(
	tUEnumî©i⁄
* 
	tí
,

72 
	töt32_t
* 
	tªsu…Lígth
,

73 
	tUEº‹Code
* 
	t°©us
);

87 c⁄° * 
	tU_CALLCONV


88 
	tUEnumNext
(
	tUEnumî©i⁄
* 
	tí
,

89 
	töt32_t
* 
	tªsu…Lígth
,

90 
	tUEº‹Code
* 
	t°©us
);

101 
	tU_CALLCONV


102 
	tUEnumRe£t
(
	tUEnumî©i⁄
* 
	tí
,

103 
	tUEº‹Code
* 
	t°©us
);

106 
	sUEnumî©i⁄
 {

108 *
	mba£C⁄ãxt
;

111 *
	mc⁄ãxt
;

118 
UEnumClo£
 *
	m˛o£
;

120 
UEnumCou¡
 *
	mcou¡
;

122 
UEnumUNext
 *
	muNext
;

124 
UEnumNext
 *
	m√xt
;

126 
UEnumRe£t
 *
	mª£t
;

129 
U_CDECL_END


137 
U_CAPI
 c⁄° 
UCh¨
* 
U_EXPORT2


138 
uíum_u√xtDeÁu…
(
UEnumî©i⁄
* 
í
,

139 
öt32_t
* 
ªsu…Lígth
,

140 
UEº‹Code
* 
°©us
);

148 
U_CAPI
 c⁄° * 
U_EXPORT2


149 
uíum_√xtDeÁu…
(
UEnumî©i⁄
* 
í
,

150 
öt32_t
* 
ªsu…Lígth
,

151 
UEº‹Code
* 
°©us
);

	@uhash.c

13 
	~"uhash.h
"

14 
	~"unicode/u°rög.h
"

15 
	~"c°rög.h
"

16 
	~"cmem‹y.h
"

17 
	~"uas£π.h
"

78 c⁄° 
öt32_t
 
	gPRIMES
[] = {

85 
	#PRIMES_LENGTH
 ((
PRIMES
Ë/ (PRIMES[0]))

	)

86 
	#DEFAULT_PRIME_INDEX
 3

	)

94 c⁄° 
	gRESIZE_POLICY_RATIO_TABLE
[6] = {

112 
	#HASH_DELETED
 ((
öt32_t
Ë0x80000000)

	)

113 
	#HASH_EMPTY
 ((
öt32_t
Ë
HASH_DELETED
 + 1)

	)

115 
	#IS_EMPTY_OR_DELETED
(
x
Ë((xË< 0)

	)

119 
	#HASH_DELETE_KEY_VALUE
(
hash
, 
keypoöãr
, 
vÆuïoöãr
) \

120 i‡(
hash
->
keyDñëî
 !
NULL
 && 
keypoöãr
 != NULL) { \

121 (*
hash
->
keyDñëî
)(
keypoöãr
); \

123 i‡(
hash
->
vÆueDñëî
 !
NULL
 && 
vÆuïoöãr
 != NULL) { \

124 (*
hash
->
vÆueDñëî
)(
vÆuïoöãr
); \

125 }

	)

132 
	#HINT_KEY_POINTER
 (1)

	)

133 
	#HINT_VALUE_POINTER
 (2)

	)

139 
UHashTok


140 
	$_uhash_£tEÀmít
(
UHashèbÀ
 *
hash
, 
UHashEÀmít
* 
e
,

141 
öt32_t
 
hashcode
,

142 
UHashTok
 
key
, UHashTok 
vÆue
, 
öt8_t
 
höt
) {

144 
UHashTok
 
ﬁdVÆue
 = 
e
->
vÆue
;

145 i‡(
hash
->
keyDñëî
 !
NULL
 && 
e
->
key
.
poöãr
 != NULL &&

146 
e
->
key
.
poöãr
 != key.pointer) {

147 (*
hash
->
keyDñëî
)(
e
->
key
.
poöãr
);

149 i‡(
hash
->
vÆueDñëî
 !
NULL
) {

150 i‡(
ﬁdVÆue
.
poöãr
 !
NULL
 &&

151 
ﬁdVÆue
.
poöãr
 !
vÆue
.pointer) {

152 (*
hash
->
vÆueDñëî
)(
ﬁdVÆue
.
poöãr
);

154 
ﬁdVÆue
.
poöãr
 = 
NULL
;

162 i‡(
höt
 & 
HINT_KEY_POINTER
) {

163 
e
->
key
.
poöãr
 = key.pointer;

165 
e
->
key
 = key;

167 i‡(
höt
 & 
HINT_VALUE_POINTER
) {

168 
e
->
vÆue
.
poöãr
 = value.pointer;

170 
e
->
vÆue
 = value;

172 
e
->
hashcode
 = hashcode;

173  
ﬁdVÆue
;

174 
	}
}

179 
UHashTok


180 
	$_uhash_öã∫ÆRemoveEÀmít
(
UHashèbÀ
 *
hash
, 
UHashEÀmít
* 
e
) {

181 
UHashTok
 
em±y
;

182 
	`U_ASSERT
(!
	`IS_EMPTY_OR_DELETED
(
e
->
hashcode
));

183 --
hash
->
cou¡
;

184 
em±y
.
poöãr
 = 
NULL
;Ém±y.
öãgî
 = 0;

185  
	`_uhash_£tEÀmít
(
hash
, 
e
, 
HASH_DELETED
, 
em±y
,Émpty, 0);

186 
	}
}

189 
	$_uhash_öã∫ÆSëResizePﬁicy
(
UHashèbÀ
 *
hash
, 
UHashResizePﬁicy
 
pﬁicy
) {

190 
	`U_ASSERT
(
hash
 !
NULL
);

191 
	`U_ASSERT
(((
öt32_t
)
pﬁicy
) >= 0);

192 
	`U_ASSERT
(((
öt32_t
)
pﬁicy
) < 3);

193 
hash
->
lowW©îR©io
 = 
RESIZE_POLICY_RATIO_TABLE
[
pﬁicy
 * 2];

194 
hash
->
highW©îR©io
 = 
RESIZE_POLICY_RATIO_TABLE
[
pﬁicy
 * 2 + 1];

195 
	}
}

207 
	$_uhash_Æloˇã
(
UHashèbÀ
 *
hash
,

208 
öt32_t
 
¥imeIndex
,

209 
UEº‹Code
 *
°©us
) {

211 
UHashEÀmít
 *
p
, *
limô
;

212 
UHashTok
 
em±ytok
;

214 i‡(
	`U_FAILURE
(*
°©us
)) ;

216 
	`U_ASSERT
(
¥imeIndex
 >0 &&ÖrimeIndex < 
PRIMES_LENGTH
);

218 
hash
->
¥imeIndex
 =ÖrimeIndex;

219 
hash
->
Àngth
 = 
PRIMES
[
¥imeIndex
];

221 
p
 = 
hash
->
ñemíts
 = (
UHashEÀmít
*)

222 
	`u¥v_mÆloc
((
UHashEÀmít
Ë* 
hash
->
Àngth
);

224 i‡(
hash
->
ñemíts
 =
NULL
) {

225 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

229 
em±ytok
.
poöãr
 = 
NULL
;

230 
em±ytok
.
öãgî
 = 0;

232 
limô
 = 
p
 + 
hash
->
Àngth
;

233 
p
 < 
limô
) {

234 
p
->
key
 = 
em±ytok
;

235 
p
->
vÆue
 = 
em±ytok
;

236 
p
->
hashcode
 = 
HASH_EMPTY
;

237 ++
p
;

240 
hash
->
cou¡
 = 0;

241 
hash
->
lowW©îM¨k
 = (
öt32_t
)(hash->
Àngth
 * hash->
lowW©îR©io
);

242 
hash
->
highW©îM¨k
 = (
öt32_t
)(hash->
Àngth
 * hash->
highW©îR©io
);

243 
	}
}

245 
UHashèbÀ
*

246 
	$_uhash_öô
(
UHashèbÀ
 *
ªsu…
,

247 
UHashFun˘i⁄
 *
keyHash
,

248 
UKeyCom∑øt‹
 *
keyComp
,

249 
UVÆueCom∑øt‹
 *
vÆueComp
,

250 
öt32_t
 
¥imeIndex
,

251 
UEº‹Code
 *
°©us
)

253 i‡(
	`U_FAILURE
(*
°©us
)Ë 
NULL
;

254 
	`U_ASSERT
(
keyHash
 !
NULL
);

255 
	`U_ASSERT
(
keyComp
 !
NULL
);

257 
ªsu…
->
keyHashî
 = 
keyHash
;

258 
ªsu…
->
keyCom∑øt‹
 = 
keyComp
;

259 
ªsu…
->
vÆueCom∑øt‹
 = 
vÆueComp
;

260 
ªsu…
->
keyDñëî
 = 
NULL
;

261 
ªsu…
->
vÆueDñëî
 = 
NULL
;

262 
ªsu…
->
Æloˇãd
 = 
FALSE
;

263 
	`_uhash_öã∫ÆSëResizePﬁicy
(
ªsu…
, 
U_GROW
);

265 
	`_uhash_Æloˇã
(
ªsu…
, 
¥imeIndex
, 
°©us
);

267 i‡(
	`U_FAILURE
(*
°©us
)) {

268  
NULL
;

271  
ªsu…
;

272 
	}
}

274 
UHashèbÀ
*

275 
	$_uhash_¸óã
(
UHashFun˘i⁄
 *
keyHash
,

276 
UKeyCom∑øt‹
 *
keyComp
,

277 
UVÆueCom∑øt‹
 *
vÆueComp
,

278 
öt32_t
 
¥imeIndex
,

279 
UEº‹Code
 *
°©us
) {

280 
UHashèbÀ
 *
ªsu…
;

282 i‡(
	`U_FAILURE
(*
°©us
)Ë 
NULL
;

284 
ªsu…
 = (
UHashèbÀ
*Ë
	`u¥v_mÆloc
((UHashtable));

285 i‡(
ªsu…
 =
NULL
) {

286 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

287  
NULL
;

290 
	`_uhash_öô
(
ªsu…
, 
keyHash
, 
keyComp
, 
vÆueComp
, 
¥imeIndex
, 
°©us
);

291 
ªsu…
->
Æloˇãd
 = 
TRUE
;

293 i‡(
	`U_FAILURE
(*
°©us
)) {

294 
	`u¥v_‰ì
(
ªsu…
);

295  
NULL
;

298  
ªsu…
;

299 
	}
}

329 
UHashEÀmít
*

330 
	$_uhash_föd
(c⁄° 
UHashèbÀ
 *
hash
, 
UHashTok
 
key
,

331 
öt32_t
 
hashcode
) {

333 
öt32_t
 
fú°Dñëed
 = -1;

334 
öt32_t
 
theIndex
, 
°¨tIndex
;

335 
öt32_t
 
jump
 = 0;

336 
öt32_t
 
èbÀHash
;

337 
UHashEÀmít
 *
ñemíts
 = 
hash
->elements;

339 
hashcode
 &= 0x7FFFFFFF;

340 
°¨tIndex
 = 
theIndex
 = (
hashcode
 ^ 0x4000000Ë% 
hash
->
Àngth
;

343 
èbÀHash
 = 
ñemíts
[
theIndex
].
hashcode
;

344 i‡(
èbÀHash
 =
hashcode
) {

345 i‡((*
hash
->
keyCom∑øt‹
)(
key
, 
ñemíts
[
theIndex
].key)) {

346  &(
ñemíts
[
theIndex
]);

348 } i‡(!
	`IS_EMPTY_OR_DELETED
(
èbÀHash
)) {

353 } i‡(
èbÀHash
 =
HASH_EMPTY
) {

355 } i‡(
fú°Dñëed
 < 0) {

356 
fú°Dñëed
 = 
theIndex
;

358 i‡(
jump
 == 0) {

363 
jump
 = (
hashcode
 % (
hash
->
Àngth
 - 1)) + 1;

365 
theIndex
 = (theIndex + 
jump
Ë% 
hash
->
Àngth
;

366 } 
theIndex
 !
°¨tIndex
);

368 i‡(
fú°Dñëed
 >= 0) {

369 
theIndex
 = 
fú°Dñëed
;

370 } i‡(
èbÀHash
 !
HASH_EMPTY
) {

376 
	`U_ASSERT
(
FALSE
);

377  
NULL
;

379  &(
ñemíts
[
theIndex
]);

380 
	}
}

392 
	$_uhash_ªhash
(
UHashèbÀ
 *
hash
, 
UEº‹Code
 *
°©us
) {

394 
UHashEÀmít
 *
ﬁd
 = 
hash
->
ñemíts
;

395 
öt32_t
 
ﬁdLígth
 = 
hash
->
Àngth
;

396 
öt32_t
 
√wPrimeIndex
 = 
hash
->
¥imeIndex
;

397 
öt32_t
 
i
;

399 i‡(
hash
->
cou¡
 > hash->
highW©îM¨k
) {

400 i‡(++
√wPrimeIndex
 >
PRIMES_LENGTH
) {

403 } i‡(
hash
->
cou¡
 < hash->
lowW©îM¨k
) {

404 i‡(--
√wPrimeIndex
 < 0) {

411 
	`_uhash_Æloˇã
(
hash
, 
√wPrimeIndex
, 
°©us
);

413 i‡(
	`U_FAILURE
(*
°©us
)) {

414 
hash
->
ñemíts
 = 
ﬁd
;

415 
hash
->
Àngth
 = 
ﬁdLígth
;

419 
i
 = 
ﬁdLígth
 - 1; i >= 0; --i) {

420 i‡(!
	`IS_EMPTY_OR_DELETED
(
ﬁd
[
i
].
hashcode
)) {

421 
UHashEÀmít
 *
e
 = 
	`_uhash_föd
(
hash
, 
ﬁd
[
i
].
key
, old[i].
hashcode
);

422 
	`U_ASSERT
(
e
 !
NULL
);

423 
	`U_ASSERT
(
e
->
hashcode
 =
HASH_EMPTY
);

424 
e
->
key
 = 
ﬁd
[
i
].key;

425 
e
->
vÆue
 = 
ﬁd
[
i
].value;

426 
e
->
hashcode
 = 
ﬁd
[
i
].hashcode;

427 ++
hash
->
cou¡
;

431 
	`u¥v_‰ì
(
ﬁd
);

432 
	}
}

434 
UHashTok


435 
	$_uhash_ªmove
(
UHashèbÀ
 *
hash
,

436 
UHashTok
 
key
) {

444 
UHashTok
 
ªsu…
;

445 
UHashEÀmít
* 
e
 = 
	`_uhash_föd
(
hash
, 
key
, hash->
	`keyHashî
(key));

446 
	`U_ASSERT
(
e
 !
NULL
);

447 
ªsu…
.
poöãr
 = 
NULL
;

448 
ªsu…
.
öãgî
 = 0;

449 i‡(!
	`IS_EMPTY_OR_DELETED
(
e
->
hashcode
)) {

450 
ªsu…
 = 
	`_uhash_öã∫ÆRemoveEÀmít
(
hash
, 
e
);

451 i‡(
hash
->
cou¡
 < hash->
lowW©îM¨k
) {

452 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

453 
	`_uhash_ªhash
(
hash
, &
°©us
);

456  
ªsu…
;

457 
	}
}

459 
UHashTok


460 
	$_uhash_put
(
UHashèbÀ
 *
hash
,

461 
UHashTok
 
key
,

462 
UHashTok
 
vÆue
,

463 
öt8_t
 
höt
,

464 
UEº‹Code
 *
°©us
) {

471 
öt32_t
 
hashcode
;

472 
UHashEÀmít
* 
e
;

473 
UHashTok
 
em±ytok
;

475 i‡(
	`U_FAILURE
(*
°©us
)) {

476 
îr
;

478 
	`U_ASSERT
(
hash
 !
NULL
);

480 i‡((
höt
 & 
HINT_VALUE_POINTER
Ë&& 
vÆue
.
poöãr
 =
NULL
) {

484  
	`_uhash_ªmove
(
hash
, 
key
);

486 i‡(
hash
->
cou¡
 > hash->
highW©îM¨k
) {

487 
	`_uhash_ªhash
(
hash
, 
°©us
);

488 i‡(
	`U_FAILURE
(*
°©us
)) {

489 
îr
;

493 
hashcode
 = (*
hash
->
keyHashî
)(
key
);

494 
e
 = 
	`_uhash_föd
(
hash
, 
key
, 
hashcode
);

495 
	`U_ASSERT
(
e
 !
NULL
);

497 i‡(
	`IS_EMPTY_OR_DELETED
(
e
->
hashcode
)) {

505 ++
hash
->
cou¡
;

506 i‡(
hash
->
cou¡
 =hash->
Àngth
) {

508 --
hash
->
cou¡
;

509 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

510 
îr
;

518  
	`_uhash_£tEÀmít
(
hash
, 
e
, 
hashcode
 & 0x7FFFFFFF, 
key
, 
vÆue
, 
höt
);

520 
îr
:

525 
	`HASH_DELETE_KEY_VALUE
(
hash
, 
key
.
poöãr
, 
vÆue
.pointer);

526 
em±ytok
.
poöãr
 = 
NULL
;Ém±ytok.
öãgî
 = 0;

527  
em±ytok
;

528 
	}
}

535 
U_CAPI
 
UHashèbÀ
* 
U_EXPORT2


536 
	$uhash_›í
(
UHashFun˘i⁄
 *
keyHash
,

537 
UKeyCom∑øt‹
 *
keyComp
,

538 
UVÆueCom∑øt‹
 *
vÆueComp
,

539 
UEº‹Code
 *
°©us
) {

541  
	`_uhash_¸óã
(
keyHash
, 
keyComp
, 
vÆueComp
, 
DEFAULT_PRIME_INDEX
, 
°©us
);

542 
	}
}

544 
U_CAPI
 
UHashèbÀ
* 
U_EXPORT2


545 
	$uhash_›íSize
(
UHashFun˘i⁄
 *
keyHash
,

546 
UKeyCom∑øt‹
 *
keyComp
,

547 
UVÆueCom∑øt‹
 *
vÆueComp
,

548 
öt32_t
 
size
,

549 
UEº‹Code
 *
°©us
) {

552 
öt32_t
 
i
 = 0;

553 
i
<(
PRIMES_LENGTH
-1Ë&& 
PRIMES
[i]<
size
) {

554 ++
i
;

557  
	`_uhash_¸óã
(
keyHash
, 
keyComp
, 
vÆueComp
, 
i
, 
°©us
);

558 
	}
}

560 
U_CAPI
 
UHashèbÀ
* 
U_EXPORT2


561 
	$uhash_öô
(
UHashèbÀ
 *
fûlöResu…
,

562 
UHashFun˘i⁄
 *
keyHash
,

563 
UKeyCom∑øt‹
 *
keyComp
,

564 
UVÆueCom∑øt‹
 *
vÆueComp
,

565 
UEº‹Code
 *
°©us
) {

567  
	`_uhash_öô
(
fûlöResu…
, 
keyHash
, 
keyComp
, 
vÆueComp
, 
DEFAULT_PRIME_INDEX
, 
°©us
);

568 
	}
}

570 
U_CAPI
 
U_EXPORT2


571 
	$uhash_˛o£
(
UHashèbÀ
 *
hash
) {

572 i‡(
hash
 =
NULL
) {

575 i‡(
hash
->
ñemíts
 !
NULL
) {

576 i‡(
hash
->
keyDñëî
 !
NULL
 || hash->
vÆueDñëî
 != NULL) {

577 
öt32_t
 
pos
=-1;

578 
UHashEÀmít
 *
e
;

579 (
e
 = (
UHashEÀmít
*Ë
	`uhash_√xtEÀmít
(
hash
, &
pos
)Ë!
NULL
) {

580 
	`HASH_DELETE_KEY_VALUE
(
hash
, 
e
->
key
.
poöãr
,É->
vÆue
.pointer);

583 
	`u¥v_‰ì
(
hash
->
ñemíts
);

584 
hash
->
ñemíts
 = 
NULL
;

586 i‡(
hash
->
Æloˇãd
) {

587 
	`u¥v_‰ì
(
hash
);

589 
	}
}

591 
U_CAPI
 
UHashFun˘i⁄
 *
U_EXPORT2


592 
	$uhash_£tKeyHashî
(
UHashèbÀ
 *
hash
, 
UHashFun˘i⁄
 *
‚
) {

593 
UHashFun˘i⁄
 *
ªsu…
 = 
hash
->
keyHashî
;

594 
hash
->
keyHashî
 = 
‚
;

595  
ªsu…
;

596 
	}
}

598 
U_CAPI
 
UKeyCom∑øt‹
 *
U_EXPORT2


599 
	$uhash_£tKeyCom∑øt‹
(
UHashèbÀ
 *
hash
, 
UKeyCom∑øt‹
 *
‚
) {

600 
UKeyCom∑øt‹
 *
ªsu…
 = 
hash
->
keyCom∑øt‹
;

601 
hash
->
keyCom∑øt‹
 = 
‚
;

602  
ªsu…
;

603 
	}
}

604 
U_CAPI
 
UVÆueCom∑øt‹
 *
U_EXPORT2


605 
	$uhash_£tVÆueCom∑øt‹
(
UHashèbÀ
 *
hash
, 
UVÆueCom∑øt‹
 *
‚
){

606 
UVÆueCom∑øt‹
 *
ªsu…
 = 
hash
->
vÆueCom∑øt‹
;

607 
hash
->
vÆueCom∑øt‹
 = 
‚
;

608  
ªsu…
;

609 
	}
}

611 
U_CAPI
 
UObje˘Dñëî
 *
U_EXPORT2


612 
	$uhash_£tKeyDñëî
(
UHashèbÀ
 *
hash
, 
UObje˘Dñëî
 *
‚
) {

613 
UObje˘Dñëî
 *
ªsu…
 = 
hash
->
keyDñëî
;

614 
hash
->
keyDñëî
 = 
‚
;

615  
ªsu…
;

616 
	}
}

618 
U_CAPI
 
UObje˘Dñëî
 *
U_EXPORT2


619 
	$uhash_£tVÆueDñëî
(
UHashèbÀ
 *
hash
, 
UObje˘Dñëî
 *
‚
) {

620 
UObje˘Dñëî
 *
ªsu…
 = 
hash
->
vÆueDñëî
;

621 
hash
->
vÆueDñëî
 = 
‚
;

622  
ªsu…
;

623 
	}
}

625 
U_CAPI
 
U_EXPORT2


626 
	$uhash_£tResizePﬁicy
(
UHashèbÀ
 *
hash
, 
UHashResizePﬁicy
 
pﬁicy
) {

627 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

628 
	`_uhash_öã∫ÆSëResizePﬁicy
(
hash
, 
pﬁicy
);

629 
hash
->
lowW©îM¨k
 = (
öt32_t
)(hash->
Àngth
 * hash->
lowW©îR©io
);

630 
hash
->
highW©îM¨k
 = (
öt32_t
)(hash->
Àngth
 * hash->
highW©îR©io
);

631 
	`_uhash_ªhash
(
hash
, &
°©us
);

632 
	}
}

634 
U_CAPI
 
öt32_t
 
U_EXPORT2


635 
	$uhash_cou¡
(c⁄° 
UHashèbÀ
 *
hash
) {

636  
hash
->
cou¡
;

637 
	}
}

639 
U_CAPI
 * 
U_EXPORT2


640 
	$uhash_gë
(c⁄° 
UHashèbÀ
 *
hash
,

641 c⁄° * 
key
) {

642 
UHashTok
 
keyhﬁdî
;

643 
keyhﬁdî
.
poöãr
 = (*Ë
key
;

644  
	`_uhash_föd
(
hash
, 
keyhﬁdî
, hash->
	`keyHashî
(keyhﬁdî))->
vÆue
.
poöãr
;

645 
	}
}

647 
U_CAPI
 * 
U_EXPORT2


648 
	$uhash_igë
(c⁄° 
UHashèbÀ
 *
hash
,

649 
öt32_t
 
key
) {

650 
UHashTok
 
keyhﬁdî
;

651 
keyhﬁdî
.
öãgî
 = 
key
;

652  
	`_uhash_föd
(
hash
, 
keyhﬁdî
, hash->
	`keyHashî
(keyhﬁdî))->
vÆue
.
poöãr
;

653 
	}
}

655 
U_CAPI
 
öt32_t
 
U_EXPORT2


656 
	$uhash_gëi
(c⁄° 
UHashèbÀ
 *
hash
,

657 c⁄° * 
key
) {

658 
UHashTok
 
keyhﬁdî
;

659 
keyhﬁdî
.
poöãr
 = (*Ë
key
;

660  
	`_uhash_föd
(
hash
, 
keyhﬁdî
, hash->
	`keyHashî
(keyhﬁdî))->
vÆue
.
öãgî
;

661 
	}
}

663 
U_CAPI
 
öt32_t
 
U_EXPORT2


664 
	$uhash_igëi
(c⁄° 
UHashèbÀ
 *
hash
,

665 
öt32_t
 
key
) {

666 
UHashTok
 
keyhﬁdî
;

667 
keyhﬁdî
.
öãgî
 = 
key
;

668  
	`_uhash_föd
(
hash
, 
keyhﬁdî
, hash->
	`keyHashî
(keyhﬁdî))->
vÆue
.
öãgî
;

669 
	}
}

671 
U_CAPI
 * 
U_EXPORT2


672 
	$uhash_put
(
UHashèbÀ
 *
hash
,

673 * 
key
,

674 * 
vÆue
,

675 
UEº‹Code
 *
°©us
) {

676 
UHashTok
 
keyhﬁdî
, 
vÆuehﬁdî
;

677 
keyhﬁdî
.
poöãr
 = 
key
;

678 
vÆuehﬁdî
.
poöãr
 = 
vÆue
;

679  
	`_uhash_put
(
hash
, 
keyhﬁdî
, 
vÆuehﬁdî
,

680 
HINT_KEY_POINTER
 | 
HINT_VALUE_POINTER
,

681 
°©us
).
poöãr
;

682 
	}
}

684 
U_CAPI
 * 
U_EXPORT2


685 
	$uhash_ùut
(
UHashèbÀ
 *
hash
,

686 
öt32_t
 
key
,

687 * 
vÆue
,

688 
UEº‹Code
 *
°©us
) {

689 
UHashTok
 
keyhﬁdî
, 
vÆuehﬁdî
;

690 
keyhﬁdî
.
öãgî
 = 
key
;

691 
vÆuehﬁdî
.
poöãr
 = 
vÆue
;

692  
	`_uhash_put
(
hash
, 
keyhﬁdî
, 
vÆuehﬁdî
,

693 
HINT_VALUE_POINTER
,

694 
°©us
).
poöãr
;

695 
	}
}

697 
U_CAPI
 
öt32_t
 
U_EXPORT2


698 
	$uhash_puti
(
UHashèbÀ
 *
hash
,

699 * 
key
,

700 
öt32_t
 
vÆue
,

701 
UEº‹Code
 *
°©us
) {

702 
UHashTok
 
keyhﬁdî
, 
vÆuehﬁdî
;

703 
keyhﬁdî
.
poöãr
 = 
key
;

704 
vÆuehﬁdî
.
öãgî
 = 
vÆue
;

705  
	`_uhash_put
(
hash
, 
keyhﬁdî
, 
vÆuehﬁdî
,

706 
HINT_KEY_POINTER
,

707 
°©us
).
öãgî
;

708 
	}
}

711 
U_CAPI
 
öt32_t
 
U_EXPORT2


712 
	$uhash_ùuti
(
UHashèbÀ
 *
hash
,

713 
öt32_t
 
key
,

714 
öt32_t
 
vÆue
,

715 
UEº‹Code
 *
°©us
) {

716 
UHashTok
 
keyhﬁdî
, 
vÆuehﬁdî
;

717 
keyhﬁdî
.
öãgî
 = 
key
;

718 
vÆuehﬁdî
.
öãgî
 = 
vÆue
;

719  
	`_uhash_put
(
hash
, 
keyhﬁdî
, 
vÆuehﬁdî
,

721 
°©us
).
öãgî
;

722 
	}
}

724 
U_CAPI
 * 
U_EXPORT2


725 
	$uhash_ªmove
(
UHashèbÀ
 *
hash
,

726 c⁄° * 
key
) {

727 
UHashTok
 
keyhﬁdî
;

728 
keyhﬁdî
.
poöãr
 = (*Ë
key
;

729  
	`_uhash_ªmove
(
hash
, 
keyhﬁdî
).
poöãr
;

730 
	}
}

732 
U_CAPI
 * 
U_EXPORT2


733 
	$uhash_úemove
(
UHashèbÀ
 *
hash
,

734 
öt32_t
 
key
) {

735 
UHashTok
 
keyhﬁdî
;

736 
keyhﬁdî
.
öãgî
 = 
key
;

737  
	`_uhash_ªmove
(
hash
, 
keyhﬁdî
).
poöãr
;

738 
	}
}

740 
U_CAPI
 
öt32_t
 
U_EXPORT2


741 
	$uhash_ªmovei
(
UHashèbÀ
 *
hash
,

742 c⁄° * 
key
) {

743 
UHashTok
 
keyhﬁdî
;

744 
keyhﬁdî
.
poöãr
 = (*Ë
key
;

745  
	`_uhash_ªmove
(
hash
, 
keyhﬁdî
).
öãgî
;

746 
	}
}

748 
U_CAPI
 
öt32_t
 
U_EXPORT2


749 
	$uhash_úemovei
(
UHashèbÀ
 *
hash
,

750 
öt32_t
 
key
) {

751 
UHashTok
 
keyhﬁdî
;

752 
keyhﬁdî
.
öãgî
 = 
key
;

753  
	`_uhash_ªmove
(
hash
, 
keyhﬁdî
).
öãgî
;

754 
	}
}

756 
U_CAPI
 
U_EXPORT2


757 
	$uhash_ªmoveAŒ
(
UHashèbÀ
 *
hash
) {

758 
öt32_t
 
pos
 = -1;

759 c⁄° 
UHashEÀmít
 *
e
;

760 
	`U_ASSERT
(
hash
 !
NULL
);

761 i‡(
hash
->
cou¡
 != 0) {

762 (
e
 = 
	`uhash_√xtEÀmít
(
hash
, &
pos
)Ë!
NULL
) {

763 
	`uhash_ªmoveEÀmít
(
hash
, 
e
);

766 
	`U_ASSERT
(
hash
->
cou¡
 == 0);

767 
	}
}

769 
U_CAPI
 c⁄° 
UHashEÀmít
* 
U_EXPORT2


770 
	$uhash_föd
(c⁄° 
UHashèbÀ
 *
hash
, c⁄° * 
key
) {

771 
UHashTok
 
keyhﬁdî
;

772 c⁄° 
UHashEÀmít
 *
e
;

773 
keyhﬁdî
.
poöãr
 = (*Ë
key
;

774 
e
 = 
	`_uhash_föd
(
hash
, 
keyhﬁdî
, hash->
	`keyHashî
(keyholder));

775  
	`IS_EMPTY_OR_DELETED
(
e
->
hashcode
Ë? 
NULL
 :É;

776 
	}
}

778 
U_CAPI
 c⁄° 
UHashEÀmít
* 
U_EXPORT2


779 
	$uhash_√xtEÀmít
(c⁄° 
UHashèbÀ
 *
hash
, 
öt32_t
 *
pos
) {

783 
öt32_t
 
i
;

784 
	`U_ASSERT
(
hash
 !
NULL
);

785 
i
 = *
pos
 + 1; i < 
hash
->
Àngth
; ++i) {

786 i‡(!
	`IS_EMPTY_OR_DELETED
(
hash
->
ñemíts
[
i
].
hashcode
)) {

787 *
pos
 = 
i
;

788  &(
hash
->
ñemíts
[
i
]);

793  
NULL
;

794 
	}
}

796 
U_CAPI
 * 
U_EXPORT2


797 
	$uhash_ªmoveEÀmít
(
UHashèbÀ
 *
hash
, c⁄° 
UHashEÀmít
* 
e
) {

798 
	`U_ASSERT
(
hash
 !
NULL
);

799 
	`U_ASSERT
(
e
 !
NULL
);

800 i‡(!
	`IS_EMPTY_OR_DELETED
(
e
->
hashcode
)) {

801 
UHashEÀmít
 *
n˚
 = (UHashEÀmíà*)
e
;

802  
	`_uhash_öã∫ÆRemoveEÀmít
(
hash
, 
n˚
).
poöãr
;

804  
NULL
;

805 
	}
}

844 
	#STRING_HASH
(
TYPE
, 
STR
, 
STRLEN
, 
DEREF
) \

845 
öt32_t
 
hash
 = 0; \

846 c⁄° 
TYPE
 *
p
 = (c⁄° TYPE*Ë
STR
; \

847 i‡(
p
 !
NULL
) { \

848 
öt32_t
 
Àn
 = (öt32_t)(
STRLEN
); \

849 
öt32_t
 
öc
 = ((
Àn
 - 32) / 32) + 1; \

850 c⁄° 
TYPE
 *
limô
 = 
p
 + 
Àn
; \

851 
p
<
limô
) { \

852 
hash
 = (hash * 37Ë+ 
DEREF
; \

853 
p
 +
öc
; \

856  
hash


	)

858 
U_CAPI
 
öt32_t
 
U_EXPORT2


859 
	$uhash_hashUCh¨s
(c⁄° 
UHashTok
 
key
) {

860 
	`STRING_HASH
(
UCh¨
, 
key
.
poöãr
, 
	`u_°æí
(
p
), *p);

861 
	}
}

864 
U_CAPI
 
öt32_t
 
U_EXPORT2


865 
	$uhash_hashUCh¨sN
(c⁄° 
UCh¨
 *
°r
, 
öt32_t
 
Àngth
) {

866 
	`STRING_HASH
(
UCh¨
, 
°r
, 
Àngth
, *
p
);

867 
	}
}

869 
U_CAPI
 
öt32_t
 
U_EXPORT2


870 
	$uhash_hashCh¨s
(c⁄° 
UHashTok
 
key
) {

871 
	`STRING_HASH
(
uöt8_t
, 
key
.
poöãr
, 
	`u¥v_°æí
((*)
p
), *p);

872 
	}
}

874 
U_CAPI
 
öt32_t
 
U_EXPORT2


875 
	$uhash_hashICh¨s
(c⁄° 
UHashTok
 
key
) {

876 
	`STRING_HASH
(
uöt8_t
, 
key
.
poöãr
, 
	`u¥v_°æí
((*)
p
), 
	`u¥v_tﬁowî
(*p));

877 
	}
}

879 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


880 
	$uhash_equÆs
(c⁄° 
UHashèbÀ
* 
hash1
, c⁄° UHashèbÀ* 
hash2
){

882 
öt32_t
 
cou¡1
, 
cou¡2
, 
pos
, 
i
;

884 if(
hash1
==
hash2
){

885  
TRUE
;

896 i‡(
hash1
==
NULL
 || 
hash2
==NULL ||

897 
hash1
->
keyCom∑øt‹
 !
hash2
->keyComparator ||

898 
hash1
->
vÆueCom∑øt‹
 !
hash2
->valueComparator ||

899 
hash1
->
vÆueCom∑øt‹
 =
NULL
)

905  
FALSE
;

908 
cou¡1
 = 
	`uhash_cou¡
(
hash1
);

909 
cou¡2
 = 
	`uhash_cou¡
(
hash2
);

910 if(
cou¡1
!=
cou¡2
){

911  
FALSE
;

914 
pos
=-1;

915 
i
=0; i<
cou¡1
; i++){

916 c⁄° 
UHashEÀmít
* 
ñem1
 = 
	`uhash_√xtEÀmít
(
hash1
, &
pos
);

917 c⁄° 
UHashTok
 
key1
 = 
ñem1
->
key
;

918 c⁄° 
UHashTok
 
vÆ1
 = 
ñem1
->
vÆue
;

923 c⁄° 
UHashEÀmít
* 
ñem2
 = 
	`_uhash_föd
(
hash2
, 
key1
, hash2->
	`keyHashî
(key1));

924 c⁄° 
UHashTok
 
vÆ2
 = 
ñem2
->
vÆue
;

925 if(
hash1
->
	`vÆueCom∑øt‹
(
vÆ1
, 
vÆ2
)==
FALSE
){

926  
FALSE
;

929  
TRUE
;

930 
	}
}

936 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


937 
	$uhash_com∑ªUCh¨s
(c⁄° 
UHashTok
 
key1
, c⁄° UHashTok 
key2
) {

938 c⁄° 
UCh¨
 *
p1
 = (c⁄° UCh¨*Ë
key1
.
poöãr
;

939 c⁄° 
UCh¨
 *
p2
 = (c⁄° UCh¨*Ë
key2
.
poöãr
;

940 i‡(
p1
 =
p2
) {

941  
TRUE
;

943 i‡(
p1
 =
NULL
 || 
p2
 == NULL) {

944  
FALSE
;

946 *
p1
 !0 && *p1 =*
p2
) {

947 ++
p1
;

948 ++
p2
;

950  (
UBoﬁ
)(*
p1
 =*
p2
);

951 
	}
}

953 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


954 
	$uhash_com∑ªCh¨s
(c⁄° 
UHashTok
 
key1
, c⁄° UHashTok 
key2
) {

955 c⁄° *
p1
 = (c⁄° *Ë
key1
.
poöãr
;

956 c⁄° *
p2
 = (c⁄° *Ë
key2
.
poöãr
;

957 i‡(
p1
 =
p2
) {

958  
TRUE
;

960 i‡(
p1
 =
NULL
 || 
p2
 == NULL) {

961  
FALSE
;

963 *
p1
 !0 && *p1 =*
p2
) {

964 ++
p1
;

965 ++
p2
;

967  (
UBoﬁ
)(*
p1
 =*
p2
);

968 
	}
}

970 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


971 
	$uhash_com∑ªICh¨s
(c⁄° 
UHashTok
 
key1
, c⁄° UHashTok 
key2
) {

972 c⁄° *
p1
 = (c⁄° *Ë
key1
.
poöãr
;

973 c⁄° *
p2
 = (c⁄° *Ë
key2
.
poöãr
;

974 i‡(
p1
 =
p2
) {

975  
TRUE
;

977 i‡(
p1
 =
NULL
 || 
p2
 == NULL) {

978  
FALSE
;

980 *
p1
 !0 && 
	`u¥v_tﬁowî
(*p1Ë=u¥v_tﬁowî(*
p2
)) {

981 ++
p1
;

982 ++
p2
;

984  (
UBoﬁ
)(*
p1
 =*
p2
);

985 
	}
}

991 
U_CAPI
 
öt32_t
 
U_EXPORT2


992 
	$uhash_hashL⁄g
(c⁄° 
UHashTok
 
key
) {

993  
key
.
öãgî
;

994 
	}
}

996 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


997 
	$uhash_com∑ªL⁄g
(c⁄° 
UHashTok
 
key1
, c⁄° UHashTok 
key2
) {

998  (
UBoﬁ
)(
key1
.
öãgî
 =
key2
.integer);

999 
	}
}

1005 
U_CAPI
 
U_EXPORT2


1006 
	$uhash_‰ìBlock
(*
obj
) {

1007 
	`u¥v_‰ì
(
obj
);

1008 
	}
}

	@uhash.h

13 #i‚de‡
UHASH_H


14 
	#UHASH_H


	)

16 
	~"unicode/uty≥s.h
"

76 
U_CDECL_BEGIN


88 
	uUHashTok
 {

89 * 
	mpoöãr
;

90 
öt32_t
 
	möãgî
;

92 
UHashTok
 
	tUHashTok
;

97 
	sUHashEÀmít
 {

99 
öt32_t
 
	mhashcode
;

100 
UHashTok
 
	mvÆue
;

101 
UHashTok
 
	mkey
;

103 
UHashEÀmít
 
	tUHashEÀmít
;

110 
öt32_t
 
	tU_CALLCONV
 
	tUHashFun˘i⁄
(c⁄° 
	tUHashTok
 
	tkey
);

118 
UBoﬁ
 
	tU_CALLCONV
 
	tUKeyCom∑øt‹
(c⁄° 
	tUHashTok
 
	tkey1
,

119 c⁄° 
	tUHashTok
 
	tkey2
);

126 
UBoﬁ
 
	tU_CALLCONV
 
	tUVÆueCom∑øt‹
(c⁄° 
	tUHashTok
 
	tvÆ1
,

127 c⁄° 
	tUHashTok
 
	tvÆ2
);

135 
	tU_CALLCONV
 
	tUObje˘Dñëî
(* 
	tobj
);

141 
	eUHashResizePﬁicy
 {

142 
	mU_GROW
,

143 
	mU_GROW_AND_SHRINK
,

144 
	mU_FIXED


151 
	sUHashèbÀ
 {

155 
UHashEÀmít
 *
	mñemíts
;

159 
UHashFun˘i⁄
 *
	mkeyHashî
;

161 
UKeyCom∑øt‹
 *
	mkeyCom∑øt‹
;

163 
UVÆueCom∑øt‹
 *
	mvÆueCom∑øt‹
;

165 
UObje˘Dñëî
 *
	mkeyDñëî
;

167 
UObje˘Dñëî
 *
	mvÆueDñëî
;

172 
öt32_t
 
	mcou¡
;

175 
öt32_t
 
	mÀngth
;

180 
öt32_t
 
	mhighW©îM¨k
;

181 
öt32_t
 
	mlowW©îM¨k
;

182 
	mhighW©îR©io
;

183 
	mlowW©îR©io
;

185 
öt8_t
 
	m¥imeIndex
;

187 
UBoﬁ
 
	mÆloˇãd
;

189 
UHashèbÀ
 
	tUHashèbÀ
;

191 
U_CDECL_END


207 
U_CAPI
 
UHashèbÀ
* 
U_EXPORT2


208 
uhash_›í
(
UHashFun˘i⁄
 *
keyHash
,

209 
UKeyCom∑øt‹
 *
keyComp
,

210 
UVÆueCom∑øt‹
 *
vÆueComp
,

211 
UEº‹Code
 *
°©us
);

224 
U_CAPI
 
UHashèbÀ
* 
U_EXPORT2


225 
uhash_›íSize
(
UHashFun˘i⁄
 *
keyHash
,

226 
UKeyCom∑øt‹
 *
keyComp
,

227 
UVÆueCom∑øt‹
 *
vÆueComp
,

228 
öt32_t
 
size
,

229 
UEº‹Code
 *
°©us
);

241 
U_CAPI
 
UHashèbÀ
* 
U_EXPORT2


242 
uhash_öô
(
UHashèbÀ
 *
hash
,

243 
UHashFun˘i⁄
 *
keyHash
,

244 
UKeyCom∑øt‹
 *
keyComp
,

245 
UVÆueCom∑øt‹
 *
vÆueComp
,

246 
UEº‹Code
 *
°©us
);

252 
U_CAPI
 
U_EXPORT2


253 
uhash_˛o£
(
UHashèbÀ
 *
hash
);

263 
U_CAPI
 
UHashFun˘i⁄
 *
U_EXPORT2


264 
uhash_£tKeyHashî
(
UHashèbÀ
 *
hash
, 
UHashFun˘i⁄
 *
‚
);

273 
U_CAPI
 
UKeyCom∑øt‹
 *
U_EXPORT2


274 
uhash_£tKeyCom∑øt‹
(
UHashèbÀ
 *
hash
, 
UKeyCom∑øt‹
 *
‚
);

283 
U_CAPI
 
UVÆueCom∑øt‹
 *
U_EXPORT2


284 
uhash_£tVÆueCom∑øt‹
(
UHashèbÀ
 *
hash
, 
UVÆueCom∑øt‹
 *
‚
);

296 
U_CAPI
 
UObje˘Dñëî
 *
U_EXPORT2


297 
uhash_£tKeyDñëî
(
UHashèbÀ
 *
hash
, 
UObje˘Dñëî
 *
‚
);

309 
U_CAPI
 
UObje˘Dñëî
 *
U_EXPORT2


310 
uhash_£tVÆueDñëî
(
UHashèbÀ
 *
hash
, 
UObje˘Dñëî
 *
‚
);

319 
U_CAPI
 
U_EXPORT2


320 
uhash_£tResizePﬁicy
(
UHashèbÀ
 *
hash
, 
UHashResizePﬁicy
 
pﬁicy
);

327 
U_CAPI
 
öt32_t
 
U_EXPORT2


328 
uhash_cou¡
(c⁄° 
UHashèbÀ
 *
hash
);

343 
U_CAPI
 * 
U_EXPORT2


344 
uhash_put
(
UHashèbÀ
 *
hash
,

345 *
key
,

346 *
vÆue
,

347 
UEº‹Code
 *
°©us
);

361 
U_CAPI
 * 
U_EXPORT2


362 
uhash_ùut
(
UHashèbÀ
 *
hash
,

363 
öt32_t
 
key
,

364 * 
vÆue
,

365 
UEº‹Code
 *
°©us
);

379 
U_CAPI
 
öt32_t
 
U_EXPORT2


380 
uhash_puti
(
UHashèbÀ
 *
hash
,

381 * 
key
,

382 
öt32_t
 
vÆue
,

383 
UEº‹Code
 *
°©us
);

397 
U_CAPI
 
öt32_t
 
U_EXPORT2


398 
uhash_ùuti
(
UHashèbÀ
 *
hash
,

399 
öt32_t
 
key
,

400 
öt32_t
 
vÆue
,

401 
UEº‹Code
 *
°©us
);

410 
U_CAPI
 * 
U_EXPORT2


411 
uhash_gë
(c⁄° 
UHashèbÀ
 *
hash
,

412 c⁄° *
key
);

421 
U_CAPI
 * 
U_EXPORT2


422 
uhash_igë
(c⁄° 
UHashèbÀ
 *
hash
,

423 
öt32_t
 
key
);

432 
U_CAPI
 
öt32_t
 
U_EXPORT2


433 
uhash_gëi
(c⁄° 
UHashèbÀ
 *
hash
,

434 c⁄° * 
key
);

442 
U_CAPI
 
öt32_t
 
U_EXPORT2


443 
uhash_igëi
(c⁄° 
UHashèbÀ
 *
hash
,

444 
öt32_t
 
key
);

452 
U_CAPI
 * 
U_EXPORT2


453 
uhash_ªmove
(
UHashèbÀ
 *
hash
,

454 c⁄° *
key
);

462 
U_CAPI
 * 
U_EXPORT2


463 
uhash_úemove
(
UHashèbÀ
 *
hash
,

464 
öt32_t
 
key
);

472 
U_CAPI
 
öt32_t
 
U_EXPORT2


473 
uhash_ªmovei
(
UHashèbÀ
 *
hash
,

474 c⁄° * 
key
);

482 
U_CAPI
 
öt32_t
 
U_EXPORT2


483 
uhash_úemovei
(
UHashèbÀ
 *
hash
,

484 
öt32_t
 
key
);

490 
U_CAPI
 
U_EXPORT2


491 
uhash_ªmoveAŒ
(
UHashèbÀ
 *
hash
);

504 
U_CAPI
 c⁄° 
UHashEÀmít
* 
U_EXPORT2


505 
uhash_föd
(c⁄° 
UHashèbÀ
 *
hash
, c⁄° * 
key
);

520 
U_CAPI
 c⁄° 
UHashEÀmít
* 
U_EXPORT2


521 
uhash_√xtEÀmít
(c⁄° 
UHashèbÀ
 *
hash
,

522 
öt32_t
 *
pos
);

535 
U_CAPI
 * 
U_EXPORT2


536 
uhash_ªmoveEÀmít
(
UHashèbÀ
 *
hash
, c⁄° 
UHashEÀmít
* 
e
);

569 
U_CAPI
 
öt32_t
 
U_EXPORT2


570 
uhash_hashUCh¨s
(c⁄° 
UHashTok
 
key
);

579 
U_CAPI
 
öt32_t
 
U_EXPORT2


580 
uhash_hashCh¨s
(c⁄° 
UHashTok
 
key
);

583 
U_CAPI
 
öt32_t
 
U_EXPORT2


584 
uhash_hashUCh¨sN
(c⁄° 
UCh¨
 *
key
, 
öt32_t
 
Àngth
);

593 
U_CAPI
 
öt32_t
 
U_EXPORT2


594 
uhash_hashICh¨s
(c⁄° 
UHashTok
 
key
);

603 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


604 
uhash_com∑ªUCh¨s
(c⁄° 
UHashTok
 
key1
, c⁄° UHashTok 
key2
);

613 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


614 
uhash_com∑ªCh¨s
(c⁄° 
UHashTok
 
key1
, c⁄° UHashTok 
key2
);

623 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


624 
uhash_com∑ªICh¨s
(c⁄° 
UHashTok
 
key1
, c⁄° UHashTok 
key2
);

635 
U_CAPI
 
öt32_t
 
U_EXPORT2


636 
uhash_hashUnicodeSåög
(c⁄° 
UHashTok
 
key
);

644 
U_CAPI
 
öt32_t
 
U_EXPORT2


645 
uhash_hashCa£ÀssUnicodeSåög
(c⁄° 
UHashTok
 
key
);

653 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


654 
uhash_com∑ªUnicodeSåög
(c⁄° 
UHashTok
 
key1
, c⁄° UHashTok 
key2
);

663 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


664 
uhash_com∑ªCa£ÀssUnicodeSåög
(c⁄° 
UHashTok
 
key1
, c⁄° UHashTok 
key2
);

670 
U_CAPI
 
U_EXPORT2


671 
uhash_dñëeUnicodeSåög
(*
obj
);

682 
U_CAPI
 
öt32_t
 
U_EXPORT2


683 
uhash_hashL⁄g
(c⁄° 
UHashTok
 
key
);

691 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


692 
uhash_com∑ªL⁄g
(c⁄° 
UHashTok
 
key1
, c⁄° UHashTok 
key2
);

702 
U_CAPI
 
U_EXPORT2


703 
uhash_dñëeHashèbÀ
(*
obj
);

709 
U_CAPI
 
U_EXPORT2


710 
uhash_dñëeUObje˘
(*
obj
);

717 
U_CAPI
 
U_EXPORT2


718 
uhash_‰ìBlock
(*
obj
);

726 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


727 
uhash_equÆs
(c⁄° 
UHashèbÀ
* 
hash1
, c⁄° UHashèbÀ* 
hash2
);

	@uhash_us.cpp

13 
	~"uhash.h
"

14 
	~"hash.h
"

15 
	~"uve˘‹.h
"

16 
	~"unicode/uni°r.h
"

17 
	~"unicode/uch¨.h
"

23 
U_CAPI
 
öt32_t
 
U_EXPORT2


24 
	$uhash_hashUnicodeSåög
(c⁄° 
UHashTok
 
key
) {

25 
U_NAMESPACE_USE


26 c⁄° 
UnicodeSåög
 *
°r
 = (c⁄° UnicodeSåög*Ë
key
.
poöãr
;

27  (
°r
 =
NULL
Ë? 0 : så->
	`hashCode
();

28 
	}
}

30 
U_CAPI
 
U_EXPORT2


31 
	$uhash_dñëeUnicodeSåög
(*
obj
) {

32 
U_NAMESPACE_USE


33 
	`dñëe
 (
UnicodeSåög
*Ë
obj
;

34 
	}
}

36 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


37 
	$uhash_com∑ªUnicodeSåög
(c⁄° 
UHashTok
 
key1
, c⁄° UHashTok 
key2
) {

38 
U_NAMESPACE_USE


39 c⁄° 
UnicodeSåög
 *
°r1
 = (c⁄° UnicodeSåög*Ë
key1
.
poöãr
;

40 c⁄° 
UnicodeSåög
 *
°r2
 = (c⁄° UnicodeSåög*Ë
key2
.
poöãr
;

41 i‡(
°r1
 =
°r2
) {

42  
TRUE
;

44 i‡(
°r1
 =
NULL
 || 
°r2
 == NULL) {

45  
FALSE
;

47  *
°r1
 =*
°r2
;

48 
	}
}

53 
U_CAPI
 
U_EXPORT2


54 
	$uhash_dñëeHashèbÀ
(*
obj
) {

55 
U_NAMESPACE_USE


56 
	`dñëe
 (
HashèbÀ
*Ë
obj
;

57 
	}
}

62 
U_CAPI
 
U_EXPORT2


63 
	$uhash_dñëeUObje˘
(*
obj
) {

64 
U_NAMESPACE_USE


65 
	`dñëe
 (
UObje˘
*Ë
obj
;

66 
	}
}

	@uidna.cpp

17 
	~"unicode/uty≥s.h
"

19 #i‡!
UCONFIG_NO_IDNA


21 
	~"unicode/uid«.h
"

22 
	~"unicode/u°rög.h
"

23 
	~"unicode/u•ªp.h
"

24 
	~"punycode.h
"

25 
	~"u°r_imp.h
"

26 
	~"cmem‹y.h
"

27 
	~"uas£π.h
"

28 
	~"•Ωim∂.h
"

31 c⁄° 
UCh¨
 
	gACE_PREFIX
[] ={ 0x0078,0x006E,0x002d,0x002d } ;

32 
	#ACE_PREFIX_LENGTH
 4

	)

34 
	#MAX_LABEL_LENGTH
 63

	)

36 
	#MAX_LABEL_BUFFER_SIZE
 100

	)

38 
	#MAX_DOMAIN_NAME_LENGTH
 255

	)

40 
	#MAX_IDN_BUFFER_SIZE
 
MAX_DOMAIN_NAME_LENGTH
+1

	)

42 
	#LOWER_CASE_DELTA
 0x0020

	)

43 
	#HYPHEN
 0x002D

	)

44 
	#FULL_STOP
 0x002E

	)

45 
	#CAPITAL_A
 0x0041

	)

46 
	#CAPITAL_Z
 0x005A

	)

48 
ölöe
 
UCh¨


49 
	$toASCIILowî
(
UCh¨
 
ch
){

50 if(
CAPITAL_A
 <
ch
 && ch <
CAPITAL_Z
){

51  
ch
 + 
LOWER_CASE_DELTA
;

53  
ch
;

54 
	}
}

56 
ölöe
 
UBoﬁ


57 
	$°¨tsWôhPªfix
(c⁄° 
UCh¨
* 
§c
 , 
öt32_t
 
§cLígth
){

58 
UBoﬁ
 
°¨tsWôhPªfix
 = 
TRUE
;

60 if(
§cLígth
 < 
ACE_PREFIX_LENGTH
){

61  
FALSE
;

64 
öt8_t
 
i
=0; i< 
ACE_PREFIX_LENGTH
; i++){

65 if(
	`toASCIILowî
(
§c
[
i
]Ë!
ACE_PREFIX
[i]){

66 
°¨tsWôhPªfix
 = 
FALSE
;

69  
°¨tsWôhPªfix
;

70 
	}
}

73 
ölöe
 
öt32_t


74 
	$com∑ªCa£In£nsôiveASCII
(c⁄° 
UCh¨
* 
s1
, 
öt32_t
 
s1Lí
,

75 c⁄° 
UCh¨
* 
s2
, 
öt32_t
 
s2Lí
){

77 
öt32_t
 
möLígth
;

78 
öt32_t
 
ÀngthResu…
;

81 if(
s1Lí
 !
s2Lí
) {

82 if(
s1Lí
 < 
s2Lí
) {

83 
möLígth
 = 
s1Lí
;

84 
ÀngthResu…
 = -1;

86 
möLígth
 = 
s2Lí
;

87 
ÀngthResu…
 = 1;

91 
möLígth
 = 
s1Lí
;

92 
ÀngthResu…
 = 0;

95 
UCh¨
 
c1
,
c2
;

96 
öt32_t
 
rc
;

98 
öt32_t
 
i
 =0; ;i++) {

101 if(
i
 =
möLígth
) {

102  
ÀngthResu…
;

105 
c1
 = 
s1
[
i
];

106 
c2
 = 
s2
[
i
];

109 if(
c1
!=
c2
) {

110 
rc
=(
öt32_t
)
	`toASCIILowî
(
c1
)-(öt32_tÈoASCIILowî(
c2
);

111 if(
rc
!=0) {

112 
ÀngthResu…
=
rc
;

117  
ÀngthResu…
;

118 
	}
}

129 
ölöe
 
UBoﬁ
 
	$isLabñSï¨©‹
(
UCh¨
 
ch
){

130 
ch
){

135  
TRUE
;

137  
FALSE
;

139 
	}
}

144 
ölöe
 
öt32_t


145 
	$gëNextSï¨©‹
(
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

146 
UCh¨
 **
limô
, 
UBoﬁ
 *
d⁄e
){

147 if(
§cLígth
 == -1){

148 
öt32_t
 
i
;

149 
i
=0 ; ;i++){

150 if(
§c
[
i
] == 0){

151 *
limô
 = 
§c
 + 
i
;

152 *
d⁄e
 = 
TRUE
;

153  
i
;

155 if(
	`isLabñSï¨©‹
(
§c
[
i
])){

156 *
limô
 = 
§c
 + (
i
+1);

157  
i
;

162 
öt32_t
 
i
;

163 
i
=0;i<
§cLígth
;i++){

164 if(
	`isLabñSï¨©‹
(
§c
[
i
])){

165 *
limô
 = 
§c
 + (
i
+1);

166  
i
;

171 *
limô
 = 
§c
+
§cLígth
;

172 *
d⁄e
 = 
TRUE
;

174  
i
;

176 
	}
}

177 
ölöe
 
UBoﬁ
 
	$isLDHCh¨
(
UCh¨
 
ch
){

179 if(
ch
>0x007A){

180  
FALSE
;

183 if–(
ch
==0x002D) ||

184 (0x0030 <
ch
 && ch <= 0x0039) ||

185 (0x0041 <
ch
 && ch <= 0x005A) ||

186 (0x0061 <
ch
 && ch <= 0x007A)

188  
TRUE
;

190  
FALSE
;

191 
	}
}

193 
öt32_t


194 
	$_öã∫Æ_toASCII
(c⁄° 
UCh¨
* 
§c
, 
öt32_t
 
§cLígth
,

195 
UCh¨
* 
de°
, 
öt32_t
 
de°C≠acôy
,

196 
öt32_t
 
›ti⁄s
,

197 
USåögPªpProfûe
* 
«mïªp
,

198 
UP¨£Eº‹
* 
∑r£Eº‹
,

199 
UEº‹Code
* 
°©us
)

203 
UCh¨
 
b1Sèck
[
MAX_LABEL_BUFFER_SIZE
], 
b2Sèck
[MAX_LABEL_BUFFER_SIZE];

205 
UCh¨
 *
b1
 = 
b1Sèck
, *
b2
 = 
b2Sèck
;

206 
öt32_t
 
b1Lí
=0, 
b2Lí
,

207 
b1C≠acôy
 = 
MAX_LABEL_BUFFER_SIZE
,

208 
b2C≠acôy
 = 
MAX_LABEL_BUFFER_SIZE
 ,

209 
ªqLígth
=0;

211 
öt32_t
 
«mePªpO±i⁄s
 = ((
›ti⁄s
 & 
UIDNA_ALLOW_UNASSIGNED
Ë!0Ë? 
USPREP_ALLOW_UNASSIGNED
: 0;

212 
UBoﬁ
* 
ˇ£Fœgs
 = 
NULL
;

215 
UBoﬁ
 
§cIsASCII
 = 
TRUE
;

217 
UBoﬁ
 
§cIsLDH
 = 
TRUE
;

219 
öt32_t
 
j
=0;

222 
UBoﬁ
 
u£STD3ASCIIRuÀs
 = (UBoﬁ)((
›ti⁄s
 & 
UIDNA_USE_STD3_RULES
) != 0);

224 
öt32_t
 
ÁûPos
 = -1;

226 if(
§cLígth
 == -1){

227 
§cLígth
 = 
	`u_°æí
(
§c
);

230 if(
§cLígth
 > 
b1C≠acôy
){

231 
b1
 = (
UCh¨
*Ë
	`u¥v_mÆloc
(
§cLígth
 * 
U_SIZEOF_UCHAR
);

232 if(
b1
==
NULL
){

233 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

234 
CLEANUP
;

236 
b1C≠acôy
 = 
§cLígth
;

240  
j
=0;j<
§cLígth
;j++){

241 if(
§c
[
j
] > 0x7F){

242 
§cIsASCII
 = 
FALSE
;

244 
b1
[
b1Lí
++] = 
§c
[
j
];

248 if(
§cIsASCII
 =
FALSE
){

251 
b1Lí
 = 
	`u•ªp_¥ï¨e
(
«mïªp
, 
§c
, 
§cLígth
, 
b1
, 
b1C≠acôy
, 
«mePªpO±i⁄s
, 
∑r£Eº‹
, 
°©us
);

253 if(*
°©us
 =
U_BUFFER_OVERFLOW_ERROR
){

256 if(
b1
 !
b1Sèck
){

257 
	`u¥v_‰ì
(
b1
);

259 
b1
 = (
UCh¨
*Ë
	`u¥v_mÆloc
(
b1Lí
 * 
U_SIZEOF_UCHAR
);

260 if(
b1
==
NULL
){

261 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

262 
CLEANUP
;

265 *
°©us
 = 
U_ZERO_ERROR
;

267 
b1Lí
 = 
	`u•ªp_¥ï¨e
(
«mïªp
, 
§c
, 
§cLígth
, 
b1
, b1Lí, 
«mePªpO±i⁄s
, 
∑r£Eº‹
, 
°©us
);

271 if(
	`U_FAILURE
(*
°©us
)){

272 
CLEANUP
;

274 if(
b1Lí
 == 0){

275 *
°©us
 = 
U_IDNA_ZERO_LENGTH_LABEL_ERROR
;

276 
CLEANUP
;

280 
§cIsASCII
 = 
TRUE
;

281  
j
=0;j<
b1Lí
;j++){

283 if(
b1
[
j
] > 0x7F){

284 
§cIsASCII
 = 
FALSE
;

285 }if(
	`isLDHCh¨
(
b1
[
j
])==
FALSE
){

286 
§cIsLDH
 = 
FALSE
;

287 
ÁûPos
 = 
j
;

290 if(
u£STD3ASCIIRuÀs
 =
TRUE
){

297 if–
§cIsLDH
 =
FALSE


298 || 
b1
[0] =
HYPHEN
 || b1[
b1Lí
-1] == HYPHEN){

299 *
°©us
 = 
U_IDNA_STD3_ASCII_RULES_ERROR
;

302 if(
§cIsLDH
==
FALSE
){

304 
	`u¥v_sy¡axEº‹
(
b1
,
ÁûPos
, 
b1Lí
,
∑r£Eº‹
);

305 }if(
b1
[0] =
HYPHEN
){

307 
	`u¥v_sy¡axEº‹
(
b1
,0,
b1Lí
,
∑r£Eº‹
);

310 
	`u¥v_sy¡axEº‹
(
b1
, (
b1Lí
>0Ë? b1Lí-1 : b1Lí, b1Lí,
∑r£Eº‹
);

313 
CLEANUP
;

317 if(
§cIsASCII
){

318 if(
b1Lí
 <
de°C≠acôy
){

319 
	`u¥v_memmove
(
de°
, 
b1
, 
b1Lí
 * 
U_SIZEOF_UCHAR
);

320 
ªqLígth
 = 
b1Lí
;

322 
ªqLígth
 = 
b1Lí
;

323 
CLEANUP
;

327 if(!
	`°¨tsWôhPªfix
(
b1
,
b1Lí
)){

336 
b2Lí
 = 
	`u_°rToPunycode
(
b1
,
b1Lí
,
b2
,
b2C≠acôy
,
ˇ£Fœgs
, 
°©us
);

338 if(*
°©us
 =
U_BUFFER_OVERFLOW_ERROR
){

341 
b2
 = (
UCh¨
*Ë
	`u¥v_mÆloc
(
b2Lí
 * 
U_SIZEOF_UCHAR
);

342 if(
b2
 =
NULL
){

343 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

344 
CLEANUP
;

347 *
°©us
 = 
U_ZERO_ERROR
;

349 
b2Lí
 = 
	`u_°rToPunycode
(
b1
,
b1Lí
,
b2
,b2Lí,
ˇ£Fœgs
, 
°©us
);

352 if(
	`U_FAILURE
(*
°©us
)){

353 
CLEANUP
;

358 
ªqLígth
 = 
b2Lí
+
ACE_PREFIX_LENGTH
;

360 if(
ªqLígth
 > 
de°C≠acôy
){

361 *
°©us
 = 
U_BUFFER_OVERFLOW_ERROR
;

362 
CLEANUP
;

365 
	`u¥v_mem˝y
(
de°
,
ACE_PREFIX
,
ACE_PREFIX_LENGTH
 * 
U_SIZEOF_UCHAR
);

367 
	`u¥v_mem˝y
(
de°
+
ACE_PREFIX_LENGTH
, 
b2
, 
b2Lí
 * 
U_SIZEOF_UCHAR
);

370 *
°©us
 = 
U_IDNA_ACE_PREFIX_ERROR
;

372 
	`u¥v_sy¡axEº‹
(
b1
,0,
b1Lí
,
∑r£Eº‹
);

373 
CLEANUP
;

377 if(
ªqLígth
 > 
MAX_LABEL_LENGTH
){

378 *
°©us
 = 
U_IDNA_LABEL_TOO_LONG_ERROR
;

381 
CLEANUP
:

382 if(
b1
 !
b1Sèck
){

383 
	`u¥v_‰ì
(
b1
);

385 if(
b2
 !
b2Sèck
){

386 
	`u¥v_‰ì
(
b2
);

388 
	`u¥v_‰ì
(
ˇ£Fœgs
);

390  
	`u_ãrmö©eUCh¨s
(
de°
, 
de°C≠acôy
, 
ªqLígth
, 
°©us
);

391 
	}
}

393 
öt32_t


394 
	$_öã∫Æ_toUnicode
(c⁄° 
UCh¨
* 
§c
, 
öt32_t
 
§cLígth
,

395 
UCh¨
* 
de°
, 
öt32_t
 
de°C≠acôy
,

396 
öt32_t
 
›ti⁄s
,

397 
USåögPªpProfûe
* 
«mïªp
,

398 
UP¨£Eº‹
* 
∑r£Eº‹
,

399 
UEº‹Code
* 
°©us
)

404 
öt32_t
 
«mePªpO±i⁄s
 = ((
›ti⁄s
 & 
UIDNA_ALLOW_UNASSIGNED
Ë!0Ë? 
USPREP_ALLOW_UNASSIGNED
: 0;

407 
UCh¨
 
b1Sèck
[
MAX_LABEL_BUFFER_SIZE
], 
b2Sèck
[MAX_LABEL_BUFFER_SIZE], 
b3Sèck
[MAX_LABEL_BUFFER_SIZE];

410 
UCh¨
 *
b1
 = 
b1Sèck
, *
b2
 = 
b2Sèck
, *
b1Prime
=
NULL
, *
b3
=
b3Sèck
;

411 
öt32_t
 
b1Lí
, 
b2Lí
, 
b1PrimeLí
, 
b3Lí
,

412 
b1C≠acôy
 = 
MAX_LABEL_BUFFER_SIZE
,

413 
b2C≠acôy
 = 
MAX_LABEL_BUFFER_SIZE
,

414 
b3C≠acôy
 = 
MAX_LABEL_BUFFER_SIZE
,

415 
ªqLígth
=0;

417 
b1Lí
 = 0;

418 
UBoﬁ
* 
ˇ£Fœgs
 = 
NULL
;

420 
UBoﬁ
 
§cIsASCII
 = 
TRUE
;

425 if(
§cLígth
==-1){

426 
§cLígth
 = 0;

427 ;
§c
[
§cLígth
]!=0;){

428 if(
§c
[
§cLígth
]> 0x7f){

429 
§cIsASCII
 = 
FALSE
;

437 
§cLígth
++;

439 }if(
§cLígth
 > 0){

440 
öt32_t
 
j
=0; j<
§cLígth
; j++){

441 if(
§c
[
j
]> 0x7f){

442 
§cIsASCII
 = 
FALSE
;

455 if(
§cIsASCII
 =
FALSE
){

457 
b1Lí
 = 
	`u•ªp_¥ï¨e
(
«mïªp
, 
§c
, 
§cLígth
, 
b1
, 
b1C≠acôy
, 
«mePªpO±i⁄s
, 
∑r£Eº‹
, 
°©us
);

458 if(*
°©us
 =
U_BUFFER_OVERFLOW_ERROR
){

461 
b1
 = (
UCh¨
*Ë
	`u¥v_mÆloc
(
b1Lí
 * 
U_SIZEOF_UCHAR
);

462 if(
b1
==
NULL
){

463 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

464 
CLEANUP
;

467 *
°©us
 = 
U_ZERO_ERROR
;

469 
b1Lí
 = 
	`u•ªp_¥ï¨e
(
«mïªp
, 
§c
, 
§cLígth
, 
b1
, b1Lí, 
«mePªpO±i⁄s
, 
∑r£Eº‹
, 
°©us
);

472 if(
	`U_FAILURE
(*
°©us
)){

473 
CLEANUP
;

478 
b1
 = (
UCh¨
*Ë
§c
;

479 
b1Lí
 = 
§cLígth
;

489 if(
	`°¨tsWôhPªfix
(
b1
,
b1Lí
)){

492 
b1Prime
 = 
b1
 + 
ACE_PREFIX_LENGTH
;

493 
b1PrimeLí
 = 
b1Lí
 - 
ACE_PREFIX_LENGTH
;

496 
b2Lí
 = 
	`u_°rFromPunycode
(
b1Prime
, 
b1PrimeLí
, 
b2
, 
b2C≠acôy
, 
ˇ£Fœgs
,
°©us
);

498 if(*
°©us
 =
U_BUFFER_OVERFLOW_ERROR
){

501 
b2
 = (
UCh¨
*Ë
	`u¥v_mÆloc
(
b2Lí
 * 
U_SIZEOF_UCHAR
);

502 if(
b2
==
NULL
){

503 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

504 
CLEANUP
;

507 *
°©us
 = 
U_ZERO_ERROR
;

509 
b2Lí
 = 
	`u_°rFromPunycode
(
b1Prime
, 
b1PrimeLí
, 
b2
, b2Lí, 
ˇ£Fœgs
, 
°©us
);

514 
b3Lí
 = 
	`uid«_toASCII
(
b2
, 
b2Lí
, 
b3
, 
b3C≠acôy
, 
›ti⁄s
, 
∑r£Eº‹
, 
°©us
);

516 if(*
°©us
 =
U_BUFFER_OVERFLOW_ERROR
){

519 
b3
 = (
UCh¨
*Ë
	`u¥v_mÆloc
(
b3Lí
 * 
U_SIZEOF_UCHAR
);

520 if(
b3
==
NULL
){

521 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

522 
CLEANUP
;

525 *
°©us
 = 
U_ZERO_ERROR
;

527 
b3Lí
 = 
	`uid«_toASCII
(
b2
,
b2Lí
,
b3
,b3Lí,
›ti⁄s
,
∑r£Eº‹
, 
°©us
);

531 if(
	`U_FAILURE
(*
°©us
)){

532 
CLEANUP
;

536 if(
	`com∑ªCa£In£nsôiveASCII
(
b1
, 
b1Lí
, 
b3
, 
b3Lí
) !=0){

538 *
°©us
 = 
U_IDNA_VERIFICATION_ERROR
;

539 
CLEANUP
;

543 
ªqLígth
 = 
b2Lí
;

544 if(
b2Lí
 <
de°C≠acôy
) {

545 
	`u¥v_memmove
(
de°
, 
b2
, 
b2Lí
 * 
U_SIZEOF_UCHAR
);

573 if(
§cLígth
 <
de°C≠acôy
){

574 
	`u¥v_memmove
(
de°
,
§c
,
§cLígth
 * 
U_SIZEOF_UCHAR
);

576 
ªqLígth
 = 
§cLígth
;

580 
CLEANUP
:

582 if(
b1
 !
b1Sèck
 && b1!=
§c
){

583 
	`u¥v_‰ì
(
b1
);

585 if(
b2
 !
b2Sèck
){

586 
	`u¥v_‰ì
(
b2
);

588 
	`u¥v_‰ì
(
ˇ£Fœgs
);

596 if(
	`U_FAILURE
(*
°©us
)){

598 if(
de°
 && 
§cLígth
 <
de°C≠acôy
){

600 
	`U_ASSERT
(
§cLígth
 >= 0);

601 
	`u¥v_memmove
(
de°
,
§c
,
§cLígth
 * 
U_SIZEOF_UCHAR
);

603 
ªqLígth
 = 
§cLígth
;

604 *
°©us
 = 
U_ZERO_ERROR
;

607  
	`u_ãrmö©eUCh¨s
(
de°
, 
de°C≠acôy
, 
ªqLígth
, 
°©us
);

608 
	}
}

610 
U_CAPI
 
öt32_t
 
U_EXPORT2


611 
	$uid«_toASCII
(c⁄° 
UCh¨
* 
§c
, 
öt32_t
 
§cLígth
,

612 
UCh¨
* 
de°
, 
öt32_t
 
de°C≠acôy
,

613 
öt32_t
 
›ti⁄s
,

614 
UP¨£Eº‹
* 
∑r£Eº‹
,

615 
UEº‹Code
* 
°©us
){

617 if(
°©us
 =
NULL
 || 
	`U_FAILURE
(*status)){

620 if((
§c
==
NULL
Ë|| (
§cLígth
 < -1Ë|| (
de°C≠acôy
<0Ë|| (!
de°
 && destCapacity > 0)){

621 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

625 
USåögPªpProfûe
* 
«mïªp
 = 
	`u•ªp_›íByTy≥
(
USPREP_RFC3491_NAMEPREP
, 
°©us
);

627 if(
	`U_FAILURE
(*
°©us
)){

631 
öt32_t
 
ªtLí
 = 
	`_öã∫Æ_toASCII
(
§c
, 
§cLígth
, 
de°
, 
de°C≠acôy
, 
›ti⁄s
, 
«mïªp
, 
∑r£Eº‹
, 
°©us
);

634 
	`u•ªp_˛o£
(
«mïªp
);

636  
ªtLí
;

637 
	}
}

639 
U_CAPI
 
öt32_t
 
U_EXPORT2


640 
	$uid«_toUnicode
(c⁄° 
UCh¨
* 
§c
, 
öt32_t
 
§cLígth
,

641 
UCh¨
* 
de°
, 
öt32_t
 
de°C≠acôy
,

642 
öt32_t
 
›ti⁄s
,

643 
UP¨£Eº‹
* 
∑r£Eº‹
,

644 
UEº‹Code
* 
°©us
){

646 if(
°©us
 =
NULL
 || 
	`U_FAILURE
(*status)){

649 if–(
§c
==
NULL
Ë|| (
§cLígth
 < -1Ë|| (
de°C≠acôy
<0Ë|| (!
de°
 && destCapacity > 0)){

650 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

654 
USåögPªpProfûe
* 
«mïªp
 = 
	`u•ªp_›íByTy≥
(
USPREP_RFC3491_NAMEPREP
, 
°©us
);

656 if(
	`U_FAILURE
(*
°©us
)){

660 
öt32_t
 
ªtLí
 = 
	`_öã∫Æ_toUnicode
(
§c
, 
§cLígth
, 
de°
, 
de°C≠acôy
, 
›ti⁄s
, 
«mïªp
, 
∑r£Eº‹
, 
°©us
);

662 
	`u•ªp_˛o£
(
«mïªp
);

664  
ªtLí
;

665 
	}
}

668 
U_CAPI
 
öt32_t
 
U_EXPORT2


669 
	$uid«_IDNToASCII
–c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

670 
UCh¨
* 
de°
, 
öt32_t
 
de°C≠acôy
,

671 
öt32_t
 
›ti⁄s
,

672 
UP¨£Eº‹
 *
∑r£Eº‹
,

673 
UEº‹Code
 *
°©us
){

675 if(
°©us
 =
NULL
 || 
	`U_FAILURE
(*status)){

678 if((
§c
==
NULL
Ë|| (
§cLígth
 < -1Ë|| (
de°C≠acôy
<0Ë|| (!
de°
 && destCapacity > 0)){

679 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

683 
öt32_t
 
ªqLígth
 = 0;

685 
USåögPªpProfûe
* 
«mïªp
 = 
	`u•ªp_›íByTy≥
(
USPREP_RFC3491_NAMEPREP
, 
°©us
);

687 if(
	`U_FAILURE
(*
°©us
)){

692 
UCh¨
 *
dñimôî
 = (UCh¨*)
§c
;

693 
UCh¨
 *
œbñSèπ
 = (UCh¨*)
§c
;

694 
UCh¨
 *
cuºítDe°
 = (UCh¨*Ë
de°
;

695 
öt32_t
 
ªmaöögLí
 = 
§cLígth
;

696 
öt32_t
 
ªmaöögDe°C≠acôy
 = 
de°C≠acôy
;

697 
öt32_t
 
œbñLí
 = 0, 
œbñReqLígth
 = 0;

698 
UBoﬁ
 
d⁄e
 = 
FALSE
;

703 
œbñLí
 = 
	`gëNextSï¨©‹
(
œbñSèπ
,
ªmaöögLí
, &
dñimôî
,&
d⁄e
);

704 
œbñReqLígth
 = 0;

705 if(!(
œbñLí
==0 && 
d⁄e
)){

707 
œbñReqLígth
 = 
	`_öã∫Æ_toASCII
–
œbñSèπ
, 
œbñLí
,

708 
cuºítDe°
, 
ªmaöögDe°C≠acôy
,

709 
›ti⁄s
, 
«mïªp
,

710 
∑r£Eº‹
, 
°©us
);

712 if(*
°©us
 =
U_BUFFER_OVERFLOW_ERROR
){

714 *
°©us
 = 
U_ZERO_ERROR
;

715 
ªmaöögDe°C≠acôy
 = 0;

720 if(
	`U_FAILURE
(*
°©us
)){

724 
ªqLígth
 +=
œbñReqLígth
;

726 if(
œbñReqLígth
 < 
ªmaöögDe°C≠acôy
){

727 
cuºítDe°
 = cuºítDe° + 
œbñReqLígth
;

728 
ªmaöögDe°C≠acôy
 -
œbñReqLígth
;

731 
ªmaöögDe°C≠acôy
 = 0;

734 if(
d⁄e
 =
TRUE
){

739 if(
ªmaöögDe°C≠acôy
 > 0){

740 *
cuºítDe°
++ = 
FULL_STOP
;

741 
ªmaöögDe°C≠acôy
--;

743 
ªqLígth
++;

745 
œbñSèπ
 = 
dñimôî
;

746 if(
ªmaöögLí
 >0 ){

747 
ªmaöögLí
 = (
öt32_t
)(
§cLígth
 - (
dñimôî
 - 
§c
));

752 if(
ªqLígth
 > 
MAX_DOMAIN_NAME_LENGTH
){

753 *
°©us
 = 
U_IDNA_DOMAIN_NAME_TOO_LONG_ERROR
;

756 
	`u•ªp_˛o£
(
«mïªp
);

758  
	`u_ãrmö©eUCh¨s
(
de°
, 
de°C≠acôy
, 
ªqLígth
, 
°©us
);

759 
	}
}

761 
U_CAPI
 
öt32_t
 
U_EXPORT2


762 
	$uid«_IDNToUnicode
–c⁄° 
UCh¨
* 
§c
, 
öt32_t
 
§cLígth
,

763 
UCh¨
* 
de°
, 
öt32_t
 
de°C≠acôy
,

764 
öt32_t
 
›ti⁄s
,

765 
UP¨£Eº‹
* 
∑r£Eº‹
,

766 
UEº‹Code
* 
°©us
){

768 if(
°©us
 =
NULL
 || 
	`U_FAILURE
(*status)){

771 if((
§c
==
NULL
Ë|| (
§cLígth
 < -1Ë|| (
de°C≠acôy
<0Ë|| (!
de°
 && destCapacity > 0)){

772 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

776 
öt32_t
 
ªqLígth
 = 0;

778 
USåögPªpProfûe
* 
«mïªp
 = 
	`u•ªp_›íByTy≥
(
USPREP_RFC3491_NAMEPREP
, 
°©us
);

780 if(
	`U_FAILURE
(*
°©us
)){

785 
UCh¨
 *
dñimôî
 = (UCh¨*)
§c
;

786 
UCh¨
 *
œbñSèπ
 = (UCh¨*)
§c
;

787 
UCh¨
 *
cuºítDe°
 = (UCh¨*Ë
de°
;

788 
öt32_t
 
ªmaöögLí
 = 
§cLígth
;

789 
öt32_t
 
ªmaöögDe°C≠acôy
 = 
de°C≠acôy
;

790 
öt32_t
 
œbñLí
 = 0, 
œbñReqLígth
 = 0;

791 
UBoﬁ
 
d⁄e
 = 
FALSE
;

795 
œbñLí
 = 
	`gëNextSï¨©‹
(
œbñSèπ
,
ªmaöögLí
, &
dñimôî
,&
d⁄e
);

808 
œbñReqLígth
 = 
	`_öã∫Æ_toUnicode
(
œbñSèπ
, 
œbñLí
,

809 
cuºítDe°
, 
ªmaöögDe°C≠acôy
,

810 
›ti⁄s
, 
«mïªp
,

811 
∑r£Eº‹
, 
°©us
);

813 if(*
°©us
 =
U_BUFFER_OVERFLOW_ERROR
){

814 *
°©us
 = 
U_ZERO_ERROR
;

815 
ªmaöögDe°C≠acôy
 = 0;

818 if(
	`U_FAILURE
(*
°©us
)){

822 
ªqLígth
 +=
œbñReqLígth
;

824 if(
œbñReqLígth
 < 
ªmaöögDe°C≠acôy
){

825 
cuºítDe°
 = cuºítDe° + 
œbñReqLígth
;

826 
ªmaöögDe°C≠acôy
 -
œbñReqLígth
;

829 
ªmaöögDe°C≠acôy
 = 0;

832 if(
d⁄e
 =
TRUE
){

838 if(
ªmaöögDe°C≠acôy
 > 0){

839 *
cuºítDe°
++ = *(
œbñSèπ
 + 
œbñLí
);

840 
ªmaöögDe°C≠acôy
--;

842 
ªqLígth
++;

844 
œbñSèπ
 = 
dñimôî
;

845 if(
ªmaöögLí
 >0 ){

846 
ªmaöögLí
 = (
öt32_t
)(
§cLígth
 - (
dñimôî
 - 
§c
));

851 if(
ªqLígth
 > 
MAX_DOMAIN_NAME_LENGTH
){

852 *
°©us
 = 
U_IDNA_DOMAIN_NAME_TOO_LONG_ERROR
;

855 
	`u•ªp_˛o£
(
«mïªp
);

857  
	`u_ãrmö©eUCh¨s
(
de°
, 
de°C≠acôy
, 
ªqLígth
, 
°©us
);

858 
	}
}

860 
U_CAPI
 
öt32_t
 
U_EXPORT2


861 
	$uid«_com∑ª
–c⁄° 
UCh¨
 *
s1
, 
öt32_t
 
Àngth1
,

862 c⁄° 
UCh¨
 *
s2
, 
öt32_t
 
Àngth2
,

863 
öt32_t
 
›ti⁄s
,

864 
UEº‹Code
* 
°©us
){

866 if(
°©us
 =
NULL
 || 
	`U_FAILURE
(*status)){

870 
UCh¨
 
b1Sèck
[
MAX_IDN_BUFFER_SIZE
], 
b2Sèck
[MAX_IDN_BUFFER_SIZE];

871 
UCh¨
 *
b1
 = 
b1Sèck
, *
b2
 = 
b2Sèck
;

872 
öt32_t
 
b1Lí
, 
b2Lí
, 
b1C≠acôy
 = 
MAX_IDN_BUFFER_SIZE
, 
b2C≠acôy
 = MAX_IDN_BUFFER_SIZE;

873 
öt32_t
 
ªsu…
=-1;

875 
UP¨£Eº‹
 
∑r£Eº‹
;

877 
b1Lí
 = 
	`uid«_IDNToASCII
(
s1
, 
Àngth1
, 
b1
, 
b1C≠acôy
, 
›ti⁄s
, &
∑r£Eº‹
, 
°©us
);

878 if(*
°©us
 =
U_BUFFER_OVERFLOW_ERROR
){

880 
b1
 = (
UCh¨
*Ë
	`u¥v_mÆloc
(
b1Lí
 * 
U_SIZEOF_UCHAR
);

881 if(
b1
==
NULL
){

882 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

883 
CLEANUP
;

886 *
°©us
 = 
U_ZERO_ERROR
;

888 
b1Lí
 = 
	`uid«_IDNToASCII
(
s1
,
Àngth1
,
b1
,b1Lí, 
›ti⁄s
, &
∑r£Eº‹
, 
°©us
);

892 
b2Lí
 = 
	`uid«_IDNToASCII
(
s2
,
Àngth2
, 
b2
,
b2C≠acôy
, 
›ti⁄s
, &
∑r£Eº‹
, 
°©us
);

893 if(*
°©us
 =
U_BUFFER_OVERFLOW_ERROR
){

895 
b2
 = (
UCh¨
*Ë
	`u¥v_mÆloc
(
b2Lí
 * 
U_SIZEOF_UCHAR
);

896 if(
b2
==
NULL
){

897 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

898 
CLEANUP
;

901 *
°©us
 = 
U_ZERO_ERROR
;

903 
b2Lí
 = 
	`uid«_IDNToASCII
(
s2
, 
Àngth2
, 
b2
, b2Lí, 
›ti⁄s
, &
∑r£Eº‹
, 
°©us
);

907 
ªsu…
 = 
	`com∑ªCa£In£nsôiveASCII
(
b1
,
b1Lí
,
b2
,
b2Lí
);

909 
CLEANUP
:

910 if(
b1
 !
b1Sèck
){

911 
	`u¥v_‰ì
(
b1
);

914 if(
b2
 !
b2Sèck
){

915 
	`u¥v_‰ì
(
b2
);

918  
ªsu…
;

919 
	}
}

	@uinit.c

17 
	~"unicode/uty≥s.h
"

18 
	~"unicode/icu∂ug.h
"

19 
	~"unicode/u˛ón.h
"

20 
	~"cmem‹y.h
"

21 
	~"icu∂ugimp.h
"

22 
	~"uas£π.h
"

23 
	~"u˛n.h
"

24 
	~"u˛n_cmn.h
"

25 
	~"u˙v_io.h
"

26 
	~"umuãx.h
"

27 
	~"uåacimp.h
"

29 
UBoﬁ
 
	ggICUInôülized
 = 
FALSE
;

30 
UMTX
 
	ggICUInôMuãx
 = 
NULL
;

37 
U_CAPI
 
U_EXPORT2


38 
	$u_˛ónup
()

40 
	`UTRACE_ENTRY_OC
(
UTRACE_U_CLEANUP
);

41 
	`umtx_lock
(
NULL
);

42 
	`umtx_u∆ock
(
NULL
);

44 
	`u˛n_lib_˛ónup
();

46 
	`umtx_de°roy
(&
gICUInôMuãx
);

47 
	`umtx_˛ónup
();

48 
	`cmem‹y_˛ónup
();

49 
gICUInôülized
 = 
FALSE
;

50 
	`UTRACE_EXIT
();

52 
	`uåa˚_˛ónup
();

54 
	}
}

59 
U_CAPI
 
U_EXPORT2


60 
	$u_öô
(
UEº‹Code
 *
°©us
) {

61 
	`UTRACE_ENTRY_OC
(
UTRACE_U_INIT
);

63 
	`u∂ug_öô
(
°©us
);

65 
	`umtx_lock
(&
gICUInôMuãx
);

66 i‡(
gICUInôülized
 || 
	`U_FAILURE
(*
°©us
)) {

67 
	`umtx_u∆ock
(&
gICUInôMuãx
);

68 
	`UTRACE_EXIT_STATUS
(*
°©us
);

84 #i‡!
UCONFIG_NO_CONVERSION


85 
	`u˙v_io_cou¡KnownC⁄vîãrs
(
°©us
);

88 
gICUInôülized
 = 
TRUE
;

89 
	`umtx_u∆ock
(&
gICUInôMuãx
);

90 
	`UTRACE_EXIT_STATUS
(*
°©us
);

91 
	}
}

	@uinvchar.c

20 
	~"unicode/uty≥s.h
"

21 
	~"unicode/u°rög.h
"

22 
	~"ud©aswp.h
"

23 
	~"c°rög.h
"

24 
	~"cmem‹y.h
"

25 
	~"uas£π.h
"

26 
	~"uövch¨.h
"

63 c⁄° 
uöt8_t
 
	gasciiFromEbcdic
[256]={

85 c⁄° 
uöt8_t
 
	gebcdicFromAscii
[256]={

132 c⁄° 
uöt32_t
 
	göv¨ü¡Ch¨s
[4]={

143 
	#UCHAR_IS_INVARIANT
(
c
Ë(((c)<=0x7fË&& (
öv¨ü¡Ch¨s
[(c)>>5]&((
uöt32_t
)1<<((c)&0x1f)))!=0)

	)

146 
	#SCHAR_IS_INVARIANT
(
c
Ë((0<=(c)Ë&& 
	`UCHAR_IS_INVARIANT
(c))

	)

148 #i‡
U_CHARSET_FAMILY
==
U_ASCII_FAMILY


149 
	#CHAR_TO_UCHAR
(
c
Ë
	)
c

150 
	#UCHAR_TO_CHAR
(
c
Ë
	)
c

151 #ñi‡
U_CHARSET_FAMILY
==
U_EBCDIC_FAMILY


152 
	#CHAR_TO_UCHAR
(
u
Ë
asciiFromEbcdic
[u]

	)

153 
	#UCHAR_TO_CHAR
(
u
Ë
ebcdicFromAscii
[u]

	)

155 #îr‹ 
U_CHARSET_FAMILY
 
is
 
nŸ
 
vÆid


159 
U_CAPI
 
U_EXPORT2


160 
	$u_ch¨sToUCh¨s
(c⁄° *
cs
, 
UCh¨
 *
us
, 
öt32_t
 
Àngth
) {

161 
UCh¨
 
u
;

162 
uöt8_t
 
c
;

169 
Àngth
>0) {

170 
c
=(
uöt8_t
)(*
cs
++);

171 
u
=(
UCh¨
)
	`CHAR_TO_UCHAR
(
c
);

172 
	`U_ASSERT
((
u
!=0 || 
c
==0));

173 *
us
++=
u
;

174 --
Àngth
;

176 
	}
}

178 
U_CAPI
 
U_EXPORT2


179 
	$u_UCh¨sToCh¨s
(c⁄° 
UCh¨
 *
us
, *
cs
, 
öt32_t
 
Àngth
) {

180 
UCh¨
 
u
;

182 
Àngth
>0) {

183 
u
=*
us
++;

184 if(!
	`UCHAR_IS_INVARIANT
(
u
)) {

185 
	`U_ASSERT
(
FALSE
);

186 
u
=0;

188 *
cs
++=()
	`UCHAR_TO_CHAR
(
u
);

189 --
Àngth
;

191 
	}
}

193 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


194 
	$u¥v_isInv¨ü¡Såög
(c⁄° *
s
, 
öt32_t
 
Àngth
) {

195 
uöt8_t
 
c
;

198 if(
Àngth
<0) {

200 
c
=(
uöt8_t
)*
s
++;

201 if(
c
==0) {

206 if(
Àngth
==0) {

209 --
Àngth
;

210 
c
=(
uöt8_t
)*
s
++;

211 if(
c
==0) {

221 #i‡
U_CHARSET_FAMILY
==
U_ASCII_FAMILY


222 if(!
	`UCHAR_IS_INVARIANT
(
c
)) {

223  
FALSE
;

225 #ñi‡
U_CHARSET_FAMILY
==
U_EBCDIC_FAMILY


226 
c
=
	`CHAR_TO_UCHAR
(c);

227 if(
c
==0 || !
	`UCHAR_IS_INVARIANT
(c)) {

228  
FALSE
;

231 #îr‹ 
U_CHARSET_FAMILY
 
is
 
nŸ
 
vÆid


234  
TRUE
;

235 
	}
}

237 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


238 
	$u¥v_isInv¨ü¡USåög
(c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
) {

239 
UCh¨
 
c
;

242 if(
Àngth
<0) {

244 
c
=*
s
++;

245 if(
c
==0) {

250 if(
Àngth
==0) {

253 --
Àngth
;

254 
c
=*
s
++;

261 if(!
	`UCHAR_IS_INVARIANT
(
c
)) {

262  
FALSE
;

265  
TRUE
;

266 
	}
}

271 
U_CAPI
 
öt32_t
 
U_EXPORT2


272 
	$u¥v_ebcdicFromAscii
(c⁄° 
UD©aSw≠≥r
 *
ds
,

273 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

274 
UEº‹Code
 *
pEº‹Code
) {

275 c⁄° 
uöt8_t
 *
s
;

276 
uöt8_t
 *
t
;

277 
uöt8_t
 
c
;

279 
öt32_t
 
cou¡
;

281 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

284 if(
ds
==
NULL
 || 
öD©a
==NULL || 
Àngth
<0 || (Àngth>0 && 
outD©a
==NULL)) {

285 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

290 
s
=(c⁄° 
uöt8_t
 *)
öD©a
;

291 
t
=(
uöt8_t
 *)
outD©a
;

292 
cou¡
=
Àngth
;

293 
cou¡
>0) {

294 
c
=*
s
++;

295 if(!
	`UCHAR_IS_INVARIANT
(
c
)) {

296 
	`ud©a_¥ötEº‹
(
ds
, "uprv_ebcdicFromAscii() string[%d] containsá variant character inÖosition %d\n",

297 
Àngth
,Üígth-
cou¡
);

298 *
pEº‹Code
=
U_INVALID_CHAR_FOUND
;

301 *
t
++=
ebcdicFromAscii
[
c
];

302 --
cou¡
;

305  
Àngth
;

306 
	}
}

309 
U_CFUNC
 
öt32_t


310 
	$u¥v_c›yAscii
(c⁄° 
UD©aSw≠≥r
 *
ds
,

311 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

312 
UEº‹Code
 *
pEº‹Code
) {

313 c⁄° 
uöt8_t
 *
s
;

314 
uöt8_t
 
c
;

316 
öt32_t
 
cou¡
;

318 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

321 if(
ds
==
NULL
 || 
öD©a
==NULL || 
Àngth
<0 || (Àngth>0 && 
outD©a
==NULL)) {

322 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

327 
s
=(c⁄° 
uöt8_t
 *)
öD©a
;

328 
cou¡
=
Àngth
;

329 
cou¡
>0) {

330 
c
=*
s
++;

331 if(!
	`UCHAR_IS_INVARIANT
(
c
)) {

332 
	`ud©a_¥ötEº‹
(
ds
, "uprv_copyFromAscii() string[%d] containsá variant character inÖosition %d\n",

333 
Àngth
,Üígth-
cou¡
);

334 *
pEº‹Code
=
U_INVALID_CHAR_FOUND
;

337 --
cou¡
;

340 if(
Àngth
>0 && 
öD©a
!=
outD©a
) {

341 
	`u¥v_mem˝y
(
outD©a
, 
öD©a
, 
Àngth
);

344  
Àngth
;

345 
	}
}

348 
U_CFUNC
 
öt32_t


349 
	$u¥v_asciiFromEbcdic
(c⁄° 
UD©aSw≠≥r
 *
ds
,

350 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

351 
UEº‹Code
 *
pEº‹Code
) {

352 c⁄° 
uöt8_t
 *
s
;

353 
uöt8_t
 *
t
;

354 
uöt8_t
 
c
;

356 
öt32_t
 
cou¡
;

358 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

361 if(
ds
==
NULL
 || 
öD©a
==NULL || 
Àngth
<0 || (Àngth>0 && 
outD©a
==NULL)) {

362 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

367 
s
=(c⁄° 
uöt8_t
 *)
öD©a
;

368 
t
=(
uöt8_t
 *)
outD©a
;

369 
cou¡
=
Àngth
;

370 
cou¡
>0) {

371 
c
=*
s
++;

372 if(
c
!=0 && ((c=
asciiFromEbcdic
[c])==0 || !
	`UCHAR_IS_INVARIANT
(c))) {

373 
	`ud©a_¥ötEº‹
(
ds
, "uprv_asciiFromEbcdic() string[%d] containsá variant character inÖosition %d\n",

374 
Àngth
,Üígth-
cou¡
);

375 *
pEº‹Code
=
U_INVALID_CHAR_FOUND
;

378 *
t
++=
c
;

379 --
cou¡
;

382  
Àngth
;

383 
	}
}

386 
U_CFUNC
 
öt32_t


387 
	$u¥v_c›yEbcdic
(c⁄° 
UD©aSw≠≥r
 *
ds
,

388 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

389 
UEº‹Code
 *
pEº‹Code
) {

390 c⁄° 
uöt8_t
 *
s
;

391 
uöt8_t
 
c
;

393 
öt32_t
 
cou¡
;

395 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

398 if(
ds
==
NULL
 || 
öD©a
==NULL || 
Àngth
<0 || (Àngth>0 && 
outD©a
==NULL)) {

399 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

404 
s
=(c⁄° 
uöt8_t
 *)
öD©a
;

405 
cou¡
=
Àngth
;

406 
cou¡
>0) {

407 
c
=*
s
++;

408 if(
c
!=0 && ((c=
asciiFromEbcdic
[c])==0 || !
	`UCHAR_IS_INVARIANT
(c))) {

409 
	`ud©a_¥ötEº‹
(
ds
, "uprv_copyEbcdic() string[%] containsá variant character inÖosition %d\n",

410 
Àngth
,Üígth-
cou¡
);

411 *
pEº‹Code
=
U_INVALID_CHAR_FOUND
;

414 --
cou¡
;

417 if(
Àngth
>0 && 
öD©a
!=
outD©a
) {

418 
	`u¥v_mem˝y
(
outD©a
, 
öD©a
, 
Àngth
);

421  
Àngth
;

422 
	}
}

425 
U_CFUNC
 
öt32_t


426 
	$u¥v_com∑ªInvAscii
(c⁄° 
UD©aSw≠≥r
 *
ds
,

427 c⁄° *
outSåög
, 
öt32_t
 
outLígth
,

428 c⁄° 
UCh¨
 *
loˇlSåög
, 
öt32_t
 
loˇlLígth
) {

429 
öt32_t
 
möLígth
;

430 
UCh¨32
 
c1
, 
c2
;

431 
uöt8_t
 
c
;

433 if(
outSåög
==
NULL
 || 
outLígth
<-1 || 
loˇlSåög
==NULL || 
loˇlLígth
<-1) {

437 if(
outLígth
<0) {

438 
outLígth
=(
öt32_t
)
	`u¥v_°æí
(
outSåög
);

440 if(
loˇlLígth
<0) {

441 
loˇlLígth
=
	`u_°æí
(
loˇlSåög
);

444 
möLígth

outLígth
<
loˇlLígth
 ? outLength :ÜocalLength;

446 
möLígth
>0) {

447 
c
=(
uöt8_t
)*
outSåög
++;

448 if(
	`UCHAR_IS_INVARIANT
(
c
)) {

449 
c1
=
c
;

451 
c1
=-1;

454 
c2
=*
loˇlSåög
++;

455 if(!
	`UCHAR_IS_INVARIANT
(
c2
)) {

456 
c2
=-2;

459 if((
c1
-=
c2
)!=0) {

460  
c1
;

463 --
möLígth
;

467  
outLígth
-
loˇlLígth
;

468 
	}
}

470 
U_CFUNC
 
öt32_t


471 
	$u¥v_com∑ªInvEbcdic
(c⁄° 
UD©aSw≠≥r
 *
ds
,

472 c⁄° *
outSåög
, 
öt32_t
 
outLígth
,

473 c⁄° 
UCh¨
 *
loˇlSåög
, 
öt32_t
 
loˇlLígth
) {

474 
öt32_t
 
möLígth
;

475 
UCh¨32
 
c1
, 
c2
;

476 
uöt8_t
 
c
;

478 if(
outSåög
==
NULL
 || 
outLígth
<-1 || 
loˇlSåög
==NULL || 
loˇlLígth
<-1) {

482 if(
outLígth
<0) {

483 
outLígth
=(
öt32_t
)
	`u¥v_°æí
(
outSåög
);

485 if(
loˇlLígth
<0) {

486 
loˇlLígth
=
	`u_°æí
(
loˇlSåög
);

489 
möLígth

outLígth
<
loˇlLígth
 ? outLength :ÜocalLength;

491 
möLígth
>0) {

492 
c
=(
uöt8_t
)*
outSåög
++;

493 if(
c
==0) {

494 
c1
=0;

495 } if((
c1
=
asciiFromEbcdic
[
c
])!=0 && 
	`UCHAR_IS_INVARIANT
(c1)) {

498 
c1
=-1;

501 
c2
=*
loˇlSåög
++;

502 if(!
	`UCHAR_IS_INVARIANT
(
c2
)) {

503 
c2
=-2;

506 if((
c1
-=
c2
)!=0) {

507  
c1
;

510 --
möLígth
;

514  
outLígth
-
loˇlLígth
;

515 
	}
}

517 
U_CAPI
 
öt32_t
 
U_EXPORT2


518 
	$u¥v_com∑ªInvEbcdicAsAscii
(c⁄° *
s1
, c⁄° *
s2
) {

519 
öt32_t
 
c1
, 
c2
;

521 ;; ++
s1
, ++
s2
) {

522 
c1
=(
uöt8_t
)*
s1
;

523 
c2
=(
uöt8_t
)*
s2
;

524 if(
c1
!=
c2
) {

525 if(
c1
!=0 && ((c1=
asciiFromEbcdic
[c1])==0 || !
	`UCHAR_IS_INVARIANT
(c1))) {

526 
c1
=-(
öt32_t
)(
uöt8_t
)*
s1
;

528 if(
c2
!=0 && ((c2=
asciiFromEbcdic
[c2])==0 || !
	`UCHAR_IS_INVARIANT
(c2))) {

529 
c2
=-(
öt32_t
)(
uöt8_t
)*
s2
;

531  
c1
-
c2
;

532 } if(
c1
==0) {

536 
	}
}

539 
U_INTERNAL
 
uöt8_t
* 
U_EXPORT2


540 
	$u¥v_´°∫˝y
(
uöt8_t
 *
d°
, c⁄° uöt8_à*
§c
, 
öt32_t
 
n
)

542 
uöt8_t
 *
‹ig_d°
 = 
d°
;

544 if(
n
==-1) {

545 
n
 = 
	`u¥v_°æí
((c⁄° *)
§c
)+1;

548 *
§c
 && 
n
>0) {

549 *(
d°
++Ë
asciiFromEbcdic
[*(
§c
++)];

550 
n
--;

553 
n
>0) {

554 *(
d°
++) = 0;

555 
n
--;

557  
‹ig_d°
;

558 
	}
}

560 
U_INTERNAL
 
uöt8_t
* 
U_EXPORT2


561 
	$u¥v_ó°∫˝y
(
uöt8_t
 *
d°
, c⁄° uöt8_à*
§c
, 
öt32_t
 
n
)

563 
uöt8_t
 *
‹ig_d°
 = 
d°
;

565 if(
n
==-1) {

566 
n
 = 
	`u¥v_°æí
((c⁄° *)
§c
)+1;

569 *
§c
 && 
n
>0) {

570 
ch
 = 
ebcdicFromAscii
[*(
§c
++)];

571 if(
ch
 == 0) {

572 
ch
 = 
ebcdicFromAscii
[0x3f];

574 *(
d°
++Ë
ch
;

575 
n
--;

578 
n
>0) {

579 *(
d°
++) = 0;

580 
n
--;

582  
‹ig_d°
;

583 
	}
}

	@uinvchar.h

20 #i‚de‡
__UINVCHAR_H__


21 
	#__UINVCHAR_H__


	)

23 
	~"unicode/uty≥s.h
"

35 
U_INTERNAL
 
UBoﬁ
 
U_EXPORT2


36 
u¥v_isInv¨ü¡Såög
(c⁄° *
s
, 
öt32_t
 
Àngth
);

48 
U_INTERNAL
 
UBoﬁ
 
U_EXPORT2


49 
u¥v_isInv¨ü¡USåög
(c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
);

56 #i‡
U_CHARSET_FAMILY
==
U_ASCII_FAMILY


57 
	#U_UPPER_ORDINAL
(
x
Ë((x)-'A')

	)

58 #ñi‡
U_CHARSET_FAMILY
==
U_EBCDIC_FAMILY


59 
	#U_UPPER_ORDINAL
(
x
) (((x) < 'J') ? ((x)-'A') : \

60 (((
x
) < 'S') ? ((x)-'J'+9) : \

61 ((
x
)-'S'+18)))

	)

63 #îr‹ 
Unknown
 
ch¨£t
 
Ámûy
!

70 
U_INTERNAL
 
öt32_t
 
U_EXPORT2


71 
u¥v_com∑ªInvEbcdicAsAscii
(c⁄° *
s1
, c⁄° *
s2
);

78 #i‡
U_CHARSET_FAMILY
==
U_ASCII_FAMILY


79 
	#u¥v_com∑ªInvCh¨sAsAscii
(
s1
, 
s2
Ë
	`u¥v_°rcmp
(s1, s2)

	)

80 #ñi‡
U_CHARSET_FAMILY
==
U_EBCDIC_FAMILY


81 
	#u¥v_com∑ªInvCh¨sAsAscii
(
s1
, 
s2
Ë
	`u¥v_com∑ªInvEbcdicAsAscii
(s1, s2)

	)

83 #îr‹ 
Unknown
 
ch¨£t
 
Ámûy
!

91 
U_INTERNAL
 
uöt8_t
* 
U_EXPORT2


92 
u¥v_´°∫˝y
(
uöt8_t
 *
d°
, c⁄° uöt8_à*
§c
, 
öt32_t
 
n
);

100 
U_INTERNAL
 
uöt8_t
* 
U_EXPORT2


101 
u¥v_ó°∫˝y
(
uöt8_t
 *
d°
, c⁄° uöt8_à*
§c
, 
öt32_t
 
n
);

	@uiter.cpp

17 
	~"unicode/uty≥s.h
"

18 
	~"unicode/u°rög.h
"

19 
	~"unicode/ch¨ôî.h
"

20 
	~"unicode/ªp.h
"

21 
	~"unicode/uôî.h
"

22 
	~"c°rög.h
"

24 
	gU_NAMESPACE_USE


26 
	#IS_EVEN
(
n
Ë((“)&1)==0)

	)

27 
	#IS_POINTER_EVEN
(
p
Ë
	`IS_EVEN
((
size_t
Ì)

	)

29 
U_CDECL_BEGIN


33 
öt32_t
 
U_CALLCONV


34 
	$no›GëIndex
(
UCh¨Iãøt‹
 * , 
UCh¨Iãøt‹Origö
 ) {

36 
	}
}

38 
öt32_t
 
U_CALLCONV


39 
	$no›Move
(
UCh¨Iãøt‹
 * , 
öt32_t
 , 
UCh¨Iãøt‹Origö
 ) {

41 
	}
}

43 
UBoﬁ
 
U_CALLCONV


44 
	$no›HasNext
(
UCh¨Iãøt‹
 * ) {

45  
FALSE
;

46 
	}
}

48 
UCh¨32
 
U_CALLCONV


49 
	$no›Cuºít
(
UCh¨Iãøt‹
 * ) {

50  
U_SENTINEL
;

51 
	}
}

53 
uöt32_t
 
U_CALLCONV


54 
	$no›GëSèã
(c⁄° 
UCh¨Iãøt‹
 * ) {

55  
UITER_NO_STATE
;

56 
	}
}

58 
U_CALLCONV


59 
	$no›SëSèã
(
UCh¨Iãøt‹
 * , 
uöt32_t
 , 
UEº‹Code
 *
pEº‹Code
) {

60 *
pEº‹Code
=
U_UNSUPPORTED_ERROR
;

61 
	}
}

63 c⁄° 
UCh¨Iãøt‹
 
	gno›Iãøt‹
={

65 
no›GëIndex
,

66 
no›Move
,

67 
no›HasNext
,

68 
no›HasNext
,

69 
no›Cuºít
,

70 
no›Cuºít
,

71 
no›Cuºít
,

72 
NULL
,

73 
no›GëSèã
,

74 
no›SëSèã


86 
öt32_t
 
U_CALLCONV


87 
	$°rögIãøt‹GëIndex
(
UCh¨Iãøt‹
 *
ôî
, 
UCh¨Iãøt‹Origö
 
‹igö
) {

88 
‹igö
) {

89 
UITER_ZERO
:

91 
UITER_START
:

92  
ôî
->
°¨t
;

93 
UITER_CURRENT
:

94  
ôî
->
ödex
;

95 
UITER_LIMIT
:

96  
ôî
->
limô
;

97 
UITER_LENGTH
:

98  
ôî
->
Àngth
;

104 
	}
}

106 
öt32_t
 
U_CALLCONV


107 
	$°rögIãøt‹Move
(
UCh¨Iãøt‹
 *
ôî
, 
öt32_t
 
dñè
, 
UCh¨Iãøt‹Origö
 
‹igö
) {

108 
öt32_t
 
pos
;

110 
‹igö
) {

111 
UITER_ZERO
:

112 
pos
=
dñè
;

114 
UITER_START
:

115 
pos
=
ôî
->
°¨t
+
dñè
;

117 
UITER_CURRENT
:

118 
pos
=
ôî
->
ödex
+
dñè
;

120 
UITER_LIMIT
:

121 
pos
=
ôî
->
limô
+
dñè
;

123 
UITER_LENGTH
:

124 
pos
=
ôî
->
Àngth
+
dñè
;

130 if(
pos
<
ôî
->
°¨t
) {

131 
pos
=
ôî
->
°¨t
;

132 } if(
pos
>
ôî
->
limô
) {

133 
pos
=
ôî
->
limô
;

136  
ôî
->
ödex
=
pos
;

137 
	}
}

139 
UBoﬁ
 
U_CALLCONV


140 
	$°rögIãøt‹HasNext
(
UCh¨Iãøt‹
 *
ôî
) {

141  
ôî
->
ödex
<ôî->
limô
;

142 
	}
}

144 
UBoﬁ
 
U_CALLCONV


145 
	$°rögIãøt‹HasPªvious
(
UCh¨Iãøt‹
 *
ôî
) {

146  
ôî
->
ödex
>ôî->
°¨t
;

147 
	}
}

149 
UCh¨32
 
U_CALLCONV


150 
	$°rögIãøt‹Cuºít
(
UCh¨Iãøt‹
 *
ôî
) {

151 if(
ôî
->
ödex
<ôî->
limô
) {

152  ((c⁄° 
UCh¨
 *)(
ôî
->
c⁄ãxt
))[ôî->
ödex
];

154  
U_SENTINEL
;

156 
	}
}

158 
UCh¨32
 
U_CALLCONV


159 
	$°rögIãøt‹Next
(
UCh¨Iãøt‹
 *
ôî
) {

160 if(
ôî
->
ödex
<ôî->
limô
) {

161  ((c⁄° 
UCh¨
 *)(
ôî
->
c⁄ãxt
))[ôî->
ödex
++];

163  
U_SENTINEL
;

165 
	}
}

167 
UCh¨32
 
U_CALLCONV


168 
	$°rögIãøt‹Pªvious
(
UCh¨Iãøt‹
 *
ôî
) {

169 if(
ôî
->
ödex
>ôî->
°¨t
) {

170  ((c⁄° 
UCh¨
 *)(
ôî
->
c⁄ãxt
))[--ôî->
ödex
];

172  
U_SENTINEL
;

174 
	}
}

176 
uöt32_t
 
U_CALLCONV


177 
	$°rögIãøt‹GëSèã
(c⁄° 
UCh¨Iãøt‹
 *
ôî
) {

178  (
uöt32_t
)
ôî
->
ödex
;

179 
	}
}

181 
U_CALLCONV


182 
	$°rögIãøt‹SëSèã
(
UCh¨Iãøt‹
 *
ôî
, 
uöt32_t
 
°©e
, 
UEº‹Code
 *
pEº‹Code
) {

183 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

185 } if(
ôî
==
NULL
) {

186 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

187 } if((
öt32_t
)
°©e
<
ôî
->
°¨t
 || iãr->
limô
<(int32_t)state) {

188 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

190 
ôî
->
ödex
=(
öt32_t
)
°©e
;

192 
	}
}

194 c⁄° 
UCh¨Iãøt‹
 
	g°rögIãøt‹
={

196 
°rögIãøt‹GëIndex
,

197 
°rögIãøt‹Move
,

198 
°rögIãøt‹HasNext
,

199 
°rögIãøt‹HasPªvious
,

200 
°rögIãøt‹Cuºít
,

201 
°rögIãøt‹Next
,

202 
°rögIãøt‹Pªvious
,

203 
NULL
,

204 
°rögIãøt‹GëSèã
,

205 
°rögIãøt‹SëSèã


208 
U_CAPI
 
U_EXPORT2


209 
	$uôî_£tSåög
(
UCh¨Iãøt‹
 *
ôî
, c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
) {

210 if(
ôî
!=0) {

211 if(
s
!=0 && 
Àngth
>=-1) {

212 *
ôî
=
°rögIãøt‹
;

213 
ôî
->
c⁄ãxt
=
s
;

214 if(
Àngth
>=0) {

215 
ôî
->
Àngth
=length;

217 
ôî
->
Àngth
=
	`u_°æí
(
s
);

219 
ôî
->
limô
=ôî->
Àngth
;

221 *
ôî
=
no›Iãøt‹
;

224 
	}
}

239 
ölöe
 
UCh¨32


240 
	$utf16BEIãøt‹Gë
(
UCh¨Iãøt‹
 *
ôî
, 
öt32_t
 
ödex
) {

241 c⁄° 
uöt8_t
 *
p
=(c⁄° uöt8_à*)
ôî
->
c⁄ãxt
;

242  ((
UCh¨
)
p
[2*
ödex
]<<8)|(UChar)p[2*index+1];

243 
	}
}

245 
UCh¨32
 
U_CALLCONV


246 
	$utf16BEIãøt‹Cuºít
(
UCh¨Iãøt‹
 *
ôî
) {

247 
öt32_t
 
ödex
;

249 if((
ödex
=
ôî
->ödex)<ôî->
limô
) {

250  
	`utf16BEIãøt‹Gë
(
ôî
, 
ödex
);

252  
U_SENTINEL
;

254 
	}
}

256 
UCh¨32
 
U_CALLCONV


257 
	$utf16BEIãøt‹Next
(
UCh¨Iãøt‹
 *
ôî
) {

258 
öt32_t
 
ödex
;

260 if((
ödex
=
ôî
->ödex)<ôî->
limô
) {

261 
ôî
->
ödex
=index+1;

262  
	`utf16BEIãøt‹Gë
(
ôî
, 
ödex
);

264  
U_SENTINEL
;

266 
	}
}

268 
UCh¨32
 
U_CALLCONV


269 
	$utf16BEIãøt‹Pªvious
(
UCh¨Iãøt‹
 *
ôî
) {

270 
öt32_t
 
ödex
;

272 if((
ödex
=
ôî
->ödex)>ôî->
°¨t
) {

273 
ôî
->
ödex
=--index;

274  
	`utf16BEIãøt‹Gë
(
ôî
, 
ödex
);

276  
U_SENTINEL
;

278 
	}
}

280 c⁄° 
UCh¨Iãøt‹
 
	gutf16BEIãøt‹
={

282 
°rögIãøt‹GëIndex
,

283 
°rögIãøt‹Move
,

284 
°rögIãøt‹HasNext
,

285 
°rögIãøt‹HasPªvious
,

286 
utf16BEIãøt‹Cuºít
,

287 
utf16BEIãøt‹Next
,

288 
utf16BEIãøt‹Pªvious
,

289 
NULL
,

290 
°rögIãøt‹GëSèã
,

291 
°rögIãøt‹SëSèã


299 
öt32_t


300 
	$utf16BE_°æí
(c⁄° *
s
) {

301 if(
	`IS_POINTER_EVEN
(
s
)) {

307  
	`u_°æí
((c⁄° 
UCh¨
 *)
s
);

310 c⁄° *
p
=
s
;

312 !(*
p
==0 &&Ö[1]==0)) {

313 
p
+=2;

315  (
öt32_t
)((
p
-
s
)/2);

317 
	}
}

319 
U_CAPI
 
U_EXPORT2


320 
	$uôî_£tUTF16BE
(
UCh¨Iãøt‹
 *
ôî
, c⁄° *
s
, 
öt32_t
 
Àngth
) {

321 if(
ôî
!=
NULL
) {

323 if(
s
!=
NULL
 && (
Àngth
==-1 || (Àngth>=0 && 
	`IS_EVEN
(length)))) {

325 
Àngth
>>=1;

327 if(
U_IS_BIG_ENDIAN
 && 
	`IS_POINTER_EVEN
(
s
)) {

329 
	`uôî_£tSåög
(
ôî
, (c⁄° 
UCh¨
 *)
s
, 
Àngth
);

333 *
ôî
=
utf16BEIãøt‹
;

334 
ôî
->
c⁄ãxt
=
s
;

335 if(
Àngth
>=0) {

336 
ôî
->
Àngth
=length;

338 
ôî
->
Àngth
=
	`utf16BE_°æí
(
s
);

340 
ôî
->
limô
=ôî->
Àngth
;

342 *
ôî
=
no›Iãøt‹
;

345 
	}
}

356 
öt32_t
 
U_CALLCONV


357 
	$ch¨a˘îIãøt‹GëIndex
(
UCh¨Iãøt‹
 *
ôî
, 
UCh¨Iãøt‹Origö
 
‹igö
) {

358 
‹igö
) {

359 
UITER_ZERO
:

361 
UITER_START
:

362  ((
Ch¨a˘îIãøt‹
 *)(
ôî
->
c⁄ãxt
))->
	`°¨tIndex
();

363 
UITER_CURRENT
:

364  ((
Ch¨a˘îIãøt‹
 *)(
ôî
->
c⁄ãxt
))->
	`gëIndex
();

365 
UITER_LIMIT
:

366  ((
Ch¨a˘îIãøt‹
 *)(
ôî
->
c⁄ãxt
))->
	`ídIndex
();

367 
UITER_LENGTH
:

368  ((
Ch¨a˘îIãøt‹
 *)(
ôî
->
c⁄ãxt
))->
	`gëLígth
();

374 
	}
}

376 
öt32_t
 
U_CALLCONV


377 
	$ch¨a˘îIãøt‹Move
(
UCh¨Iãøt‹
 *
ôî
, 
öt32_t
 
dñè
, 
UCh¨Iãøt‹Origö
 
‹igö
) {

378 
‹igö
) {

379 
UITER_ZERO
:

380 ((
Ch¨a˘îIãøt‹
 *)(
ôî
->
c⁄ãxt
))->
	`£tIndex
(
dñè
);

381  ((
Ch¨a˘îIãøt‹
 *)(
ôî
->
c⁄ãxt
))->
	`gëIndex
();

382 
UITER_START
:

383 
UITER_CURRENT
:

384 
UITER_LIMIT
:

385  ((
Ch¨a˘îIãøt‹
 *)(
ôî
->
c⁄ãxt
))->
	`move
(
dñè
, (Ch¨a˘îIãøt‹::
EOrigö
)
‹igö
);

386 
UITER_LENGTH
:

387 ((
Ch¨a˘îIãøt‹
 *)(
ôî
->
c⁄ãxt
))->
	`£tIndex
(((Ch¨a˘îIãøt‹ *)(ôî->c⁄ãxt))->
	`gëLígth
()+
dñè
);

388  ((
Ch¨a˘îIãøt‹
 *)(
ôî
->
c⁄ãxt
))->
	`gëIndex
();

394 
	}
}

396 
UBoﬁ
 
U_CALLCONV


397 
	$ch¨a˘îIãøt‹HasNext
(
UCh¨Iãøt‹
 *
ôî
) {

398  ((
Ch¨a˘îIãøt‹
 *)(
ôî
->
c⁄ãxt
))->
	`hasNext
();

399 
	}
}

401 
UBoﬁ
 
U_CALLCONV


402 
	$ch¨a˘îIãøt‹HasPªvious
(
UCh¨Iãøt‹
 *
ôî
) {

403  ((
Ch¨a˘îIãøt‹
 *)(
ôî
->
c⁄ãxt
))->
	`hasPªvious
();

404 
	}
}

406 
UCh¨32
 
U_CALLCONV


407 
	$ch¨a˘îIãøt‹Cuºít
(
UCh¨Iãøt‹
 *
ôî
) {

408 
UCh¨32
 
c
;

410 
c
=((
Ch¨a˘îIãøt‹
 *)(
ôî
->
c⁄ãxt
))->
	`cuºít
();

411 if(
c
!=0xfff‡|| ((
Ch¨a˘îIãøt‹
 *)(
ôî
->
c⁄ãxt
))->
	`hasNext
()) {

412  
c
;

414  
U_SENTINEL
;

416 
	}
}

418 
UCh¨32
 
U_CALLCONV


419 
	$ch¨a˘îIãøt‹Next
(
UCh¨Iãøt‹
 *
ôî
) {

420 if(((
Ch¨a˘îIãøt‹
 *)(
ôî
->
c⁄ãxt
))->
	`hasNext
()) {

421  ((
Ch¨a˘îIãøt‹
 *)(
ôî
->
c⁄ãxt
))->
	`√xtPo°Inc
();

423  
U_SENTINEL
;

425 
	}
}

427 
UCh¨32
 
U_CALLCONV


428 
	$ch¨a˘îIãøt‹Pªvious
(
UCh¨Iãøt‹
 *
ôî
) {

429 if(((
Ch¨a˘îIãøt‹
 *)(
ôî
->
c⁄ãxt
))->
	`hasPªvious
()) {

430  ((
Ch¨a˘îIãøt‹
 *)(
ôî
->
c⁄ãxt
))->
	`¥evious
();

432  
U_SENTINEL
;

434 
	}
}

436 
uöt32_t
 
U_CALLCONV


437 
	$ch¨a˘îIãøt‹GëSèã
(c⁄° 
UCh¨Iãøt‹
 *
ôî
) {

438  ((
Ch¨a˘îIãøt‹
 *)(
ôî
->
c⁄ãxt
))->
	`gëIndex
();

439 
	}
}

441 
U_CALLCONV


442 
	$ch¨a˘îIãøt‹SëSèã
(
UCh¨Iãøt‹
 *
ôî
, 
uöt32_t
 
°©e
, 
UEº‹Code
 *
pEº‹Code
) {

443 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

445 } if(
ôî
==
NULL
 || iãr->
c⁄ãxt
==NULL) {

446 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

447 } if((
öt32_t
)
°©e
<((
Ch¨a˘îIãøt‹
 *)(
ôî
->
c⁄ãxt
))->
	`°¨tIndex
(Ë|| ((Ch¨a˘îIãøt‹ *)(ôî->c⁄ãxt))->
	`ídIndex
()<(int32_t)state) {

448 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

450 ((
Ch¨a˘îIãøt‹
 *)(
ôî
->
c⁄ãxt
))->
	`£tIndex
((
öt32_t
)
°©e
);

452 
	}
}

454 c⁄° 
UCh¨Iãøt‹
 
	gch¨a˘îIãøt‹Wøµî
={

456 
ch¨a˘îIãøt‹GëIndex
,

457 
ch¨a˘îIãøt‹Move
,

458 
ch¨a˘îIãøt‹HasNext
,

459 
ch¨a˘îIãøt‹HasPªvious
,

460 
ch¨a˘îIãøt‹Cuºít
,

461 
ch¨a˘îIãøt‹Next
,

462 
ch¨a˘îIãøt‹Pªvious
,

463 
NULL
,

464 
ch¨a˘îIãøt‹GëSèã
,

465 
ch¨a˘îIãøt‹SëSèã


468 
U_CAPI
 
U_EXPORT2


469 
	$uôî_£tCh¨a˘îIãøt‹
(
UCh¨Iãøt‹
 *
ôî
, 
Ch¨a˘îIãøt‹
 *
ch¨Iãr
) {

470 if(
ôî
!=0) {

471 if(
ch¨Iãr
!=0) {

472 *
ôî
=
ch¨a˘îIãøt‹Wøµî
;

473 
ôî
->
c⁄ãxt
=
ch¨Iãr
;

475 *
ôî
=
no›Iãøt‹
;

478 
	}
}

491 
UCh¨32
 
U_CALLCONV


492 
	$ª∂a˚abÀIãøt‹Cuºít
(
UCh¨Iãøt‹
 *
ôî
) {

493 if(
ôî
->
ödex
<ôî->
limô
) {

494  ((
Rïœ˚abÀ
 *)(
ôî
->
c⁄ãxt
))->
	`ch¨At
(ôî->
ödex
);

496  
U_SENTINEL
;

498 
	}
}

500 
UCh¨32
 
U_CALLCONV


501 
	$ª∂a˚abÀIãøt‹Next
(
UCh¨Iãøt‹
 *
ôî
) {

502 if(
ôî
->
ödex
<ôî->
limô
) {

503  ((
Rïœ˚abÀ
 *)(
ôî
->
c⁄ãxt
))->
	`ch¨At
(ôî->
ödex
++);

505  
U_SENTINEL
;

507 
	}
}

509 
UCh¨32
 
U_CALLCONV


510 
	$ª∂a˚abÀIãøt‹Pªvious
(
UCh¨Iãøt‹
 *
ôî
) {

511 if(
ôî
->
ödex
>ôî->
°¨t
) {

512  ((
Rïœ˚abÀ
 *)(
ôî
->
c⁄ãxt
))->
	`ch¨At
(--ôî->
ödex
);

514  
U_SENTINEL
;

516 
	}
}

518 c⁄° 
UCh¨Iãøt‹
 
	gª∂a˚abÀIãøt‹
={

520 
°rögIãøt‹GëIndex
,

521 
°rögIãøt‹Move
,

522 
°rögIãøt‹HasNext
,

523 
°rögIãøt‹HasPªvious
,

524 
ª∂a˚abÀIãøt‹Cuºít
,

525 
ª∂a˚abÀIãøt‹Next
,

526 
ª∂a˚abÀIãøt‹Pªvious
,

527 
NULL
,

528 
°rögIãøt‹GëSèã
,

529 
°rögIãøt‹SëSèã


532 
U_CAPI
 
U_EXPORT2


533 
	$uôî_£tRïœ˚abÀ
(
UCh¨Iãøt‹
 *
ôî
, c⁄° 
Rïœ˚abÀ
 *
ªp
) {

534 if(
ôî
!=0) {

535 if(
ªp
!=0) {

536 *
ôî
=
ª∂a˚abÀIãøt‹
;

537 
ôî
->
c⁄ãxt
=
ªp
;

538 
ôî
->
limô
=ôî->
Àngth
=
ªp
->
	`Àngth
();

540 *
ôî
=
no›Iãøt‹
;

543 
	}
}

555 
	#UITER_CNV_CAPACITY
 16

	)

583 
öt32_t
 
U_CALLCONV


584 
	$utf8Iãøt‹GëIndex
(
UCh¨Iãøt‹
 *
ôî
, 
UCh¨Iãøt‹Origö
 
‹igö
) {

585 
‹igö
) {

586 
UITER_ZERO
:

587 
UITER_START
:

589 
UITER_CURRENT
:

590 if(
ôî
->
ödex
<0) {

592 c⁄° 
uöt8_t
 *
s
;

593 
UCh¨32
 
c
;

594 
öt32_t
 
i
, 
limô
, 
ödex
;

596 
s
=(c⁄° 
uöt8_t
 *)
ôî
->
c⁄ãxt
;

597 
i
=
ödex
=0;

598 
limô
=
ôî
->
°¨t
;

599 
i
<
limô
) {

600 
	`U8_NEXT
(
s
, 
i
, 
limô
, 
c
);

601 if(
c
<=0xffff) {

602 ++
ödex
;

604 
ödex
+=2;

608 
ôî
->
°¨t
=
i
;

609 if(
i
==
ôî
->
limô
) {

610 
ôî
->
Àngth
=
ödex
;

612 if(
ôî
->
ª£rvedFõld
!=0) {

613 --
ödex
;

615 
ôî
->
ödex
=index;

617  
ôî
->
ödex
;

618 
UITER_LIMIT
:

619 
UITER_LENGTH
:

620 if(
ôî
->
Àngth
<0) {

621 c⁄° 
uöt8_t
 *
s
;

622 
UCh¨32
 
c
;

623 
öt32_t
 
i
, 
limô
, 
Àngth
;

625 
s
=(c⁄° 
uöt8_t
 *)
ôî
->
c⁄ãxt
;

626 if(
ôî
->
ödex
<0) {

631 
i
=
Àngth
=0;

632 
limô
=
ôî
->
°¨t
;

635 
i
<
limô
) {

636 
	`U8_NEXT
(
s
, 
i
, 
limô
, 
c
);

637 if(
c
<=0xffff) {

638 ++
Àngth
;

640 
Àngth
+=2;

645 
ôî
->
°¨t
=
i
;

646 
ôî
->
ödex
ôî->
ª£rvedFõld
!=0 ? 
Àngth
-1 :Üength;

648 
i
=
ôî
->
°¨t
;

649 
Àngth
=
ôî
->
ödex
;

650 if(
ôî
->
ª£rvedFõld
!=0) {

651 ++
Àngth
;

656 
limô
=
ôî
->limit;

657 
i
<
limô
) {

658 
	`U8_NEXT
(
s
, 
i
, 
limô
, 
c
);

659 if(
c
<=0xffff) {

660 ++
Àngth
;

662 
Àngth
+=2;

665 
ôî
->
Àngth
=length;

667  
ôî
->
Àngth
;

673 
	}
}

675 
öt32_t
 
U_CALLCONV


676 
	$utf8Iãøt‹Move
(
UCh¨Iãøt‹
 *
ôî
, 
öt32_t
 
dñè
, 
UCh¨Iãøt‹Origö
 
‹igö
) {

677 c⁄° 
uöt8_t
 *
s
;

678 
UCh¨32
 
c
;

679 
öt32_t
 
pos
;

680 
öt32_t
 
i
;

681 
UBoﬁ
 
havePos
;

684 
‹igö
) {

685 
UITER_ZERO
:

686 
UITER_START
:

687 
pos
=
dñè
;

688 
havePos
=
TRUE
;

691 
UITER_CURRENT
:

692 if(
ôî
->
ödex
>=0) {

693 
pos
=
ôî
->
ödex
+
dñè
;

694 
havePos
=
TRUE
;

697 
pos
=0;

698 
havePos
=
FALSE
;

701 
UITER_LIMIT
:

702 
UITER_LENGTH
:

703 if(
ôî
->
Àngth
>=0) {

704 
pos
=
ôî
->
Àngth
+
dñè
;

705 
havePos
=
TRUE
;

708 
ôî
->
ödex
=-1;

709 
ôî
->
°¨t
=ôî->
limô
;

710 
ôî
->
ª£rvedFõld
=0;

711 if(
dñè
>=0) {

712  
UITER_UNKNOWN_INDEX
;

715 
pos
=0;

716 
havePos
=
FALSE
;

724 if(
havePos
) {

726 if(
pos
<=0) {

727 
ôî
->
ödex
=ôî->
°¨t
=ôî->
ª£rvedFõld
=0;

729 } if(
ôî
->
Àngth
>=0 && 
pos
>=iter->length) {

730 
ôî
->
ödex
=ôî->
Àngth
;

731 
ôî
->
°¨t
=ôî->
limô
;

732 
ôî
->
ª£rvedFõld
=0;

733  
ôî
->
ödex
;

737 if(
ôî
->
ödex
<0 || 
pos
<iter->index/2) {

739 
ôî
->
ödex
=ôî->
°¨t
=ôî->
ª£rvedFõld
=0;

740 } if(
ôî
->
Àngth
>=0 && (ôî->Àngth-
pos
)<’os-ôî->
ödex
)) {

746 
ôî
->
ödex
=ôî->
Àngth
;

747 
ôî
->
°¨t
=ôî->
limô
;

748 
ôî
->
ª£rvedFõld
=0;

751 
dñè
=
pos
-
ôî
->
ödex
;

752 if(
dñè
==0) {

753  
ôî
->
ödex
;

757 if(
dñè
==0) {

758  
UITER_UNKNOWN_INDEX
;

759 } if(-
dñè
>=
ôî
->
°¨t
) {

761 
ôî
->
ödex
=ôî->
°¨t
=ôî->
ª£rvedFõld
=0;

763 } if(
dñè
>=(
ôî
->
limô
-ôî->
°¨t
)) {

765 
ôî
->
ödex
=ôî->
Àngth
;

766 
ôî
->
°¨t
=ôî->
limô
;

767 
ôî
->
ª£rvedFõld
=0;

768  
ôî
->
ödex
>=0 ? iãr->ödex : (
öt32_t
)
UITER_UNKNOWN_INDEX
;

775 
s
=(c⁄° 
uöt8_t
 *)
ôî
->
c⁄ãxt
;

776 
pos
=
ôî
->
ödex
;

777 
i
=
ôî
->
°¨t
;

778 if(
dñè
>0) {

780 
öt32_t
 
limô
=
ôî
->limit;

781 if(
ôî
->
ª£rvedFõld
!=0) {

782 
ôî
->
ª£rvedFõld
=0;

783 ++
pos
;

784 --
dñè
;

786 
dñè
>0 && 
i
<
limô
) {

787 
	`U8_NEXT
(
s
, 
i
, 
limô
, 
c
);

788 if(
c
<0xffff) {

789 ++
pos
;

790 --
dñè
;

791 } if(
dñè
>=2) {

792 
pos
+=2;

793 
dñè
-=2;

796 
ôî
->
ª£rvedFõld
=
c
;

797 ++
pos
;

801 if(
i
==
limô
) {

802 if(
ôî
->
Àngth
<0 && iãr->
ödex
>=0) {

803 
ôî
->
Àngth
ôî->
ª£rvedFõld
==0 ? 
pos
 :Öos+1;

804 } if(
ôî
->
ödex
<0 && iãr->
Àngth
>=0) {

805 
ôî
->
ödex
ôî->
ª£rvedFõld
==0 ? iãr->
Àngth
 : iter->length-1;

810 if(
ôî
->
ª£rvedFõld
!=0) {

811 
ôî
->
ª£rvedFõld
=0;

812 
i
-=4;

813 --
pos
;

814 ++
dñè
;

816 
dñè
<0 && 
i
>0) {

817 
	`U8_PREV
(
s
, 0, 
i
, 
c
);

818 if(
c
<0xffff) {

819 --
pos
;

820 ++
dñè
;

821 } if(
dñè
<=-2) {

822 
pos
-=2;

823 
dñè
+=2;

826 
i
+=4;

827 
ôî
->
ª£rvedFõld
=
c
;

828 --
pos
;

834 
ôî
->
°¨t
=
i
;

835 if(
ôî
->
ödex
>=0) {

836  
ôî
->
ödex
=
pos
;

839 if(
i
<=1) {

840  
ôî
->
ödex
=
i
;

843  
UITER_UNKNOWN_INDEX
;

846 
	}
}

848 
UBoﬁ
 
U_CALLCONV


849 
	$utf8Iãøt‹HasNext
(
UCh¨Iãøt‹
 *
ôî
) {

850  
ôî
->
°¨t
<ôî->
limô
 || iãr->
ª£rvedFõld
!=0;

851 
	}
}

853 
UBoﬁ
 
U_CALLCONV


854 
	$utf8Iãøt‹HasPªvious
(
UCh¨Iãøt‹
 *
ôî
) {

855  
ôî
->
°¨t
>0;

856 
	}
}

858 
UCh¨32
 
U_CALLCONV


859 
	$utf8Iãøt‹Cuºít
(
UCh¨Iãøt‹
 *
ôî
) {

860 if(
ôî
->
ª£rvedFõld
!=0) {

861  
	`U16_TRAIL
(
ôî
->
ª£rvedFõld
);

862 } if(
ôî
->
°¨t
<ôî->
limô
) {

863 c⁄° 
uöt8_t
 *
s
=(c⁄° uöt8_à*)
ôî
->
c⁄ãxt
;

864 
UCh¨32
 
c
;

865 
öt32_t
 
i
=
ôî
->
°¨t
;

867 
	`U8_NEXT
(
s
, 
i
, 
ôî
->
limô
, 
c
);

868 if(
c
<0) {

870 } if(
c
<=0xffff) {

871  
c
;

873  
	`U16_LEAD
(
c
);

876  
U_SENTINEL
;

878 
	}
}

880 
UCh¨32
 
U_CALLCONV


881 
	$utf8Iãøt‹Next
(
UCh¨Iãøt‹
 *
ôî
) {

882 
öt32_t
 
ödex
;

884 if(
ôî
->
ª£rvedFõld
!=0) {

885 
UCh¨
 
åaû
=
	`U16_TRAIL
(
ôî
->
ª£rvedFõld
);

886 
ôî
->
ª£rvedFõld
=0;

887 if((
ödex
=
ôî
->index)>=0) {

888 
ôî
->
ödex
=index+1;

890  
åaû
;

891 } if(
ôî
->
°¨t
<ôî->
limô
) {

892 c⁄° 
uöt8_t
 *
s
=(c⁄° uöt8_à*)
ôî
->
c⁄ãxt
;

893 
UCh¨32
 
c
;

895 
	`U8_NEXT
(
s
, 
ôî
->
°¨t
, iãr->
limô
, 
c
);

896 if((
ödex
=
ôî
->index)>=0) {

897 
ôî
->
ödex
=++index;

898 if(
ôî
->
Àngth
<0 && iãr->
°¨t
==ôî->
limô
) {

899 
ôî
->
Àngth

c
<=0xfff‡? 
ödex
 : index+1;

901 } if(
ôî
->
°¨t
==ôî->
limô
 && iãr->
Àngth
>=0) {

902 
ôî
->
ödex

c
<=0xfff‡? iãr->
Àngth
 : iter->length-1;

904 if(
c
<0) {

906 } if(
c
<=0xffff) {

907  
c
;

909 
ôî
->
ª£rvedFõld
=
c
;

910  
	`U16_LEAD
(
c
);

913  
U_SENTINEL
;

915 
	}
}

917 
UCh¨32
 
U_CALLCONV


918 
	$utf8Iãøt‹Pªvious
(
UCh¨Iãøt‹
 *
ôî
) {

919 
öt32_t
 
ödex
;

921 if(
ôî
->
ª£rvedFõld
!=0) {

922 
UCh¨
 
Àad
=
	`U16_LEAD
(
ôî
->
ª£rvedFõld
);

923 
ôî
->
ª£rvedFõld
=0;

924 
ôî
->
°¨t
-=4;

925 if((
ödex
=
ôî
->index)>0) {

926 
ôî
->
ödex
=index-1;

928  
Àad
;

929 } if(
ôî
->
°¨t
>0) {

930 c⁄° 
uöt8_t
 *
s
=(c⁄° uöt8_à*)
ôî
->
c⁄ãxt
;

931 
UCh¨32
 
c
;

933 
	`U8_PREV
(
s
, 0, 
ôî
->
°¨t
, 
c
);

934 if((
ödex
=
ôî
->index)>0) {

935 
ôî
->
ödex
=index-1;

936 } if(
ôî
->
°¨t
<=1) {

937 
ôî
->
ödex

c
<=0xfff‡? iãr->
°¨t
 : iter->start+1;

939 if(
c
<0) {

941 } if(
c
<=0xffff) {

942  
c
;

944 
ôî
->
°¨t
+=4;

945 
ôî
->
ª£rvedFõld
=
c
;

946  
	`U16_TRAIL
(
c
);

949  
U_SENTINEL
;

951 
	}
}

953 
uöt32_t
 
U_CALLCONV


954 
	$utf8Iãøt‹GëSèã
(c⁄° 
UCh¨Iãøt‹
 *
ôî
) {

955 
uöt32_t
 
°©e
=(uöt32_t)(
ôî
->
°¨t
<<1);

956 if(
ôî
->
ª£rvedFõld
!=0) {

957 
°©e
|=1;

959  
°©e
;

960 
	}
}

962 
U_CALLCONV


963 
	$utf8Iãøt‹SëSèã
(
UCh¨Iãøt‹
 *
ôî
,

964 
uöt32_t
 
°©e
,

965 
UEº‹Code
 *
pEº‹Code
)

967 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

969 } if(
ôî
==
NULL
) {

970 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

971 } if(
°©e
==
	`utf8Iãøt‹GëSèã
(
ôî
)) {

974 
öt32_t
 
ödex
=(öt32_t)(
°©e
>>1);

975 
°©e
&=1;

977 if((
°©e
==0 ? 
ödex
<0 : index<4Ë|| 
ôî
->
limô
<index) {

978 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

980 
ôî
->
°¨t
=
ödex
;

981 if(
ödex
<=1) {

982 
ôî
->
ödex
=index;

984 
ôî
->
ödex
=-1;

986 if(
°©e
==0) {

987 
ôî
->
ª£rvedFõld
=0;

990 
UCh¨32
 
c
;

991 
	`U8_PREV
((c⁄° 
uöt8_t
 *)
ôî
->
c⁄ãxt
, 0, 
ödex
, 
c
);

992 if(
c
<=0xffff) {

993 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

995 
ôî
->
ª£rvedFõld
=
c
;

1000 
	}
}

1002 c⁄° 
UCh¨Iãøt‹
 
	gutf8Iãøt‹
={

1004 
utf8Iãøt‹GëIndex
,

1005 
utf8Iãøt‹Move
,

1006 
utf8Iãøt‹HasNext
,

1007 
utf8Iãøt‹HasPªvious
,

1008 
utf8Iãøt‹Cuºít
,

1009 
utf8Iãøt‹Next
,

1010 
utf8Iãøt‹Pªvious
,

1011 
NULL
,

1012 
utf8Iãøt‹GëSèã
,

1013 
utf8Iãøt‹SëSèã


1016 
U_CAPI
 
U_EXPORT2


1017 
	$uôî_£tUTF8
(
UCh¨Iãøt‹
 *
ôî
, c⁄° *
s
, 
öt32_t
 
Àngth
) {

1018 if(
ôî
!=0) {

1019 if(
s
!=0 && 
Àngth
>=-1) {

1020 *
ôî
=
utf8Iãøt‹
;

1021 
ôî
->
c⁄ãxt
=
s
;

1022 if(
Àngth
>=0) {

1023 
ôî
->
limô
=
Àngth
;

1025 
ôî
->
limô
=(
öt32_t
)
	`u¥v_°æí
(
s
);

1027 
ôî
->
Àngth
ôî->
limô
<=1 ? iter->limit : -1;

1029 *
ôî
=
no›Iãøt‹
;

1032 
	}
}

1036 
U_CAPI
 
UCh¨32
 
U_EXPORT2


1037 
	$uôî_cuºít32
(
UCh¨Iãøt‹
 *
ôî
) {

1038 
UCh¨32
 
c
, 
c2
;

1040 
c
=
ôî
->
	`cuºít
(iter);

1041 if(
	`UTF_IS_SURROGATE
(
c
)) {

1042 if(
	`UTF_IS_SURROGATE_FIRST
(
c
)) {

1047 
ôî
->
	`move
(ôî, 1, 
UITER_CURRENT
);

1048 if(
	`UTF_IS_SECOND_SURROGATE
(
c2
=
ôî
->
	`cuºít
(iter))) {

1049 
c
=
	`UTF16_GET_PAIR_VALUE
(c, 
c2
);

1053 
ôî
->
	`move
(ôî, -1, 
UITER_CURRENT
);

1055 if(
	`UTF_IS_FIRST_SURROGATE
(
c2
=
ôî
->
	`¥evious
(iter))) {

1056 
c
=
	`UTF16_GET_PAIR_VALUE
(
c2
, c);

1058 if(
c2
>=0) {

1060 
ôî
->
	`move
(ôî, 1, 
UITER_CURRENT
);

1064  
c
;

1065 
	}
}

1067 
U_CAPI
 
UCh¨32
 
U_EXPORT2


1068 
	$uôî_√xt32
(
UCh¨Iãøt‹
 *
ôî
) {

1069 
UCh¨32
 
c
, 
c2
;

1071 
c
=
ôî
->
	`√xt
(iter);

1072 if(
	`UTF_IS_FIRST_SURROGATE
(
c
)) {

1073 if(
	`UTF_IS_SECOND_SURROGATE
(
c2
=
ôî
->
	`√xt
(iter))) {

1074 
c
=
	`UTF16_GET_PAIR_VALUE
(c, 
c2
);

1075 } if(
c2
>=0) {

1077 
ôî
->
	`move
(ôî, -1, 
UITER_CURRENT
);

1080  
c
;

1081 
	}
}

1083 
U_CAPI
 
UCh¨32
 
U_EXPORT2


1084 
	$uôî_¥evious32
(
UCh¨Iãøt‹
 *
ôî
) {

1085 
UCh¨32
 
c
, 
c2
;

1087 
c
=
ôî
->
	`¥evious
(iter);

1088 if(
	`UTF_IS_SECOND_SURROGATE
(
c
)) {

1089 if(
	`UTF_IS_FIRST_SURROGATE
(
c2
=
ôî
->
	`¥evious
(iter))) {

1090 
c
=
	`UTF16_GET_PAIR_VALUE
(
c2
, c);

1091 } if(
c2
>=0) {

1093 
ôî
->
	`move
(ôî, 1, 
UITER_CURRENT
);

1096  
c
;

1097 
	}
}

1099 
U_CAPI
 
uöt32_t
 
U_EXPORT2


1100 
	$uôî_gëSèã
(c⁄° 
UCh¨Iãøt‹
 *
ôî
) {

1101 if(
ôî
==
NULL
 || iãr->
gëSèã
==NULL) {

1102  
UITER_NO_STATE
;

1104  
ôî
->
	`gëSèã
(iter);

1106 
	}
}

1108 
U_CAPI
 
U_EXPORT2


1109 
	$uôî_£tSèã
(
UCh¨Iãøt‹
 *
ôî
, 
uöt32_t
 
°©e
, 
UEº‹Code
 *
pEº‹Code
) {

1110 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

1112 } if(
ôî
==
NULL
) {

1113 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

1114 } if(
ôî
->
£tSèã
==
NULL
) {

1115 *
pEº‹Code
=
U_UNSUPPORTED_ERROR
;

1117 
ôî
->
	`£tSèã
(ôî, 
°©e
, 
pEº‹Code
);

1119 
	}
}

1121 
	gU_CDECL_END


	@ulist.c

8 
	~"uli°.h
"

9 
	~"cmem‹y.h
"

10 
	~"c°rög.h
"

11 
	~"uíumimp.h
"

13 
ULi°Node
 
	tULi°Node
;

14 
	sULi°Node
 {

15 *
	md©a
;

17 
ULi°Node
 *
	m√xt
;

18 
ULi°Node
 *
	m¥evious
;

21 
UBoﬁ
 
	mf‹˚Dñëe
;

24 
	sULi°
 {

25 
ULi°Node
 *
	mcuº
;

26 
ULi°Node
 *
	mhód
;

27 
ULi°Node
 *
	mèû
;

29 
öt32_t
 
	msize
;

30 
öt32_t
 
	mcuºítIndex
;

33 
uli°_addFú°Iãm
(
ULi°
 *
li°
, 
ULi°Node
 *
√wIãm
);

35 
U_CAPI
 
ULi°
 *
U_EXPORT2
 
	$uli°_¸óãEm±yLi°
(
UEº‹Code
 *
°©us
) {

36 
ULi°
 *
√wLi°
 = 
NULL
;

38 i‡(
	`U_FAILURE
(*
°©us
)) {

39  
NULL
;

42 
√wLi°
 = (
ULi°
 *)
	`u¥v_mÆloc
((UList));

43 i‡(
√wLi°
 =
NULL
) {

44 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

45  
NULL
;

48 
√wLi°
->
cuº
 = 
NULL
;

49 
√wLi°
->
hód
 = 
NULL
;

50 
√wLi°
->
èû
 = 
NULL
;

51 
√wLi°
->
size
 = 0;

52 
√wLi°
->
cuºítIndex
 = -1;

54  
√wLi°
;

55 
	}
}

61 
	$uli°_addFú°Iãm
(
ULi°
 *
li°
, 
ULi°Node
 *
√wIãm
) {

62 
√wIãm
->
√xt
 = 
NULL
;

63 
√wIãm
->
¥evious
 = 
NULL
;

64 
li°
->
hód
 = 
√wIãm
;

65 
li°
->
èû
 = 
√wIãm
;

66 
li°
->
cuºítIndex
 = 0;

67 
	}
}

69 
U_CAPI
 
U_EXPORT2
 
	$uli°_addIãmEndLi°
(
ULi°
 *
li°
, c⁄° *
d©a
, 
UBoﬁ
 
f‹˚Dñëe
, 
UEº‹Code
 *
°©us
) {

70 
ULi°Node
 *
√wIãm
 = 
NULL
;

72 i‡(
	`U_FAILURE
(*
°©us
Ë|| 
li°
 =
NULL
 || 
d©a
 == NULL) {

76 
√wIãm
 = (
ULi°Node
 *)
	`u¥v_mÆloc
((UListNode));

77 i‡(
√wIãm
 =
NULL
) {

78 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

81 
√wIãm
->
d©a
 = (*)(data);

82 
√wIãm
->
f‹˚Dñëe
 = forceDelete;

84 i‡(
li°
->
size
 == 0) {

85 
	`uli°_addFú°Iãm
(
li°
, 
√wIãm
);

87 
√wIãm
->
√xt
 = 
NULL
;

88 
√wIãm
->
¥evious
 = 
li°
->
èû
;

89 
li°
->
èû
->
√xt
 = 
√wIãm
;

90 
li°
->
èû
 = 
√wIãm
;

93 
li°
->
size
++;

94 
	}
}

96 
U_CAPI
 
U_EXPORT2
 
	$uli°_addIãmBegöLi°
(
ULi°
 *
li°
, c⁄° *
d©a
, 
UBoﬁ
 
f‹˚Dñëe
, 
UEº‹Code
 *
°©us
) {

97 
ULi°Node
 *
√wIãm
 = 
NULL
;

99 i‡(
	`U_FAILURE
(*
°©us
Ë|| 
li°
 =
NULL
 || 
d©a
 == NULL) {

103 
√wIãm
 = (
ULi°Node
 *)
	`u¥v_mÆloc
((UListNode));

104 i‡(
√wIãm
 =
NULL
) {

105 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

108 
√wIãm
->
d©a
 = (*)(data);

109 
√wIãm
->
f‹˚Dñëe
 = forceDelete;

111 i‡(
li°
->
size
 == 0) {

112 
	`uli°_addFú°Iãm
(
li°
, 
√wIãm
);

114 
√wIãm
->
¥evious
 = 
NULL
;

115 
√wIãm
->
√xt
 = 
li°
->
hód
;

116 
li°
->
hód
->
¥evious
 = 
√wIãm
;

117 
li°
->
hód
 = 
√wIãm
;

118 
li°
->
cuºítIndex
++;

121 
li°
->
size
++;

122 
	}
}

124 
U_CAPI
 
UBoﬁ
 
U_EXPORT2
 
	$uli°_c⁄èösSåög
(c⁄° 
ULi°
 *
li°
, c⁄° *
d©a
, 
öt32_t
 
Àngth
) {

125 
UBoﬁ
 
ªsu…
 = 
FALSE
;

126 c⁄° 
ULi°Node
 *
poöãr
 = 
NULL
;

128 i‡(
li°
 !
NULL
 &&Üi°->
size
 != 0) {

129 
poöãr
 = 
li°
->
hód
;

131 
poöãr
 !
NULL
) {

132 i‡(
Àngth
 =
	`u¥v_°æí
(
poöãr
->
d©a
)) {

133 i‡(
	`u¥v_memcmp
(
d©a
, 
poöãr
->d©a, 
Àngth
) == 0) {

134 
ªsu…
 = 
TRUE
;

139 
poöãr
 =Öoöãr->
√xt
;

143  
ªsu…
;

144 
	}
}

146 
U_CAPI
 *
U_EXPORT2
 
	$uli°_gëNext
(
ULi°
 *
li°
) {

147 
ULi°Node
 *
cuº
 = 
NULL
;

149 i‡(
li°
 =
NULL
 ||Üi°->
cuº
 == NULL) {

150  
NULL
;

153 
cuº
 = 
li°
->curr;

154 
li°
->
cuº
 = cuº->
√xt
;

155 
li°
->
cuºítIndex
++;

157  
cuº
->
d©a
;

158 
	}
}

160 
U_CAPI
 
öt32_t
 
U_EXPORT2
 
	$uli°_gëLi°Size
(c⁄° 
ULi°
 *
li°
) {

161 i‡(
li°
 !
NULL
) {

162  
li°
->
size
;

166 
	}
}

168 
U_CAPI
 
U_EXPORT2
 
	$uli°_ª£tLi°
(
ULi°
 *
li°
) {

169 i‡(
li°
 !
NULL
) {

170 
li°
->
cuº
 =Üi°->
hód
;

171 
li°
->
cuºítIndex
 = 0;

173 
	}
}

175 
U_CAPI
 
U_EXPORT2
 
	$uli°_dñëeLi°
(
ULi°
 *
li°
) {

176 
ULi°Node
 *
li°Hód
 = 
NULL
;

177 
ULi°Node
 *
li°Poöãr
 = 
NULL
;

179 i‡(
li°
 !
NULL
) {

180 
li°Hód
 = 
li°
->
hód
;

181 
li°Poöãr
 = 
li°Hód
;

182 
li°Hód
 !
NULL
) {

183 
li°Poöãr
 = 
li°Hód
->
√xt
;

185 i‡(
li°Hód
->
f‹˚Dñëe
) {

186 
	`u¥v_‰ì
(
li°Hód
->
d©a
);

189 
	`u¥v_‰ì
(
li°Hód
);

190 
li°Hód
 = 
li°Poöãr
;

192 
	`u¥v_‰ì
(
li°
);

193 
li°
 = 
NULL
;

195 
	}
}

197 
U_CAPI
 
U_EXPORT2
 
	$uli°_˛o£_keyw‹d_vÆues_ôî©‹
(
UEnumî©i⁄
 *
í
) {

198 i‡(
í
 !
NULL
) {

199 
	`uli°_dñëeLi°
((
ULi°
 *)(
í
->
c⁄ãxt
));

200 
	`u¥v_‰ì
(
í
);

202 
	}
}

204 
U_CAPI
 
öt32_t
 
U_EXPORT2
 
	$uli°_cou¡_keyw‹d_vÆues
(
UEnumî©i⁄
 *
í
, 
UEº‹Code
 *
°©us
) {

205 i‡(
	`U_FAILURE
(*
°©us
)) {

209  
	`uli°_gëLi°Size
((
ULi°
 *)(
í
->
c⁄ãxt
));

210 
	}
}

212 
U_CAPI
 c⁄° * 
U_EXPORT2
 
	$uli°_√xt_keyw‹d_vÆue
(
UEnumî©i⁄
 *
í
, 
öt32_t
 *
ªsu…Lígth
, 
UEº‹Code
 *
°©us
) {

213 i‡(
	`U_FAILURE
(*
°©us
)) {

214  
NULL
;

219  (c⁄° *)
	`uli°_gëNext
((
ULi°
 *)(
í
->
c⁄ãxt
));

220 
	}
}

222 
U_CAPI
 
U_EXPORT2
 
	$uli°_ª£t_keyw‹d_vÆues_ôî©‹
(
UEnumî©i⁄
 *
í
, 
UEº‹Code
 *
°©us
) {

223 i‡(
	`U_FAILURE
(*
°©us
)) {

227 
	`uli°_ª£tLi°
((
ULi°
 *)(
í
->
c⁄ãxt
));

228 
	}
}

230 
U_CAPI
 
ULi°
 * 
U_EXPORT2
 
	$uli°_gëLi°FromEnum
(
UEnumî©i⁄
 *
í
) {

231  (
ULi°
 *)(
í
->
c⁄ãxt
);

232 
	}
}

	@ulist.h

8 #i‚de‡
ULIST_H


9 
	#ULIST_H


	)

11 
	~"unicode/uty≥s.h
"

12 
	~"unicode/uíum.h
"

14 
	gULi°
;

15 
ULi°
 
	tULi°
;

17 
U_CAPI
 
ULi°
 * 
U_EXPORT2
 
uli°_¸óãEm±yLi°
(
UEº‹Code
 *
°©us
);

19 
U_CAPI
 
U_EXPORT2
 
uli°_addIãmEndLi°
(
ULi°
 *
li°
, c⁄° *
d©a
, 
UBoﬁ
 
f‹˚Dñëe
, 
UEº‹Code
 *
°©us
);

21 
U_CAPI
 
U_EXPORT2
 
uli°_addIãmBegöLi°
(
ULi°
 *
li°
, c⁄° *
d©a
, 
UBoﬁ
 
f‹˚Dñëe
, 
UEº‹Code
 *
°©us
);

23 
U_CAPI
 
UBoﬁ
 
U_EXPORT2
 
uli°_c⁄èösSåög
(c⁄° 
ULi°
 *
li°
, c⁄° *
d©a
, 
öt32_t
 
Àngth
);

25 
U_CAPI
 *
U_EXPORT2
 
uli°_gëNext
(
ULi°
 *
li°
);

27 
U_CAPI
 
öt32_t
 
U_EXPORT2
 
uli°_gëLi°Size
(c⁄° 
ULi°
 *
li°
);

29 
U_CAPI
 
U_EXPORT2
 
uli°_ª£tLi°
(
ULi°
 *
li°
);

31 
U_CAPI
 
U_EXPORT2
 
uli°_dñëeLi°
(
ULi°
 *
li°
);

36 
U_CAPI
 
U_EXPORT2
 
uli°_˛o£_keyw‹d_vÆues_ôî©‹
(
UEnumî©i⁄
 *
í
);

38 
U_CAPI
 
öt32_t
 
U_EXPORT2
 
uli°_cou¡_keyw‹d_vÆues
(
UEnumî©i⁄
 *
í
, 
UEº‹Code
 *
°©us
);

40 
U_CAPI
 c⁄° * 
U_EXPORT2
 
uli°_√xt_keyw‹d_vÆue
(
UEnumî©i⁄
* 
í
, 
öt32_t
 *
ªsu…Lígth
, 
UEº‹Code
* 
°©us
);

42 
U_CAPI
 
U_EXPORT2
 
uli°_ª£t_keyw‹d_vÆues_ôî©‹
(
UEnumî©i⁄
* 
í
, 
UEº‹Code
* 
°©us
);

44 
U_CAPI
 
ULi°
 * 
U_EXPORT2
 
uli°_gëLi°FromEnum
(
UEnumî©i⁄
 *
í
);

	@uloc.c

31 
	~"unicode/uty≥s.h
"

32 
	~"unicode/u°rög.h
"

33 
	~"unicode/uloc.h
"

35 
	~"putûimp.h
"

36 
	~"u°r_imp.h
"

37 
	~"ulocimp.h
"

38 
	~"umuãx.h
"

39 
	~"c°rög.h
"

40 
	~"cmem‹y.h
"

41 
	~"u˛n_cmn.h
"

42 
	~"locm≠.h
"

43 
	~"u¨rs‹t.h
"

44 
	~"uíumimp.h
"

45 
	~"uas£π.h
"

47 
	~<°dio.h
>

52 
U_CFUNC
 
loˇÀ_£t_deÁu…
(c⁄° *
id
);

53 
U_CFUNC
 c⁄° *
loˇÀ_gë_deÁu…
();

54 
U_CFUNC
 
öt32_t


55 
loˇÀ_gëKeyw‹ds
(c⁄° *
loˇÀID
,

56 
¥ev
,

57 *
keyw‹ds
, 
öt32_t
 
keyw‹dC≠acôy
,

58 *
vÆues
, 
öt32_t
 
vÆuesC≠acôy
, i¡32_à*
vÆLí
,

59 
UBoﬁ
 
vÆuesToo
,

60 
UEº‹Code
 *
°©us
);

95 c⁄° * c⁄° 
	gLANGUAGES
[] = {

155 
NULL
,

157 
NULL


159 c⁄° * c⁄° 
	gDEPRECATED_LANGUAGES
[]={

160 "ö", "iw", "ji", "jw", 
NULL
, NULL

162 c⁄° * c⁄° 
	gREPLACEMENT_LANGUAGES
[]={

163 "id", "he", "yi", "jv", 
NULL
, NULL

182 c⁄° * c⁄° 
	gLANGUAGES_3
[] = {

297 
NULL
,

300 
NULL


327 c⁄° * c⁄° 
	gCOUNTRIES
[] = {

358 
NULL
,

360 
NULL


363 c⁄° * c⁄° 
	gDEPRECATED_COUNTRIES
[] ={

364 "BU", "CS", "DY", "FX", "HV", "NH", "RH", "TP", "YU", "ZR", 
NULL
, NULL

366 c⁄° * c⁄° 
	gREPLACEMENT_COUNTRIES
[] = {

368 "MM", "RS", "BJ", "FR", "BF", "VU", "ZW", "TL", "RS", "CD", 
NULL
, NULL

384 c⁄° * c⁄° 
	gCOUNTRIES_3
[] = {

445 
NULL
,

448 
NULL


451 
	sC™⁄iˇliz©i⁄M≠
 {

452 c⁄° *
	mid
;

453 c⁄° *
	mˇn⁄iˇlID
;

454 c⁄° *
	mkeyw‹d
;

455 c⁄° *
	mvÆue
;

456 } 
	tC™⁄iˇliz©i⁄M≠
;

462 c⁄° 
C™⁄iˇliz©i⁄M≠
 
	gCANONICALIZE_MAP
[] = {

463 { "", "í_US_POSIX", 
NULL
, NULL },

464 { "c", "í_US_POSIX", 
NULL
, NULL },

465 { "posix", "í_US_POSIX", 
NULL
, NULL },

466 { "¨t_LOJBAN", "jbo", 
NULL
, NULL },

467 { "az_AZ_CYRL", "az_Cyæ_AZ", 
NULL
, NULL },

468 { "az_AZ_LATN", "az_L©n_AZ", 
NULL
, NULL },

470 { "˚l_GAULISH", "˚l__GAULISH", 
NULL
, NULL },

471 { "de_1901", "de__1901", 
NULL
, NULL },

472 { "de_1906", "de__1906", 
NULL
, NULL },

478 { "í_BOONT", "í__BOONT", 
NULL
, NULL },

479 { "í_SCOUSE", "í__SCOUSE", 
NULL
, NULL },

494 { "nb_NO_NY", "¬_NO", 
NULL
, NULL },

498 { "¶_ROZAJ", "¶__ROZAJ", 
NULL
, NULL },

499 { "§_SP_CYRL", "§_Cyæ_RS", 
NULL
, NULL },

500 { "§_SP_LATN", "§_L©n_RS", 
NULL
, NULL },

501 { "§_YU_CYRILLIC", "§_Cyæ_RS", 
NULL
, NULL },

503 { "uz_UZ_CYRILLIC", "uz_Cyæ_UZ", 
NULL
, NULL },

504 { "uz_UZ_CYRL", "uz_Cyæ_UZ", 
NULL
, NULL },

505 { "uz_UZ_LATN", "uz_L©n_UZ", 
NULL
, NULL },

506 { "zh_CHS", "zh_H™s", 
NULL
, NULL },

507 { "zh_CHT", "zh_H™t", 
NULL
, NULL },

508 { "zh_GAN", "zh__GAN", 
NULL
, NULL },

509 { "zh_GUOYU", "zh", 
NULL
, NULL },

510 { "zh_HAKKA", "zh__HAKKA", 
NULL
, NULL },

511 { "zh_MIN", "zh__MIN", 
NULL
, NULL },

512 { "zh_MIN_NAN", "zh__MINNAN", 
NULL
, NULL },

513 { "zh_WUU", "zh__WUU", 
NULL
, NULL },

514 { "zh_XIANG", "zh__XIANG", 
NULL
, NULL },

515 { "zh_YUE", "zh__YUE", 
NULL
, NULL },

518 
	sV¨ü¡M≠
 {

519 c⁄° *
	mv¨ü¡
;

520 c⁄° *
	mkeyw‹d
;

521 c⁄° *
	mvÆue
;

522 } 
	tV¨ü¡M≠
;

524 c⁄° 
V¨ü¡M≠
 
	gVARIANT_MAP
[] = {

532 
	#_hasBCP47Exãnsi⁄
(
id
Ë(id && 
	`u¥v_°r°r
(id, "@"Ë=
NULL
 && 
	`gëSh‹ã°SubègLígth
(
loˇÀID
Ë=1)

	)

534 
	#_C⁄vîtBCP47
(
föÆID
, 
id
, 
buf„r
, 
Àngth
,
îr
) \

535 i‡(
	`uloc_f‹L™guageTag
(
id
, 
buf„r
, 
Àngth
, 
NULL
, 
îr
Ë<0 || 
	`U_FAILURE
(*err)) { \

536 
föÆID
=
id
; \

538 
föÆID
=
buf„r
; \

539 }

	)

541 
öt32_t
 
	$gëSh‹ã°SubègLígth
(c⁄° *
loˇÀID
) {

542 
öt32_t
 
loˇÀIDLígth
 = 
	`u¥v_°æí
(
loˇÀID
);

543 
öt32_t
 
Àngth
 = 
loˇÀIDLígth
;

544 
öt32_t
 
tmpLígth
 = 0;

545 
öt32_t
 
i
;

546 
UBoﬁ
 
ª£t
 = 
TRUE
;

548 
i
 = 0; i < 
loˇÀIDLígth
; i++) {

549 i‡(
loˇÀID
[
i
] != '_' &&ÜocaleID[i] != '-') {

550 i‡(
ª£t
) {

551 
tmpLígth
 = 0;

552 
ª£t
 = 
FALSE
;

554 
tmpLígth
++;

556 i‡(
tmpLígth
 !0 &&ÅmpLígth < 
Àngth
) {

557 
Àngth
 = 
tmpLígth
;

559 
ª£t
 = 
TRUE
;

563  
Àngth
;

564 
	}
}

568 
	#ULOC_KEYWORD_BUFFER_LEN
 25

	)

569 
	#ULOC_MAX_NO_KEYWORDS
 25

	)

571 
U_CAPI
 c⁄° * 
U_EXPORT2


572 
	$loˇÀ_gëKeyw‹dsSèπ
(c⁄° *
loˇÀID
) {

573 c⁄° *
ªsu…
 = 
NULL
;

574 if((
ªsu…
 = 
	`u¥v_°rchr
(
loˇÀID
, '@')Ë!
NULL
) {

575  
ªsu…
;

577 #i‡(
U_CHARSET_FAMILY
 =
U_EBCDIC_FAMILY
)

582 c⁄° 
uöt8_t
 
ebcdicSigns
[] = { 0x7C, 0x44, 0x66, 0x80, 0xAC, 0xAE, 0xAF, 0xB5, 0xEC, 0xEF, 0x00 };

583 c⁄° 
uöt8_t
 *
ch¨ToFöd
 = 
ebcdicSigns
;

584 *
ch¨ToFöd
) {

585 if((
ªsu…
 = 
	`u¥v_°rchr
(
loˇÀID
, *
ch¨ToFöd
)Ë!
NULL
) {

586  
ªsu…
;

588 
ch¨ToFöd
++;

592  
NULL
;

593 
	}
}

601 
öt32_t
 
	$loˇÀ_ˇn⁄Keyw‹dName
(*
buf
, c⁄° *
keyw‹dName
, 
UEº‹Code
 *
°©us
)

603 
öt32_t
 
i
;

604 
öt32_t
 
keyw‹dNameLí
 = (öt32_t)
	`u¥v_°æí
(
keyw‹dName
);

606 if(
keyw‹dNameLí
 >
ULOC_KEYWORD_BUFFER_LEN
) {

608 *
°©us
 = 
U_INTERNAL_PROGRAM_ERROR
;

613 
i
 = 0; i < 
keyw‹dNameLí
; i++) {

614 
buf
[
i
] = 
	`u¥v_tﬁowî
(
keyw‹dName
[i]);

616 
buf
[
i
] = 0;

618  
keyw‹dNameLí
;

619 
	}
}

622 
	mkeyw‹d
[
ULOC_KEYWORD_BUFFER_LEN
];

623 
öt32_t
 
	mkeyw‹dLí
;

624 c⁄° *
	mvÆueSèπ
;

625 
öt32_t
 
	mvÆueLí
;

626 } 
	tKeyw‹dSåu˘
;

628 
öt32_t
 
U_CALLCONV


629 
	$com∑ªKeyw‹dSåu˘s
(c⁄° *
c⁄ãxt
, c⁄° *
À·
, c⁄° *
right
) {

630 c⁄° * 
À·Såög
 = ((c⁄° 
Keyw‹dSåu˘
 *)
À·
)->
keyw‹d
;

631 c⁄° * 
rightSåög
 = ((c⁄° 
Keyw‹dSåu˘
 *)
right
)->
keyw‹d
;

632  
	`u¥v_°rcmp
(
À·Såög
, 
rightSåög
);

633 
	}
}

641 
öt32_t


642 
	$_gëKeyw‹ds
(c⁄° *
loˇÀID
,

643 
¥ev
,

644 *
keyw‹ds
, 
öt32_t
 
keyw‹dC≠acôy
,

645 *
vÆues
, 
öt32_t
 
vÆuesC≠acôy
, i¡32_à*
vÆLí
,

646 
UBoﬁ
 
vÆuesToo
,

647 c⁄° * 
addKeyw‹d
,

648 c⁄° * 
addVÆue
,

649 
UEº‹Code
 *
°©us
)

651 
Keyw‹dSåu˘
 
keyw‹dLi°
[
ULOC_MAX_NO_KEYWORDS
];

653 
öt32_t
 
maxKeyw‹ds
 = 
ULOC_MAX_NO_KEYWORDS
;

654 
öt32_t
 
numKeyw‹ds
 = 0;

655 c⁄° * 
pos
 = 
loˇÀID
;

656 c⁄° * 
equÆSign
 = 
NULL
;

657 c⁄° * 
£micﬁ⁄
 = 
NULL
;

658 
öt32_t
 
i
 = 0, 
j
, 
n
;

659 
öt32_t
 
keyw‹dsLí
 = 0;

660 
öt32_t
 
vÆuesLí
 = 0;

662 if(
¥ev
 == '@') {

665 
UBoﬁ
 
du∂iˇã
 = 
FALSE
;

667 *
pos
 == ' ') {

668 
pos
++;

670 i‡(!*
pos
) {

673 if(
numKeyw‹ds
 =
maxKeyw‹ds
) {

674 *
°©us
 = 
U_INTERNAL_PROGRAM_ERROR
;

677 
equÆSign
 = 
	`u¥v_°rchr
(
pos
, '=');

678 
£micﬁ⁄
 = 
	`u¥v_°rchr
(
pos
, ';');

681 if(!
equÆSign
 || (
£micﬁ⁄
 && semicolon<equalSign)) {

682 *
°©us
 = 
U_INVALID_FORMAT_ERROR
;

686 if(
equÆSign
 - 
pos
 >
ULOC_KEYWORD_BUFFER_LEN
) {

688 *
°©us
 = 
U_INTERNAL_PROGRAM_ERROR
;

691 
i
 = 0, 
n
 = 0; i < 
equÆSign
 - 
pos
; ++i) {

692 i‡(
pos
[
i
] != ' ') {

693 
keyw‹dLi°
[
numKeyw‹ds
].
keyw‹d
[
n
++] = 
	`u¥v_tﬁowî
(
pos
[
i
]);

696 
keyw‹dLi°
[
numKeyw‹ds
].
keyw‹d
[
n
] = 0;

697 
keyw‹dLi°
[
numKeyw‹ds
].
keyw‹dLí
 = 
n
;

699 
equÆSign
++;

701 *
equÆSign
 == ' ') {

702 
equÆSign
++;

704 
keyw‹dLi°
[
numKeyw‹ds
].
vÆueSèπ
 = 
equÆSign
;

706 
pos
 = 
£micﬁ⁄
;

707 
i
 = 0;

708 if(
pos
) {

709 *(
pos
 - 
i
 - 1) == ' ') {

710 
i
++;

712 
keyw‹dLi°
[
numKeyw‹ds
].
vÆueLí
 = (
öt32_t
)(
pos
 - 
equÆSign
 - 
i
);

713 
pos
++;

715 
i
 = (
öt32_t
)
	`u¥v_°æí
(
equÆSign
);

716 
equÆSign
[
i
-1] == ' ') {

717 
i
--;

719 
keyw‹dLi°
[
numKeyw‹ds
].
vÆueLí
 = 
i
;

722 
j
=0; j<
numKeyw‹ds
; ++j) {

723 i‡(
	`u¥v_°rcmp
(
keyw‹dLi°
[
j
].
keyw‹d
, keyw‹dLi°[
numKeyw‹ds
].keyword) == 0) {

724 
du∂iˇã
 = 
TRUE
;

728 i‡(!
du∂iˇã
) {

729 ++
numKeyw‹ds
;

731 } 
pos
);

734 i‡(
addKeyw‹d
 !
NULL
) {

735 
UBoﬁ
 
du∂iˇã
 = 
FALSE
;

736 
	`U_ASSERT
(
addVÆue
 !
NULL
);

739 
j
=0; j<
numKeyw‹ds
; ++j) {

740 i‡(
	`u¥v_°rcmp
(
keyw‹dLi°
[
j
].
keyw‹d
, 
addKeyw‹d
) == 0) {

741 
du∂iˇã
 = 
TRUE
;

745 i‡(!
du∂iˇã
) {

746 i‡(
numKeyw‹ds
 =
maxKeyw‹ds
) {

747 *
°©us
 = 
U_INTERNAL_PROGRAM_ERROR
;

750 
	`u¥v_°r˝y
(
keyw‹dLi°
[
numKeyw‹ds
].
keyw‹d
, 
addKeyw‹d
);

751 
keyw‹dLi°
[
numKeyw‹ds
].
keyw‹dLí
 = (
öt32_t
)
	`u¥v_°æí
(
addKeyw‹d
);

752 
keyw‹dLi°
[
numKeyw‹ds
].
vÆueSèπ
 = 
addVÆue
;

753 
keyw‹dLi°
[
numKeyw‹ds
].
vÆueLí
 = (
öt32_t
)
	`u¥v_°æí
(
addVÆue
);

754 ++
numKeyw‹ds
;

757 
	`U_ASSERT
(
addVÆue
 =
NULL
);

762 
	`u¥v_s‹tAºay
(
keyw‹dLi°
, 
numKeyw‹ds
, (
Keyw‹dSåu˘
), 
com∑ªKeyw‹dSåu˘s
, 
NULL
, 
FALSE
, 
°©us
);

765 
i
 = 0; i < 
numKeyw‹ds
; i++) {

766 if(
keyw‹dsLí
 + 
keyw‹dLi°
[
i
].
keyw‹dLí
 + 1< 
keyw‹dC≠acôy
) {

767 
	`u¥v_°r˝y
(
keyw‹ds
+
keyw‹dsLí
, 
keyw‹dLi°
[
i
].
keyw‹d
);

768 if(
vÆuesToo
) {

769 
keyw‹ds
[
keyw‹dsLí
 + 
keyw‹dLi°
[
i
].
keyw‹dLí
] = '=';

771 
keyw‹ds
[
keyw‹dsLí
 + 
keyw‹dLi°
[
i
].
keyw‹dLí
] = 0;

774 
keyw‹dsLí
 +
keyw‹dLi°
[
i
].
keyw‹dLí
 + 1;

775 if(
vÆuesToo
) {

776 if(
keyw‹dsLí
 + 
keyw‹dLi°
[
i
].
vÆueLí
 < 
keyw‹dC≠acôy
) {

777 
	`u¥v_°∫˝y
(
keyw‹ds
+
keyw‹dsLí
, 
keyw‹dLi°
[
i
].
vÆueSèπ
, keyw‹dLi°[i].
vÆueLí
);

779 
keyw‹dsLí
 +
keyw‹dLi°
[
i
].
vÆueLí
;

781 if(
i
 < 
numKeyw‹ds
 - 1) {

782 if(
keyw‹dsLí
 < 
keyw‹dC≠acôy
) {

783 
keyw‹ds
[
keyw‹dsLí
] = ';';

785 
keyw‹dsLí
++;

788 if(
vÆues
) {

789 if(
vÆuesLí
 + 
keyw‹dLi°
[
i
].
vÆueLí
 + 1< 
vÆuesC≠acôy
) {

790 
	`u¥v_°r˝y
(
vÆues
+
vÆuesLí
, 
keyw‹dLi°
[
i
].
vÆueSèπ
);

791 
vÆues
[
vÆuesLí
 + 
keyw‹dLi°
[
i
].
vÆueLí
] = 0;

793 
vÆuesLí
 +
keyw‹dLi°
[
i
].
vÆueLí
 + 1;

796 if(
vÆues
) {

797 
vÆues
[
vÆuesLí
] = 0;

798 if(
vÆLí
) {

799 *
vÆLí
 = 
vÆuesLí
;

802  
	`u_ãrmö©eCh¨s
(
keyw‹ds
, 
keyw‹dC≠acôy
, 
keyw‹dsLí
, 
°©us
);

806 
	}
}

808 
U_CFUNC
 
öt32_t


809 
	$loˇÀ_gëKeyw‹ds
(c⁄° *
loˇÀID
,

810 
¥ev
,

811 *
keyw‹ds
, 
öt32_t
 
keyw‹dC≠acôy
,

812 *
vÆues
, 
öt32_t
 
vÆuesC≠acôy
, i¡32_à*
vÆLí
,

813 
UBoﬁ
 
vÆuesToo
,

814 
UEº‹Code
 *
°©us
) {

815  
	`_gëKeyw‹ds
(
loˇÀID
, 
¥ev
, 
keyw‹ds
, 
keyw‹dC≠acôy
,

816 
vÆues
, 
vÆuesC≠acôy
, 
vÆLí
, 
vÆuesToo
,

817 
NULL
, NULL, 
°©us
);

818 
	}
}

820 
U_CAPI
 
öt32_t
 
U_EXPORT2


821 
	$uloc_gëKeyw‹dVÆue
(c⁄° * 
loˇÀID
,

822 c⁄° * 
keyw‹dName
,

823 * 
buf„r
, 
öt32_t
 
buf„rC≠acôy
,

824 
UEº‹Code
* 
°©us
)

826 c⁄° * 
°¨tSórchHîe
 = 
NULL
;

827 c⁄° * 
√xtSï¨©‹
 = 
NULL
;

828 
keyw‹dNameBuf„r
[
ULOC_KEYWORD_BUFFER_LEN
];

829 
loˇÀKeyw‹dNameBuf„r
[
ULOC_KEYWORD_BUFFER_LEN
];

830 
öt32_t
 
i
 = 0;

831 
öt32_t
 
ªsu…
 = 0;

833 if(
°©us
 && 
	`U_SUCCESS
(*°©usË&& 
loˇÀID
) {

834 
ãmpBuf„r
[
ULOC_FULLNAME_CAPACITY
];

835 c⁄° * 
tmpLoˇÀID
;

837 i‡(
	`_hasBCP47Exãnsi⁄
(
loˇÀID
)) {

838 
	`_C⁄vîtBCP47
(
tmpLoˇÀID
, 
loˇÀID
, 
ãmpBuf„r
, —empBuf„r), 
°©us
);

840 
tmpLoˇÀID
=
loˇÀID
;

843 
°¨tSórchHîe
 = 
	`u¥v_°rchr
(
tmpLoˇÀID
, '@');

844 if(
°¨tSórchHîe
 =
NULL
) {

849 
	`loˇÀ_ˇn⁄Keyw‹dName
(
keyw‹dNameBuf„r
, 
keyw‹dName
, 
°©us
);

850 if(
	`U_FAILURE
(*
°©us
)) {

855 
°¨tSórchHîe
) {

856 
°¨tSórchHîe
++;

858 *
°¨tSórchHîe
 == ' ') {

859 
°¨tSórchHîe
++;

861 
√xtSï¨©‹
 = 
	`u¥v_°rchr
(
°¨tSórchHîe
, '=');

863 if(!
√xtSï¨©‹
) {

866 if(
√xtSï¨©‹
 - 
°¨tSórchHîe
 >
ULOC_KEYWORD_BUFFER_LEN
) {

868 *
°©us
 = 
U_INTERNAL_PROGRAM_ERROR
;

871 
i
 = 0; i < 
√xtSï¨©‹
 - 
°¨tSórchHîe
; i++) {

872 
loˇÀKeyw‹dNameBuf„r
[
i
] = 
	`u¥v_tﬁowî
(
°¨tSórchHîe
[i]);

875 
°¨tSórchHîe
[
i
-1] == ' ') {

876 
i
--;

878 
loˇÀKeyw‹dNameBuf„r
[
i
] = 0;

880 
°¨tSórchHîe
 = 
	`u¥v_°rchr
(
√xtSï¨©‹
, ';');

882 if(
	`u¥v_°rcmp
(
keyw‹dNameBuf„r
, 
loˇÀKeyw‹dNameBuf„r
) == 0) {

883 
√xtSï¨©‹
++;

884 *
√xtSï¨©‹
 == ' ') {

885 
√xtSï¨©‹
++;

888 if(
°¨tSórchHîe
 && sèπSórchHîê- 
√xtSï¨©‹
 < 
buf„rC≠acôy
) {

889 *(
°¨tSórchHîe
-1) == ' ') {

890 
°¨tSórchHîe
--;

892 
	`u¥v_°∫˝y
(
buf„r
, 
√xtSï¨©‹
, 
°¨tSórchHîe
 -ÇextSeparator);

893 
ªsu…
 = 
	`u_ãrmö©eCh¨s
(
buf„r
, 
buf„rC≠acôy
, (
öt32_t
)(
°¨tSórchHîe
 - 
√xtSï¨©‹
), 
°©us
);

894 } if(!
°¨tSórchHîe
 && (
öt32_t
)
	`u¥v_°æí
(
√xtSï¨©‹
Ë< 
buf„rC≠acôy
) {

895 
i
 = (
öt32_t
)
	`u¥v_°æí
(
√xtSï¨©‹
);

896 
√xtSï¨©‹
[
i
 - 1] == ' ') {

897 
i
--;

899 
	`u¥v_°∫˝y
(
buf„r
, 
√xtSï¨©‹
, 
i
);

900 
ªsu…
 = 
	`u_ãrmö©eCh¨s
(
buf„r
, 
buf„rC≠acôy
, 
i
, 
°©us
);

903 *
°©us
 = 
U_BUFFER_OVERFLOW_ERROR
;

904 if(
°¨tSórchHîe
) {

905 
ªsu…
 = (
öt32_t
)(
°¨tSórchHîe
 - 
√xtSï¨©‹
);

907 
ªsu…
 = (
öt32_t
)
	`u¥v_°æí
(
√xtSï¨©‹
);

910  
ªsu…
;

915 
	}
}

917 
U_CAPI
 
öt32_t
 
U_EXPORT2


918 
	$uloc_£tKeyw‹dVÆue
(c⁄° * 
keyw‹dName
,

919 c⁄° * 
keyw‹dVÆue
,

920 * 
buf„r
, 
öt32_t
 
buf„rC≠acôy
,

921 
UEº‹Code
* 
°©us
)

924 
öt32_t
 
keyw‹dNameLí
;

925 
öt32_t
 
keyw‹dVÆueLí
;

926 
öt32_t
 
bufLí
;

927 
öt32_t
 
√edLí
 = 0;

928 
öt32_t
 
foundVÆueLí
;

929 
öt32_t
 
keyw‹dAtEnd
 = 0;

930 
keyw‹dNameBuf„r
[
ULOC_KEYWORD_BUFFER_LEN
];

931 
loˇÀKeyw‹dNameBuf„r
[
ULOC_KEYWORD_BUFFER_LEN
];

932 
öt32_t
 
i
 = 0;

933 
öt32_t
 
rc
;

934 * 
√xtSï¨©‹
 = 
NULL
;

935 * 
√xtEquÆsign
 = 
NULL
;

936 * 
°¨tSórchHîe
 = 
NULL
;

937 * 
keyw‹dSèπ
 = 
NULL
;

938 *
ö£πHîe
 = 
NULL
;

939 if(
	`U_FAILURE
(*
°©us
)) {

942 if(
buf„rC≠acôy
>1) {

943 
bufLí
 = (
öt32_t
)
	`u¥v_°æí
(
buf„r
);

945 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

948 if(
buf„rC≠acôy
<
bufLí
) {

950 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

953 if(
keyw‹dVÆue
 && !*keywordValue) {

954 
keyw‹dVÆue
 = 
NULL
;

956 if(
keyw‹dVÆue
) {

957 
keyw‹dVÆueLí
 = (
öt32_t
)
	`u¥v_°æí
(
keyw‹dVÆue
);

959 
keyw‹dVÆueLí
 = 0;

961 
keyw‹dNameLí
 = 
	`loˇÀ_ˇn⁄Keyw‹dName
(
keyw‹dNameBuf„r
, 
keyw‹dName
, 
°©us
);

962 if(
	`U_FAILURE
(*
°©us
)) {

965 
°¨tSórchHîe
 = (*)
	`loˇÀ_gëKeyw‹dsSèπ
(
buf„r
);

966 if(
°¨tSórchHîe
 =
NULL
 || (startSearchHere[1]==0)) {

967 if(!
keyw‹dVÆue
) {

968  
bufLí
;

971 
√edLí
 = 
bufLí
+1+
keyw‹dNameLí
+1+
keyw‹dVÆueLí
;

972 if(
°¨tSórchHîe
) {

973 
√edLí
--;

976 
°¨tSórchHîe
=
buf„r
+
bufLí
;

978 if(
√edLí
 >
buf„rC≠acôy
) {

979 *
°©us
 = 
U_BUFFER_OVERFLOW_ERROR
;

980  
√edLí
;

982 *
°¨tSórchHîe
 = '@';

983 
°¨tSórchHîe
++;

984 
	`u¥v_°r˝y
(
°¨tSórchHîe
, 
keyw‹dNameBuf„r
);

985 
°¨tSórchHîe
 +
keyw‹dNameLí
;

986 *
°¨tSórchHîe
 = '=';

987 
°¨tSórchHîe
++;

988 
	`u¥v_°r˝y
(
°¨tSórchHîe
, 
keyw‹dVÆue
);

989 
°¨tSórchHîe
+=
keyw‹dVÆueLí
;

990  
√edLí
;

993 
keyw‹dSèπ
 = 
°¨tSórchHîe
;

995 
keyw‹dSèπ
) {

996 
keyw‹dSèπ
++;

998 *
keyw‹dSèπ
 == ' ') {

999 
keyw‹dSèπ
++;

1001 
√xtEquÆsign
 = 
	`u¥v_°rchr
(
keyw‹dSèπ
, '=');

1003 if(!
√xtEquÆsign
) {

1006 if(
√xtEquÆsign
 - 
keyw‹dSèπ
 >
ULOC_KEYWORD_BUFFER_LEN
) {

1008 *
°©us
 = 
U_INTERNAL_PROGRAM_ERROR
;

1011 
i
 = 0; i < 
√xtEquÆsign
 - 
keyw‹dSèπ
; i++) {

1012 
loˇÀKeyw‹dNameBuf„r
[
i
] = 
	`u¥v_tﬁowî
(
keyw‹dSèπ
[i]);

1015 
keyw‹dSèπ
[
i
-1] == ' ') {

1016 
i
--;

1018 
loˇÀKeyw‹dNameBuf„r
[
i
] = 0;

1020 
√xtSï¨©‹
 = 
	`u¥v_°rchr
(
√xtEquÆsign
, ';');

1021 
rc
 = 
	`u¥v_°rcmp
(
keyw‹dNameBuf„r
, 
loˇÀKeyw‹dNameBuf„r
);

1022 if(
rc
 == 0) {

1023 
√xtEquÆsign
++;

1024 *
√xtEquÆsign
 == ' ') {

1025 
√xtEquÆsign
++;

1028 i‡(
√xtSï¨©‹
) {

1029 
keyw‹dAtEnd
 = 0;

1030 
foundVÆueLí
 = (
öt32_t
)(
√xtSï¨©‹
 - 
√xtEquÆsign
);

1032 
keyw‹dAtEnd
 = 1;

1033 
foundVÆueLí
 = (
öt32_t
)
	`u¥v_°æí
(
√xtEquÆsign
);

1035 if(
keyw‹dVÆue
) {

1036 if(
foundVÆueLí
 =
keyw‹dVÆueLí
) {

1037 
	`u¥v_°∫˝y
(
√xtEquÆsign
, 
keyw‹dVÆue
, 
keyw‹dVÆueLí
);

1038  
bufLí
;

1039 } if(
foundVÆueLí
 > 
keyw‹dVÆueLí
) {

1040 
öt32_t
 
dñè
 = 
foundVÆueLí
 - 
keyw‹dVÆueLí
;

1041 if(
√xtSï¨©‹
) {

1042 
	`u¥v_memmove
(
√xtSï¨©‹
 - 
dñè
,ÇextSï¨©‹, 
bufLí
-“extSï¨©‹-
buf„r
));

1044 
	`u¥v_°∫˝y
(
√xtEquÆsign
, 
keyw‹dVÆue
, 
keyw‹dVÆueLí
);

1045 
bufLí
 -
dñè
;

1046 
buf„r
[
bufLí
]=0;

1047  
bufLí
;

1049 
öt32_t
 
dñè
 = 
keyw‹dVÆueLí
 - 
foundVÆueLí
;

1050 if((
bufLí
+
dñè
Ë>
buf„rC≠acôy
) {

1051 *
°©us
 = 
U_BUFFER_OVERFLOW_ERROR
;

1052  
bufLí
+
dñè
;

1054 if(
√xtSï¨©‹
) {

1055 
	`u¥v_memmove
(
√xtSï¨©‹
+
dñè
,√xtSï¨©‹, 
bufLí
-“extSï¨©‹-
buf„r
));

1057 
	`u¥v_°∫˝y
(
√xtEquÆsign
, 
keyw‹dVÆue
, 
keyw‹dVÆueLí
);

1058 
bufLí
 +
dñè
;

1059 
buf„r
[
bufLí
]=0;

1060  
bufLí
;

1063 if(
keyw‹dAtEnd
) {

1065 
keyw‹dSèπ
[-1] = 0;

1066  (
öt32_t
)((
keyw‹dSèπ
-
buf„r
)-1);

1068 
	`u¥v_memmove
(
keyw‹dSèπ
, 
√xtSï¨©‹
+1, 
bufLí
-(“extSï¨©‹+1)-
buf„r
));

1069 
keyw‹dSèπ
[
bufLí
-((
√xtSï¨©‹
+1)-
buf„r
)]=0;

1070  (
öt32_t
)(
bufLí
-((
√xtSï¨©‹
+1)-
keyw‹dSèπ
));

1073 } if(
rc
<0){

1075 
ö£πHîe
 = 
keyw‹dSèπ
;

1077 
keyw‹dSèπ
 = 
√xtSï¨©‹
;

1080 if(!
keyw‹dVÆue
) {

1081  
bufLí
;

1085 
√edLí
 = 
bufLí
+1+
keyw‹dNameLí
+1+
keyw‹dVÆueLí
;

1086 if(
√edLí
 >
buf„rC≠acôy
) {

1087 *
°©us
 = 
U_BUFFER_OVERFLOW_ERROR
;

1088  
√edLí
;

1091 if(
ö£πHîe
) {

1092 
	`u¥v_memmove
(
ö£πHîe
+(1+
keyw‹dNameLí
+1+
keyw‹dVÆueLí
), in£πHîe, 
bufLí
-(ö£πHîe-
buf„r
));

1093 
keyw‹dSèπ
 = 
ö£πHîe
;

1095 
keyw‹dSèπ
 = 
buf„r
+
bufLí
;

1096 *
keyw‹dSèπ
 = ';';

1097 
keyw‹dSèπ
++;

1099 
	`u¥v_°∫˝y
(
keyw‹dSèπ
, 
keyw‹dNameBuf„r
, 
keyw‹dNameLí
);

1100 
keyw‹dSèπ
 +
keyw‹dNameLí
;

1101 *
keyw‹dSèπ
 = '=';

1102 
keyw‹dSèπ
++;

1103 
	`u¥v_°∫˝y
(
keyw‹dSèπ
, 
keyw‹dVÆue
, 
keyw‹dVÆueLí
);

1104 
keyw‹dSèπ
+=
keyw‹dVÆueLí
;

1105 if(
ö£πHîe
) {

1106 *
keyw‹dSèπ
 = ';';

1107 
keyw‹dSèπ
++;

1109 
buf„r
[
√edLí
]=0;

1110  
√edLí
;

1111 
	}
}

1115 
	#_isPªfixLëãr
(
a
Ë(◊=='x')||◊=='X')||◊=='i')||◊=='I'))

	)

1119 
	#_isIDPªfix
(
s
Ë(
	`_isPªfixLëãr
(s[0])&&
	`_isIDSï¨©‹
(s[1]))

	)

1124 
	#_isTîmö©‹
(
a
Ë(◊==0)||◊=='.')||◊=='@'))

	)

1126 * 
	$_°∫chr
(c⁄° * 
°r
, 
öt32_t
 
Àn
, 
c
) {

1127 
	`U_ASSERT
(
°r
 !0 && 
Àn
 >= 0);

1128 
Àn
-- != 0) {

1129 
d
 = *
°r
;

1130 i‡(
d
 =
c
) {

1131  (*Ë
°r
;

1132 } i‡(
d
 == 0) {

1135 ++
°r
;

1137  
NULL
;

1138 
	}
}

1147 
öt16_t
 
	$_födIndex
(c⁄° * c⁄°* 
li°
, c⁄° * 
key
)

1149 c⁄° * c⁄°* 
™ch‹
 = 
li°
;

1150 
öt32_t
 
∑ss
 = 0;

1153 
∑ss
++ < 2) {

1154 *
li°
) {

1155 i‡(
	`u¥v_°rcmp
(
key
, *
li°
) == 0) {

1156  (
öt16_t
)(
li°
 - 
™ch‹
);

1158 
li°
++;

1160 ++
li°
;

1163 
	}
}

1166 
U_INLINE
 
öt32_t


1167 
	$_c›yCou¡
(*
de°
, 
öt32_t
 
de°C≠acôy
, c⁄° *
§c
) {

1168 c⁄° *
™ch‹
;

1169 
c
;

1171 
™ch‹
=
§c
;

1173 if((
c
=*
§c
)==0) {

1174  (
öt32_t
)(
§c
-
™ch‹
);

1176 if(
de°C≠acôy
<=0) {

1177  (
öt32_t
)((
§c
-
™ch‹
)+
	`u¥v_°æí
(src));

1179 ++
§c
;

1180 *
de°
++=
c
;

1181 --
de°C≠acôy
;

1183 
	}
}

1185 
U_CFUNC
 const *

1186 
	$uloc_gëCuºítCou¡ryID
(c⁄° * 
ﬁdID
){

1187 
öt32_t
 
off£t
 = 
	`_födIndex
(
DEPRECATED_COUNTRIES
, 
ﬁdID
);

1188 i‡(
off£t
 >= 0) {

1189  
REPLACEMENT_COUNTRIES
[
off£t
];

1191  
ﬁdID
;

1192 
	}
}

1193 
U_CFUNC
 const *

1194 
	$uloc_gëCuºítL™guageID
(c⁄° * 
ﬁdID
){

1195 
öt32_t
 
off£t
 = 
	`_födIndex
(
DEPRECATED_LANGUAGES
, 
ﬁdID
);

1196 i‡(
off£t
 >= 0) {

1197  
REPLACEMENT_LANGUAGES
[
off£t
];

1199  
ﬁdID
;

1200 
	}
}

1209 
U_CFUNC
 
öt32_t


1210 
	$ulocimp_gëL™guage
(c⁄° *
loˇÀID
,

1211 *
œnguage
, 
öt32_t
 
œnguageC≠acôy
,

1212 c⁄° **
pEnd
) {

1213 
öt32_t
 
i
=0;

1214 
öt32_t
 
off£t
;

1215 
œng
[4]={ 0, 0, 0, 0 };

1218 if(
	`_isIDPªfix
(
loˇÀID
)) {

1219 if(
i
<
œnguageC≠acôy
) {

1220 
œnguage
[
i
]=()
	`u¥v_tﬁowî
(*
loˇÀID
);

1222 if(
i
<
œnguageC≠acôy
) {

1223 
œnguage
[
i
+1]='-';

1225 
i
+=2;

1226 
loˇÀID
+=2;

1230 !
	`_isTîmö©‹
(*
loˇÀID
Ë&& !
	`_isIDSï¨©‹
(*localeID)) {

1231 if(
i
<
œnguageC≠acôy
) {

1232 
œnguage
[
i
]=()
	`u¥v_tﬁowî
(*
loˇÀID
);

1234 if(
i
<3) {

1235 
œng
[
i
]=()
	`u¥v_tﬁowî
(*
loˇÀID
);

1237 
i
++;

1238 
loˇÀID
++;

1241 if(
i
==3) {

1243 
off£t
=
	`_födIndex
(
LANGUAGES_3
, 
œng
);

1244 if(
off£t
>=0) {

1245 
i
=
	`_c›yCou¡
(
œnguage
, 
œnguageC≠acôy
, 
LANGUAGES
[
off£t
]);

1249 if(
pEnd
!=
NULL
) {

1250 *
pEnd
=
loˇÀID
;

1252  
i
;

1253 
	}
}

1255 
U_CFUNC
 
öt32_t


1256 
	$ulocimp_gëS¸ùt
(c⁄° *
loˇÀID
,

1257 *
s¸ùt
, 
öt32_t
 
s¸ùtC≠acôy
,

1258 c⁄° **
pEnd
)

1260 
öt32_t
 
idLí
 = 0;

1262 i‡(
pEnd
 !
NULL
) {

1263 *
pEnd
 = 
loˇÀID
;

1267 !
	`_isTîmö©‹
(
loˇÀID
[
idLí
]Ë&& !
	`_isIDSï¨©‹
(localeID[idLen])) {

1268 
idLí
++;

1272 i‡(
idLí
 == 4) {

1273 
öt32_t
 
i
;

1274 i‡(
pEnd
 !
NULL
) {

1275 *
pEnd
 = 
loˇÀID
+
idLí
;

1277 if(
idLí
 > 
s¸ùtC≠acôy
) {

1278 
idLí
 = 
s¸ùtC≠acôy
;

1280 i‡(
idLí
 >= 1) {

1281 
s¸ùt
[0]=()
	`u¥v_touµî
(*(
loˇÀID
++));

1283 
i
 = 1; i < 
idLí
; i++) {

1284 
s¸ùt
[
i
]=()
	`u¥v_tﬁowî
(*(
loˇÀID
++));

1288 
idLí
 = 0;

1290  
idLí
;

1291 
	}
}

1293 
U_CFUNC
 
öt32_t


1294 
	$ulocimp_gëCou¡ry
(c⁄° *
loˇÀID
,

1295 *
cou¡ry
, 
öt32_t
 
cou¡ryC≠acôy
,

1296 c⁄° **
pEnd
)

1298 
öt32_t
 
idLí
=0;

1299 
˙ty
[
ULOC_COUNTRY_CAPACITY
]={ 0, 0, 0, 0 };

1300 
öt32_t
 
off£t
;

1303 !
	`_isTîmö©‹
(
loˇÀID
[
idLí
]Ë&& !
	`_isIDSï¨©‹
(localeID[idLen])) {

1304 if(
idLí
<(
ULOC_COUNTRY_CAPACITY
-1)) {

1305 
˙ty
[
idLí
]=()
	`u¥v_touµî
(
loˇÀID
[idLen]);

1307 
idLí
++;

1311 i‡(
idLí
 == 2 || idLen == 3) {

1312 
UBoﬁ
 
gŸCou¡ry
 = 
FALSE
;

1314 if(
idLí
==3) {

1315 
off£t
=
	`_födIndex
(
COUNTRIES_3
, 
˙ty
);

1316 if(
off£t
>=0) {

1317 
idLí
=
	`_c›yCou¡
(
cou¡ry
, 
cou¡ryC≠acôy
, 
COUNTRIES
[
off£t
]);

1318 
gŸCou¡ry
 = 
TRUE
;

1321 i‡(!
gŸCou¡ry
) {

1322 
öt32_t
 
i
 = 0;

1323 
i
 = 0; i < 
idLí
; i++) {

1324 i‡(
i
 < 
cou¡ryC≠acôy
) {

1325 
cou¡ry
[
i
]=()
	`u¥v_touµî
(
loˇÀID
[i]);

1329 
loˇÀID
+=
idLí
;

1331 
idLí
 = 0;

1334 if(
pEnd
!=
NULL
) {

1335 *
pEnd
=
loˇÀID
;

1338  
idLí
;

1339 
	}
}

1345 
öt32_t


1346 
	$_gëV¨ü¡Ex
(c⁄° *
loˇÀID
,

1347 
¥ev
,

1348 *
v¨ü¡
, 
öt32_t
 
v¨ü¡C≠acôy
,

1349 
UBoﬁ
 
√edSï¨©‹
) {

1350 
öt32_t
 
i
=0;

1353 if(
	`_isIDSï¨©‹
(
¥ev
)) {

1355 !
	`_isTîmö©‹
(*
loˇÀID
)) {

1356 i‡(
√edSï¨©‹
) {

1357 i‡(
i
<
v¨ü¡C≠acôy
) {

1358 
v¨ü¡
[
i
] = '_';

1360 ++
i
;

1361 
√edSï¨©‹
 = 
FALSE
;

1363 if(
i
<
v¨ü¡C≠acôy
) {

1364 
v¨ü¡
[
i
]=()
	`u¥v_touµî
(*
loˇÀID
);

1365 if(
v¨ü¡
[
i
]=='-') {

1366 
v¨ü¡
[
i
]='_';

1369 
i
++;

1370 
loˇÀID
++;

1375 if(
i
==0) {

1376 if(
¥ev
=='@') {

1378 } if((
loˇÀID
=
	`loˇÀ_gëKeyw‹dsSèπ
÷oˇÀID))!=
NULL
) {

1379 ++
loˇÀID
;

1383 !
	`_isTîmö©‹
(*
loˇÀID
)) {

1384 i‡(
√edSï¨©‹
) {

1385 i‡(
i
<
v¨ü¡C≠acôy
) {

1386 
v¨ü¡
[
i
] = '_';

1388 ++
i
;

1389 
√edSï¨©‹
 = 
FALSE
;

1391 if(
i
<
v¨ü¡C≠acôy
) {

1392 
v¨ü¡
[
i
]=()
	`u¥v_touµî
(*
loˇÀID
);

1393 if(
v¨ü¡
[
i
]=='-' || variant[i]==',') {

1394 
v¨ü¡
[
i
]='_';

1397 
i
++;

1398 
loˇÀID
++;

1402  
i
;

1403 
	}
}

1405 
öt32_t


1406 
	$_gëV¨ü¡
(c⁄° *
loˇÀID
,

1407 
¥ev
,

1408 *
v¨ü¡
, 
öt32_t
 
v¨ü¡C≠acôy
) {

1409  
	`_gëV¨ü¡Ex
(
loˇÀID
, 
¥ev
, 
v¨ü¡
, 
v¨ü¡C≠acôy
, 
FALSE
);

1410 
	}
}

1424 
öt32_t


1425 
	$_dñëeV¨ü¡
(* 
v¨ü¡s
, 
öt32_t
 
v¨ü¡sLí
,

1426 c⁄° * 
toDñëe
, 
öt32_t
 
toDñëeLí
)

1428 
öt32_t
 
dñè
 = 0;

1430 
UBoﬁ
 
Êag
 = 
FALSE
;

1431 i‡(
v¨ü¡sLí
 < 
toDñëeLí
) {

1432  
dñè
;

1434 i‡(
	`u¥v_°∫cmp
(
v¨ü¡s
, 
toDñëe
, 
toDñëeLí
) == 0 &&

1435 (
v¨ü¡sLí
 =
toDñëeLí
 ||

1436 (
Êag
=(
v¨ü¡s
[
toDñëeLí
] == '_'))))

1438 
öt32_t
 
d
 = 
toDñëeLí
 + (
Êag
?1:0);

1439 
v¨ü¡sLí
 -
d
;

1440 
dñè
 +
d
;

1441 i‡(
v¨ü¡sLí
 > 0) {

1442 
	`u¥v_memmove
(
v¨ü¡s
, v¨ü¡s+
d
, 
v¨ü¡sLí
);

1445 * 
p
 = 
	`_°∫chr
(
v¨ü¡s
, 
v¨ü¡sLí
, '_');

1446 i‡(
p
 =
NULL
) {

1447  
dñè
;

1449 ++
p
;

1450 
v¨ü¡sLí
 -(
öt32_t
)(
p
 - 
v¨ü¡s
);

1451 
v¨ü¡s
 = 
p
;

1454 
	}
}

1458 
	sUKeyw‹dsC⁄ãxt
 {

1459 * 
	mkeyw‹ds
;

1460 * 
	mcuºít
;

1461 } 
	tUKeyw‹dsC⁄ãxt
;

1463 
U_CALLCONV


1464 
	$uloc_kw_˛o£Keyw‹ds
(
UEnumî©i⁄
 *
íumî©‹
) {

1465 
	`u¥v_‰ì
(((
UKeyw‹dsC⁄ãxt
 *)
íumî©‹
->
c⁄ãxt
)->
keyw‹ds
);

1466 
	`u¥v_‰ì
(
íumî©‹
->
c⁄ãxt
);

1467 
	`u¥v_‰ì
(
íumî©‹
);

1468 
	}
}

1470 
öt32_t
 
U_CALLCONV


1471 
	$uloc_kw_cou¡Keyw‹ds
(
UEnumî©i⁄
 *
í
, 
UEº‹Code
 *
°©us
) {

1472 *
kw
 = ((
UKeyw‹dsC⁄ãxt
 *)
í
->
c⁄ãxt
)->
keyw‹ds
;

1473 
öt32_t
 
ªsu…
 = 0;

1474 *
kw
) {

1475 
ªsu…
++;

1476 
kw
 +
	`u¥v_°æí
(kw)+1;

1478  
ªsu…
;

1479 
	}
}

1481 c⁄° * 
U_CALLCONV


1482 
	$uloc_kw_√xtKeyw‹d
(
UEnumî©i⁄
* 
í
,

1483 
öt32_t
* 
ªsu…Lígth
,

1484 
UEº‹Code
* 
°©us
) {

1485 c⁄° * 
ªsu…
 = ((
UKeyw‹dsC⁄ãxt
 *)
í
->
c⁄ãxt
)->
cuºít
;

1486 
öt32_t
 
Àn
 = 0;

1487 if(*
ªsu…
) {

1488 
Àn
 = (
öt32_t
)
	`u¥v_°æí
(((
UKeyw‹dsC⁄ãxt
 *)
í
->
c⁄ãxt
)->
cuºít
);

1489 ((
UKeyw‹dsC⁄ãxt
 *)
í
->
c⁄ãxt
)->
cuºít
 +
Àn
+1;

1491 
ªsu…
 = 
NULL
;

1493 i‡(
ªsu…Lígth
) {

1494 *
ªsu…Lígth
 = 
Àn
;

1496  
ªsu…
;

1497 
	}
}

1499 
U_CALLCONV


1500 
	$uloc_kw_ª£tKeyw‹ds
(
UEnumî©i⁄
* 
í
,

1501 
UEº‹Code
* 
°©us
) {

1502 ((
UKeyw‹dsC⁄ãxt
 *)
í
->
c⁄ãxt
)->
cuºít
 = ((UKeyw‹dsC⁄ãxà*În->c⁄ãxt)->
keyw‹ds
;

1503 
	}
}

1505 c⁄° 
UEnumî©i⁄
 
	ggKeyw‹dsEnum
 = {

1506 
NULL
,

1507 
NULL
,

1508 
uloc_kw_˛o£Keyw‹ds
,

1509 
uloc_kw_cou¡Keyw‹ds
,

1510 
uíum_u√xtDeÁu…
,

1511 
uloc_kw_√xtKeyw‹d
,

1512 
uloc_kw_ª£tKeyw‹ds


1515 
U_CAPI
 
UEnumî©i⁄
* 
U_EXPORT2


1516 
	$uloc_›íKeyw‹dLi°
(c⁄° *
keyw‹dLi°
, 
öt32_t
 
keyw‹dLi°Size
, 
UEº‹Code
* 
°©us
)

1518 
UKeyw‹dsC⁄ãxt
 *
myC⁄ãxt
 = 
NULL
;

1519 
UEnumî©i⁄
 *
ªsu…
 = 
NULL
;

1521 if(
	`U_FAILURE
(*
°©us
)) {

1522  
NULL
;

1524 
ªsu…
 = (
UEnumî©i⁄
 *)
	`u¥v_mÆloc
((UEnumeration));

1526 i‡(
ªsu…
 =
NULL
) {

1527 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

1528  
NULL
;

1530 
	`u¥v_mem˝y
(
ªsu…
, &
gKeyw‹dsEnum
, (
UEnumî©i⁄
));

1531 
myC⁄ãxt
 = 
	`u¥v_mÆloc
((
UKeyw‹dsC⁄ãxt
));

1532 i‡(
myC⁄ãxt
 =
NULL
) {

1533 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

1534 
	`u¥v_‰ì
(
ªsu…
);

1535  
NULL
;

1537 
myC⁄ãxt
->
keyw‹ds
 = (*)
	`u¥v_mÆloc
(
keyw‹dLi°Size
+1);

1538 
	`u¥v_mem˝y
(
myC⁄ãxt
->
keyw‹ds
, 
keyw‹dLi°
, 
keyw‹dLi°Size
);

1539 
myC⁄ãxt
->
keyw‹ds
[
keyw‹dLi°Size
] = 0;

1540 
myC⁄ãxt
->
cuºít
 = myC⁄ãxt->
keyw‹ds
;

1541 
ªsu…
->
c⁄ãxt
 = 
myC⁄ãxt
;

1542  
ªsu…
;

1543 
	}
}

1545 
U_CAPI
 
UEnumî©i⁄
* 
U_EXPORT2


1546 
	$uloc_›íKeyw‹ds
(c⁄° * 
loˇÀID
,

1547 
UEº‹Code
* 
°©us
)

1549 
öt32_t
 
i
=0;

1550 
keyw‹ds
[256];

1551 
öt32_t
 
keyw‹dsC≠acôy
 = 256;

1552 
ãmpBuf„r
[
ULOC_FULLNAME_CAPACITY
];

1553 c⁄° * 
tmpLoˇÀID
;

1555 if(
°©us
==
NULL
 || 
	`U_FAILURE
(*status)) {

1559 i‡(
	`_hasBCP47Exãnsi⁄
(
loˇÀID
)) {

1560 
	`_C⁄vîtBCP47
(
tmpLoˇÀID
, 
loˇÀID
, 
ãmpBuf„r
, —empBuf„r), 
°©us
);

1562 i‡(
loˇÀID
==
NULL
) {

1563 
loˇÀID
=
	`uloc_gëDeÁu…
();

1565 
tmpLoˇÀID
=
loˇÀID
;

1569 
	`ulocimp_gëL™guage
(
tmpLoˇÀID
, 
NULL
, 0, &tmpLocaleID);

1570 if(
	`_isIDSï¨©‹
(*
tmpLoˇÀID
)) {

1571 c⁄° *
s¸ùtID
;

1573 
	`ulocimp_gëS¸ùt
(
tmpLoˇÀID
+1, 
NULL
, 0, &
s¸ùtID
);

1574 if(
s¸ùtID
 !
tmpLoˇÀID
+1) {

1576 
tmpLoˇÀID
 = 
s¸ùtID
;

1579 i‡(
	`_isIDSï¨©‹
(*
tmpLoˇÀID
)) {

1580 
	`ulocimp_gëCou¡ry
(
tmpLoˇÀID
+1, 
NULL
, 0, &tmpLocaleID);

1581 if(
	`_isIDSï¨©‹
(*
tmpLoˇÀID
)) {

1582 
	`_gëV¨ü¡
(
tmpLoˇÀID
+1, *tmpLoˇÀID, 
NULL
, 0);

1588 if((
tmpLoˇÀID
 = 
	`loˇÀ_gëKeyw‹dsSèπ
—mpLoˇÀID)Ë!
NULL
) {

1589 
i
=
	`loˇÀ_gëKeyw‹ds
(
tmpLoˇÀID
+1, '@', 
keyw‹ds
, 
keyw‹dsC≠acôy
, 
NULL
, 0, NULL, 
FALSE
, 
°©us
);

1592 if(
i
) {

1593  
	`uloc_›íKeyw‹dLi°
(
keyw‹ds
, 
i
, 
°©us
);

1595  
NULL
;

1597 
	}
}

1601 
	#_ULOC_STRIP_KEYWORDS
 0x2

	)

1602 
	#_ULOC_CANONICALIZE
 0x1

	)

1604 
	#OPTION_SET
(
›ti⁄s
, 
mask
Ë((›ti⁄†& maskË!0)

	)

1606 c⁄° 
	gi_deÁu…
[] = {'i', '-', 'd', 'e', 'f', 'a', 'u', 'l', 't'};

1607 
	#I_DEFAULT_LENGTH
 ( 
i_deÁu…
 /  i_deÁu…[0])

	)

1616 
öt32_t


1617 
	$_ˇn⁄iˇlize
(c⁄° * 
loˇÀID
,

1618 * 
ªsu…
,

1619 
öt32_t
 
ªsu…C≠acôy
,

1620 
uöt32_t
 
›ti⁄s
,

1621 
UEº‹Code
* 
îr
) {

1622 
öt32_t
 
j
, 
Àn
, 
fõldCou¡
=0, 
s¸ùtSize
=0, 
v¨ü¡Size
=0, 
«meC≠acôy
;

1623 
loˇÀBuf„r
[
ULOC_FULLNAME_CAPACITY
];

1624 
ãmpBuf„r
[
ULOC_FULLNAME_CAPACITY
];

1625 c⁄° * 
‹igLoˇÀID
;

1626 c⁄° * 
tmpLoˇÀID
;

1627 c⁄° * 
keyw‹dAssign
 = 
NULL
;

1628 c⁄° * 
£∑øt‹Indiˇt‹
 = 
NULL
;

1629 c⁄° * 
addKeyw‹d
 = 
NULL
;

1630 c⁄° * 
addVÆue
 = 
NULL
;

1631 * 
«me
;

1632 * 
v¨ü¡
 = 
NULL
;

1634 i‡(
	`U_FAILURE
(*
îr
)) {

1638 i‡(
	`_hasBCP47Exãnsi⁄
(
loˇÀID
)) {

1639 
	`_C⁄vîtBCP47
(
tmpLoˇÀID
, 
loˇÀID
, 
ãmpBuf„r
, —empBuf„r), 
îr
);

1641 i‡(
loˇÀID
==
NULL
) {

1642 
loˇÀID
=
	`uloc_gëDeÁu…
();

1644 
tmpLoˇÀID
=
loˇÀID
;

1647 
‹igLoˇÀID
=
tmpLoˇÀID
;

1652 (
ªsu…
 =
NULL
 || 
ªsu…C≠acôy
 < (
loˇÀBuf„r
))) {

1653 
«me
 = 
loˇÀBuf„r
;

1654 
«meC≠acôy
 = (
loˇÀBuf„r
);

1656 
«me
 = 
ªsu…
;

1657 
«meC≠acôy
 = 
ªsu…C≠acôy
;

1661 
Àn
=
	`ulocimp_gëL™guage
(
tmpLoˇÀID
, 
«me
, 
«meC≠acôy
, &tmpLocaleID);

1663 if(
Àn
 =
I_DEFAULT_LENGTH
 && 
	`u¥v_°∫cmp
(
‹igLoˇÀID
, 
i_deÁu…
,Üen) == 0) {

1664 c⁄° *
d
 = 
	`uloc_gëDeÁu…
();

1666 
Àn
 = (
öt32_t
)
	`u¥v_°æí
(
d
);

1668 i‡(
«me
 !
NULL
) {

1669 
	`u¥v_°∫˝y
(
«me
, 
d
, 
Àn
);

1671 } if(
	`_isIDSï¨©‹
(*
tmpLoˇÀID
)) {

1672 c⁄° *
s¸ùtID
;

1674 ++
fõldCou¡
;

1675 if(
Àn
<
«meC≠acôy
) {

1676 
«me
[
Àn
]='_';

1678 ++
Àn
;

1680 
s¸ùtSize
=
	`ulocimp_gëS¸ùt
(
tmpLoˇÀID
+1, 
«me
+
Àn
, 
«meC≠acôy
-Àn, &
s¸ùtID
);

1681 if(
s¸ùtSize
 > 0) {

1683 
tmpLoˇÀID
 = 
s¸ùtID
;

1684 ++
fõldCou¡
;

1685 
Àn
+=
s¸ùtSize
;

1686 i‡(
	`_isIDSï¨©‹
(*
tmpLoˇÀID
)) {

1688 if(
Àn
<
«meC≠acôy
) {

1689 
«me
[
Àn
]='_';

1691 ++
Àn
;

1695 i‡(
	`_isIDSï¨©‹
(*
tmpLoˇÀID
)) {

1696 c⁄° *
˙åyID
;

1697 
öt32_t
 
˙åySize
 = 
	`ulocimp_gëCou¡ry
(
tmpLoˇÀID
+1, 
«me
+
Àn
, 
«meC≠acôy
-Àn, &
˙åyID
);

1698 i‡(
˙åySize
 > 0) {

1700 
tmpLoˇÀID
 = 
˙åyID
;

1701 
Àn
+=
˙åySize
;

1703 if(
	`_isIDSï¨©‹
(*
tmpLoˇÀID
)) {

1705 i‡(
˙åySize
 > 0) {

1706 ++
fõldCou¡
;

1707 if(
Àn
<
«meC≠acôy
) {

1708 
«me
[
Àn
]='_';

1710 ++
Àn
;

1713 
v¨ü¡Size
 = 
	`_gëV¨ü¡
(
tmpLoˇÀID
+1, *tmpLoˇÀID, 
«me
+
Àn
, 
«meC≠acôy
-len);

1714 i‡(
v¨ü¡Size
 > 0) {

1715 
v¨ü¡
 = 
«me
+
Àn
;

1716 
Àn
 +
v¨ü¡Size
;

1717 
tmpLoˇÀID
 +
v¨ü¡Size
 + 1;

1724 i‡(!
	`OPTION_SET
(
›ti⁄s
, 
_ULOC_CANONICALIZE
Ë&& *
tmpLoˇÀID
 == '.') {

1725 
UBoﬁ
 
d⁄e
 = 
FALSE
;

1727 
c
 = *
tmpLoˇÀID
;

1728 
c
) {

1731 
d⁄e
 = 
TRUE
;

1734 i‡(
Àn
<
«meC≠acôy
) {

1735 
«me
[
Àn
] = 
c
;

1737 ++
Àn
;

1738 ++
tmpLoˇÀID
;

1741 } !
d⁄e
);

1746 i‡((
tmpLoˇÀID
=
	`loˇÀ_gëKeyw‹dsSèπ
—mpLoˇÀID))!=
NULL
) {

1747 
keyw‹dAssign
 = 
	`u¥v_°rchr
(
tmpLoˇÀID
, '=');

1748 
£∑øt‹Indiˇt‹
 = 
	`u¥v_°rchr
(
tmpLoˇÀID
, ';');

1752 i‡(!
	`OPTION_SET
(
›ti⁄s
, 
_ULOC_CANONICALIZE
) &&

1753 
tmpLoˇÀID
 !
NULL
 && 
keyw‹dAssign
 == NULL) {

1755 
c
 = *
tmpLoˇÀID
;

1756 i‡(
c
 == 0) {

1759 i‡(
Àn
<
«meC≠acôy
) {

1760 
«me
[
Àn
] = 
c
;

1762 ++
Àn
;

1763 ++
tmpLoˇÀID
;

1767 i‡(
	`OPTION_SET
(
›ti⁄s
, 
_ULOC_CANONICALIZE
)) {

1769 i‡(
tmpLoˇÀID
!=
NULL
 && 
keyw‹dAssign
==NULL) {

1770 
öt32_t
 
posixV¨ü¡Size
;

1772 i‡(
fõldCou¡
 < 2 || (fõldCou¡ < 3 && 
s¸ùtSize
 > 0)) {

1774 if(
Àn
<
«meC≠acôy
) {

1775 
«me
[
Àn
]='_';

1777 ++
Àn
;

1778 ++
fõldCou¡
;

1779 } 
fõldCou¡
<2);

1781 
posixV¨ü¡Size
 = 
	`_gëV¨ü¡Ex
(
tmpLoˇÀID
+1, '@', 
«me
+
Àn
, 
«meC≠acôy
-len,

1782 (
UBoﬁ
)(
v¨ü¡Size
 > 0));

1783 i‡(
posixV¨ü¡Size
 > 0) {

1784 i‡(
v¨ü¡
 =
NULL
) {

1785 
v¨ü¡
 = 
«me
+
Àn
;

1787 
Àn
 +
posixV¨ü¡Size
;

1788 
v¨ü¡Size
 +
posixV¨ü¡Size
;

1793 i‡(
v¨ü¡
) {

1794 
j
=0; j<(
öt32_t
)((
VARIANT_MAP
)/(VARIANT_MAP[0])); j++) {

1795 c⁄° * 
v¨ü¡ToCom∑ª
 = 
VARIANT_MAP
[
j
].
v¨ü¡
;

1796 
öt32_t
 
n
 = (öt32_t)
	`u¥v_°æí
(
v¨ü¡ToCom∑ª
);

1797 
öt32_t
 
v¨ü¡Lí
 = 
	`_dñëeV¨ü¡
(
v¨ü¡
, 
	`u¥v_mö
(
v¨ü¡Size
, (
«meC≠acôy
-
Àn
)), 
v¨ü¡ToCom∑ª
, 
n
);

1798 
Àn
 -
v¨ü¡Lí
;

1799 i‡(
v¨ü¡Lí
 > 0) {

1800 i‡(
«me
[
Àn
-1] == '_') {

1801 --
Àn
;

1803 
addKeyw‹d
 = 
VARIANT_MAP
[
j
].
keyw‹d
;

1804 
addVÆue
 = 
VARIANT_MAP
[
j
].
vÆue
;

1808 i‡(
«me
[
Àn
-1] == '_') {

1809 --
Àn
;

1814 
j
=0; j<(
öt32_t
)((
CANONICALIZE_MAP
)/(CANONICALIZE_MAP[0])); j++) {

1815 c⁄° * 
id
 = 
CANONICALIZE_MAP
[
j
].id;

1816 
öt32_t
 
n
 = (öt32_t)
	`u¥v_°æí
(
id
);

1817 i‡(
Àn
 =
n
 && 
	`u¥v_°∫cmp
(
«me
, 
id
,Ç) == 0) {

1818 i‡(
n
 =0 && 
tmpLoˇÀID
 !
NULL
) {

1821 
Àn
 = 
	`_c›yCou¡
(
«me
, 
«meC≠acôy
, 
CANONICALIZE_MAP
[
j
].
ˇn⁄iˇlID
);

1822 i‡(
CANONICALIZE_MAP
[
j
].
keyw‹d
) {

1823 
addKeyw‹d
 = 
CANONICALIZE_MAP
[
j
].
keyw‹d
;

1824 
addVÆue
 = 
CANONICALIZE_MAP
[
j
].
vÆue
;

1831 i‡(!
	`OPTION_SET
(
›ti⁄s
, 
_ULOC_STRIP_KEYWORDS
)) {

1832 i‡(
tmpLoˇÀID
!=
NULL
 && 
keyw‹dAssign
!=NULL &&

1833 (!
£∑øt‹Indiˇt‹
 || sï¨©‹Indiˇt‹ > 
keyw‹dAssign
)) {

1834 if(
Àn
<
«meC≠acôy
) {

1835 
«me
[
Àn
]='@';

1837 ++
Àn
;

1838 ++
fõldCou¡
;

1839 
Àn
 +
	`_gëKeyw‹ds
(
tmpLoˇÀID
+1, '@', 
«me
+Àn, 
«meC≠acôy
-Àn, 
NULL
, 0, NULL, 
TRUE
,

1840 
addKeyw‹d
, 
addVÆue
, 
îr
);

1841 } i‡(
addKeyw‹d
 !
NULL
) {

1842 
	`U_ASSERT
(
addVÆue
 !
NULL
);

1844 
Àn
 +
	`_c›yCou¡
(
«me
+Àn, 
«meC≠acôy
-len, "@");

1845 
Àn
 +
	`_c›yCou¡
(
«me
+Àn, 
«meC≠acôy
-Àn, 
addKeyw‹d
);

1846 
Àn
 +
	`_c›yCou¡
(
«me
+Àn, 
«meC≠acôy
-len, "=");

1847 
Àn
 +
	`_c›yCou¡
(
«me
+Àn, 
«meC≠acôy
-Àn, 
addVÆue
);

1851 i‡(
	`U_SUCCESS
(*
îr
Ë&& 
ªsu…
 !
NULL
 && 
«me
 =
loˇÀBuf„r
) {

1852 
	`u¥v_°∫˝y
(
ªsu…
, 
loˇÀBuf„r
, (
Àn
 > 
ªsu…C≠acôy
) ?ÑesultCapacity :Üen);

1855  
	`u_ãrmö©eCh¨s
(
ªsu…
, 
ªsu…C≠acôy
, 
Àn
, 
îr
);

1856 
	}
}

1860 
U_CAPI
 
öt32_t
 
U_EXPORT2


1861 
	$uloc_gëP¨ít
(c⁄° * 
loˇÀID
,

1862 * 
∑ª¡
,

1863 
öt32_t
 
∑ª¡C≠acôy
,

1864 
UEº‹Code
* 
îr
)

1866 c⁄° *
œ°Undîsc‹e
;

1867 
öt32_t
 
i
;

1869 i‡(
	`U_FAILURE
(*
îr
))

1872 i‡(
loˇÀID
 =
NULL
)

1873 
loˇÀID
 = 
	`uloc_gëDeÁu…
();

1875 
œ°Undîsc‹e
=
	`u¥v_°ºchr
(
loˇÀID
, '_');

1876 if(
œ°Undîsc‹e
!=
NULL
) {

1877 
i
=(
öt32_t
)(
œ°Undîsc‹e
-
loˇÀID
);

1879 
i
=0;

1882 if(
i
>0 && 
∑ª¡
 !
loˇÀID
) {

1883 
	`u¥v_mem˝y
(
∑ª¡
, 
loˇÀID
, 
	`u¥v_mö
(
i
, 
∑ª¡C≠acôy
));

1885  
	`u_ãrmö©eCh¨s
(
∑ª¡
, 
∑ª¡C≠acôy
, 
i
, 
îr
);

1886 
	}
}

1888 
U_CAPI
 
öt32_t
 
U_EXPORT2


1889 
	$uloc_gëL™guage
(c⁄° * 
loˇÀID
,

1890 * 
œnguage
,

1891 
öt32_t
 
œnguageC≠acôy
,

1892 
UEº‹Code
* 
îr
)

1895 
öt32_t
 
i
=0;

1897 i‡(
îr
==
NULL
 || 
	`U_FAILURE
(*err)) {

1901 if(
loˇÀID
==
NULL
) {

1902 
loˇÀID
=
	`uloc_gëDeÁu…
();

1905 
i
=
	`ulocimp_gëL™guage
(
loˇÀID
, 
œnguage
, 
œnguageC≠acôy
, 
NULL
);

1906  
	`u_ãrmö©eCh¨s
(
œnguage
, 
œnguageC≠acôy
, 
i
, 
îr
);

1907 
	}
}

1909 
U_CAPI
 
öt32_t
 
U_EXPORT2


1910 
	$uloc_gëS¸ùt
(c⁄° * 
loˇÀID
,

1911 * 
s¸ùt
,

1912 
öt32_t
 
s¸ùtC≠acôy
,

1913 
UEº‹Code
* 
îr
)

1915 
öt32_t
 
i
=0;

1917 if(
îr
==
NULL
 || 
	`U_FAILURE
(*err)) {

1921 if(
loˇÀID
==
NULL
) {

1922 
loˇÀID
=
	`uloc_gëDeÁu…
();

1926 
	`ulocimp_gëL™guage
(
loˇÀID
, 
NULL
, 0, &localeID);

1927 if(
	`_isIDSï¨©‹
(*
loˇÀID
)) {

1928 
i
=
	`ulocimp_gëS¸ùt
(
loˇÀID
+1, 
s¸ùt
, 
s¸ùtC≠acôy
, 
NULL
);

1930  
	`u_ãrmö©eCh¨s
(
s¸ùt
, 
s¸ùtC≠acôy
, 
i
, 
îr
);

1931 
	}
}

1933 
U_CAPI
 
öt32_t
 
U_EXPORT2


1934 
	$uloc_gëCou¡ry
(c⁄° * 
loˇÀID
,

1935 * 
cou¡ry
,

1936 
öt32_t
 
cou¡ryC≠acôy
,

1937 
UEº‹Code
* 
îr
)

1939 
öt32_t
 
i
=0;

1941 if(
îr
==
NULL
 || 
	`U_FAILURE
(*err)) {

1945 if(
loˇÀID
==
NULL
) {

1946 
loˇÀID
=
	`uloc_gëDeÁu…
();

1950 
	`ulocimp_gëL™guage
(
loˇÀID
, 
NULL
, 0, &localeID);

1951 if(
	`_isIDSï¨©‹
(*
loˇÀID
)) {

1952 c⁄° *
s¸ùtID
;

1954 
	`ulocimp_gëS¸ùt
(
loˇÀID
+1, 
NULL
, 0, &
s¸ùtID
);

1955 if(
s¸ùtID
 !
loˇÀID
+1) {

1957 
loˇÀID
 = 
s¸ùtID
;

1959 if(
	`_isIDSï¨©‹
(*
loˇÀID
)) {

1960 
i
=
	`ulocimp_gëCou¡ry
(
loˇÀID
+1, 
cou¡ry
, 
cou¡ryC≠acôy
, 
NULL
);

1963  
	`u_ãrmö©eCh¨s
(
cou¡ry
, 
cou¡ryC≠acôy
, 
i
, 
îr
);

1964 
	}
}

1966 
U_CAPI
 
öt32_t
 
U_EXPORT2


1967 
	$uloc_gëV¨ü¡
(c⁄° * 
loˇÀID
,

1968 * 
v¨ü¡
,

1969 
öt32_t
 
v¨ü¡C≠acôy
,

1970 
UEº‹Code
* 
îr
)

1972 
ãmpBuf„r
[
ULOC_FULLNAME_CAPACITY
];

1973 c⁄° * 
tmpLoˇÀID
;

1974 
öt32_t
 
i
=0;

1976 if(
îr
==
NULL
 || 
	`U_FAILURE
(*err)) {

1980 i‡(
	`_hasBCP47Exãnsi⁄
(
loˇÀID
)) {

1981 
	`_C⁄vîtBCP47
(
tmpLoˇÀID
, 
loˇÀID
, 
ãmpBuf„r
, —empBuf„r), 
îr
);

1983 i‡(
loˇÀID
==
NULL
) {

1984 
loˇÀID
=
	`uloc_gëDeÁu…
();

1986 
tmpLoˇÀID
=
loˇÀID
;

1990 
	`ulocimp_gëL™guage
(
tmpLoˇÀID
, 
NULL
, 0, &tmpLocaleID);

1991 if(
	`_isIDSï¨©‹
(*
tmpLoˇÀID
)) {

1992 c⁄° *
s¸ùtID
;

1994 
	`ulocimp_gëS¸ùt
(
tmpLoˇÀID
+1, 
NULL
, 0, &
s¸ùtID
);

1995 if(
s¸ùtID
 !
tmpLoˇÀID
+1) {

1997 
tmpLoˇÀID
 = 
s¸ùtID
;

2000 i‡(
	`_isIDSï¨©‹
(*
tmpLoˇÀID
)) {

2001 c⁄° *
˙åyID
;

2002 
	`ulocimp_gëCou¡ry
(
tmpLoˇÀID
+1, 
NULL
, 0, &
˙åyID
);

2003 i‡(
˙åyID
 !
tmpLoˇÀID
+1) {

2005 
tmpLoˇÀID
 = 
˙åyID
;

2007 if(
	`_isIDSï¨©‹
(*
tmpLoˇÀID
)) {

2009 i‡(
tmpLoˇÀID
 !
˙åyID
 && 
	`_isIDSï¨©‹
(tmpLocaleID[1])) {

2010 
tmpLoˇÀID
++;

2012 
i
=
	`_gëV¨ü¡
(
tmpLoˇÀID
+1, *tmpLoˇÀID, 
v¨ü¡
, 
v¨ü¡C≠acôy
);

2024  
	`u_ãrmö©eCh¨s
(
v¨ü¡
, 
v¨ü¡C≠acôy
, 
i
, 
îr
);

2025 
	}
}

2027 
U_CAPI
 
öt32_t
 
U_EXPORT2


2028 
	$uloc_gëName
(c⁄° * 
loˇÀID
,

2029 * 
«me
,

2030 
öt32_t
 
«meC≠acôy
,

2031 
UEº‹Code
* 
îr
)

2033  
	`_ˇn⁄iˇlize
(
loˇÀID
, 
«me
, 
«meC≠acôy
, 0, 
îr
);

2034 
	}
}

2036 
U_CAPI
 
öt32_t
 
U_EXPORT2


2037 
	$uloc_gëBa£Name
(c⁄° * 
loˇÀID
,

2038 * 
«me
,

2039 
öt32_t
 
«meC≠acôy
,

2040 
UEº‹Code
* 
îr
)

2042  
	`_ˇn⁄iˇlize
(
loˇÀID
, 
«me
, 
«meC≠acôy
, 
_ULOC_STRIP_KEYWORDS
, 
îr
);

2043 
	}
}

2045 
U_CAPI
 
öt32_t
 
U_EXPORT2


2046 
	$uloc_ˇn⁄iˇlize
(c⁄° * 
loˇÀID
,

2047 * 
«me
,

2048 
öt32_t
 
«meC≠acôy
,

2049 
UEº‹Code
* 
îr
)

2051  
	`_ˇn⁄iˇlize
(
loˇÀID
, 
«me
, 
«meC≠acôy
, 
_ULOC_CANONICALIZE
, 
îr
);

2052 
	}
}

2054 
U_CAPI
 c⁄° * 
U_EXPORT2


2055 
	$uloc_gëISO3L™guage
(c⁄° * 
loˇÀID
)

2057 
öt16_t
 
off£t
;

2058 
œng
[
ULOC_LANG_CAPACITY
];

2059 
UEº‹Code
 
îr
 = 
U_ZERO_ERROR
;

2061 i‡(
loˇÀID
 =
NULL
)

2063 
loˇÀID
 = 
	`uloc_gëDeÁu…
();

2065 
	`uloc_gëL™guage
(
loˇÀID
, 
œng
, 
ULOC_LANG_CAPACITY
, &
îr
);

2066 i‡(
	`U_FAILURE
(
îr
))

2068 
off£t
 = 
	`_födIndex
(
LANGUAGES
, 
œng
);

2069 i‡(
off£t
 < 0)

2071  
LANGUAGES_3
[
off£t
];

2072 
	}
}

2074 
U_CAPI
 c⁄° * 
U_EXPORT2


2075 
	$uloc_gëISO3Cou¡ry
(c⁄° * 
loˇÀID
)

2077 
öt16_t
 
off£t
;

2078 
˙åy
[
ULOC_LANG_CAPACITY
];

2079 
UEº‹Code
 
îr
 = 
U_ZERO_ERROR
;

2081 i‡(
loˇÀID
 =
NULL
)

2083 
loˇÀID
 = 
	`uloc_gëDeÁu…
();

2085 
	`uloc_gëCou¡ry
(
loˇÀID
, 
˙åy
, 
ULOC_LANG_CAPACITY
, &
îr
);

2086 i‡(
	`U_FAILURE
(
îr
))

2088 
off£t
 = 
	`_födIndex
(
COUNTRIES
, 
˙åy
);

2089 i‡(
off£t
 < 0)

2092  
COUNTRIES_3
[
off£t
];

2093 
	}
}

2095 
U_CAPI
 
uöt32_t
 
U_EXPORT2


2096 
	$uloc_gëLCID
(c⁄° * 
loˇÀID
)

2098 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

2099 
œngID
[
ULOC_FULLNAME_CAPACITY
];

2101 
	`uloc_gëL™guage
(
loˇÀID
, 
œngID
, ÷™gID), &
°©us
);

2102 i‡(
	`U_FAILURE
(
°©us
)) {

2106  
	`u¥v_c⁄vîtToLCID
(
œngID
, 
loˇÀID
, &
°©us
);

2107 
	}
}

2109 
U_CAPI
 
öt32_t
 
U_EXPORT2


2110 
	$uloc_gëLoˇÀF‹LCID
(
uöt32_t
 
ho°id
, *
loˇÀ
, 
öt32_t
 
loˇÀC≠acôy
,

2111 
UEº‹Code
 *
°©us
)

2113 
öt32_t
 
Àngth
;

2114 c⁄° *
posix
 = 
	`u¥v_c⁄vîtToPosix
(
ho°id
, 
°©us
);

2115 i‡(
	`U_FAILURE
(*
°©us
Ë|| 
posix
 =
NULL
) {

2118 
Àngth
 = (
öt32_t
)
	`u¥v_°æí
(
posix
);

2119 i‡(
Àngth
+1 > 
loˇÀC≠acôy
) {

2120 *
°©us
 = 
U_BUFFER_OVERFLOW_ERROR
;

2123 
	`u¥v_°r˝y
(
loˇÀ
, 
posix
);

2125  
Àngth
;

2126 
	}
}

2130 
U_CAPI
 c⁄° * 
U_EXPORT2


2131 
	$uloc_gëDeÁu…
()

2133  
	`loˇÀ_gë_deÁu…
();

2134 
	}
}

2136 
U_CAPI
 
U_EXPORT2


2137 
	$uloc_£tDeÁu…
(c⁄° * 
√wDeÁu…LoˇÀ
,

2138 
UEº‹Code
* 
îr
)

2140 i‡(
	`U_FAILURE
(*
îr
))

2145 
	`loˇÀ_£t_deÁu…
(
√wDeÁu…LoˇÀ
);

2146 
	}
}

2154 
U_CAPI
 c⁄° * c⁄°* 
U_EXPORT2


2155 
	$uloc_gëISOL™guages
()

2157  
LANGUAGES
;

2158 
	}
}

2166 
U_CAPI
 c⁄° * c⁄°* 
U_EXPORT2


2167 
	$uloc_gëISOCou¡rõs
()

2169  
COUNTRIES
;

2170 
	}
}

2174 
	ggDecimÆ
 = 0;

2179 
	$_uloc_°πod
(c⁄° *
°¨t
, **
íd
) {

2180 *
decimÆ
;

2181 *
myEnd
;

2182 
buf
[30];

2183 
rv
;

2184 i‡(!
gDecimÆ
) {

2185 
ªp
[5];

2189 
	`•rötf
(
ªp
, "%+1.1f", 1.0);

2190 
gDecimÆ
 = 
ªp
[2];

2193 if(
gDecimÆ
 == '.') {

2194  
	`u¥v_°πod
(
°¨t
, 
íd
);

2196 
	`u¥v_°∫˝y
(
buf
, 
°¨t
, 29);

2197 
buf
[29]=0;

2198 
decimÆ
 = 
	`u¥v_°rchr
(
buf
, '.');

2199 if(
decimÆ
) {

2200 *
decimÆ
 = 
gDecimÆ
;

2202  
	`u¥v_°πod
(
°¨t
, 
íd
);

2204 
rv
 = 
	`u¥v_°πod
(
buf
, &
myEnd
);

2205 if(
íd
) {

2206 *
íd
 = (*)(
°¨t
+(
myEnd
-
buf
));

2208  
rv
;

2210 
	}
}

2213 
	mq
;

2214 
öt32_t
 
	mdummy
;

2215 *
	mloˇÀ
;

2216 } 
	t_ac˚±L™gIãm
;

2218 
öt32_t
 
U_CALLCONV


2219 
	$uloc_ac˚±L™guageCom∑ª
(c⁄° *
c⁄ãxt
, c⁄° *
a
, c⁄° *
b
)

2221 c⁄° 
_ac˚±L™gIãm
 *
Ø
 = (c⁄° _ac˚±L™gIãm*)
a
;

2222 c⁄° 
_ac˚±L™gIãm
 *
bb
 = (c⁄° _ac˚±L™gIãm*)
b
;

2224 
öt32_t
 
rc
 = 0;

2225 if(
bb
->
q
 < 
Ø
->q) {

2226 
rc
 = -1;

2227 } if(
bb
->
q
 > 
Ø
->q) {

2228 
rc
 = 1;

2230 
rc
 = 0;

2233 if(
rc
==0) {

2234 
rc
 = 
	`u¥v_°ricmp
(
Ø
->
loˇÀ
, 
bb
->locale);

2237 #i‡
	`deföed
(
ULOC_DEBUG
)

2244  
rc
;

2245 
	}
}

2251 
U_CAPI
 
öt32_t
 
U_EXPORT2


2252 
	$uloc_ac˚±L™guageFromHTTP
(*
ªsu…
, 
öt32_t
 
ªsu…AvaûabÀ
, 
UAc˚±Resu…
 *
outResu…
,

2253 c⁄° *
hâpAc˚±L™guage
,

2254 
UEnumî©i⁄
* 
avaûabÀLoˇÀs
,

2255 
UEº‹Code
 *
°©us
)

2257 
_ac˚±L™gIãm
 *
j
;

2258 
_ac˚±L™gIãm
 
smÆlBuf„r
[30];

2259 **
°rs
;

2260 
tmp
[
ULOC_FULLNAME_CAPACITY
 +1];

2261 
öt32_t
 
n
 = 0;

2262 c⁄° *
ôemEnd
;

2263 c⁄° *
∑ømEnd
;

2264 c⁄° *
s
;

2265 c⁄° *
t
;

2266 
öt32_t
 
ªs
;

2267 
öt32_t
 
i
;

2268 
öt32_t
 
l
 = (öt32_t)
	`u¥v_°æí
(
hâpAc˚±L™guage
);

2269 
öt32_t
 
jSize
;

2270 *
ãmp°r
;

2272 
j
 = 
smÆlBuf„r
;

2273 
jSize
 = (
smÆlBuf„r
)/(smallBuffer[0]);

2274 if(
	`U_FAILURE
(*
°©us
)) {

2278 
s
=
hâpAc˚±L™guage
;s&&*s;) {

2279 
	`is•a˚
(*
s
))

2280 
s
++;

2281 
ôemEnd
=
	`u¥v_°rchr
(
s
,',');

2282 
∑ømEnd
=
	`u¥v_°rchr
(
s
,';');

2283 if(!
ôemEnd
) {

2284 
ôemEnd
 = 
hâpAc˚±L™guage
+
l
;

2286 if(
∑ømEnd
 &&Ö¨amEnd<
ôemEnd
) {

2288 
t
 = 
∑ømEnd
+1;

2289 if(*
t
=='q') {

2290 
t
++;

2292 
	`is•a˚
(*
t
)) {

2293 
t
++;

2295 if(*
t
=='=') {

2296 
t
++;

2298 
	`is•a˚
(*
t
)) {

2299 
t
++;

2301 
j
[
n
].
q
 = ()
	`_uloc_°πod
(
t
,
NULL
);

2304 
j
[
n
].
q
 = 1.0f;

2305 
∑ømEnd
 = 
ôemEnd
;

2307 
j
[
n
].
dummy
=0;

2309 
t
=(
∑ømEnd
-1);’¨amEnd>
s
)&&
	`is•a˚
(*t);t--)

2312 
ãmp°r
 = 
	`u¥v_°∫dup
(
s
,(
öt32_t
)((
t
+1)-s));

2313 i‡(
ãmp°r
 =
NULL
) {

2314 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

2317 
j
[
n
].
loˇÀ
 = 
ãmp°r
;

2318 
	`uloc_ˇn⁄iˇlize
(
j
[
n
].
loˇÀ
,
tmp
,—mp)/—mp[0]),
°©us
);

2319 if(
	`°rcmp
(
j
[
n
].
loˇÀ
,
tmp
)) {

2320 
	`u¥v_‰ì
(
j
[
n
].
loˇÀ
);

2321 
j
[
n
].
loˇÀ
=
	`u¥v_°rdup
(
tmp
);

2323 #i‡
	`deföed
(
ULOC_DEBUG
)

2326 
n
++;

2327 
s
 = 
ôemEnd
;

2328 *
s
==',') {

2329 
s
++;

2331 if(
n
>=
jSize
) {

2332 if(
j
==
smÆlBuf„r
) {

2333 
j
 = 
	`u¥v_mÆloc
((j[0])*(
jSize
*2));

2334 if(
j
!=
NULL
) {

2335 
	`u¥v_mem˝y
(
j
,
smÆlBuf„r
,(j[0])*
jSize
);

2337 #i‡
	`deföed
(
ULOC_DEBUG
)

2338 
	`Ârötf
(
°dîr
,"mÆlo˚dáàsizê%d\n", 
jSize
);

2341 
j
 = 
	`u¥v_ªÆloc
(j, (j[0])*
jSize
*2);

2342 #i‡
	`deföed
(
ULOC_DEBUG
)

2343 
	`Ârötf
(
°dîr
,"ª-Ælo˚dáàsizê%d\n", 
jSize
);

2346 
jSize
 *= 2;

2347 if(
j
==
NULL
) {

2348 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

2353 
	`u¥v_s‹tAºay
(
j
, 
n
, (j[0]), 
uloc_ac˚±L™guageCom∑ª
, 
NULL
, 
TRUE
, 
°©us
);

2354 if(
	`U_FAILURE
(*
°©us
)) {

2355 if(
j
 !
smÆlBuf„r
) {

2356 #i‡
	`deföed
(
ULOC_DEBUG
)

2357 
	`Ârötf
(
°dîr
,"‰ìög j %p\n", 
j
);

2359 
	`u¥v_‰ì
(
j
);

2363 
°rs
 = 
	`u¥v_mÆloc
((
size_t
)((°rs[0])*
n
));

2365 i‡(
°rs
 =
NULL
) {

2366 
	`u¥v_‰ì
(
j
);

2367 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

2370 
i
=0;i<
n
;i++) {

2371 #i‡
	`deföed
(
ULOC_DEBUG
)

2374 
°rs
[
i
]=
j
[i].
loˇÀ
;

2376 
ªs
 = 
	`uloc_ac˚±L™guage
(
ªsu…
, 
ªsu…AvaûabÀ
, 
outResu…
,

2377 (c⁄° **)
°rs
, 
n
, 
avaûabÀLoˇÀs
, 
°©us
);

2378 
i
=0;i<
n
;i++) {

2379 
	`u¥v_‰ì
(
°rs
[
i
]);

2381 
	`u¥v_‰ì
(
°rs
);

2382 if(
j
 !
smÆlBuf„r
) {

2383 #i‡
	`deföed
(
ULOC_DEBUG
)

2384 
	`Ârötf
(
°dîr
,"‰ìög j %p\n", 
j
);

2386 
	`u¥v_‰ì
(
j
);

2388  
ªs
;

2389 
	}
}

2392 
U_CAPI
 
öt32_t
 
U_EXPORT2


2393 
	$uloc_ac˚±L™guage
(*
ªsu…
, 
öt32_t
 
ªsu…AvaûabÀ
,

2394 
UAc˚±Resu…
 *
outResu…
, c⁄° **
ac˚±Li°
,

2395 
öt32_t
 
ac˚±Li°Cou¡
,

2396 
UEnumî©i⁄
* 
avaûabÀLoˇÀs
,

2397 
UEº‹Code
 *
°©us
)

2399 
öt32_t
 
i
,
j
;

2400 
öt32_t
 
Àn
;

2401 
öt32_t
 
maxLí
=0;

2402 
tmp
[
ULOC_FULLNAME_CAPACITY
+1];

2403 c⁄° *
l
;

2404 **
ÁŒbackLi°
;

2405 if(
	`U_FAILURE
(*
°©us
)) {

2408 
ÁŒbackLi°
 = 
	`u¥v_mÆloc
((
size_t
)((ÁŒbackLi°[0])*
ac˚±Li°Cou¡
));

2409 if(
ÁŒbackLi°
==
NULL
) {

2410 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

2413 
i
=0;i<
ac˚±Li°Cou¡
;i++) {

2414 #i‡
	`deföed
(
ULOC_DEBUG
)

2415 
	`Ârötf
(
°dîr
,"%02d: %s\n", 
i
, 
ac˚±Li°
[i]);

2417 (
l
=
	`uíum_√xt
(
avaûabÀLoˇÀs
, 
NULL
, 
°©us
))) {

2418 #i‡
	`deföed
(
ULOC_DEBUG
)

2419 
	`Ârötf
(
°dîr
," %s\n", 
l
);

2421 
Àn
 = (
öt32_t
)
	`u¥v_°æí
(
l
);

2422 if(!
	`u¥v_°rcmp
(
ac˚±Li°
[
i
], 
l
)) {

2423 if(
outResu…
) {

2424 *
outResu…
 = 
ULOC_ACCEPT_VALID
;

2426 #i‡
	`deföed
(
ULOC_DEBUG
)

2427 
	`Ârötf
(
°dîr
, "MATCH! %s\n", 
l
);

2429 if(
Àn
>0) {

2430 
	`u¥v_°∫˝y
(
ªsu…
, 
l
, 
	`u¥v_mö
(
Àn
, 
ªsu…AvaûabÀ
));

2432 
j
=0;j<
i
;j++) {

2433 
	`u¥v_‰ì
(
ÁŒbackLi°
[
j
]);

2435 
	`u¥v_‰ì
(
ÁŒbackLi°
);

2436  
	`u_ãrmö©eCh¨s
(
ªsu…
, 
ªsu…AvaûabÀ
, 
Àn
, 
°©us
);

2438 if(
Àn
>
maxLí
) {

2439 
maxLí
 = 
Àn
;

2442 
	`uíum_ª£t
(
avaûabÀLoˇÀs
, 
°©us
);

2444 if(
	`uloc_gëP¨ít
(
ac˚±Li°
[
i
], 
tmp
, —mp)/—mp[0]), 
°©us
)!=0) {

2445 
ÁŒbackLi°
[
i
] = 
	`u¥v_°rdup
(
tmp
);

2447 
ÁŒbackLi°
[
i
]=0;

2451 
maxLí
--;maxLen>0;maxLen--) {

2452 
i
=0;i<
ac˚±Li°Cou¡
;i++) {

2453 if(
ÁŒbackLi°
[
i
] && ((
öt32_t
)
	`u¥v_°æí
(ÁŒbackLi°[i])==
maxLí
)) {

2454 #i‡
	`deföed
(
ULOC_DEBUG
)

2455 
	`Ârötf
(
°dîr
,"Try: [%s]", 
ÁŒbackLi°
[
i
]);

2457 (
l
=
	`uíum_√xt
(
avaûabÀLoˇÀs
, 
NULL
, 
°©us
))) {

2458 #i‡
	`deföed
(
ULOC_DEBUG
)

2459 
	`Ârötf
(
°dîr
," %s\n", 
l
);

2461 
Àn
 = (
öt32_t
)
	`u¥v_°æí
(
l
);

2462 if(!
	`u¥v_°rcmp
(
ÁŒbackLi°
[
i
], 
l
)) {

2463 if(
outResu…
) {

2464 *
outResu…
 = 
ULOC_ACCEPT_FALLBACK
;

2466 #i‡
	`deföed
(
ULOC_DEBUG
)

2467 
	`Ârötf
(
°dîr
, "ÁŒback MATCH! %s\n", 
l
);

2469 if(
Àn
>0) {

2470 
	`u¥v_°∫˝y
(
ªsu…
, 
l
, 
	`u¥v_mö
(
Àn
, 
ªsu…AvaûabÀ
));

2472 
j
=0;j<
ac˚±Li°Cou¡
;j++) {

2473 
	`u¥v_‰ì
(
ÁŒbackLi°
[
j
]);

2475 
	`u¥v_‰ì
(
ÁŒbackLi°
);

2476  
	`u_ãrmö©eCh¨s
(
ªsu…
, 
ªsu…AvaûabÀ
, 
Àn
, 
°©us
);

2479 
	`uíum_ª£t
(
avaûabÀLoˇÀs
, 
°©us
);

2481 if(
	`uloc_gëP¨ít
(
ÁŒbackLi°
[
i
], 
tmp
, —mp)/—mp[0]), 
°©us
)!=0) {

2482 
	`u¥v_‰ì
(
ÁŒbackLi°
[
i
]);

2483 
ÁŒbackLi°
[
i
] = 
	`u¥v_°rdup
(
tmp
);

2485 
	`u¥v_‰ì
(
ÁŒbackLi°
[
i
]);

2486 
ÁŒbackLi°
[
i
]=0;

2490 if(
outResu…
) {

2491 *
outResu…
 = 
ULOC_ACCEPT_FAILED
;

2494 
i
=0;i<
ac˚±Li°Cou¡
;i++) {

2495 
	`u¥v_‰ì
(
ÁŒbackLi°
[
i
]);

2497 
	`u¥v_‰ì
(
ÁŒbackLi°
);

2499 
	}
}

	@uloc_tag.c

8 
	~"unicode/uty≥s.h
"

9 
	~"unicode/uªs.h
"

10 
	~"unicode/putû.h
"

11 
	~"unicode/uloc.h
"

12 
	~"u°r_imp.h
"

13 
	~"cmem‹y.h
"

14 
	~"c°rög.h
"

15 
	~"putûimp.h
"

16 
	~"uövch¨.h
"

19 
	sV¨ü¡Li°E¡ry
 {

20 c⁄° *
	mv¨ü¡
;

21 
V¨ü¡Li°E¡ry
 *
	m√xt
;

22 } 
	tV¨ü¡Li°E¡ry
;

25 
	sExãnsi⁄Li°E¡ry
 {

26 c⁄° *
	mkey
;

27 c⁄° *
	mvÆue
;

28 
Exãnsi⁄Li°E¡ry
 *
	m√xt
;

29 } 
	tExãnsi⁄Li°E¡ry
;

31 
	#MAXEXTLANG
 3

	)

32 
	sUL™guageTag
 {

33 *
	mbuf
;

34 c⁄° *
	mœnguage
;

35 c⁄° *
	mexé™g
[
MAXEXTLANG
];

36 c⁄° *
	ms¸ùt
;

37 c⁄° *
	mªgi⁄
;

38 
V¨ü¡Li°E¡ry
 *
	mv¨ü¡s
;

39 
Exãnsi⁄Li°E¡ry
 *
	mexãnsi⁄s
;

40 c⁄° *
	m¥iv©eu£
;

41 c⁄° *
	mgøndÁthîed
;

42 } 
	tUL™guageTag
;

44 
	#MINLEN
 2

	)

45 
	#SEP
 '-'

	)

46 
	#PRIVATEUSE
 'x'

	)

47 
	#LDMLEXT
 'u'

	)

49 
	#LOCALE_SEP
 '_'

	)

50 
	#LOCALE_EXT_SEP
 '@'

	)

51 
	#LOCALE_KEYWORD_SEP
 ';'

	)

52 
	#LOCALE_KEY_TYPE_SEP
 '='

	)

54 
	#ISALPHA
(
c
Ë(((c)>='A' && (c)<='Z'Ë|| ((c)>='a' && (c)<='z'))

	)

55 
	#ISNUMERIC
(
c
Ë((c)>='0' && (c)<='9')

	)

57 c⁄° * 
	gEMPTY
 = "";

58 c⁄° * 
	gLANG_UND
 = "und";

59 c⁄° * 
	gPRIVATEUSE_KEY
 = "x";

60 c⁄° * 
	g_POSIX
 = "_POSIX";

61 c⁄° * 
	gPOSIX_KEY
 = "va";

62 c⁄° * 
	gPOSIX_VALUE
 = "posix";

64 
	#LANG_UND_LEN
 3

	)

66 c⁄° * 
	gGRANDFATHERED
[] = {

94 
NULL
, NULL

97 c⁄° * 
	gDEPRECATEDLANGS
[] = {

102 
NULL
, NULL

113 
UL™guageTag
*

114 
u…ag_∑r£
(c⁄° * 
èg
, 
öt32_t
 
ègLí
, i¡32_t* 
∑r£dLí
, 
UEº‹Code
* 
°©us
);

117 
u…ag_˛o£
(
UL™guageTag
* 
œngèg
);

120 
u…ag_gëL™guage
(c⁄° 
UL™guageTag
* 
œngèg
);

124 
u…ag_gëJDKL™guage
(c⁄° 
UL™guageTag
* 
œngèg
);

128 
u…ag_gëExé™g
(c⁄° 
UL™guageTag
* 
œngèg
, 
öt32_t
 
idx
);

130 
öt32_t


131 
u…ag_gëExé™gSize
(c⁄° 
UL™guageTag
* 
œngèg
);

134 
u…ag_gëS¸ùt
(c⁄° 
UL™guageTag
* 
œngèg
);

137 
u…ag_gëRegi⁄
(c⁄° 
UL™guageTag
* 
œngèg
);

140 
u…ag_gëV¨ü¡
(c⁄° 
UL™guageTag
* 
œngèg
, 
öt32_t
 
idx
);

142 
öt32_t


143 
u…ag_gëV¨ü¡sSize
(c⁄° 
UL™guageTag
* 
œngèg
);

146 
u…ag_gëExãnsi⁄Key
(c⁄° 
UL™guageTag
* 
œngèg
, 
öt32_t
 
idx
);

149 
u…ag_gëExãnsi⁄VÆue
(c⁄° 
UL™guageTag
* 
œngèg
, 
öt32_t
 
idx
);

151 
öt32_t


152 
u…ag_gëExãnsi⁄sSize
(c⁄° 
UL™guageTag
* 
œngèg
);

155 
u…ag_gëPriv©eU£
(c⁄° 
UL™guageTag
* 
œngèg
);

159 
u…ag_gëGøndÁthîed
(c⁄° 
UL™guageTag
* 
œngèg
);

170 
UBoﬁ


171 
	$_isAÕhaSåög
(c⁄° * 
s
, 
öt32_t
 
Àn
) {

172 
öt32_t
 
i
;

173 
i
 = 0; i < 
Àn
; i++) {

174 i‡(!
	`ISALPHA
(*(
s
 + 
i
))) {

175  
FALSE
;

178  
TRUE
;

179 
	}
}

181 
UBoﬁ


182 
	$_isNumîicSåög
(c⁄° * 
s
, 
öt32_t
 
Àn
) {

183 
öt32_t
 
i
;

184 
i
 = 0; i < 
Àn
; i++) {

185 i‡(!
	`ISNUMERIC
(*(
s
 + 
i
))) {

186  
FALSE
;

189  
TRUE
;

190 
	}
}

192 
UBoﬁ


193 
	$_isAÕhaNumîicSåög
(c⁄° * 
s
, 
öt32_t
 
Àn
) {

194 
öt32_t
 
i
;

195 
i
 = 0; i < 
Àn
; i++) {

196 i‡(!
	`ISALPHA
(*(
s
 + 
i
)Ë&& !
	`ISNUMERIC
(*(s + i))) {

197  
FALSE
;

200  
TRUE
;

201 
	}
}

203 
UBoﬁ


204 
	$_isL™guageSubèg
(c⁄° * 
s
, 
öt32_t
 
Àn
) {

212 i‡(
Àn
 < 0) {

213 
Àn
 = (
öt32_t
)
	`u¥v_°æí
(
s
);

215 i‡(
Àn
 >2 &&Üí <8 && 
	`_isAÕhaSåög
(
s
,Üen)) {

216  
TRUE
;

218  
FALSE
;

219 
	}
}

221 
UBoﬁ


222 
	$_isExé™gSubèg
(c⁄° * 
s
, 
öt32_t
 
Àn
) {

227 i‡(
Àn
 < 0) {

228 
Àn
 = (
öt32_t
)
	`u¥v_°æí
(
s
);

230 i‡(
Àn
 =3 && 
	`_isAÕhaSåög
(
s
,Üen)) {

231  
TRUE
;

233  
FALSE
;

234 
	}
}

236 
UBoﬁ


237 
	$_isS¸ùtSubèg
(c⁄° * 
s
, 
öt32_t
 
Àn
) {

241 i‡(
Àn
 < 0) {

242 
Àn
 = (
öt32_t
)
	`u¥v_°æí
(
s
);

244 i‡(
Àn
 =4 && 
	`_isAÕhaSåög
(
s
,Üen)) {

245  
TRUE
;

247  
FALSE
;

248 
	}
}

250 
UBoﬁ


251 
	$_isRegi⁄Subèg
(c⁄° * 
s
, 
öt32_t
 
Àn
) {

256 i‡(
Àn
 < 0) {

257 
Àn
 = (
öt32_t
)
	`u¥v_°æí
(
s
);

259 i‡(
Àn
 =2 && 
	`_isAÕhaSåög
(
s
,Üen)) {

260  
TRUE
;

262 i‡(
Àn
 =3 && 
	`_isNumîicSåög
(
s
,Üen)) {

263  
TRUE
;

265  
FALSE
;

266 
	}
}

268 
UBoﬁ


269 
	$_isV¨ü¡Subèg
(c⁄° * 
s
, 
öt32_t
 
Àn
) {

274 i‡(
Àn
 < 0) {

275 
Àn
 = (
öt32_t
)
	`u¥v_°æí
(
s
);

277 i‡(
Àn
 >5 &&Üí <8 && 
	`_isAÕhaSåög
(
s
,Üen)) {

278  
TRUE
;

280 i‡(
Àn
 =4 && 
	`ISNUMERIC
(*
s
Ë&& 
	`_isAÕhaNumîicSåög
(s + 1, 3)) {

281  
TRUE
;

283  
FALSE
;

284 
	}
}

286 
UBoﬁ


287 
	$_isExãnsi⁄SögÀt⁄
(c⁄° * 
s
, 
öt32_t
 
Àn
) {

291 i‡(
Àn
 < 0) {

292 
Àn
 = (
öt32_t
)
	`u¥v_°æí
(
s
);

294 i‡(
Àn
 =1 && 
	`ISALPHA
(*
s
Ë&& (
	`u¥v_tﬁowî
(*sË!
PRIVATEUSE
)) {

295  
TRUE
;

297  
FALSE
;

298 
	}
}

300 
UBoﬁ


301 
	$_isExãnsi⁄Subèg
(c⁄° * 
s
, 
öt32_t
 
Àn
) {

305 i‡(
Àn
 < 0) {

306 
Àn
 = (
öt32_t
)
	`u¥v_°æí
(
s
);

308 i‡(
Àn
 >2 &&Üí <8 && 
	`_isAÕhaNumîicSåög
(
s
,Üen)) {

309  
TRUE
;

311  
FALSE
;

312 
	}
}

314 
UBoﬁ


315 
	$_isExãnsi⁄Subègs
(c⁄° * 
s
, 
öt32_t
 
Àn
) {

316 c⁄° *
p
 = 
s
;

317 c⁄° *
pSubèg
 = 
NULL
;

319 i‡(
Àn
 < 0) {

320 
Àn
 = (
öt32_t
)
	`u¥v_°æí
(
s
);

323 (
p
 - 
s
Ë< 
Àn
) {

324 i‡(*
p
 =
SEP
) {

325 i‡(
pSubèg
 =
NULL
) {

326  
FALSE
;

328 i‡(!
	`_isExãnsi⁄Subèg
(
pSubèg
, (
öt32_t
)(
p
 -ÖSubtag))) {

329  
FALSE
;

331 
pSubèg
 = 
NULL
;

332 } i‡(
pSubèg
 =
NULL
) {

333 
pSubèg
 = 
p
;

335 
p
++;

337 i‡(
pSubèg
 =
NULL
) {

338  
FALSE
;

340  
	`_isExãnsi⁄Subèg
(
pSubèg
, (
öt32_t
)(
p
 -ÖSubtag));

341 
	}
}

343 
UBoﬁ


344 
	$_isPriv©eu£VÆueSubèg
(c⁄° * 
s
, 
öt32_t
 
Àn
) {

348 i‡(
Àn
 < 0) {

349 
Àn
 = (
öt32_t
)
	`u¥v_°æí
(
s
);

351 i‡(
Àn
 >1 &&Üí <8 && 
	`_isAÕhaNumîicSåög
(
s
,Üen)) {

352  
TRUE
;

354  
FALSE
;

355 
	}
}

357 
UBoﬁ


358 
	$_isPriv©eu£VÆueSubègs
(c⁄° * 
s
, 
öt32_t
 
Àn
) {

359 c⁄° *
p
 = 
s
;

360 c⁄° *
pSubèg
 = 
NULL
;

362 i‡(
Àn
 < 0) {

363 
Àn
 = (
öt32_t
)
	`u¥v_°æí
(
s
);

366 (
p
 - 
s
Ë< 
Àn
) {

367 i‡(*
p
 =
SEP
) {

368 i‡(
pSubèg
 =
NULL
) {

369  
FALSE
;

371 i‡(!
	`_isPriv©eu£VÆueSubèg
(
pSubèg
, (
öt32_t
)(
p
 -ÖSubtag))) {

372  
FALSE
;

374 
pSubèg
 = 
NULL
;

375 } i‡(
pSubèg
 =
NULL
) {

376 
pSubèg
 = 
p
;

378 
p
++;

380 i‡(
pSubèg
 =
NULL
) {

381  
FALSE
;

383  
	`_isPriv©eu£VÆueSubèg
(
pSubèg
, (
öt32_t
)(
p
 -ÖSubtag));

384 
	}
}

386 
UBoﬁ


387 
	$_isLDMLKey
(c⁄° * 
s
, 
öt32_t
 
Àn
) {

388 i‡(
Àn
 < 0) {

389 
Àn
 = (
öt32_t
)
	`u¥v_°æí
(
s
);

391 i‡(
Àn
 =2 && 
	`_isAÕhaNumîicSåög
(
s
,Üen)) {

392  
TRUE
;

394  
FALSE
;

395 
	}
}

397 
UBoﬁ


398 
	$_isLDMLTy≥
(c⁄° * 
s
, 
öt32_t
 
Àn
) {

399 i‡(
Àn
 < 0) {

400 
Àn
 = (
öt32_t
)
	`u¥v_°æí
(
s
);

402 i‡(
Àn
 >3 &&Üí <8 && 
	`_isAÕhaNumîicSåög
(
s
,Üen)) {

403  
TRUE
;

405  
FALSE
;

406 
	}
}

416 
UBoﬁ


417 
	$_addV¨ü¡ToLi°
(
V¨ü¡Li°E¡ry
 **
fú°
, V¨ü¡Li°E¡ry *
v¨
) {

418 
UBoﬁ
 
bAdded
 = 
TRUE
;

420 i‡(*
fú°
 =
NULL
) {

421 
v¨
->
√xt
 = 
NULL
;

422 *
fú°
 = 
v¨
;

424 
V¨ü¡Li°E¡ry
 *
¥ev
, *
cur
;

425 
öt32_t
 
cmp
;

428 
¥ev
 = 
NULL
;

429 
cur
 = *
fú°
;

430 
TRUE
) {

431 i‡(
cur
 =
NULL
) {

432 
¥ev
->
√xt
 = 
v¨
;

433 
v¨
->
√xt
 = 
NULL
;

436 
cmp
 = 
	`u¥v_com∑ªInvCh¨sAsAscii
(
v¨
->
v¨ü¡
, 
cur
->variant);

437 i‡(
cmp
 < 0) {

438 i‡(
¥ev
 =
NULL
) {

439 *
fú°
 = 
v¨
;

441 
¥ev
->
√xt
 = 
v¨
;

443 
v¨
->
√xt
 = 
cur
;

446 i‡(
cmp
 == 0) {

448 
bAdded
 = 
FALSE
;

451 
¥ev
 = 
cur
;

452 
cur
 = cur->
√xt
;

456  
bAdded
;

457 
	}
}

460 
UBoﬁ


461 
	$_addExãnsi⁄ToLi°
(
Exãnsi⁄Li°E¡ry
 **
fú°
, Exãnsi⁄Li°E¡ry *
ext
, 
UBoﬁ
 
loˇÀToBCP
) {

462 
UBoﬁ
 
bAdded
 = 
TRUE
;

464 i‡(*
fú°
 =
NULL
) {

465 
ext
->
√xt
 = 
NULL
;

466 *
fú°
 = 
ext
;

468 
Exãnsi⁄Li°E¡ry
 *
¥ev
, *
cur
;

469 
öt32_t
 
cmp
;

472 
¥ev
 = 
NULL
;

473 
cur
 = *
fú°
;

474 
TRUE
) {

475 i‡(
cur
 =
NULL
) {

476 
¥ev
->
√xt
 = 
ext
;

477 
ext
->
√xt
 = 
NULL
;

480 i‡(
loˇÀToBCP
) {

482 
öt32_t
 
Àn
, 
cuæí
;

484 
Àn
 = (
öt32_t
)
	`u¥v_°æí
(
ext
->
key
);

485 
cuæí
 = (
öt32_t
)
	`u¥v_°æí
(
cur
->
key
);

487 i‡(
Àn
 =1 && 
cuæí
 == 1) {

488 i‡(*(
ext
->
key
Ë=*(
cur
->key)) {

489 
cmp
 = 0;

490 } i‡(*(
ext
->
key
Ë=
PRIVATEUSE
) {

491 
cmp
 = 1;

492 } i‡(*(
cur
->
key
Ë=
PRIVATEUSE
) {

493 
cmp
 = -1;

495 
cmp
 = *(
ext
->
key
Ë- *(
cur
->key);

497 } i‡(
Àn
 == 1) {

498 
cmp
 = *(
ext
->
key
Ë- 
LDMLEXT
;

499 } i‡(
cuæí
 == 1) {

500 
cmp
 = 
LDMLEXT
 - *(
cur
->
key
);

502 
cmp
 = 
	`u¥v_com∑ªInvCh¨sAsAscii
(
ext
->
key
, 
cur
->key);

505 
cmp
 = 
	`u¥v_com∑ªInvCh¨sAsAscii
(
ext
->
key
, 
cur
->key);

507 i‡(
cmp
 < 0) {

508 i‡(
¥ev
 =
NULL
) {

509 *
fú°
 = 
ext
;

511 
¥ev
->
√xt
 = 
ext
;

513 
ext
->
√xt
 = 
cur
;

516 i‡(
cmp
 == 0) {

518 
bAdded
 = 
FALSE
;

521 
¥ev
 = 
cur
;

522 
cur
 = cur->
√xt
;

526  
bAdded
;

527 
	}
}

530 
	$_öôülizeUL™guageTag
(
UL™guageTag
* 
œngèg
) {

531 
öt32_t
 
i
;

533 
œngèg
->
buf
 = 
NULL
;

535 
œngèg
->
œnguage
 = 
EMPTY
;

536 
i
 = 0; i < 
MAXEXTLANG
; i++) {

537 
œngèg
->
exé™g
[
i
] = 
NULL
;

540 
œngèg
->
s¸ùt
 = 
EMPTY
;

541 
œngèg
->
ªgi⁄
 = 
EMPTY
;

543 
œngèg
->
v¨ü¡s
 = 
NULL
;

544 
œngèg
->
exãnsi⁄s
 = 
NULL
;

546 
œngèg
->
gøndÁthîed
 = 
EMPTY
;

547 
œngèg
->
¥iv©eu£
 = 
EMPTY
;

548 
	}
}

550 
	#KEYTYPEDATA
 "keyTy≥D©a"

	)

551 
	#KEYMAP
 "keyM≠"

	)

552 
	#TYPEMAP
 "ty≥M≠"

	)

553 
	#TYPEALIAS
 "ty≥Alüs"

	)

554 
	#MAX_BCP47_SUBTAG_LEN
 9

	)

555 
	#MAX_LDML_KEY_LEN
 22

	)

556 
	#MAX_LDML_TYPE_LEN
 32

	)

558 
öt32_t


559 
	$_ldmlKeyToBCP47
(c⁄° * 
key
, 
öt32_t
 
keyLí
,

560 * 
b˝Key
, 
öt32_t
 
b˝KeyC≠acôy
,

561 
UEº‹Code
 *
°©us
) {

562 
UResour˚BundÀ
 *
rb
;

563 
keyBuf
[
MAX_LDML_KEY_LEN
];

564 
b˝KeyBuf
[
MAX_BCP47_SUBTAG_LEN
];

565 
öt32_t
 
ªsu…Lí
 = 0;

566 
öt32_t
 
i
;

567 
UEº‹Code
 
tmpSètus
 = 
U_ZERO_ERROR
;

568 c⁄° 
UCh¨
 *
uB˝Key
;

569 
öt32_t
 
b˝KeyLí
;

571 i‡(
keyLí
 < 0) {

572 
keyLí
 = (
öt32_t
)
	`u¥v_°æí
(
key
);

575 i‡(
keyLí
 >(
keyBuf
)) {

577 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

581 
	`u¥v_mem˝y
(
keyBuf
, 
key
, 
keyLí
);

582 
keyBuf
[
keyLí
] = 0;

585 
i
 = 0; i < 
keyLí
; i++) {

586 
keyBuf
[
i
] = 
	`u¥v_tﬁowî
(keyBuf[i]);

589 
rb
 = 
	`uªs_›íDúe˘
(
NULL
, 
KEYTYPEDATA
, 
°©us
);

590 
	`uªs_gëByKey
(
rb
, 
KEYMAP
,Ñb, 
°©us
);

592 i‡(
	`U_FAILURE
(*
°©us
)) {

593 
	`uªs_˛o£
(
rb
);

597 
uB˝Key
 = 
	`uªs_gëSåögByKey
(
rb
, 
keyBuf
, &
b˝KeyLí
, &
tmpSètus
);

598 i‡(
	`U_SUCCESS
(
tmpSètus
)) {

599 
	`u_UCh¨sToCh¨s
(
uB˝Key
, 
b˝KeyBuf
, 
b˝KeyLí
);

600 
b˝KeyBuf
[
b˝KeyLí
] = 0;

601 
ªsu…Lí
 = 
b˝KeyLí
;

603 i‡(
	`_isLDMLKey
(
key
, 
keyLí
)) {

604 
	`u¥v_mem˝y
(
b˝KeyBuf
, 
key
, 
keyLí
);

605 
b˝KeyBuf
[
keyLí
] = 0;

606 
ªsu…Lí
 = 
keyLí
;

609 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

612 
	`uªs_˛o£
(
rb
);

614 i‡(
	`U_FAILURE
(*
°©us
)) {

618 
	`u¥v_mem˝y
(
b˝Key
, 
b˝KeyBuf
, 
	`u¥v_mö
(
ªsu…Lí
, 
b˝KeyC≠acôy
));

619  
	`u_ãrmö©eCh¨s
(
b˝Key
, 
b˝KeyC≠acôy
, 
ªsu…Lí
, 
°©us
);

620 
	}
}

622 
öt32_t


623 
	$_b˝47ToLDMLKey
(c⁄° * 
b˝Key
, 
öt32_t
 
b˝KeyLí
,

624 * 
key
, 
öt32_t
 
keyC≠acôy
,

625 
UEº‹Code
 *
°©us
) {

626 
UResour˚BundÀ
 *
rb
;

627 
b˝KeyBuf
[
MAX_BCP47_SUBTAG_LEN
];

628 
öt32_t
 
ªsu…Lí
 = 0;

629 
öt32_t
 
i
;

630 c⁄° *
ªsKey
 = 
NULL
;

631 
UResour˚BundÀ
 *
m≠D©a
;

633 i‡(
b˝KeyLí
 < 0) {

634 
b˝KeyLí
 = (
öt32_t
)
	`u¥v_°æí
(
b˝Key
);

637 i‡(
b˝KeyLí
 >(
b˝KeyBuf
)) {

638 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

642 
	`u¥v_mem˝y
(
b˝KeyBuf
, 
b˝Key
, 
b˝KeyLí
);

643 
b˝KeyBuf
[
b˝KeyLí
] = 0;

646 
i
 = 0; i < 
b˝KeyLí
; i++) {

647 
b˝KeyBuf
[
i
] = 
	`u¥v_tﬁowî
(bcpKeyBuf[i]);

650 
rb
 = 
	`uªs_›íDúe˘
(
NULL
, 
KEYTYPEDATA
, 
°©us
);

651 
	`uªs_gëByKey
(
rb
, 
KEYMAP
,Ñb, 
°©us
);

652 i‡(
	`U_FAILURE
(*
°©us
)) {

653 
	`uªs_˛o£
(
rb
);

657 
m≠D©a
 = 
	`uªs_gëNextResour˚
(
rb
, 
NULL
, 
°©us
);

658 
	`U_SUCCESS
(*
°©us
)) {

659 c⁄° 
UCh¨
 *
uB˝Key
;

660 
tmpB˝KeyBuf
[
MAX_BCP47_SUBTAG_LEN
];

661 
öt32_t
 
tmpB˝KeyLí
;

663 
uB˝Key
 = 
	`uªs_gëSåög
(
m≠D©a
, &
tmpB˝KeyLí
, 
°©us
);

664 i‡(
	`U_FAILURE
(*
°©us
)) {

667 
	`u_UCh¨sToCh¨s
(
uB˝Key
, 
tmpB˝KeyBuf
, 
tmpB˝KeyLí
);

668 
tmpB˝KeyBuf
[
tmpB˝KeyLí
] = 0;

669 i‡(
	`u¥v_com∑ªInvCh¨sAsAscii
(
b˝KeyBuf
, 
tmpB˝KeyBuf
) == 0) {

671 
ªsKey
 = 
	`uªs_gëKey
(
m≠D©a
);

672 
ªsu…Lí
 = (
öt32_t
)
	`u¥v_°æí
(
ªsKey
);

675 i‡(!
	`uªs_hasNext
(
rb
)) {

678 
	`uªs_gëNextResour˚
(
rb
, 
m≠D©a
, 
°©us
);

680 
	`uªs_˛o£
(
m≠D©a
);

681 
	`uªs_˛o£
(
rb
);

683 i‡(
	`U_FAILURE
(*
°©us
)) {

687 i‡(
ªsKey
 =
NULL
) {

688 
ªsKey
 = 
b˝KeyBuf
;

689 
ªsu…Lí
 = 
b˝KeyLí
;

692 
	`u¥v_mem˝y
(
key
, 
ªsKey
, 
	`u¥v_mö
(
ªsu…Lí
, 
keyC≠acôy
));

693  
	`u_ãrmö©eCh¨s
(
key
, 
keyC≠acôy
, 
ªsu…Lí
, 
°©us
);

694 
	}
}

696 
öt32_t


697 
	$_ldmlTy≥ToBCP47
(c⁄° * 
key
, 
öt32_t
 
keyLí
,

698 c⁄° * 
ty≥
, 
öt32_t
 
ty≥Lí
,

699 * 
b˝Ty≥
, 
öt32_t
 
b˝Ty≥C≠acôy
,

700 
UEº‹Code
 *
°©us
) {

701 
UResour˚BundÀ
 *
rb
, *
keyTy≥D©a
, *
ty≥M≠F‹Key
;

702 
keyBuf
[
MAX_LDML_KEY_LEN
];

703 
ty≥Buf
[
MAX_LDML_TYPE_LEN
];

704 
b˝Ty≥Buf
[
MAX_BCP47_SUBTAG_LEN
];

705 
öt32_t
 
ªsu…Lí
 = 0;

706 
öt32_t
 
i
;

707 
UEº‹Code
 
tmpSètus
 = 
U_ZERO_ERROR
;

708 c⁄° 
UCh¨
 *
uB˝Ty≥
, *
uC™⁄iˇlTy≥
;

709 
öt32_t
 
b˝Ty≥Lí
, 
ˇn⁄iˇlTy≥Lí
;

710 
UBoﬁ
 
isTimez⁄e
 = 
FALSE
;

712 i‡(
keyLí
 < 0) {

713 
keyLí
 = (
öt32_t
)
	`u¥v_°æí
(
key
);

715 i‡(
keyLí
 >(
keyBuf
)) {

717 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

720 
	`u¥v_mem˝y
(
keyBuf
, 
key
, 
keyLí
);

721 
keyBuf
[
keyLí
] = 0;

724 
i
 = 0; i < 
keyLí
; i++) {

725 
keyBuf
[
i
] = 
	`u¥v_tﬁowî
(keyBuf[i]);

727 i‡(
	`u¥v_com∑ªInvCh¨sAsAscii
(
keyBuf
, "timezone") == 0) {

728 
isTimez⁄e
 = 
TRUE
;

731 i‡(
ty≥Lí
 < 0) {

732 
ty≥Lí
 = (
öt32_t
)
	`u¥v_°æí
(
ty≥
);

734 i‡(
ty≥Lí
 >(
ty≥Buf
)) {

735 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

739 i‡(
isTimez⁄e
) {

741 
i
 = 0; i < 
ty≥Lí
; i++) {

742 i‡(*(
ty≥
 + 
i
) == '/') {

743 
ty≥Buf
[
i
] = ':';

745 
ty≥Buf
[
i
] = *(
ty≥
 + i);

748 
ty≥Buf
[
ty≥Lí
] = 0;

749 
ty≥
 = &
ty≥Buf
[0];

752 
keyTy≥D©a
 = 
	`uªs_›íDúe˘
(
NULL
, 
KEYTYPEDATA
, 
°©us
);

753 
rb
 = 
	`uªs_gëByKey
(
keyTy≥D©a
, 
TYPEMAP
, 
NULL
, 
°©us
);

754 i‡(
	`U_FAILURE
(*
°©us
)) {

755 
	`uªs_˛o£
(
rb
);

756 
	`uªs_˛o£
(
keyTy≥D©a
);

760 
ty≥M≠F‹Key
 = 
	`uªs_gëByKey
(
rb
, 
keyBuf
, 
NULL
, &
tmpSètus
);

761 
uB˝Ty≥
 = 
	`uªs_gëSåögByKey
(
ty≥M≠F‹Key
, 
ty≥
, &
b˝Ty≥Lí
, &
tmpSètus
);

762 i‡(
	`U_SUCCESS
(
tmpSètus
)) {

763 
	`u_UCh¨sToCh¨s
(
uB˝Ty≥
, 
b˝Ty≥Buf
, 
b˝Ty≥Lí
);

764 
ªsu…Lí
 = 
b˝Ty≥Lí
;

765 } i‡(
tmpSètus
 =
U_MISSING_RESOURCE_ERROR
) {

767 
tmpSètus
 = 
U_ZERO_ERROR
;

768 
	`uªs_gëByKey
(
keyTy≥D©a
, 
TYPEALIAS
, 
rb
, &
tmpSètus
);

769 
	`uªs_gëByKey
(
rb
, 
keyBuf
,Ñb, &
tmpSètus
);

770 
uC™⁄iˇlTy≥
 = 
	`uªs_gëSåögByKey
(
rb
, 
ty≥
, &
ˇn⁄iˇlTy≥Lí
, &
tmpSètus
);

771 i‡(
	`U_SUCCESS
(
tmpSètus
)) {

772 
	`u_UCh¨sToCh¨s
(
uC™⁄iˇlTy≥
, 
ty≥Buf
, 
ˇn⁄iˇlTy≥Lí
);

773 i‡(
isTimez⁄e
) {

775 
i
 = 0; i < 
ˇn⁄iˇlTy≥Lí
; i++) {

776 i‡(
ty≥Buf
[
i
] == '/') {

777 
ty≥Buf
[
i
] = ':';

781 
ty≥Buf
[
ˇn⁄iˇlTy≥Lí
] = 0;

784 
uB˝Ty≥
 = 
	`uªs_gëSåögByKey
(
ty≥M≠F‹Key
, 
ty≥Buf
, &
b˝Ty≥Lí
, &
tmpSètus
);

785 i‡(
	`U_SUCCESS
(
tmpSètus
)) {

786 
	`u_UCh¨sToCh¨s
(
uB˝Ty≥
, 
b˝Ty≥Buf
, 
b˝Ty≥Lí
);

787 
ªsu…Lí
 = 
b˝Ty≥Lí
;

790 i‡(
tmpSètus
 =
U_MISSING_RESOURCE_ERROR
) {

791 i‡(
	`_isLDMLTy≥
(
ty≥
, 
ty≥Lí
)) {

792 
	`u¥v_mem˝y
(
b˝Ty≥Buf
, 
ty≥
, 
ty≥Lí
);

793 
ªsu…Lí
 = 
ty≥Lí
;

796 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

800 *
°©us
 = 
tmpSètus
;

802 
	`uªs_˛o£
(
rb
);

803 
	`uªs_˛o£
(
ty≥M≠F‹Key
);

804 
	`uªs_˛o£
(
keyTy≥D©a
);

806 i‡(
	`U_FAILURE
(*
°©us
)) {

810 
	`u¥v_mem˝y
(
b˝Ty≥
, 
b˝Ty≥Buf
, 
	`u¥v_mö
(
ªsu…Lí
, 
b˝Ty≥C≠acôy
));

811  
	`u_ãrmö©eCh¨s
(
b˝Ty≥
, 
b˝Ty≥C≠acôy
, 
ªsu…Lí
, 
°©us
);

812 
	}
}

814 
öt32_t


815 
	$_b˝47ToLDMLTy≥
(c⁄° * 
key
, 
öt32_t
 
keyLí
,

816 c⁄° * 
b˝Ty≥
, 
öt32_t
 
b˝Ty≥Lí
,

817 * 
ty≥
, 
öt32_t
 
ty≥C≠acôy
,

818 
UEº‹Code
 *
°©us
) {

819 
UResour˚BundÀ
 *
rb
;

820 
keyBuf
[
MAX_LDML_KEY_LEN
];

821 
b˝Ty≥Buf
[
MAX_BCP47_SUBTAG_LEN
];

822 
öt32_t
 
ªsu…Lí
 = 0;

823 
öt32_t
 
i
;

824 c⁄° *
ªsTy≥
 = 
NULL
;

825 
UResour˚BundÀ
 *
m≠D©a
;

826 
UEº‹Code
 
tmpSètus
 = 
U_ZERO_ERROR
;

827 
öt32_t
 
c›yLí
;

829 i‡(
keyLí
 < 0) {

830 
keyLí
 = (
öt32_t
)
	`u¥v_°æí
(
key
);

833 i‡(
keyLí
 >(
keyBuf
)) {

835 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

838 
	`u¥v_mem˝y
(
keyBuf
, 
key
, 
keyLí
);

839 
keyBuf
[
keyLí
] = 0;

842 
i
 = 0; i < 
keyLí
; i++) {

843 
keyBuf
[
i
] = 
	`u¥v_tﬁowî
(keyBuf[i]);

847 i‡(
b˝Ty≥Lí
 < 0) {

848 
b˝Ty≥Lí
 = (
öt32_t
)
	`u¥v_°æí
(
b˝Ty≥
);

851 i‡(
b˝Ty≥Lí
 >(
b˝Ty≥Buf
)) {

852 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

856 
	`u¥v_mem˝y
(
b˝Ty≥Buf
, 
b˝Ty≥
, 
b˝Ty≥Lí
);

857 
b˝Ty≥Buf
[
b˝Ty≥Lí
] = 0;

860 
i
 = 0; i < 
b˝Ty≥Lí
; i++) {

861 
b˝Ty≥Buf
[
i
] = 
	`u¥v_tﬁowî
(bcpTypeBuf[i]);

864 
rb
 = 
	`uªs_›íDúe˘
(
NULL
, 
KEYTYPEDATA
, 
°©us
);

865 
	`uªs_gëByKey
(
rb
, 
TYPEMAP
,Ñb, 
°©us
);

866 i‡(
	`U_FAILURE
(*
°©us
)) {

867 
	`uªs_˛o£
(
rb
);

871 
	`uªs_gëByKey
(
rb
, 
keyBuf
,Ñb, &
tmpSètus
);

872 
m≠D©a
 = 
	`uªs_gëNextResour˚
(
rb
, 
NULL
, &
tmpSètus
);

873 
	`U_SUCCESS
(
tmpSètus
)) {

874 c⁄° 
UCh¨
 *
uB˝Ty≥
;

875 
tmpB˝Ty≥Buf
[
MAX_BCP47_SUBTAG_LEN
];

876 
öt32_t
 
tmpB˝Ty≥Lí
;

878 
uB˝Ty≥
 = 
	`uªs_gëSåög
(
m≠D©a
, &
tmpB˝Ty≥Lí
, &
tmpSètus
);

879 i‡(
	`U_FAILURE
(
tmpSètus
)) {

882 
	`u_UCh¨sToCh¨s
(
uB˝Ty≥
, 
tmpB˝Ty≥Buf
, 
tmpB˝Ty≥Lí
);

883 
tmpB˝Ty≥Buf
[
tmpB˝Ty≥Lí
] = 0;

884 i‡(
	`u¥v_com∑ªInvCh¨sAsAscii
(
b˝Ty≥Buf
, 
tmpB˝Ty≥Buf
) == 0) {

886 
ªsTy≥
 = 
	`uªs_gëKey
(
m≠D©a
);

887 
ªsu…Lí
 = (
öt32_t
)
	`u¥v_°æí
(
ªsTy≥
);

890 i‡(!
	`uªs_hasNext
(
rb
)) {

893 
	`uªs_gëNextResour˚
(
rb
, 
m≠D©a
, &
tmpSètus
);

895 
	`uªs_˛o£
(
m≠D©a
);

896 
	`uªs_˛o£
(
rb
);

898 i‡(
	`U_FAILURE
(
tmpSètus
Ë&&ÅmpSètu†!
U_MISSING_RESOURCE_ERROR
) {

899 *
°©us
 = 
tmpSètus
;

903 i‡(
ªsTy≥
 =
NULL
) {

904 
ªsTy≥
 = 
b˝Ty≥Buf
;

905 
ªsu…Lí
 = 
b˝Ty≥Lí
;

908 
c›yLí
 = 
	`u¥v_mö
(
ªsu…Lí
, 
ty≥C≠acôy
);

909 
	`u¥v_mem˝y
(
ty≥
, 
ªsTy≥
, 
c›yLí
);

911 i‡(
	`u¥v_com∑ªInvCh¨sAsAscii
(
keyBuf
, "timezone") == 0) {

912 
i
 = 0; i < 
c›yLí
; i++) {

913 i‡(*(
ty≥
 + 
i
) == ':') {

914 *(
ty≥
 + 
i
) = '/';

919  
	`u_ãrmö©eCh¨s
(
ty≥
, 
ty≥C≠acôy
, 
ªsu…Lí
, 
°©us
);

920 
	}
}

922 
öt32_t


923 
	$_≠≥ndL™guageToL™guageTag
(c⁄° * 
loˇÀID
, * 
≠≥ndAt
, 
öt32_t
 
ˇ∑côy
, 
UBoﬁ
 
°ri˘
, 
UEº‹Code
* 
°©us
) {

924 
buf
[
ULOC_LANG_CAPACITY
];

925 
UEº‹Code
 
tmpSètus
 = 
U_ZERO_ERROR
;

926 
öt32_t
 
Àn
, 
i
;

927 
öt32_t
 
ª¶í
 = 0;

929 i‡(
	`U_FAILURE
(*
°©us
)) {

933 
Àn
 = 
	`uloc_gëL™guage
(
loˇÀID
, 
buf
, (buf), &
tmpSètus
);

934 i‡(
	`U_FAILURE
(
tmpSètus
Ë||ÅmpSètu†=
U_STRING_NOT_TERMINATED_WARNING
) {

935 i‡(
°ri˘
) {

936 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

939 
Àn
 = 0;

944 i‡(
Àn
 == 0) {

945 i‡(
ª¶í
 < 
ˇ∑côy
) {

946 
	`u¥v_mem˝y
(
≠≥ndAt
 + 
ª¶í
, 
LANG_UND
, 
	`u¥v_mö
(
LANG_UND_LEN
, 
ˇ∑côy
 -Ñeslen));

948 
ª¶í
 +
LANG_UND_LEN
;

949 } i‡(!
	`_isL™guageSubèg
(
buf
, 
Àn
)) {

951 i‡(
°ri˘
) {

952 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

955 i‡(
ª¶í
 < 
ˇ∑côy
) {

956 
	`u¥v_mem˝y
(
≠≥ndAt
 + 
ª¶í
, 
LANG_UND
, 
	`u¥v_mö
(
LANG_UND_LEN
, 
ˇ∑côy
 -Ñeslen));

958 
ª¶í
 +
LANG_UND_LEN
;

961 
i
 = 0; 
DEPRECATEDLANGS
[i] !
NULL
; i += 2) {

962 i‡(
	`u¥v_com∑ªInvCh¨sAsAscii
(
buf
, 
DEPRECATEDLANGS
[
i
]) == 0) {

963 
	`u¥v_°r˝y
(
buf
, 
DEPRECATEDLANGS
[
i
 + 1]);

964 
Àn
 = (
öt32_t
)
	`u¥v_°æí
(
buf
);

968 i‡(
ª¶í
 < 
ˇ∑côy
) {

969 
	`u¥v_mem˝y
(
≠≥ndAt
 + 
ª¶í
, 
buf
, 
	`u¥v_mö
(
Àn
, 
ˇ∑côy
 -Ñeslen));

971 
ª¶í
 +
Àn
;

973 
	`u_ãrmö©eCh¨s
(
≠≥ndAt
, 
ˇ∑côy
, 
ª¶í
, 
°©us
);

974  
ª¶í
;

975 
	}
}

977 
öt32_t


978 
	$_≠≥ndS¸ùtToL™guageTag
(c⁄° * 
loˇÀID
, * 
≠≥ndAt
, 
öt32_t
 
ˇ∑côy
, 
UBoﬁ
 
°ri˘
, 
UEº‹Code
* 
°©us
) {

979 
buf
[
ULOC_SCRIPT_CAPACITY
];

980 
UEº‹Code
 
tmpSètus
 = 
U_ZERO_ERROR
;

981 
öt32_t
 
Àn
;

982 
öt32_t
 
ª¶í
 = 0;

984 i‡(
	`U_FAILURE
(*
°©us
)) {

988 
Àn
 = 
	`uloc_gëS¸ùt
(
loˇÀID
, 
buf
, (buf), &
tmpSètus
);

989 i‡(
	`U_FAILURE
(
tmpSètus
Ë||ÅmpSètu†=
U_STRING_NOT_TERMINATED_WARNING
) {

990 i‡(
°ri˘
) {

991 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

996 i‡(
Àn
 > 0) {

997 i‡(!
	`_isS¸ùtSubèg
(
buf
, 
Àn
)) {

999 i‡(
°ri˘
) {

1000 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1004 i‡(
ª¶í
 < 
ˇ∑côy
) {

1005 *(
≠≥ndAt
 + 
ª¶í
Ë
SEP
;

1007 
ª¶í
++;

1009 i‡(
ª¶í
 < 
ˇ∑côy
) {

1010 
	`u¥v_mem˝y
(
≠≥ndAt
 + 
ª¶í
, 
buf
, 
	`u¥v_mö
(
Àn
, 
ˇ∑côy
 -Ñeslen));

1012 
ª¶í
 +
Àn
;

1015 
	`u_ãrmö©eCh¨s
(
≠≥ndAt
, 
ˇ∑côy
, 
ª¶í
, 
°©us
);

1016  
ª¶í
;

1017 
	}
}

1019 
öt32_t


1020 
	$_≠≥ndRegi⁄ToL™guageTag
(c⁄° * 
loˇÀID
, * 
≠≥ndAt
, 
öt32_t
 
ˇ∑côy
, 
UBoﬁ
 
°ri˘
, 
UEº‹Code
* 
°©us
) {

1021 
buf
[
ULOC_COUNTRY_CAPACITY
];

1022 
UEº‹Code
 
tmpSètus
 = 
U_ZERO_ERROR
;

1023 
öt32_t
 
Àn
;

1024 
öt32_t
 
ª¶í
 = 0;

1026 i‡(
	`U_FAILURE
(*
°©us
)) {

1030 
Àn
 = 
	`uloc_gëCou¡ry
(
loˇÀID
, 
buf
, (buf), &
tmpSètus
);

1031 i‡(
	`U_FAILURE
(
tmpSètus
Ë||ÅmpSètu†=
U_STRING_NOT_TERMINATED_WARNING
) {

1032 i‡(
°ri˘
) {

1033 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1038 i‡(
Àn
 > 0) {

1039 i‡(!
	`_isRegi⁄Subèg
(
buf
, 
Àn
)) {

1041 i‡(
°ri˘
) {

1042 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1046 i‡(
ª¶í
 < 
ˇ∑côy
) {

1047 *(
≠≥ndAt
 + 
ª¶í
Ë
SEP
;

1049 
ª¶í
++;

1051 i‡(
ª¶í
 < 
ˇ∑côy
) {

1052 
	`u¥v_mem˝y
(
≠≥ndAt
 + 
ª¶í
, 
buf
, 
	`u¥v_mö
(
Àn
, 
ˇ∑côy
 -Ñeslen));

1054 
ª¶í
 +
Àn
;

1057 
	`u_ãrmö©eCh¨s
(
≠≥ndAt
, 
ˇ∑côy
, 
ª¶í
, 
°©us
);

1058  
ª¶í
;

1059 
	}
}

1061 
öt32_t


1062 
	$_≠≥ndV¨ü¡sToL™guageTag
(c⁄° * 
loˇÀID
, * 
≠≥ndAt
, 
öt32_t
 
ˇ∑côy
, 
UBoﬁ
 
°ri˘
, UBoﬁ *
hadPosix
, 
UEº‹Code
* 
°©us
) {

1063 
buf
[
ULOC_FULLNAME_CAPACITY
];

1064 
UEº‹Code
 
tmpSètus
 = 
U_ZERO_ERROR
;

1065 
öt32_t
 
Àn
, 
i
;

1066 
öt32_t
 
ª¶í
 = 0;

1068 i‡(
	`U_FAILURE
(*
°©us
)) {

1072 
Àn
 = 
	`uloc_gëV¨ü¡
(
loˇÀID
, 
buf
, (buf), &
tmpSètus
);

1073 i‡(
	`U_FAILURE
(
tmpSètus
Ë||ÅmpSètu†=
U_STRING_NOT_TERMINATED_WARNING
) {

1074 i‡(
°ri˘
) {

1075 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1080 i‡(
Àn
 > 0) {

1081 *
p
, *
pV¨
;

1082 
UBoﬁ
 
bNext
 = 
TRUE
;

1083 
V¨ü¡Li°E¡ry
 *
v¨
;

1084 
V¨ü¡Li°E¡ry
 *
v¨Fú°
 = 
NULL
;

1086 
pV¨
 = 
NULL
;

1087 
p
 = 
buf
;

1088 
bNext
) {

1089 i‡(*
p
 =
SEP
 || *∞=
LOCALE_SEP
 || *p == 0) {

1090 i‡(*
p
 == 0) {

1091 
bNext
 = 
FALSE
;

1093 *
p
 = 0;

1095 i‡(
pV¨
 =
NULL
) {

1096 i‡(
°ri˘
) {

1097 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1104 
i
 = 0; *(
pV¨
 + i) != 0; i++) {

1105 *(
pV¨
 + 
i
Ë
	`u¥v_tﬁowî
(*(pVar + i));

1109 i‡(
	`_isV¨ü¡Subèg
(
pV¨
, -1)) {

1110 i‡(
	`u¥v_°rcmp
(
pV¨
,
POSIX_VALUE
)) {

1112 
v¨
 = 
	`u¥v_mÆloc
((
V¨ü¡Li°E¡ry
));

1113 i‡(
v¨
 =
NULL
) {

1114 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

1117 
v¨
->
v¨ü¡
 = 
pV¨
;

1118 i‡(!
	`_addV¨ü¡ToLi°
(&
v¨Fú°
, 
v¨
)) {

1120 
	`u¥v_‰ì
(
v¨
);

1121 i‡(
°ri˘
) {

1122 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1129 *
hadPosix
 = 
TRUE
;

1131 } i‡(
°ri˘
) {

1132 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1137 
pV¨
 = 
NULL
;

1138 } i‡(
pV¨
 =
NULL
) {

1139 
pV¨
 = 
p
;

1141 
p
++;

1144 i‡(
	`U_SUCCESS
(*
°©us
)) {

1145 i‡(
v¨Fú°
 !
NULL
) {

1146 
öt32_t
 
v¨Lí
;

1149 
v¨
 = 
v¨Fú°
;

1150 
v¨
 !
NULL
) {

1151 i‡(
ª¶í
 < 
ˇ∑côy
) {

1152 *(
≠≥ndAt
 + 
ª¶í
Ë
SEP
;

1154 
ª¶í
++;

1155 
v¨Lí
 = (
öt32_t
)
	`u¥v_°æí
(
v¨
->
v¨ü¡
);

1156 i‡(
ª¶í
 < 
ˇ∑côy
) {

1157 
	`u¥v_mem˝y
(
≠≥ndAt
 + 
ª¶í
, 
v¨
->
v¨ü¡
, 
	`u¥v_mö
(
v¨Lí
, 
ˇ∑côy
 -Ñeslen));

1159 
ª¶í
 +
v¨Lí
;

1160 
v¨
 = v¨->
√xt
;

1166 
v¨
 = 
v¨Fú°
;

1167 
v¨
 !
NULL
) {

1168 
V¨ü¡Li°E¡ry
 *
tmpV¨
 = 
v¨
->
√xt
;

1169 
	`u¥v_‰ì
(
v¨
);

1170 
v¨
 = 
tmpV¨
;

1173 i‡(
	`U_FAILURE
(*
°©us
)) {

1178 
	`u_ãrmö©eCh¨s
(
≠≥ndAt
, 
ˇ∑côy
, 
ª¶í
, 
°©us
);

1179  
ª¶í
;

1180 
	}
}

1182 
öt32_t


1183 
	$_≠≥ndKeyw‹dsToL™guageTag
(c⁄° * 
loˇÀID
, * 
≠≥ndAt
, 
öt32_t
 
ˇ∑côy
, 
UBoﬁ
 
°ri˘
, UBoﬁ 
hadPosix
, 
UEº‹Code
* 
°©us
) {

1184 
buf
[
ULOC_KEYWORD_AND_VALUES_CAPACITY
];

1185 
UEnumî©i⁄
 *
keyw‹dEnum
 = 
NULL
;

1186 
öt32_t
 
ª¶í
 = 0;

1188 
keyw‹dEnum
 = 
	`uloc_›íKeyw‹ds
(
loˇÀID
, 
°©us
);

1189 i‡(
	`U_FAILURE
(*
°©us
Ë&& !
hadPosix
) {

1190 
	`uíum_˛o£
(
keyw‹dEnum
);

1193 i‡(
keyw‹dEnum
 !
NULL
 || 
hadPosix
) {

1195 
öt32_t
 
Àn
;

1196 c⁄° *
key
;

1197 
Exãnsi⁄Li°E¡ry
 *
fú°Ext
 = 
NULL
;

1198 
Exãnsi⁄Li°E¡ry
 *
ext
;

1199 
extBuf
[
ULOC_KEYWORD_AND_VALUES_CAPACITY
];

1200 *
pExtBuf
 = 
extBuf
;

1201 
öt32_t
 
extBufC≠acôy
 = (
extBuf
);

1202 c⁄° *
b˝Key
, *
b˝VÆue
;

1203 
UEº‹Code
 
tmpSètus
 = 
U_ZERO_ERROR
;

1204 
öt32_t
 
keyÀn
;

1205 
UBoﬁ
 
isLDMLKeyw‹d
;

1207 
TRUE
) {

1208 
key
 = 
	`uíum_√xt
(
keyw‹dEnum
, 
NULL
, 
°©us
);

1209 i‡(
key
 =
NULL
) {

1212 
Àn
 = 
	`uloc_gëKeyw‹dVÆue
(
loˇÀID
, 
key
, 
buf
, (buf), &
tmpSètus
);

1213 i‡(
	`U_FAILURE
(
tmpSètus
)) {

1214 i‡(
°ri˘
) {

1215 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1219 
tmpSètus
 = 
U_ZERO_ERROR
;

1223 
keyÀn
 = (
öt32_t
)
	`u¥v_°æí
(
key
);

1224 
isLDMLKeyw‹d
 = (
keyÀn
 > 1);

1226 i‡(
isLDMLKeyw‹d
) {

1227 
öt32_t
 
modKeyLí
;

1230 
modKeyLí
 = 
	`_ldmlKeyToBCP47
(
key
, 
keyÀn
, 
pExtBuf
, 
extBufC≠acôy
, &
tmpSètus
);

1231 i‡(
	`U_FAILURE
(
tmpSètus
Ë||ÅmpSètu†=
U_STRING_NOT_TERMINATED_WARNING
) {

1232 i‡(
°ri˘
) {

1233 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1236 
tmpSètus
 = 
U_ZERO_ERROR
;

1240 
b˝Key
 = 
pExtBuf
;

1241 
pExtBuf
 +(
modKeyLí
 + 1);

1242 
extBufC≠acôy
 -(
modKeyLí
 + 1);

1244 
Àn
 = 
	`_ldmlTy≥ToBCP47
(
key
, 
keyÀn
, 
buf
,Üí, 
pExtBuf
, 
extBufC≠acôy
, &
tmpSètus
);

1245 i‡(
	`U_FAILURE
(
tmpSètus
Ë||ÅmpSètu†=
U_STRING_NOT_TERMINATED_WARNING
) {

1246 i‡(
°ri˘
) {

1247 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1250 
tmpSètus
 = 
U_ZERO_ERROR
;

1253 
b˝VÆue
 = 
pExtBuf
;

1254 
pExtBuf
 +(
Àn
 + 1);

1255 
extBufC≠acôy
 -(
Àn
 + 1);

1257 i‡(*
key
 =
PRIVATEUSE
) {

1258 i‡(!
	`_isPriv©eu£VÆueSubègs
(
buf
, 
Àn
)) {

1259 i‡(
°ri˘
) {

1260 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1266 i‡(!
	`_isExãnsi⁄SögÀt⁄
(
key
, 
keyÀn
Ë|| !
	`_isExãnsi⁄Subègs
(
buf
, 
Àn
)) {

1267 i‡(
°ri˘
) {

1268 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1274 
b˝Key
 = 
key
;

1275 i‡((
Àn
 + 1Ë< 
extBufC≠acôy
) {

1276 
	`u¥v_mem˝y
(
pExtBuf
, 
buf
, 
Àn
);

1277 
b˝VÆue
 = 
pExtBuf
;

1279 
pExtBuf
 +
Àn
;

1281 *
pExtBuf
 = 0;

1282 
pExtBuf
++;

1284 
extBufC≠acôy
 -(
Àn
 + 1);

1286 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1292 
ext
 = 
	`u¥v_mÆloc
((
Exãnsi⁄Li°E¡ry
));

1293 i‡(
ext
 =
NULL
) {

1294 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

1297 
ext
->
key
 = 
b˝Key
;

1298 
ext
->
vÆue
 = 
b˝VÆue
;

1300 i‡(!
	`_addExãnsi⁄ToLi°
(&
fú°Ext
, 
ext
, 
TRUE
)) {

1301 
	`u¥v_‰ì
(
ext
);

1302 i‡(
°ri˘
) {

1303 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1310 i‡(
hadPosix
) {

1312 
ext
 = 
	`u¥v_mÆloc
((
Exãnsi⁄Li°E¡ry
));

1313 i‡(
ext
 =
NULL
) {

1314 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

1316 
ext
->
key
 = 
POSIX_KEY
;

1317 
ext
->
vÆue
 = 
POSIX_VALUE
;

1319 i‡(!
	`_addExãnsi⁄ToLi°
(&
fú°Ext
, 
ext
, 
TRUE
)) {

1320 
	`u¥v_‰ì
(
ext
);

1324 i‡(
	`U_SUCCESS
(*
°©us
Ë&& (
fú°Ext
 !
NULL
)) {

1325 
UBoﬁ
 
°¨tLDMLExãnsi⁄
 = 
FALSE
;

1328 
ext
 = 
fú°Ext
;

1329 
ext
 !
NULL
) {

1330 i‡((
öt32_t
)
	`u¥v_°æí
(
ext
->
key
Ë> 1 && !
°¨tLDMLExãnsi⁄
) {

1332 i‡(
ª¶í
 < 
ˇ∑côy
) {

1333 *(
≠≥ndAt
 + 
ª¶í
Ë
SEP
;

1335 
ª¶í
++;

1336 i‡(
ª¶í
 < 
ˇ∑côy
) {

1337 *(
≠≥ndAt
 + 
ª¶í
Ë
LDMLEXT
;

1339 
ª¶í
++;

1340 
°¨tLDMLExãnsi⁄
 = 
TRUE
;

1343 i‡(
ª¶í
 < 
ˇ∑côy
) {

1344 *(
≠≥ndAt
 + 
ª¶í
Ë
SEP
;

1346 
ª¶í
++;

1347 
Àn
 = (
öt32_t
)
	`u¥v_°æí
(
ext
->
key
);

1348 i‡(
ª¶í
 < 
ˇ∑côy
) {

1349 
	`u¥v_mem˝y
(
≠≥ndAt
 + 
ª¶í
, 
ext
->
key
, 
	`u¥v_mö
(
Àn
, 
ˇ∑côy
 -Ñeslen));

1351 
ª¶í
 +
Àn
;

1352 i‡(
ª¶í
 < 
ˇ∑côy
) {

1353 *(
≠≥ndAt
 + 
ª¶í
Ë
SEP
;

1355 
ª¶í
++;

1356 
Àn
 = (
öt32_t
)
	`u¥v_°æí
(
ext
->
vÆue
);

1357 i‡(
ª¶í
 < 
ˇ∑côy
) {

1358 
	`u¥v_mem˝y
(
≠≥ndAt
 + 
ª¶í
, 
ext
->
vÆue
, 
	`u¥v_mö
(
Àn
, 
ˇ∑côy
 -Ñeslen));

1360 
ª¶í
 +
Àn
;

1362 
ext
 =Éxt->
√xt
;

1366 
ext
 = 
fú°Ext
;

1367 
ext
 !
NULL
) {

1368 
Exãnsi⁄Li°E¡ry
 *
tmpExt
 = 
ext
->
√xt
;

1369 
	`u¥v_‰ì
(
ext
);

1370 
ext
 = 
tmpExt
;

1373 
	`uíum_˛o£
(
keyw‹dEnum
);

1375 i‡(
	`U_FAILURE
(*
°©us
)) {

1380  
	`u_ãrmö©eCh¨s
(
≠≥ndAt
, 
ˇ∑côy
, 
ª¶í
, 
°©us
);

1381 
	}
}

1389 
	$_≠≥ndLDMLExãnsi⁄AsKeyw‹ds
(c⁄° * 
ldmÀxt
, 
Exãnsi⁄Li°E¡ry
** 
≠≥ndTo
, * 
buf
, 
öt32_t
 
bufSize
, 
UBoﬁ
 *
posixV¨ü¡
, 
UEº‹Code
 *
°©us
) {

1390 c⁄° *
p
, *
pNext
, *
pSï
;

1391 c⁄° *
pB˝Key
, *
pB˝Ty≥
;

1392 c⁄° *
pKey
, *
pTy≥
;

1393 
öt32_t
 
b˝KeyLí
 = 0, 
b˝Ty≥Lí
;

1394 
Exãnsi⁄Li°E¡ry
 *
kwd
, *
√xtKwd
;

1395 
Exãnsi⁄Li°E¡ry
 *
kwdFú°
 = 
NULL
;

1396 
öt32_t
 
bufIdx
 = 0;

1397 
öt32_t
 
Àn
;

1399 
pNext
 = 
ldmÀxt
;

1400 
pB˝Key
 = 
pB˝Ty≥
 = 
NULL
;

1401 
pNext
) {

1402 
p
 = 
pSï
 = 
pNext
;

1405 *
pSï
) {

1406 i‡(*
pSï
 =
SEP
) {

1409 
pSï
++;

1411 i‡(*
pSï
 == 0) {

1413 
pNext
 = 
NULL
;

1415 
pNext
 = 
pSï
 + 1;

1418 i‡(
pB˝Key
 =
NULL
) {

1419 
pB˝Key
 = 
p
;

1420 
b˝KeyLí
 = (
öt32_t
)(
pSï
 - 
p
);

1422 
pB˝Ty≥
 = 
p
;

1423 
b˝Ty≥Lí
 = (
öt32_t
)(
pSï
 - 
p
);

1426 
Àn
 = 
	`_b˝47ToLDMLKey
(
pB˝Key
, 
b˝KeyLí
, 
buf
 + 
bufIdx
, 
bufSize
 - bufIdx - 1, 
°©us
);

1427 i‡(
	`U_FAILURE
(*
°©us
)) {

1428 
˛ónup
;

1430 
pKey
 = 
buf
 + 
bufIdx
;

1431 
bufIdx
 +
Àn
;

1432 *(
buf
 + 
bufIdx
) = 0;

1433 
bufIdx
++;

1436 
Àn
 = 
	`_b˝47ToLDMLTy≥
(
pKey
, -1, 
pB˝Ty≥
, 
b˝Ty≥Lí
, 
buf
 + 
bufIdx
, 
bufSize
 - bufIdx - 1, 
°©us
);

1437 i‡(
	`U_FAILURE
(*
°©us
)) {

1438 
˛ónup
;

1440 
pTy≥
 = 
buf
 + 
bufIdx
;

1441 
bufIdx
 +
Àn
;

1442 *(
buf
 + 
bufIdx
) = 0;

1443 
bufIdx
++;

1448 i‡–!
	`u¥v_°rcmp
(
pKey
,
POSIX_KEY
Ë&& !u¥v_°rcmp(
pTy≥
,
POSIX_VALUE
) ) {

1449 *
posixV¨ü¡
 = 
TRUE
;

1452 
kwd
 = 
	`u¥v_mÆloc
((
Exãnsi⁄Li°E¡ry
));

1453 i‡(
kwd
 =
NULL
) {

1454 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

1455 
˛ónup
;

1458 
kwd
->
key
 = 
pKey
;

1459 
kwd
->
vÆue
 = 
pTy≥
;

1461 i‡(!
	`_addExãnsi⁄ToLi°
(&
kwdFú°
, 
kwd
, 
FALSE
)) {

1462 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1463 
	`u¥v_‰ì
(
kwd
);

1464 
˛ónup
;

1469 
pB˝Key
 = 
NULL
;

1470 
pB˝Ty≥
 = 
NULL
;

1474 i‡(
pB˝Key
 !
NULL
) {

1475 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1476 
˛ónup
;

1479 
kwd
 = 
kwdFú°
;

1480 
kwd
 !
NULL
) {

1481 
√xtKwd
 = 
kwd
->
√xt
;

1482 
	`_addExãnsi⁄ToLi°
(
≠≥ndTo
, 
kwd
, 
FALSE
);

1483 
kwd
 = 
√xtKwd
;

1488 
˛ónup
:

1489 
kwd
 = 
kwdFú°
;

1490 
kwd
 !
NULL
) {

1491 
√xtKwd
 = 
kwd
->
√xt
;

1492 
	`u¥v_‰ì
(
kwd
);

1493 
kwd
 = 
√xtKwd
;

1495 
	}
}

1498 
öt32_t


1499 
	$_≠≥ndKeyw‹ds
(
UL™guageTag
* 
œngèg
, * 
≠≥ndAt
, 
öt32_t
 
ˇ∑côy
, 
UEº‹Code
* 
°©us
) {

1500 
öt32_t
 
ª¶í
 = 0;

1501 
öt32_t
 
i
, 
n
;

1502 
öt32_t
 
Àn
;

1503 
Exãnsi⁄Li°E¡ry
 *
kwdFú°
 = 
NULL
;

1504 
Exãnsi⁄Li°E¡ry
 *
kwd
;

1505 c⁄° *
key
, *
ty≥
;

1506 
kwdBuf
[
ULOC_KEYWORDS_CAPACITY
];

1507 
UBoﬁ
 
posixV¨ü¡
 = 
FALSE
;

1509 i‡(
	`U_FAILURE
(*
°©us
)) {

1513 
n
 = 
	`u…ag_gëExãnsi⁄sSize
(
œngèg
);

1516 
i
 = 0; i < 
n
; i++) {

1517 
key
 = 
	`u…ag_gëExãnsi⁄Key
(
œngèg
, 
i
);

1518 
ty≥
 = 
	`u…ag_gëExãnsi⁄VÆue
(
œngèg
, 
i
);

1519 i‡(*
key
 =
LDMLEXT
) {

1520 
	`_≠≥ndLDMLExãnsi⁄AsKeyw‹ds
(
ty≥
, &
kwdFú°
, 
kwdBuf
, (kwdBuf), &
posixV¨ü¡
, 
°©us
);

1521 i‡(
	`U_FAILURE
(*
°©us
)) {

1525 
kwd
 = 
	`u¥v_mÆloc
((
Exãnsi⁄Li°E¡ry
));

1526 i‡(
kwd
 =
NULL
) {

1527 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

1530 
kwd
->
key
 = key;

1531 
kwd
->
vÆue
 = 
ty≥
;

1532 i‡(!
	`_addExãnsi⁄ToLi°
(&
kwdFú°
, 
kwd
, 
FALSE
)) {

1533 
	`u¥v_‰ì
(
kwd
);

1534 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1540 i‡(
	`U_SUCCESS
(*
°©us
)) {

1541 
ty≥
 = 
	`u…ag_gëPriv©eU£
(
œngèg
);

1542 i‡((
öt32_t
)
	`u¥v_°æí
(
ty≥
) > 0) {

1544 
kwd
 = 
	`u¥v_mÆloc
((
Exãnsi⁄Li°E¡ry
));

1545 i‡(
kwd
 =
NULL
) {

1546 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

1548 
kwd
->
key
 = 
PRIVATEUSE_KEY
;

1549 
kwd
->
vÆue
 = 
ty≥
;

1550 i‡(!
	`_addExãnsi⁄ToLi°
(&
kwdFú°
, 
kwd
, 
FALSE
)) {

1551 
	`u¥v_‰ì
(
kwd
);

1552 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1560 i‡(
	`U_SUCCESS
(*
°©us
Ë&& 
posixV¨ü¡
) {

1561 
Àn
 = (
öt32_t
Ë
	`u¥v_°æí
(
_POSIX
);

1562 i‡(
ª¶í
 < 
ˇ∑côy
) {

1563 
	`u¥v_mem˝y
(
≠≥ndAt
 + 
ª¶í
, 
_POSIX
, 
	`u¥v_mö
(
Àn
, 
ˇ∑côy
 -Ñeslen));

1565 
ª¶í
 +
Àn
;

1568 i‡(
	`U_SUCCESS
(*
°©us
Ë&& 
kwdFú°
 !
NULL
) {

1570 
kwd
 = 
kwdFú°
;

1571 
kwd
 !
NULL
) {

1572 i‡(
ª¶í
 < 
ˇ∑côy
) {

1573 i‡(
kwd
 =
kwdFú°
) {

1575 *(
≠≥ndAt
 + 
ª¶í
Ë
LOCALE_EXT_SEP
;

1578 *(
≠≥ndAt
 + 
ª¶í
Ë
LOCALE_KEYWORD_SEP
;

1581 
ª¶í
++;

1584 
Àn
 = (
öt32_t
)
	`u¥v_°æí
(
kwd
->
key
);

1585 i‡(
ª¶í
 < 
ˇ∑côy
) {

1586 
	`u¥v_mem˝y
(
≠≥ndAt
 + 
ª¶í
, 
kwd
->
key
, 
	`u¥v_mö
(
Àn
, 
ˇ∑côy
 -Ñeslen));

1588 
ª¶í
 +
Àn
;

1591 i‡(
ª¶í
 < 
ˇ∑côy
) {

1592 *(
≠≥ndAt
 + 
ª¶í
Ë
LOCALE_KEY_TYPE_SEP
;

1594 
ª¶í
++;

1597 
Àn
 = (
öt32_t
)
	`u¥v_°æí
(
kwd
->
vÆue
);

1598 i‡(
ª¶í
 < 
ˇ∑côy
) {

1599 
	`u¥v_mem˝y
(
≠≥ndAt
 + 
ª¶í
, 
kwd
->
vÆue
, 
	`u¥v_mö
(
Àn
, 
ˇ∑côy
 -Ñeslen));

1601 
ª¶í
 +
Àn
;

1603 
kwd
 = kwd->
√xt
;

1608 
kwd
 = 
kwdFú°
;

1609 
kwd
 !
NULL
) {

1610 
Exãnsi⁄Li°E¡ry
 *
tmpKwd
 = 
kwd
->
√xt
;

1611 
	`u¥v_‰ì
(
kwd
);

1612 
kwd
 = 
tmpKwd
;

1615 i‡(
	`U_FAILURE
(*
°©us
)) {

1619  
	`u_ãrmö©eCh¨s
(
≠≥ndAt
, 
ˇ∑côy
, 
ª¶í
, 
°©us
);

1620 
	}
}

1631 
	#LANG
 0x0001

	)

1632 
	#EXTL
 0x0002

	)

1633 
	#SCRT
 0x0004

	)

1634 
	#REGN
 0x0008

	)

1635 
	#VART
 0x0010

	)

1636 
	#EXTS
 0x0020

	)

1637 
	#EXTV
 0x0040

	)

1638 
	#PRIV
 0x0080

	)

1640 
UL™guageTag
*

1641 
	$u…ag_∑r£
(c⁄° * 
èg
, 
öt32_t
 
ègLí
, i¡32_t* 
∑r£dLí
, 
UEº‹Code
* 
°©us
) {

1642 
UL™guageTag
 *
t
;

1643 *
ègBuf
;

1644 
öt16_t
 
√xt
;

1645 *
pSubèg
, *
pNext
, *
pLa°GoodPosôi⁄
;

1646 
öt32_t
 
subègLí
;

1647 
öt32_t
 
exé™gIdx
;

1648 
Exãnsi⁄Li°E¡ry
 *
pExãnsi⁄
;

1649 *
pExtVÆueSubèg
, *
pExtVÆueSubègEnd
;

1650 
öt32_t
 
i
;

1651 
UBoﬁ
 
isLDMLExãnsi⁄
, 
ªqLDMLTy≥
;

1653 i‡(
∑r£dLí
 !
NULL
) {

1654 *
∑r£dLí
 = 0;

1657 i‡(
	`U_FAILURE
(*
°©us
)) {

1658  
NULL
;

1661 i‡(
ègLí
 < 0) {

1662 
ègLí
 = (
öt32_t
)
	`u¥v_°æí
(
èg
);

1666 
ègBuf
 = (*)
	`u¥v_mÆloc
(
ègLí
 + 1);

1667 i‡(
ègBuf
 =
NULL
) {

1668 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

1669  
NULL
;

1671 
	`u¥v_mem˝y
(
ègBuf
, 
èg
, 
ègLí
);

1672 *(
ègBuf
 + 
ègLí
) = 0;

1675 
t
 = (
UL™guageTag
*)
	`u¥v_mÆloc
((ULanguageTag));

1676 
	`_öôülizeUL™guageTag
(
t
);

1677 
t
->
buf
 = 
ègBuf
;

1678 i‡(
t
 =
NULL
) {

1679 
	`u¥v_‰ì
(
ègBuf
);

1680 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

1681  
NULL
;

1684 i‡(
ègLí
 < 
MINLEN
) {

1686  
t
;

1690 
i
 = 0; 
GRANDFATHERED
[i] !
NULL
; i += 2) {

1691 i‡(
	`T_CSåög_°ricmp
(
GRANDFATHERED
[
i
], 
ègBuf
) == 0) {

1693 
	`u¥v_°r˝y
(
t
->
buf
, 
GRANDFATHERED
[
i
 + 1]);

1694 
t
->
œnguage
 =Å->
buf
;

1695 i‡(
∑r£dLí
 !
NULL
) {

1696 *
∑r£dLí
 = 
ègLí
;

1698  
t
;

1711 
√xt
 = 
LANG
 | 
PRIV
;

1712 
pNext
 = 
pLa°GoodPosôi⁄
 = 
ègBuf
;

1713 
exé™gIdx
 = 0;

1714 
pExãnsi⁄
 = 
NULL
;

1715 
pExtVÆueSubèg
 = 
NULL
;

1716 
pExtVÆueSubègEnd
 = 
NULL
;

1717 
isLDMLExãnsi⁄
 = 
FALSE
;

1718 
ªqLDMLTy≥
 = 
FALSE
;

1720 
pNext
) {

1721 *
pSï
;

1723 
pSubèg
 = 
pNext
;

1726 
pSï
 = 
pSubèg
;

1727 *
pSï
) {

1728 i‡(*
pSï
 =
SEP
) {

1731 
pSï
++;

1733 i‡(*
pSï
 == 0) {

1735 
pNext
 = 
NULL
;

1737 
pNext
 = 
pSï
 + 1;

1739 
subègLí
 = (
öt32_t
)(
pSï
 - 
pSubèg
);

1741 i‡(
√xt
 & 
LANG
) {

1742 i‡(
	`_isL™guageSubèg
(
pSubèg
, 
subègLí
)) {

1743 *
pSï
 = 0;

1744 
t
->
œnguage
 = 
	`T_CSåög_toLowîCa£
(
pSubèg
);

1746 
pLa°GoodPosôi⁄
 = 
pSï
;

1747 
√xt
 = 
EXTL
 | 
SCRT
 | 
REGN
 | 
VART
 | 
EXTS
 | 
PRIV
;

1751 i‡(
√xt
 & 
EXTL
) {

1752 i‡(
	`_isExé™gSubèg
(
pSubèg
, 
subègLí
)) {

1753 *
pSï
 = 0;

1754 
t
->
exé™g
[
exé™gIdx
++] = 
	`T_CSåög_toLowîCa£
(
pSubèg
);

1756 
pLa°GoodPosôi⁄
 = 
pSï
;

1757 i‡(
exé™gIdx
 < 3) {

1758 
√xt
 = 
EXTL
 | 
SCRT
 | 
REGN
 | 
VART
 | 
EXTS
 | 
PRIV
;

1760 
√xt
 = 
SCRT
 | 
REGN
 | 
VART
 | 
EXTS
 | 
PRIV
;

1765 i‡(
√xt
 & 
SCRT
) {

1766 i‡(
	`_isS¸ùtSubèg
(
pSubèg
, 
subègLí
)) {

1767 *
p
 = 
pSubèg
;

1769 *
pSï
 = 0;

1772 *
p
 = 
	`u¥v_touµî
(*p);

1773 
p
++;

1774 ; *
p
;Ö++) {

1775 *
p
 = 
	`u¥v_tﬁowî
(*p);

1778 
t
->
s¸ùt
 = 
pSubèg
;

1780 
pLa°GoodPosôi⁄
 = 
pSï
;

1781 
√xt
 = 
REGN
 | 
VART
 | 
EXTS
 | 
PRIV
;

1785 i‡(
√xt
 & 
REGN
) {

1786 i‡(
	`_isRegi⁄Subèg
(
pSubèg
, 
subègLí
)) {

1787 *
pSï
 = 0;

1788 
t
->
ªgi⁄
 = 
	`T_CSåög_toUµîCa£
(
pSubèg
);

1790 
pLa°GoodPosôi⁄
 = 
pSï
;

1791 
√xt
 = 
VART
 | 
EXTS
 | 
PRIV
;

1795 i‡(
√xt
 & 
VART
) {

1796 i‡(
	`_isV¨ü¡Subèg
(
pSubèg
, 
subègLí
)) {

1797 
V¨ü¡Li°E¡ry
 *
v¨
;

1798 
UBoﬁ
 
isAdded
;

1800 
v¨
 = (
V¨ü¡Li°E¡ry
*)
	`u¥v_mÆloc
((VariantListEntry));

1801 i‡(
v¨
 =
NULL
) {

1802 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

1803 
îr‹
;

1805 *
pSï
 = 0;

1806 
v¨
->
v¨ü¡
 = 
	`T_CSåög_toUµîCa£
(
pSubèg
);

1807 
isAdded
 = 
	`_addV¨ü¡ToLi°
(&(
t
->
v¨ü¡s
), 
v¨
);

1808 i‡(!
isAdded
) {

1810 
	`u¥v_‰ì
(
v¨
);

1813 
pLa°GoodPosôi⁄
 = 
pSï
;

1814 
√xt
 = 
VART
 | 
EXTS
 | 
PRIV
;

1818 i‡(
√xt
 & 
EXTS
) {

1819 i‡(
	`_isExãnsi⁄SögÀt⁄
(
pSubèg
, 
subègLí
)) {

1820 i‡(
pExãnsi⁄
 !
NULL
) {

1821 i‡(
pExtVÆueSubèg
 =
NULL
 || 
pExtVÆueSubègEnd
 == NULL) {

1823 
	`u¥v_‰ì
(
pExãnsi⁄
);

1824 
pExãnsi⁄
 = 
NULL
;

1829 *
pExtVÆueSubègEnd
 = 0;

1830 
pExãnsi⁄
->
vÆue
 = 
	`T_CSåög_toLowîCa£
(
pExtVÆueSubèg
);

1833 i‡(
	`_addExãnsi⁄ToLi°
(&(
t
->
exãnsi⁄s
), 
pExãnsi⁄
, 
FALSE
)) {

1834 
pLa°GoodPosôi⁄
 = 
pExtVÆueSubègEnd
;

1837 
	`u¥v_‰ì
(
pExãnsi⁄
);

1838 
pExãnsi⁄
 = 
NULL
;

1842 i‡(
isLDMLExãnsi⁄
 && 
ªqLDMLTy≥
) {

1844 
pExãnsi⁄
 = 
NULL
;

1849 
isLDMLExãnsi⁄
 = (
	`u¥v_tﬁowî
(*
pSubèg
Ë=
LDMLEXT
);

1852 
pExãnsi⁄
 = 
	`u¥v_mÆloc
((
Exãnsi⁄Li°E¡ry
));

1853 i‡(
pExãnsi⁄
 =
NULL
) {

1854 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

1855 
îr‹
;

1857 *
pSï
 = 0;

1858 
pExãnsi⁄
->
key
 = 
	`T_CSåög_toLowîCa£
(
pSubèg
);

1859 
pExãnsi⁄
->
vÆue
 = 
NULL
;

1865 
pExtVÆueSubèg
 = 
NULL
;

1866 
pExtVÆueSubègEnd
 = 
NULL
;

1868 
√xt
 = 
EXTV
;

1872 i‡(
√xt
 & 
EXTV
) {

1873 i‡(
	`_isExãnsi⁄Subèg
(
pSubèg
, 
subègLí
)) {

1874 i‡(
isLDMLExãnsi⁄
) {

1875 i‡(
ªqLDMLTy≥
) {

1877 i‡(!
	`_isLDMLTy≥
(
pSubèg
, 
subègLí
)) {

1882 
pExtVÆueSubègEnd
 = 
pSï
;

1883 
ªqLDMLTy≥
 = 
FALSE
;

1884 
√xt
 = 
EXTS
 | 
EXTV
 | 
PRIV
;

1887 i‡(!
	`_isLDMLKey
(
pSubèg
, 
subègLí
)) {

1892 
ªqLDMLTy≥
 = 
TRUE
;

1893 
√xt
 = 
EXTV
;

1897 
pExtVÆueSubègEnd
 = 
pSï
;

1898 
√xt
 = 
EXTS
 | 
EXTV
 | 
PRIV
;

1901 i‡(
pExtVÆueSubèg
 =
NULL
) {

1904 
pExtVÆueSubèg
 = 
pSubèg
;

1909 i‡(
√xt
 & 
PRIV
) {

1910 i‡(
	`u¥v_tﬁowî
(*
pSubèg
Ë=
PRIVATEUSE
) {

1911 *
pPrivu£VÆ
;

1913 i‡(
pExãnsi⁄
 !
NULL
) {

1915 i‡(
pExtVÆueSubèg
 =
NULL
 || 
pExtVÆueSubègEnd
 == NULL) {

1917 
	`u¥v_‰ì
(
pExãnsi⁄
);

1918 
pExãnsi⁄
 = 
NULL
;

1922 *
pExtVÆueSubègEnd
 = 0;

1923 
pExãnsi⁄
->
vÆue
 = 
	`T_CSåög_toLowîCa£
(
pExtVÆueSubèg
);

1926 i‡(
	`_addExãnsi⁄ToLi°
(&(
t
->
exãnsi⁄s
), 
pExãnsi⁄
, 
FALSE
)) {

1927 
pLa°GoodPosôi⁄
 = 
pExtVÆueSubègEnd
;

1928 
pExãnsi⁄
 = 
NULL
;

1931 
	`u¥v_‰ì
(
pExãnsi⁄
);

1932 
pExãnsi⁄
 = 
NULL
;

1939 i‡(
pNext
 =
NULL
) {

1944 
pPrivu£VÆ
 = 
pNext
;

1947 
pNext
) {

1948 
pSubèg
 = 
pNext
;

1949 
pSï
 = 
pSubèg
;

1950 *
pSï
) {

1951 i‡(*
pSï
 =
SEP
) {

1954 
pSï
++;

1956 i‡(*
pSï
 == 0) {

1958 
pNext
 = 
NULL
;

1960 
pNext
 = 
pSï
 + 1;

1962 
subègLí
 = (
öt32_t
)(
pSï
 - 
pSubèg
);

1964 i‡(
	`_isPriv©eu£VÆueSubèg
(
pSubèg
, 
subègLí
)) {

1965 
pLa°GoodPosôi⁄
 = 
pSï
;

1970 i‡(
pLa°GoodPosôi⁄
 - 
pPrivu£VÆ
 > 0) {

1971 *
pLa°GoodPosôi⁄
 = 0;

1972 
t
->
¥iv©eu£
 = 
	`T_CSåög_toLowîCa£
(
pPrivu£VÆ
);

1983 i‡(
pExãnsi⁄
 !
NULL
) {

1985 i‡(
pExtVÆueSubèg
 =
NULL
 || 
pExtVÆueSubègEnd
 == NULL) {

1987 
	`u¥v_‰ì
(
pExãnsi⁄
);

1990 *
pExtVÆueSubègEnd
 = 0;

1991 
pExãnsi⁄
->
vÆue
 = 
	`T_CSåög_toLowîCa£
(
pExtVÆueSubèg
);

1993 i‡(
	`_addExãnsi⁄ToLi°
(&(
t
->
exãnsi⁄s
), 
pExãnsi⁄
, 
FALSE
)) {

1994 
pLa°GoodPosôi⁄
 = 
pExtVÆueSubègEnd
;

1996 
	`u¥v_‰ì
(
pExãnsi⁄
);

2001 i‡(
∑r£dLí
 !
NULL
) {

2002 *
∑r£dLí
 = (
öt32_t
)(
pLa°GoodPosôi⁄
 - 
t
->
buf
);

2005  
t
;

2007 
îr‹
:

2008 
	`u¥v_‰ì
(
t
);

2009  
NULL
;

2010 
	}
}

2013 
	$u…ag_˛o£
(
UL™guageTag
* 
œngèg
) {

2015 i‡(
œngèg
 =
NULL
) {

2019 
	`u¥v_‰ì
(
œngèg
->
buf
);

2021 i‡(
œngèg
->
v¨ü¡s
) {

2022 
V¨ü¡Li°E¡ry
 *
curV¨
 = 
œngèg
->
v¨ü¡s
;

2023 
curV¨
) {

2024 
V¨ü¡Li°E¡ry
 *
√xtV¨
 = 
curV¨
->
√xt
;

2025 
	`u¥v_‰ì
(
curV¨
);

2026 
curV¨
 = 
√xtV¨
;

2030 i‡(
œngèg
->
exãnsi⁄s
) {

2031 
Exãnsi⁄Li°E¡ry
 *
curExt
 = 
œngèg
->
exãnsi⁄s
;

2032 
curExt
) {

2033 
Exãnsi⁄Li°E¡ry
 *
√xtExt
 = 
curExt
->
√xt
;

2034 
	`u¥v_‰ì
(
curExt
);

2035 
curExt
 = 
√xtExt
;

2039 
	`u¥v_‰ì
(
œngèg
);

2040 
	}
}

2043 
	$u…ag_gëL™guage
(c⁄° 
UL™guageTag
* 
œngèg
) {

2044  
œngèg
->
œnguage
;

2045 
	}
}

2049 
	$u…ag_gëJDKL™guage
(c⁄° 
UL™guageTag
* 
œngèg
) {

2050 
öt32_t
 
i
;

2051 
i
 = 0; 
DEPRECATEDLANGS
[i] !
NULL
; i += 2) {

2052 i‡(
	`u¥v_com∑ªInvCh¨sAsAscii
(
DEPRECATEDLANGS
[
i
], 
œngèg
->
œnguage
) == 0) {

2053  
DEPRECATEDLANGS
[
i
 + 1];

2056  
œngèg
->
œnguage
;

2057 
	}
}

2061 
	$u…ag_gëExé™g
(c⁄° 
UL™guageTag
* 
œngèg
, 
öt32_t
 
idx
) {

2062 i‡(
idx
 >0 && idx < 
MAXEXTLANG
) {

2063  
œngèg
->
exé™g
[
idx
];

2065  
NULL
;

2066 
	}
}

2068 
öt32_t


2069 
	$u…ag_gëExé™gSize
(c⁄° 
UL™guageTag
* 
œngèg
) {

2070 
öt32_t
 
size
 = 0;

2071 
öt32_t
 
i
;

2072 
i
 = 0; i < 
MAXEXTLANG
; i++) {

2073 i‡(
œngèg
->
exé™g
[
i
]) {

2074 
size
++;

2077  
size
;

2078 
	}
}

2081 
	$u…ag_gëS¸ùt
(c⁄° 
UL™guageTag
* 
œngèg
) {

2082  
œngèg
->
s¸ùt
;

2083 
	}
}

2086 
	$u…ag_gëRegi⁄
(c⁄° 
UL™guageTag
* 
œngèg
) {

2087  
œngèg
->
ªgi⁄
;

2088 
	}
}

2091 
	$u…ag_gëV¨ü¡
(c⁄° 
UL™guageTag
* 
œngèg
, 
öt32_t
 
idx
) {

2092 c⁄° *
v¨
 = 
NULL
;

2093 
V¨ü¡Li°E¡ry
 *
cur
 = 
œngèg
->
v¨ü¡s
;

2094 
öt32_t
 
i
 = 0;

2095 
cur
) {

2096 i‡(
i
 =
idx
) {

2097 
v¨
 = 
cur
->
v¨ü¡
;

2100 
cur
 = cur->
√xt
;

2101 
i
++;

2103  
v¨
;

2104 
	}
}

2106 
öt32_t


2107 
	$u…ag_gëV¨ü¡sSize
(c⁄° 
UL™guageTag
* 
œngèg
) {

2108 
öt32_t
 
size
 = 0;

2109 
V¨ü¡Li°E¡ry
 *
cur
 = 
œngèg
->
v¨ü¡s
;

2110 
TRUE
) {

2111 i‡(
cur
 =
NULL
) {

2114 
size
++;

2115 
cur
 = cur->
√xt
;

2117  
size
;

2118 
	}
}

2121 
	$u…ag_gëExãnsi⁄Key
(c⁄° 
UL™guageTag
* 
œngèg
, 
öt32_t
 
idx
) {

2122 c⁄° *
key
 = 
NULL
;

2123 
Exãnsi⁄Li°E¡ry
 *
cur
 = 
œngèg
->
exãnsi⁄s
;

2124 
öt32_t
 
i
 = 0;

2125 
cur
) {

2126 i‡(
i
 =
idx
) {

2127 
key
 = 
cur
->key;

2130 
cur
 = cur->
√xt
;

2131 
i
++;

2133  
key
;

2134 
	}
}

2137 
	$u…ag_gëExãnsi⁄VÆue
(c⁄° 
UL™guageTag
* 
œngèg
, 
öt32_t
 
idx
) {

2138 c⁄° *
vÆ
 = 
NULL
;

2139 
Exãnsi⁄Li°E¡ry
 *
cur
 = 
œngèg
->
exãnsi⁄s
;

2140 
öt32_t
 
i
 = 0;

2141 
cur
) {

2142 i‡(
i
 =
idx
) {

2143 
vÆ
 = 
cur
->
vÆue
;

2146 
cur
 = cur->
√xt
;

2147 
i
++;

2149  
vÆ
;

2150 
	}
}

2152 
öt32_t


2153 
	$u…ag_gëExãnsi⁄sSize
(c⁄° 
UL™guageTag
* 
œngèg
) {

2154 
öt32_t
 
size
 = 0;

2155 
Exãnsi⁄Li°E¡ry
 *
cur
 = 
œngèg
->
exãnsi⁄s
;

2156 
TRUE
) {

2157 i‡(
cur
 =
NULL
) {

2160 
size
++;

2161 
cur
 = cur->
√xt
;

2163  
size
;

2164 
	}
}

2167 
	$u…ag_gëPriv©eU£
(c⁄° 
UL™guageTag
* 
œngèg
) {

2168  
œngèg
->
¥iv©eu£
;

2169 
	}
}

2173 
	$u…ag_gëGøndÁthîed
(c⁄° 
UL™guageTag
* 
œngèg
) {

2174  
œngèg
->
gøndÁthîed
;

2175 
	}
}

2186 
U_DRAFT
 
öt32_t
 
U_EXPORT2


2187 
	$uloc_toL™guageTag
(c⁄° * 
loˇÀID
,

2188 * 
œngèg
,

2189 
öt32_t
 
œngègC≠acôy
,

2190 
UBoﬁ
 
°ri˘
,

2191 
UEº‹Code
* 
°©us
) {

2193 
ˇn⁄iˇl
[256];

2194 
öt32_t
 
ª¶í
 = 0;

2195 
UEº‹Code
 
tmpSètus
 = 
U_ZERO_ERROR
;

2196 
UBoﬁ
 
hadPosix
 = 
FALSE
;

2199 
ˇn⁄iˇl
[0] = 0;

2200 i‡(
	`u¥v_°æí
(
loˇÀID
) > 0) {

2201 
	`uloc_ˇn⁄iˇlize
(
loˇÀID
, 
ˇn⁄iˇl
, (ˇn⁄iˇl), &
tmpSètus
);

2202 i‡(
tmpSètus
 !
U_ZERO_ERROR
) {

2203 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

2208 
ª¶í
 +
	`_≠≥ndL™guageToL™guageTag
(
ˇn⁄iˇl
, 
œngèg
, 
œngègC≠acôy
, 
°ri˘
, 
°©us
);

2209 
ª¶í
 +
	`_≠≥ndS¸ùtToL™guageTag
(
ˇn⁄iˇl
, 
œngèg
 +Ñe¶í, 
œngègC≠acôy
 -Ñe¶í, 
°ri˘
, 
°©us
);

2210 
ª¶í
 +
	`_≠≥ndRegi⁄ToL™guageTag
(
ˇn⁄iˇl
, 
œngèg
 +Ñe¶í, 
œngègC≠acôy
 -Ñe¶í, 
°ri˘
, 
°©us
);

2211 
ª¶í
 +
	`_≠≥ndV¨ü¡sToL™guageTag
(
ˇn⁄iˇl
, 
œngèg
 +Ñe¶í, 
œngègC≠acôy
 -Ñe¶í, 
°ri˘
, &
hadPosix
, 
°©us
);

2212 
ª¶í
 +
	`_≠≥ndKeyw‹dsToL™guageTag
(
ˇn⁄iˇl
, 
œngèg
 +Ñe¶í, 
œngègC≠acôy
 -Ñe¶í, 
°ri˘
, 
hadPosix
, 
°©us
);

2214  
ª¶í
;

2215 
	}
}

2218 
U_DRAFT
 
öt32_t
 
U_EXPORT2


2219 
	$uloc_f‹L™guageTag
(c⁄° * 
œngèg
,

2220 * 
loˇÀID
,

2221 
öt32_t
 
loˇÀIDC≠acôy
,

2222 
öt32_t
* 
∑r£dLígth
,

2223 
UEº‹Code
* 
°©us
) {

2224 
UL™guageTag
 *
…
;

2225 
öt32_t
 
ª¶í
 = 0;

2226 c⁄° *
subèg
, *
p
;

2227 
öt32_t
 
Àn
;

2228 
öt32_t
 
i
, 
n
;

2229 
UBoﬁ
 
noRegi⁄
 = 
TRUE
;

2231 
…
 = 
	`u…ag_∑r£
(
œngèg
, -1, 
∑r£dLígth
, 
°©us
);

2232 i‡(
	`U_FAILURE
(*
°©us
)) {

2237 
subèg
 = 
	`u…ag_gëExé™gSize
(
…
Ë> 0 ? 
	`u…ag_gëExé™g
÷t, 0Ë: 
	`u…ag_gëL™guage
(lt);

2238 i‡(
	`u¥v_com∑ªInvCh¨sAsAscii
(
subèg
, 
LANG_UND
) != 0) {

2239 
Àn
 = (
öt32_t
)
	`u¥v_°æí
(
subèg
);

2240 i‡(
Àn
 > 0) {

2241 i‡(
ª¶í
 < 
loˇÀIDC≠acôy
) {

2242 
	`u¥v_mem˝y
(
loˇÀID
, 
subèg
, 
	`u¥v_mö
(
Àn
, 
loˇÀIDC≠acôy
 - 
ª¶í
));

2244 
ª¶í
 +
Àn
;

2249 
subèg
 = 
	`u…ag_gëS¸ùt
(
…
);

2250 
Àn
 = (
öt32_t
)
	`u¥v_°æí
(
subèg
);

2251 i‡(
Àn
 > 0) {

2252 i‡(
ª¶í
 < 
loˇÀIDC≠acôy
) {

2253 *(
loˇÀID
 + 
ª¶í
Ë
LOCALE_SEP
;

2255 
ª¶í
++;

2258 
p
 = 
subèg
;

2259 *
p
) {

2260 i‡(
ª¶í
 < 
loˇÀIDC≠acôy
) {

2261 i‡(
p
 =
subèg
) {

2262 *(
loˇÀID
 + 
ª¶í
Ë
	`u¥v_touµî
(*
p
);

2264 *(
loˇÀID
 + 
ª¶í
Ë*
p
;

2267 
ª¶í
++;

2268 
p
++;

2273 
subèg
 = 
	`u…ag_gëRegi⁄
(
…
);

2274 
Àn
 = (
öt32_t
)
	`u¥v_°æí
(
subèg
);

2275 i‡(
Àn
 > 0) {

2276 i‡(
ª¶í
 < 
loˇÀIDC≠acôy
) {

2277 *(
loˇÀID
 + 
ª¶í
Ë
LOCALE_SEP
;

2279 
ª¶í
++;

2281 
p
 = 
subèg
;

2282 *
p
) {

2283 i‡(
ª¶í
 < 
loˇÀIDC≠acôy
) {

2284 *(
loˇÀID
 + 
ª¶í
Ë
	`u¥v_touµî
(*
p
);

2286 
ª¶í
++;

2287 
p
++;

2289 
noRegi⁄
 = 
FALSE
;

2293 
n
 = 
	`u…ag_gëV¨ü¡sSize
(
…
);

2294 i‡(
n
 > 0) {

2295 i‡(
noRegi⁄
) {

2296 i‡(
ª¶í
 < 
loˇÀIDC≠acôy
) {

2297 *(
loˇÀID
 + 
ª¶í
Ë
LOCALE_SEP
;

2299 
ª¶í
++;

2302 
i
 = 0; i < 
n
; i++) {

2303 
subèg
 = 
	`u…ag_gëV¨ü¡
(
…
, 
i
);

2304 i‡(
ª¶í
 < 
loˇÀIDC≠acôy
) {

2305 *(
loˇÀID
 + 
ª¶í
Ë
LOCALE_SEP
;

2307 
ª¶í
++;

2309 
p
 = 
subèg
;

2310 *
p
) {

2311 i‡(
ª¶í
 < 
loˇÀIDC≠acôy
) {

2312 *(
loˇÀID
 + 
ª¶í
Ë
	`u¥v_touµî
(*
p
);

2314 
ª¶í
++;

2315 
p
++;

2321 
n
 = 
	`u…ag_gëExãnsi⁄sSize
(
…
);

2322 
subèg
 = 
	`u…ag_gëPriv©eU£
(
…
);

2323 i‡(
n
 > 0 || 
	`u¥v_°æí
(
subèg
) > 0) {

2324 i‡(
ª¶í
 == 0) {

2326 i‡(
ª¶í
 < 
loˇÀIDC≠acôy
) {

2327 
	`u¥v_mem˝y
(
loˇÀID
 + 
ª¶í
, 
LANG_UND
, 
	`u¥v_mö
(
LANG_UND_LEN
, 
loˇÀIDC≠acôy
 -Ñeslen));

2329 
ª¶í
 +
LANG_UND_LEN
;

2331 
Àn
 = 
	`_≠≥ndKeyw‹ds
(
…
, 
loˇÀID
 + 
ª¶í
, 
loˇÀIDC≠acôy
 -Ñe¶í, 
°©us
);

2332 
ª¶í
 +
Àn
;

2335 
	`u…ag_˛o£
(
…
);

2336  
	`u_ãrmö©eCh¨s
(
loˇÀID
, 
loˇÀIDC≠acôy
, 
ª¶í
, 
°©us
);

2337 
	}
}

	@ulocimp.h

8 #i‚de‡
ULOCIMP_H


9 
	#ULOCIMP_H


	)

11 
	~"unicode/uloc.h
"

21 
U_CAPI
 
UEnumî©i⁄
* 
U_EXPORT2


22 
uloc_›íKeyw‹dLi°
(c⁄° *
keyw‹dLi°
, 
öt32_t
 
keyw‹dLi°Size
, 
UEº‹Code
* 
°©us
);

28 
U_CAPI
 c⁄° 
UCh¨
 * 
U_EXPORT2


29 
uloc_gëTabÀSåögWôhFÆlback
(

30 c⁄° *
∑th
,

31 c⁄° *
loˇÀ
,

32 c⁄° *
èbÀKey
,

33 c⁄° *
subTabÀKey
,

34 c⁄° *
ôemKey
,

35 
öt32_t
 *
pLígth
,

36 
UEº‹Code
 *
pEº‹Code
);

39 
	#_isIDSï¨©‹
(
a
Ë◊ ='_' ||á ='-')

	)

41 
U_CFUNC
 const *

42 
uloc_gëCuºítCou¡ryID
(c⁄° * 
ﬁdID
);

44 
U_CFUNC
 const *

45 
uloc_gëCuºítL™guageID
(c⁄° * 
ﬁdID
);

47 
U_CFUNC
 
öt32_t


48 
ulocimp_gëL™guage
(c⁄° *
loˇÀID
,

49 *
œnguage
, 
öt32_t
 
œnguageC≠acôy
,

50 c⁄° **
pEnd
);

52 
U_CFUNC
 
öt32_t


53 
ulocimp_gëS¸ùt
(c⁄° *
loˇÀID
,

54 *
s¸ùt
, 
öt32_t
 
s¸ùtC≠acôy
,

55 c⁄° **
pEnd
);

57 
U_CFUNC
 
öt32_t


58 
ulocimp_gëCou¡ry
(c⁄° *
loˇÀID
,

59 *
cou¡ry
, 
öt32_t
 
cou¡ryC≠acôy
,

60 c⁄° **
pEnd
);

62 
U_CAPI
 c⁄° * 
U_EXPORT2


63 
loˇÀ_gëKeyw‹dsSèπ
(c⁄° *
loˇÀID
);

	@umapfile.c

19 
	~"unicode/putû.h
"

20 
	~"ud©amem.h
"

21 
	~"um≠fûe.h
"

25 #i‡
MAP_IMPLEMENTATION
==
MAP_WIN32


26 
	#WIN32_LEAN_AND_MEAN


	)

27 
	#VC_EXTRALEAN


	)

28 
	#NOUSER


	)

29 
	#NOSERVICE


	)

30 
	#NOIME


	)

31 
	#NOMCX


	)

32 
	~<wödows.h
>

33 
	~"cmem‹y.h
"

35 
HANDLE
 
	tMem‹yM≠
;

37 
	#IS_MAP
(
m≠
Ë((m≠)!=
NULL
)

	)

38 #ñi‡
MAP_IMPLEMENTATION
==
MAP_POSIX
 || MAP_IMPLEMENTATION==
MAP_390DLL


39 
size_t
 
	tMem‹yM≠
;

41 
	#IS_MAP
(
m≠
Ë((m≠)!=0)

	)

43 
	~<uni°d.h
>

44 
	~<sys/mm™.h
>

45 
	~<sys/°©.h
>

46 
	~<f˙é.h
>

48 #i‚de‡
MAP_FAILED


49 
	#MAP_FAILED
 ((*)-1)

	)

52 #i‡
MAP_IMPLEMENTATION
==
MAP_390DLL


54 
	~<dŒ.h
>

55 
	~"c°rög.h
"

56 
	~"cmem‹y.h
"

57 
	~"unicode/ud©a.h
"

58 
	#LIB_PREFIX
 "lib"

	)

59 
	#LIB_SUFFIX
 ".dŒ"

	)

61 
	#U_ICUDATA_ENTRY_NAME
 "icudt" 
U_ICU_VERSION_SHORT
 
U_LIB_SUFFIX_C_NAME_STRING
 "_d©"

	)

63 #i‡
deföed
(
U_DARWIN
)

64 
	~<T¨gëC⁄dôi⁄Æs.h
>

67 #ñi‡
MAP_IMPLEMENTATION
==
MAP_STDIO


68 
	~<°dio.h
>

69 
	~"cmem‹y.h
"

71 *
	tMem‹yM≠
;

73 
	#IS_MAP
(
m≠
Ë((m≠)!=
NULL
)

	)

82 #i‡
MAP_IMPLEMENTATION
==
MAP_NONE


83 
U_CFUNC
 
UBoﬁ


84 
	$u¥v_m≠Fûe
(
UD©aMem‹y
 *
pD©a
, c⁄° *
∑th
) {

85 
	`UD©aMem‹y_öô
(
pD©a
);

86  
FALSE
;

87 
	}
}

89 
U_CFUNC
 
	$u¥v_unm≠Fûe
(
UD©aMem‹y
 *
pD©a
) {

91 
	}
}

92 #ñi‡
MAP_IMPLEMENTATION
==
MAP_WIN32


93 
U_CFUNC
 
UBoﬁ


94 
	$u¥v_m≠Fûe
(

95 
UD©aMem‹y
 *
pD©a
,

97 c⁄° *
∑th


100 
HANDLE
 
m≠
;

101 
HANDLE
 
fûe
;

102 
SECURITY_ATTRIBUTES
 
m≠pögAâribuãs
;

103 
SECURITY_ATTRIBUTES
 *
m≠pögAâribuãsPå
 = 
NULL
;

104 
SECURITY_DESCRIPTOR
 
£curôyDesc
;

106 
	`UD©aMem‹y_öô
(
pD©a
);

109 
fûe
=
	`Cª©eFûeA
(
∑th
, 
GENERIC_READ
, 
FILE_SHARE_READ
, 
NULL
,

110 
OPEN_EXISTING
,

111 
FILE_ATTRIBUTE_NORMAL
|
FILE_FLAG_RANDOM_ACCESS
, 
NULL
);

112 if(
fûe
==
INVALID_HANDLE_VALUE
) {

113  
FALSE
;

118 i‡(
	`InôülizeSecurôyDes¸ùt‹
(&
£curôyDesc
, 
SECURITY_DESCRIPTOR_REVISION
)) {

120 i‡(
	`SëSecurôyDes¸ùt‹Da˛
(&
£curôyDesc
, 
TRUE
, (
PACL
)
NULL
, 
FALSE
)) {

122 
	`u¥v_mem£t
(&
m≠pögAâribuãs
, 0, (mappingAttributes));

123 
m≠pögAâribuãs
.
nLígth
 = (mappingAttributes);

124 
m≠pögAâribuãs
.
ÕSecurôyDes¸ùt‹
 = &
£curôyDesc
;

125 
m≠pögAâribuãs
.
bInhîôH™dÀ
 = 
FALSE
;

126 
m≠pögAâribuãsPå
 = &
m≠pögAâribuãs
;

133 
m≠
=
	`Cª©eFûeM≠pög
(
fûe
, 
m≠pögAâribuãsPå
, 
PAGE_READONLY
, 0, 0, 
NULL
);

134 
	`Clo£H™dÀ
(
fûe
);

135 if(
m≠
==
NULL
) {

136  
FALSE
;

140 
pD©a
->
pHódî
=(c⁄° 
D©aHódî
 *)
	`M≠VõwOfFûe
(
m≠
, 
FILE_MAP_READ
, 0, 0, 0);

141 if(
pD©a
->
pHódî
==
NULL
) {

142 
	`Clo£H™dÀ
(
m≠
);

143  
FALSE
;

145 
pD©a
->
m≠
=map;

146  
TRUE
;

147 
	}
}

149 
U_CFUNC
 

150 
	$u¥v_unm≠Fûe
(
UD©aMem‹y
 *
pD©a
) {

151 if(
pD©a
!=
NULL
 &&ÖD©a->
m≠
!=NULL) {

152 
	`Unm≠VõwOfFûe
(
pD©a
->
pHódî
);

153 
	`Clo£H™dÀ
(
pD©a
->
m≠
);

154 
pD©a
->
pHódî
=
NULL
;

155 
pD©a
->
m≠
=
NULL
;

157 
	}
}

161 #ñi‡
MAP_IMPLEMENTATION
==
MAP_POSIX


162 
U_CFUNC
 
UBoﬁ


163 
	$u¥v_m≠Fûe
(
UD©aMem‹y
 *
pD©a
, c⁄° *
∑th
) {

164 
fd
;

165 
Àngth
;

166 
°©
 
my°©
;

167 *
d©a
;

169 
	`UD©aMem‹y_öô
(
pD©a
);

172 if(
	`°©
(
∑th
, &
my°©
)!=0 || my°©.
°_size
<=0) {

173  
FALSE
;

175 
Àngth
=
my°©
.
°_size
;

178 
fd
=
	`›í
(
∑th
, 
O_RDONLY
);

179 if(
fd
==-1) {

180  
FALSE
;

184 #i‚de‡
U_HPUX


185 
d©a
=
	`mm≠
(0, 
Àngth
, 
PROT_READ
, 
MAP_SHARED
, 
fd
, 0);

187 
d©a
=
	`mm≠
(0, 
Àngth
, 
PROT_READ
, 
MAP_PRIVATE
, 
fd
, 0);

189 
	`˛o£
(
fd
);

190 if(
d©a
==
MAP_FAILED
) {

191  
FALSE
;

194 
pD©a
->
m≠
 = (*)
d©a
 + 
Àngth
;

195 
pD©a
->
pHódî
=(c⁄° 
D©aHódî
 *)
d©a
;

196 
pD©a
->
m≠Addr
 = 
d©a
;

197 #i‡
	`deföed
(
U_DARWIN
Ë&& 
TARGET_OS_IPHONE


198 
	`posix_madvi£
(
d©a
, 
Àngth
, 
POSIX_MADV_RANDOM
);

200  
TRUE
;

201 
	}
}

203 
U_CFUNC
 

204 
	$u¥v_unm≠Fûe
(
UD©aMem‹y
 *
pD©a
) {

205 if(
pD©a
!=
NULL
 &&ÖD©a->
m≠
!=NULL) {

206 
size_t
 
d©aLí
 = (*)
pD©a
->
m≠
 - (*ÌD©a->
m≠Addr
;

207 if(
	`munm≠
(
pD©a
->
m≠Addr
, 
d©aLí
)==-1) {

209 
pD©a
->
pHódî
=
NULL
;

210 
pD©a
->
m≠
=0;

211 
pD©a
->
m≠Addr
=
NULL
;

213 
	}
}

217 #ñi‡
MAP_IMPLEMENTATION
==
MAP_STDIO


219 
öt32_t


220 
	$um≠_fsize
(
FILE
 *
f
) {

221 
öt32_t
 
ßvedPos
 = 
	`·ñl
(
f
);

222 
öt32_t
 
size
 = 0;

226 
	`f£ek
(
f
, 0, 
SEEK_END
);

227 
size
 = (
öt32_t
)
	`·ñl
(
f
);

228 
	`f£ek
(
f
, 
ßvedPos
, 
SEEK_SET
);

229  
size
;

230 
	}
}

232 
U_CFUNC
 
UBoﬁ


233 
	$u¥v_m≠Fûe
(
UD©aMem‹y
 *
pD©a
, c⁄° *
∑th
) {

234 
FILE
 *
fûe
;

235 
öt32_t
 
fûeLígth
;

236 *
p
;

238 
	`UD©aMem‹y_öô
(
pD©a
);

240 
fûe
=
	`f›í
(
∑th
, "rb");

241 if(
fûe
==
NULL
) {

242  
FALSE
;

246 
fûeLígth
=
	`um≠_fsize
(
fûe
);

247 if(
	`„º‹
(
fûe
Ë|| 
fûeLígth
<=20) {

248 
	`f˛o£
(
fûe
);

249  
FALSE
;

253 
p
=
	`u¥v_mÆloc
(
fûeLígth
);

254 if(
p
==
NULL
) {

255 
	`f˛o£
(
fûe
);

256  
FALSE
;

260 if(
fûeLígth
!=
	`‰ód
(
p
, 1, fûeLígth, 
fûe
)) {

261 
	`u¥v_‰ì
(
p
);

262 
	`f˛o£
(
fûe
);

263  
FALSE
;

266 
	`f˛o£
(
fûe
);

267 
pD©a
->
m≠
=
p
;

268 
pD©a
->
pHódî
=(c⁄° 
D©aHódî
 *)
p
;

269 
pD©a
->
m≠Addr
=
p
;

270  
TRUE
;

271 
	}
}

273 
U_CFUNC
 

274 
	$u¥v_unm≠Fûe
(
UD©aMem‹y
 *
pD©a
) {

275 if(
pD©a
!=
NULL
 &&ÖD©a->
m≠
!=NULL) {

276 
	`u¥v_‰ì
(
pD©a
->
m≠
);

277 
pD©a
->
m≠
 = 
NULL
;

278 
pD©a
->
m≠Addr
 = 
NULL
;

279 
pD©a
->
pHódî
 = 
NULL
;

281 
	}
}

284 #ñi‡
MAP_IMPLEMENTATION
==
MAP_390DLL


295 *
	$°r˝y_ªtu∫End
(*
de°
, c⁄° *
§c
)

297 (*
de°
=*
§c
)!=0) {

298 ++
de°
;

299 ++
§c
;

301  
de°
;

302 
	}
}

326 *
	$u¥v_compuãDúP©h
(c⁄° *
∑th
, *
∑thBuf„r
)

328 *
föÆSœsh
;

329 
öt32_t
 
∑thLí
;

331 
föÆSœsh
 = 0;

332 i‡(
∑th
 != 0) {

333 
föÆSœsh
 = 
	`u¥v_°ºchr
(
∑th
, 
U_FILE_SEP_CHAR
);

336 *
∑thBuf„r
 = 0;

337 i‡(
föÆSœsh
 == 0) {

340 c⁄° *
icuD©aDú
;

341 
icuD©aDú
=
	`u_gëD©aDúe˘‹y
();

342 if(
icuD©aDú
!=
NULL
 && *icuDataDir!=0) {

343  
	`°r˝y_ªtu∫End
(
∑thBuf„r
, 
icuD©aDú
);

346  
∑thBuf„r
;

352 
∑thLí
 = (
öt32_t
)(
föÆSœsh
 - 
∑th
 + 1);

353 
	`u¥v_mem˝y
(
∑thBuf„r
, 
∑th
, 
∑thLí
);

354 *(
∑thBuf„r
+
∑thLí
) = 0;

355  
∑thBuf„r
+
∑thLí
;

356 
	}
}

359 
	#DATA_TYPE
 "d©"

	)

361 
U_CFUNC
 
UBoﬁ
 
	$u¥v_m≠Fûe
(
UD©aMem‹y
 *
pD©a
, c⁄° *
∑th
) {

362 c⁄° *
öBa£«me
;

363 *
ba£«me
;

364 
∑thBuf„r
[1024];

365 c⁄° 
D©aHódî
 *
pHódî
;

366 
dŒh™dÀ
 *
h™dÀ
;

367 *
vÆ
=0;

369 
öBa£«me
=
	`u¥v_°ºchr
(
∑th
, 
U_FILE_SEP_CHAR
);

370 if(
öBa£«me
==
NULL
) {

371 
öBa£«me
 = 
∑th
;

373 
öBa£«me
++;

375 
ba£«me
=
	`u¥v_compuãDúP©h
(
∑th
, 
∑thBuf„r
);

376 if(
	`u¥v_°rcmp
(
öBa£«me
, 
U_ICUDATA_NAME
".dat") != 0) {

378 
fd
;

379 
Àngth
;

380 
°©
 
my°©
;

381 *
d©a
;

382 
	`UD©aMem‹y_öô
(
pD©a
);

385 if(
	`°©
(
∑th
, &
my°©
)!=0 || my°©.
°_size
<=0) {

386  
FALSE
;

388 
Àngth
=
my°©
.
°_size
;

391 
fd
=
	`›í
(
∑th
, 
O_RDONLY
);

392 if(
fd
==-1) {

393  
FALSE
;

397 
d©a
=
	`mm≠
(0, 
Àngth
, 
PROT_READ
, 
MAP_PRIVATE
, 
fd
, 0);

398 
	`˛o£
(
fd
);

399 if(
d©a
==
MAP_FAILED
) {

400  
FALSE
;

402 
pD©a
->
m≠
 = (*)
d©a
 + 
Àngth
;

403 
pD©a
->
pHódî
=(c⁄° 
D©aHódî
 *)
d©a
;

404 
pD©a
->
m≠Addr
 = 
d©a
;

405  
TRUE
;

408 #ifde‡
OS390BATCH


418 
	`u¥v_°r˝y
(
∑thBuf„r
, "IXMI" 
U_ICU_VERSION_SHORT
 "DA");

421 
	`u¥v_°r˝y
(
ba£«me
, 
LIB_PREFIX
 
U_LIBICUDATA_NAME
 
U_ICU_VERSION_SHORT
 
LIB_SUFFIX
);

424 #ifde‡
UDATA_DEBUG


425 
	`Ârötf
(
°dîr
, "dŒlﬂd: %†", 
∑thBuf„r
);

428 
h™dÀ
=
	`dŒlﬂd
(
∑thBuf„r
);

430 #ifde‡
UDATA_DEBUG


431 
	`Ârötf
(
°dîr
, " -> %08X\n", 
h™dÀ
 );

434 if(
h™dÀ
 !
NULL
) {

437 
	`UD©aMem‹y_öô
(
pD©a
);

438 
vÆ
=
	`dŒquîyv¨
((
dŒh™dÀ
*)
h™dÀ
, 
U_ICUDATA_ENTRY_NAME
);

439 if(
vÆ
 == 0) {

441  
FALSE
;

443 #ifde‡
UDATA_DEBUG


444 
	`Ârötf
(
°dîr
, "dŒquîyv¨(%08X, %sË-> %08X\n", 
h™dÀ
, 
U_ICUDATA_ENTRY_NAME
, 
vÆ
);

447 
pD©a
->
pHódî
=(c⁄° 
D©aHódî
 *)
vÆ
;

448  
TRUE
;

450  
FALSE
;

452 
	}
}

454 
U_CFUNC
 
	$u¥v_unm≠Fûe
(
UD©aMem‹y
 *
pD©a
) {

455 if(
pD©a
!=
NULL
 &&ÖD©a->
m≠
!=NULL) {

456 
	`u¥v_‰ì
(
pD©a
->
m≠
);

457 
pD©a
->
m≠
 = 
NULL
;

458 
pD©a
->
m≠Addr
 = 
NULL
;

459 
pD©a
->
pHódî
 = 
NULL
;

461 
	}
}

464 #îr‹ 
MAP_IMPLEMENTATION
 
is
 
£t
 
öc‹ª˘ly


	@umapfile.h

23 #i‚de‡
__UMAPFILE_H__


24 
	#__UMAPFILE_H__


	)

26 
	~"unicode/putû.h
"

27 
	~"unicode/ud©a.h
"

29 
U_CFUNC
 
UBoﬁ
 
u¥v_m≠Fûe
(
UD©aMem‹y
 *
pdm
, c⁄° *
∑th
);

30 
U_CFUNC
 
u¥v_unm≠Fûe
(
UD©aMem‹y
 *
pD©a
);

33 
	#MAP_NONE
 0

	)

34 
	#MAP_WIN32
 1

	)

35 
	#MAP_POSIX
 2

	)

36 
	#MAP_STDIO
 3

	)

37 
	#MAP_390DLL
 4

	)

39 #i‡
UCONFIG_NO_FILE_IO


40 
	#MAP_IMPLEMENTATION
 
MAP_NONE


	)

41 #ñi‡
deföed
(
U_WINDOWS
)

42 
	#MAP_IMPLEMENTATION
 
MAP_WIN32


	)

43 #ñi‡
U_HAVE_MMAP
 || 
deföed
(
OS390
)

44 #i‡
deföed
(
OS390
Ë&& deföed (
OS390_STUBDATA
)

46 
	#MAP_IMPLEMENTATION
 
MAP_390DLL


	)

48 
	#MAP_IMPLEMENTATION
 
MAP_POSIX


	)

51 
	#MAP_IMPLEMENTATION
 
MAP_STDIO


	)

	@umath.c

11 
	~"putûimp.h
"

13 
U_CAPI
 
öt32_t
 
U_EXPORT2


14 
	$u¥v_max
(
öt32_t
 
x
, i¡32_à
y
)

16  (
x
 > 
y
 ? x : y);

17 
	}
}

19 
U_CAPI
 
öt32_t
 
U_EXPORT2


20 
	$u¥v_mö
(
öt32_t
 
x
, i¡32_à
y
)

22  (
x
 > 
y
 ? y : x);

23 
	}
}

	@umutex.c

21 
	~"unicode/uty≥s.h
"

22 
	~"uas£π.h
"

23 
	~"u˛n_cmn.h
"

30 #i‡
deföed
(
U_DARWIN
)

31 
	~<AvaûabûôyMa¸os.h
>

32 #i‡(
ICU_USE_THREADS
 =1Ë&& 
deföed
(
MAC_OS_X_VERSION_10_4
Ë&& deföed(
MAC_OS_X_VERSION_MIN_REQUIRED
) && (MAC_OS_X_VERSION_MIN_REQUIRED >= MAC_OS_X_VERSION_10_4)

33 #i‡
deföed
(
__STRICT_ANSI__
)

34 
	#UPRV_REMAP_INLINE


	)

35 
	#ölöe


	)

37 
	~<libkîn/OSAtomic.h
>

38 
	#USE_MAC_OS_ATOMIC_INCREMENT
 1

	)

39 #i‡
deföed
(
UPRV_REMAP_INLINE
)

40 #unde‡
ölöe


41 #unde‡
UPRV_REMAP_INLINE


47 
	#POSIX


	)

49 #i‡
deföed
(
U_WINDOWS
)

50 #unde‡
POSIX


52 #i‡
deföed
(
macötosh
)

53 #unde‡
POSIX


55 #i‡
deföed
(
OS2
)

56 #unde‡
POSIX


59 #i‡
deföed
(
POSIX
Ë&& (
ICU_USE_THREADS
==1)

60 
	~<±hªad.h
>

64 #ifde‡
U_WINDOWS


65 
	#WIN32_LEAN_AND_MEAN


	)

66 
	#VC_EXTRALEAN


	)

67 
	#NOUSER


	)

68 
	#NOSERVICE


	)

69 
	#NOIME


	)

70 
	#NOMCX


	)

71 
	~<wödows.h
>

74 
	~"umuãx.h
"

75 
	~"cmem‹y.h
"

108 #i‡(
ICU_USE_THREADS
 == 0)

109 
	#MUTEX_TYPE
 *

	)

110 
	#PLATFORM_MUTEX_INIT
(
m
)

	)

111 
	#PLATFORM_MUTEX_LOCK
(
m
)

	)

112 
	#PLATFORM_MUTEX_UNLOCK
(
m
)

	)

113 
	#PLATFORM_MUTEX_DESTROY
(
m
)

	)

114 
	#PLATFORM_MUTEX_INITIALIZER
 
NULL


	)

115 
	#SYNC_COMPARE_AND_SWAP
(
de°
, 
ﬁdvÆ
, 
√wvÆ
) \

116 
	`muãxed_com∑ª_™d_sw≠
(
de°
, 
√wvÆ
, 
ﬁdvÆ
)

	)

119 #ñi‡
deföed
(
U_WINDOWS
)

120 
	#MUTEX_TYPE
 
CRITICAL_SECTION


	)

121 
	#PLATFORM_MUTEX_INIT
(
m
Ë
	`InôülizeCrôiˇlSe˘i⁄
(m)

	)

122 
	#PLATFORM_MUTEX_LOCK
(
m
Ë
	`E¡îCrôiˇlSe˘i⁄
(m)

	)

123 
	#PLATFORM_MUTEX_UNLOCK
(
m
Ë
	`LóveCrôiˇlSe˘i⁄
(m)

	)

124 
	#PLATFORM_MUTEX_DESTROY
(
m
Ë
	`DñëeCrôiˇlSe˘i⁄
(m)

	)

125 
	#SYNC_COMPARE_AND_SWAP
(
de°
, 
ﬁdvÆ
, 
√wvÆ
) \

126 
	`I¡îlockedCom∑ªExch™gePoöãr
(
de°
, 
√wvÆ
, 
ﬁdvÆ
)

	)

129 #ñi‡
deföed
(
POSIX
)

130 
	#MUTEX_TYPE
 
±hªad_muãx_t


	)

131 
	#PLATFORM_MUTEX_INIT
(
m
Ë
	`±hªad_muãx_öô
(m, 
NULL
)

	)

132 
	#PLATFORM_MUTEX_LOCK
(
m
Ë
	`±hªad_muãx_lock
(m)

	)

133 
	#PLATFORM_MUTEX_UNLOCK
(
m
Ë
	`±hªad_muãx_u∆ock
(m)

	)

134 
	#PLATFORM_MUTEX_DESTROY
(
m
Ë
	`±hªad_muãx_de°roy
(m)

	)

135 
	#PLATFORM_MUTEX_INITIALIZER
 
PTHREAD_MUTEX_INITIALIZER


	)

136 #i‡(
U_HAVE_GCC_ATOMICS
 == 1)

137 
	#SYNC_COMPARE_AND_SWAP
(
de°
, 
ﬁdvÆ
, 
√wvÆ
) \

138 
	`__sync_vÆ_com∑ª_™d_sw≠
(
de°
, 
ﬁdvÆ
, 
√wvÆ
)

	)

140 
	#SYNC_COMPARE_AND_SWAP
(
de°
, 
ﬁdvÆ
, 
√wvÆ
) \

141 
	`muãxed_com∑ª_™d_sw≠
(
de°
, 
√wvÆ
, 
ﬁdvÆ
)

	)

147 
	#MUTEX_TYPE
 *

	)

148 
	#PLATFORM_MUTEX_INIT
(
m
)

	)

149 
	#PLATFORM_MUTEX_LOCK
(
m
)

	)

150 
	#PLATFORM_MUTEX_UNLOCK
(
m
)

	)

151 
	#PLATFORM_MUTEX_DESTROY
(
m
)

	)

152 
	#SYNC_COMPARE_AND_SWAP
(
de°
, 
ﬁdvÆ
, 
√wvÆ
) \

153 
	`muãxed_com∑ª_™d_sw≠
(
de°
, 
√wvÆ
, 
ﬁdvÆ
)

	)

158 *
muãxed_com∑ª_™d_sw≠
(**
de°
, *
√wvÆ
, *
ﬁdvÆ
);

159 
ICUMuãx
 
	tICUMuãx
;

168 
	sICUMuãx
 {

169 
UMTX
 *
	mow√r
;

172 
UBoﬁ
 
	mhópAŒoˇãd
;

177 
ICUMuãx
 *
	m√xt
;

180 
öt32_t
 
	mªcursi⁄Cou¡
;

182 
MUTEX_TYPE
 
	m∂©f‹mMuãx
;

184 
UMTX
 
	mu£rMuãx
;

195 #i‡
deföed
(
POSIX
)

196 
UMTX
 
	gglobÆUMTX
;

197 
ICUMuãx
 
	gglobÆMuãx
 = {&
globÆUMTX
, 
FALSE
, 
NULL
, 0, 
PLATFORM_MUTEX_INITIALIZER
, NULL};

198 
UMTX
 
	gglobÆUMTX
 = &
globÆMuãx
;

200 
UMTX
 
	gglobÆUMTX
 = 
NULL
;

212 
ICUMuãx
 *
	gmuãxLi°Hód
;

220 
UMtxInôFn
 *
	gpMuãxInôFn
 = 
NULL
;

221 
UMtxFn
 *
	gpMuãxDe°royFn
 = 
NULL
;

222 
UMtxFn
 *
	gpMuãxLockFn
 = 
NULL
;

223 
UMtxFn
 *
	gpMuãxU∆ockFn
 = 
NULL
;

224 c⁄° *
	ggMuãxC⁄ãxt
 = 
NULL
;

230 
U_CAPI
 
U_EXPORT2


231 
	$umtx_lock
(
UMTX
 *
muãx
)

233 
ICUMuãx
 *
m
;

235 i‡(
muãx
 =
NULL
) {

236 
muãx
 = &
globÆUMTX
;

238 
m
 = (
ICUMuãx
 *)*
muãx
;

239 i‡(
m
 =
NULL
) {

243 
	`umtx_öô
(
muãx
);

244 
m
 = (
ICUMuãx
 *)*
muãx
;

246 
	`U_ASSERT
(
m
->
ow√r
 =
muãx
);

248 i‡(
pMuãxLockFn
 !
NULL
) {

249 (*
pMuãxLockFn
)(
gMuãxC⁄ãxt
, &
m
->
u£rMuãx
);

251 
	`PLATFORM_MUTEX_LOCK
(&
m
->
∂©f‹mMuãx
);

254 #i‡
	`deföed
(
U_DEBUG
)

255 
m
->
ªcursi⁄Cou¡
++;

256 
	`U_ASSERT
(
m
->
ªcursi⁄Cou¡
 == 1);

260 
	}
}

267 
U_CAPI
 
U_EXPORT2


268 
	$umtx_u∆ock
(
UMTX
* 
muãx
)

270 
ICUMuãx
 *
m
;

271 if(
muãx
 =
NULL
) {

272 
muãx
 = &
globÆUMTX
;

274 
m
 = (
ICUMuãx
 *)*
muãx
;

275 i‡(
m
 =
NULL
) {

276 
	`U_ASSERT
(
FALSE
);

279 
	`U_ASSERT
(
m
->
ow√r
 =
muãx
);

281 #i‡
	`deföed
 (
U_DEBUG
)

282 
m
->
ªcursi⁄Cou¡
--;

283 
	`U_ASSERT
(
m
->
ªcursi⁄Cou¡
 == 0);

286 i‡(
pMuãxU∆ockFn
) {

287 (*
pMuãxU∆ockFn
)(
gMuãxC⁄ãxt
, &
m
->
u£rMuãx
);

289 
	`PLATFORM_MUTEX_UNLOCK
(&
m
->
∂©f‹mMuãx
);

291 
	}
}

297 
ICUMuãx
 *
	$umtx_˘
(
ICUMuãx
 *
m
) {

298 i‡(
m
 =
NULL
) {

299 
m
 = (
ICUMuãx
 *)
	`u¥v_mÆloc
((ICUMutex));

300 
m
->
hópAŒoˇãd
 = 
TRUE
;

302 
m
->
√xt
 = 
NULL
;

303 
m
->
ªcursi⁄Cou¡
 = 0;

304 
m
->
u£rMuãx
 = 
NULL
;

305 i‡(
pMuãxInôFn
 !
NULL
) {

306 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

307 (*
pMuãxInôFn
)(
gMuãxC⁄ãxt
, &
m
->
u£rMuãx
, &
°©us
);

308 
	`U_ASSERT
(
	`U_SUCCESS
(
°©us
));

310 
	`PLATFORM_MUTEX_INIT
(&
m
->
∂©f‹mMuãx
);

312  
m
;

313 
	}
}

319 
	$umtx_dt
(
ICUMuãx
 *
m
) {

320 i‡(
pMuãxDe°royFn
 !
NULL
) {

321 (*
pMuãxDe°royFn
)(
gMuãxC⁄ãxt
, &
m
->
u£rMuãx
);

322 
m
->
u£rMuãx
 = 
NULL
;

324 
	`PLATFORM_MUTEX_DESTROY
(&
m
->
∂©f‹mMuãx
);

327 i‡(
m
->
hópAŒoˇãd
) {

328 
	`u¥v_‰ì
(
m
);

330 
	}
}

333 
U_CAPI
 
U_EXPORT2


334 
	$umtx_öô
(
UMTX
 *
muãx
) {

335 
ICUMuãx
 *
m
 = 
NULL
;

336 *
‹igöÆVÆue
;

338 i‡(*
muãx
 !
NULL
) {

344 #i‡
	`deföed
(
POSIX
)

345 i‡(
muãx
 =&
globÆUMTX
) {

346 
m
 = &
globÆMuãx
;

350 
m
 = 
	`umtx_˘
(m);

351 
‹igöÆVÆue
 = 
	`SYNC_COMPARE_AND_SWAP
(
muãx
, 
NULL
, 
m
);

352 i‡(
‹igöÆVÆue
 !
NULL
) {

353 
	`umtx_dt
(
m
);

357 
m
->
ow√r
 = 
muãx
;

363 
	`umtx_lock
(
NULL
);

364 
m
->
√xt
 = 
muãxLi°Hód
;

365 
muãxLi°Hód
 = 
m
;

366 
	`umtx_u∆ock
(
NULL
);

368 
	}
}

378 
U_CAPI
 
U_EXPORT2


379 
	$umtx_de°roy
(
UMTX
 *
muãx
) {

380 
ICUMuãx
 *
m
;

385 
	`U_ASSERT
(
muãx
 !
NULL
);

386 i‡(
muãx
 =
NULL
) {

390 
m
 = (
ICUMuãx
 *)*
muãx
;

391 i‡(
m
 =
NULL
) {

395 
	`U_ASSERT
(
m
->
ow√r
 =
muãx
);

396 i‡(
m
->
ow√r
 !
muãx
) {

401 
	`umtx_lock
(
NULL
);

402 i‡(
muãxLi°Hód
 =
m
) {

403 
muãxLi°Hód
 = 
m
->
√xt
;

405 
ICUMuãx
 *
¥ev
;

406 
¥ev
 = 
muãxLi°Hód
;Öªv!=
NULL
 &&Öªv->
√xt
!=
m
;Örev =Örev->next);

408 i‡(
¥ev
 !
NULL
) {

409 
¥ev
->
√xt
 = 
m
->next;

412 
	`umtx_u∆ock
(
NULL
);

414 
	`umtx_dt
(
m
);

415 *
muãx
 = 
NULL
;

416 
	}
}

420 
U_CAPI
 
U_EXPORT2


421 
	$u_£tMuãxFun˘i⁄s
(c⁄° *
c⁄ãxt
, 
UMtxInôFn
 *
i
, 
UMtxFn
 *
d
, UMtxF¿*
l
, UMtxF¿*
u
,

422 
UEº‹Code
 *
°©us
) {

423 i‡(
	`U_FAILURE
(*
°©us
)) {

428 i‡(
i
==
NULL
 || 
d
==NULL || 
l
==NULL || 
u
==NULL) {

429 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

434 i‡(
	`cmem‹y_öU£
()) {

435 *
°©us
 = 
U_INVALID_STATE_ERROR
;

442 
	`umtx_de°roy
(&
globÆUMTX
);

445 
pMuãxInôFn
 = 
i
;

446 
pMuãxDe°royFn
 = 
d
;

447 
pMuãxLockFn
 = 
l
;

448 
pMuãxU∆ockFn
 = 
u
;

449 
gMuãxC⁄ãxt
 = 
c⁄ãxt
;

451 #i‡
	`deföed
 (
POSIX
)

454 
	`umtx_öô
(&
globÆUMTX
);

456 
	}
}

469 *
	$muãxed_com∑ª_™d_sw≠
(**
de°
, *
√wvÆ
, *
ﬁdvÆ
) {

470 *
ãmp
;

471 
UBoﬁ
 
√edU∆ock
 = 
FALSE
;

473 i‡(
globÆUMTX
 !
NULL
) {

474 
	`umtx_lock
(&
globÆUMTX
);

475 
√edU∆ock
 = 
TRUE
;

478 
ãmp
 = *
de°
;

479 i‡(
ãmp
 =
ﬁdvÆ
) {

480 *
de°
 = 
√wvÆ
;

483 i‡(
√edU∆ock
) {

484 
	`umtx_u∆ock
(&
globÆUMTX
);

486  
ãmp
;

487 
	}
}

500 
UMtxAtomicFn
 *
	gpIncFn
 = 
NULL
;

501 
UMtxAtomicFn
 *
	gpDecFn
 = 
NULL
;

502 c⁄° *
	ggIncDecC⁄ãxt
 = 
NULL
;

504 
UMTX
 
	ggIncDecMuãx
 = 
NULL
;

506 
U_CAPI
 
öt32_t
 
U_EXPORT2


507 
	$umtx_©omic_öc
(
öt32_t
 *
p
) {

508 
öt32_t
 
ªtVÆ
;

509 i‡(
pIncFn
) {

510 
ªtVÆ
 = (*
pIncFn
)(
gIncDecC⁄ãxt
, 
p
);

512 #i‡
	`deföed
 (
U_WINDOWS
Ë&& 
ICU_USE_THREADS
 == 1

513 
ªtVÆ
 = 
	`I¡îlockedIn¸emít
((
LONG
*)
p
);

514 #ñi‡
	`deföed
(
USE_MAC_OS_ATOMIC_INCREMENT
)

515 
ªtVÆ
 = 
	`OSAtomicIn¸emít32B¨rõr
(
p
);

516 #ñi‡(
U_HAVE_GCC_ATOMICS
 == 1)

517 
ªtVÆ
 = 
	`__sync_add_™d_„tch
(
p
, 1);

518 #ñi‡
	`deföed
 (
POSIX
Ë&& 
ICU_USE_THREADS
 == 1

519 
	`umtx_lock
(&
gIncDecMuãx
);

520 
ªtVÆ
 = ++(*
p
);

521 
	`umtx_u∆ock
(&
gIncDecMuãx
);

524 
ªtVÆ
 = ++(*
p
);

527  
ªtVÆ
;

528 
	}
}

530 
U_CAPI
 
öt32_t
 
U_EXPORT2


531 
	$umtx_©omic_dec
(
öt32_t
 *
p
) {

532 
öt32_t
 
ªtVÆ
;

533 i‡(
pDecFn
) {

534 
ªtVÆ
 = (*
pDecFn
)(
gIncDecC⁄ãxt
, 
p
);

536 #i‡
	`deföed
 (
U_WINDOWS
Ë&& 
ICU_USE_THREADS
 == 1

537 
ªtVÆ
 = 
	`I¡îlockedDe¸emít
((
LONG
*)
p
);

538 #ñi‡
	`deföed
(
USE_MAC_OS_ATOMIC_INCREMENT
)

539 
ªtVÆ
 = 
	`OSAtomicDe¸emít32B¨rõr
(
p
);

540 #ñi‡(
U_HAVE_GCC_ATOMICS
 == 1)

541 
ªtVÆ
 = 
	`__sync_sub_™d_„tch
(
p
, 1);

542 #ñi‡
	`deföed
 (
POSIX
Ë&& 
ICU_USE_THREADS
 == 1

543 
	`umtx_lock
(&
gIncDecMuãx
);

544 
ªtVÆ
 = --(*
p
);

545 
	`umtx_u∆ock
(&
gIncDecMuãx
);

548 
ªtVÆ
 = --(*
p
);

551  
ªtVÆ
;

552 
	}
}

556 
U_CAPI
 
U_EXPORT2


557 
	$u_£tAtomicIncDecFun˘i⁄s
(c⁄° *
c⁄ãxt
, 
UMtxAtomicFn
 *
ù
, UMtxAtomicF¿*
dp
,

558 
UEº‹Code
 *
°©us
) {

559 i‡(
	`U_FAILURE
(*
°©us
)) {

563 i‡(
ù
==
NULL
 || 
dp
==NULL) {

564 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

568 i‡(
	`cmem‹y_öU£
()) {

569 *
°©us
 = 
U_INVALID_STATE_ERROR
;

573 
pIncFn
 = 
ù
;

574 
pDecFn
 = 
dp
;

575 
gIncDecC⁄ãxt
 = 
c⁄ãxt
;

577 #i‡!
U_RELEASE


579 
öt32_t
 
ã°I¡
 = 0;

580 
	`U_ASSERT
(
	`umtx_©omic_öc
(&
ã°I¡
) == 1);

581 
	`U_ASSERT
(
ã°I¡
 == 1);

582 
	`U_ASSERT
(
	`umtx_©omic_dec
(&
ã°I¡
) == 0);

583 
	`U_ASSERT
(
ã°I¡
 == 0);

586 
	}
}

595 
U_CFUNC
 
UBoﬁ
 
	$umtx_˛ónup
() {

596 
ICUMuãx
 *
thisMuãx
 = 
NULL
;

597 
ICUMuãx
 *
√xtMuãx
 = 
NULL
;

601 
	`muãxed_com∑ª_™d_sw≠
(&
globÆUMTX
, 
NULL
, NULL);

606 
thisMuãx
=
muãxLi°Hód
;ÅhisMuãx!=
NULL
;ÅhisMuãx=
√xtMuãx
) {

607 
UMTX
 *
umtx
 = 
thisMuãx
->
ow√r
;

608 
√xtMuãx
 = 
thisMuãx
->
√xt
;

609 
	`U_ASSERT
(*
umtx
 = (*)
thisMuãx
);

610 i‡(
umtx
 !&
globÆUMTX
) {

611 
	`umtx_de°roy
(
umtx
);

614 
	`umtx_de°roy
(&
globÆUMTX
);

616 
pMuãxInôFn
 = 
NULL
;

617 
pMuãxDe°royFn
 = 
NULL
;

618 
pMuãxLockFn
 = 
NULL
;

619 
pMuãxU∆ockFn
 = 
NULL
;

620 
gMuãxC⁄ãxt
 = 
NULL
;

621 
pIncFn
 = 
NULL
;

622 
pDecFn
 = 
NULL
;

623 
gIncDecC⁄ãxt
 = 
NULL
;

624 
gIncDecMuãx
 = 
NULL
;

626 #i‡
	`deföed
 (
POSIX
)

630 
	`umtx_öô
(&
globÆUMTX
);

632  
TRUE
;

633 
	}
}

	@umutex.h

18 #i‚de‡
UMUTEX_H


19 
	#UMUTEX_H


	)

21 
	~"unicode/uty≥s.h
"

22 
	~"unicode/u˛ón.h
"

26 #ifde‡
APP_NO_THREADS


27 
	#ICU_USE_THREADS
 0

	)

37 #i‚de‡
ICU_USE_THREADS


38 
	#ICU_USE_THREADS
 1

	)

45 #i‡!
deföed
(
UMTX_STRONG_MEMORY_MODEL
)

46 
	#UMTX_STRONG_MEMORY_MODEL
 0

	)

64 #i‡
UMTX_STRONG_MEMORY_MODEL


66 
	#UMTX_CHECK
(
pMuãx
, 
ex¥essi⁄
, 
ªsu…
) \

67 (
ªsu…
)=(
ex¥essi⁄
)

	)

71 
	#UMTX_CHECK
(
pMuãx
, 
ex¥essi⁄
, 
ªsu…
) \

72 
	`umtx_lock
(
pMuãx
); \

73 (
ªsu…
)=(
ex¥essi⁄
); \

74 
	`umtx_u∆ock
(
pMuãx
)

	)

101 
U_CAPI
 
U_EXPORT2
 
umtx_lock
 ( 
UMTX
* 
muãx
 );

108 
U_CAPI
 
U_EXPORT2
 
umtx_u∆ock
 ( 
UMTX
* 
muãx
 );

119 
U_CAPI
 
U_EXPORT2
 
umtx_öô
 ( 
UMTX
* 
muãx
 );

129 
U_CAPI
 
U_EXPORT2
 
umtx_de°roy
–
UMTX
 *
muãx
 );

142 
U_CAPI
 
öt32_t
 
U_EXPORT2
 
umtx_©omic_öc
(int32_t *);

143 
U_CAPI
 
öt32_t
 
U_EXPORT2
 
umtx_©omic_dec
(int32_t *);

	@unames.c

17 
	~"unicode/uty≥s.h
"

18 
	~"unicode/putû.h
"

19 
	~"unicode/uch¨.h
"

20 
	~"unicode/ud©a.h
"

21 
	~"u°r_imp.h
"

22 
	~"umuãx.h
"

23 
	~"cmem‹y.h
"

24 
	~"c°rög.h
"

25 
	~"u˛n_cmn.h
"

26 
	~"ud©aswp.h
"

27 
	~"u¥›s.h
"

31 
	#LENGTHOF
(
¨øy
Ë(◊ºay)/(◊ºay)[0]))

	)

33 c⁄° 
	gDATA_NAME
[] = "unames";

34 c⁄° 
	gDATA_TYPE
[] = "icu";

36 
	#GROUP_SHIFT
 5

	)

37 
	#LINES_PER_GROUP
 (1UL<<
GROUP_SHIFT
)

	)

38 
	#GROUP_MASK
 (
LINES_PER_GROUP
-1)

	)

57 
	mGROUP_MSB
,

58 
	mGROUP_OFFSET_HIGH
,

59 
	mGROUP_OFFSET_LOW
,

60 
	mGROUP_LENGTH


68 
	#GET_GROUP_OFFSET
(
group
Ë((
öt32_t
)(group)[
GROUP_OFFSET_HIGH
]<<16|(group)[
GROUP_OFFSET_LOW
])

	)

70 
	#NEXT_GROUP
(
group
Ë((group)+
GROUP_LENGTH
)

	)

71 
	#PREV_GROUP
(
group
Ë((group)-
GROUP_LENGTH
)

	)

74 
uöt32_t
 
	m°¨t
, 
	míd
;

75 
uöt8_t
 
	mty≥
, 
	mv¨ü¡
;

76 
uöt16_t
 
	msize
;

77 } 
	tAlg‹ôhmicR™ge
;

80 
uöt32_t
 
	mtokíSåögOff£t
, 
	mgroupsOff£t
, 
	mgroupSåögOff£t
, 
	mÆgNamesOff£t
;

81 } 
	tUCh¨Names
;

92 
	#GET_GROUPS
(
«mes
Ë(c⁄° 
uöt16_t
 *)((c⁄° *Íames+«mes->
groupsOff£t
)

	)

95 c⁄° *
	mŸhîName
;

96 
UCh¨32
 
	mcode
;

97 } 
	tFödName
;

99 
	#DO_FIND_NAME
 
NULL


	)

101 
UD©aMem‹y
 *
	guCh¨NamesD©a
=
NULL
;

102 
UCh¨Names
 *
	guCh¨Names
=
NULL
;

103 
UEº‹Code
 
	ggLﬂdEº‹Code
=
U_ZERO_ERROR
;

108 
öt32_t
 
	ggMaxNameLígth
=0;

114 
uöt32_t
 
	ggNameSë
[8]={ 0 };

116 
	#U_NONCHARACTER_CODE_POINT
 
U_CHAR_CATEGORY_COUNT


	)

117 
	#U_LEAD_SURROGATE
 
U_CHAR_CATEGORY_COUNT
 + 1

	)

118 
	#U_TRAIL_SURROGATE
 
U_CHAR_CATEGORY_COUNT
 + 2

	)

120 
	#U_CHAR_EXTENDED_CATEGORY_COUNT
 (
U_CHAR_CATEGORY_COUNT
 + 3)

	)

122 c⁄° * c⁄° 
	gch¨C©Names
[
U_CHAR_EXTENDED_CATEGORY_COUNT
] = {

160 
UBoﬁ
 
U_CALLCONV
 
	$u«mes_˛ónup
()

162 if(
uCh¨NamesD©a
) {

163 
	`ud©a_˛o£
(
uCh¨NamesD©a
);

164 
uCh¨NamesD©a
 = 
NULL
;

166 if(
uCh¨Names
) {

167 
uCh¨Names
 = 
NULL
;

169 
gMaxNameLígth
=0;

170  
TRUE
;

171 
	}
}

173 
UBoﬁ
 
U_CALLCONV


174 
	$isAc˚±abÀ
(*
c⁄ãxt
,

175 c⁄° *
ty≥
, c⁄° *
«me
,

176 c⁄° 
UD©aInfo
 *
pInfo
) {

177  (
UBoﬁ
)(

178 
pInfo
->
size
>=20 &&

179 
pInfo
->
isBigEndün
==
U_IS_BIG_ENDIAN
 &&

180 
pInfo
->
ch¨£tFamûy
==
U_CHARSET_FAMILY
 &&

181 
pInfo
->
d©aF‹m©
[0]==0x75 &&

182 
pInfo
->
d©aF‹m©
[1]==0x6e &&

183 
pInfo
->
d©aF‹m©
[2]==0x61 &&

184 
pInfo
->
d©aF‹m©
[3]==0x6d &&

185 
pInfo
->
f‹m©Vîsi⁄
[0]==1);

186 
	}
}

188 
UBoﬁ


189 
	$isD©aLﬂded
(
UEº‹Code
 *
pEº‹Code
) {

191 
UBoﬁ
 
isCached
;

194 
	`UMTX_CHECK
(
NULL
, (
uCh¨Names
!=NULL), 
isCached
);

196 if(!
isCached
) {

197 
UCh¨Names
 *
«mes
;

198 
UD©aMem‹y
 *
d©a
;

201 if(
	`U_FAILURE
(
gLﬂdEº‹Code
)) {

202 *
pEº‹Code
=
gLﬂdEº‹Code
;

203  
FALSE
;

207 
d©a
=
	`ud©a_›íChoi˚
(
NULL
, 
DATA_TYPE
, 
DATA_NAME
, 
isAc˚±abÀ
, NULL, 
pEº‹Code
);

208 if(
	`U_FAILURE
(*
pEº‹Code
)) {

209 
gLﬂdEº‹Code
=*
pEº‹Code
;

210  
FALSE
;

213 
«mes
=(
UCh¨Names
 *)
	`ud©a_gëMem‹y
(
d©a
);

217 
	`umtx_lock
(
NULL
);

218 if(
uCh¨Names
==
NULL
) {

219 
uCh¨NamesD©a
=
d©a
;

220 
uCh¨Names
=
«mes
;

221 
d©a
=
NULL
;

222 
«mes
=
NULL
;

223 
	`u˛n_comm⁄_ªgi°îCÀ™up
(
UCLN_COMMON_UNAMES
, 
u«mes_˛ónup
);

225 
	`umtx_u∆ock
(
NULL
);

229 if(
d©a
!=
NULL
) {

230 
	`ud©a_˛o£
(
d©a
);

233  
TRUE
;

234 
	}
}

236 
	#WRITE_CHAR
(
buf„r
, 
buf„rLígth
, 
buf„rPos
, 
c
) { \

237 if((
buf„rLígth
)>0) { \

238 *(
buf„r
)++=
c
; \

239 --(
buf„rLígth
); \

241 ++(
buf„rPos
); \

242 }

	)

244 
	#U_ISO_COMMENT
 
U_CHAR_NAME_CHOICE_COUNT


	)

258 
uöt16_t


259 
	$ex∑ndName
(
UCh¨Names
 *
«mes
,

260 c⁄° 
uöt8_t
 *
«me
, 
uöt16_t
 
«meLígth
, 
UCh¨NameChoi˚
 
«meChoi˚
,

261 *
buf„r
, 
uöt16_t
 
buf„rLígth
) {

262 
uöt16_t
 *
tokís
=(uöt16_à*)
«mes
+8;

263 
uöt16_t
 
tokí
, 
tokíCou¡
=*
tokís
++, 
buf„rPos
=0;

264 
uöt8_t
 *
tokíSåögs
=(uöt8_à*)
«mes
+«mes->
tokíSåögOff£t
;

265 
uöt8_t
 
c
;

267 if(
«meChoi˚
!=
U_UNICODE_CHAR_NAME
 &&ÇameChoi˚!=
U_EXTENDED_CHAR_NAME
) {

272 if((
uöt8_t
)';'>=
tokíCou¡
 || 
tokís
[(uöt8_t)';']==(
uöt16_t
)(-1)) {

273 
fõldIndex

«meChoi˚
==
U_ISO_COMMENT
 ? 2 :ÇameChoice;

275 
«meLígth
>0) {

276 --
«meLígth
;

277 if(*
«me
++==';') {

281 } --
fõldIndex
>0);

288 
«meLígth
=0;

293 
«meLígth
>0) {

294 --
«meLígth
;

295 
c
=*
«me
++;

297 if(
c
>=
tokíCou¡
) {

298 if(
c
!=';') {

300 
	`WRITE_CHAR
(
buf„r
, 
buf„rLígth
, 
buf„rPos
, 
c
);

306 
tokí
=
tokís
[
c
];

307 if(
tokí
==(
uöt16_t
)(-2)) {

309 
tokí
=
tokís
[
c
<<8|*
«me
++];

310 --
«meLígth
;

312 if(
tokí
==(
uöt16_t
)(-1)) {

313 if(
c
!=';') {

315 
	`WRITE_CHAR
(
buf„r
, 
buf„rLígth
, 
buf„rPos
, 
c
);

320 if(!
buf„rPos
 && 
«meChoi˚
 =
U_EXTENDED_CHAR_NAME
) {

321 i‡((
uöt8_t
)';'>=
tokíCou¡
 || 
tokís
[(uöt8_t)';']==(
uöt16_t
)(-1)) {

330 
uöt8_t
 *
tokíSåög
=
tokíSåögs
+
tokí
;

331 (
c
=*
tokíSåög
++)!=0) {

332 
	`WRITE_CHAR
(
buf„r
, 
buf„rLígth
, 
buf„rPos
, 
c
);

339 if(
buf„rLígth
>0) {

340 *
buf„r
=0;

343  
buf„rPos
;

344 
	}
}

351 
UBoﬁ


352 
	$com∑ªName
(
UCh¨Names
 *
«mes
,

353 c⁄° 
uöt8_t
 *
«me
, 
uöt16_t
 
«meLígth
, 
UCh¨NameChoi˚
 
«meChoi˚
,

354 c⁄° *
ŸhîName
) {

355 
uöt16_t
 *
tokís
=(uöt16_à*)
«mes
+8;

356 
uöt16_t
 
tokí
, 
tokíCou¡
=*
tokís
++;

357 
uöt8_t
 *
tokíSåögs
=(uöt8_à*)
«mes
+«mes->
tokíSåögOff£t
;

358 
uöt8_t
 
c
;

359 c⁄° *
‹igOthîName
 = 
ŸhîName
;

361 if(
«meChoi˚
!=
U_UNICODE_CHAR_NAME
 &&ÇameChoi˚!=
U_EXTENDED_CHAR_NAME
) {

366 if((
uöt8_t
)';'>=
tokíCou¡
 || 
tokís
[(uöt8_t)';']==(
uöt16_t
)(-1)) {

367 
fõldIndex

«meChoi˚
==
U_ISO_COMMENT
 ? 2 :ÇameChoice;

369 
«meLígth
>0) {

370 --
«meLígth
;

371 if(*
«me
++==';') {

375 } --
fõldIndex
>0);

382 
«meLígth
=0;

387 
«meLígth
>0) {

388 --
«meLígth
;

389 
c
=*
«me
++;

391 if(
c
>=
tokíCou¡
) {

392 if(
c
!=';') {

394 if(()
c
!=*
ŸhîName
++) {

395  
FALSE
;

402 
tokí
=
tokís
[
c
];

403 if(
tokí
==(
uöt16_t
)(-2)) {

405 
tokí
=
tokís
[
c
<<8|*
«me
++];

406 --
«meLígth
;

408 if(
tokí
==(
uöt16_t
)(-1)) {

409 if(
c
!=';') {

411 if(()
c
!=*
ŸhîName
++) {

412  
FALSE
;

418 if(
ŸhîName
 =
‹igOthîName
 && 
«meChoi˚
 =
U_EXTENDED_CHAR_NAME
) {

419 i‡((
uöt8_t
)';'>=
tokíCou¡
 || 
tokís
[(uöt8_t)';']==(
uöt16_t
)(-1)) {

428 
uöt8_t
 *
tokíSåög
=
tokíSåögs
+
tokí
;

429 (
c
=*
tokíSåög
++)!=0) {

430 if(()
c
!=*
ŸhîName
++) {

431  
FALSE
;

439  (
UBoﬁ
)(*
ŸhîName
==0);

440 
	}
}

442 
uöt8_t
 
	$gëCh¨C©
(
UCh¨32
 
˝
) {

443 
uöt8_t
 
ˇt
;

445 i‡(
	`UTF_IS_UNICODE_NONCHAR
(
˝
)) {

446  
U_NONCHARACTER_CODE_POINT
;

449 i‡((
ˇt
 = 
	`u_ch¨Ty≥
(
˝
)Ë=
U_SURROGATE
) {

450 
ˇt
 = 
	`UTF_IS_LEAD
(
˝
Ë? 
U_LEAD_SURROGATE
 : 
U_TRAIL_SURROGATE
;

453  
ˇt
;

454 
	}
}

456 c⁄° *
	$gëCh¨C©Name
(
UCh¨32
 
˝
) {

457 
uöt8_t
 
ˇt
 = 
	`gëCh¨C©
(
˝
);

462 i‡(
ˇt
 >
	`LENGTHOF
(
ch¨C©Names
)) {

465  
ch¨C©Names
[
ˇt
];

467 
	}
}

469 
uöt16_t
 
	$gëExtName
(
uöt32_t
 
code
, *
buf„r
, 
uöt16_t
 
buf„rLígth
) {

470 c⁄° *
ˇäame
 = 
	`gëCh¨C©Name
(
code
);

471 
uöt16_t
 
Àngth
 = 0;

473 
UCh¨32
 
˝
;

474 
ndigôs
, 
i
;

476 
	`WRITE_CHAR
(
buf„r
, 
buf„rLígth
, 
Àngth
, '<');

477 
ˇäame
[
Àngth
 - 1]) {

478 
	`WRITE_CHAR
(
buf„r
, 
buf„rLígth
, 
Àngth
, 
ˇäame
[length - 1]);

480 
	`WRITE_CHAR
(
buf„r
, 
buf„rLígth
, 
Àngth
, '-');

481 
˝
 = 
code
, 
ndigôs
 = 0; cp; ++ndigits, cp >>= 4)

483 i‡(
ndigôs
 < 4)

484 
ndigôs
 = 4;

485 
˝
 = 
code
, 
i
 = 
ndigôs
; (˝ || i > 0Ë&& 
buf„rLígth
; cp >>= 4, bufferLength--) {

486 
uöt8_t
 
v
 = (uöt8_t)(
˝
 & 0xf);

487 
buf„r
[--
i
] = (
v
 < 10 ? '0' + v : 'A' + v - 10);

489 
buf„r
 +
ndigôs
;

490 
Àngth
 +
ndigôs
;

491 
	`WRITE_CHAR
(
buf„r
, 
buf„rLígth
, 
Àngth
, '>');

493  
Àngth
;

494 
	}
}

503 c⁄° 
uöt16_t
 *

504 
	$gëGroup
(
UCh¨Names
 *
«mes
, 
uöt32_t
 
code
) {

505 c⁄° 
uöt16_t
 *
groups
=
	`GET_GROUPS
(
«mes
);

506 
uöt16_t
 
groupMSB
=(uöt16_t)(
code
>>
GROUP_SHIFT
),

507 
°¨t
=0,

508 
limô
=*
groups
++,

509 
numbî
;

512 
°¨t
<
limô
-1) {

513 
numbî
=(
uöt16_t
)((
°¨t
+
limô
)/2);

514 if(
groupMSB
<
groups
[
numbî
*
GROUP_LENGTH
+
GROUP_MSB
]) {

515 
limô
=
numbî
;

517 
°¨t
=
numbî
;

522  
groups
+
°¨t
*
GROUP_LENGTH
;

523 
	}
}

535 c⁄° 
uöt8_t
 *

536 
ex∑ndGroupLígths
(c⁄° 
uöt8_t
 *
s
,

537 
uöt16_t
 
off£ts
[
LINES_PER_GROUP
+1], uöt16_à
Àngths
[LINES_PER_GROUP+1]) {

539 
uöt16_t
 
	gi
=0, 
	goff£t
=0, 
	gÀngth
=0;

540 
uöt8_t
 
	gÀngthByã
;

543 
	gi
<
	gLINES_PER_GROUP
) {

544 
	gÀngthByã
=*
s
++;

547 if(
	gÀngth
>=12) {

549 
Àngth
=(
uöt16_t
)((÷ígth&0x3)<<4|
ÀngthByã
>>4)+12);

550 
	gÀngthByã
&=0xf;

551 } if((
	gÀngthByã
 )>=0xc0) {

553 
Àngth
=(
uöt16_t
)((
ÀngthByã
&0x3f)+12);

556 
	gÀngth
=(
uöt16_t
)(
ÀngthByã
>>4);

557 
	gÀngthByã
&=0xf;

560 *
	goff£ts
++=
off£t
;

561 *
	gÀngths
++=
Àngth
;

563 
	goff£t
+=
Àngth
;

564 ++
	gi
;

567 if((
	gÀngthByã
&0xf0)==0) {

569 
Àngth
=
ÀngthByã
;

570 if(
	gÀngth
<12) {

572 *
	goff£ts
++=
off£t
;

573 *
	gÀngths
++=
Àngth
;

575 
	goff£t
+=
Àngth
;

576 ++
	gi
;

579 
	gÀngth
=0;

584  
	gs
;

587 
uöt16_t


588 
	$ex∑ndGroupName
(
UCh¨Names
 *
«mes
, c⁄° 
uöt16_t
 *
group
,

589 
uöt16_t
 
löeNumbî
, 
UCh¨NameChoi˚
 
«meChoi˚
,

590 *
buf„r
, 
uöt16_t
 
buf„rLígth
) {

591 
uöt16_t
 
off£ts
[
LINES_PER_GROUP
+2], 
Àngths
[LINES_PER_GROUP+2];

592 c⁄° 
uöt8_t
 *
s
=(uöt8_à*)
«mes
+«mes->
groupSåögOff£t
+
	`GET_GROUP_OFFSET
(
group
);

593 
s
=
	`ex∑ndGroupLígths
(s, 
off£ts
, 
Àngths
);

594  
	`ex∑ndName
(
«mes
, 
s
+
off£ts
[
löeNumbî
], 
Àngths
[löeNumbî], 
«meChoi˚
,

595 
buf„r
, 
buf„rLígth
);

596 
	}
}

598 
uöt16_t


599 
	$gëName
(
UCh¨Names
 *
«mes
, 
uöt32_t
 
code
, 
UCh¨NameChoi˚
 
«meChoi˚
,

600 *
buf„r
, 
uöt16_t
 
buf„rLígth
) {

601 c⁄° 
uöt16_t
 *
group
=
	`gëGroup
(
«mes
, 
code
);

602 if((
uöt16_t
)(
code
>>
GROUP_SHIFT
)==
group
[
GROUP_MSB
]) {

603  
	`ex∑ndGroupName
(
«mes
, 
group
, (
uöt16_t
)(
code
&
GROUP_MASK
), 
«meChoi˚
,

604 
buf„r
, 
buf„rLígth
);

608 if(
buf„rLígth
>0) {

609 *
buf„r
=0;

613 
	}
}

619 
UBoﬁ


620 
	$íumGroupNames
(
UCh¨Names
 *
«mes
, c⁄° 
uöt16_t
 *
group
,

621 
UCh¨32
 
°¨t
, UCh¨32 
íd
,

622 
UEnumCh¨NamesFn
 *
‚
, *
c⁄ãxt
,

623 
UCh¨NameChoi˚
 
«meChoi˚
) {

624 
uöt16_t
 
off£ts
[
LINES_PER_GROUP
+2], 
Àngths
[LINES_PER_GROUP+2];

625 c⁄° 
uöt8_t
 *
s
=(uöt8_à*)
«mes
+«mes->
groupSåögOff£t
+
	`GET_GROUP_OFFSET
(
group
);

627 
s
=
	`ex∑ndGroupLígths
(s, 
off£ts
, 
Àngths
);

628 if(
‚
!=
DO_FIND_NAME
) {

629 
buf„r
[200];

630 
uöt16_t
 
Àngth
;

632 
°¨t
<=
íd
) {

633 
Àngth
=
	`ex∑ndName
(
«mes
, 
s
+
off£ts
[
°¨t
&
GROUP_MASK
], 
Àngths
[°¨t&GROUP_MASK], 
«meChoi˚
, 
buf„r
, (buffer));

634 i‡(!
Àngth
 && 
«meChoi˚
 =
U_EXTENDED_CHAR_NAME
) {

635 
buf„r
[
Àngth
 = 
	`gëExtName
(
°¨t
, buffer, (buffer))] = 0;

638 if(
Àngth
>0) {

639 if(!
	`‚
(
c⁄ãxt
, 
°¨t
, 
«meChoi˚
, 
buf„r
, 
Àngth
)) {

640  
FALSE
;

643 ++
°¨t
;

646 c⁄° *
ŸhîName
=((
FödName
 *)
c⁄ãxt
)->otherName;

647 
°¨t
<=
íd
) {

648 if(
	`com∑ªName
(
«mes
, 
s
+
off£ts
[
°¨t
&
GROUP_MASK
], 
Àngths
[°¨t&GROUP_MASK], 
«meChoi˚
, 
ŸhîName
)) {

649 ((
FödName
 *)
c⁄ãxt
)->
code
=
°¨t
;

650  
FALSE
;

652 ++
°¨t
;

655  
TRUE
;

656 
	}
}

664 
UBoﬁ


665 
	$íumExtNames
(
UCh¨32
 
°¨t
, UCh¨32 
íd
,

666 
UEnumCh¨NamesFn
 *
‚
, *
c⁄ãxt
)

668 if(
‚
!=
DO_FIND_NAME
) {

669 
buf„r
[200];

670 
uöt16_t
 
Àngth
;

672 
°¨t
<=
íd
) {

673 
buf„r
[
Àngth
 = 
	`gëExtName
(
°¨t
, buffer, (buffer))] = 0;

675 if(
Àngth
>0) {

676 if(!
	`‚
(
c⁄ãxt
, 
°¨t
, 
U_EXTENDED_CHAR_NAME
, 
buf„r
, 
Àngth
)) {

677  
FALSE
;

680 ++
°¨t
;

684  
TRUE
;

685 
	}
}

687 
UBoﬁ


688 
	$íumNames
(
UCh¨Names
 *
«mes
,

689 
UCh¨32
 
°¨t
, UCh¨32 
limô
,

690 
UEnumCh¨NamesFn
 *
‚
, *
c⁄ãxt
,

691 
UCh¨NameChoi˚
 
«meChoi˚
) {

692 
uöt16_t
 
°¨tGroupMSB
, 
ídGroupMSB
, 
groupCou¡
;

693 c⁄° 
uöt16_t
 *
group
, *
groupLimô
;

695 
°¨tGroupMSB
=(
uöt16_t
)(
°¨t
>>
GROUP_SHIFT
);

696 
ídGroupMSB
=(
uöt16_t
)((
limô
-1)>>
GROUP_SHIFT
);

699 
group
=
	`gëGroup
(
«mes
, 
°¨t
);

701 if(
°¨tGroupMSB
==
ídGroupMSB
) {

702 if(
°¨tGroupMSB
==
group
[
GROUP_MSB
]) {

704  
	`íumGroupNames
(
«mes
, 
group
, 
°¨t
, 
limô
-1, 
‚
, 
c⁄ãxt
, 
«meChoi˚
);

707 c⁄° 
uöt16_t
 *
groups
=
	`GET_GROUPS
(
«mes
);

708 
groupCou¡
=*
groups
++;

709 
groupLimô
=
groups
+
groupCou¡
*
GROUP_LENGTH
;

711 if(
°¨tGroupMSB
==
group
[
GROUP_MSB
]) {

713 if((
°¨t
&
GROUP_MASK
)!=0) {

714 if(!
	`íumGroupNames
(
«mes
, 
group
,

715 
°¨t
, ((
UCh¨32
)
°¨tGroupMSB
<<
GROUP_SHIFT
)+
LINES_PER_GROUP
-1,

716 
‚
, 
c⁄ãxt
, 
«meChoi˚
)) {

717  
FALSE
;

719 
group
=
	`NEXT_GROUP
(group);

721 } if(
°¨tGroupMSB
>
group
[
GROUP_MSB
]) {

723 c⁄° 
uöt16_t
 *
√xtGroup
=
	`NEXT_GROUP
(
group
);

724 i‡(
√xtGroup
 < 
groupLimô
 &&ÇextGroup[
GROUP_MSB
] > 
°¨tGroupMSB
 && 
«meChoi˚
 =
U_EXTENDED_CHAR_NAME
) {

725 
UCh¨32
 
íd
 = 
√xtGroup
[
GROUP_MSB
] << 
GROUP_SHIFT
;

726 i‡(
íd
 > 
limô
) {

727 
íd
 = 
limô
;

729 i‡(!
	`íumExtNames
(
°¨t
, 
íd
 - 1, 
‚
, 
c⁄ãxt
)) {

730  
FALSE
;

733 
group
=
√xtGroup
;

737 
group
<
groupLimô
 && group[
GROUP_MSB
]<
ídGroupMSB
) {

738 c⁄° 
uöt16_t
 *
√xtGroup
;

739 
°¨t
=(
UCh¨32
)
group
[
GROUP_MSB
]<<
GROUP_SHIFT
;

740 if(!
	`íumGroupNames
(
«mes
, 
group
, 
°¨t
, sèπ+
LINES_PER_GROUP
-1, 
‚
, 
c⁄ãxt
, 
«meChoi˚
)) {

741  
FALSE
;

743 
√xtGroup
=
	`NEXT_GROUP
(
group
);

744 i‡(
√xtGroup
 < 
groupLimô
 &&ÇextGroup[
GROUP_MSB
] > 
group
[GROUP_MSB] + 1 && 
«meChoi˚
 =
U_EXTENDED_CHAR_NAME
) {

745 
UCh¨32
 
íd
 = 
√xtGroup
[
GROUP_MSB
] << 
GROUP_SHIFT
;

746 i‡(
íd
 > 
limô
) {

747 
íd
 = 
limô
;

749 i‡(!
	`íumExtNames
((
group
[
GROUP_MSB
] + 1Ë<< 
GROUP_SHIFT
, 
íd
 - 1, 
‚
, 
c⁄ãxt
)) {

750  
FALSE
;

753 
group
=
√xtGroup
;

757 if(
group
<
groupLimô
 && group[
GROUP_MSB
]==
ídGroupMSB
) {

758  
	`íumGroupNames
(
«mes
, 
group
, (
limô
-1)&~
GROUP_MASK
,Üimô-1, 
‚
, 
c⁄ãxt
, 
«meChoi˚
);

759 } i‡(
«meChoi˚
 =
U_EXTENDED_CHAR_NAME
 && 
group
 =
groupLimô
) {

760 
UCh¨32
 
√xt
 = (
	`PREV_GROUP
(
group
)[
GROUP_MSB
] + 1Ë<< 
GROUP_SHIFT
;

761 i‡(
√xt
 > 
°¨t
) {

762 
°¨t
 = 
√xt
;

765  
TRUE
;

771 i‡(
«meChoi˚
 =
U_EXTENDED_CHAR_NAME
) {

772 i‡(
limô
 > 
UCHAR_MAX_VALUE
 + 1) {

773 
limô
 = 
UCHAR_MAX_VALUE
 + 1;

775  
	`íumExtNames
(
°¨t
, 
limô
 - 1, 
‚
, 
c⁄ãxt
);

778  
TRUE
;

779 
	}
}

781 
uöt16_t


782 
	$wrôeFa˘‹Suffix
(c⁄° 
uöt16_t
 *
Á˘‹s
, uöt16_à
cou¡
,

783 c⁄° *
s
,

784 
uöt32_t
 
code
,

785 
uöt16_t
 
ödexes
[8],

786 c⁄° *
ñemítBa£s
[8], c⁄° *
ñemíts
[8],

787 *
buf„r
, 
uöt16_t
 
buf„rLígth
) {

788 
uöt16_t
 
i
, 
Á˘‹
, 
buf„rPos
=0;

789 
c
;

799 --
cou¡
;

800 
i
=
cou¡
; i>0; --i) {

801 
Á˘‹
=
Á˘‹s
[
i
];

802 
ödexes
[
i
]=(
uöt16_t
)(
code
%
Á˘‹
);

803 
code
/=
Á˘‹
;

809 
ödexes
[0]=(
uöt16_t
)
code
;

813 if(
ñemítBa£s
!=
NULL
) {

814 *
ñemítBa£s
++=
s
;

818 
Á˘‹
=
ödexes
[
i
];

819 
Á˘‹
>0) {

820 *
s
++!=0) {}

821 --
Á˘‹
;

823 if(
ñemíts
!=
NULL
) {

824 *
ñemíts
++=
s
;

828 (
c
=*
s
++)!=0) {

829 
	`WRITE_CHAR
(
buf„r
, 
buf„rLígth
, 
buf„rPos
, 
c
);

833 if(
i
>=
cou¡
) {

838 
Á˘‹
=(
uöt16_t
)(
Á˘‹s
[
i
]-
ödexes
[i]-1);

839 
Á˘‹
>0) {

840 *
s
++!=0) {}

841 --
Á˘‹
;

844 ++
i
;

848 if(
buf„rLígth
>0) {

849 *
buf„r
=0;

852  
buf„rPos
;

853 
	}
}

860 
uöt16_t


861 
	$gëAlgName
(
Alg‹ôhmicR™ge
 *
ønge
, 
uöt32_t
 
code
, 
UCh¨NameChoi˚
 
«meChoi˚
,

862 *
buf„r
, 
uöt16_t
 
buf„rLígth
) {

863 
uöt16_t
 
buf„rPos
=0;

866 if(
«meChoi˚
!=
U_UNICODE_CHAR_NAME
 &&ÇameChoi˚!=
U_EXTENDED_CHAR_NAME
) {

868 if(
buf„rLígth
>0) {

869 *
buf„r
=0;

874 
ønge
->
ty≥
) {

877 c⁄° *
s
=(c⁄° *)(
ønge
+1);

878 
c
;

880 
uöt16_t
 
i
, 
cou¡
;

883 (
c
=*
s
++)!=0) {

884 
	`WRITE_CHAR
(
buf„r
, 
buf„rLígth
, 
buf„rPos
, 
c
);

888 
cou¡
=
ønge
->
v¨ü¡
;

891 if(
cou¡
<
buf„rLígth
) {

892 
buf„r
[
cou¡
]=0;

895 
i
=
cou¡
; i>0;) {

896 if(--
i
<
buf„rLígth
) {

897 
c
=()(
code
&0xf);

898 if(
c
<10) {

899 
c
+='0';

901 
c
+='A'-10;

903 
buf„r
[
i
]=
c
;

905 
code
>>=4;

908 
buf„rPos
+=
cou¡
;

913 
uöt16_t
 
ödexes
[8];

914 c⁄° 
uöt16_t
 *
Á˘‹s
=(c⁄° uöt16_à*)(
ønge
+1);

915 
uöt16_t
 
cou¡
=
ønge
->
v¨ü¡
;

916 c⁄° *
s
=(c⁄° *)(
Á˘‹s
+
cou¡
);

917 
c
;

920 (
c
=*
s
++)!=0) {

921 
	`WRITE_CHAR
(
buf„r
, 
buf„rLígth
, 
buf„rPos
, 
c
);

924 
buf„rPos
+=
	`wrôeFa˘‹Suffix
(
Á˘‹s
, 
cou¡
,

925 
s
, 
code
-
ønge
->
°¨t
, 
ödexes
, 
NULL
, NULL, 
buf„r
, 
buf„rLígth
);

931 if(
buf„rLígth
>0) {

932 *
buf„r
=0;

937  
buf„rPos
;

938 
	}
}

944 
UBoﬁ


945 
	$íumAlgNames
(
Alg‹ôhmicR™ge
 *
ønge
,

946 
UCh¨32
 
°¨t
, UCh¨32 
limô
,

947 
UEnumCh¨NamesFn
 *
‚
, *
c⁄ãxt
,

948 
UCh¨NameChoi˚
 
«meChoi˚
) {

949 
buf„r
[200];

950 
uöt16_t
 
Àngth
;

952 if(
«meChoi˚
!=
U_UNICODE_CHAR_NAME
 &&ÇameChoi˚!=
U_EXTENDED_CHAR_NAME
) {

953  
TRUE
;

956 
ønge
->
ty≥
) {

958 *
s
, *
íd
;

959 
c
;

962 
Àngth
=
	`gëAlgName
(
ønge
, (
uöt32_t
)
°¨t
, 
«meChoi˚
, 
buf„r
, (buffer));

963 if(
Àngth
<=0) {

964  
TRUE
;

968 if(!
	`‚
(
c⁄ãxt
, 
°¨t
, 
«meChoi˚
, 
buf„r
, 
Àngth
)) {

969  
FALSE
;

973 
íd
=
buf„r
;

974 *
íd
!=0) {

975 ++
íd
;

979 ++
°¨t
<
limô
) {

981 
s
=
íd
;

983 
c
=*--
s
;

984 if(('0'<=
c
 && c<'9') || ('A'<=c && c<'F')) {

985 *
s
=()(
c
+1);

987 } if(
c
=='9') {

988 *
s
='A';

990 } if(
c
=='F') {

991 *
s
='0';

995 if(!
	`‚
(
c⁄ãxt
, 
°¨t
, 
«meChoi˚
, 
buf„r
, 
Àngth
)) {

996  
FALSE
;

1002 
uöt16_t
 
ödexes
[8];

1003 c⁄° *
ñemítBa£s
[8], *
ñemíts
[8];

1004 c⁄° 
uöt16_t
 *
Á˘‹s
=(c⁄° uöt16_à*)(
ønge
+1);

1005 
uöt16_t
 
cou¡
=
ønge
->
v¨ü¡
;

1006 c⁄° *
s
=(c⁄° *)(
Á˘‹s
+
cou¡
);

1007 *
suffix
, *
t
;

1008 
uöt16_t
 
¥efixLígth
, 
i
, 
idx
;

1010 
c
;

1015 
suffix
=
buf„r
;

1016 
¥efixLígth
=0;

1017 (
c
=*
s
++)!=0) {

1018 *
suffix
++=
c
;

1019 ++
¥efixLígth
;

1023 
Àngth
=(
uöt16_t
)(
¥efixLígth
+
	`wrôeFa˘‹Suffix
(
Á˘‹s
, 
cou¡
,

1024 
s
, (
uöt32_t
)
°¨t
-
ønge
->start,

1025 
ödexes
, 
ñemítBa£s
, 
ñemíts
,

1026 
suffix
, (
uöt16_t
)((
buf„r
)-
¥efixLígth
)));

1029 if(!
	`‚
(
c⁄ãxt
, 
°¨t
, 
«meChoi˚
, 
buf„r
, 
Àngth
)) {

1030  
FALSE
;

1034 ++
°¨t
<
limô
) {

1036 
i
=
cou¡
;

1038 
idx
=(
uöt16_t
)(
ödexes
[--
i
]+1);

1039 if(
idx
<
Á˘‹s
[
i
]) {

1041 
ödexes
[
i
]=
idx
;

1042 
s
=
ñemíts
[
i
];

1043 *
s
++!=0) {

1045 
ñemíts
[
i
]=
s
;

1049 
ödexes
[
i
]=0;

1050 
ñemíts
[
i
]=
ñemítBa£s
[i];

1055 
t
=
suffix
;

1056 
Àngth
=
¥efixLígth
;

1057 
i
=0; i<
cou¡
; ++i) {

1058 
s
=
ñemíts
[
i
];

1059 (
c
=*
s
++)!=0) {

1060 *
t
++=
c
;

1061 ++
Àngth
;

1065 *
t
=0;

1067 if(!
	`‚
(
c⁄ãxt
, 
°¨t
, 
«meChoi˚
, 
buf„r
, 
Àngth
)) {

1068  
FALSE
;

1078  
TRUE
;

1079 
	}
}

1086 
UCh¨32


1087 
	$födAlgName
(
Alg‹ôhmicR™ge
 *
ønge
, 
UCh¨NameChoi˚
 
«meChoi˚
, c⁄° *
ŸhîName
) {

1088 
UCh¨32
 
code
;

1090 if(
«meChoi˚
!=
U_UNICODE_CHAR_NAME
 &&ÇameChoi˚!=
U_EXTENDED_CHAR_NAME
) {

1094 
ønge
->
ty≥
) {

1097 c⁄° *
s
=(c⁄° *)(
ønge
+1);

1098 
c
;

1100 
uöt16_t
 
i
, 
cou¡
;

1103 (
c
=*
s
++)!=0) {

1104 if(()
c
!=*
ŸhîName
++) {

1110 
cou¡
=
ønge
->
v¨ü¡
;

1111 
code
=0;

1112 
i
=0; i<
cou¡
; ++i) {

1113 
c
=*
ŸhîName
++;

1114 if('0'<=
c
 && c<='9') {

1115 
code
=(code<<4)|(
c
-'0');

1116 } if('A'<=
c
 && c<='F') {

1117 
code
=(code<<4)|(
c
-'A'+10);

1124 if(*
ŸhîName
==0 && 
ønge
->
°¨t
<=(
uöt32_t
)
code
 && (uöt32_t)code<Ù™ge->
íd
) {

1125  
code
;

1130 
buf„r
[64];

1131 
uöt16_t
 
ödexes
[8];

1132 c⁄° *
ñemítBa£s
[8], *
ñemíts
[8];

1133 c⁄° 
uöt16_t
 *
Á˘‹s
=(c⁄° uöt16_à*)(
ønge
+1);

1134 
uöt16_t
 
cou¡
=
ønge
->
v¨ü¡
;

1135 c⁄° *
s
=(c⁄° *)(
Á˘‹s
+
cou¡
), *
t
;

1136 
UCh¨32
 
°¨t
, 
limô
;

1137 
uöt16_t
 
i
, 
idx
;

1139 
c
;

1144 (
c
=*
s
++)!=0) {

1145 if(()
c
!=*
ŸhîName
++) {

1150 
°¨t
=(
UCh¨32
)
ønge
->start;

1151 
limô
=(
UCh¨32
)(
ønge
->
íd
+1);

1154 
	`wrôeFa˘‹Suffix
(
Á˘‹s
, 
cou¡
, 
s
, 0,

1155 
ödexes
, 
ñemítBa£s
, 
ñemíts
, 
buf„r
, (buffer));

1158 if(0==
	`u¥v_°rcmp
(
ŸhîName
, 
buf„r
)) {

1159  
°¨t
;

1163 ++
°¨t
<
limô
) {

1165 
i
=
cou¡
;

1167 
idx
=(
uöt16_t
)(
ödexes
[--
i
]+1);

1168 if(
idx
<
Á˘‹s
[
i
]) {

1170 
ödexes
[
i
]=
idx
;

1171 
s
=
ñemíts
[
i
];

1172 *
s
++!=0) {}

1173 
ñemíts
[
i
]=
s
;

1177 
ödexes
[
i
]=0;

1178 
ñemíts
[
i
]=
ñemítBa£s
[i];

1183 
t
=
ŸhîName
;

1184 
i
=0; i<
cou¡
; ++i) {

1185 
s
=
ñemíts
[
i
];

1186 (
c
=*
s
++)!=0) {

1187 if(
c
!=*
t
++) {

1188 
s
="";

1189 
i
=99;

1193 if(
i
<99 && *
t
==0) {

1194  
°¨t
;

1205 
	}
}

1209 
	#SET_ADD
(
£t
, 
c
Ë((£t)[(
uöt8_t
)c>>5]|=((
uöt32_t
)1<<((uöt8_t)c&0x1f)))

	)

1210 
	#SET_CONTAINS
(
£t
, 
c
Ë(((£t)[(
uöt8_t
)c>>5]&((
uöt32_t
)1<<((uöt8_t)c&0x1f)))!=0)

	)

1212 
öt32_t


1213 
	$ˇlcSåögSëLígth
(
uöt32_t
 
£t
[8], c⁄° *
s
) {

1214 
öt32_t
 
Àngth
=0;

1215 
c
;

1217 (
c
=*
s
++)!=0) {

1218 
	`SET_ADD
(
£t
, 
c
);

1219 ++
Àngth
;

1221  
Àngth
;

1222 
	}
}

1224 
öt32_t


1225 
	$ˇlcAlgNameSësLígths
(
öt32_t
 
maxNameLígth
) {

1226 
Alg‹ôhmicR™ge
 *
ønge
;

1227 
uöt32_t
 *
p
;

1228 
uöt32_t
 
øngeCou¡
;

1229 
öt32_t
 
Àngth
;

1232 
p
=(
uöt32_t
 *)((
uöt8_t
 *)
uCh¨Names
+uCh¨Names->
ÆgNamesOff£t
);

1233 
øngeCou¡
=*
p
;

1234 
ønge
=(
Alg‹ôhmicR™ge
 *)(
p
+1);

1235 
øngeCou¡
>0) {

1236 
ønge
->
ty≥
) {

1240 
Àngth
=
	`ˇlcSåögSëLígth
(
gNameSë
, (c⁄° *)(
ønge
+1))+ønge->
v¨ü¡
;

1241 if(
Àngth
>
maxNameLígth
) {

1242 
maxNameLígth
=
Àngth
;

1247 c⁄° 
uöt16_t
 *
Á˘‹s
=(c⁄° uöt16_à*)(
ønge
+1);

1248 c⁄° *
s
;

1249 
öt32_t
 
i
, 
cou¡
=
ønge
->
v¨ü¡
, 
Á˘‹
, 
Á˘‹Lígth
, 
maxFa˘‹Lígth
;

1252 
s
=(c⁄° *)(
Á˘‹s
+
cou¡
);

1253 
Àngth
=
	`ˇlcSåögSëLígth
(
gNameSë
, 
s
);

1254 
s
+=
Àngth
+1;

1257 
i
=0; i<
cou¡
; ++i) {

1258 
maxFa˘‹Lígth
=0;

1259 
Á˘‹
=
Á˘‹s
[
i
]; factor>0; --factor) {

1260 
Á˘‹Lígth
=
	`ˇlcSåögSëLígth
(
gNameSë
, 
s
);

1261 
s
+=
Á˘‹Lígth
+1;

1262 if(
Á˘‹Lígth
>
maxFa˘‹Lígth
) {

1263 
maxFa˘‹Lígth
=
Á˘‹Lígth
;

1266 
Àngth
+=
maxFa˘‹Lígth
;

1269 if(
Àngth
>
maxNameLígth
) {

1270 
maxNameLígth
=
Àngth
;

1279 
ønge
=(
Alg‹ôhmicR™ge
 *)((
uöt8_t
 *Ï™ge+ønge->
size
);

1280 --
øngeCou¡
;

1282  
maxNameLígth
;

1283 
	}
}

1285 
öt32_t


1286 
	$ˇlcExtNameSësLígths
(
öt32_t
 
maxNameLígth
) {

1287 
öt32_t
 
i
, 
Àngth
;

1289 
i
=0; i<
	`LENGTHOF
(
ch¨C©Names
); ++i) {

1297 
Àngth
=9+
	`ˇlcSåögSëLígth
(
gNameSë
, 
ch¨C©Names
[
i
]);

1298 if(
Àngth
>
maxNameLígth
) {

1299 
maxNameLígth
=
Àngth
;

1302  
maxNameLígth
;

1303 
	}
}

1305 
öt32_t


1306 
	$ˇlcNameSëLígth
(c⁄° 
uöt16_t
 *
tokís
, uöt16_à
tokíCou¡
, c⁄° 
uöt8_t
 *
tokíSåögs
, 
öt8_t
 *
tokíLígths
,

1307 
uöt32_t
 
£t
[8],

1308 c⁄° 
uöt8_t
 **
pLöe
, c⁄° uöt8_à*
löeLimô
) {

1309 c⁄° 
uöt8_t
 *
löe
=*
pLöe
;

1310 
öt32_t
 
Àngth
=0, 
tokíLígth
;

1311 
uöt16_t
 
c
, 
tokí
;

1313 
löe
!=
löeLimô
 && (
c
=*löe++)!=(
uöt8_t
)';') {

1314 if(
c
>=
tokíCou¡
) {

1316 
	`SET_ADD
(
£t
, 
c
);

1317 ++
Àngth
;

1319 
tokí
=
tokís
[
c
];

1320 if(
tokí
==(
uöt16_t
)(-2)) {

1322 
c
=c<<8|*
löe
++;

1323 
tokí
=
tokís
[
c
];

1325 if(
tokí
==(
uöt16_t
)(-1)) {

1327 
	`SET_ADD
(
£t
, 
c
);

1328 ++
Àngth
;

1331 if(
tokíLígths
!=
NULL
) {

1333 
tokíLígth
=
tokíLígths
[
c
];

1334 if(
tokíLígth
==0) {

1335 
tokíLígth
=
	`ˇlcSåögSëLígth
(
£t
, (c⁄° *)
tokíSåögs
+
tokí
);

1336 
tokíLígths
[
c
]=(
öt8_t
)
tokíLígth
;

1339 
tokíLígth
=
	`ˇlcSåögSëLígth
(
£t
, (c⁄° *)
tokíSåögs
+
tokí
);

1341 
Àngth
+=
tokíLígth
;

1346 *
pLöe
=
löe
;

1347  
Àngth
;

1348 
	}
}

1351 
	$ˇlcGroupNameSësLígths
(
öt32_t
 
maxNameLígth
) {

1352 
uöt16_t
 
off£ts
[
LINES_PER_GROUP
+2], 
Àngths
[LINES_PER_GROUP+2];

1354 
uöt16_t
 *
tokís
=(uöt16_à*)
uCh¨Names
+8;

1355 
uöt16_t
 
tokíCou¡
=*
tokís
++;

1356 
uöt8_t
 *
tokíSåögs
=(uöt8_à*)
uCh¨Names
+uCh¨Names->
tokíSåögOff£t
;

1358 
öt8_t
 *
tokíLígths
;

1360 c⁄° 
uöt16_t
 *
group
;

1361 c⁄° 
uöt8_t
 *
s
, *
löe
, *
löeLimô
;

1363 
öt32_t
 
groupCou¡
, 
löeNumbî
, 
Àngth
;

1365 
tokíLígths
=(
öt8_t
 *)
	`u¥v_mÆloc
(
tokíCou¡
);

1366 if(
tokíLígths
!=
NULL
) {

1367 
	`u¥v_mem£t
(
tokíLígths
, 0, 
tokíCou¡
);

1370 
group
=
	`GET_GROUPS
(
uCh¨Names
);

1371 
groupCou¡
=*
group
++;

1374 
groupCou¡
>0) {

1375 
s
=(
uöt8_t
 *)
uCh¨Names
+uCh¨Names->
groupSåögOff£t
+
	`GET_GROUP_OFFSET
(
group
);

1376 
s
=
	`ex∑ndGroupLígths
(s, 
off£ts
, 
Àngths
);

1379 
löeNumbî
=0;ÜöeNumbî<
LINES_PER_GROUP
; ++lineNumber) {

1380 
löe
=
s
+
off£ts
[
löeNumbî
];

1381 
Àngth
=
Àngths
[
löeNumbî
];

1382 if(
Àngth
==0) {

1386 
löeLimô
=
löe
+
Àngth
;

1389 
Àngth
=
	`ˇlcNameSëLígth
(
tokís
, 
tokíCou¡
, 
tokíSåögs
, 
tokíLígths
, 
gNameSë
, &
löe
, 
löeLimô
);

1390 if(
Àngth
>
maxNameLígth
) {

1391 
maxNameLígth
=
Àngth
;

1393 if(
löe
==
löeLimô
) {

1398 
Àngth
=
	`ˇlcNameSëLígth
(
tokís
, 
tokíCou¡
, 
tokíSåögs
, 
tokíLígths
, 
gNameSë
, &
löe
, 
löeLimô
);

1399 if(
Àngth
>
maxNameLígth
) {

1400 
maxNameLígth
=
Àngth
;

1402 if(
löe
==
löeLimô
) {

1410 
group
=
	`NEXT_GROUP
(group);

1411 --
groupCou¡
;

1414 if(
tokíLígths
!=
NULL
) {

1415 
	`u¥v_‰ì
(
tokíLígths
);

1419 
gMaxNameLígth
=
maxNameLígth
;

1420 
	}
}

1422 
UBoﬁ


1423 
	$ˇlcNameSësLígths
(
UEº‹Code
 *
pEº‹Code
) {

1424 c⁄° 
extCh¨s
[]="0123456789ABCDEF<>-";

1425 
öt32_t
 
i
, 
maxNameLígth
;

1427 if(
gMaxNameLígth
!=0) {

1428  
TRUE
;

1431 if(!
	`isD©aLﬂded
(
pEº‹Code
)) {

1432  
FALSE
;

1436 
i
=0; i<(
extCh¨s
)-1; ++i) {

1437 
	`SET_ADD
(
gNameSë
, 
extCh¨s
[
i
]);

1441 
maxNameLígth
=
	`ˇlcAlgNameSësLígths
(0);

1444 
maxNameLígth
=
	`ˇlcExtNameSësLígths
(maxNameLength);

1447 
	`ˇlcGroupNameSësLígths
(
maxNameLígth
);

1449  
TRUE
;

1450 
	}
}

1454 
U_CAPI
 
öt32_t
 
U_EXPORT2


1455 
	$u_ch¨Name
(
UCh¨32
 
code
, 
UCh¨NameChoi˚
 
«meChoi˚
,

1456 *
buf„r
, 
öt32_t
 
buf„rLígth
,

1457 
UEº‹Code
 *
pEº‹Code
) {

1458 
Alg‹ôhmicR™ge
 *
ÆgR™ge
;

1459 
uöt32_t
 *
p
;

1460 
uöt32_t
 
i
;

1461 
öt32_t
 
Àngth
;

1464 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

1466 } if(
«meChoi˚
>=
U_CHAR_NAME_CHOICE_COUNT
 ||

1467 
buf„rLígth
<0 || (buf„rLígth>0 && 
buf„r
==
NULL
)

1469 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

1473 if((
uöt32_t
)
code
>
UCHAR_MAX_VALUE
 || !
	`isD©aLﬂded
(
pEº‹Code
)) {

1474  
	`u_ãrmö©eCh¨s
(
buf„r
, 
buf„rLígth
, 0, 
pEº‹Code
);

1477 
Àngth
=0;

1480 
p
=(
uöt32_t
 *)((
uöt8_t
 *)
uCh¨Names
+uCh¨Names->
ÆgNamesOff£t
);

1481 
i
=*
p
;

1482 
ÆgR™ge
=(
Alg‹ôhmicR™ge
 *)(
p
+1);

1483 
i
>0) {

1484 if(
ÆgR™ge
->
°¨t
<=(
uöt32_t
)
code
 && (uöt32_t)code<˜lgR™ge->
íd
) {

1485 
Àngth
=
	`gëAlgName
(
ÆgR™ge
, (
uöt32_t
)
code
, 
«meChoi˚
, 
buf„r
, (
uöt16_t
)
buf„rLígth
);

1488 
ÆgR™ge
=(
Alg‹ôhmicR™ge
 *)((
uöt8_t
 *ÔlgR™ge+ÆgR™ge->
size
);

1489 --
i
;

1492 if(
i
==0) {

1493 i‡(
«meChoi˚
 =
U_EXTENDED_CHAR_NAME
) {

1494 
Àngth
 = 
	`gëName
(
uCh¨Names
, (
uöt32_t
 )
code
, 
U_EXTENDED_CHAR_NAME
, 
buf„r
, (
uöt16_t
Ë
buf„rLígth
);

1495 i‡(!
Àngth
) {

1497 
Àngth
 = 
	`gëExtName
((
uöt32_t
Ë
code
, 
buf„r
, (
uöt16_t
Ë
buf„rLígth
);

1501 
Àngth
=
	`gëName
(
uCh¨Names
, (
uöt32_t
)
code
, 
«meChoi˚
, 
buf„r
, (
uöt16_t
)
buf„rLígth
);

1505  
	`u_ãrmö©eCh¨s
(
buf„r
, 
buf„rLígth
, 
Àngth
, 
pEº‹Code
);

1506 
	}
}

1508 
U_CAPI
 
öt32_t
 
U_EXPORT2


1509 
	$u_gëISOCommít
(
UCh¨32
 
c
,

1510 *
de°
, 
öt32_t
 
de°C≠acôy
,

1511 
UEº‹Code
 *
pEº‹Code
) {

1512 
öt32_t
 
Àngth
;

1515 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

1517 } if(
de°C≠acôy
<0 || (de°C≠acôy>0 && 
de°
==
NULL
)) {

1518 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

1522 if((
uöt32_t
)
c
>
UCHAR_MAX_VALUE
 || !
	`isD©aLﬂded
(
pEº‹Code
)) {

1523  
	`u_ãrmö©eCh¨s
(
de°
, 
de°C≠acôy
, 0, 
pEº‹Code
);

1527 
Àngth
=
	`gëName
(
uCh¨Names
, (
uöt32_t
)
c
, 
U_ISO_COMMENT
, 
de°
, (
uöt16_t
)
de°C≠acôy
);

1528  
	`u_ãrmö©eCh¨s
(
de°
, 
de°C≠acôy
, 
Àngth
, 
pEº‹Code
);

1529 
	}
}

1531 
U_CAPI
 
UCh¨32
 
U_EXPORT2


1532 
	$u_ch¨FromName
(
UCh¨NameChoi˚
 
«meChoi˚
,

1533 c⁄° *
«me
,

1534 
UEº‹Code
 *
pEº‹Code
) {

1535 
uµî
[120], 
lowî
[120];

1536 
FödName
 
födName
;

1537 
Alg‹ôhmicR™ge
 *
ÆgR™ge
;

1538 
uöt32_t
 *
p
;

1539 
uöt32_t
 
i
;

1540 
UCh¨32
 
˝
 = 0;

1541 
c0
;

1542 
UCh¨32
 
îr‹
 = 0xffff;

1544 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

1545  
îr‹
;

1548 if(
«meChoi˚
>=
U_CHAR_NAME_CHOICE_COUNT
 || 
«me
==
NULL
 || *name==0) {

1549 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

1550  
îr‹
;

1553 if(!
	`isD©aLﬂded
(
pEº‹Code
)) {

1554  
îr‹
;

1558 
i
=0; i<(
uµî
); ++i) {

1559 if((
c0
=*
«me
++)!=0) {

1560 
uµî
[
i
]=
	`u¥v_touµî
(
c0
);

1561 
lowî
[
i
]=
	`u¥v_tﬁowî
(
c0
);

1563 
uµî
[
i
]=
lowî
[i]=0;

1567 if(
i
==(
uµî
)) {

1569 *
pEº‹Code
 = 
U_ILLEGAL_CHAR_FOUND
;

1570  
îr‹
;

1574 i‡(
lowî
[0] == '<') {

1575 i‡(
«meChoi˚
 =
U_EXTENDED_CHAR_NAME
) {

1576 i‡(
lowî
[--
i
] == '>') {

1577 --
i
; 
lowî
[i] &&Üower[i] != '-'; --i) {

1580 i‡(
lowî
[
i
] == '-') {

1581 
uöt32_t
 
cIdx
;

1583 
lowî
[
i
] = 0;

1585 ++
i
; 
lowî
[i] != '>'; ++i) {

1586 i‡(
lowî
[
i
] >= '0' &&Üower[i] <= '9') {

1587 
˝
 = (˝ << 4Ë+ 
lowî
[
i
] - '0';

1588 } i‡(
lowî
[
i
] >= 'a' &&Üower[i] <= 'f') {

1589 
˝
 = (˝ << 4Ë+ 
lowî
[
i
] - 'a' + 10;

1591 *
pEº‹Code
 = 
U_ILLEGAL_CHAR_FOUND
;

1592  
îr‹
;

1600 
lowî
[
i
] = 0, 
cIdx
 = 0; cIdx < 
	`LENGTHOF
(
ch¨C©Names
); ++cIdx) {

1602 i‡(!
	`u¥v_°rcmp
(
lowî
 + 1, 
ch¨C©Names
[
cIdx
])) {

1603 i‡(
	`gëCh¨C©
(
˝
Ë=
cIdx
) {

1604  
˝
;

1613 *
pEº‹Code
 = 
U_ILLEGAL_CHAR_FOUND
;

1614  
îr‹
;

1618 
p
=(
uöt32_t
 *)((
uöt8_t
 *)
uCh¨Names
+uCh¨Names->
ÆgNamesOff£t
);

1619 
i
=*
p
;

1620 
ÆgR™ge
=(
Alg‹ôhmicR™ge
 *)(
p
+1);

1621 
i
>0) {

1622 if((
˝
=
	`födAlgName
(
ÆgR™ge
, 
«meChoi˚
, 
uµî
))!=0xffff) {

1623  
˝
;

1625 
ÆgR™ge
=(
Alg‹ôhmicR™ge
 *)((
uöt8_t
 *ÔlgR™ge+ÆgR™ge->
size
);

1626 --
i
;

1630 
födName
.
ŸhîName
=
uµî
;

1631 
födName
.
code
=
îr‹
;

1632 
	`íumNames
(
uCh¨Names
, 0, 
UCHAR_MAX_VALUE
 + 1, 
DO_FIND_NAME
, &
födName
, 
«meChoi˚
);

1633 i‡(
födName
.
code
 =
îr‹
) {

1634 *
pEº‹Code
 = 
U_ILLEGAL_CHAR_FOUND
;

1636  
födName
.
code
;

1637 
	}
}

1639 
U_CAPI
 
U_EXPORT2


1640 
	$u_íumCh¨Names
(
UCh¨32
 
°¨t
, UCh¨32 
limô
,

1641 
UEnumCh¨NamesFn
 *
‚
,

1642 *
c⁄ãxt
,

1643 
UCh¨NameChoi˚
 
«meChoi˚
,

1644 
UEº‹Code
 *
pEº‹Code
) {

1645 
Alg‹ôhmicR™ge
 *
ÆgR™ge
;

1646 
uöt32_t
 *
p
;

1647 
uöt32_t
 
i
;

1649 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

1653 if(
«meChoi˚
>=
U_CHAR_NAME_CHOICE_COUNT
 || 
‚
==
NULL
) {

1654 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

1658 if((
uöt32_t
Ë
limô
 > 
UCHAR_MAX_VALUE
 + 1) {

1659 
limô
 = 
UCHAR_MAX_VALUE
 + 1;

1661 if((
uöt32_t
)
°¨t
>=(uöt32_t)
limô
) {

1665 if(!
	`isD©aLﬂded
(
pEº‹Code
)) {

1671 
p
=(
uöt32_t
 *)((
uöt8_t
 *)
uCh¨Names
+uCh¨Names->
ÆgNamesOff£t
);

1672 
i
=*
p
;

1673 
ÆgR™ge
=(
Alg‹ôhmicR™ge
 *)(
p
+1);

1674 
i
>0) {

1677 if((
uöt32_t
)
°¨t
<
ÆgR™ge
->start) {

1678 if((
uöt32_t
)
limô
<=
ÆgR™ge
->
°¨t
) {

1679 
	`íumNames
(
uCh¨Names
, 
°¨t
, 
limô
, 
‚
, 
c⁄ãxt
, 
«meChoi˚
);

1682 if(!
	`íumNames
(
uCh¨Names
, 
°¨t
, (
UCh¨32
)
ÆgR™ge
->°¨t, 
‚
, 
c⁄ãxt
, 
«meChoi˚
)) {

1685 
°¨t
=(
UCh¨32
)
ÆgR™ge
->start;

1689 if((
uöt32_t
)
°¨t
<=
ÆgR™ge
->
íd
) {

1690 if((
uöt32_t
)
limô
<=(
ÆgR™ge
->
íd
+1)) {

1691 
	`íumAlgNames
(
ÆgR™ge
, 
°¨t
, 
limô
, 
‚
, 
c⁄ãxt
, 
«meChoi˚
);

1694 if(!
	`íumAlgNames
(
ÆgR™ge
, 
°¨t
, (
UCh¨32
ÔlgR™ge->
íd
+1, 
‚
, 
c⁄ãxt
, 
«meChoi˚
)) {

1697 
°¨t
=(
UCh¨32
)
ÆgR™ge
->
íd
+1;

1700 
ÆgR™ge
=(
Alg‹ôhmicR™ge
 *)((
uöt8_t
 *ÔlgR™ge+ÆgR™ge->
size
);

1701 --
i
;

1704 
	`íumNames
(
uCh¨Names
, 
°¨t
, 
limô
, 
‚
, 
c⁄ãxt
, 
«meChoi˚
);

1705 
	}
}

1707 
U_CAPI
 
öt32_t
 
U_EXPORT2


1708 
	$u¥v_gëMaxCh¨NameLígth
() {

1709 
UEº‹Code
 
îr‹Code
=
U_ZERO_ERROR
;

1710 if(
	`ˇlcNameSësLígths
(&
îr‹Code
)) {

1711  
gMaxNameLígth
;

1715 
	}
}

1723 
	$ch¨SëToUSë
(
uöt32_t
 
c£t
[8], c⁄° 
USëAddî
 *
ß
) {

1724 
UCh¨
 
us
[256];

1725 
cs
[256];

1727 
öt32_t
 
i
, 
Àngth
;

1728 
UEº‹Code
 
îr‹Code
;

1730 
îr‹Code
=
U_ZERO_ERROR
;

1732 if(!
	`ˇlcNameSësLígths
(&
îr‹Code
)) {

1737 
Àngth
=0;

1738 
i
=0; i<256; ++i) {

1739 if(
	`SET_CONTAINS
(
c£t
, 
i
)) {

1740 
cs
[
Àngth
++]=()
i
;

1745 
	`u_ch¨sToUCh¨s
(
cs
, 
us
, 
Àngth
);

1748 
i
=0; i<
Àngth
; ++i) {

1749 if(
us
[
i
]!=0 || 
cs
[i]==0) {

1750 
ß
->
	`add
(ß->
£t
, 
us
[
i
]);

1753 
	}
}

1759 
U_CAPI
 
U_EXPORT2


1760 
	$u¥v_gëCh¨NameCh¨a˘îs
(c⁄° 
USëAddî
 *
ß
) {

1761 
	`ch¨SëToUSë
(
gNameSë
, 
ß
);

1762 
	}
}

1778 
	$makeTokíM≠
(c⁄° 
UD©aSw≠≥r
 *
ds
,

1779 
öt16_t
 
tokís
[], 
uöt16_t
 
tokíCou¡
,

1780 
uöt8_t
 
m≠
[256],

1781 
UEº‹Code
 *
pEº‹Code
) {

1782 
UBoﬁ
 
u£dOutCh¨
[256];

1783 
uöt16_t
 
i
, 
j
;

1784 
uöt8_t
 
c1
, 
c2
;

1786 if(
	`U_FAILURE
(*
pEº‹Code
)) {

1790 if(
ds
->
öCh¨£t
==ds->
outCh¨£t
) {

1792 
i
=0; i<256; ++i) {

1793 
m≠
[
i
]=(
uöt8_t
)i;

1796 
	`u¥v_mem£t
(
m≠
, 0, 256);

1797 
	`u¥v_mem£t
(
u£dOutCh¨
, 0, 256);

1799 if(
tokíCou¡
>256) {

1800 
tokíCou¡
=256;

1804 
i
=1; i<
tokíCou¡
; ++i) {

1805 if(
tokís
[
i
]==-1) {

1807 
c1
=(
uöt8_t
)
i
;

1808 
ds
->
	`sw≠InvCh¨s
(ds, &
c1
, 1, &
c2
, 
pEº‹Code
);

1809 if(
	`U_FAILURE
(*
pEº‹Code
)) {

1810 
	`ud©a_¥ötEº‹
(
ds
, "unames/makeTokenMap() finds variant character 0x%02x used (input charset family %d)\n",

1811 
i
, 
ds
->
öCh¨£t
);

1816 
m≠
[
c1
]=
c2
;

1817 
u£dOutCh¨
[
c2
]=
TRUE
;

1822 
i
=
j
=1; i<
tokíCou¡
; ++i) {

1824 if(
m≠
[
i
]==0) {

1826 
u£dOutCh¨
[
j
]) {

1827 ++
j
;

1829 
m≠
[
i
]=(
uöt8_t
)
j
++;

1838 
	}
}

1840 
U_CAPI
 
öt32_t
 
U_EXPORT2


1841 
	$uch¨_sw≠Names
(c⁄° 
UD©aSw≠≥r
 *
ds
,

1842 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

1843 
UEº‹Code
 *
pEº‹Code
) {

1844 c⁄° 
UD©aInfo
 *
pInfo
;

1845 
öt32_t
 
hódîSize
;

1847 c⁄° 
uöt8_t
 *
öByãs
;

1848 
uöt8_t
 *
outByãs
;

1850 
uöt32_t
 
tokíSåögOff£t
, 
groupsOff£t
, 
groupSåögOff£t
, 
ÆgNamesOff£t
,

1851 
off£t
, 
i
, 
cou¡
, 
°rögsCou¡
;

1853 c⁄° 
Alg‹ôhmicR™ge
 *
öR™ge
;

1854 
Alg‹ôhmicR™ge
 *
outR™ge
;

1857 
hódîSize
=
	`ud©a_sw≠D©aHódî
(
ds
, 
öD©a
, 
Àngth
, 
outD©a
, 
pEº‹Code
);

1858 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

1863 
pInfo
=(c⁄° 
UD©aInfo
 *)((c⁄° *)
öD©a
+4);

1865 
pInfo
->
d©aF‹m©
[0]==0x75 &&

1866 
pInfo
->
d©aF‹m©
[1]==0x6e &&

1867 
pInfo
->
d©aF‹m©
[2]==0x61 &&

1868 
pInfo
->
d©aF‹m©
[3]==0x6d &&

1869 
pInfo
->
f‹m©Vîsi⁄
[0]==1

1871 
	`ud©a_¥ötEº‹
(
ds
, "uchar_swapNames(): data format %02x.%02x.%02x.%02x (format version %02x) isÇotÑecognizedás unames.icu\n",

1872 
pInfo
->
d©aF‹m©
[0],ÖInfo->dataFormat[1],

1873 
pInfo
->
d©aF‹m©
[2],ÖInfo->dataFormat[3],

1874 
pInfo
->
f‹m©Vîsi⁄
[0]);

1875 *
pEº‹Code
=
U_UNSUPPORTED_ERROR
;

1879 
öByãs
=(c⁄° 
uöt8_t
 *)
öD©a
+
hódîSize
;

1880 
outByãs
=(
uöt8_t
 *)
outD©a
+
hódîSize
;

1881 if(
Àngth
<0) {

1882 
ÆgNamesOff£t
=
ds
->
	`ªadUI¡32
(((c⁄° 
uöt32_t
 *)
öByãs
)[3]);

1884 
Àngth
-=
hódîSize
;

1885 if–
Àngth
<20 ||

1886 (
uöt32_t
)
Àngth
<(
ÆgNamesOff£t
=
ds
->
	`ªadUI¡32
(((c⁄° uöt32_à*)
öByãs
)[3]))

1888 
	`ud©a_¥ötEº‹
(
ds
, "uchar_swapNames():Åoo few bytes (%dáfter header) for unames.icu\n",

1889 
Àngth
);

1890 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

1895 if(
Àngth
<0) {

1897 
off£t
=
ÆgNamesOff£t
;

1898 
cou¡
=
ds
->
	`ªadUI¡32
(*((c⁄° 
uöt32_t
 *)(
öByãs
+
off£t
)));

1899 
off£t
+=4;

1901 
i
=0; i<
cou¡
; ++i) {

1902 
öR™ge
=(c⁄° 
Alg‹ôhmicR™ge
 *)(
öByãs
+
off£t
);

1903 
off£t
+=
ds
->
	`ªadUI¡16
(
öR™ge
->
size
);

1907 c⁄° 
uöt16_t
 *
p
;

1908 
uöt16_t
 *
q
, *
ãmp
;

1910 
öt16_t
 
tokís
[512];

1911 
uöt16_t
 
tokíCou¡
;

1913 
uöt8_t
 
m≠
[256], 
åaûM≠
[256];

1916 if(
öByãs
!=
outByãs
) {

1917 
	`u¥v_mem˝y
(
outByãs
, 
öByãs
, 
Àngth
);

1921 
tokíSåögOff£t
=
ds
->
	`ªadUI¡32
(((c⁄° 
uöt32_t
 *)
öByãs
)[0]);

1922 
groupsOff£t
=
ds
->
	`ªadUI¡32
(((c⁄° 
uöt32_t
 *)
öByãs
)[1]);

1923 
groupSåögOff£t
=
ds
->
	`ªadUI¡32
(((c⁄° 
uöt32_t
 *)
öByãs
)[2]);

1924 
ds
->
	`sw≠Aºay32
(ds, 
öByãs
, 16, 
outByãs
, 
pEº‹Code
);

1930 
p
=(c⁄° 
uöt16_t
 *)(
öByãs
+16);

1931 
q
=(
uöt16_t
 *)(
outByãs
+16);

1934 
tokíCou¡
=
ds
->
	`ªadUI¡16
(*
p
);

1935 
ds
->
	`sw≠Aºay16
(ds, 
p
, 2, 
q
, 
pEº‹Code
);

1936 ++
p
;

1937 ++
q
;

1940 if(
tokíCou¡
<=512) {

1941 
cou¡
=
tokíCou¡
;

1943 
cou¡
=512;

1945 
i
=0; i<
cou¡
; ++i) {

1946 
tokís
[
i
]=
	`ud©a_ªadI¡16
(
ds
, 
p
[i]);

1948 ; 
i
<512; ++i) {

1949 
tokís
[
i
]=0;

1951 
	`makeTokíM≠
(
ds
, 
tokís
, 
tokíCou¡
, 
m≠
, 
pEº‹Code
);

1952 
	`makeTokíM≠
(
ds
, 
tokís
+256, (
uöt16_t
)(
tokíCou¡
>256 ?ÅokíCou¡-256 : 0), 
åaûM≠
, 
pEº‹Code
);

1953 if(
	`U_FAILURE
(*
pEº‹Code
)) {

1961 
ãmp
=(
uöt16_t
 *)
	`u¥v_mÆloc
(
tokíCou¡
*2);

1962 if(
ãmp
==
NULL
) {

1963 
	`ud©a_¥ötEº‹
(
ds
, "out of memory swapping %u unames.icuÅokens\n",

1964 
tokíCou¡
);

1965 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

1970 
i
=0; i<
tokíCou¡
 && i<256; ++i) {

1971 
ds
->
	`sw≠Aºay16
(ds, 
p
+
i
, 2, 
ãmp
+
m≠
[i], 
pEº‹Code
);

1975 ; 
i
<
tokíCou¡
; ++i) {

1976 
ds
->
	`sw≠Aºay16
(ds, 
p
+
i
, 2, 
ãmp
+(i&0xffffff00)+
åaûM≠
[i&0xff], 
pEº‹Code
);

1980 
	`u¥v_mem˝y
(
q
, 
ãmp
, 
tokíCou¡
*2);

1981 
	`u¥v_‰ì
(
ãmp
);

1987 
	`ud©a_sw≠InvSåögBlock
(
ds
, 
öByãs
+
tokíSåögOff£t
, (
öt32_t
)(
groupsOff£t
-tokenStringOffset),

1988 
outByãs
+
tokíSåögOff£t
, 
pEº‹Code
);

1989 if(
	`U_FAILURE
(*
pEº‹Code
)) {

1990 
	`ud©a_¥ötEº‹
(
ds
, "uchar_swapNames(token strings) failed\n");

1995 
cou¡
=
ds
->
	`ªadUI¡16
(*((c⁄° 
uöt16_t
 *)(
öByãs
+
groupsOff£t
)));

1996 
ds
->
	`sw≠Aºay16
(ds, 
öByãs
+
groupsOff£t
, (
öt32_t
)((1+
cou¡
*3)*2),

1997 
outByãs
+
groupsOff£t
, 
pEº‹Code
);

2003 if(
ds
->
öCh¨£t
!=ds->
outCh¨£t
) {

2004 
uöt16_t
 
off£ts
[
LINES_PER_GROUP
+1], 
Àngths
[LINES_PER_GROUP+1];

2006 c⁄° 
uöt8_t
 *
öSåögs
, *
√xtInSåögs
;

2007 
uöt8_t
 *
outSåögs
;

2009 
uöt8_t
 
c
;

2011 
öSåögs
=
öByãs
+
groupSåögOff£t
;

2012 
outSåögs
=
outByãs
+
groupSåögOff£t
;

2014 
°rögsCou¡
=
ÆgNamesOff£t
-
groupSåögOff£t
;

2017 
°rögsCou¡
>32) {

2018 
√xtInSåögs
=
	`ex∑ndGroupLígths
(
öSåögs
, 
off£ts
, 
Àngths
);

2021 
°rögsCou¡
-=(
uöt32_t
)(
√xtInSåögs
-
öSåögs
);

2022 
outSåögs
+=
√xtInSåögs
-
öSåögs
;

2023 
öSåögs
=
√xtInSåögs
;

2025 
cou¡
=
off£ts
[31]+
Àngths
[31];

2026 
°rögsCou¡
-=
cou¡
;

2029 
cou¡
>0) {

2030 
c
=*
öSåögs
++;

2031 *
outSåögs
++=
m≠
[
c
];

2032 if(
tokís
[
c
]!=-2) {

2033 --
cou¡
;

2036 *
outSåögs
++=
åaûM≠
[*
öSåögs
++];

2037 
cou¡
-=2;

2044 
off£t
=
ÆgNamesOff£t
;

2045 
cou¡
=
ds
->
	`ªadUI¡32
(*((c⁄° 
uöt32_t
 *)(
öByãs
+
off£t
)));

2046 
ds
->
	`sw≠Aºay32
(ds, 
öByãs
+
off£t
, 4, 
outByãs
+off£t, 
pEº‹Code
);

2047 
off£t
+=4;

2049 
i
=0; i<
cou¡
; ++i) {

2050 if(
off£t
>(
uöt32_t
)
Àngth
) {

2051 
	`ud©a_¥ötEº‹
(
ds
, "uchar_swapNames():Åoo few bytes (%dáfter header) for unames.icuálgorithmicÑange %u\n",

2052 
Àngth
, 
i
);

2053 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

2057 
öR™ge
=(c⁄° 
Alg‹ôhmicR™ge
 *)(
öByãs
+
off£t
);

2058 
outR™ge
=(
Alg‹ôhmicR™ge
 *)(
outByãs
+
off£t
);

2059 
off£t
+=
ds
->
	`ªadUI¡16
(
öR™ge
->
size
);

2061 
ds
->
	`sw≠Aºay32
(ds, 
öR™ge
, 8, 
outR™ge
, 
pEº‹Code
);

2062 
ds
->
	`sw≠Aºay16
(ds, &
öR™ge
->
size
, 2, &
outR™ge
->size, 
pEº‹Code
);

2063 
öR™ge
->
ty≥
) {

2066 
ds
->
	`sw≠InvCh¨s
(ds, 
öR™ge
+1, (
öt32_t
)
	`u¥v_°æí
((const *)(inRange+1)),

2067 
outR™ge
+1, 
pEº‹Code
);

2068 if(
	`U_FAILURE
(*
pEº‹Code
)) {

2069 
	`ud©a_¥ötEº‹
(
ds
, "uchar_swapNames(prefix string ofálgorithmicÑange %u) failed\n",

2070 
i
);

2077 
uöt32_t
 
Á˘‹sCou¡
;

2079 
Á˘‹sCou¡
=
öR™ge
->
v¨ü¡
;

2080 
p
=(c⁄° 
uöt16_t
 *)(
öR™ge
+1);

2081 
q
=(
uöt16_t
 *)(
outR™ge
+1);

2082 
ds
->
	`sw≠Aºay16
(ds, 
p
, (
öt32_t
)(
Á˘‹sCou¡
*2), 
q
, 
pEº‹Code
);

2085 
p
+=
Á˘‹sCou¡
;

2086 
q
+=
Á˘‹sCou¡
;

2087 
°rögsCou¡
=(
uöt32_t
)((
öByãs
+
off£t
)-(c⁄° 
uöt8_t
 *)
p
);

2088 
°rögsCou¡
>0 && ((c⁄° 
uöt8_t
 *)
p
)[stringsCount-1]!=0) {

2089 --
°rögsCou¡
;

2091 
ds
->
	`sw≠InvCh¨s
(ds, 
p
, (
öt32_t
)
°rögsCou¡
, 
q
, 
pEº‹Code
);

2095 
	`ud©a_¥ötEº‹
(
ds
, "uchar_swapNames(): unknownÅype %u ofálgorithmicÑange %u\n",

2096 
öR™ge
->
ty≥
, 
i
);

2097 *
pEº‹Code
=
U_UNSUPPORTED_ERROR
;

2103  
hódîSize
+(
öt32_t
)
off£t
;

2104 
	}
}

	@unicode/brkiter.h

20 #i‚de‡
BRKITER_H


21 
	#BRKITER_H


	)

23 
	~"unicode/uty≥s.h
"

30 #i‡
UCONFIG_NO_BREAK_ITERATION


32 
U_NAMESPACE_BEGIN


38 
˛ass
 
	gBªakIãøt‹
;

40 
	gU_NAMESPACE_END


44 
	~"unicode/uobje˘.h
"

45 
	~"unicode/uni°r.h
"

46 
	~"unicode/ch¨ôî.h
"

47 
	~"unicode/locid.h
"

48 
	~"unicode/ubrk.h
"

49 
	~"unicode/°ªnum.h
"

50 
	~"unicode/uãxt.h
"

51 
	~"unicode/umisc.h
"

53 
U_NAMESPACE_BEGIN


100 ˛as†
	cU_COMMON_API
 
	mBªakIãøt‹
 : 
public
 
UObje˘
 {

101 
public
:

106 
vútuÆ
 ~
BªakIãøt‹
();

121 
vútuÆ
 
UBoﬁ
 
	m›î©‹
==(c⁄° 
BªakIãøt‹
&) const = 0;

129 
UBoﬁ
 
	m›î©‹
!=(c⁄° 
BªakIãøt‹
& 
rhs
Ëc⁄° {  !
›î©‹
==(rhs); }

136 
vútuÆ
 
BªakIãøt‹
* 
	$˛⁄e
() const = 0;

143 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const = 0;

149 
vútuÆ
 
Ch¨a˘îIãøt‹
& 
	$gëText
() const = 0;

166 
vútuÆ
 
UText
 *
	$gëUText
(
UText
 *
fûlIn
, 
UEº‹Code
 &
°©us
) const = 0;

174 
vútuÆ
 
	`£tText
(c⁄° 
UnicodeSåög
 &
ãxt
) = 0;

189 
vútuÆ
 
	`£tText
(
UText
 *
ãxt
, 
UEº‹Code
 &
°©us
) = 0;

199 
vútuÆ
 
	`ad›tText
(
Ch¨a˘îIãøt‹
* 
ô
) = 0;

207 
DONE
 = (
öt32_t
)-1

208 
	}
};

214 
vútuÆ
 
öt32_t
 
fú°
() = 0;

220 
vútuÆ
 
öt32_t
 
œ°
() = 0;

228 
vútuÆ
 
öt32_t
 
¥evious
() = 0;

236 
vútuÆ
 
öt32_t
 
√xt
() = 0;

243 
vútuÆ
 
öt32_t
 
	$cuºít
() const = 0;

253 
vútuÆ
 
öt32_t
 
	`fﬁlowög
(öt32_à
off£t
) = 0;

263 
vútuÆ
 
öt32_t
 
	`¥e˚dög
(öt32_à
off£t
) = 0;

273 
vútuÆ
 
UBoﬁ
 
	`isBound¨y
(
öt32_t
 
off£t
) = 0;

284 
vútuÆ
 
öt32_t
 
	`√xt
(öt32_à
n
) = 0;

305 
BªakIãøt‹
* 
U_EXPORT2


306 
	`¸óãW‹dIn°™˚
(c⁄° 
LoˇÀ
& 
whîe
, 
UEº‹Code
& 
°©us
);

329 
BªakIãøt‹
* 
U_EXPORT2


330 
	`¸óãLöeIn°™˚
(c⁄° 
LoˇÀ
& 
whîe
, 
UEº‹Code
& 
°©us
);

351 
BªakIãøt‹
* 
U_EXPORT2


352 
	`¸óãCh¨a˘îIn°™˚
(c⁄° 
LoˇÀ
& 
whîe
, 
UEº‹Code
& 
°©us
);

372 
BªakIãøt‹
* 
U_EXPORT2


373 
	`¸óãSíãn˚In°™˚
(c⁄° 
LoˇÀ
& 
whîe
, 
UEº‹Code
& 
°©us
);

397 
BªakIãøt‹
* 
U_EXPORT2


398 
	`¸óãTôÀIn°™˚
(c⁄° 
LoˇÀ
& 
whîe
, 
UEº‹Code
& 
°©us
);

409 c⁄° 
LoˇÀ
* 
U_EXPORT2
 
	`gëAvaûabÀLoˇÀs
(
öt32_t
& 
cou¡
);

420 
UnicodeSåög
& 
U_EXPORT2
 
	`gëDi•œyName
(c⁄° 
LoˇÀ
& 
obje˘LoˇÀ
,

421 c⁄° 
LoˇÀ
& 
di•œyLoˇÀ
,

422 
UnicodeSåög
& 
«me
);

432 
UnicodeSåög
& 
U_EXPORT2
 
	`gëDi•œyName
(c⁄° 
LoˇÀ
& 
obje˘LoˇÀ
,

433 
UnicodeSåög
& 
«me
);

452 
vútuÆ
 
BªakIãøt‹
 * 
	`¸óãBuf„rCl⁄e
(*
°ackBuf„r
,

453 
öt32_t
 &
Buf„rSize
,

454 
UEº‹Code
 &
°©us
) = 0;

462 
ölöe
 
UBoﬁ
 
	`isBuf„rCl⁄e
();

464 #i‡!
UCONFIG_NO_SERVICE


477 
URegi°ryKey
 
U_EXPORT2
 
	`ªgi°îIn°™˚
(
BªakIãøt‹
* 
toAd›t
,

478 c⁄° 
LoˇÀ
& 
loˇÀ
,

479 
UBªakIãøt‹Ty≥
 
köd
,

480 
UEº‹Code
& 
°©us
);

491 
UBoﬁ
 
U_EXPORT2
 
	`uƒegi°î
(
URegi°ryKey
 
key
, 
UEº‹Code
& 
°©us
);

499 
SåögEnumî©i⁄
* 
U_EXPORT2
 
	`gëAvaûabÀLoˇÀs
();

507 
LoˇÀ
 
	$gëLoˇÀ
(
ULocD©aLoˇÀTy≥
 
ty≥
, 
UEº‹Code
& 
°©us
) const;

515 c⁄° *
	$gëLoˇÀID
(
ULocD©aLoˇÀTy≥
 
ty≥
, 
UEº‹Code
& 
°©us
) const;

517 
¥iv©e
:

518 
BªakIãøt‹
* 
	`buûdIn°™˚
(c⁄° 
LoˇÀ
& 
loc
, c⁄° *
ty≥
, 
öt32_t
 
köd
, 
UEº‹Code
& 
°©us
);

519 
BªakIãøt‹
* 
	`¸óãIn°™˚
(c⁄° 
LoˇÀ
& 
loc
, 
öt32_t
 
köd
, 
UEº‹Code
& 
°©us
);

520 
BªakIãøt‹
* 
	`makeIn°™˚
(c⁄° 
LoˇÀ
& 
loc
, 
öt32_t
 
köd
, 
UEº‹Code
& 
°©us
);

522 
‰õnd
 
˛ass
 
ICUBªakIãøt‹Fa˘‹y
;

523 
‰õnd
 
˛ass
 
ICUBªakIãøt‹Sîvi˚
;

525 
¥Ÿe˘ed
:

527 
	`BªakIãøt‹
();

529 
UBoﬁ
 
fBuf„rCl⁄e
;

531 
	$BªakIãøt‹
 (c⁄° 
BªakIãøt‹
 &
Ÿhî
Ë: 
	`UObje˘
(Ÿhî), 
	$fBuf„rCl⁄e
(
FALSE
Ë{
	}
}

533 
	g¥iv©e
:

536 
a˘uÆLoˇÀ
[
ULOC_FULLNAME_CAPACITY
];

537 
	gvÆidLoˇÀ
[
ULOC_FULLNAME_CAPACITY
];

543 
	gBªakIãøt‹
& 
	g›î©‹
=(c⁄° 
BªakIãøt‹
&);

546 
ölöe
 
UBoﬁ
 
	gBªakIãøt‹
::
	$isBuf„rCl⁄e
()

548  
fBuf„rCl⁄e
;

549 
	}
}

551 
	gU_NAMESPACE_END


	@unicode/bytestream.h

30 #i‚de‡
__BYTESTREAM_H__


31 
	#__BYTESTREAM_H__


	)

38 
	~"unicode/uty≥s.h
"

39 
	~"unicode/uobje˘.h
"

40 
	~"unicode/°d_°rög.h
"

42 
U_NAMESPACE_BEGIN


48 ˛as†
	cU_COMMON_API
 
	mByãSök
 : 
public
 
UMem‹y
 {

49 
public
:

54 
	$ByãSök
() { }

59 
vútuÆ
 ~
	$ByãSök
(Ë{ 
	}
}

67 
vútuÆ
 
Aµíd
(c⁄° * 
byãs
, 
öt32_t
 
n
) = 0;

111 
vútuÆ
 * 
GëAµídBuf„r
(
öt32_t
 
mö_ˇ∑côy
,

112 
öt32_t
 
desúed_ˇ∑côy_höt
,

113 * 
s¸©ch
, 
öt32_t
 
s¸©ch_ˇ∑côy
,

114 
öt32_t
* 
ªsu…_ˇ∑côy
);

124 
vútuÆ
 
Flush
();

126 
	g¥iv©e
:

127 
ByãSök
(const ByteSink &);

128 
	gByãSök
 &
	g›î©‹
=(c⁄° 
ByãSök
 &);

143 ˛as†
	cU_COMMON_API
 
	mCheckedAºayByãSök
 : 
public
 
ByãSök
 {

144 
public
:

151 
CheckedAºayByãSök
(* 
outbuf
, 
öt32_t
 
ˇ∑côy
);

160 
vútuÆ
 
	mCheckedAºayByãSök
& 
Re£t
();

167 
vútuÆ
 
Aµíd
(c⁄° * 
byãs
, 
öt32_t
 
n
);

182 
vútuÆ
 * 
GëAµídBuf„r
(
öt32_t
 
mö_ˇ∑côy
,

183 
öt32_t
 
desúed_ˇ∑côy_höt
,

184 * 
s¸©ch
, 
öt32_t
 
s¸©ch_ˇ∑côy
,

185 
öt32_t
* 
ªsu…_ˇ∑côy
);

191 
öt32_t
 
	$NumbîOfByãsWrôãn
(Ëc⁄° {  
size_
; }

198 
UBoﬁ
 
	$OvîÊowed
(Ëc⁄° {  
ovîÊowed_
; 
	}
}

206 
öt32_t
 
	$NumbîOfByãsAµíded
(Ëc⁄° {  
≠≥nded_
; 
	}
}

207 
	g¥iv©e
:

208 * 
outbuf_
;

209 c⁄° 
öt32_t
 
	gˇ∑côy_
;

210 
öt32_t
 
	gsize_
;

211 
öt32_t
 
	g≠≥nded_
;

212 
UBoﬁ
 
	govîÊowed_
;

213 
CheckedAºayByãSök
();

214 
CheckedAºayByãSök
(const CheckedArrayByteSink &);

215 
	gCheckedAºayByãSök
 &
	g›î©‹
=(c⁄° 
CheckedAºayByãSök
 &);

218 #i‡
U_HAVE_STD_STRING


225 
	gãm∂©e
<
ty≥«me
 
	gSåögCœss
>

226 ˛as†
	cSåögByãSök
 : 
public
 
ByãSök
 {

227 
public
:

233 
	$SåögByãSök
(
SåögCœss
* 
de°
Ë: 
	$de°_
(
de°
) { }

240 
vútuÆ
 
	$Aµíd
(c⁄° * 
d©a
, 
öt32_t
 
n
Ë{ 
de°_
->
	`≠≥nd
(d©a,Ç); 
	}
}

241 
	g¥iv©e
:

242 
SåögCœss
* 
de°_
;

243 
SåögByãSök
();

244 
SåögByãSök
(const StringByteSink &);

245 
	gSåögByãSök
 &
	g›î©‹
=(c⁄° 
SåögByãSök
 &);

250 
	gU_NAMESPACE_END


	@unicode/caniter.h

8 #i‚de‡
CANITER_H


9 
	#CANITER_H


	)

11 
	~"unicode/uty≥s.h
"

13 #i‡!
UCONFIG_NO_NORMALIZATION


15 
	~"unicode/uobje˘.h
"

16 
	~"unicode/uni°r.h
"

27 #i‚de‡
CANITER_SKIP_ZEROES


28 
	#CANITER_SKIP_ZEROES
 
TRUE


	)

31 
U_NAMESPACE_BEGIN


33 
˛ass
 
	gHashèbÀ
;

34 
˛ass
 
	gN‹mÆizî2
;

35 
˛ass
 
	gN‹mÆizî2Im∂
;

72 ˛as†
	cU_COMMON_API
 
	mC™⁄iˇlIãøt‹
 : 
public
 
UObje˘
 {

73 
public
:

80 
C™⁄iˇlIãøt‹
(c⁄° 
UnicodeSåög
 &
sour˚
, 
UEº‹Code
 &
°©us
);

86 
	mvútuÆ
 ~
C™⁄iˇlIãøt‹
();

93 
UnicodeSåög
 
gëSour˚
();

99 
ª£t
();

108 
UnicodeSåög
 
√xt
();

117 
£tSour˚
(c⁄° 
UnicodeSåög
 &
√wSour˚
, 
UEº‹Code
 &
°©us
);

128 
U_EXPORT2
 
≥rmuã
(
UnicodeSåög
 &
sour˚
, 
UBoﬁ
 
skùZîos
, 
HashèbÀ
 *
ªsu…
, 
UEº‹Code
 &
°©us
);

135 
UCœssID
 
U_EXPORT2
 
gëSèticCœssID
();

142 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const;

144 
¥iv©e
:

147 
	`C™⁄iˇlIãøt‹
();

154 
	`C™⁄iˇlIãøt‹
(c⁄° 
C™⁄iˇlIãøt‹
& 
Ÿhî
);

160 
C™⁄iˇlIãøt‹
& 
›î©‹
=(c⁄° C™⁄iˇlIãøt‹& 
Ÿhî
);

163 
UnicodeSåög
 
sour˚
;

164 
UBoﬁ
 
d⁄e
;

168 
UnicodeSåög
 **
põ˚s
;

169 
öt32_t
 
põ˚s_Àngth
;

170 
öt32_t
 *
põ˚s_Àngths
;

173 
öt32_t
 *
cuºít
;

174 
öt32_t
 
cuºít_Àngth
;

177 
UnicodeSåög
 
buf„r
;

179 c⁄° 
N‹mÆizî2
 &
nfd
;

180 c⁄° 
N‹mÆizî2Im∂
 &
nfcIm∂
;

183 
UnicodeSåög
 *
	`gëEquivÆíts
(c⁄° UnicodeSåög &
£gmít
, 
öt32_t
 &
ªsu…_Àn
, 
UEº‹Code
 &
°©us
);

186 
HashèbÀ
 *
	`gëEquivÆíts2
(HashèbÀ *
fûlöResu…
, c⁄° 
UCh¨
 *
£gmít
, 
öt32_t
 
£gLí
, 
UEº‹Code
 &
°©us
);

195 
HashèbÀ
 *
	`exåa˘
(HashèbÀ *
fûlöResu…
, 
UCh¨32
 
comp
, c⁄° 
UCh¨
 *
£gmít
, 
öt32_t
 
£gLí
, i¡32_à
£gmítPos
, 
UEº‹Code
 &
°©us
);

198 
	`˛ónPõ˚s
();

202 
U_NAMESPACE_END


	@unicode/chariter.h

10 #i‚de‡
CHARITER_H


11 
	#CHARITER_H


	)

13 
	~"unicode/uty≥s.h
"

14 
	~"unicode/uobje˘.h
"

15 
	~"unicode/uni°r.h
"

21 
U_NAMESPACE_BEGIN


89 ˛as†
	cU_COMMON_API
 
	mF‹w¨dCh¨a˘îIãøt‹
 : 
public
 
UObje˘
 {

90 
public
:

96 íum { 
DONE
 = 0xffff };

102 
	gvútuÆ
 ~
F‹w¨dCh¨a˘îIãøt‹
();

112 
vútuÆ
 
UBoﬁ
 
	g›î©‹
==(c⁄° 
F‹w¨dCh¨a˘îIãøt‹
& 
th©
) const = 0;

124 
ölöe
 
UBoﬁ
 
	g›î©‹
!=(c⁄° 
F‹w¨dCh¨a˘îIãøt‹
& 
th©
) const;

131 
vútuÆ
 
öt32_t
 
	$hashCode
() const = 0;

140 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const = 0;

150 
vútuÆ
 
UCh¨
 
	`√xtPo°Inc
() = 0;

160 
vútuÆ
 
UCh¨32
 
	`√xt32Po°Inc
() = 0;

171 
vútuÆ
 
UBoﬁ
 
	`hasNext
() = 0;

173 
¥Ÿe˘ed
:

175 
	`F‹w¨dCh¨a˘îIãøt‹
();

178 
	`F‹w¨dCh¨a˘îIãøt‹
(c⁄° 
F‹w¨dCh¨a˘îIãøt‹
 &
Ÿhî
);

184 
F‹w¨dCh¨a˘îIãøt‹
 &
›î©‹
=(c⁄° F‹w¨dCh¨a˘îIãøt‹&Ë{  *
this
; 
	}
}

356 ˛as†
	cU_COMMON_API
 
	mCh¨a˘îIãøt‹
 : 
public
 
F‹w¨dCh¨a˘îIãøt‹
 {

357 
public
:

362 
	eEOrigö
 { 
kSèπ
, 
	mkCuºít
, 
	mkEnd
 };

372 
vútuÆ
 
Ch¨a˘îIãøt‹
* 
	$˛⁄e
() const = 0;

381 
vútuÆ
 
UCh¨
 
	`fú°
() = 0;

391 
vútuÆ
 
UCh¨
 
	`fú°Po°Inc
();

402 
vútuÆ
 
UCh¨32
 
	`fú°32
() = 0;

412 
vútuÆ
 
UCh¨32
 
	`fú°32Po°Inc
();

421 
ölöe
 
öt32_t
 
	`£tToSèπ
();

430 
vútuÆ
 
UCh¨
 
	`œ°
() = 0;

439 
vútuÆ
 
UCh¨32
 
	`œ°32
() = 0;

448 
ölöe
 
öt32_t
 
	`£tToEnd
();

458 
vútuÆ
 
UCh¨
 
	`£tIndex
(
öt32_t
 
posôi⁄
) = 0;

471 
vútuÆ
 
UCh¨32
 
	`£tIndex32
(
öt32_t
 
posôi⁄
) = 0;

478 
vútuÆ
 
UCh¨
 
	$cuºít
() const = 0;

485 
vútuÆ
 
UCh¨32
 
	$cuºít32
() const = 0;

494 
vútuÆ
 
UCh¨
 
	`√xt
() = 0;

506 
vútuÆ
 
UCh¨32
 
	`√xt32
() = 0;

515 
vútuÆ
 
UCh¨
 
	`¥evious
() = 0;

524 
vútuÆ
 
UCh¨32
 
	`¥evious32
() = 0;

535 
vútuÆ
 
UBoﬁ
 
	`hasPªvious
() = 0;

547 
ölöe
 
öt32_t
 
	$°¨tIndex
() const;

558 
ölöe
 
öt32_t
 
	$ídIndex
() const;

568 
ölöe
 
öt32_t
 
	$gëIndex
() const;

576 
ölöe
 
öt32_t
 
	$gëLígth
() const;

589 
vútuÆ
 
öt32_t
 
	`move
(öt32_à
dñè
, 
EOrigö
 
‹igö
) = 0;

602 
vútuÆ
 
öt32_t
 
	`move32
(öt32_à
dñè
, 
EOrigö
 
‹igö
) = 0;

610 
vútuÆ
 
	`gëText
(
UnicodeSåög
& 
ªsu…
) = 0;

612 
¥Ÿe˘ed
:

617 
	`Ch¨a˘îIãøt‹
();

623 
	`Ch¨a˘îIãøt‹
(
öt32_t
 
Àngth
);

629 
	`Ch¨a˘îIãøt‹
(
öt32_t
 
Àngth
, i¡32_à
posôi⁄
);

635 
	`Ch¨a˘îIãøt‹
(
öt32_t
 
Àngth
, i¡32_à
ãxtBegö
, i¡32_à
ãxtEnd
, i¡32_à
posôi⁄
);

643 
	`Ch¨a˘îIãøt‹
(c⁄° 
Ch¨a˘îIãøt‹
 &
th©
);

652 
Ch¨a˘îIãøt‹
 &
›î©‹
=(c⁄° Ch¨a˘îIãøt‹ &
th©
);

659 
öt32_t
 
ãxtLígth
;

665 
öt32_t
 
pos
;

671 
öt32_t
 
begö
;

677 
öt32_t
 
íd
;

678 
	}
};

680 
ölöe
 
UBoﬁ


681 
	gF‹w¨dCh¨a˘îIãøt‹
::
›î©‹
!=(c⁄° 
F‹w¨dCh¨a˘îIãøt‹
& 
th©
) const {

682  !
›î©‹
==(
th©
);

685 
ölöe
 
öt32_t


686 
	gCh¨a˘îIãøt‹
::
	$£tToSèπ
() {

687  
	`move
(0, 
kSèπ
);

688 
	}
}

690 
ölöe
 
öt32_t


691 
	gCh¨a˘îIãøt‹
::
	$£tToEnd
() {

692  
	`move
(0, 
kEnd
);

693 
	}
}

695 
ölöe
 
öt32_t


696 
	gCh¨a˘îIãøt‹
::
	$°¨tIndex
() const {

697  
begö
;

698 
	}
}

700 
ölöe
 
öt32_t


701 
	gCh¨a˘îIãøt‹
::
	$ídIndex
() const {

702  
íd
;

703 
	}
}

705 
ölöe
 
öt32_t


706 
	gCh¨a˘îIãøt‹
::
	$gëIndex
() const {

707  
pos
;

708 
	}
}

710 
ölöe
 
öt32_t


711 
	gCh¨a˘îIãøt‹
::
	$gëLígth
() const {

712  
ãxtLígth
;

713 
	}
}

715 
	gU_NAMESPACE_END


	@unicode/dbbi.h

11 #i‚de‡
DBBI_H


12 
	#DBBI_H


	)

14 
	~"unicode/rbbi.h
"

16 #i‡!
UCONFIG_NO_BREAK_ITERATION


23 
	gU_NAMESPACE_BEGIN


31 #i‚de‡
U_HIDE_DEPRECATED_API


33 
RuÀBa£dBªakIãøt‹
 
	tDi˘i⁄¨yBa£dBªakIãøt‹
;

37 
	gU_NAMESPACE_END


	@unicode/docmain.h

	@unicode/dtintrv.h

12 #i‚de‡
__DTINTRV_H__


13 
	#__DTINTRV_H__


	)

15 
	~"unicode/uty≥s.h
"

16 
	~"unicode/uobje˘.h
"

24 
U_NAMESPACE_BEGIN


32 ˛as†
	cU_COMMON_API
 
	mD©eI¡îvÆ
 : 
public
 
UObje˘
 {

33 
public
:

41 
D©eI¡îvÆ
(
UD©e
 
‰omD©e
, UD©ê
toD©e
);

47 
	mvútuÆ
 ~
D©eI¡îvÆ
();

54 
UD©e
 
	$gëFromD©e
() const;

61 
UD©e
 
	$gëToD©e
() const;

75 
UCœssID
 
U_EXPORT2
 
	`gëSèticCœssID
();

88 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const;

95 
	`D©eI¡îvÆ
(c⁄° 
D©eI¡îvÆ
& 
Ÿhî
);

101 
D©eI¡îvÆ
& 
›î©‹
=(const DateInterval&);

108 
vútuÆ
 
UBoﬁ
 
›î©‹
==(c⁄° 
D©eI¡îvÆ
& 
Ÿhî
) const;

115 
UBoﬁ
 
›î©‹
!=(c⁄° 
D©eI¡îvÆ
& 
Ÿhî
) const;

124 
vútuÆ
 
D©eI¡îvÆ
* 
	$˛⁄e
() const;

126 
¥iv©e
:

130 
	`D©eI¡îvÆ
();

132 
UD©e
 
‰omD©e
;

133 
UD©e
 
toD©e
;

138 
ölöe
 
UD©e


139 
D©eI¡îvÆ
::
	$gëFromD©e
() const {

140  
‰omD©e
;

141 
	}
}

144 
ölöe
 
UD©e


145 
	gD©eI¡îvÆ
::
	$gëToD©e
() const {

146  
toD©e
;

147 
	}
}

150 
ölöe
 
UBoﬁ


151 
	gD©eI¡îvÆ
::
›î©‹
!=(c⁄° 
D©eI¡îvÆ
& 
Ÿhî
) const {

152  ( !
›î©‹
==(
Ÿhî
) );

156 
	gU_NAMESPACE_END


	@unicode/errorcode.h

17 #i‚de‡
__ERRORCODE_H__


18 
	#__ERRORCODE_H__


	)

26 
	~"unicode/uty≥s.h
"

27 
	~"unicode/uobje˘.h
"

29 
U_NAMESPACE_BEGIN


79 ˛as†
	cU_COMMON_API
 
	mEº‹Code
: 
public
 
UMem‹y
 {

80 
public
:

85 
	$Eº‹Code
(Ë: 
	$îr‹Code
(
U_ZERO_ERROR
) {}

87 
vútuÆ
 ~
	$Eº‹Code
(Ë{
	}
}

89 
›î©‹
 
UEº‹Code
 & (Ë{  
îr‹Code
; }

91 
›î©‹
 
	gUEº‹Code
 * (Ë{  &
	gîr‹Code
; }

93 
UBoﬁ
 
	$isSuc˚ss
(Ëc⁄° {  
	`U_SUCCESS
(
îr‹Code
); 
	}
}

95 
UBoﬁ
 
	$isFaûuª
(Ëc⁄° {  
	`U_FAILURE
(
îr‹Code
); 
	}
}

97 
UEº‹Code
 
	$gë
(Ëc⁄° {  
îr‹Code
; 
	}
}

99 
	$£t
(
UEº‹Code
 
vÆue
Ë{ 
îr‹Code
=vÆue; 
	}
}

101 
UEº‹Code
 
ª£t
();

111 
	$as£πSuc˚ss
() const;

118 c⁄° * 
	$îr‹Name
() const;

120 
¥Ÿe˘ed
:

125 
UEº‹Code
 
îr‹Code
;

132 
vútuÆ
 
	$h™dÀFaûuª
(Ëc⁄° {
	}
}

135 
	gU_NAMESPACE_END


	@unicode/icudataver.h

10 #i‚de‡
__ICU_DATA_VER_H__


11 
	#__ICU_DATA_VER_H__


	)

13 
	~"unicode/uty≥s.h
"

18 
	#U_ICU_VERSION_BUNDLE
 "icuvî"

	)

23 
	#U_ICU_STD_BUNDLE
 "icu°d"

	)

28 
	#U_ICU_DATA_KEY
 "D©aVîsi⁄"

	)

45 
U_INTERNAL
 
UBoﬁ
 
U_EXPORT2
 
u_isD©aOldî
(
UVîsi⁄Info
 
d©aVîsi⁄Fûlö
, UBoﬁ *
isModifõdFûlö
, 
UEº‹Code
 *
°©us
);

55 
U_INTERNAL
 
U_EXPORT2
 
u_gëD©aVîsi⁄
(
UVîsi⁄Info
 
d©aVîsi⁄Fûlö
, 
UEº‹Code
 *
°©us
);

	@unicode/icuplug.h

105 #i‚de‡
ICUPLUG_H


106 
	#ICUPLUG_H


	)

108 
	~"unicode/uty≥s.h
"

120 
	gUPlugD©a
;

121 
UPlugD©a
 
	tUPlugD©a
;

130 
	#UPLUG_TOKEN
 0x54762486

	)

136 
	#UPLUG_NAME_MAX
 100

	)

145 
uöt32_t
 
	tUPlugTokíRëu∫
;

152 
	mUPLUG_REASON_QUERY
 = 0,

153 
	mUPLUG_REASON_LOAD
 = 1,

154 
	mUPLUG_REASON_UNLOAD
 = 2,

155 
UPLUG_REASON_COUNT


156 } 
	tUPlugRós⁄
;

167 
	mUPLUG_LEVEL_INVALID
 = 0,

168 
	mUPLUG_LEVEL_UNKNOWN
 = 1,

169 
	mUPLUG_LEVEL_LOW
 = 2,

170 
	mUPLUG_LEVEL_HIGH
 = 3,

171 
UPLUG_LEVEL_COUNT


172 } 
	tUPlugLevñ
;

181 
	$UPlugTokíRëu∫
 (
	tU_EXPORT2
 
	tUPlugE¡rypoöt
) (

182 
	tUPlugD©a
 *
	t∂ug
,

183 
	tUPlugRós⁄
 
	tªas⁄
,

184 
	tUEº‹Code
 *
	t°©us
);

196 
U_CAPI
 
U_EXPORT2


197 
	`u∂ug_£tPlugNoU∆ﬂd
(
UPlugD©a
 *
∂ug
, 
UBoﬁ
 
d⁄tU∆ﬂd
);

205 
U_CAPI
 
U_EXPORT2


206 
	`u∂ug_£tPlugLevñ
(
UPlugD©a
 *
∂ug
, 
UPlugLevñ
 
Àvñ
);

214 
U_CAPI
 
UPlugLevñ
 
U_EXPORT2


215 
	`u∂ug_gëPlugLevñ
(
UPlugD©a
 *
∂ug
);

224 
U_CAPI
 
UPlugLevñ
 
U_EXPORT2


225 
	`u∂ug_gëCuºítLevñ
();

233 
U_CAPI
 
UEº‹Code
 
U_EXPORT2


234 
	`u∂ug_gëPlugLﬂdSètus
(
UPlugD©a
 *
∂ug
);

242 
U_CAPI
 
U_EXPORT2


243 
	`u∂ug_£tPlugName
(
UPlugD©a
 *
∂ug
, c⁄° *
«me
);

251 
U_CAPI
 c⁄° * 
U_EXPORT2


252 
	`u∂ug_gëPlugName
(
UPlugD©a
 *
∂ug
);

260 
U_CAPI
 c⁄° * 
U_EXPORT2


261 
	`u∂ug_gëSymbﬁName
(
UPlugD©a
 *
∂ug
);

270 
U_CAPI
 c⁄° * 
U_EXPORT2


271 
	`u∂ug_gëLibøryName
(
UPlugD©a
 *
∂ug
, 
UEº‹Code
 *
°©us
);

280 
U_CAPI
 * 
U_EXPORT2


281 
	`u∂ug_gëLibøry
(
UPlugD©a
 *
∂ug
);

289 
U_CAPI
 * 
U_EXPORT2


290 
	`u∂ug_gëC⁄ãxt
(
UPlugD©a
 *
∂ug
);

298 
U_CAPI
 
U_EXPORT2


299 
	`u∂ug_£tC⁄ãxt
(
UPlugD©a
 *
∂ug
, *
c⁄ãxt
);

309 
U_CAPI
 c⁄° * 
U_EXPORT2


310 
	`u∂ug_gëC⁄figuøti⁄
(
UPlugD©a
 *
∂ug
);

327 
U_CAPI
 
UPlugD©a
* 
U_EXPORT2


328 
	`u∂ug_√xtPlug
(
UPlugD©a
 *
¥i‹
);

342 
U_CAPI
 
UPlugD©a
* 
U_EXPORT2


343 
	`u∂ug_lﬂdPlugFromE¡rypoöt
(
UPlugE¡rypoöt
 *
íåypoöt
, c⁄° *
c⁄fig
, 
UEº‹Code
 *
°©us
);

356 
U_CAPI
 
UPlugD©a
* 
U_EXPORT2


357 
	`u∂ug_lﬂdPlugFromLibøry
(c⁄° *
libName
, c⁄° *
sym
, c⁄° *
c⁄fig
, 
UEº‹Code
 *
°©us
);

366 
U_CAPI
 
U_EXPORT2


367 
	`u∂ug_ªmovePlug
(
UPlugD©a
 *
∂ug
, 
UEº‹Code
 *
°©us
);

	@unicode/idna.h

15 #i‚de‡
__IDNA_H__


16 
	#__IDNA_H__


	)

23 
	~"unicode/uty≥s.h
"

25 #i‡!
UCONFIG_NO_IDNA


27 
	~"unicode/byã°ªam.h
"

28 
	~"unicode/°rögpõ˚.h
"

29 
	~"unicode/uid«.h
"

30 
	~"unicode/uni°r.h
"

32 
U_NAMESPACE_BEGIN


34 
˛ass
 
U_COMMON_API
 
	gIDNAInfo
;

48 ˛as†
	cU_COMMON_API
 
	mIDNA
 : 
public
 
UObje˘
 {

49 
public
:

83 
IDNA
 *

84 
¸óãUTS46In°™˚
(
uöt32_t
 
›ti⁄s
, 
UEº‹Code
 &
îr‹Code
);

106 
vútuÆ
 
	mUnicodeSåög
 &

107 
	$œbñToASCII
(c⁄° 
UnicodeSåög
 &
œbñ
, UnicodeSåög &
de°
,

108 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const = 0;

128 
vútuÆ
 
UnicodeSåög
 &

129 
	$œbñToUnicode
(c⁄° 
UnicodeSåög
 &
œbñ
, UnicodeSåög &
de°
,

130 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const = 0;

152 
vútuÆ
 
UnicodeSåög
 &

153 
	$«meToASCII
(c⁄° 
UnicodeSåög
 &
«me
, UnicodeSåög &
de°
,

154 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const = 0;

174 
vútuÆ
 
UnicodeSåög
 &

175 
	$«meToUnicode
(c⁄° 
UnicodeSåög
 &
«me
, UnicodeSåög &
de°
,

176 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const = 0;

194 
vútuÆ
 

195 
	$œbñToASCII_UTF8
(c⁄° 
SåögPõ˚
 &
œbñ
, 
ByãSök
 &
de°
,

196 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const;

212 
vútuÆ
 

213 
	$œbñToUnicodeUTF8
(c⁄° 
SåögPõ˚
 &
œbñ
, 
ByãSök
 &
de°
,

214 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const;

230 
vútuÆ
 

231 
	$«meToASCII_UTF8
(c⁄° 
SåögPõ˚
 &
«me
, 
ByãSök
 &
de°
,

232 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const;

248 
vútuÆ
 

249 
	$«meToUnicodeUTF8
(c⁄° 
SåögPõ˚
 &
«me
, 
ByãSök
 &
de°
,

250 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const;

252 
¥iv©e
:

254 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const;

257 
˛ass
 
UTS46
;

264 ˛as†
	cU_COMMON_API
 
IDNAInfo
 : 
public
 
UMem‹y
 {

265 
public
:

270 
	$IDNAInfo
(Ë: 
	`îr‹s
(0), 
	`œbñEº‹s
(0), 
	`isTønsDiff
(
FALSE
), 
	`isBiDi
(FALSE), 
	$isOkBiDi
(
TRUE
) {}

276 
UBoﬁ
 
	$hasEº‹s
(Ëc⁄° {  
îr‹s
!=0; 
	}
}

283 
uöt32_t
 
	$gëEº‹s
(Ëc⁄° {  
îr‹s
; 
	}
}

297 
UBoﬁ
 
	$isTønsôi⁄ÆDif„ª¡
(Ëc⁄° {  
isTønsDiff
; 
	}
}

299 
	g¥iv©e
:

300 
‰õnd
 
˛ass
 
UTS46
;

302 
IDNAInfo
(c⁄° IDNAInfÿ&
Ÿhî
);

303 
	gIDNAInfo
 &
	g›î©‹
=(c⁄° 
IDNAInfo
 &
Ÿhî
);

305 
	$ª£t
() {

306 
îr‹s
=
œbñEº‹s
=0;

307 
isTønsDiff
=
FALSE
;

308 
isBiDi
=
FALSE
;

309 
isOkBiDi
=
TRUE
;

310 
	}
}

312 
uöt32_t
 
	gîr‹s
, 
	gœbñEº‹s
;

313 
UBoﬁ
 
	gisTønsDiff
;

314 
UBoﬁ
 
	gisBiDi
;

315 
UBoﬁ
 
	gisOkBiDi
;

318 
	gU_NAMESPACE_END


	@unicode/localpointer.h

17 #i‚de‡
__LOCALPOINTER_H__


18 
	#__LOCALPOINTER_H__


	)

39 
	~"unicode/uty≥s.h
"

41 #i‡
U_SHOW_CPLUSPLUS_API


43 
U_NAMESPACE_BEGIN


63 
	gãm∂©e
<
ty≥«me
 
	gT
>

64 ˛as†
	cLoˇlPoöãrBa£
 {

65 
	mpublic
:

71 
ex∂icô
 
	$LoˇlPoöãrBa£
(
T
 *
p
=
NULL
Ë: 
	$±r
(
p
) {}

77 ~
	$LoˇlPoöãrBa£
(Ë{ 
	}
}

83 
UBoﬁ
 
	$isNuŒ
(Ëc⁄° {  
±r
==
NULL
; 
	}
}

89 
UBoﬁ
 
	$isVÆid
(Ëc⁄° {  
±r
!=
NULL
; 
	}
}

97 
boﬁ
 
	g›î©‹
==(c⁄° 
T
 *
Ÿhî
Ëc⁄° {  
±r
==other; }

105 
boﬁ
 
	g›î©‹
!=(c⁄° 
T
 *
Ÿhî
Ëc⁄° {  
±r
!=other; }

111 
T
 *
	$gëAlüs
(Ëc⁄° {  
±r
; 
	}
}

117 
	gT
 &
	g›î©‹
*(Ëc⁄° {  *
	g±r
; }

123 
T
 *
	g›î©‹
->(Ëc⁄° {  
	g±r
; }

130 
T
 *
	$‹ph™
() {

131 
T
 *
p
=
±r
;

132 
±r
=
NULL
;

133  
p
;

134 
	}
}

142 
	$ad›tIn°ód
(
T
 *
p
) {

144 
±r
=
p
;

145 
	}
}

146 
	g¥Ÿe˘ed
:

147 
T
 *
±r
;

148 
	g¥iv©e
:

150 
boﬁ
 
›î©‹
==(c⁄° 
LoˇlPoöãrBa£
 &
Ÿhî
);

151 
boﬁ
 
	g›î©‹
!=(c⁄° 
LoˇlPoöãrBa£
 &
Ÿhî
);

153 
LoˇlPoöãrBa£
(c⁄° LoˇlPoöãrBa£ &
Ÿhî
);

154 
	g›î©‹
=(c⁄° 
LoˇlPoöãrBa£
 &
Ÿhî
);

156 * 
U_EXPORT2
 
›î©‹
 
√w
(
size_t
 
size
);

157 * 
U_EXPORT2
 
›î©‹
 
	g√w
[](
size_t
 
	gsize
);

158 #i‡
U_HAVE_PLACEMENT_NEW


159 * 
U_EXPORT2
 
›î©‹
 
√w
(
size_t
, *
±r
);

181 
	gãm∂©e
<
ty≥«me
 
	gT
>

182 
˛ass
 
	gLoˇlPoöãr
 : 
public
 
LoˇlPoöãrBa£
<
T
> {

183 
public
:

189 
ex∂icô
 
LoˇlPoöãr
(
T
 *
p
=
NULL
Ë: 
LoˇlPoöãrBa£
<T>(p) {}

194 ~
LoˇlPoöãr
() {

195 
dñëe
 
LoˇlPoöãrBa£
<
T
>::
±r
;

203 
ad›tIn°ód
(
T
 *
p
) {

204 
dñëe
 
	gLoˇlPoöãrBa£
<
	gT
>::
±r
;

205 
	gLoˇlPoöãrBa£
<
	gT
>::
±r
=
p
;

227 
	gãm∂©e
<
ty≥«me
 
	gT
>

228 
˛ass
 
	gLoˇlAºay
 : 
public
 
LoˇlPoöãrBa£
<
T
> {

229 
public
:

235 
ex∂icô
 
LoˇlAºay
(
T
 *
p
=
NULL
Ë: 
LoˇlPoöãrBa£
<T>(p) {}

240 ~
LoˇlAºay
() {

241 
dñëe
[] 
LoˇlPoöãrBa£
<
T
>::
±r
;

249 
ad›tIn°ód
(
T
 *
p
) {

250 
	gdñëe
[] 
	gLoˇlPoöãrBa£
<
	gT
>::
±r
;

251 
	gLoˇlPoöãrBa£
<
	gT
>::
±r
=
p
;

260 
	gT
 &
	g›î©‹
[](
±rdiff_t
 
	gi
Ëc⁄° {  
	gLoˇlPoöãrBa£
<T>::
±r
[
i
]; }

286 
	#U_DEFINE_LOCAL_OPEN_POINTER
(
LoˇlPoöãrCœssName
, 
Ty≥
, 
˛o£Fun˘i⁄
) \

287 
˛ass
 
LoˇlPoöãrCœssName
 : 
public
 
LoˇlPoöãrBa£
<
Ty≥
> { \

288 
public
: \

289 
ex∂icô
 
	`LoˇlPoöãrCœssName
(
Ty≥
 *
p
=
NULL
Ë: 
LoˇlPoöãrBa£
<Type>(p) {} \

290 ~
	`LoˇlPoöãrCœssName
(Ë{ 
	`˛o£Fun˘i⁄
(
±r
); } \

291 
	`ad›tIn°ód
(
Ty≥
 *
p
) { \

292 
	`˛o£Fun˘i⁄
(
±r
); \

293 
±r
=
p
; \

295 }

	)

297 
	gU_NAMESPACE_END


	@unicode/locid.h

29 #i‚de‡
LOCID_H


30 
	#LOCID_H


	)

32 
	~"unicode/uty≥s.h
"

33 
	~"unicode/uobje˘.h
"

34 
	~"unicode/uni°r.h
"

35 
	~"unicode/putû.h
"

36 
	~"unicode/uloc.h
"

37 
	~"unicode/°ªnum.h
"

180 
U_NAMESPACE_BEGIN


181 ˛as†
	cU_COMMON_API
 
	mLoˇÀ
 : 
public
 
UObje˘
 {

182 
public
:

184 c⁄° 
LoˇÀ
 &
U_EXPORT2
 
gëRoŸ
();

186 c⁄° 
	mLoˇÀ
 &
U_EXPORT2
 
gëEnglish
();

188 c⁄° 
	mLoˇÀ
 &
U_EXPORT2
 
gëFªnch
();

190 c⁄° 
	mLoˇÀ
 &
U_EXPORT2
 
gëGîm™
();

192 c⁄° 
	mLoˇÀ
 &
U_EXPORT2
 
gëIèlün
();

194 c⁄° 
	mLoˇÀ
 &
U_EXPORT2
 
gëJ≠™e£
();

196 c⁄° 
	mLoˇÀ
 &
U_EXPORT2
 
gëK‹ón
();

198 c⁄° 
	mLoˇÀ
 &
U_EXPORT2
 
gëChöe£
();

200 c⁄° 
	mLoˇÀ
 &
U_EXPORT2
 
gëSim∂ifõdChöe£
();

202 c⁄° 
	mLoˇÀ
 &
U_EXPORT2
 
gëTødôi⁄ÆChöe£
();

205 c⁄° 
	mLoˇÀ
 &
U_EXPORT2
 
gëFøn˚
();

207 c⁄° 
	mLoˇÀ
 &
U_EXPORT2
 
gëGîm™y
();

209 c⁄° 
	mLoˇÀ
 &
U_EXPORT2
 
gëIèly
();

211 c⁄° 
	mLoˇÀ
 &
U_EXPORT2
 
gëJ≠™
();

213 c⁄° 
	mLoˇÀ
 &
U_EXPORT2
 
gëK‹ó
();

215 c⁄° 
	mLoˇÀ
 &
U_EXPORT2
 
gëChöa
();

217 c⁄° 
	mLoˇÀ
 &
U_EXPORT2
 
gëPRC
();

219 c⁄° 
	mLoˇÀ
 &
U_EXPORT2
 
gëTaiw™
();

221 c⁄° 
	mLoˇÀ
 &
U_EXPORT2
 
gëUK
();

223 c⁄° 
	mLoˇÀ
 &
U_EXPORT2
 
gëUS
();

225 c⁄° 
	mLoˇÀ
 &
U_EXPORT2
 
gëC™ada
();

227 c⁄° 
	mLoˇÀ
 &
U_EXPORT2
 
gëC™adaFªnch
();

237 
LoˇÀ
();

263 
LoˇÀ
–c⁄° * 
œnguage
,

264 c⁄° * 
cou¡ry
 = 0,

265 c⁄° * 
v¨ü¡
 = 0,

266 c⁄° * 
keyw‹dsAndVÆues
 = 0);

274 
LoˇÀ
(c⁄° LoˇÀ& 
Ÿhî
);

281 
	mvútuÆ
 ~
LoˇÀ
() ;

290 
	mLoˇÀ
& 
	m›î©‹
=(c⁄° 
LoˇÀ
& 
Ÿhî
);

299 
UBoﬁ
 
	m›î©‹
==(c⁄° 
LoˇÀ
& 
Ÿhî
) const;

309 
UBoﬁ
 
	m›î©‹
!=(c⁄° 
LoˇÀ
& 
Ÿhî
) const;

322 
LoˇÀ
 *
	$˛⁄e
() const;

339 c⁄° 
LoˇÀ
& 
U_EXPORT2
 
	`gëDeÁu…
();

353 
U_EXPORT2
 
	`£tDeÁu…
(c⁄° 
LoˇÀ
& 
√wLoˇÀ
,

354 
UEº‹Code
& 
suc˚ss
);

365 
LoˇÀ
 
U_EXPORT2
 
	`¸óãFromName
(c⁄° *
«me
);

375 
LoˇÀ
 
U_EXPORT2
 
	`¸óãC™⁄iˇl
(c⁄° * 
«me
);

382 
ölöe
 c⁄° * 
	$gëL™guage
( ) const;

391 
ölöe
 c⁄° * 
	$gëS¸ùt
( ) const;

398 
ölöe
 c⁄° * 
	$gëCou¡ry
( ) const;

405 
ölöe
 c⁄° * 
	$gëV¨ü¡
( ) const;

415 
ölöe
 c⁄° * 
	$gëName
() const;

424 c⁄° * 
	$gëBa£Name
() const;

435 
SåögEnumî©i⁄
 * 
	$¸óãKeyw‹ds
(
UEº‹Code
 &
°©us
) const;

448 
öt32_t
 
	$gëKeyw‹dVÆue
(c⁄° * 
keyw‹dName
, *
buf„r
, 
öt32_t
 
buf„rC≠acôy
, 
UEº‹Code
 &
°©us
) const;

461 
	`£tKeyw‹dVÆue
(c⁄° * 
keyw‹dName
, c⁄° * 
keyw‹dVÆue
, 
UEº‹Code
 &
°©us
);

469 c⁄° * 
	$gëISO3L™guage
() const;

476 c⁄° * 
	$gëISO3Cou¡ry
() const;

485 
uöt32_t
 
	$gëLCID
() const;

496 
UnicodeSåög
& 
	$gëDi•œyL™guage
(
UnicodeSåög
& 
di•L™g
) const;

511 
UnicodeSåög
& 
	$gëDi•œyL™guage
–c⁄° 
LoˇÀ
& 
di•œyLoˇÀ
,

512 
UnicodeSåög
& 
di•L™g
) const;

523 
UnicodeSåög
& 
	$gëDi•œyS¸ùt
–
UnicodeSåög
& 
di•S¸ùt
) const;

539 
UnicodeSåög
& 
	$gëDi•œyS¸ùt
–c⁄° 
LoˇÀ
& 
di•œyLoˇÀ
,

540 
UnicodeSåög
& 
di•S¸ùt
) const;

551 
UnicodeSåög
& 
	$gëDi•œyCou¡ry
–
UnicodeSåög
& 
di•Cou¡ry
) const;

567 
UnicodeSåög
& 
	$gëDi•œyCou¡ry
–c⁄° 
LoˇÀ
& 
di•œyLoˇÀ
,

568 
UnicodeSåög
& 
di•Cou¡ry
) const;

577 
UnicodeSåög
& 
	$gëDi•œyV¨ü¡
–
UnicodeSåög
& 
di•V¨
) const;

587 
UnicodeSåög
& 
	$gëDi•œyV¨ü¡
–c⁄° 
LoˇÀ
& 
di•œyLoˇÀ
,

588 
UnicodeSåög
& 
di•V¨
) const;

601 
UnicodeSåög
& 
	$gëDi•œyName
–
UnicodeSåög
& 
«me
) const;

615 
UnicodeSåög
& 
	$gëDi•œyName
–c⁄° 
LoˇÀ
& 
di•œyLoˇÀ
,

616 
UnicodeSåög
& 
«me
) const;

622 
öt32_t
 
	$hashCode
() const;

632 
	`£tToBogus
();

639 
UBoﬁ
 
	$isBogus
() const;

649 c⁄° 
LoˇÀ
* 
U_EXPORT2
 
	`gëAvaûabÀLoˇÀs
(
öt32_t
& 
cou¡
);

659 c⁄° * c⁄°* 
U_EXPORT2
 
	`gëISOCou¡rõs
();

669 c⁄° * c⁄°* 
U_EXPORT2
 
	`gëISOL™guages
();

676 
UCœssID
 
U_EXPORT2
 
	`gëSèticCœssID
();

683 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const;

685 
¥Ÿe˘ed
:

690 
	`£tFromPOSIXID
(c⁄° *
posixID
);

692 
¥iv©e
:

699 
LoˇÀ
& 
	`öô
(c⁄° * 
cLoˇÀID
, 
UBoﬁ
 
ˇn⁄iˇlize
);

706 
	eELoˇÀTy≥
 {

707 
eBOGUS


709 
	`LoˇÀ
(
ELoˇÀTy≥
);

714 
LoˇÀ
 *
	`gëLoˇÀCache
();

716 
œnguage
[
ULOC_LANG_CAPACITY
];

717 
s¸ùt
[
ULOC_SCRIPT_CAPACITY
];

718 
cou¡ry
[
ULOC_COUNTRY_CAPACITY
];

719 
öt32_t
 
v¨ü¡Begö
;

720 * 
fuŒName
;

721 
fuŒNameBuf„r
[
ULOC_FULLNAME_CAPACITY
];

723 * 
ba£Name
;

724 
ba£NameBuf„r
[
ULOC_FULLNAME_CAPACITY
];

726 
UBoﬁ
 
fIsBogus
;

728 c⁄° 
LoˇÀ
 &
	`gëLoˇÀ
(
locid
);

734 
‰õnd
 
	`loˇÀ_£t_deÁu…_öã∫Æ
(const *);

735 
	}
};

737 
ölöe
 
UBoﬁ


738 
	gLoˇÀ
::
›î©‹
!=(c⁄° 
LoˇÀ
& 
Ÿhî
) const

740  !
›î©‹
==(
Ÿhî
);

743 
ölöe
 const *

744 
	gLoˇÀ
::
	$gëCou¡ry
() const

746  
cou¡ry
;

747 
	}
}

749 
ölöe
 const *

750 
	gLoˇÀ
::
	$gëL™guage
() const

752  
œnguage
;

753 
	}
}

755 
ölöe
 const *

756 
	gLoˇÀ
::
	$gëS¸ùt
() const

758  
s¸ùt
;

759 
	}
}

761 
ölöe
 const *

762 
	gLoˇÀ
::
	$gëV¨ü¡
() const

764 
	`gëBa£Name
();

765  &
ba£Name
[
v¨ü¡Begö
];

766 
	}
}

768 
ölöe
 const *

769 
	gLoˇÀ
::
	$gëName
() const

771  
fuŒName
;

772 
	}
}

774 
ölöe
 
UBoﬁ


775 
	gLoˇÀ
::
	$isBogus
() const {

776  
fIsBogus
;

777 
	}
}

779 
	gU_NAMESPACE_END


	@unicode/normalizer2.h

17 #i‚de‡
__NORMALIZER2_H__


18 
	#__NORMALIZER2_H__


	)

25 
	~"unicode/uty≥s.h
"

27 #i‡!
UCONFIG_NO_NORMALIZATION


29 
	~"unicode/uni£t.h
"

30 
	~"unicode/uni°r.h
"

31 
	~"unicode/un‹m2.h
"

33 
U_NAMESPACE_BEGIN


78 ˛as†
	cU_COMMON_API
 
	mN‹mÆizî2
 : 
public
 
UObje˘
 {

79 
public
:

101 c⁄° 
N‹mÆizî2
 *

102 
gëIn°™˚
(c⁄° *
∑ckageName
,

103 c⁄° *
«me
,

104 
UN‹mÆiz©i⁄2Mode
 
mode
,

105 
UEº‹Code
 &
îr‹Code
);

117 
UnicodeSåög


118 
	$n‹mÆize
(c⁄° 
UnicodeSåög
 &
§c
, 
UEº‹Code
 &
îr‹Code
) const {

119 
UnicodeSåög
 
ªsu…
;

120 
	`n‹mÆize
(
§c
, 
ªsu…
, 
îr‹Code
);

121  
ªsu…
;

136 
vútuÆ
 
UnicodeSåög
 &

137 
	$n‹mÆize
(c⁄° 
UnicodeSåög
 &
§c
,

138 
UnicodeSåög
 &
de°
,

139 
UEº‹Code
 &
îr‹Code
) const = 0;

154 
vútuÆ
 
UnicodeSåög
 &

155 
	$n‹mÆizeSec⁄dAndAµíd
(
UnicodeSåög
 &
fú°
,

156 c⁄° 
UnicodeSåög
 &
£c⁄d
,

157 
UEº‹Code
 &
îr‹Code
) const = 0;

172 
vútuÆ
 
UnicodeSåög
 &

173 
	$≠≥nd
(
UnicodeSåög
 &
fú°
,

174 c⁄° 
UnicodeSåög
 &
£c⁄d
,

175 
UEº‹Code
 &
îr‹Code
) const = 0;

187 
vútuÆ
 
UBoﬁ


188 
	$gëDecomposôi⁄
(
UCh¨32
 
c
, 
UnicodeSåög
 &
decomposôi⁄
) const = 0;

204 
vútuÆ
 
UBoﬁ


205 
	$isN‹mÆized
(c⁄° 
UnicodeSåög
 &
s
, 
UEº‹Code
 &
îr‹Code
) const = 0;

222 
vútuÆ
 
UN‹mÆiz©i⁄CheckResu…


223 
	$quickCheck
(c⁄° 
UnicodeSåög
 &
s
, 
UEº‹Code
 &
îr‹Code
) const = 0;

247 
vútuÆ
 
öt32_t


248 
	$•™QuickCheckYes
(c⁄° 
UnicodeSåög
 &
s
, 
UEº‹Code
 &
îr‹Code
) const = 0;

263 
vútuÆ
 
UBoﬁ
 
	$hasBound¨yBef‹e
(
UCh¨32
 
c
) const = 0;

279 
vútuÆ
 
UBoﬁ
 
	$hasBound¨yA·î
(
UCh¨32
 
c
) const = 0;

294 
vútuÆ
 
UBoﬁ
 
	$isI√π
(
UCh¨32
 
c
) const = 0;

296 
¥iv©e
:

298 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const;

299 
	}
};

312 ˛as†
	cU_COMMON_API
 
	mFûãªdN‹mÆizî2
 : 
public
 
N‹mÆizî2
 {

313 
public
:

324 
	$FûãªdN‹mÆizî2
(c⁄° 
N‹mÆizî2
 &
n2
, c⁄° 
UnicodeSë
 &
fûãrSë
) :

325 
	`n‹m2
(
n2
), 
	$£t
(
fûãrSë
) {}

340 
vútuÆ
 
UnicodeSåög
 &

341 
	$n‹mÆize
(c⁄° 
UnicodeSåög
 &
§c
,

342 
UnicodeSåög
 &
de°
,

343 
UEº‹Code
 &
îr‹Code
) const;

358 
vútuÆ
 
UnicodeSåög
 &

359 
	$n‹mÆizeSec⁄dAndAµíd
(
UnicodeSåög
 &
fú°
,

360 c⁄° 
UnicodeSåög
 &
£c⁄d
,

361 
UEº‹Code
 &
îr‹Code
) const;

376 
vútuÆ
 
UnicodeSåög
 &

377 
	$≠≥nd
(
UnicodeSåög
 &
fú°
,

378 c⁄° 
UnicodeSåög
 &
£c⁄d
,

379 
UEº‹Code
 &
îr‹Code
) const;

391 
vútuÆ
 
UBoﬁ


392 
	$gëDecomposôi⁄
(
UCh¨32
 
c
, 
UnicodeSåög
 &
decomposôi⁄
) const;

405 
vútuÆ
 
UBoﬁ


406 
	$isN‹mÆized
(c⁄° 
UnicodeSåög
 &
s
, 
UEº‹Code
 &
îr‹Code
) const;

418 
vútuÆ
 
UN‹mÆiz©i⁄CheckResu…


419 
	$quickCheck
(c⁄° 
UnicodeSåög
 &
s
, 
UEº‹Code
 &
îr‹Code
) const;

431 
vútuÆ
 
öt32_t


432 
	$•™QuickCheckYes
(c⁄° 
UnicodeSåög
 &
s
, 
UEº‹Code
 &
îr‹Code
) const;

442 
vútuÆ
 
UBoﬁ
 
	$hasBound¨yBef‹e
(
UCh¨32
 
c
) const;

452 
vútuÆ
 
UBoﬁ
 
	$hasBound¨yA·î
(
UCh¨32
 
c
) const;

461 
vútuÆ
 
UBoﬁ
 
	$isI√π
(
UCh¨32
 
c
) const;

462 
¥iv©e
:

463 
UnicodeSåög
 &

464 
	$n‹mÆize
(c⁄° 
UnicodeSåög
 &
§c
,

465 
UnicodeSåög
 &
de°
,

466 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
,

467 
UEº‹Code
 &
îr‹Code
) const;

469 
UnicodeSåög
 &

470 
	$n‹mÆizeSec⁄dAndAµíd
(
UnicodeSåög
 &
fú°
,

471 c⁄° 
UnicodeSåög
 &
£c⁄d
,

472 
UBoﬁ
 
doN‹mÆize
,

473 
UEº‹Code
 &
îr‹Code
) const;

475 c⁄° 
N‹mÆizî2
 &
n‹m2
;

476 c⁄° 
UnicodeSë
 &
£t
;

477 
	}
};

479 
	gU_NAMESPACE_END


	@unicode/normlzr.h

9 #i‚de‡
NORMLZR_H


10 
	#NORMLZR_H


	)

12 
	~"unicode/uty≥s.h
"

19 #i‡!
UCONFIG_NO_NORMALIZATION


21 
	~"unicode/ch¨ôî.h
"

22 
	~"unicode/n‹mÆizî2.h
"

23 
	~"unicode/uni°r.h
"

24 
	~"unicode/un‹m.h
"

25 
	~"unicode/uobje˘.h
"

27 
U_NAMESPACE_BEGIN


130 ˛as†
	cU_COMMON_API
 
	mN‹mÆizî
 : 
public
 
UObje˘
 {

131 
public
:

138 
DONE
=0xffff

153 
N‹mÆizî
(c⁄° 
UnicodeSåög
& 
°r
, 
UN‹mÆiz©i⁄Mode
 
mode
);

166 
N‹mÆizî
(c⁄° 
UCh¨
* 
°r
, 
öt32_t
 
Àngth
, 
UN‹mÆiz©i⁄Mode
 
mode
);

178 
N‹mÆizî
(c⁄° 
Ch¨a˘îIãøt‹
& 
ôî
, 
UN‹mÆiz©i⁄Mode
 
mode
);

185 
N‹mÆizî
(c⁄° N‹mÆizî& 
c›y
);

191 
	gvútuÆ
 ~
N‹mÆizî
();

212 
U_EXPORT2
 
n‹mÆize
(c⁄° 
UnicodeSåög
& 
sour˚
,

213 
UN‹mÆiz©i⁄Mode
 
mode
, 
öt32_t
 
›ti⁄s
,

214 
UnicodeSåög
& 
ªsu…
,

215 
UEº‹Code
 &
°©us
);

234 
U_EXPORT2
 
compo£
(c⁄° 
UnicodeSåög
& 
sour˚
,

235 
UBoﬁ
 
com∑t
, 
öt32_t
 
›ti⁄s
,

236 
UnicodeSåög
& 
ªsu…
,

237 
UEº‹Code
 &
°©us
);

256 
U_EXPORT2
 
decompo£
(c⁄° 
UnicodeSåög
& 
sour˚
,

257 
UBoﬁ
 
com∑t
, 
öt32_t
 
›ti⁄s
,

258 
UnicodeSåög
& 
ªsu…
,

259 
UEº‹Code
 &
°©us
);

281 
ölöe
 
UN‹mÆiz©i⁄CheckResu…


282 
quickCheck
(c⁄° 
UnicodeSåög
 &
sour˚
, 
UN‹mÆiz©i⁄Mode
 
mode
, 
UEº‹Code
 &
°©us
);

297 
UN‹mÆiz©i⁄CheckResu…


298 
quickCheck
(c⁄° 
UnicodeSåög
 &
sour˚
, 
UN‹mÆiz©i⁄Mode
 
mode
, 
öt32_t
 
›ti⁄s
, 
UEº‹Code
 &
°©us
);

320 
ölöe
 
UBoﬁ


321 
isN‹mÆized
(c⁄° 
UnicodeSåög
 &
§c
, 
UN‹mÆiz©i⁄Mode
 
mode
, 
UEº‹Code
 &
îr‹Code
);

338 
UBoﬁ


339 
isN‹mÆized
(c⁄° 
UnicodeSåög
 &
§c
, 
UN‹mÆiz©i⁄Mode
 
mode
, 
öt32_t
 
›ti⁄s
, 
UEº‹Code
 &
îr‹Code
);

370 
	gUnicodeSåög
 &

371 
U_EXPORT2
 
c⁄ˇã«ã
(
UnicodeSåög
 &
À·
, UnicodeSåög &
right
,

372 
UnicodeSåög
 &
ªsu…
,

373 
UN‹mÆiz©i⁄Mode
 
mode
, 
öt32_t
 
›ti⁄s
,

374 
UEº‹Code
 &
îr‹Code
);

440 
ölöe
 
öt32_t


441 
com∑ª
(c⁄° 
UnicodeSåög
 &
s1
, c⁄° UnicodeSåög &
s2
,

442 
uöt32_t
 
›ti⁄s
,

443 
UEº‹Code
 &
îr‹Code
);

457 
UCh¨32
 
cuºít
();

467 
UCh¨32
 
fú°
();

477 
UCh¨32
 
œ°
();

493 
UCh¨32
 
√xt
();

509 
UCh¨32
 
¥evious
();

520 
£tIndexO∆y
(
öt32_t
 
ödex
);

527 
ª£t
();

543 
öt32_t
 
	$gëIndex
() const;

553 
öt32_t
 
	$°¨tIndex
() const;

565 
öt32_t
 
	$ídIndex
() const;

575 
UBoﬁ
 
›î©‹
==(c⁄° 
N‹mÆizî
& 
th©
) const;

585 
ölöe
 
UBoﬁ
 
›î©‹
!=(c⁄° 
N‹mÆizî
& 
th©
) const;

593 
N‹mÆizî
* 
	$˛⁄e
() const;

601 
öt32_t
 
	$hashCode
() const;

622 
	`£tMode
(
UN‹mÆiz©i⁄Mode
 
√wMode
);

634 
UN‹mÆiz©i⁄Mode
 
	$gëUMode
() const;

652 
	`£tO±i⁄
(
öt32_t
 
›ti⁄
,

653 
UBoﬁ
 
vÆue
);

665 
UBoﬁ
 
	$gëO±i⁄
(
öt32_t
 
›ti⁄
) const;

675 
	`£tText
(c⁄° 
UnicodeSåög
& 
√wText
,

676 
UEº‹Code
 &
°©us
);

686 
	`£tText
(c⁄° 
Ch¨a˘îIãøt‹
& 
√wText
,

687 
UEº‹Code
 &
°©us
);

698 
	`£tText
(c⁄° 
UCh¨
* 
√wText
,

699 
öt32_t
 
Àngth
,

700 
UEº‹Code
 &
°©us
);

707 
	`gëText
(
UnicodeSåög
& 
ªsu…
);

714 
UCœssID
 
U_EXPORT2
 
	`gëSèticCœssID
();

721 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const;

723 
¥iv©e
:

728 
	`N‹mÆizî
();

729 
N‹mÆizî
 &
›î©‹
=(c⁄° N‹mÆizî &
th©
);

733 
UBoﬁ
 
	`√xtN‹mÆize
();

734 
UBoﬁ
 
	`¥eviousN‹mÆize
();

736 
	`öô
();

737 
	`˛órBuf„r
();

743 
FûãªdN‹mÆizî2
*
fFûãªdN‹m2
;

744 c⁄° 
N‹mÆizî2
 *
fN‹m2
;

745 
UN‹mÆiz©i⁄Mode
 
fUMode
;

746 
öt32_t
 
fO±i⁄s
;

749 
Ch¨a˘îIãøt‹
 *
ãxt
;

753 
öt32_t
 
cuºítIndex
, 
√xtIndex
;

756 
UnicodeSåög
 
buf„r
;

757 
öt32_t
 
buf„rPos
;

758 
	}
};

764 
ölöe
 
UBoﬁ


765 
	gN‹mÆizî
::
›î©‹
!(c⁄° 
N‹mÆizî
& 
Ÿhî
) const

766 {  ! 
›î©‹
==(
Ÿhî
); }

768 
ölöe
 
UN‹mÆiz©i⁄CheckResu…


769 
	gN‹mÆizî
::
	$quickCheck
(c⁄° 
UnicodeSåög
& 
sour˚
,

770 
UN‹mÆiz©i⁄Mode
 
mode
,

771 
UEº‹Code
 &
°©us
) {

772  
	`quickCheck
(
sour˚
, 
mode
, 0, 
°©us
);

773 
	}
}

775 
ölöe
 
UBoﬁ


776 
	gN‹mÆizî
::
	$isN‹mÆized
(c⁄° 
UnicodeSåög
& 
sour˚
,

777 
UN‹mÆiz©i⁄Mode
 
mode
,

778 
UEº‹Code
 &
°©us
) {

779  
	`isN‹mÆized
(
sour˚
, 
mode
, 0, 
°©us
);

780 
	}
}

782 
ölöe
 
öt32_t


783 
	gN‹mÆizî
::
	$com∑ª
(c⁄° 
UnicodeSåög
 &
s1
, c⁄° UnicodeSåög &
s2
,

784 
uöt32_t
 
›ti⁄s
,

785 
UEº‹Code
 &
îr‹Code
) {

787  
	`un‹m_com∑ª
(
s1
.
	`gëBuf„r
(), s1.
	`Àngth
(),

788 
s2
.
	`gëBuf„r
(), s2.
	`Àngth
(),

789 
›ti⁄s
,

790 &
îr‹Code
);

791 
	}
}

793 
	gU_NAMESPACE_END


	@unicode/parseerr.h

11 #i‚de‡
PARSEERR_H


12 
	#PARSEERR_H


	)

14 
	~"unicode/uty≥s.h
"

25 íum { 
	mU_PARSE_CONTEXT_LEN
 = 16 };

56 
	sUP¨£Eº‹
 {

65 
öt32_t
 
	mlöe
;

74 
öt32_t
 
	moff£t
;

81 
UCh¨
 
	m¥eC⁄ãxt
[
U_PARSE_CONTEXT_LEN
];

88 
UCh¨
 
	mpo°C⁄ãxt
[
U_PARSE_CONTEXT_LEN
];

90 } 
	tUP¨£Eº‹
;

	@unicode/parsepos.h

16 #i‚de‡
PARSEPOS_H


17 
	#PARSEPOS_H


	)

19 
	~"unicode/uty≥s.h
"

20 
	~"unicode/uobje˘.h
"

23 
U_NAMESPACE_BEGIN


47 ˛as†
	cU_COMMON_API
 
	mP¨£Posôi⁄
 : 
public
 
UObje˘
 {

48 
public
:

53 
	$P¨£Posôi⁄
()

54 : 
	`UObje˘
(),

55 
	`ödex
(0),

56 
	`îr‹Index
(-1)

64 
	$P¨£Posôi⁄
(
öt32_t
 
√wIndex
)

65 : 
	`UObje˘
(),

66 
	`ödex
(
√wIndex
),

67 
	`îr‹Index
(-1)

68 {
	}
}

75 
	$P¨£Posôi⁄
(c⁄° 
P¨£Posôi⁄
& 
c›y
)

76 : 
	`UObje˘
(
c›y
),

77 
	`ödex
(
c›y
.
ödex
),

78 
	$îr‹Index
(
c›y
.
îr‹Index
)

79 {
	}
}

85 
	gvútuÆ
 ~
P¨£Posôi⁄
();

91 
	gP¨£Posôi⁄
& 
	g›î©‹
=(c⁄° 
P¨£Posôi⁄
& 
c›y
);

98 
UBoﬁ
 
	g›î©‹
==(c⁄° 
P¨£Posôi⁄
& 
th©
) const;

105 
UBoﬁ
 
	g›î©‹
!=(c⁄° 
P¨£Posôi⁄
& 
th©
) const;

118 
P¨£Posôi⁄
 *
	$˛⁄e
() const;

127 
öt32_t
 
	$gëIndex
() const;

134 
	`£tIndex
(
öt32_t
 
ödex
);

143 
	`£tEº‹Index
(
öt32_t
 
ei
);

150 
öt32_t
 
	$gëEº‹Index
() const;

157 
UCœssID
 
U_EXPORT2
 
	`gëSèticCœssID
();

164 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const;

166 
¥iv©e
:

173 
öt32_t
 
ödex
;

178 
öt32_t
 
îr‹Index
;

180 
	}
};

182 
ölöe
 
	gP¨£Posôi⁄
&

183 
	gP¨£Posôi⁄
::
›î©‹
=(c⁄° 
P¨£Posôi⁄
& 
c›y
)

185 
ödex
 = 
c›y
.index;

186 
	gîr‹Index
 = 
c›y
.
îr‹Index
;

187  *
	gthis
;

190 
ölöe
 
UBoﬁ


191 
	gP¨£Posôi⁄
::
›î©‹
==(c⁄° 
P¨£Posôi⁄
& 
c›y
) const

193 if(
ödex
 !
c›y
.ödex || 
îr‹Index
 != copy.errorIndex)

194  
FALSE
;

196  
	gTRUE
;

199 
ölöe
 
UBoﬁ


200 
	gP¨£Posôi⁄
::
›î©‹
!=(c⁄° 
P¨£Posôi⁄
& 
c›y
) const

202  !
›î©‹
==(
c›y
);

205 
ölöe
 
öt32_t


206 
	gP¨£Posôi⁄
::
	$gëIndex
() const

208  
ödex
;

209 
	}
}

211 
ölöe
 

212 
	gP¨£Posôi⁄
::
	$£tIndex
(
öt32_t
 
off£t
)

214 
this
->
ödex
 = 
off£t
;

215 
	}
}

217 
ölöe
 
öt32_t


218 
	gP¨£Posôi⁄
::
	$gëEº‹Index
() const

220  
îr‹Index
;

221 
	}
}

223 
ölöe
 

224 
	gP¨£Posôi⁄
::
	$£tEº‹Index
(
öt32_t
 
ei
)

226 
this
->
îr‹Index
 = 
ei
;

227 
	}
}

228 
	gU_NAMESPACE_END


	@unicode/platform.h

23 #i‚de‡
_PLATFORM_H


24 
	#_PLATFORM_H


	)

32 #i‡
deföed
(
UVERNUM_H
)

33 #îr‹ 
Do
 
nŸ
 
ö˛ude
 
unicode
/
uvînum
.
h
 
bef‹e
 #ö˛udög unicode/
∂©f‹m
.h. 
In°ód
 
of
 unicode/uvînum.h, #ö˛udêunicode/
uvîsi⁄
.h

40 #i‚de‡
UCLN_NO_AUTO_CLEANUP


41 
	#UCLN_NO_AUTO_CLEANUP
 1

	)

45 #i‚de‡
CYGWINMSVC


48 #i‚de‡
U_LINUX


49 
	#U_LINUX


	)

57 #i‚de‡
U_HAVE_DIRENT_H


58 
	#U_HAVE_DIRENT_H
 1

	)

62 #i‚de‡
U_HAVE_INTTYPES_H


63 
	#U_HAVE_INTTYPES_H
 1

	)

80 #i‚de‡
U_IOSTREAM_SOURCE


81 
	#U_IOSTREAM_SOURCE
 199711

	)

92 #ifde‡
HAVE_ANDROID_OS


93 
	#U_HAVE_STD_STRING
 0

	)

95 #i‚de‡
U_HAVE_STD_STRING


96 
	#U_HAVE_STD_STRING
 1

	)

101 #i‚de‡
U_HAVE_INT8_T


102 
	#U_HAVE_INT8_T
 1

	)

105 #i‚de‡
U_HAVE_UINT8_T


106 
	#U_HAVE_UINT8_T
 1

	)

109 #i‚de‡
U_HAVE_INT16_T


110 
	#U_HAVE_INT16_T
 1

	)

113 #i‚de‡
U_HAVE_UINT16_T


114 
	#U_HAVE_UINT16_T
 1

	)

117 #i‚de‡
U_HAVE_INT32_T


118 
	#U_HAVE_INT32_T
 1

	)

121 #i‚de‡
U_HAVE_UINT32_T


122 
	#U_HAVE_UINT32_T
 1

	)

125 #i‚de‡
U_HAVE_INT64_T


126 
	#U_HAVE_INT64_T
 1

	)

129 #i‚de‡
U_HAVE_UINT64_T


130 
	#U_HAVE_UINT64_T
 1

	)

140 #i‚de‡
U_HAVE_NAMESPACE


141 
	#U_HAVE_NAMESPACE
 1

	)

147 #i‡
deföed
(
BYTE_ORDER
Ë&& deföed(
BIG_ENDIAN
)

148 
	#U_IS_BIG_ENDIAN
 (
BYTE_ORDER
 =
BIG_ENDIAN
)

	)

150 
	#U_IS_BIG_ENDIAN
 0

	)

154 #i‚de‡
ICU_USE_THREADS


155 
	#ICU_USE_THREADS
 1

	)

159 #i‡
deföed
(
__GNUC__
Ë&& (deföed(
__i386__
Ë|| deföed(
__x86_64__
))

160 
	#UMTX_STRONG_MEMORY_MODEL
 1

	)

163 #i‚de‡
U_DEBUG


164 
	#U_DEBUG
 1

	)

167 #i‚de‡
U_RELEASE


168 
	#U_RELEASE
 0

	)

173 #i‚de‡
U_DISABLE_RENAMING


174 
	#U_DISABLE_RENAMING
 0

	)

178 #i‚de‡
U_OVERRIDE_CXX_ALLOCATION


179 
	#U_OVERRIDE_CXX_ALLOCATION
 1

	)

182 #i‚de‡
U_HAVE_PLACEMENT_NEW


183 
	#U_HAVE_PLACEMENT_NEW
 1

	)

187 #i‚de‡
U_ENABLE_TRACING


188 
	#U_ENABLE_TRACING
 0

	)

195 #i‚de‡
U_ENABLE_DYLOAD


196 
	#U_ENABLE_DYLOAD
 1

	)

203 #i‚de‡
U_CHECK_DYLOAD


204 
	#U_CHECK_DYLOAD
 1

	)

209 #i‚de‡
U_DEFAULT_SHOW_DRAFT


210 
	#U_DEFAULT_SHOW_DRAFT
 1

	)

219 #i‡((
deföed
(
OS390
Ë&& (!deföed(
__CHARSET_LIB
Ë|| !__CHARSET_LIB))Ë|| deföed(
OS400
)

220 
	#U_CHARSET_FAMILY
 1

	)

234 #ifde‡
HAVE_ANDROID_OS


235 
	#U_HAVE_WCHAR_H
 0

	)

236 
	#U_SIZEOF_WCHAR_T
 1

	)

238 
	#U_HAVE_WCSCPY
 0

	)

242 #i‚de‡
U_HAVE_WCHAR_H


243 
	#U_HAVE_WCHAR_H
 1

	)

246 #i‚de‡
U_SIZEOF_WCHAR_T


247 
	#U_SIZEOF_WCHAR_T
 4

	)

250 #i‚de‡
U_HAVE_WCSCPY


251 
	#U_HAVE_WCSCPY
 1

	)

268 #i‚de‡
U_GNUC_UTF16_STRING


269 
	#U_GNUC_UTF16_STRING
 0

	)

271 #i‡1 || 
deföed
(
U_CHECK_UTF16_STRING
)

272 #i‡(
deföed
(
__xlC__
Ë&& deföed(
__IBM_UTF_LITERAL
Ë&& 
U_SIZEOF_WCHAR_T
 != 2) \

273 || (
deföed
(
__HP_aCC
Ë&& 
	g__HP_aCC
 >= 035000) \

274 || (
deföed
(
__HP_cc
) && __HP_cc >= 111106) \

275 || 
U_GNUC_UTF16_STRING


276 
	#U_DECLARE_UTF16
(
°rög
Ë
u
 ## 
	)
string

277 #ñi‡(
deföed
(
__SUNPRO_CC
) && __SUNPRO_CC >= 0x550)

280 
	#U_DECLARE_UTF16
(
°rög
Ë
U
 ## 
	)
string

281 #ñi‡
U_SIZEOF_WCHAR_T
 == 2 \

282 && (
U_CHARSET_FAMILY
 =0 || ((
deföed
(
OS390
Ë|| deföed(
OS400
)Ë&& 
	$deföed
(
__UCS2__
)))

283 
	#U_DECLARE_UTF16
(
°rög
Ë
L
 ## 
	)
string

296 #i‡!
HAVE_ANDROID_OS


297 
	#U_HAVE_NL_LANGINFO
 1

	)

299 #i‚de‡
U_HAVE_NL_LANGINFO_CODESET


300 
	#U_HAVE_NL_LANGINFO_CODESET
 0

	)

305 #i‚de‡
U_NL_LANGINFO_CODESET


306 
	#U_NL_LANGINFO_CODESET
 
CODESET


	)

309 #i‡!
HAVE_ANDROID_OS


311 
	#U_TZSET
 
tz£t


	)

314 
	#U_TIMEZONE
 
__timez⁄e


	)

317 
	#U_TZNAME
 
tz«me


	)

321 
	#U_HAVE_MMAP
 1

	)

322 
	#U_HAVE_POPEN
 1

	)

331 
	#U_EXPORT
 
	`__©åibuã__
((
	`visibûôy
("deÁu…")))

	)

332 #ñi‡(
	`deföed
(
__SUNPRO_CC
) && __SUNPRO_CC >= 0x550) \

333 || (
	`deföed
(
__SUNPRO_C
) && __SUNPRO_C >= 0x550)

334 
	#U_EXPORT
 
__globÆ


	)

338 
	#U_EXPORT


	)

342 
	#U_EXPORT2


	)

345 #i‡
	`deföed
(
U_CYGWIN
Ë&& !deföed(
__GNUC__
)

346 
	#U_IMPORT
 
	`__de˛•ec
(
dŒimp‹t
)

	)

348 
	#U_IMPORT


	)

357 #i‚de‡
U_INLINE


358 #ifde‡
__˝lu•lus


359 
	#U_INLINE
 
ölöe


	)

361 
	#U_INLINE
 
__ölöe__


	)

365 #i‚de‡
U_ALIGN_CODE


366 
	#U_ALIGN_CODE
(
n
)

	)

376 #i‡!
	`deföed
(
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4
)

377 
	#U_HAVE_GCC_ATOMICS
 0

	)

385 #i‚de‡
U_HAVE_GCC_ATOMICS


386 
	#U_HAVE_GCC_ATOMICS
 1

	)

399 #i‚de‡
U_MAKE


400 
	#U_MAKE
 "make"

	)

415 
	#U_LIB_SUFFIX_C_NAME


	)

420 
	#U_LIB_SUFFIX_C_NAME_STRING
 ""

	)

425 
	#U_HAVE_LIB_SUFFIX
 0

	)

427 #i‡
U_HAVE_LIB_SUFFIX


428 #i‚de‡
U_ICU_ENTRY_POINT_RENAME


430 
	#U_ICU_ENTRY_POINT_RENAME
(
x
Ëx ## 
_
 ## 46 ##

	)

431 
	#U_DEF_ICUDATA_ENTRY_POINT
(
maj‹
, 
mö‹
Ë
icudt
####maj‹##mö‹##
_d©


	)

	@unicode/ppalmos.h

16 #i‚de‡
U_PPALMOS_H


17 
	#U_PPALMOS_H


	)

25 #i‚de‡
U_PALMOS


26 
	#U_PALMOS


	)

30 #i‡
deföed
(
_MSC_VER
)

31 
	#U_INT64_IS_LONG_LONG
 0

	)

33 
	#U_INT64_IS_LONG_LONG
 1

	)

37 #i‚de‡
U_HAVE_INTTYPES_H


38 
	#U_HAVE_INTTYPES_H
 1

	)

55 #i‚de‡
U_IOSTREAM_SOURCE


56 
	#U_IOSTREAM_SOURCE
 199711

	)

60 #i‚de‡
U_HAVE_INT8_T


61 
	#U_HAVE_INT8_T
 
U_HAVE_INTTYPES_H


	)

64 #i‚de‡
U_HAVE_UINT8_T


65 
	#U_HAVE_UINT8_T
 
U_HAVE_INTTYPES_H


	)

68 #i‚de‡
U_HAVE_INT16_T


69 
	#U_HAVE_INT16_T
 
U_HAVE_INTTYPES_H


	)

72 #i‚de‡
U_HAVE_UINT16_T


73 
	#U_HAVE_UINT16_T
 
U_HAVE_INTTYPES_H


	)

76 #i‚de‡
U_HAVE_INT32_T


77 
	#U_HAVE_INT32_T
 
U_HAVE_INTTYPES_H


	)

80 #i‚de‡
U_HAVE_UINT32_T


81 
	#U_HAVE_UINT32_T
 
U_HAVE_INTTYPES_H


	)

84 #i‚de‡
U_HAVE_INT64_T


85 
	#U_HAVE_INT64_T
 
U_HAVE_INTTYPES_H


	)

88 #i‚de‡
U_HAVE_UINT64_T


89 
	#U_HAVE_UINT64_T
 
U_HAVE_INTTYPES_H


	)

99 #i‡
U_HAVE_INTTYPES_H


100 
	~<öây≥s.h
>

103 #i‡! 
U_HAVE_INT8_T


104 sig√d 
	töt8_t
;

107 #i‡! 
U_HAVE_UINT8_T


108 
	tuöt8_t
;

111 #i‡! 
U_HAVE_INT16_T


112 sig√d 
	töt16_t
;

115 #i‡! 
U_HAVE_UINT16_T


116 
	tuöt16_t
;

119 #i‡! 
U_HAVE_INT32_T


120 sig√d 
	töt32_t
;

123 #i‡! 
U_HAVE_UINT32_T


124 
	tuöt32_t
;

127 #i‡! 
U_HAVE_INT64_T


128 #i‡
U_INT64_IS_LONG_LONG


129 sig√d 
	töt64_t
;

131 sig√d 
	t__öt64
 
	töt64_t
;

135 #i‡! 
U_HAVE_UINT64_T


136 #i‡
U_INT64_IS_LONG_LONG


137 
	tuöt64_t
;

139 
	t__öt64
 
	tuöt64_t
;

149 #i‚de‡
U_HAVE_NAMESPACE


150 
	#U_HAVE_NAMESPACE
 1

	)

154 
	#U_IS_BIG_ENDIAN
 0

	)

157 
	#ICU_USE_THREADS
 1

	)

159 #i‚de‡
U_DEBUG


160 #ifde‡
_DEBUG


161 
	#U_DEBUG
 1

	)

163 
	#U_DEBUG
 0

	)

167 #i‚de‡
U_RELEASE


168 #ifde‡
NDEBUG


169 
	#U_RELEASE
 1

	)

171 
	#U_RELEASE
 0

	)

177 #i‚de‡
U_DISABLE_RENAMING


178 
	#U_DISABLE_RENAMING
 0

	)

182 #i‚de‡
U_OVERRIDE_CXX_ALLOCATION


183 
	#U_OVERRIDE_CXX_ALLOCATION
 1

	)

186 #i‚de‡
U_HAVE_PLACEMENT_NEW


187 
	#U_HAVE_PLACEMENT_NEW
 0

	)

190 #i‡!
deföed
(
U_HAVE_DEBUG_LOCATION_NEW
Ë&& deföed(
_MSC_VER
)

191 
	#U_HAVE_DEBUG_LOCATION_NEW
 0

	)

195 #i‚de‡
U_ENABLE_TRACING


196 
	#U_ENABLE_TRACING
 1

	)

200 #i‚de‡
U_DEFAULT_SHOW_DRAFT


201 
	#U_DEFAULT_SHOW_DRAFT
 1

	)

205 
	#U_HAVE_LIB_SUFFIX
 0

	)

206 
	#U_LIB_SUFFIX_C_NAME


	)

207 
	#U_LIB_SUFFIX_C_NAME_STRING
 ""

	)

213 
	#U_HAVE_WCHAR_H
 1

	)

214 
	#U_SIZEOF_WCHAR_T
 2

	)

216 
	#U_HAVE_WCSCPY
 0

	)

225 
	#U_TZSET
 
_tz£t


	)

228 
	#U_TIMEZONE
 
_timez⁄e


	)

231 
	#U_TZNAME
 
_tz«me


	)

234 
	#U_HAVE_MMAP
 0

	)

235 
	#U_HAVE_POPEN
 0

	)

241 
	#U_EXPORT


	)

242 
	#U_EXPORT2


	)

243 
	#U_IMPORT


	)

249 #i‚de‡
U_INLINE


250 #ifde‡
__˝lu•lus


251 
	#U_INLINE
 
ölöe


	)

253 
	#U_INLINE
 
__ölöe


	)

257 #i‡
deföed
(
_MSC_VER
Ë&& deföed(
_M_IX86
)

258 
	#U_ALIGN_CODE
(
vÆ
Ë
__asm
 
Æign
 
	)
vÆ

260 
	#U_ALIGN_CODE
(
vÆ
)

	)

268 #i‚de‡
U_MAKE


269 
	#U_MAKE
 "nmake"

	)

270 
	#U_MAKE_IS_NMAKE
 1

	)

	@unicode/ptypes.h

20 #i‚de‡
_PTYPES_H


21 
	#_PTYPES_H


	)

23 
	~<sys/ty≥s.h
>

25 
	~"unicode/∂©f‹m.h
"

33 #i‡
U_HAVE_INTTYPES_H


39 #ifde‡
OS390


41 
	~<„©uªs.h
>

42 #i‡! 
U_HAVE_INT8_T


43 sig√d 
	töt8_t
;

45 #i‡!
deföed
(
__uöt8_t
)

46 
	#__uöt8_t
 1

	)

47 
	tuöt8_t
;

51 
	~<öây≥s.h
>

55 #i‡! 
U_HAVE_INT8_T


56 sig√d 
	töt8_t
;

59 #i‡! 
U_HAVE_UINT8_T


60 
	tuöt8_t
;

63 #i‡! 
U_HAVE_INT16_T


64 sig√d 
	töt16_t
;

67 #i‡! 
U_HAVE_UINT16_T


68 
	tuöt16_t
;

71 #i‡! 
U_HAVE_INT32_T


72 sig√d 
	töt32_t
;

75 #i‡! 
U_HAVE_UINT32_T


76 
	tuöt32_t
;

79 #i‡! 
U_HAVE_INT64_T


80 sig√d 
	töt64_t
;

84 #i‡! 
U_HAVE_UINT64_T


85 
	tuöt64_t
;

	@unicode/putil.h

24 #i‚de‡
PUTIL_H


25 
	#PUTIL_H


	)

27 
	~"unicode/uty≥s.h
"

35 #i‚de‡
IEEE_754


36 
	#IEEE_754
 1

	)

73 
U_STABLE
 c⁄° * 
U_EXPORT2
 
u_gëD©aDúe˘‹y
();

94 
U_STABLE
 
U_EXPORT2
 
u_£tD©aDúe˘‹y
(c⁄° *
dúe˘‹y
);

96 #i‡!
U_CHARSET_IS_UTF8


105 
U_INTERNAL
 c⁄° * 
U_EXPORT2
 
u¥v_gëDeÁu…Codïage
();

117 
U_INTERNAL
 c⁄° * 
U_EXPORT2
 
u¥v_gëDeÁu…LoˇÀID
();

125 #ifde‡
XP_MAC


126 
	#U_FILE_SEP_CHAR
 ':'

	)

127 
	#U_FILE_ALT_SEP_CHAR
 ':'

	)

128 
	#U_PATH_SEP_CHAR
 ';'

	)

129 
	#U_FILE_SEP_STRING
 ":"

	)

130 
	#U_FILE_ALT_SEP_STRING
 ":"

	)

131 
	#U_PATH_SEP_STRING
 ";"

	)

132 #ñi‡
deföed
(
U_WINDOWS
)

133 
	#U_FILE_SEP_CHAR
 '\\'

	)

134 
	#U_FILE_ALT_SEP_CHAR
 '/'

	)

135 
	#U_PATH_SEP_CHAR
 ';'

	)

136 
	#U_FILE_SEP_STRING
 "\\"

	)

137 
	#U_FILE_ALT_SEP_STRING
 "/"

	)

138 
	#U_PATH_SEP_STRING
 ";"

	)

140 
	#U_FILE_SEP_CHAR
 '/'

	)

141 
	#U_FILE_ALT_SEP_CHAR
 '/'

	)

142 
	#U_PATH_SEP_CHAR
 ':'

	)

143 
	#U_FILE_SEP_STRING
 "/"

	)

144 
	#U_FILE_ALT_SEP_STRING
 "/"

	)

145 
	#U_PATH_SEP_STRING
 ":"

	)

168 
U_STABLE
 
U_EXPORT2


169 
u_ch¨sToUCh¨s
(c⁄° *
cs
, 
UCh¨
 *
us
, 
öt32_t
 
Àngth
);

190 
U_STABLE
 
U_EXPORT2


191 
u_UCh¨sToCh¨s
(c⁄° 
UCh¨
 *
us
, *
cs
, 
öt32_t
 
Àngth
);

	@unicode/pwin32.h

25 #i‚de‡
U_WINDOWS


26 
	#U_WINDOWS


	)

29 #i‡
deföed
(
__BORLANDC__
)

30 
	#U_HAVE_PLACEMENT_NEW
 0

	)

31 
	#__STDC_CONSTANT_MACROS


	)

35 #i‡
deföed
(
_MSC_VER
)

36 
	#U_INT64_IS_LONG_LONG
 0

	)

38 
	#U_INT64_IS_LONG_LONG
 1

	)

42 #i‚de‡
U_HAVE_INTTYPES_H


43 #i‡
deföed
(
__BORLANDC__
Ë|| deföed(
__MINGW32__
)

44 
	#U_HAVE_INTTYPES_H
 1

	)

46 
	#U_HAVE_INTTYPES_H
 0

	)

64 #i‚de‡
U_IOSTREAM_SOURCE


65 
	#U_IOSTREAM_SOURCE
 199711

	)

70 #i‚de‡
U_HAVE_INT8_T


71 
	#U_HAVE_INT8_T
 
U_HAVE_INTTYPES_H


	)

74 #i‚de‡
U_HAVE_UINT8_T


75 
	#U_HAVE_UINT8_T
 
U_HAVE_INTTYPES_H


	)

78 #i‚de‡
U_HAVE_INT16_T


79 
	#U_HAVE_INT16_T
 
U_HAVE_INTTYPES_H


	)

82 #i‚de‡
U_HAVE_UINT16_T


83 
	#U_HAVE_UINT16_T
 
U_HAVE_INTTYPES_H


	)

86 #i‚de‡
U_HAVE_INT32_T


87 
	#U_HAVE_INT32_T
 
U_HAVE_INTTYPES_H


	)

90 #i‚de‡
U_HAVE_UINT32_T


91 
	#U_HAVE_UINT32_T
 
U_HAVE_INTTYPES_H


	)

94 #i‚de‡
U_HAVE_INT64_T


95 
	#U_HAVE_INT64_T
 
U_HAVE_INTTYPES_H


	)

98 #i‚de‡
U_HAVE_UINT64_T


99 
	#U_HAVE_UINT64_T
 
U_HAVE_INTTYPES_H


	)

105 #i‡!
U_INT64_IS_LONG_LONG


106 #i‚de‡
INT64_C


107 
	#INT64_C
(
x
Ë((
öt64_t
)x)

	)

109 #i‚de‡
UINT64_C


110 
	#UINT64_C
(
x
Ë((
uöt64_t
)x)

	)

122 #i‡
U_HAVE_INTTYPES_H


123 
	~<öây≥s.h
>

126 #i‡! 
U_HAVE_INT8_T


127 sig√d 
	töt8_t
;

130 #i‡! 
U_HAVE_UINT8_T


131 
	tuöt8_t
;

134 #i‡! 
U_HAVE_INT16_T


135 sig√d 
	töt16_t
;

138 #i‡! 
U_HAVE_UINT16_T


139 
	tuöt16_t
;

142 #i‡! 
U_HAVE_INT32_T


143 sig√d 
	töt32_t
;

146 #i‡! 
U_HAVE_UINT32_T


147 
	tuöt32_t
;

150 #i‡! 
U_HAVE_INT64_T


151 #i‡
U_INT64_IS_LONG_LONG


152 sig√d 
	töt64_t
;

154 sig√d 
	t__öt64
 
	töt64_t
;

158 #i‡! 
U_HAVE_UINT64_T


159 #i‡
U_INT64_IS_LONG_LONG


160 
	tuöt64_t
;

162 
	t__öt64
 
	tuöt64_t
;

176 #i‚de‡
U_HAVE_NAMESPACE


177 
	#U_HAVE_NAMESPACE
 1

	)

181 
	#U_IS_BIG_ENDIAN
 0

	)

184 #i‚de‡
ICU_USE_THREADS


185 
	#ICU_USE_THREADS
 1

	)

189 #i‚de‡
UCLN_NO_AUTO_CLEANUP


190 
	#UCLN_NO_AUTO_CLEANUP
 1

	)

198 #i‡
deföed
(
_M_IX86
Ë|| deföed(
_M_AMD64
Ë|| deföed(
_M_X64
Ë|| (deföed(
__GNUC__
Ë&& (deföed(
__i386__
Ë|| deföed(
__x86_64__
)))

199 
	#UMTX_STRONG_MEMORY_MODEL
 1

	)

203 #i‚de‡
U_DEBUG


204 #ifde‡
_DEBUG


205 
	#U_DEBUG
 1

	)

207 
	#U_DEBUG
 0

	)

212 #i‚de‡
U_RELEASE


213 #ifde‡
NDEBUG


214 
	#U_RELEASE
 1

	)

216 
	#U_RELEASE
 0

	)

222 #i‚de‡
U_DISABLE_RENAMING


223 
	#U_DISABLE_RENAMING
 0

	)

227 #i‚de‡
U_OVERRIDE_CXX_ALLOCATION


228 
	#U_OVERRIDE_CXX_ALLOCATION
 1

	)

231 #i‚de‡
U_HAVE_PLACEMENT_NEW


232 
	#U_HAVE_PLACEMENT_NEW
 1

	)

235 #i‡!
deföed
(
U_HAVE_DEBUG_LOCATION_NEW
Ë&& deföed(
_MSC_VER
)

236 
	#U_HAVE_DEBUG_LOCATION_NEW
 1

	)

240 #i‚de‡
U_ENABLE_TRACING


241 
	#U_ENABLE_TRACING
 0

	)

245 #i‚de‡
U_DEFAULT_SHOW_DRAFT


246 
	#U_DEFAULT_SHOW_DRAFT
 1

	)

250 #i‚de‡
U_HAVE_LIB_SUFFIX


251 
	#U_HAVE_LIB_SUFFIX
 0

	)

253 #i‚de‡
U_LIB_SUFFIX_C_NAME


254 
	#U_LIB_SUFFIX_C_NAME


	)

256 #i‚de‡
U_LIB_SUFFIX_C_NAME_STRING


257 
	#U_LIB_SUFFIX_C_NAME_STRING
 ""

	)

265 
	#U_HAVE_WCHAR_H
 1

	)

266 
	#U_SIZEOF_WCHAR_T
 2

	)

268 
	#U_HAVE_WCSCPY
 1

	)

279 
	#U_DECLARE_UTF16
(
°rög
Ë
L
 ## 
	)
°rög

290 
	#U_TZSET
 
_tz£t


	)

296 
	#U_TIMEZONE
 
_timez⁄e


	)

302 
	#U_TZNAME
 
_tz«me


	)

308 
	#U_DAYLIGHT
 
_daylight


	)

311 
	#U_HAVE_MMAP
 0

	)

312 
	#U_HAVE_POPEN
 0

	)

314 #i‚de‡
U_ENABLE_DYLOAD


315 
	#U_ENABLE_DYLOAD
 1

	)

325 #ifde‡
U_STATIC_IMPLEMENTATION


326 
	#U_EXPORT


	)

328 
	#U_EXPORT
 
	`__de˛•ec
(
dŒexp‹t
)

	)

330 
	#U_EXPORT2
 
__cde˛


	)

331 
	#U_IMPORT
 
	`__de˛•ec
(
dŒimp‹t
)

	)

338 #i‚de‡
U_INLINE


339 #ifde‡
__˝lu•lus


340 
	#U_INLINE
 
ölöe


	)

342 
	#U_INLINE
 
__ölöe


	)

346 #i‡
deföed
(
_MSC_VER
Ë&& deföed(
_M_IX86
Ë&& !deföed(
_MANAGED
)

347 
	#U_ALIGN_CODE
(
vÆ
Ë
__asm
 
Æign
 
	)
vÆ

349 
	#U_ALIGN_CODE
(
vÆ
)

	)

355 #i‡
deföed
(
_MSC_VER
) && (_MSC_VER < 1400)

356 
	#U_HAVE_MSVC_2003_OR_EARLIER


	)

366 #i‚de‡
U_MAKE


367 
	#U_MAKE
 "nmake"

	)

368 
	#U_MAKE_IS_NMAKE
 1

	)

	@unicode/rbbi.h

14 #i‚de‡
RBBI_H


15 
	#RBBI_H


	)

17 
	~"unicode/uty≥s.h
"

24 #i‡!
UCONFIG_NO_BREAK_ITERATION


26 
	~"unicode/brkôî.h
"

27 
	~"unicode/ud©a.h
"

28 
	~"unicode/∑r£îr.h
"

29 
	~"unicode/schrôî.h
"

30 
	~"unicode/uchrôî.h
"

33 
	gUTrõ
;

35 
U_NAMESPACE_BEGIN


38 
	gRBBID©aHódî
;

39 
˛ass
 
	gRuÀBa£dBªakIãøt‹TabÀs
;

40 
˛ass
 
	gBªakIãøt‹
;

41 
˛ass
 
	gRBBID©aWøµî
;

42 
˛ass
 
	gUSèck
;

43 
˛ass
 
	gL™guageBªakEngöe
;

44 
˛ass
 
	gUnh™dÀdEngöe
;

45 
	gRBBISèãTabÀ
;

65 ˛as†
	cU_COMMON_API
 
	mRuÀBa£dBªakIãøt‹
 : 
public
 
BªakIãøt‹
 {

67 
¥Ÿe˘ed
:

72 
UText
 *
fText
;

79 
Ch¨a˘îIãøt‹
 *
	mfCh¨Iãr
;

86 
SåögCh¨a˘îIãøt‹
 *
	mfSCh¨Iãr
;

93 
UCh¨Ch¨a˘îIãøt‹
 *
	mfDCh¨Iãr
;

99 
RBBID©aWøµî
 *
	mfD©a
;

104 
öt32_t
 
	mfLa°RuÀSètusIndex
;

112 
UBoﬁ
 
	mfLa°SètusIndexVÆid
;

119 
uöt32_t
 
	mfDi˘i⁄¨yCh¨Cou¡
;

128 
öt32_t
* 
	mfCachedBªakPosôi⁄s
;

134 
öt32_t
 
	mfNumCachedBªakPosôi⁄s
;

141 
öt32_t
 
	mfPosôi⁄InCache
;

150 
USèck
 *
	mfL™guageBªakEngöes
;

159 
Unh™dÀdEngöe
 *
	mfUnh™dÀdBªakEngöe
;

166 
öt32_t
 
	mfBªakTy≥
;

168 
	m¥Ÿe˘ed
:

181 
	eED⁄tAd›t
 {

182 
kD⁄tAd›t


195 
RuÀBa£dBªakIãøt‹
(
RBBID©aHódî
* 
d©a
, 
UEº‹Code
 &
°©us
);

205 
RuÀBa£dBªakIãøt‹
(c⁄° 
RBBID©aHódî
* 
d©a
, 
ED⁄tAd›t
 
d⁄tAd›t
, 
UEº‹Code
 &
°©us
);

208 
‰õnd
 
˛ass
 
	gRBBIRuÀBuûdî
;

210 
‰õnd
 
˛ass
 
	gBªakIãøt‹
;

214 
	gpublic
:

220 
RuÀBa£dBªakIãøt‹
();

228 
RuÀBa£dBªakIãøt‹
(c⁄° RuÀBa£dBªakIãøt‹& 
th©
);

238 
RuÀBa£dBªakIãøt‹
–c⁄° 
UnicodeSåög
 &
ruÀs
,

239 
UP¨£Eº‹
 &
∑r£Eº‹
,

240 
UEº‹Code
 &
°©us
);

255 
RuÀBa£dBªakIãøt‹
(
UD©aMem‹y
* 
image
, 
UEº‹Code
 &
°©us
);

261 
	gvútuÆ
 ~
RuÀBa£dBªakIãøt‹
();

270 
	gRuÀBa£dBªakIãøt‹
& 
	g›î©‹
=(c⁄° 
RuÀBa£dBªakIãøt‹
& 
th©
);

280 
vútuÆ
 
UBoﬁ
 
	g›î©‹
==(c⁄° 
BªakIãøt‹
& 
th©
) const;

289 
UBoﬁ
 
	g›î©‹
!=(c⁄° 
BªakIãøt‹
& 
th©
) const;

301 
vútuÆ
 
BªakIãøt‹
* 
	$˛⁄e
() const;

308 
vútuÆ
 
öt32_t
 
	$hashCode
() const;

315 
vútuÆ
 c⁄° 
UnicodeSåög
& 
	$gëRuÀs
() const;

346 
vútuÆ
 
Ch¨a˘îIãøt‹
& 
	$gëText
() const;

363 
vútuÆ
 
UText
 *
	$gëUText
(
UText
 *
fûlIn
, 
UEº‹Code
 &
°©us
) const;

372 
vútuÆ
 
	`ad›tText
(
Ch¨a˘îIãøt‹
* 
√wText
);

380 
vútuÆ
 
	`£tText
(c⁄° 
UnicodeSåög
& 
√wText
);

395 
vútuÆ
 
	`£tText
(
UText
 *
ãxt
, 
UEº‹Code
 &
°©us
);

402 
vútuÆ
 
öt32_t
 
	`fú°
();

409 
vútuÆ
 
öt32_t
 
	`œ°
();

421 
vútuÆ
 
öt32_t
 
	`√xt
(öt32_à
n
);

428 
vútuÆ
 
öt32_t
 
	`√xt
();

435 
vútuÆ
 
öt32_t
 
	`¥evious
();

444 
vútuÆ
 
öt32_t
 
	`fﬁlowög
(öt32_à
off£t
);

453 
vútuÆ
 
öt32_t
 
	`¥e˚dög
(öt32_à
off£t
);

463 
vútuÆ
 
UBoﬁ
 
	`isBound¨y
(
öt32_t
 
off£t
);

470 
vútuÆ
 
öt32_t
 
	$cuºít
() const;

505 
vútuÆ
 
öt32_t
 
	$gëRuÀSètus
() const;

530 
vútuÆ
 
öt32_t
 
	`gëRuÀSètusVec
(öt32_à*
fûlInVec
, i¡32_à
ˇ∑côy
, 
UEº‹Code
 &
°©us
);

543 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const;

556 
UCœssID
 
U_EXPORT2
 
	`gëSèticCœssID
();

582 
vútuÆ
 
BªakIãøt‹
 * 
	`¸óãBuf„rCl⁄e
(*
°ackBuf„r
,

583 
öt32_t
 &
Buf„rSize
,

584 
UEº‹Code
 &
°©us
);

604 
vútuÆ
 c⁄° 
uöt8_t
 *
	`gëBö¨yRuÀs
(
uöt32_t
 &
Àngth
);

607 
¥Ÿe˘ed
:

616 
vútuÆ
 
	`ª£t
();

627 
vútuÆ
 
UBoﬁ
 
	`isDi˘i⁄¨yCh¨
(
UCh¨32
);

633 
vútuÆ
 
öt32_t
 
	$gëBªakTy≥
() const;

640 
vútuÆ
 
	`£tBªakTy≥
(
öt32_t
 
ty≥
);

647 
	`öô
();

649 
¥iv©e
:

660 
öt32_t
 
	`h™dÀPªvious
(c⁄° 
RBBISèãTabÀ
 *
°©ëabÀ
);

671 
öt32_t
 
	`h™dÀNext
(c⁄° 
RBBISèãTabÀ
 *
°©ëabÀ
);

673 
¥Ÿe˘ed
:

689 
öt32_t
 
	`checkDi˘i⁄¨y
(öt32_à
°¨tPos
, i¡32_à
ídPos
, 
UBoﬁ
 
ªvî£
);

691 
¥iv©e
:

699 c⁄° 
L™guageBªakEngöe
 *
	`gëL™guageBªakEngöe
(
UCh¨32
 
c
);

704 
	`makeRuÀSètusVÆid
();

706 
	}
};

714 
ölöe
 
UBoﬁ
 
	gRuÀBa£dBªakIãøt‹
::
›î©‹
!=(c⁄° 
BªakIãøt‹
& 
th©
) const {

715  !
›î©‹
==(
th©
);

718 
	gU_NAMESPACE_END


	@unicode/rep.h

14 #i‚de‡
REP_H


15 
	#REP_H


	)

17 
	~"unicode/uobje˘.h
"

24 
U_NAMESPACE_BEGIN


26 
˛ass
 
	gUnicodeSåög
;

71 ˛as†
	cU_COMMON_API
 
	mRïœ˚abÀ
 : 
public
 
UObje˘
 {

73 
public
:

78 
vútuÆ
 ~
Rïœ˚abÀ
();

85 
ölöe
 
öt32_t
 
	$Àngth
() const;

94 
ölöe
 
UCh¨
 
	$ch¨At
(
öt32_t
 
off£t
) const;

108 
ölöe
 
UCh¨32
 
	$ch¨32At
(
öt32_t
 
off£t
) const;

120 
vútuÆ
 
	$exåa˘Bëwìn
(
öt32_t
 
°¨t
,

121 
öt32_t
 
limô
,

122 
UnicodeSåög
& 
èrgë
) const = 0;

144 
vútuÆ
 
	`h™dÀRïœ˚Bëwìn
(
öt32_t
 
°¨t
,

145 
öt32_t
 
limô
,

146 c⁄° 
UnicodeSåög
& 
ãxt
) = 0;

172 
vútuÆ
 
	`c›y
(
öt32_t
 
°¨t
, i¡32_à
limô
, i¡32_à
de°
) = 0;

183 
vútuÆ
 
UBoﬁ
 
	$hasMëaD©a
() const;

200 
vútuÆ
 
Rïœ˚abÀ
 *
	$˛⁄e
() const;

202 
¥Ÿe˘ed
:

208 
	`Rïœ˚abÀ
();

225 
vútuÆ
 
öt32_t
 
	$gëLígth
() const = 0;

231 
vútuÆ
 
UCh¨
 
	$gëCh¨At
(
öt32_t
 
off£t
) const = 0;

237 
vútuÆ
 
UCh¨32
 
	$gëCh¨32At
(
öt32_t
 
off£t
) const = 0;

240 
ölöe
 
öt32_t


241 
Rïœ˚abÀ
::
	$Àngth
() const {

242  
	`gëLígth
();

243 
	}
}

245 
ölöe
 
UCh¨


246 
	gRïœ˚abÀ
::
	$ch¨At
(
öt32_t
 
off£t
) const {

247  
	`gëCh¨At
(
off£t
);

248 
	}
}

250 
ölöe
 
UCh¨32


251 
	gRïœ˚abÀ
::
	$ch¨32At
(
öt32_t
 
off£t
) const {

252  
	`gëCh¨32At
(
off£t
);

253 
	}
}

257 
	gU_NAMESPACE_END


	@unicode/resbund.h

46 #i‚de‡
RESBUND_H


47 
	#RESBUND_H


	)

49 
	~"unicode/uty≥s.h
"

50 
	~"unicode/uobje˘.h
"

51 
	~"unicode/uªs.h
"

52 
	~"unicode/uni°r.h
"

53 
	~"unicode/locid.h
"

60 
U_NAMESPACE_BEGIN


78 ˛as†
	cU_COMMON_API
 
	mResour˚BundÀ
 : 
public
 
UObje˘
 {

79 
public
:

106 
Resour˚BundÀ
(c⁄° 
UnicodeSåög
& 
∑ckageName
,

107 c⁄° 
LoˇÀ
& 
loˇÀ
,

108 
UEº‹Code
& 
îr
);

121 
Resour˚BundÀ
(c⁄° 
UnicodeSåög
& 
∑ckageName
,

122 
UEº‹Code
& 
îr
);

130 
Resour˚BundÀ
(
UEº‹Code
 &
îr
);

146 
Resour˚BundÀ
(c⁄° * 
∑ckageName
,

147 c⁄° 
LoˇÀ
& 
loˇÀ
,

148 
UEº‹Code
& 
îr
);

156 
Resour˚BundÀ
(c⁄° Resour˚BundÀ &
‹igöÆ
);

167 
Resour˚BundÀ
(
UResour˚BundÀ
 *
ªs
,

168 
UEº‹Code
 &
°©us
);

176 
	mResour˚BundÀ
&

177 
	m›î©‹
=(c⁄° 
Resour˚BundÀ
& 
Ÿhî
);

182 
	mvútuÆ
 ~
Resour˚BundÀ
();

195 
Resour˚BundÀ
 *
	$˛⁄e
() const;

207 
öt32_t


208 
	$gëSize
() const;

220 
UnicodeSåög


221 
	$gëSåög
(
UEº‹Code
& 
°©us
) const;

235 c⁄° 
uöt8_t
*

236 
	$gëBö¨y
(
öt32_t
& 
Àn
, 
UEº‹Code
& 
°©us
) const;

250 c⁄° 
öt32_t
*

251 
	$gëI¡Ve˘‹
(
öt32_t
& 
Àn
, 
UEº‹Code
& 
°©us
) const;

264 
uöt32_t


265 
	$gëUI¡
(
UEº‹Code
& 
°©us
) const;

278 
öt32_t


279 
	$gëI¡
(
UEº‹Code
& 
°©us
) const;

287 
UBoﬁ


288 
	$hasNext
() const;

296 
	`ª£tIãøt‹
();

306 
	$gëKey
() const;

316 
	$gëName
() const;

325 
UResTy≥


326 
	$gëTy≥
() const;

335 
Resour˚BundÀ


336 
	`gëNext
(
UEº‹Code
& 
°©us
);

346 
UnicodeSåög


347 
	`gëNextSåög
(
UEº‹Code
& 
°©us
);

358 
UnicodeSåög


359 
	`gëNextSåög
(c⁄° ** 
key
,

360 
UEº‹Code
& 
°©us
);

370 
Resour˚BundÀ


371 
	$gë
(
öt32_t
 
ödex
,

372 
UEº‹Code
& 
°©us
) const;

382 
UnicodeSåög


383 
	$gëSåögEx
(
öt32_t
 
ödex
,

384 
UEº‹Code
& 
°©us
) const;

395 
Resour˚BundÀ


396 
	$gë
(c⁄° * 
key
,

397 
UEº‹Code
& 
°©us
) const;

408 
UnicodeSåög


409 
	$gëSåögEx
(c⁄° * 
key
,

410 
UEº‹Code
& 
°©us
) const;

422 
	$gëVîsi⁄Numbî
() const;

432 
	$gëVîsi⁄
(
UVîsi⁄Info
 
vîsi⁄Info
) const;

440 c⁄° 
LoˇÀ
&

441 
	$gëLoˇÀ
() const;

453 c⁄° 
LoˇÀ


454 
	$gëLoˇÀ
(
ULocD©aLoˇÀTy≥
 
ty≥
, 
UEº‹Code
 &
°©us
) const;

459 
Resour˚BundÀ


460 
	`gëWôhFÆlback
(c⁄° * 
key
, 
UEº‹Code
& 
°©us
);

466 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const;

473 
UCœssID
 
U_EXPORT2
 
	`gëSèticCœssID
();

475 
¥iv©e
:

476 
	`Resour˚BundÀ
();

478 
UResour˚BundÀ
 *
fResour˚
;

479 
	`c⁄°ru˘F‹LoˇÀ
(c⁄° 
UnicodeSåög
& 
∑th
, c⁄° 
LoˇÀ
& 
loˇÀ
, 
UEº‹Code
& 
îr‹
);

480 
LoˇÀ
 *
fLoˇÀ
;

484 
U_NAMESPACE_END


	@unicode/schriter.h

18 #i‚de‡
SCHRITER_H


19 
	#SCHRITER_H


	)

21 
	~"unicode/uty≥s.h
"

22 
	~"unicode/ch¨ôî.h
"

23 
	~"unicode/uchrôî.h
"

30 
U_NAMESPACE_BEGIN


43 ˛as†
	cU_COMMON_API
 
	mSåögCh¨a˘îIãøt‹
 : 
public
 
UCh¨Ch¨a˘îIãøt‹
 {

44 
public
:

52 
SåögCh¨a˘îIãøt‹
(c⁄° 
UnicodeSåög
& 
ãxtSå
);

63 
SåögCh¨a˘îIãøt‹
(c⁄° 
UnicodeSåög
& 
ãxtSå
,

64 
öt32_t
 
ãxtPos
);

82 
SåögCh¨a˘îIãøt‹
(c⁄° 
UnicodeSåög
& 
ãxtSå
,

83 
öt32_t
 
ãxtBegö
,

84 
öt32_t
 
ãxtEnd
,

85 
öt32_t
 
ãxtPos
);

95 
SåögCh¨a˘îIãøt‹
(c⁄° SåögCh¨a˘îIãøt‹& 
th©
);

101 
	mvútuÆ
 ~
SåögCh¨a˘îIãøt‹
();

111 
	mSåögCh¨a˘îIãøt‹
&

112 
	m›î©‹
=(c⁄° 
SåögCh¨a˘îIãøt‹
& 
th©
);

122 
vútuÆ
 
UBoﬁ
 
	m›î©‹
==(c⁄° 
F‹w¨dCh¨a˘îIãøt‹
& 
th©
) const;

131 
vútuÆ
 
Ch¨a˘îIãøt‹
* 
	$˛⁄e
() const;

138 
	`£tText
(c⁄° 
UnicodeSåög
& 
√wText
);

147 
vútuÆ
 
	`gëText
(
UnicodeSåög
& 
ªsu…
);

154 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const;

161 
UCœssID
 
U_EXPORT2
 
	`gëSèticCœssID
();

163 
¥Ÿe˘ed
:

168 
	`SåögCh¨a˘îIãøt‹
();

176 
	`£tText
(c⁄° 
UCh¨
* 
√wText
, 
öt32_t
 
√wTextLígth
);

182 
UnicodeSåög
 
ãxt
;

186 
U_NAMESPACE_END


	@unicode/std_string.h

17 #i‚de‡
__STD_STRING_H__


18 
	#__STD_STRING_H__


	)

26 
	~"unicode/uty≥s.h
"

33 #i‚de‡
U_HAVE_STD_STRING


34 
	#U_HAVE_STD_STRING
 1

	)

37 #i‡
U_HAVE_STD_STRING


39 
	~<°rög
>

64 #i‚de‡
U_STD_NSQ


65 #i‡
U_HAVE_NAMESPACE


66 
	#U_STD_NS
 
°d


	)

67 
	#U_STD_NSQ
 
U_STD_NS
::

	)

68 
	#U_STD_NS_USE
 
usög
 
«me•a˚
 
U_STD_NS
;

	)

70 
	#U_STD_NS


	)

71 
	#U_STD_NSQ


	)

72 
	#U_STD_NS_USE


	)

	@unicode/strenum.h

10 #i‚de‡
STRENUM_H


11 
	#STRENUM_H


	)

13 
	~"unicode/uobje˘.h
"

14 
	~"unicode/uni°r.h
"

21 
U_NAMESPACE_BEGIN


55 ˛as†
	cU_COMMON_API
 
	mSåögEnumî©i⁄
 : 
public
 
UObje˘
 {

56 
public
:

61 
vútuÆ
 ~
SåögEnumî©i⁄
();

78 
vútuÆ
 
SåögEnumî©i⁄
 *
	$˛⁄e
() const;

97 
vútuÆ
 
öt32_t
 
	$cou¡
(
UEº‹Code
& 
°©us
) const = 0;

128 
vútuÆ
 c⁄° * 
	`√xt
(
öt32_t
 *
ªsu…Lígth
, 
UEº‹Code
& 
°©us
);

153 
vútuÆ
 c⁄° 
UCh¨
* 
	`u√xt
(
öt32_t
 *
ªsu…Lígth
, 
UEº‹Code
& 
°©us
);

171 
vútuÆ
 c⁄° 
UnicodeSåög
* 
	`¢ext
(
UEº‹Code
& 
°©us
) = 0;

185 
vútuÆ
 
	`ª£t
(
UEº‹Code
& 
°©us
) = 0;

194 
vútuÆ
 
UBoﬁ
 
›î©‹
==(c⁄° 
SåögEnumî©i⁄
& 
th©
)const;

202 
vútuÆ
 
UBoﬁ
 
›î©‹
!=(c⁄° 
SåögEnumî©i⁄
& 
th©
)const;

204 
¥Ÿe˘ed
:

209 
UnicodeSåög
 
uni°r
;

214 
ch¨sBuf„r
[32];

220 *
ch¨s
;

225 
öt32_t
 
ch¨sC≠acôy
;

231 
	`SåögEnumî©i⁄
();

241 
	`ísuªCh¨sC≠acôy
(
öt32_t
 
ˇ∑côy
, 
UEº‹Code
 &
°©us
);

265 
UnicodeSåög
 *
	`£tCh¨s
(c⁄° *
s
, 
öt32_t
 
Àngth
, 
UEº‹Code
 &
°©us
);

268 
U_NAMESPACE_END


	@unicode/stringpiece.h

20 #i‚de‡
__STRINGPIECE_H__


21 
	#__STRINGPIECE_H__


	)

28 
	~"unicode/uty≥s.h
"

29 
	~"unicode/uobje˘.h
"

30 
	~"unicode/°d_°rög.h
"

34 
U_NAMESPACE_BEGIN


52 ˛as†
	cU_COMMON_API
 
	mSåögPõ˚
 : 
public
 
UMem‹y
 {

53 
¥iv©e
:

54 c⁄° * 
±r_
;

55 
öt32_t
 
	mÀngth_
;

57 
	mpublic
:

62 
	$SåögPõ˚
(Ë: 
	`±r_
(
NULL
), 
	$Àngth_
(0) { }

68 
	`SåögPõ˚
(c⁄° * 
°r
);

69 #i‡
U_HAVE_STD_STRING


74 
	$SåögPõ˚
(c⁄° 
U_STD_NSQ
 
°rög
& 
°r
)

75 : 
	`±r_
(
°r
.
	`d©a
()), 
	`Àngth_
(
°©ic_ˇ°
<
öt32_t
>(°r.
	$size
())Ë{ 
	}
}

83 
	$SåögPõ˚
(c⁄° * 
off£t
, 
öt32_t
 
Àn
Ë: 
	`±r_
(off£t), 
	$Àngth_
(
Àn
Ë{ 
	}
}

90 
SåögPõ˚
(c⁄° SåögPõ˚& 
x
, 
öt32_t
 
pos
);

99 
SåögPõ˚
(c⁄° SåögPõ˚& 
x
, 
öt32_t
 
pos
, i¡32_à
Àn
);

111 c⁄° * 
	$d©a
(Ëc⁄° {  
±r_
; 
	}
}

117 
öt32_t
 
	$size
(Ëc⁄° {  
Àngth_
; 
	}
}

123 
öt32_t
 
	$Àngth
(Ëc⁄° {  
Àngth_
; 
	}
}

129 
UBoﬁ
 
	$em±y
(Ëc⁄° {  
Àngth_
 =0; 
	}
}

135 
	$˛ór
(Ë{ 
±r_
 = 
NULL
; 
Àngth_
 = 0; 
	}
}

143 
	$£t
(c⁄° * 
d©a
, 
öt32_t
 
Àn
Ë{ 
±r_
 = d©a; 
Àngth_
 =Üí; 
	}
}

150 
£t
(c⁄° * 
°r
);

157 
	$ªmove_¥efix
(
öt32_t
 
n
) {

158 i‡(
n
 >= 0) {

159 i‡(
n
 > 
Àngth_
) {

160 
n
 = 
Àngth_
;

162 
±r_
 +
n
;

163 
Àngth_
 -
n
;

165 
	}
}

172 
	$ªmove_suffix
(
öt32_t
 
n
) {

173 i‡(
n
 >= 0) {

174 i‡(
n
 <
Àngth_
) {

175 
Àngth_
 -
n
;

177 
Àngth_
 = 0;

180 
	}
}

186 c⁄° 
öt32_t
 
	g≈os
 = 0x7fffffff;

196 
SåögPõ˚
 
	$sub°r
(
öt32_t
 
pos
, i¡32_à
Àn
 = 
≈os
) const {

197  
	`SåögPõ˚
(*
this
, 
pos
, 
Àn
);

198 
	}
}

208 
U_EXPORT
 
UBoﬁ
 
U_EXPORT2


209 
	g›î©‹
==(c⁄° 
SåögPõ˚
& 
x
, c⁄° 
	gSåögPõ˚
& 
	gy
);

218 
ölöe
 
UBoﬁ
 
	g›î©‹
!=(c⁄° 
SåögPõ˚
& 
x
, c⁄° 
	gSåögPõ˚
& 
	gy
) {

219  !(
	gx
 =
y
);

222 
	gU_NAMESPACE_END


	@unicode/symtable.h

10 #i‚de‡
SYMTABLE_H


11 
	#SYMTABLE_H


	)

13 
	~"unicode/uty≥s.h
"

14 
	~"unicode/uobje˘.h
"

22 
U_NAMESPACE_BEGIN


24 
˛ass
 
	gP¨£Posôi⁄
;

25 
˛ass
 
	gUnicodeFun˘‹
;

26 
˛ass
 
	gUnicodeSë
;

27 
˛ass
 
	gUnicodeSåög
;

54 ˛as†
	cU_COMMON_API
 
	mSymbﬁTabÀ
 {

55 
	mpublic
:

61 íum { 
SYMBOL_REF
 = 0x0024 };

67 
	gvútuÆ
 ~
SymbﬁTabÀ
();

78 
vútuÆ
 c⁄° 
UnicodeSåög
* 
	$lookup
(c⁄° 
UnicodeSåög
& 
s
) const = 0;

88 
vútuÆ
 c⁄° 
UnicodeFun˘‹
* 
	$lookupM©chî
(
UCh¨32
 
ch
) const = 0;

107 
vútuÆ
 
UnicodeSåög
 
	$∑r£Re„ªn˚
(c⁄° 
UnicodeSåög
& 
ãxt
,

108 
P¨£Posôi⁄
& 
pos
, 
öt32_t
 
limô
) const = 0;

109 
	}
};

110 
	gU_NAMESPACE_END


	@unicode/ubidi.h

17 #i‚de‡
UBIDI_H


18 
	#UBIDI_H


	)

20 
	~"unicode/uty≥s.h
"

21 
	~"unicode/uch¨.h
"

22 
	~"unicode/loˇÕoöãr.h
"

330 
uöt8_t
 
	tUBiDiLevñ
;

356 
	#UBIDI_DEFAULT_LTR
 0x„

	)

383 
	#UBIDI_DEFAULT_RTL
 0xff

	)

390 
	#UBIDI_MAX_EXPLICIT_LEVEL
 61

	)

396 
	#UBIDI_LEVEL_OVERRIDE
 0x80

	)

411 
	#UBIDI_MAP_NOWHERE
 (-1)

	)

417 
	eUBiDiDúe˘i⁄
 {

429 
	mUBIDI_LTR
,

441 
	mUBIDI_RTL
,

448 
	mUBIDI_MIXED
,

455 
	mUBIDI_NEUTRAL


459 
UBiDiDúe˘i⁄
 
	tUBiDiDúe˘i⁄
;

471 
	gUBiDi
;

474 
UBiDi
 
	tUBiDi
;

491 
U_STABLE
 
UBiDi
 * 
U_EXPORT2


492 
ubidi_›í
();

528 
U_STABLE
 
UBiDi
 * 
U_EXPORT2


529 
ubidi_›íSized
(
öt32_t
 
maxLígth
, i¡32_à
maxRunCou¡
, 
UEº‹Code
 *
pEº‹Code
);

551 
U_STABLE
 
U_EXPORT2


552 
ubidi_˛o£
(
UBiDi
 *
pBiDi
);

554 #i‡
U_SHOW_CPLUSPLUS_API


556 
U_NAMESPACE_BEGIN


567 
U_DEFINE_LOCAL_OPEN_POINTER
(
LoˇlUBiDiPoöãr
, 
UBiDi
, 
ubidi_˛o£
);

569 
	gU_NAMESPACE_END


621 
U_STABLE
 
U_EXPORT2


622 
ubidi_£tInvî£
(
UBiDi
 *
pBiDi
, 
UBoﬁ
 
isInvî£
);

640 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


641 
ubidi_isInvî£
(
UBiDi
 *
pBiDi
);

663 
U_STABLE
 
U_EXPORT2


664 
ubidi_‹dîP¨agøphsLTR
(
UBiDi
 *
pBiDi
, 
UBoﬁ
 
‹dîP¨agøphsLTR
);

677 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


678 
ubidi_isOrdîP¨agøphsLTR
(
UBiDi
 *
pBiDi
);

687 
	eUBiDiRe‹dîögMode
 {

691 
	mUBIDI_REORDER_DEFAULT
 = 0,

695 
	mUBIDI_REORDER_NUMBERS_SPECIAL
,

699 
	mUBIDI_REORDER_GROUP_NUMBERS_WITH_R
,

707 
	mUBIDI_REORDER_RUNS_ONLY
,

712 
	mUBIDI_REORDER_INVERSE_NUMBERS_AS_L
,

716 
	mUBIDI_REORDER_INVERSE_LIKE_DIRECT
,

720 
	mUBIDI_REORDER_INVERSE_FOR_NUMBERS_SPECIAL
,

723 
	mUBIDI_REORDER_COUNT


724 } 
	tUBiDiRe‹dîögMode
;

877 
U_STABLE
 
U_EXPORT2


878 
ubidi_£tRe‹dîögMode
(
UBiDi
 *
pBiDi
, 
UBiDiRe‹dîögMode
 
ª‹dîögMode
);

888 
U_STABLE
 
UBiDiRe‹dîögMode
 
U_EXPORT2


889 
ubidi_gëRe‹dîögMode
(
UBiDi
 *
pBiDi
);

898 
	eUBiDiRe‹dîögO±i⁄
 {

905 
	mUBIDI_OPTION_DEFAULT
 = 0,

951 
	mUBIDI_OPTION_INSERT_MARKS
 = 1,

969 
	mUBIDI_OPTION_REMOVE_CONTROLS
 = 2,

1017 
	mUBIDI_OPTION_STREAMING
 = 4

1018 } 
	tUBiDiRe‹dîögO±i⁄
;

1033 
U_STABLE
 
U_EXPORT2


1034 
ubidi_£tRe‹dîögO±i⁄s
(
UBiDi
 *
pBiDi
, 
uöt32_t
 
ª‹dîögO±i⁄s
);

1044 
U_STABLE
 
uöt32_t
 
U_EXPORT2


1045 
ubidi_gëRe‹dîögO±i⁄s
(
UBiDi
 *
pBiDi
);

1126 
U_STABLE
 
U_EXPORT2


1127 
ubidi_£tP¨a
(
UBiDi
 *
pBiDi
, c⁄° 
UCh¨
 *
ãxt
, 
öt32_t
 
Àngth
,

1128 
UBiDiLevñ
 
∑øLevñ
, UBiDiLevñ *
embeddögLevñs
,

1129 
UEº‹Code
 *
pEº‹Code
);

1177 
U_STABLE
 
U_EXPORT2


1178 
ubidi_£tLöe
(c⁄° 
UBiDi
 *
pP¨aBiDi
,

1179 
öt32_t
 
°¨t
, i¡32_à
limô
,

1180 
UBiDi
 *
pLöeBiDi
,

1181 
UEº‹Code
 *
pEº‹Code
);

1198 
U_STABLE
 
UBiDiDúe˘i⁄
 
U_EXPORT2


1199 
ubidi_gëDúe˘i⁄
(c⁄° 
UBiDi
 *
pBiDi
);

1228 
U_DRAFT
 
UBiDiDúe˘i⁄
 
U_EXPORT2


1229 
ubidi_gëBa£Dúe˘i⁄
(c⁄° 
UCh¨
 *
ãxt
, 
öt32_t
 
Àngth
 );

1242 
U_STABLE
 c⁄° 
UCh¨
 * 
U_EXPORT2


1243 
ubidi_gëText
(c⁄° 
UBiDi
 *
pBiDi
);

1253 
U_STABLE
 
öt32_t
 
U_EXPORT2


1254 
ubidi_gëLígth
(c⁄° 
UBiDi
 *
pBiDi
);

1271 
U_STABLE
 
UBiDiLevñ
 
U_EXPORT2


1272 
ubidi_gëP¨aLevñ
(c⁄° 
UBiDi
 *
pBiDi
);

1282 
U_STABLE
 
öt32_t
 
U_EXPORT2


1283 
ubidi_cou¡P¨agøphs
(
UBiDi
 *
pBiDi
);

1319 
U_STABLE
 
öt32_t
 
U_EXPORT2


1320 
ubidi_gëP¨agøph
(c⁄° 
UBiDi
 *
pBiDi
, 
öt32_t
 
ch¨Index
, i¡32_à*
pP¨aSèπ
,

1321 
öt32_t
 *
pP¨aLimô
, 
UBiDiLevñ
 *
pP¨aLevñ
,

1322 
UEº‹Code
 *
pEº‹Code
);

1351 
U_STABLE
 
U_EXPORT2


1352 
ubidi_gëP¨agøphByIndex
(c⁄° 
UBiDi
 *
pBiDi
, 
öt32_t
 
∑øIndex
,

1353 
öt32_t
 *
pP¨aSèπ
, i¡32_à*
pP¨aLimô
,

1354 
UBiDiLevñ
 *
pP¨aLevñ
, 
UEº‹Code
 *
pEº‹Code
);

1371 
U_STABLE
 
UBiDiLevñ
 
U_EXPORT2


1372 
ubidi_gëLevñAt
(c⁄° 
UBiDi
 *
pBiDi
, 
öt32_t
 
ch¨Index
);

1392 
U_STABLE
 c⁄° 
UBiDiLevñ
 * 
U_EXPORT2


1393 
ubidi_gëLevñs
(
UBiDi
 *
pBiDi
, 
UEº‹Code
 *
pEº‹Code
);

1419 
U_STABLE
 
U_EXPORT2


1420 
ubidi_gëLogiˇlRun
(c⁄° 
UBiDi
 *
pBiDi
, 
öt32_t
 
logiˇlPosôi⁄
,

1421 
öt32_t
 *
pLogiˇlLimô
, 
UBiDiLevñ
 *
pLevñ
);

1438 
U_STABLE
 
öt32_t
 
U_EXPORT2


1439 
ubidi_cou¡Runs
(
UBiDi
 *
pBiDi
, 
UEº‹Code
 *
pEº‹Code
);

1497 
U_STABLE
 
UBiDiDúe˘i⁄
 
U_EXPORT2


1498 
ubidi_gëVisuÆRun
(
UBiDi
 *
pBiDi
, 
öt32_t
 
runIndex
,

1499 
öt32_t
 *
pLogiˇlSèπ
, i¡32_à*
pLígth
);

1538 
U_STABLE
 
öt32_t
 
U_EXPORT2


1539 
ubidi_gëVisuÆIndex
(
UBiDi
 *
pBiDi
, 
öt32_t
 
logiˇlIndex
, 
UEº‹Code
 *
pEº‹Code
);

1573 
U_STABLE
 
öt32_t
 
U_EXPORT2


1574 
ubidi_gëLogiˇlIndex
(
UBiDi
 *
pBiDi
, 
öt32_t
 
visuÆIndex
, 
UEº‹Code
 *
pEº‹Code
);

1616 
U_STABLE
 
U_EXPORT2


1617 
ubidi_gëLogiˇlM≠
(
UBiDi
 *
pBiDi
, 
öt32_t
 *
ödexM≠
, 
UEº‹Code
 *
pEº‹Code
);

1652 
U_STABLE
 
U_EXPORT2


1653 
ubidi_gëVisuÆM≠
(
UBiDi
 *
pBiDi
, 
öt32_t
 *
ödexM≠
, 
UEº‹Code
 *
pEº‹Code
);

1675 
U_STABLE
 
U_EXPORT2


1676 
ubidi_ª‹dîLogiˇl
(c⁄° 
UBiDiLevñ
 *
Àvñs
, 
öt32_t
 
Àngth
, i¡32_à*
ödexM≠
);

1698 
U_STABLE
 
U_EXPORT2


1699 
ubidi_ª‹dîVisuÆ
(c⁄° 
UBiDiLevñ
 *
Àvñs
, 
öt32_t
 
Àngth
, i¡32_à*
ödexM≠
);

1733 
U_STABLE
 
U_EXPORT2


1734 
ubidi_övîtM≠
(c⁄° 
öt32_t
 *
§cM≠
, i¡32_à*
de°M≠
, i¡32_à
Àngth
);

1745 
	#UBIDI_KEEP_BASE_COMBINING
 1

	)

1755 
	#UBIDI_DO_MIRRORING
 2

	)

1769 
	#UBIDI_INSERT_LRM_FOR_NUMERIC
 4

	)

1782 
	#UBIDI_REMOVE_BIDI_CONTROLS
 8

	)

1798 
	#UBIDI_OUTPUT_REVERSE
 16

	)

1838 
U_STABLE
 
öt32_t
 
U_EXPORT2


1839 
ubidi_gëPro˚s£dLígth
(c⁄° 
UBiDi
 *
pBiDi
);

1868 
U_STABLE
 
öt32_t
 
U_EXPORT2


1869 
ubidi_gëResu…Lígth
(c⁄° 
UBiDi
 *
pBiDi
);

1871 
	gU_CDECL_BEGIN


1878 
	#U_BIDI_CLASS_DEFAULT
 
U_CHAR_DIRECTION_COUNT


	)

1900 
UCh¨Dúe˘i⁄
 
	tU_CALLCONV


1901 
	tUBiDiCœssCÆlback
(c⁄° *
	tc⁄ãxt
, 
	tUCh¨32
 
	tc
);

1903 
U_CDECL_END


1920 
U_STABLE
 
UCh¨Dúe˘i⁄
 
U_EXPORT2


1921 
ubidi_gëCu°omizedCœss
(
UBiDi
 *
pBiDi
, 
UCh¨32
 
c
);

1950 
U_STABLE
 
U_EXPORT2


1951 
ubidi_£tCœssCÆlback
(
UBiDi
 *
pBiDi
, 
UBiDiCœssCÆlback
 *
√wFn
,

1952 c⁄° *
√wC⁄ãxt
, 
UBiDiCœssCÆlback
 **
ﬁdFn
,

1953 c⁄° **
ﬁdC⁄ãxt
, 
UEº‹Code
 *
pEº‹Code
);

1967 
U_STABLE
 
U_EXPORT2


1968 
ubidi_gëCœssCÆlback
(
UBiDi
 *
pBiDi
, 
UBiDiCœssCÆlback
 **
‚
, c⁄° **
c⁄ãxt
);

2035 
U_STABLE
 
öt32_t
 
U_EXPORT2


2036 
ubidi_wrôeRe‹dîed
(
UBiDi
 *
pBiDi
,

2037 
UCh¨
 *
de°
, 
öt32_t
 
de°Size
,

2038 
uöt16_t
 
›ti⁄s
,

2039 
UEº‹Code
 *
pEº‹Code
);

2087 
U_STABLE
 
öt32_t
 
U_EXPORT2


2088 
ubidi_wrôeRevî£
(c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

2089 
UCh¨
 *
de°
, 
öt32_t
 
de°Size
,

2090 
uöt16_t
 
›ti⁄s
,

2091 
UEº‹Code
 *
pEº‹Code
);

	@unicode/ubrk.h

8 #i‚de‡
UBRK_H


9 
	#UBRK_H


	)

11 
	~"unicode/uty≥s.h
"

12 
	~"unicode/uloc.h
"

13 
	~"unicode/uãxt.h
"

14 
	~"unicode/loˇÕoöãr.h
"

20 #i‚de‡
UBRK_TYPEDEF_UBREAK_ITERATOR


21 
	#UBRK_TYPEDEF_UBREAK_ITERATOR


	)

26 
UBªakIãøt‹
 
	tUBªakIãøt‹
;

29 #i‡!
UCONFIG_NO_BREAK_ITERATION


31 
	~"unicode/∑r£îr.h
"

87 
	eUBªakIãøt‹Ty≥
 {

89 
	mUBRK_CHARACTER
 = 0,

91 
	mUBRK_WORD
 = 1,

93 
	mUBRK_LINE
 = 2,

95 
	mUBRK_SENTENCE
 = 3,

97 #i‚de‡
U_HIDE_DEPRECATED_API


106 
	mUBRK_TITLE
 = 4,

108 
	mUBRK_COUNT
 = 5

109 } 
	tUBªakIãøt‹Ty≥
;

114 
	#UBRK_DONE
 ((
öt32_t
Ë-1)

	)

125 
	eUW‹dBªak
 {

128 
	mUBRK_WORD_NONE
 = 0,

130 
	mUBRK_WORD_NONE_LIMIT
 = 100,

132 
	mUBRK_WORD_NUMBER
 = 100,

134 
	mUBRK_WORD_NUMBER_LIMIT
 = 200,

137 
	mUBRK_WORD_LETTER
 = 200,

139 
	mUBRK_WORD_LETTER_LIMIT
 = 300,

141 
	mUBRK_WORD_KANA
 = 300,

143 
	mUBRK_WORD_KANA_LIMIT
 = 400,

145 
	mUBRK_WORD_IDEO
 = 400,

147 
	mUBRK_WORD_IDEO_LIMIT
 = 500

148 } 
	tUW‹dBªak
;

158 
	eULöeBªakTag
 {

161 
	mUBRK_LINE_SOFT
 = 0,

163 
	mUBRK_LINE_SOFT_LIMIT
 = 100,

165 
	mUBRK_LINE_HARD
 = 100,

167 
	mUBRK_LINE_HARD_LIMIT
 = 200

168 } 
	tULöeBªakTag
;

180 
	eUSíãn˚BªakTag
 {

185 
	mUBRK_SENTENCE_TERM
 = 0,

187 
	mUBRK_SENTENCE_TERM_LIMIT
 = 100,

192 
	mUBRK_SENTENCE_SEP
 = 100,

194 
	mUBRK_SENTENCE_SEP_LIMIT
 = 200

196 } 
	tUSíãn˚BªakTag
;

213 
U_STABLE
 
UBªakIãøt‹
* 
U_EXPORT2


214 
ubrk_›í
(
UBªakIãøt‹Ty≥
 
ty≥
,

215 c⁄° *
loˇÀ
,

216 c⁄° 
UCh¨
 *
ãxt
,

217 
öt32_t
 
ãxtLígth
,

218 
UEº‹Code
 *
°©us
);

235 
U_STABLE
 
UBªakIãøt‹
* 
U_EXPORT2


236 
ubrk_›íRuÀs
(c⁄° 
UCh¨
 *
ruÀs
,

237 
öt32_t
 
ruÀsLígth
,

238 c⁄° 
UCh¨
 *
ãxt
,

239 
öt32_t
 
ãxtLígth
,

240 
UP¨£Eº‹
 *
∑r£Eº
,

241 
UEº‹Code
 *
°©us
);

259 
U_STABLE
 
UBªakIãøt‹
 * 
U_EXPORT2


260 
ubrk_ß„Cl⁄e
(

261 c⁄° 
UBªakIãøt‹
 *
bi
,

262 *
°ackBuf„r
,

263 
öt32_t
 *
pBuf„rSize
,

264 
UEº‹Code
 *
°©us
);

270 
	#U_BRK_SAFECLONE_BUFFERSIZE
 512

	)

278 
U_STABLE
 
U_EXPORT2


279 
ubrk_˛o£
(
UBªakIãøt‹
 *
bi
);

281 #i‡
U_SHOW_CPLUSPLUS_API


283 
U_NAMESPACE_BEGIN


294 
U_DEFINE_LOCAL_OPEN_POINTER
(
LoˇlUBªakIãøt‹Poöãr
, 
UBªakIãøt‹
, 
ubrk_˛o£
);

296 
	gU_NAMESPACE_END


308 
U_STABLE
 
U_EXPORT2


309 
ubrk_£tText
(
UBªakIãøt‹
* 
bi
,

310 c⁄° 
UCh¨
* 
ãxt
,

311 
öt32_t
 
ãxtLígth
,

312 
UEº‹Code
* 
°©us
);

326 
U_STABLE
 
U_EXPORT2


327 
ubrk_£tUText
(
UBªakIãøt‹
* 
bi
,

328 
UText
* 
ãxt
,

329 
UEº‹Code
* 
°©us
);

341 
U_STABLE
 
öt32_t
 
U_EXPORT2


342 
ubrk_cuºít
(c⁄° 
UBªakIãøt‹
 *
bi
);

353 
U_STABLE
 
öt32_t
 
U_EXPORT2


354 
ubrk_√xt
(
UBªakIãøt‹
 *
bi
);

365 
U_STABLE
 
öt32_t
 
U_EXPORT2


366 
ubrk_¥evious
(
UBªakIãøt‹
 *
bi
);

376 
U_STABLE
 
öt32_t
 
U_EXPORT2


377 
ubrk_fú°
(
UBªakIãøt‹
 *
bi
);

389 
U_STABLE
 
öt32_t
 
U_EXPORT2


390 
ubrk_œ°
(
UBªakIãøt‹
 *
bi
);

401 
U_STABLE
 
öt32_t
 
U_EXPORT2


402 
ubrk_¥e˚dög
(
UBªakIãøt‹
 *
bi
,

403 
öt32_t
 
off£t
);

414 
U_STABLE
 
öt32_t
 
U_EXPORT2


415 
ubrk_fﬁlowög
(
UBªakIãøt‹
 *
bi
,

416 
öt32_t
 
off£t
);

427 
U_STABLE
 c⁄° * 
U_EXPORT2


428 
ubrk_gëAvaûabÀ
(
öt32_t
 
ödex
);

438 
U_STABLE
 
öt32_t
 
U_EXPORT2


439 
ubrk_cou¡AvaûabÀ
();

451 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


452 
ubrk_isBound¨y
(
UBªakIãøt‹
 *
bi
, 
öt32_t
 
off£t
);

463 
U_STABLE
 
öt32_t
 
U_EXPORT2


464 
ubrk_gëRuÀSètus
(
UBªakIãøt‹
 *
bi
);

483 
U_STABLE
 
öt32_t
 
U_EXPORT2


484 
ubrk_gëRuÀSètusVec
(
UBªakIãøt‹
 *
bi
, 
öt32_t
 *
fûlInVec
, i¡32_à
ˇ∑côy
, 
UEº‹Code
 *
°©us
);

495 
U_STABLE
 c⁄° * 
U_EXPORT2


496 
ubrk_gëLoˇÀByTy≥
(c⁄° 
UBªakIãøt‹
 *
bi
, 
ULocD©aLoˇÀTy≥
 
ty≥
, 
UEº‹Code
* 
°©us
);

	@unicode/ucasemap.h

19 #i‚de‡
__UCASEMAP_H__


20 
	#__UCASEMAP_H__


	)

22 
	~"unicode/uty≥s.h
"

23 
	~"unicode/u°rög.h
"

24 
	~"unicode/loˇÕoöãr.h
"

44 
	gUCa£M≠
;

45 
UCa£M≠
 
	tUCa£M≠
;

69 
U_STABLE
 
UCa£M≠
 * 
U_EXPORT2


70 
uˇ£m≠_›í
(c⁄° *
loˇÀ
, 
uöt32_t
 
›ti⁄s
, 
UEº‹Code
 *
pEº‹Code
);

77 
U_STABLE
 
U_EXPORT2


78 
uˇ£m≠_˛o£
(
UCa£M≠
 *
csm
);

80 #i‡
U_SHOW_CPLUSPLUS_API


82 
U_NAMESPACE_BEGIN


93 
U_DEFINE_LOCAL_OPEN_POINTER
(
LoˇlUCa£M≠Poöãr
, 
UCa£M≠
, 
uˇ£m≠_˛o£
);

95 
	gU_NAMESPACE_END


105 
U_STABLE
 c⁄° * 
U_EXPORT2


106 
uˇ£m≠_gëLoˇÀ
(c⁄° 
UCa£M≠
 *
csm
);

114 
U_STABLE
 
uöt32_t
 
U_EXPORT2


115 
uˇ£m≠_gëO±i⁄s
(c⁄° 
UCa£M≠
 *
csm
);

128 
U_STABLE
 
U_EXPORT2


129 
uˇ£m≠_£tLoˇÀ
(
UCa£M≠
 *
csm
, c⁄° *
loˇÀ
, 
UEº‹Code
 *
pEº‹Code
);

142 
U_STABLE
 
U_EXPORT2


143 
uˇ£m≠_£tO±i⁄s
(
UCa£M≠
 *
csm
, 
uöt32_t
 
›ti⁄s
, 
UEº‹Code
 *
pEº‹Code
);

159 
	#U_TITLECASE_NO_LOWERCASE
 0x100

	)

184 
	#U_TITLECASE_NO_BREAK_ADJUSTMENT
 0x200

	)

186 #i‡!
UCONFIG_NO_BREAK_ITERATION


195 
U_STABLE
 c⁄° 
UBªakIãøt‹
 * 
U_EXPORT2


196 
uˇ£m≠_gëBªakIãøt‹
(c⁄° 
UCa£M≠
 *
csm
);

218 
U_STABLE
 
U_EXPORT2


219 
uˇ£m≠_£tBªakIãøt‹
(
UCa£M≠
 *
csm
, 
UBªakIãøt‹
 *
ôîToAd›t
, 
UEº‹Code
 *
pEº‹Code
);

267 
U_STABLE
 
öt32_t
 
U_EXPORT2


268 
uˇ£m≠_toTôÀ
(
UCa£M≠
 *
csm
,

269 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

270 c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

271 
UEº‹Code
 *
pEº‹Code
);

298 
U_STABLE
 
öt32_t
 
U_EXPORT2


299 
uˇ£m≠_utf8ToLowî
(c⁄° 
UCa£M≠
 *
csm
,

300 *
de°
, 
öt32_t
 
de°C≠acôy
,

301 c⁄° *
§c
, 
öt32_t
 
§cLígth
,

302 
UEº‹Code
 *
pEº‹Code
);

327 
U_STABLE
 
öt32_t
 
U_EXPORT2


328 
uˇ£m≠_utf8ToUµî
(c⁄° 
UCa£M≠
 *
csm
,

329 *
de°
, 
öt32_t
 
de°C≠acôy
,

330 c⁄° *
§c
, 
öt32_t
 
§cLígth
,

331 
UEº‹Code
 *
pEº‹Code
);

333 #i‡!
UCONFIG_NO_BREAK_ITERATION


379 
U_STABLE
 
öt32_t
 
U_EXPORT2


380 
uˇ£m≠_utf8ToTôÀ
(
UCa£M≠
 *
csm
,

381 *
de°
, 
öt32_t
 
de°C≠acôy
,

382 c⁄° *
§c
, 
öt32_t
 
§cLígth
,

383 
UEº‹Code
 *
pEº‹Code
);

415 
U_STABLE
 
öt32_t
 
U_EXPORT2


416 
uˇ£m≠_utf8FﬁdCa£
(c⁄° 
UCa£M≠
 *
csm
,

417 *
de°
, 
öt32_t
 
de°C≠acôy
,

418 c⁄° *
§c
, 
öt32_t
 
§cLígth
,

419 
UEº‹Code
 *
pEº‹Code
);

	@unicode/ucat.h

11 #i‚de‡
UCAT_H


12 
	#UCAT_H


	)

14 
	~"unicode/uty≥s.h
"

15 
	~"unicode/uªs.h
"

64 
U_CDECL_BEGIN


71 
UResour˚BundÀ
* 
	tu_∆_ˇtd
;

104 
U_STABLE
 
u_∆_ˇtd
 
U_EXPORT2


105 
u_ˇt›í
(c⁄° * 
«me
, c⁄° * 
loˇÀ
, 
UEº‹Code
* 
ec
);

115 
U_STABLE
 
U_EXPORT2


116 
u_ˇt˛o£
(
u_∆_ˇtd
 
ˇtd
);

150 
U_STABLE
 c⁄° 
UCh¨
* 
U_EXPORT2


151 
u_ˇtgës
(
u_∆_ˇtd
 
ˇtd
, 
öt32_t
 
£t_num
, i¡32_à
msg_num
,

152 c⁄° 
UCh¨
* 
s
,

153 
öt32_t
* 
Àn
, 
UEº‹Code
* 
ec
);

155 
	gU_CDECL_END


	@unicode/uchar.h

23 #i‚de‡
UCHAR_H


24 
	#UCHAR_H


	)

26 
	~"unicode/uty≥s.h
"

28 
	gU_CDECL_BEGIN


42 
	#U_UNICODE_VERSION
 "6.0"

	)

124 
	#UCHAR_MIN_VALUE
 0

	)

134 
	#UCHAR_MAX_VALUE
 0x10ffff

	)

140 
	#U_MASK
(
x
Ë((
uöt32_t
)1<<(x))

	)

174 
	eUPr›îty
 {

186 
	mUCHAR_ALPHABETIC
=0,

188 
	mUCHAR_BINARY_START
=
UCHAR_ALPHABETIC
,

190 
	mUCHAR_ASCII_HEX_DIGIT
=1,

194 
	mUCHAR_BIDI_CONTROL
=2,

199 
	mUCHAR_BIDI_MIRRORED
=3,

201 
	mUCHAR_DASH
=4,

205 
	mUCHAR_DEFAULT_IGNORABLE_CODE_POINT
=5,

208 
	mUCHAR_DEPRECATED
=6,

211 
	mUCHAR_DIACRITIC
=7,

215 
	mUCHAR_EXTENDER
=8,

219 
	mUCHAR_FULL_COMPOSITION_EXCLUSION
=9,

223 
	mUCHAR_GRAPHEME_BASE
=10,

227 
	mUCHAR_GRAPHEME_EXTEND
=11,

230 
	mUCHAR_GRAPHEME_LINK
=12,

233 
	mUCHAR_HEX_DIGIT
=13,

236 
	mUCHAR_HYPHEN
=14,

241 
	mUCHAR_ID_CONTINUE
=15,

245 
	mUCHAR_ID_START
=16,

248 
	mUCHAR_IDEOGRAPHIC
=17,

252 
	mUCHAR_IDS_BINARY_OPERATOR
=18,

256 
	mUCHAR_IDS_TRINARY_OPERATOR
=19,

259 
	mUCHAR_JOIN_CONTROL
=20,

263 
	mUCHAR_LOGICAL_ORDER_EXCEPTION
=21,

266 
	mUCHAR_LOWERCASE
=22,

268 
	mUCHAR_MATH
=23,

272 
	mUCHAR_NONCHARACTER_CODE_POINT
=24,

274 
	mUCHAR_QUOTATION_MARK
=25,

278 
	mUCHAR_RADICAL
=26,

283 
	mUCHAR_SOFT_DOTTED
=27,

287 
	mUCHAR_TERMINAL_PUNCTUATION
=28,

291 
	mUCHAR_UNIFIED_IDEOGRAPH
=29,

294 
	mUCHAR_UPPERCASE
=30,

298 
	mUCHAR_WHITE_SPACE
=31,

302 
	mUCHAR_XID_CONTINUE
=32,

305 
	mUCHAR_XID_START
=33,

309 
	mUCHAR_CASE_SENSITIVE
=34,

314 
	mUCHAR_S_TERM
=35,

320 
	mUCHAR_VARIATION_SELECTOR
=36,

327 
	mUCHAR_NFD_INERT
=37,

334 
	mUCHAR_NFKD_INERT
=38,

341 
	mUCHAR_NFC_INERT
=39,

348 
	mUCHAR_NFKC_INERT
=40,

359 
	mUCHAR_SEGMENT_STARTER
=41,

364 
	mUCHAR_PATTERN_SYNTAX
=42,

369 
	mUCHAR_PATTERN_WHITE_SPACE
=43,

374 
	mUCHAR_POSIX_ALNUM
=44,

379 
	mUCHAR_POSIX_BLANK
=45,

384 
	mUCHAR_POSIX_GRAPH
=46,

389 
	mUCHAR_POSIX_PRINT
=47,

394 
	mUCHAR_POSIX_XDIGIT
=48,

396 
	mUCHAR_CASED
=49,

398 
	mUCHAR_CASE_IGNORABLE
=50,

400 
	mUCHAR_CHANGES_WHEN_LOWERCASED
=51,

402 
	mUCHAR_CHANGES_WHEN_UPPERCASED
=52,

404 
	mUCHAR_CHANGES_WHEN_TITLECASED
=53,

406 
	mUCHAR_CHANGES_WHEN_CASEFOLDED
=54,

408 
	mUCHAR_CHANGES_WHEN_CASEMAPPED
=55,

410 
	mUCHAR_CHANGES_WHEN_NFKC_CASEFOLDED
=56,

412 
	mUCHAR_BINARY_LIMIT
=57,

416 
	mUCHAR_BIDI_CLASS
=0x1000,

418 
	mUCHAR_INT_START
=
UCHAR_BIDI_CLASS
,

421 
	mUCHAR_BLOCK
=0x1001,

424 
	mUCHAR_CANONICAL_COMBINING_CLASS
=0x1002,

427 
	mUCHAR_DECOMPOSITION_TYPE
=0x1003,

431 
	mUCHAR_EAST_ASIAN_WIDTH
=0x1004,

434 
	mUCHAR_GENERAL_CATEGORY
=0x1005,

437 
	mUCHAR_JOINING_GROUP
=0x1006,

440 
	mUCHAR_JOINING_TYPE
=0x1007,

443 
	mUCHAR_LINE_BREAK
=0x1008,

446 
	mUCHAR_NUMERIC_TYPE
=0x1009,

449 
	mUCHAR_SCRIPT
=0x100A,

452 
	mUCHAR_HANGUL_SYLLABLE_TYPE
=0x100B,

455 
	mUCHAR_NFD_QUICK_CHECK
=0x100C,

458 
	mUCHAR_NFKD_QUICK_CHECK
=0x100D,

461 
	mUCHAR_NFC_QUICK_CHECK
=0x100E,

464 
	mUCHAR_NFKC_QUICK_CHECK
=0x100F,

471 
	mUCHAR_LEAD_CANONICAL_COMBINING_CLASS
=0x1010,

478 
	mUCHAR_TRAIL_CANONICAL_COMBINING_CLASS
=0x1011,

483 
	mUCHAR_GRAPHEME_CLUSTER_BREAK
=0x1012,

488 
	mUCHAR_SENTENCE_BREAK
=0x1013,

493 
	mUCHAR_WORD_BREAK
=0x1014,

495 
	mUCHAR_INT_LIMIT
=0x1015,

505 
	mUCHAR_GENERAL_CATEGORY_MASK
=0x2000,

507 
	mUCHAR_MASK_START
=
UCHAR_GENERAL_CATEGORY_MASK
,

509 
	mUCHAR_MASK_LIMIT
=0x2001,

513 
	mUCHAR_NUMERIC_VALUE
=0x3000,

515 
	mUCHAR_DOUBLE_START
=
UCHAR_NUMERIC_VALUE
,

517 
	mUCHAR_DOUBLE_LIMIT
=0x3001,

521 
	mUCHAR_AGE
=0x4000,

523 
	mUCHAR_STRING_START
=
UCHAR_AGE
,

526 
	mUCHAR_BIDI_MIRRORING_GLYPH
=0x4001,

529 
	mUCHAR_CASE_FOLDING
=0x4002,

532 
	mUCHAR_ISO_COMMENT
=0x4003,

535 
	mUCHAR_LOWERCASE_MAPPING
=0x4004,

538 
	mUCHAR_NAME
=0x4005,

541 
	mUCHAR_SIMPLE_CASE_FOLDING
=0x4006,

544 
	mUCHAR_SIMPLE_LOWERCASE_MAPPING
=0x4007,

547 
	mUCHAR_SIMPLE_TITLECASE_MAPPING
=0x4008,

550 
	mUCHAR_SIMPLE_UPPERCASE_MAPPING
=0x4009,

553 
	mUCHAR_TITLECASE_MAPPING
=0x400A,

556 
	mUCHAR_UNICODE_1_NAME
=0x400B,

559 
	mUCHAR_UPPERCASE_MAPPING
=0x400C,

561 
	mUCHAR_STRING_LIMIT
=0x400D,

570 
	mUCHAR_SCRIPT_EXTENSIONS
=0x7000,

572 
	mUCHAR_OTHER_PROPERTY_START
=
UCHAR_SCRIPT_EXTENSIONS
,

575 
	mUCHAR_OTHER_PROPERTY_LIMIT
=0x7001,

578 
	mUCHAR_INVALID_CODE
 = -1

579 } 
	tUPr›îty
;

586 
	eUCh¨C©eg‹y


591 
	mU_UNASSIGNED
 = 0,

593 
	mU_GENERAL_OTHER_TYPES
 = 0,

595 
	mU_UPPERCASE_LETTER
 = 1,

597 
	mU_LOWERCASE_LETTER
 = 2,

599 
	mU_TITLECASE_LETTER
 = 3,

601 
	mU_MODIFIER_LETTER
 = 4,

603 
	mU_OTHER_LETTER
 = 5,

605 
	mU_NON_SPACING_MARK
 = 6,

607 
	mU_ENCLOSING_MARK
 = 7,

609 
	mU_COMBINING_SPACING_MARK
 = 8,

611 
	mU_DECIMAL_DIGIT_NUMBER
 = 9,

613 
	mU_LETTER_NUMBER
 = 10,

615 
	mU_OTHER_NUMBER
 = 11,

617 
	mU_SPACE_SEPARATOR
 = 12,

619 
	mU_LINE_SEPARATOR
 = 13,

621 
	mU_PARAGRAPH_SEPARATOR
 = 14,

623 
	mU_CONTROL_CHAR
 = 15,

625 
	mU_FORMAT_CHAR
 = 16,

627 
	mU_PRIVATE_USE_CHAR
 = 17,

629 
	mU_SURROGATE
 = 18,

631 
	mU_DASH_PUNCTUATION
 = 19,

633 
	mU_START_PUNCTUATION
 = 20,

635 
	mU_END_PUNCTUATION
 = 21,

637 
	mU_CONNECTOR_PUNCTUATION
 = 22,

639 
	mU_OTHER_PUNCTUATION
 = 23,

641 
	mU_MATH_SYMBOL
 = 24,

643 
	mU_CURRENCY_SYMBOL
 = 25,

645 
	mU_MODIFIER_SYMBOL
 = 26,

647 
	mU_OTHER_SYMBOL
 = 27,

649 
	mU_INITIAL_PUNCTUATION
 = 28,

651 
	mU_FINAL_PUNCTUATION
 = 29,

653 
	mU_CHAR_CATEGORY_COUNT


654 } 
	tUCh¨C©eg‹y
;

670 
	#U_GC_CN_MASK
 
	`U_MASK
(
U_GENERAL_OTHER_TYPES
)

	)

673 
	#U_GC_LU_MASK
 
	`U_MASK
(
U_UPPERCASE_LETTER
)

	)

675 
	#U_GC_LL_MASK
 
	`U_MASK
(
U_LOWERCASE_LETTER
)

	)

677 
	#U_GC_LT_MASK
 
	`U_MASK
(
U_TITLECASE_LETTER
)

	)

679 
	#U_GC_LM_MASK
 
	`U_MASK
(
U_MODIFIER_LETTER
)

	)

681 
	#U_GC_LO_MASK
 
	`U_MASK
(
U_OTHER_LETTER
)

	)

684 
	#U_GC_MN_MASK
 
	`U_MASK
(
U_NON_SPACING_MARK
)

	)

686 
	#U_GC_ME_MASK
 
	`U_MASK
(
U_ENCLOSING_MARK
)

	)

688 
	#U_GC_MC_MASK
 
	`U_MASK
(
U_COMBINING_SPACING_MARK
)

	)

691 
	#U_GC_ND_MASK
 
	`U_MASK
(
U_DECIMAL_DIGIT_NUMBER
)

	)

693 
	#U_GC_NL_MASK
 
	`U_MASK
(
U_LETTER_NUMBER
)

	)

695 
	#U_GC_NO_MASK
 
	`U_MASK
(
U_OTHER_NUMBER
)

	)

698 
	#U_GC_ZS_MASK
 
	`U_MASK
(
U_SPACE_SEPARATOR
)

	)

700 
	#U_GC_ZL_MASK
 
	`U_MASK
(
U_LINE_SEPARATOR
)

	)

702 
	#U_GC_ZP_MASK
 
	`U_MASK
(
U_PARAGRAPH_SEPARATOR
)

	)

705 
	#U_GC_CC_MASK
 
	`U_MASK
(
U_CONTROL_CHAR
)

	)

707 
	#U_GC_CF_MASK
 
	`U_MASK
(
U_FORMAT_CHAR
)

	)

709 
	#U_GC_CO_MASK
 
	`U_MASK
(
U_PRIVATE_USE_CHAR
)

	)

711 
	#U_GC_CS_MASK
 
	`U_MASK
(
U_SURROGATE
)

	)

714 
	#U_GC_PD_MASK
 
	`U_MASK
(
U_DASH_PUNCTUATION
)

	)

716 
	#U_GC_PS_MASK
 
	`U_MASK
(
U_START_PUNCTUATION
)

	)

718 
	#U_GC_PE_MASK
 
	`U_MASK
(
U_END_PUNCTUATION
)

	)

720 
	#U_GC_PC_MASK
 
	`U_MASK
(
U_CONNECTOR_PUNCTUATION
)

	)

722 
	#U_GC_PO_MASK
 
	`U_MASK
(
U_OTHER_PUNCTUATION
)

	)

725 
	#U_GC_SM_MASK
 
	`U_MASK
(
U_MATH_SYMBOL
)

	)

727 
	#U_GC_SC_MASK
 
	`U_MASK
(
U_CURRENCY_SYMBOL
)

	)

729 
	#U_GC_SK_MASK
 
	`U_MASK
(
U_MODIFIER_SYMBOL
)

	)

731 
	#U_GC_SO_MASK
 
	`U_MASK
(
U_OTHER_SYMBOL
)

	)

734 
	#U_GC_PI_MASK
 
	`U_MASK
(
U_INITIAL_PUNCTUATION
)

	)

736 
	#U_GC_PF_MASK
 
	`U_MASK
(
U_FINAL_PUNCTUATION
)

	)

740 
	#U_GC_L_MASK
 \

741 (
U_GC_LU_MASK
|
U_GC_LL_MASK
|
U_GC_LT_MASK
|
U_GC_LM_MASK
|
U_GC_LO_MASK
)

	)

744 
	#U_GC_LC_MASK
 \

745 (
U_GC_LU_MASK
|
U_GC_LL_MASK
|
U_GC_LT_MASK
)

	)

748 
	#U_GC_M_MASK
 (
U_GC_MN_MASK
|
U_GC_ME_MASK
|
U_GC_MC_MASK
)

	)

751 
	#U_GC_N_MASK
 (
U_GC_ND_MASK
|
U_GC_NL_MASK
|
U_GC_NO_MASK
)

	)

754 
	#U_GC_Z_MASK
 (
U_GC_ZS_MASK
|
U_GC_ZL_MASK
|
U_GC_ZP_MASK
)

	)

757 
	#U_GC_C_MASK
 \

758 (
U_GC_CN_MASK
|
U_GC_CC_MASK
|
U_GC_CF_MASK
|
U_GC_CO_MASK
|
U_GC_CS_MASK
)

	)

761 
	#U_GC_P_MASK
 \

762 (
U_GC_PD_MASK
|
U_GC_PS_MASK
|
U_GC_PE_MASK
|
U_GC_PC_MASK
|
U_GC_PO_MASK
| \

763 
U_GC_PI_MASK
|
U_GC_PF_MASK
)

	)

766 
	#U_GC_S_MASK
 (
U_GC_SM_MASK
|
U_GC_SC_MASK
|
U_GC_SK_MASK
|
U_GC_SO_MASK
)

	)

772 
	eUCh¨Dúe˘i⁄
 {

776 
	mU_LEFT_TO_RIGHT
 = 0,

778 
	mU_RIGHT_TO_LEFT
 = 1,

780 
	mU_EUROPEAN_NUMBER
 = 2,

782 
	mU_EUROPEAN_NUMBER_SEPARATOR
 = 3,

784 
	mU_EUROPEAN_NUMBER_TERMINATOR
 = 4,

786 
	mU_ARABIC_NUMBER
 = 5,

788 
	mU_COMMON_NUMBER_SEPARATOR
 = 6,

790 
	mU_BLOCK_SEPARATOR
 = 7,

792 
	mU_SEGMENT_SEPARATOR
 = 8,

794 
	mU_WHITE_SPACE_NEUTRAL
 = 9,

796 
	mU_OTHER_NEUTRAL
 = 10,

798 
	mU_LEFT_TO_RIGHT_EMBEDDING
 = 11,

800 
	mU_LEFT_TO_RIGHT_OVERRIDE
 = 12,

802 
	mU_RIGHT_TO_LEFT_ARABIC
 = 13,

804 
	mU_RIGHT_TO_LEFT_EMBEDDING
 = 14,

806 
	mU_RIGHT_TO_LEFT_OVERRIDE
 = 15,

808 
	mU_POP_DIRECTIONAL_FORMAT
 = 16,

810 
	mU_DIR_NON_SPACING_MARK
 = 17,

812 
	mU_BOUNDARY_NEUTRAL
 = 18,

814 
	mU_CHAR_DIRECTION_COUNT


815 } 
	tUCh¨Dúe˘i⁄
;

821 
	eUBlockCode
 {

824 
	mUBLOCK_NO_BLOCK
 = 0,

827 
	mUBLOCK_BASIC_LATIN
 = 1,

830 
	mUBLOCK_LATIN_1_SUPPLEMENT
=2,

833 
	mUBLOCK_LATIN_EXTENDED_A
 =3,

836 
	mUBLOCK_LATIN_EXTENDED_B
 =4,

839 
	mUBLOCK_IPA_EXTENSIONS
 =5,

842 
	mUBLOCK_SPACING_MODIFIER_LETTERS
 =6,

845 
	mUBLOCK_COMBINING_DIACRITICAL_MARKS
 =7,

851 
	mUBLOCK_GREEK
 =8,

854 
	mUBLOCK_CYRILLIC
 =9,

857 
	mUBLOCK_ARMENIAN
 =10,

860 
	mUBLOCK_HEBREW
 =11,

863 
	mUBLOCK_ARABIC
 =12,

866 
	mUBLOCK_SYRIAC
 =13,

869 
	mUBLOCK_THAANA
 =14,

872 
	mUBLOCK_DEVANAGARI
 =15,

875 
	mUBLOCK_BENGALI
 =16,

878 
	mUBLOCK_GURMUKHI
 =17,

881 
	mUBLOCK_GUJARATI
 =18,

884 
	mUBLOCK_ORIYA
 =19,

887 
	mUBLOCK_TAMIL
 =20,

890 
	mUBLOCK_TELUGU
 =21,

893 
	mUBLOCK_KANNADA
 =22,

896 
	mUBLOCK_MALAYALAM
 =23,

899 
	mUBLOCK_SINHALA
 =24,

902 
	mUBLOCK_THAI
 =25,

905 
	mUBLOCK_LAO
 =26,

908 
	mUBLOCK_TIBETAN
 =27,

911 
	mUBLOCK_MYANMAR
 =28,

914 
	mUBLOCK_GEORGIAN
 =29,

917 
	mUBLOCK_HANGUL_JAMO
 =30,

920 
	mUBLOCK_ETHIOPIC
 =31,

923 
	mUBLOCK_CHEROKEE
 =32,

926 
	mUBLOCK_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS
 =33,

929 
	mUBLOCK_OGHAM
 =34,

932 
	mUBLOCK_RUNIC
 =35,

935 
	mUBLOCK_KHMER
 =36,

938 
	mUBLOCK_MONGOLIAN
 =37,

941 
	mUBLOCK_LATIN_EXTENDED_ADDITIONAL
 =38,

944 
	mUBLOCK_GREEK_EXTENDED
 =39,

947 
	mUBLOCK_GENERAL_PUNCTUATION
 =40,

950 
	mUBLOCK_SUPERSCRIPTS_AND_SUBSCRIPTS
 =41,

953 
	mUBLOCK_CURRENCY_SYMBOLS
 =42,

959 
	mUBLOCK_COMBINING_MARKS_FOR_SYMBOLS
 =43,

962 
	mUBLOCK_LETTERLIKE_SYMBOLS
 =44,

965 
	mUBLOCK_NUMBER_FORMS
 =45,

968 
	mUBLOCK_ARROWS
 =46,

971 
	mUBLOCK_MATHEMATICAL_OPERATORS
 =47,

974 
	mUBLOCK_MISCELLANEOUS_TECHNICAL
 =48,

977 
	mUBLOCK_CONTROL_PICTURES
 =49,

980 
	mUBLOCK_OPTICAL_CHARACTER_RECOGNITION
 =50,

983 
	mUBLOCK_ENCLOSED_ALPHANUMERICS
 =51,

986 
	mUBLOCK_BOX_DRAWING
 =52,

989 
	mUBLOCK_BLOCK_ELEMENTS
 =53,

992 
	mUBLOCK_GEOMETRIC_SHAPES
 =54,

995 
	mUBLOCK_MISCELLANEOUS_SYMBOLS
 =55,

998 
	mUBLOCK_DINGBATS
 =56,

1001 
	mUBLOCK_BRAILLE_PATTERNS
 =57,

1004 
	mUBLOCK_CJK_RADICALS_SUPPLEMENT
 =58,

1007 
	mUBLOCK_KANGXI_RADICALS
 =59,

1010 
	mUBLOCK_IDEOGRAPHIC_DESCRIPTION_CHARACTERS
 =60,

1013 
	mUBLOCK_CJK_SYMBOLS_AND_PUNCTUATION
 =61,

1016 
	mUBLOCK_HIRAGANA
 =62,

1019 
	mUBLOCK_KATAKANA
 =63,

1022 
	mUBLOCK_BOPOMOFO
 =64,

1025 
	mUBLOCK_HANGUL_COMPATIBILITY_JAMO
 =65,

1028 
	mUBLOCK_KANBUN
 =66,

1031 
	mUBLOCK_BOPOMOFO_EXTENDED
 =67,

1034 
	mUBLOCK_ENCLOSED_CJK_LETTERS_AND_MONTHS
 =68,

1037 
	mUBLOCK_CJK_COMPATIBILITY
 =69,

1040 
	mUBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A
 =70,

1043 
	mUBLOCK_CJK_UNIFIED_IDEOGRAPHS
 =71,

1046 
	mUBLOCK_YI_SYLLABLES
 =72,

1049 
	mUBLOCK_YI_RADICALS
 =73,

1052 
	mUBLOCK_HANGUL_SYLLABLES
 =74,

1055 
	mUBLOCK_HIGH_SURROGATES
 =75,

1058 
	mUBLOCK_HIGH_PRIVATE_USE_SURROGATES
 =76,

1061 
	mUBLOCK_LOW_SURROGATES
 =77,

1072 
	mUBLOCK_PRIVATE_USE
 = 78,

1082 
	mUBLOCK_PRIVATE_USE_AREA
 =
UBLOCK_PRIVATE_USE
,

1085 
	mUBLOCK_CJK_COMPATIBILITY_IDEOGRAPHS
 =79,

1088 
	mUBLOCK_ALPHABETIC_PRESENTATION_FORMS
 =80,

1091 
	mUBLOCK_ARABIC_PRESENTATION_FORMS_A
 =81,

1094 
	mUBLOCK_COMBINING_HALF_MARKS
 =82,

1097 
	mUBLOCK_CJK_COMPATIBILITY_FORMS
 =83,

1100 
	mUBLOCK_SMALL_FORM_VARIANTS
 =84,

1103 
	mUBLOCK_ARABIC_PRESENTATION_FORMS_B
 =85,

1106 
	mUBLOCK_SPECIALS
 =86,

1109 
	mUBLOCK_HALFWIDTH_AND_FULLWIDTH_FORMS
 =87,

1114 
	mUBLOCK_OLD_ITALIC
 = 88 ,

1116 
	mUBLOCK_GOTHIC
 = 89 ,

1118 
	mUBLOCK_DESERET
 = 90 ,

1120 
	mUBLOCK_BYZANTINE_MUSICAL_SYMBOLS
 = 91 ,

1122 
	mUBLOCK_MUSICAL_SYMBOLS
 = 92 ,

1124 
	mUBLOCK_MATHEMATICAL_ALPHANUMERIC_SYMBOLS
 = 93 ,

1126 
	mUBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B
 = 94 ,

1128 
	mUBLOCK_CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT
 = 95 ,

1130 
	mUBLOCK_TAGS
 = 96,

1138 
	mUBLOCK_CYRILLIC_SUPPLEMENTARY
 = 97,

1140 
	mUBLOCK_CYRILLIC_SUPPLEMENT
 = 
UBLOCK_CYRILLIC_SUPPLEMENTARY
,

1142 
	mUBLOCK_TAGALOG
 = 98,

1144 
	mUBLOCK_HANUNOO
 = 99,

1146 
	mUBLOCK_BUHID
 = 100,

1148 
	mUBLOCK_TAGBANWA
 = 101,

1150 
	mUBLOCK_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A
 = 102,

1152 
	mUBLOCK_SUPPLEMENTAL_ARROWS_A
 = 103,

1154 
	mUBLOCK_SUPPLEMENTAL_ARROWS_B
 = 104,

1156 
	mUBLOCK_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B
 = 105,

1158 
	mUBLOCK_SUPPLEMENTAL_MATHEMATICAL_OPERATORS
 = 106,

1160 
	mUBLOCK_KATAKANA_PHONETIC_EXTENSIONS
 = 107,

1162 
	mUBLOCK_VARIATION_SELECTORS
 = 108,

1164 
	mUBLOCK_SUPPLEMENTARY_PRIVATE_USE_AREA_A
 = 109,

1166 
	mUBLOCK_SUPPLEMENTARY_PRIVATE_USE_AREA_B
 = 110,

1171 
	mUBLOCK_LIMBU
 = 111,

1173 
	mUBLOCK_TAI_LE
 = 112,

1175 
	mUBLOCK_KHMER_SYMBOLS
 = 113,

1177 
	mUBLOCK_PHONETIC_EXTENSIONS
 = 114,

1179 
	mUBLOCK_MISCELLANEOUS_SYMBOLS_AND_ARROWS
 = 115,

1181 
	mUBLOCK_YIJING_HEXAGRAM_SYMBOLS
 = 116,

1183 
	mUBLOCK_LINEAR_B_SYLLABARY
 = 117,

1185 
	mUBLOCK_LINEAR_B_IDEOGRAMS
 = 118,

1187 
	mUBLOCK_AEGEAN_NUMBERS
 = 119,

1189 
	mUBLOCK_UGARITIC
 = 120,

1191 
	mUBLOCK_SHAVIAN
 = 121,

1193 
	mUBLOCK_OSMANYA
 = 122,

1195 
	mUBLOCK_CYPRIOT_SYLLABARY
 = 123,

1197 
	mUBLOCK_TAI_XUAN_JING_SYMBOLS
 = 124,

1199 
	mUBLOCK_VARIATION_SELECTORS_SUPPLEMENT
 = 125,

1204 
	mUBLOCK_ANCIENT_GREEK_MUSICAL_NOTATION
 = 126,

1206 
	mUBLOCK_ANCIENT_GREEK_NUMBERS
 = 127,

1208 
	mUBLOCK_ARABIC_SUPPLEMENT
 = 128,

1210 
	mUBLOCK_BUGINESE
 = 129,

1212 
	mUBLOCK_CJK_STROKES
 = 130,

1214 
	mUBLOCK_COMBINING_DIACRITICAL_MARKS_SUPPLEMENT
 = 131,

1216 
	mUBLOCK_COPTIC
 = 132,

1218 
	mUBLOCK_ETHIOPIC_EXTENDED
 = 133,

1220 
	mUBLOCK_ETHIOPIC_SUPPLEMENT
 = 134,

1222 
	mUBLOCK_GEORGIAN_SUPPLEMENT
 = 135,

1224 
	mUBLOCK_GLAGOLITIC
 = 136,

1226 
	mUBLOCK_KHAROSHTHI
 = 137,

1228 
	mUBLOCK_MODIFIER_TONE_LETTERS
 = 138,

1230 
	mUBLOCK_NEW_TAI_LUE
 = 139,

1232 
	mUBLOCK_OLD_PERSIAN
 = 140,

1234 
	mUBLOCK_PHONETIC_EXTENSIONS_SUPPLEMENT
 = 141,

1236 
	mUBLOCK_SUPPLEMENTAL_PUNCTUATION
 = 142,

1238 
	mUBLOCK_SYLOTI_NAGRI
 = 143,

1240 
	mUBLOCK_TIFINAGH
 = 144,

1242 
	mUBLOCK_VERTICAL_FORMS
 = 145,

1247 
	mUBLOCK_NKO
 = 146,

1249 
	mUBLOCK_BALINESE
 = 147,

1251 
	mUBLOCK_LATIN_EXTENDED_C
 = 148,

1253 
	mUBLOCK_LATIN_EXTENDED_D
 = 149,

1255 
	mUBLOCK_PHAGS_PA
 = 150,

1257 
	mUBLOCK_PHOENICIAN
 = 151,

1259 
	mUBLOCK_CUNEIFORM
 = 152,

1261 
	mUBLOCK_CUNEIFORM_NUMBERS_AND_PUNCTUATION
 = 153,

1263 
	mUBLOCK_COUNTING_ROD_NUMERALS
 = 154,

1268 
	mUBLOCK_SUNDANESE
 = 155,

1270 
	mUBLOCK_LEPCHA
 = 156,

1272 
	mUBLOCK_OL_CHIKI
 = 157,

1274 
	mUBLOCK_CYRILLIC_EXTENDED_A
 = 158,

1276 
	mUBLOCK_VAI
 = 159,

1278 
	mUBLOCK_CYRILLIC_EXTENDED_B
 = 160,

1280 
	mUBLOCK_SAURASHTRA
 = 161,

1282 
	mUBLOCK_KAYAH_LI
 = 162,

1284 
	mUBLOCK_REJANG
 = 163,

1286 
	mUBLOCK_CHAM
 = 164,

1288 
	mUBLOCK_ANCIENT_SYMBOLS
 = 165,

1290 
	mUBLOCK_PHAISTOS_DISC
 = 166,

1292 
	mUBLOCK_LYCIAN
 = 167,

1294 
	mUBLOCK_CARIAN
 = 168,

1296 
	mUBLOCK_LYDIAN
 = 169,

1298 
	mUBLOCK_MAHJONG_TILES
 = 170,

1300 
	mUBLOCK_DOMINO_TILES
 = 171,

1305 
	mUBLOCK_SAMARITAN
 = 172,

1307 
	mUBLOCK_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED
 = 173,

1309 
	mUBLOCK_TAI_THAM
 = 174,

1311 
	mUBLOCK_VEDIC_EXTENSIONS
 = 175,

1313 
	mUBLOCK_LISU
 = 176,

1315 
	mUBLOCK_BAMUM
 = 177,

1317 
	mUBLOCK_COMMON_INDIC_NUMBER_FORMS
 = 178,

1319 
	mUBLOCK_DEVANAGARI_EXTENDED
 = 179,

1321 
	mUBLOCK_HANGUL_JAMO_EXTENDED_A
 = 180,

1323 
	mUBLOCK_JAVANESE
 = 181,

1325 
	mUBLOCK_MYANMAR_EXTENDED_A
 = 182,

1327 
	mUBLOCK_TAI_VIET
 = 183,

1329 
	mUBLOCK_MEETEI_MAYEK
 = 184,

1331 
	mUBLOCK_HANGUL_JAMO_EXTENDED_B
 = 185,

1333 
	mUBLOCK_IMPERIAL_ARAMAIC
 = 186,

1335 
	mUBLOCK_OLD_SOUTH_ARABIAN
 = 187,

1337 
	mUBLOCK_AVESTAN
 = 188,

1339 
	mUBLOCK_INSCRIPTIONAL_PARTHIAN
 = 189,

1341 
	mUBLOCK_INSCRIPTIONAL_PAHLAVI
 = 190,

1343 
	mUBLOCK_OLD_TURKIC
 = 191,

1345 
	mUBLOCK_RUMI_NUMERAL_SYMBOLS
 = 192,

1347 
	mUBLOCK_KAITHI
 = 193,

1349 
	mUBLOCK_EGYPTIAN_HIEROGLYPHS
 = 194,

1351 
	mUBLOCK_ENCLOSED_ALPHANUMERIC_SUPPLEMENT
 = 195,

1353 
	mUBLOCK_ENCLOSED_IDEOGRAPHIC_SUPPLEMENT
 = 196,

1355 
	mUBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C
 = 197,

1360 
	mUBLOCK_MANDAIC
 = 198,

1362 
	mUBLOCK_BATAK
 = 199,

1364 
	mUBLOCK_ETHIOPIC_EXTENDED_A
 = 200,

1366 
	mUBLOCK_BRAHMI
 = 201,

1368 
	mUBLOCK_BAMUM_SUPPLEMENT
 = 202,

1370 
	mUBLOCK_KANA_SUPPLEMENT
 = 203,

1372 
	mUBLOCK_PLAYING_CARDS
 = 204,

1374 
	mUBLOCK_MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS
 = 205,

1376 
	mUBLOCK_EMOTICONS
 = 206,

1378 
	mUBLOCK_TRANSPORT_AND_MAP_SYMBOLS
 = 207,

1380 
	mUBLOCK_ALCHEMICAL_SYMBOLS
 = 208,

1382 
	mUBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D
 = 209,

1385 
	mUBLOCK_COUNT
 = 210,

1388 
	mUBLOCK_INVALID_CODE
=-1

1392 
UBlockCode
 
	tUBlockCode
;

1401 
	eUEa°AsünWidth
 {

1402 
	mU_EA_NEUTRAL
,

1403 
	mU_EA_AMBIGUOUS
,

1404 
	mU_EA_HALFWIDTH
,

1405 
	mU_EA_FULLWIDTH
,

1406 
	mU_EA_NARROW
,

1407 
	mU_EA_WIDE
,

1408 
	mU_EA_COUNT


1409 } 
	tUEa°AsünWidth
;

1426 
	eUCh¨NameChoi˚
 {

1427 
	mU_UNICODE_CHAR_NAME
,

1428 
	mU_UNICODE_10_CHAR_NAME
,

1429 
	mU_EXTENDED_CHAR_NAME
,

1430 
	mU_CHAR_NAME_ALIAS
,

1431 
	mU_CHAR_NAME_CHOICE_COUNT


1432 } 
	tUCh¨NameChoi˚
;

1447 
	eUPr›îtyNameChoi˚
 {

1448 
	mU_SHORT_PROPERTY_NAME
,

1449 
	mU_LONG_PROPERTY_NAME
,

1450 
	mU_PROPERTY_NAME_CHOICE_COUNT


1451 } 
	tUPr›îtyNameChoi˚
;

1459 
	eUDecomposôi⁄Ty≥
 {

1460 
	mU_DT_NONE
,

1461 
	mU_DT_CANONICAL
,

1462 
	mU_DT_COMPAT
,

1463 
	mU_DT_CIRCLE
,

1464 
	mU_DT_FINAL
,

1465 
	mU_DT_FONT
,

1466 
	mU_DT_FRACTION
,

1467 
	mU_DT_INITIAL
,

1468 
	mU_DT_ISOLATED
,

1469 
	mU_DT_MEDIAL
,

1470 
	mU_DT_NARROW
,

1471 
	mU_DT_NOBREAK
,

1472 
	mU_DT_SMALL
,

1473 
	mU_DT_SQUARE
,

1474 
	mU_DT_SUB
,

1475 
	mU_DT_SUPER
,

1476 
	mU_DT_VERTICAL
,

1477 
	mU_DT_WIDE
,

1478 
	mU_DT_COUNT


1479 } 
	tUDecomposôi⁄Ty≥
;

1487 
	eUJoöögTy≥
 {

1488 
	mU_JT_NON_JOINING
,

1489 
	mU_JT_JOIN_CAUSING
,

1490 
	mU_JT_DUAL_JOINING
,

1491 
	mU_JT_LEFT_JOINING
,

1492 
	mU_JT_RIGHT_JOINING
,

1493 
	mU_JT_TRANSPARENT
,

1494 
	mU_JT_COUNT


1495 } 
	tUJoöögTy≥
;

1503 
	eUJoöögGroup
 {

1504 
	mU_JG_NO_JOINING_GROUP
,

1505 
	mU_JG_AIN
,

1506 
	mU_JG_ALAPH
,

1507 
	mU_JG_ALEF
,

1508 
	mU_JG_BEH
,

1509 
	mU_JG_BETH
,

1510 
	mU_JG_DAL
,

1511 
	mU_JG_DALATH_RISH
,

1512 
	mU_JG_E
,

1513 
	mU_JG_FEH
,

1514 
	mU_JG_FINAL_SEMKATH
,

1515 
	mU_JG_GAF
,

1516 
	mU_JG_GAMAL
,

1517 
	mU_JG_HAH
,

1518 
	mU_JG_TEH_MARBUTA_GOAL
,

1519 
	mU_JG_HAMZA_ON_HEH_GOAL
=
U_JG_TEH_MARBUTA_GOAL
,

1520 
	mU_JG_HE
,

1521 
	mU_JG_HEH
,

1522 
	mU_JG_HEH_GOAL
,

1523 
	mU_JG_HETH
,

1524 
	mU_JG_KAF
,

1525 
	mU_JG_KAPH
,

1526 
	mU_JG_KNOTTED_HEH
,

1527 
	mU_JG_LAM
,

1528 
	mU_JG_LAMADH
,

1529 
	mU_JG_MEEM
,

1530 
	mU_JG_MIM
,

1531 
	mU_JG_NOON
,

1532 
	mU_JG_NUN
,

1533 
	mU_JG_PE
,

1534 
	mU_JG_QAF
,

1535 
	mU_JG_QAPH
,

1536 
	mU_JG_REH
,

1537 
	mU_JG_REVERSED_PE
,

1538 
	mU_JG_SAD
,

1539 
	mU_JG_SADHE
,

1540 
	mU_JG_SEEN
,

1541 
	mU_JG_SEMKATH
,

1542 
	mU_JG_SHIN
,

1543 
	mU_JG_SWASH_KAF
,

1544 
	mU_JG_SYRIAC_WAW
,

1545 
	mU_JG_TAH
,

1546 
	mU_JG_TAW
,

1547 
	mU_JG_TEH_MARBUTA
,

1548 
	mU_JG_TETH
,

1549 
	mU_JG_WAW
,

1550 
	mU_JG_YEH
,

1551 
	mU_JG_YEH_BARREE
,

1552 
	mU_JG_YEH_WITH_TAIL
,

1553 
	mU_JG_YUDH
,

1554 
	mU_JG_YUDH_HE
,

1555 
	mU_JG_ZAIN
,

1556 
	mU_JG_FE
,

1557 
	mU_JG_KHAPH
,

1558 
	mU_JG_ZHAIN
,

1559 
	mU_JG_BURUSHASKI_YEH_BARREE
,

1560 
	mU_JG_FARSI_YEH
,

1561 
	mU_JG_NYA
,

1562 
	mU_JG_COUNT


1563 } 
	tUJoöögGroup
;

1571 
	eUGøphemeClu°îBªak
 {

1572 
	mU_GCB_OTHER
 = 0,

1573 
	mU_GCB_CONTROL
 = 1,

1574 
	mU_GCB_CR
 = 2,

1575 
	mU_GCB_EXTEND
 = 3,

1576 
	mU_GCB_L
 = 4,

1577 
	mU_GCB_LF
 = 5,

1578 
	mU_GCB_LV
 = 6,

1579 
	mU_GCB_LVT
 = 7,

1580 
	mU_GCB_T
 = 8,

1581 
	mU_GCB_V
 = 9,

1582 
	mU_GCB_SPACING_MARK
 = 10,

1583 
	mU_GCB_PREPEND
 = 11,

1584 
	mU_GCB_COUNT
 = 12

1585 } 
	tUGøphemeClu°îBªak
;

1594 
	eUW‹dBªakVÆues
 {

1595 
	mU_WB_OTHER
 = 0,

1596 
	mU_WB_ALETTER
 = 1,

1597 
	mU_WB_FORMAT
 = 2,

1598 
	mU_WB_KATAKANA
 = 3,

1599 
	mU_WB_MIDLETTER
 = 4,

1600 
	mU_WB_MIDNUM
 = 5,

1601 
	mU_WB_NUMERIC
 = 6,

1602 
	mU_WB_EXTENDNUMLET
 = 7,

1603 
	mU_WB_CR
 = 8,

1604 
	mU_WB_EXTEND
 = 9,

1605 
	mU_WB_LF
 = 10,

1606 
	mU_WB_MIDNUMLET
 =11,

1607 
	mU_WB_NEWLINE
 =12,

1608 
	mU_WB_COUNT
 = 13

1609 } 
	tUW‹dBªakVÆues
;

1617 
	eUSíãn˚Bªak
 {

1618 
	mU_SB_OTHER
 = 0,

1619 
	mU_SB_ATERM
 = 1,

1620 
	mU_SB_CLOSE
 = 2,

1621 
	mU_SB_FORMAT
 = 3,

1622 
	mU_SB_LOWER
 = 4,

1623 
	mU_SB_NUMERIC
 = 5,

1624 
	mU_SB_OLETTER
 = 6,

1625 
	mU_SB_SEP
 = 7,

1626 
	mU_SB_SP
 = 8,

1627 
	mU_SB_STERM
 = 9,

1628 
	mU_SB_UPPER
 = 10,

1629 
	mU_SB_CR
 = 11,

1630 
	mU_SB_EXTEND
 = 12,

1631 
	mU_SB_LF
 = 13,

1632 
	mU_SB_SCONTINUE
 = 14,

1633 
	mU_SB_COUNT
 = 15

1634 } 
	tUSíãn˚Bªak
;

1642 
	eULöeBªak
 {

1643 
	mU_LB_UNKNOWN
 = 0,

1644 
	mU_LB_AMBIGUOUS
 = 1,

1645 
	mU_LB_ALPHABETIC
 = 2,

1646 
	mU_LB_BREAK_BOTH
 = 3,

1647 
	mU_LB_BREAK_AFTER
 = 4,

1648 
	mU_LB_BREAK_BEFORE
 = 5,

1649 
	mU_LB_MANDATORY_BREAK
 = 6,

1650 
	mU_LB_CONTINGENT_BREAK
 = 7,

1651 
	mU_LB_CLOSE_PUNCTUATION
 = 8,

1652 
	mU_LB_COMBINING_MARK
 = 9,

1653 
	mU_LB_CARRIAGE_RETURN
 = 10,

1654 
	mU_LB_EXCLAMATION
 = 11,

1655 
	mU_LB_GLUE
 = 12,

1656 
	mU_LB_HYPHEN
 = 13,

1657 
	mU_LB_IDEOGRAPHIC
 = 14,

1658 
	mU_LB_INSEPERABLE
 = 15,

1660 
	mU_LB_INSEPARABLE
=
U_LB_INSEPERABLE
,

1661 
	mU_LB_INFIX_NUMERIC
 = 16,

1662 
	mU_LB_LINE_FEED
 = 17,

1663 
	mU_LB_NONSTARTER
 = 18,

1664 
	mU_LB_NUMERIC
 = 19,

1665 
	mU_LB_OPEN_PUNCTUATION
 = 20,

1666 
	mU_LB_POSTFIX_NUMERIC
 = 21,

1667 
	mU_LB_PREFIX_NUMERIC
 = 22,

1668 
	mU_LB_QUOTATION
 = 23,

1669 
	mU_LB_COMPLEX_CONTEXT
 = 24,

1670 
	mU_LB_SURROGATE
 = 25,

1671 
	mU_LB_SPACE
 = 26,

1672 
	mU_LB_BREAK_SYMBOLS
 = 27,

1673 
	mU_LB_ZWSPACE
 = 28,

1674 
	mU_LB_NEXT_LINE
 = 29,

1675 
	mU_LB_WORD_JOINER
 = 30,

1676 
	mU_LB_H2
 = 31,

1677 
	mU_LB_H3
 = 32,

1678 
	mU_LB_JL
 = 33,

1679 
	mU_LB_JT
 = 34,

1680 
	mU_LB_JV
 = 35,

1681 
	mU_LB_CLOSE_PARENTHESIS
 = 36,

1682 
	mU_LB_COUNT
 = 37

1683 } 
	tULöeBªak
;

1691 
	eUNumîicTy≥
 {

1692 
	mU_NT_NONE
,

1693 
	mU_NT_DECIMAL
,

1694 
	mU_NT_DIGIT
,

1695 
	mU_NT_NUMERIC
,

1696 
	mU_NT_COUNT


1697 } 
	tUNumîicTy≥
;

1705 
	eUH™gulSyŒabÀTy≥
 {

1706 
	mU_HST_NOT_APPLICABLE
,

1707 
	mU_HST_LEADING_JAMO
,

1708 
	mU_HST_VOWEL_JAMO
,

1709 
	mU_HST_TRAILING_JAMO
,

1710 
	mU_HST_LV_SYLLABLE
,

1711 
	mU_HST_LVT_SYLLABLE
,

1712 
	mU_HST_COUNT


1713 } 
	tUH™gulSyŒabÀTy≥
;

1741 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


1742 
u_hasBö¨yPr›îty
(
UCh¨32
 
c
, 
UPr›îty
 
which
);

1756 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


1757 
u_isUAÕhabëic
(
UCh¨32
 
c
);

1771 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


1772 
u_isULowîˇ£
(
UCh¨32
 
c
);

1786 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


1787 
u_isUUµîˇ£
(
UCh¨32
 
c
);

1807 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


1808 
u_isUWhôeS∑˚
(
UCh¨32
 
c
);

1847 
U_STABLE
 
öt32_t
 
U_EXPORT2


1848 
u_gëI¡Pr›îtyVÆue
(
UCh¨32
 
c
, 
UPr›îty
 
which
);

1868 
U_STABLE
 
öt32_t
 
U_EXPORT2


1869 
u_gëI¡Pr›îtyMöVÆue
(
UPr›îty
 
which
);

1897 
U_STABLE
 
öt32_t
 
U_EXPORT2


1898 
u_gëI¡Pr›îtyMaxVÆue
(
UPr›îty
 
which
);

1920 
U_STABLE
 
U_EXPORT2


1921 
u_gëNumîicVÆue
(
UCh¨32
 
c
);

1930 
	#U_NO_NUMERIC_VALUE
 (()-123456789.)

	)

1955 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


1956 
u_i¶owî
(
UCh¨32
 
c
);

1982 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


1983 
u_isuµî
(
UCh¨32
 
c
);

1999 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


2000 
u_i°ôÀ
(
UCh¨32
 
c
);

2020 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


2021 
u_isdigô
(
UCh¨32
 
c
);

2041 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


2042 
u_ißÕha
(
UCh¨32
 
c
);

2062 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


2063 
u_iß um
(
UCh¨32
 
c
);

2085 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


2086 
u_isxdigô
(
UCh¨32
 
c
);

2101 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


2102 
u_i•un˘
(
UCh¨32
 
c
);

2120 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


2121 
u_isgøph
(
UCh¨32
 
c
);

2149 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


2150 
u_isbœnk
(
UCh¨32
 
c
);

2174 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


2175 
u_isdeföed
(
UCh¨32
 
c
);

2195 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


2196 
u_is•a˚
(
UCh¨32
 
c
);

2216 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


2217 
u_isJavaS∑˚Ch¨
(
UCh¨32
 
c
);

2256 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


2257 
u_isWhôe•a˚
(
UCh¨32
 
c
);

2280 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


2281 
u_is˙ål
(
UCh¨32
 
c
);

2295 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


2296 
u_isISOC⁄åﬁ
(
UCh¨32
 
c
);

2313 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


2314 
u_i•röt
(
UCh¨32
 
c
);

2334 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


2335 
u_isba£
(
UCh¨32
 
c
);

2353 
U_STABLE
 
UCh¨Dúe˘i⁄
 
U_EXPORT2


2354 
u_ch¨Dúe˘i⁄
(
UCh¨32
 
c
);

2371 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


2372 
u_isMúr‹ed
(
UCh¨32
 
c
);

2393 
U_STABLE
 
UCh¨32
 
U_EXPORT2


2394 
u_ch¨Múr‹
(
UCh¨32
 
c
);

2407 
U_STABLE
 
öt8_t
 
U_EXPORT2


2408 
u_ch¨Ty≥
(
UCh¨32
 
c
);

2423 
	#U_GET_GC_MASK
(
c
Ë
	`U_MASK
(
	`u_ch¨Ty≥
(c))

	)

2442 
UBoﬁ
 
	tU_CALLCONV


2443 
	tUCh¨EnumTy≥R™ge
(c⁄° *
	tc⁄ãxt
, 
	tUCh¨32
 
	t°¨t
, UCh¨32 
	tlimô
, 
	tUCh¨C©eg‹y
 
	tty≥
);

2464 
U_STABLE
 
U_EXPORT2


2465 
u_íumCh¨Ty≥s
(
UCh¨EnumTy≥R™ge
 *
íumR™ge
, c⁄° *
c⁄ãxt
);

2467 #i‡!
UCONFIG_NO_NORMALIZATION


2476 
U_STABLE
 
uöt8_t
 
U_EXPORT2


2477 
u_gëComböögCœss
(
UCh¨32
 
c
);

2504 
U_STABLE
 
öt32_t
 
U_EXPORT2


2505 
u_ch¨DigôVÆue
(
UCh¨32
 
c
);

2516 
U_STABLE
 
UBlockCode
 
U_EXPORT2


2517 
ublock_gëCode
(
UCh¨32
 
c
);

2551 
U_STABLE
 
öt32_t
 
U_EXPORT2


2552 
u_ch¨Name
(
UCh¨32
 
code
, 
UCh¨NameChoi˚
 
«meChoi˚
,

2553 *
buf„r
, 
öt32_t
 
buf„rLígth
,

2554 
UEº‹Code
 *
pEº‹Code
);

2581 
U_STABLE
 
öt32_t
 
U_EXPORT2


2582 
u_gëISOCommít
(
UCh¨32
 
c
,

2583 *
de°
, 
öt32_t
 
de°C≠acôy
,

2584 
UEº‹Code
 *
pEº‹Code
);

2606 
U_STABLE
 
UCh¨32
 
U_EXPORT2


2607 
u_ch¨FromName
(
UCh¨NameChoi˚
 
«meChoi˚
,

2608 c⁄° *
«me
,

2609 
UEº‹Code
 *
pEº‹Code
);

2628 
UBoﬁ
 
	tU_CALLCONV
 
	tUEnumCh¨NamesFn
(*
	tc⁄ãxt
,

2629 
	tUCh¨32
 
	tcode
,

2630 
	tUCh¨NameChoi˚
 
	t«meChoi˚
,

2631 c⁄° *
	t«me
,

2632 
	töt32_t
 
	tÀngth
);

2655 
U_STABLE
 
U_EXPORT2


2656 
u_íumCh¨Names
(
UCh¨32
 
°¨t
, UCh¨32 
limô
,

2657 
UEnumCh¨NamesFn
 *
‚
,

2658 *
c⁄ãxt
,

2659 
UCh¨NameChoi˚
 
«meChoi˚
,

2660 
UEº‹Code
 *
pEº‹Code
);

2693 
U_STABLE
 c⁄° * 
U_EXPORT2


2694 
u_gëPr›îtyName
(
UPr›îty
 
¥›îty
,

2695 
UPr›îtyNameChoi˚
 
«meChoi˚
);

2716 
U_STABLE
 
UPr›îty
 
U_EXPORT2


2717 
u_gëPr›îtyEnum
(c⁄° * 
Æüs
);

2766 
U_STABLE
 c⁄° * 
U_EXPORT2


2767 
u_gëPr›îtyVÆueName
(
UPr›îty
 
¥›îty
,

2768 
öt32_t
 
vÆue
,

2769 
UPr›îtyNameChoi˚
 
«meChoi˚
);

2802 
U_STABLE
 
öt32_t
 
U_EXPORT2


2803 
u_gëPr›îtyVÆueEnum
(
UPr›îty
 
¥›îty
,

2804 c⁄° * 
Æüs
);

2823 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


2824 
u_isIDSèπ
(
UCh¨32
 
c
);

2847 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


2848 
u_isIDP¨t
(
UCh¨32
 
c
);

2870 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


2871 
u_isIDIgn‹abÀ
(
UCh¨32
 
c
);

2889 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


2890 
u_isJavaIDSèπ
(
UCh¨32
 
c
);

2910 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


2911 
u_isJavaIDP¨t
(
UCh¨32
 
c
);

2935 
U_STABLE
 
UCh¨32
 
U_EXPORT2


2936 
u_tﬁowî
(
UCh¨32
 
c
);

2960 
U_STABLE
 
UCh¨32
 
U_EXPORT2


2961 
u_touµî
(
UCh¨32
 
c
);

2985 
U_STABLE
 
UCh¨32
 
U_EXPORT2


2986 
u_tŸôÀ
(
UCh¨32
 
c
);

2989 
	#U_FOLD_CASE_DEFAULT
 0

	)

3007 
	#U_FOLD_CASE_EXCLUDE_SPECIAL_I
 1

	)

3031 
U_STABLE
 
UCh¨32
 
U_EXPORT2


3032 
u_fﬁdCa£
(
UCh¨32
 
c
, 
uöt32_t
 
›ti⁄s
);

3072 
U_STABLE
 
öt32_t
 
U_EXPORT2


3073 
u_digô
(
UCh¨32
 
ch
, 
öt8_t
 
ødix
);

3103 
U_STABLE
 
UCh¨32
 
U_EXPORT2


3104 
u_f‹Digô
(
öt32_t
 
digô
, 
öt8_t
 
ødix
);

3120 
U_STABLE
 
U_EXPORT2


3121 
u_ch¨Age
(
UCh¨32
 
c
, 
UVîsi⁄Info
 
vîsi⁄Aºay
);

3134 
U_STABLE
 
U_EXPORT2


3135 
u_gëUnicodeVîsi⁄
(
UVîsi⁄Info
 
vîsi⁄Aºay
);

3137 #i‡!
UCONFIG_NO_NORMALIZATION


3159 
U_STABLE
 
öt32_t
 
U_EXPORT2


3160 
u_gëFC_NFKC_Closuª
(
UCh¨32
 
c
, 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
, 
UEº‹Code
 *
pEº‹Code
);

3165 
	gU_CDECL_END


	@unicode/uchriter.h

8 #i‚de‡
UCHRITER_H


9 
	#UCHRITER_H


	)

11 
	~"unicode/uty≥s.h
"

12 
	~"unicode/ch¨ôî.h
"

19 
U_NAMESPACE_BEGIN


33 ˛as†
	cU_COMMON_API
 
	mUCh¨Ch¨a˘îIãøt‹
 : 
public
 
Ch¨a˘îIãøt‹
 {

34 
public
:

44 
UCh¨Ch¨a˘îIãøt‹
(c⁄° 
UCh¨
* 
ãxtPå
, 
öt32_t
 
Àngth
);

59 
UCh¨Ch¨a˘îIãøt‹
(c⁄° 
UCh¨
* 
ãxtPå
, 
öt32_t
 
Àngth
,

60 
öt32_t
 
posôi⁄
);

78 
UCh¨Ch¨a˘îIãøt‹
(c⁄° 
UCh¨
* 
ãxtPå
, 
öt32_t
 
Àngth
,

79 
öt32_t
 
ãxtBegö
,

80 
öt32_t
 
ãxtEnd
,

81 
öt32_t
 
posôi⁄
);

90 
UCh¨Ch¨a˘îIãøt‹
(c⁄° UCh¨Ch¨a˘îIãøt‹& 
th©
);

96 
	mvútuÆ
 ~
UCh¨Ch¨a˘îIãøt‹
();

106 
	mUCh¨Ch¨a˘îIãøt‹
&

107 
	m›î©‹
=(c⁄° 
UCh¨Ch¨a˘îIãøt‹
& 
th©
);

117 
vútuÆ
 
UBoﬁ
 
	m›î©‹
==(c⁄° 
F‹w¨dCh¨a˘îIãøt‹
& 
th©
) const;

124 
vútuÆ
 
öt32_t
 
	$hashCode
() const;

133 
vútuÆ
 
Ch¨a˘îIãøt‹
* 
	$˛⁄e
() const;

142 
vútuÆ
 
UCh¨
 
	`fú°
();

152 
vútuÆ
 
UCh¨
 
	`fú°Po°Inc
();

163 
vútuÆ
 
UCh¨32
 
	`fú°32
();

173 
vútuÆ
 
UCh¨32
 
	`fú°32Po°Inc
();

182 
vútuÆ
 
UCh¨
 
	`œ°
();

191 
vútuÆ
 
UCh¨32
 
	`œ°32
();

201 
vútuÆ
 
UCh¨
 
	`£tIndex
(
öt32_t
 
posôi⁄
);

214 
vútuÆ
 
UCh¨32
 
	`£tIndex32
(
öt32_t
 
posôi⁄
);

221 
vútuÆ
 
UCh¨
 
	$cuºít
() const;

228 
vútuÆ
 
UCh¨32
 
	$cuºít32
() const;

237 
vútuÆ
 
UCh¨
 
	`√xt
();

247 
vútuÆ
 
UCh¨
 
	`√xtPo°Inc
();

259 
vútuÆ
 
UCh¨32
 
	`√xt32
();

269 
vútuÆ
 
UCh¨32
 
	`√xt32Po°Inc
();

280 
vútuÆ
 
UBoﬁ
 
	`hasNext
();

289 
vútuÆ
 
UCh¨
 
	`¥evious
();

298 
vútuÆ
 
UCh¨32
 
	`¥evious32
();

309 
vútuÆ
 
UBoﬁ
 
	`hasPªvious
();

322 
vútuÆ
 
öt32_t
 
	`move
(öt32_à
dñè
, 
EOrigö
 
‹igö
);

335 
vútuÆ
 
öt32_t
 
	`move32
(öt32_à
dñè
, 
EOrigö
 
‹igö
);

341 
	`£tText
(c⁄° 
UCh¨
* 
√wText
, 
öt32_t
 
√wTextLígth
);

350 
vútuÆ
 
	`gëText
(
UnicodeSåög
& 
ªsu…
);

357 
UCœssID
 
U_EXPORT2
 
	`gëSèticCœssID
();

364 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const;

366 
¥Ÿe˘ed
:

371 
	`UCh¨Ch¨a˘îIãøt‹
();

376 c⁄° 
UCh¨
* 
ãxt
;

380 
U_NAMESPACE_END


	@unicode/uclean.h

17 #i‚de‡
__UCLEAN_H__


18 
	#__UCLEAN_H__


	)

20 
	~"unicode/uty≥s.h
"

52 
U_STABLE
 
U_EXPORT2


53 
u_öô
(
UEº‹Code
 *
°©us
);

100 
U_STABLE
 
U_EXPORT2


101 
u_˛ónup
();

113 *
	tUMTX
;

131 
	tU_CALLCONV
 
	tUMtxInôFn
 (c⁄° *
	tc⁄ãxt
, 
	tUMTX
 *
	tmuãx
, 
	tUEº‹Code
* 
	t°©us
);

143 
	tU_CALLCONV
 
	tUMtxFn
 (c⁄° *
	tc⁄ãxt
, 
	tUMTX
 *
	tmuãx
);

165 
U_STABLE
 
U_EXPORT2


166 
u_£tMuãxFun˘i⁄s
(c⁄° *
c⁄ãxt
, 
UMtxInôFn
 *
öô
, 
UMtxFn
 *
de°roy
, UMtxF¿*
lock
, UMtxF¿*
u∆ock
,

167 
UEº‹Code
 *
°©us
);

178 
öt32_t
 
	tU_CALLCONV
 
	tUMtxAtomicFn
(c⁄° *
	tc⁄ãxt
, 
	töt32_t
 *
	tp
);

195 
U_STABLE
 
U_EXPORT2


196 
u_£tAtomicIncDecFun˘i⁄s
(c⁄° *
c⁄ãxt
, 
UMtxAtomicFn
 *
öc
, UMtxAtomicF¿*
dec
,

197 
UEº‹Code
 *
°©us
);

209 *
	tU_CALLCONV
 
	tUMemAŒocFn
(c⁄° *
	tc⁄ãxt
, 
	tsize_t
 
	tsize
);

218 *
	tU_CALLCONV
 
	tUMemRóŒocFn
(c⁄° *
	tc⁄ãxt
, *
	tmem
, 
	tsize_t
 
	tsize
);

229 
	tU_CALLCONV
 
	tUMemFªeFn
 (c⁄° *
	tc⁄ãxt
, *
	tmem
);

247 
U_STABLE
 
U_EXPORT2


248 
u_£tMem‹yFun˘i⁄s
(c⁄° *
c⁄ãxt
, 
UMemAŒocFn
 *
a
, 
UMemRóŒocFn
 *
r
, 
UMemFªeFn
 *
f
,

249 
UEº‹Code
 *
°©us
);

	@unicode/ucnv.h

47 #i‚de‡
UCNV_H


48 
	#UCNV_H


	)

50 
	~"unicode/u˙v_îr.h
"

51 
	~"unicode/uíum.h
"

52 
	~"unicode/loˇÕoöãr.h
"

54 #i‚de‡
__USET_H__


65 
	gUSë
;

67 
USë
 
	tUSë
;

71 #i‡!
UCONFIG_NO_CONVERSION


73 
	gU_CDECL_BEGIN


76 
	#UCNV_MAX_CONVERTER_NAME_LENGTH
 60

	)

78 
	#UCNV_MAX_FULL_FILE_NAME_LENGTH
 (600+
UCNV_MAX_CONVERTER_NAME_LENGTH
)

	)

81 
	#UCNV_SI
 0x0F

	)

83 
	#UCNV_SO
 0x0E

	)

91 
	mUCNV_UNSUPPORTED_CONVERTER
 = -1,

92 
	mUCNV_SBCS
 = 0,

93 
	mUCNV_DBCS
 = 1,

94 
	mUCNV_MBCS
 = 2,

95 
	mUCNV_LATIN_1
 = 3,

96 
	mUCNV_UTF8
 = 4,

97 
	mUCNV_UTF16_BigEndün
 = 5,

98 
	mUCNV_UTF16_LôéeEndün
 = 6,

99 
	mUCNV_UTF32_BigEndün
 = 7,

100 
	mUCNV_UTF32_LôéeEndün
 = 8,

101 
	mUCNV_EBCDIC_STATEFUL
 = 9,

102 
	mUCNV_ISO_2022
 = 10,

104 
	mUCNV_LMBCS_1
 = 11,

105 
	mUCNV_LMBCS_2
,

106 
	mUCNV_LMBCS_3
,

107 
	mUCNV_LMBCS_4
,

108 
	mUCNV_LMBCS_5
,

109 
	mUCNV_LMBCS_6
,

110 
	mUCNV_LMBCS_8
,

111 
	mUCNV_LMBCS_11
,

112 
	mUCNV_LMBCS_16
,

113 
	mUCNV_LMBCS_17
,

114 
	mUCNV_LMBCS_18
,

115 
	mUCNV_LMBCS_19
,

116 
	mUCNV_LMBCS_LAST
 = 
UCNV_LMBCS_19
,

117 
	mUCNV_HZ
,

118 
	mUCNV_SCSU
,

119 
	mUCNV_ISCII
,

120 
	mUCNV_US_ASCII
,

121 
	mUCNV_UTF7
,

122 
	mUCNV_BOCU1
,

123 
	mUCNV_UTF16
,

124 
	mUCNV_UTF32
,

125 
	mUCNV_CESU8
,

126 
	mUCNV_IMAP_MAILBOX
,

129 
	mUCNV_NUMBER_OF_SUPPORTED_CONVERTER_TYPES


131 } 
	tUC⁄vîãrTy≥
;

143 
	mUCNV_UNKNOWN
 = -1,

144 
	mUCNV_IBM
 = 0

145 } 
	tUC⁄vîãrPœtf‹m
;

162 (
	tU_EXPORT2
 *
	tUC⁄vîãrToUCÆlback
) (

163 c⁄° * 
	tc⁄ãxt
,

164 
	tUC⁄vîãrToUnicodeArgs
 *
	t¨gs
,

165 c⁄° *
	tcodeUnôs
,

166 
	töt32_t
 
	tÀngth
,

167 
	tUC⁄vîãrCÆlbackRós⁄
 
	tªas⁄
,

168 
	tUEº‹Code
 *
	tpEº‹Code
);

185 (
	tU_EXPORT2
 *
	tUC⁄vîãrFromUCÆlback
) (

186 c⁄° * 
	tc⁄ãxt
,

187 
	tUC⁄vîãrFromUnicodeArgs
 *
	t¨gs
,

188 c⁄° 
	tUCh¨
* 
	tcodeUnôs
,

189 
	töt32_t
 
	tÀngth
,

190 
	tUCh¨32
 
	tcodePoöt
,

191 
	tUC⁄vîãrCÆlbackRós⁄
 
	tªas⁄
,

192 
	tUEº‹Code
 *
	tpEº‹Code
);

194 
U_CDECL_END


201 
	#UCNV_OPTION_SEP_CHAR
 ','

	)

208 
	#UCNV_OPTION_SEP_STRING
 ","

	)

215 
	#UCNV_VALUE_SEP_CHAR
 '='

	)

222 
	#UCNV_VALUE_SEP_STRING
 "="

	)

232 
	#UCNV_LOCALE_OPTION_STRING
 ",loˇÀ="

	)

245 
	#UCNV_VERSION_OPTION_STRING
 ",vîsi⁄="

	)

257 
	#UCNV_SWAP_LFNL_OPTION_STRING
 ",sw≠l‚l"

	)

274 
U_STABLE
 
U_EXPORT2


275 
	`u˙v_com∑ªNames
(c⁄° *
«me1
, c⁄° *
«me2
);

326 
U_STABLE
 
UC⁄vîãr
* 
U_EXPORT2


327 
	`u˙v_›í
(c⁄° *
c⁄vîãrName
, 
UEº‹Code
 *
îr
);

356 
U_STABLE
 
UC⁄vîãr
* 
U_EXPORT2


357 
	`u˙v_›íU
(c⁄° 
UCh¨
 *
«me
,

358 
UEº‹Code
 *
îr
);

424 
U_STABLE
 
UC⁄vîãr
* 
U_EXPORT2


425 
	`u˙v_›íCCSID
(
öt32_t
 
codïage
,

426 
UC⁄vîãrPœtf‹m
 
∂©f‹m
,

427 
UEº‹Code
 * 
îr
);

459 
U_STABLE
 
UC⁄vîãr
* 
U_EXPORT2


460 
	`u˙v_›íPackage
(c⁄° *
∑ckageName
, c⁄° *
c⁄vîãrName
, 
UEº‹Code
 *
îr
);

499 
U_STABLE
 
UC⁄vîãr
 * 
U_EXPORT2


500 
	`u˙v_ß„Cl⁄e
(c⁄° 
UC⁄vîãr
 *
˙v
,

501 *
°ackBuf„r
,

502 
öt32_t
 *
pBuf„rSize
,

503 
UEº‹Code
 *
°©us
);

511 
	#U_CNV_SAFECLONE_BUFFERSIZE
 1024

	)

524 
U_STABLE
 
U_EXPORT2


525 
	`u˙v_˛o£
(
UC⁄vîãr
 * 
c⁄vîãr
);

527 #i‡
U_SHOW_CPLUSPLUS_API


529 
U_NAMESPACE_BEGIN


540 
	`U_DEFINE_LOCAL_OPEN_POINTER
(
LoˇlUC⁄vîãrPoöãr
, 
UC⁄vîãr
, 
u˙v_˛o£
);

542 
U_NAMESPACE_END


563 
U_STABLE
 
U_EXPORT2


564 
	`u˙v_gëSub°Ch¨s
(c⁄° 
UC⁄vîãr
 *
c⁄vîãr
,

565 *
subCh¨s
,

566 
öt8_t
 *
Àn
,

567 
UEº‹Code
 *
îr
);

588 
U_STABLE
 
U_EXPORT2


589 
	`u˙v_£tSub°Ch¨s
(
UC⁄vîãr
 *
c⁄vîãr
,

590 c⁄° *
subCh¨s
,

591 
öt8_t
 
Àn
,

592 
UEº‹Code
 *
îr
);

621 
U_STABLE
 
U_EXPORT2


622 
	`u˙v_£tSub°Såög
(
UC⁄vîãr
 *
˙v
,

623 c⁄° 
UCh¨
 *
s
,

624 
öt32_t
 
Àngth
,

625 
UEº‹Code
 *
îr
);

640 
U_STABLE
 
U_EXPORT2


641 
	`u˙v_gëInvÆidCh¨s
(c⁄° 
UC⁄vîãr
 *
c⁄vîãr
,

642 *
îrByãs
,

643 
öt8_t
 *
Àn
,

644 
UEº‹Code
 *
îr
);

659 
U_STABLE
 
U_EXPORT2


660 
	`u˙v_gëInvÆidUCh¨s
(c⁄° 
UC⁄vîãr
 *
c⁄vîãr
,

661 
UCh¨
 *
îrUCh¨s
,

662 
öt8_t
 *
Àn
,

663 
UEº‹Code
 *
îr
);

672 
U_STABLE
 
U_EXPORT2


673 
	`u˙v_ª£t
(
UC⁄vîãr
 *
c⁄vîãr
);

683 
U_STABLE
 
U_EXPORT2


684 
	`u˙v_ª£tToUnicode
(
UC⁄vîãr
 *
c⁄vîãr
);

694 
U_STABLE
 
U_EXPORT2


695 
	`u˙v_ª£tFromUnicode
(
UC⁄vîãr
 *
c⁄vîãr
);

745 
U_STABLE
 
öt8_t
 
U_EXPORT2


746 
	`u˙v_gëMaxCh¨Size
(c⁄° 
UC⁄vîãr
 *
c⁄vîãr
);

767 
	#UCNV_GET_MAX_BYTES_FOR_STRING
(
Àngth
, 
maxCh¨Size
) \

768 (((
öt32_t
)(
Àngth
)+10)*(öt32_t)(
maxCh¨Size
))

	)

778 
U_STABLE
 
öt8_t
 
U_EXPORT2


779 
	`u˙v_gëMöCh¨Size
(c⁄° 
UC⁄vîãr
 *
c⁄vîãr
);

795 
U_STABLE
 
öt32_t
 
U_EXPORT2


796 
	`u˙v_gëDi•œyName
(c⁄° 
UC⁄vîãr
 *
c⁄vîãr
,

797 c⁄° *
di•œyLoˇÀ
,

798 
UCh¨
 *
di•œyName
,

799 
öt32_t
 
di•œyNameC≠acôy
,

800 
UEº‹Code
 *
îr
);

812 
U_STABLE
 c⁄° * 
U_EXPORT2


813 
	`u˙v_gëName
(c⁄° 
UC⁄vîãr
 *
c⁄vîãr
, 
UEº‹Code
 *
îr
);

838 
U_STABLE
 
öt32_t
 
U_EXPORT2


839 
	`u˙v_gëCCSID
(c⁄° 
UC⁄vîãr
 *
c⁄vîãr
,

840 
UEº‹Code
 *
îr
);

852 
U_STABLE
 
UC⁄vîãrPœtf‹m
 
U_EXPORT2


853 
	`u˙v_gëPœtf‹m
(c⁄° 
UC⁄vîãr
 *
c⁄vîãr
,

854 
UEº‹Code
 *
îr
);

864 
U_STABLE
 
UC⁄vîãrTy≥
 
U_EXPORT2


865 
	`u˙v_gëTy≥
(c⁄° 
UC⁄vîãr
 * 
c⁄vîãr
);

882 
U_STABLE
 
U_EXPORT2


883 
	`u˙v_gëSèπîs
(c⁄° 
UC⁄vîãr
* 
c⁄vîãr
,

884 
UBoﬁ
 
°¨ãrs
[256],

885 
UEº‹Code
* 
îr
);

893 
	eUC⁄vîãrUnicodeSë
 {

895 
UCNV_ROUNDTRIP_SET
,

897 
UCNV_ROUNDTRIP_AND_FALLBACK_SET
,

899 
UCNV_SET_COUNT


900 } 
	tUC⁄vîãrUnicodeSë
;

948 
U_STABLE
 
U_EXPORT2


949 
	`u˙v_gëUnicodeSë
(c⁄° 
UC⁄vîãr
 *
˙v
,

950 
USë
 *
£tFûlIn
,

951 
UC⁄vîãrUnicodeSë
 
whichSë
,

952 
UEº‹Code
 *
pEº‹Code
);

965 
U_STABLE
 
U_EXPORT2


966 
	`u˙v_gëToUCÆlBack
 (c⁄° 
UC⁄vîãr
 * 
c⁄vîãr
,

967 
UC⁄vîãrToUCÆlback
 *
a˘i⁄
,

968 c⁄° **
c⁄ãxt
);

981 
U_STABLE
 
U_EXPORT2


982 
	`u˙v_gëFromUCÆlBack
 (c⁄° 
UC⁄vîãr
 * 
c⁄vîãr
,

983 
UC⁄vîãrFromUCÆlback
 *
a˘i⁄
,

984 c⁄° **
c⁄ãxt
);

1001 
U_STABLE
 
U_EXPORT2


1002 
	`u˙v_£tToUCÆlBack
 (
UC⁄vîãr
 * 
c⁄vîãr
,

1003 
UC⁄vîãrToUCÆlback
 
√wA˘i⁄
,

1004 c⁄° * 
√wC⁄ãxt
,

1005 
UC⁄vîãrToUCÆlback
 *
ﬁdA˘i⁄
,

1006 c⁄° ** 
ﬁdC⁄ãxt
,

1007 
UEº‹Code
 * 
îr
);

1024 
U_STABLE
 
U_EXPORT2


1025 
	`u˙v_£tFromUCÆlBack
 (
UC⁄vîãr
 * 
c⁄vîãr
,

1026 
UC⁄vîãrFromUCÆlback
 
√wA˘i⁄
,

1027 c⁄° *
√wC⁄ãxt
,

1028 
UC⁄vîãrFromUCÆlback
 *
ﬁdA˘i⁄
,

1029 c⁄° **
ﬁdC⁄ãxt
,

1030 
UEº‹Code
 * 
îr
);

1090 
U_STABLE
 
U_EXPORT2


1091 
	`u˙v_‰omUnicode
 (
UC⁄vîãr
 * 
c⁄vîãr
,

1092 **
èrgë
,

1093 c⁄° *
èrgëLimô
,

1094 c⁄° 
UCh¨
 ** 
sour˚
,

1095 c⁄° 
UCh¨
 * 
sour˚Limô
,

1096 
öt32_t
* 
off£ts
,

1097 
UBoﬁ
 
Êush
,

1098 
UEº‹Code
 * 
îr
);

1159 
U_STABLE
 
U_EXPORT2


1160 
	`u˙v_toUnicode
(
UC⁄vîãr
 *
c⁄vîãr
,

1161 
UCh¨
 **
èrgë
,

1162 c⁄° 
UCh¨
 *
èrgëLimô
,

1163 c⁄° **
sour˚
,

1164 c⁄° *
sour˚Limô
,

1165 
öt32_t
 *
off£ts
,

1166 
UBoﬁ
 
Êush
,

1167 
UEº‹Code
 *
îr
);

1196 
U_STABLE
 
öt32_t
 
U_EXPORT2


1197 
	`u˙v_‰omUCh¨s
(
UC⁄vîãr
 *
˙v
,

1198 *
de°
, 
öt32_t
 
de°C≠acôy
,

1199 c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

1200 
UEº‹Code
 *
pEº‹Code
);

1228 
U_STABLE
 
öt32_t
 
U_EXPORT2


1229 
	`u˙v_toUCh¨s
(
UC⁄vîãr
 *
˙v
,

1230 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

1231 c⁄° *
§c
, 
öt32_t
 
§cLígth
,

1232 
UEº‹Code
 *
pEº‹Code
);

1304 
U_STABLE
 
UCh¨32
 
U_EXPORT2


1305 
	`u˙v_gëNextUCh¨
(
UC⁄vîãr
 * 
c⁄vîãr
,

1306 c⁄° **
sour˚
,

1307 c⁄° * 
sour˚Limô
,

1308 
UEº‹Code
 * 
îr
);

1448 
U_STABLE
 
U_EXPORT2


1449 
	`u˙v_c⁄vîtEx
(
UC⁄vîãr
 *
èrgëCnv
, UC⁄vîã∏*
sour˚Cnv
,

1450 **
èrgë
, c⁄° *
èrgëLimô
,

1451 c⁄° **
sour˚
, c⁄° *
sour˚Limô
,

1452 
UCh¨
 *
pivŸSèπ
, UCh¨ **
pivŸSour˚
,

1453 
UCh¨
 **
pivŸT¨gë
, c⁄° UCh¨ *
pivŸLimô
,

1454 
UBoﬁ
 
ª£t
, UBoﬁ 
Êush
,

1455 
UEº‹Code
 *
pEº‹Code
);

1512 
U_STABLE
 
öt32_t
 
U_EXPORT2


1513 
	`u˙v_c⁄vît
(c⁄° *
toC⁄vîãrName
,

1514 c⁄° *
‰omC⁄vîãrName
,

1515 *
èrgë
,

1516 
öt32_t
 
èrgëC≠acôy
,

1517 c⁄° *
sour˚
,

1518 
öt32_t
 
sour˚Lígth
,

1519 
UEº‹Code
 *
pEº‹Code
);

1566 
U_STABLE
 
öt32_t
 
U_EXPORT2


1567 
	`u˙v_toAlg‹ôhmic
(
UC⁄vîãrTy≥
 
Æg‹ôhmicTy≥
,

1568 
UC⁄vîãr
 *
˙v
,

1569 *
èrgë
, 
öt32_t
 
èrgëC≠acôy
,

1570 c⁄° *
sour˚
, 
öt32_t
 
sour˚Lígth
,

1571 
UEº‹Code
 *
pEº‹Code
);

1618 
U_STABLE
 
öt32_t
 
U_EXPORT2


1619 
	`u˙v_‰omAlg‹ôhmic
(
UC⁄vîãr
 *
˙v
,

1620 
UC⁄vîãrTy≥
 
Æg‹ôhmicTy≥
,

1621 *
èrgë
, 
öt32_t
 
èrgëC≠acôy
,

1622 c⁄° *
sour˚
, 
öt32_t
 
sour˚Lígth
,

1623 
UEº‹Code
 *
pEº‹Code
);

1632 
U_STABLE
 
öt32_t
 
U_EXPORT2


1633 
	`u˙v_ÊushCache
();

1642 
U_STABLE
 
öt32_t
 
U_EXPORT2


1643 
	`u˙v_cou¡AvaûabÀ
();

1655 
U_STABLE
 c⁄° * 
U_EXPORT2


1656 
	`u˙v_gëAvaûabÀName
(
öt32_t
 
n
);

1670 
U_STABLE
 
UEnumî©i⁄
 * 
U_EXPORT2


1671 
	`u˙v_›íAŒNames
(
UEº‹Code
 *
pEº‹Code
);

1683 
U_STABLE
 
uöt16_t
 
U_EXPORT2


1684 
	`u˙v_cou¡Alü£s
(c⁄° *
Æüs
, 
UEº‹Code
 *
pEº‹Code
);

1698 
U_STABLE
 c⁄° * 
U_EXPORT2


1699 
	`u˙v_gëAlüs
(c⁄° *
Æüs
, 
uöt16_t
 
n
, 
UEº‹Code
 *
pEº‹Code
);

1714 
U_STABLE
 
U_EXPORT2


1715 
	`u˙v_gëAlü£s
(c⁄° *
Æüs
, c⁄° **
Æü£s
, 
UEº‹Code
 *
pEº‹Code
);

1740 
U_STABLE
 
UEnumî©i⁄
 * 
U_EXPORT2


1741 
	`u˙v_›íSènd¨dNames
(c⁄° *
c⁄vName
,

1742 c⁄° *
°™d¨d
,

1743 
UEº‹Code
 *
pEº‹Code
);

1750 
U_STABLE
 
uöt16_t
 
U_EXPORT2


1751 
	`u˙v_cou¡Sènd¨ds
();

1760 
U_STABLE
 c⁄° * 
U_EXPORT2


1761 
	`u˙v_gëSènd¨d
(
uöt16_t
 
n
, 
UEº‹Code
 *
pEº‹Code
);

1782 
U_STABLE
 c⁄° * 
U_EXPORT2


1783 
	`u˙v_gëSènd¨dName
(c⁄° *
«me
, c⁄° *
°™d¨d
, 
UEº‹Code
 *
pEº‹Code
);

1804 
U_STABLE
 c⁄° * 
U_EXPORT2


1805 
	`u˙v_gëC™⁄iˇlName
(c⁄° *
Æüs
, c⁄° *
°™d¨d
, 
UEº‹Code
 *
pEº‹Code
);

1821 
U_STABLE
 c⁄° * 
U_EXPORT2


1822 
	`u˙v_gëDeÁu…Name
();

1840 
U_STABLE
 
U_EXPORT2


1841 
	`u˙v_£tDeÁu…Name
(c⁄° *
«me
);

1860 
U_STABLE
 
U_EXPORT2


1861 
	`u˙v_fixFûeSï¨©‹
(c⁄° 
UC⁄vîãr
 *
˙v
, 
UCh¨
 *
sour˚
, 
öt32_t
 
sour˚Lí
);

1871 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


1872 
	`u˙v_isAmbiguous
(c⁄° 
UC⁄vîãr
 *
˙v
);

1889 
U_STABLE
 
U_EXPORT2


1890 
	`u˙v_£tFÆlback
(
UC⁄vîãr
 *
˙v
, 
UBoﬁ
 
u£sFÆlback
);

1901 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


1902 
	`u˙v_u£sFÆlback
(c⁄° 
UC⁄vîãr
 *
˙v
);

1960 
U_STABLE
 c⁄° * 
U_EXPORT2


1961 
	`u˙v_dëe˘UnicodeSig«tuª
(c⁄° * 
sour˚
,

1962 
öt32_t
 
sour˚Lígth
,

1963 
öt32_t
 *
sig«tuªLígth
,

1964 
UEº‹Code
 *
pEº‹Code
);

1977 
U_STABLE
 
öt32_t
 
U_EXPORT2


1978 
	`u˙v_‰omUCou¡Pídög
(c⁄° 
UC⁄vîãr
* 
˙v
, 
UEº‹Code
* 
°©us
);

1991 
U_STABLE
 
öt32_t
 
U_EXPORT2


1992 
	`u˙v_toUCou¡Pídög
(c⁄° 
UC⁄vîãr
* 
˙v
, 
UEº‹Code
* 
°©us
);

	@unicode/ucnv_cb.h

61 #i‚de‡
UCNV_CB_H


62 
	#UCNV_CB_H


	)

64 
	~"unicode/uty≥s.h
"

66 #i‡!
UCONFIG_NO_CONVERSION


68 
	~"unicode/u˙v.h
"

69 
	~"unicode/u˙v_îr.h
"

85 
U_STABLE
 
U_EXPORT2


86 
u˙v_cbFromUWrôeByãs
 (
UC⁄vîãrFromUnicodeArgs
 *
¨gs
,

87 c⁄° * 
sour˚
,

88 
öt32_t
 
Àngth
,

89 
öt32_t
 
off£tIndex
,

90 
UEº‹Code
 * 
îr
);

105 
U_STABLE
 
U_EXPORT2


106 
u˙v_cbFromUWrôeSub
 (
UC⁄vîãrFromUnicodeArgs
 *
¨gs
,

107 
öt32_t
 
off£tIndex
,

108 
UEº‹Code
 * 
îr
);

122 
U_STABLE
 
U_EXPORT2
 
u˙v_cbFromUWrôeUCh¨s
(
UC⁄vîãrFromUnicodeArgs
 *
¨gs
,

123 c⁄° 
UCh¨
** 
sour˚
,

124 c⁄° 
UCh¨
* 
sour˚Limô
,

125 
öt32_t
 
off£tIndex
,

126 
UEº‹Code
 * 
îr
);

141 
U_STABLE
 
U_EXPORT2
 
u˙v_cbToUWrôeUCh¨s
 (
UC⁄vîãrToUnicodeArgs
 *
¨gs
,

142 c⁄° 
UCh¨
* 
sour˚
,

143 
öt32_t
 
Àngth
,

144 
öt32_t
 
off£tIndex
,

145 
UEº‹Code
 * 
îr
);

157 
U_STABLE
 
U_EXPORT2
 
u˙v_cbToUWrôeSub
 (
UC⁄vîãrToUnicodeArgs
 *
¨gs
,

158 
öt32_t
 
off£tIndex
,

159 
UEº‹Code
 * 
îr
);

	@unicode/ucnv_err.h

83 #i‚de‡
UCNV_ERR_H


84 
	#UCNV_ERR_H


	)

86 
	~"unicode/uty≥s.h
"

88 #i‡!
UCONFIG_NO_CONVERSION


91 
	gUC⁄vîãr
;

94 
UC⁄vîãr
 
	tUC⁄vîãr
;

100 
	#UCNV_SUB_STOP_ON_ILLEGAL
 "i"

	)

106 
	#UCNV_SKIP_STOP_ON_ILLEGAL
 "i"

	)

112 
	#UCNV_ESCAPE_ICU
 
NULL


	)

117 
	#UCNV_ESCAPE_JAVA
 "J"

	)

123 
	#UCNV_ESCAPE_C
 "C"

	)

129 
	#UCNV_ESCAPE_XML_DEC
 "D"

	)

135 
	#UCNV_ESCAPE_XML_HEX
 "X"

	)

140 
	#UCNV_ESCAPE_UNICODE
 "U"

	)

147 
	#UCNV_ESCAPE_CSS2
 "S"

	)

156 
	mUCNV_UNASSIGNED
 = 0,

158 
	mUCNV_ILLEGAL
 = 1,

166 
	mUCNV_IRREGULAR
 = 2,

171 
	mUCNV_RESET
 = 3,

174 
	mUCNV_CLOSE
 = 4,

176 
	mUCNV_CLONE
 = 5

185 } 
	tUC⁄vîãrCÆlbackRós⁄
;

193 
uöt16_t
 
	msize
;

194 
UBoﬁ
 
	mÊush
;

195 
UC⁄vîãr
 *
	mc⁄vîãr
;

196 c⁄° 
UCh¨
 *
	msour˚
;

197 c⁄° 
UCh¨
 *
	msour˚Limô
;

198 *
	mèrgë
;

199 c⁄° *
	mèrgëLimô
;

200 
öt32_t
 *
	moff£ts
;

201 } 
	tUC⁄vîãrFromUnicodeArgs
;

209 
uöt16_t
 
	msize
;

210 
UBoﬁ
 
	mÊush
;

211 
UC⁄vîãr
 *
	mc⁄vîãr
;

212 c⁄° *
	msour˚
;

213 c⁄° *
	msour˚Limô
;

214 
UCh¨
 *
	mèrgë
;

215 c⁄° 
UCh¨
 *
	mèrgëLimô
;

216 
öt32_t
 *
	moff£ts
;

217 } 
	tUC⁄vîãrToUnicodeArgs
;

234 
U_STABLE
 
U_EXPORT2
 
UCNV_FROM_U_CALLBACK_STOP
 (

235 c⁄° *
c⁄ãxt
,

236 
UC⁄vîãrFromUnicodeArgs
 *
‰omUArgs
,

237 c⁄° 
UCh¨
* 
codeUnôs
,

238 
öt32_t
 
Àngth
,

239 
UCh¨32
 
codePoöt
,

240 
UC⁄vîãrCÆlbackRós⁄
 
ªas⁄
,

241 
UEº‹Code
 * 
îr
);

258 
U_STABLE
 
U_EXPORT2
 
UCNV_TO_U_CALLBACK_STOP
 (

259 c⁄° *
c⁄ãxt
,

260 
UC⁄vîãrToUnicodeArgs
 *
toUArgs
,

261 c⁄° * 
codeUnôs
,

262 
öt32_t
 
Àngth
,

263 
UC⁄vîãrCÆlbackRós⁄
 
ªas⁄
,

264 
UEº‹Code
 * 
îr
);

285 
U_STABLE
 
U_EXPORT2
 
UCNV_FROM_U_CALLBACK_SKIP
 (

286 c⁄° *
c⁄ãxt
,

287 
UC⁄vîãrFromUnicodeArgs
 *
‰omUArgs
,

288 c⁄° 
UCh¨
* 
codeUnôs
,

289 
öt32_t
 
Àngth
,

290 
UCh¨32
 
codePoöt
,

291 
UC⁄vîãrCÆlbackRós⁄
 
ªas⁄
,

292 
UEº‹Code
 * 
îr
);

315 
U_STABLE
 
U_EXPORT2
 
UCNV_FROM_U_CALLBACK_SUBSTITUTE
 (

316 c⁄° *
c⁄ãxt
,

317 
UC⁄vîãrFromUnicodeArgs
 *
‰omUArgs
,

318 c⁄° 
UCh¨
* 
codeUnôs
,

319 
öt32_t
 
Àngth
,

320 
UCh¨32
 
codePoöt
,

321 
UC⁄vîãrCÆlbackRós⁄
 
ªas⁄
,

322 
UEº‹Code
 * 
îr
);

371 
U_STABLE
 
U_EXPORT2
 
UCNV_FROM_U_CALLBACK_ESCAPE
 (

372 c⁄° *
c⁄ãxt
,

373 
UC⁄vîãrFromUnicodeArgs
 *
‰omUArgs
,

374 c⁄° 
UCh¨
* 
codeUnôs
,

375 
öt32_t
 
Àngth
,

376 
UCh¨32
 
codePoöt
,

377 
UC⁄vîãrCÆlbackRós⁄
 
ªas⁄
,

378 
UEº‹Code
 * 
îr
);

399 
U_STABLE
 
U_EXPORT2
 
UCNV_TO_U_CALLBACK_SKIP
 (

400 c⁄° *
c⁄ãxt
,

401 
UC⁄vîãrToUnicodeArgs
 *
toUArgs
,

402 c⁄° * 
codeUnôs
,

403 
öt32_t
 
Àngth
,

404 
UC⁄vîãrCÆlbackRós⁄
 
ªas⁄
,

405 
UEº‹Code
 * 
îr
);

425 
U_STABLE
 
U_EXPORT2
 
UCNV_TO_U_CALLBACK_SUBSTITUTE
 (

426 c⁄° *
c⁄ãxt
,

427 
UC⁄vîãrToUnicodeArgs
 *
toUArgs
,

428 c⁄° * 
codeUnôs
,

429 
öt32_t
 
Àngth
,

430 
UC⁄vîãrCÆlbackRós⁄
 
ªas⁄
,

431 
UEº‹Code
 * 
îr
);

451 
U_STABLE
 
U_EXPORT2
 
UCNV_TO_U_CALLBACK_ESCAPE
 (

452 c⁄° *
c⁄ãxt
,

453 
UC⁄vîãrToUnicodeArgs
 *
toUArgs
,

454 c⁄° * 
codeUnôs
,

455 
öt32_t
 
Àngth
,

456 
UC⁄vîãrCÆlbackRós⁄
 
ªas⁄
,

457 
UEº‹Code
 * 
îr
);

	@unicode/ucnvsel.h

19 #i‚de‡
__ICU_UCNV_SEL_H__


20 
	#__ICU_UCNV_SEL_H__


	)

22 
	~"unicode/u£t.h
"

23 
	~"unicode/uty≥s.h
"

24 
	~"unicode/utf16.h
"

25 
	~"unicode/uíum.h
"

26 
	~"unicode/u˙v.h
"

27 
	~"unicode/loˇÕoöãr.h
"

44 
	gUC⁄vîãrSñe˘‹
;

45 
UC⁄vîãrSñe˘‹
 
	tUC⁄vîãrSñe˘‹
;

70 
U_STABLE
 
UC⁄vîãrSñe˘‹
* 
U_EXPORT2


71 
u˙v£l_›í
(c⁄° * c⁄°* 
c⁄vîãrLi°
, 
öt32_t
 
c⁄vîãrLi°Size
,

72 c⁄° 
USë
* 
ex˛udedCodePoöts
,

73 c⁄° 
UC⁄vîãrUnicodeSë
 
whichSë
, 
UEº‹Code
* 
°©us
);

88 
U_STABLE
 
U_EXPORT2


89 
u˙v£l_˛o£
(
UC⁄vîãrSñe˘‹
 *
£l
);

91 #i‡
U_SHOW_CPLUSPLUS_API


93 
U_NAMESPACE_BEGIN


104 
U_DEFINE_LOCAL_OPEN_POINTER
(
LoˇlUC⁄vîãrSñe˘‹Poöãr
, 
UC⁄vîãrSñe˘‹
, 
u˙v£l_˛o£
);

106 
	gU_NAMESPACE_END


125 
U_STABLE
 
UC⁄vîãrSñe˘‹
* 
U_EXPORT2


126 
u˙v£l_›íFromSîülized
(c⁄° * 
buf„r
, 
öt32_t
 
Àngth
, 
UEº‹Code
* 
°©us
);

142 
U_STABLE
 
öt32_t
 
U_EXPORT2


143 
u˙v£l_£rülize
(c⁄° 
UC⁄vîãrSñe˘‹
* 
£l
,

144 * 
buf„r
, 
öt32_t
 
buf„rC≠acôy
, 
UEº‹Code
* 
°©us
);

160 
U_STABLE
 
UEnumî©i⁄
 * 
U_EXPORT2


161 
u˙v£l_£À˘F‹Såög
(c⁄° 
UC⁄vîãrSñe˘‹
* 
£l
,

162 c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
, 
UEº‹Code
 *
°©us
);

178 
U_STABLE
 
UEnumî©i⁄
 * 
U_EXPORT2


179 
u˙v£l_£À˘F‹UTF8
(c⁄° 
UC⁄vîãrSñe˘‹
* 
£l
,

180 c⁄° *
s
, 
öt32_t
 
Àngth
, 
UEº‹Code
 *
°©us
);

	@unicode/uconfig.h

15 #i‚de‡
__UCONFIG_H__


16 
	#__UCONFIG_H__


	)

45 #i‡
deföed
(
UCONFIG_USE_LOCAL
)

46 
	~"uc⁄fig_loˇl.h
"

60 #i‚de‡
UCONFIG_ONLY_COLLATION


61 
	#UCONFIG_ONLY_COLLATION
 0

	)

64 #i‡
UCONFIG_ONLY_COLLATION


66 
	#UCONFIG_NO_BREAK_ITERATION
 1

	)

67 
	#UCONFIG_NO_IDNA
 1

	)

70 #i‡
UCONFIG_NO_COLLATION


71 #îr‹ 
C⁄åadi˘‹y
 
cﬁœti⁄
 
swôches
 
ö
 
uc⁄fig
.
h
.

73 
	#UCONFIG_NO_FORMATTING
 1

	)

74 
	#UCONFIG_NO_TRANSLITERATION
 1

	)

75 
	#UCONFIG_NO_REGULAR_EXPRESSIONS
 1

	)

98 #i‚de‡
UCONFIG_NO_FILE_IO


99 
	#UCONFIG_NO_FILE_IO
 0

	)

113 #i‚de‡
UCONFIG_NO_CONVERSION


114 
	#UCONFIG_NO_CONVERSION
 0

	)

117 #i‡
UCONFIG_NO_CONVERSION


118 
	#UCONFIG_NO_LEGACY_CONVERSION
 1

	)

133 #i‚de‡
UCONFIG_NO_LEGACY_CONVERSION


134 
	#UCONFIG_NO_LEGACY_CONVERSION
 0

	)

145 #i‚de‡
UCONFIG_NO_NORMALIZATION


146 
	#UCONFIG_NO_NORMALIZATION
 0

	)

147 #ñi‡
UCONFIG_NO_NORMALIZATION


149 
	#UCONFIG_NO_IDNA
 1

	)

152 #i‡
UCONFIG_ONLY_COLLATION


153 #îr‹ 
C⁄åadi˘‹y
 
cﬁœti⁄
 
swôches
 
ö
 
uc⁄fig
.
h
.

155 
	#UCONFIG_NO_COLLATION
 1

	)

156 
	#UCONFIG_NO_TRANSLITERATION
 1

	)

165 #i‚de‡
UCONFIG_NO_BREAK_ITERATION


166 
	#UCONFIG_NO_BREAK_ITERATION
 0

	)

175 #i‚de‡
UCONFIG_NO_IDNA


176 
	#UCONFIG_NO_IDNA
 0

	)

187 #i‚de‡
UCONFIG_NO_COLLATION


188 
	#UCONFIG_NO_COLLATION
 0

	)

197 #i‚de‡
UCONFIG_NO_FORMATTING


198 
	#UCONFIG_NO_FORMATTING
 0

	)

207 #i‚de‡
UCONFIG_NO_TRANSLITERATION


208 
	#UCONFIG_NO_TRANSLITERATION
 0

	)

217 #i‚de‡
UCONFIG_NO_REGULAR_EXPRESSIONS


218 
	#UCONFIG_NO_REGULAR_EXPRESSIONS
 0

	)

227 #i‚de‡
UCONFIG_NO_SERVICE


228 
	#UCONFIG_NO_SERVICE
 0

	)

	@unicode/udata.h

17 #i‚de‡
__UDATA_H__


18 
	#__UDATA_H__


	)

20 
	~"unicode/uty≥s.h
"

21 
	~"unicode/loˇÕoöãr.h
"

23 
	gU_CDECL_BEGIN


40 #i‚de‡
U_HIDE_INTERNAL_API


45 
	#U_TREE_SEPARATOR
 '-'

	)

51 
	#U_TREE_SEPARATOR_STRING
 "-"

	)

57 
	#U_TREE_ENTRY_SEP_CHAR
 '/'

	)

63 
	#U_TREE_ENTRY_SEP_STRING
 "/"

	)

69 
	#U_ICUDATA_ALIAS
 "ICUDATA"

	)

109 
uöt16_t
 
	msize
;

113 
uöt16_t
 
	mª£rvedW‹d
;

118 
uöt8_t
 
	misBigEndün
;

122 
uöt8_t
 
	mch¨£tFamûy
;

126 
uöt8_t
 
	msizeofUCh¨
;

130 
uöt8_t
 
	mª£rvedByã
;

134 
uöt8_t
 
	md©aF‹m©
[4];

138 
uöt8_t
 
	mf‹m©Vîsi⁄
[4];

142 
uöt8_t
 
	md©aVîsi⁄
[4];

143 } 
	tUD©aInfo
;

151 
UD©aMem‹y
 
	tUD©aMem‹y
;

166 
UBoﬁ
 
	tU_CALLCONV


167 
	tUD©aMem‹yIsAc˚±abÀ
(*
	tc⁄ãxt
,

168 c⁄° *
	tty≥
, c⁄° *
	t«me
,

169 c⁄° 
	tUD©aInfo
 *
	tpInfo
);

193 
U_STABLE
 
UD©aMem‹y
 * 
U_EXPORT2


194 
ud©a_›í
(c⁄° *
∑th
, c⁄° *
ty≥
, c⁄° *
«me
,

195 
UEº‹Code
 *
pEº‹Code
);

245 
U_STABLE
 
UD©aMem‹y
 * 
U_EXPORT2


246 
ud©a_›íChoi˚
(c⁄° *
∑th
, c⁄° *
ty≥
, c⁄° *
«me
,

247 
UD©aMem‹yIsAc˚±abÀ
 *
isAc˚±abÀ
, *
c⁄ãxt
,

248 
UEº‹Code
 *
pEº‹Code
);

257 
U_STABLE
 
U_EXPORT2


258 
ud©a_˛o£
(
UD©aMem‹y
 *
pD©a
);

260 #i‡
U_SHOW_CPLUSPLUS_API


262 
U_NAMESPACE_BEGIN


273 
U_DEFINE_LOCAL_OPEN_POINTER
(
LoˇlUD©aMem‹yPoöãr
, 
UD©aMem‹y
, 
ud©a_˛o£
);

275 
	gU_NAMESPACE_END


285 
U_STABLE
 c⁄° * 
U_EXPORT2


286 
ud©a_gëMem‹y
(
UD©aMem‹y
 *
pD©a
);

306 
U_STABLE
 
U_EXPORT2


307 
ud©a_gëInfo
(
UD©aMem‹y
 *
pD©a
, 
UD©aInfo
 *
pInfo
);

349 
U_STABLE
 
U_EXPORT2


350 
ud©a_£tComm⁄D©a
(c⁄° *
d©a
, 
UEº‹Code
 *
îr
);

377 
U_STABLE
 
U_EXPORT2


378 
ud©a_£tAµD©a
(c⁄° *
∑ckageName
, c⁄° *
d©a
, 
UEº‹Code
 *
îr
);

385 
	eUD©aFûeAc˚ss
 {

387 
	mUDATA_FILES_FIRST
,

389 
	mUDATA_ONLY_PACKAGES
,

392 
	mUDATA_PACKAGES_FIRST
,

394 
	mUDATA_NO_FILES
,

396 
	mUDATA_DEFAULT_ACCESS
 = 
UDATA_FILES_FIRST
,

397 
	mUDATA_FILE_ACCESS_COUNT


398 } 
	tUD©aFûeAc˚ss
;

410 
U_STABLE
 
U_EXPORT2


411 
ud©a_£tFûeAc˚ss
(
UD©aFûeAc˚ss
 
ac˚ss
, 
UEº‹Code
 *
°©us
);

413 
	gU_CDECL_END


	@unicode/udeprctd.h

21 #i‚de‡
UDEPRCTD_H


22 
	#UDEPRCTD_H


	)

24 #ifde‡
U_HIDE_DEPRECATED_API


26 #i‡
U_DISABLE_RENAMING


27 
	#ucﬁ_gëC⁄åa˘i⁄s
 
ucﬁ_gëC⁄åa˘i⁄s_DEPRECATED_API_DO_NOT_USE


	)

28 
	#ucﬁ_gëLoˇÀ
 
ucﬁ_gëLoˇÀ_DEPRECATED_API_DO_NOT_USE


	)

29 
	#uªs_cou¡AºayIãms
 
uªs_cou¡AºayIãms_DEPRECATED_API_DO_NOT_USE


	)

30 
	#uªs_gëLoˇÀ
 
uªs_gëLoˇÀ_DEPRECATED_API_DO_NOT_USE


	)

31 
	#uªs_gëVîsi⁄Numbî
 
uªs_gëVîsi⁄Numbî_DEPRECATED_API_DO_NOT_USE


	)

32 
	#uå™s_gëAvaûabÀID
 
uå™s_gëAvaûabÀID_DEPRECATED_API_DO_NOT_USE


	)

33 
	#uå™s_gëID
 
uå™s_gëID_DEPRECATED_API_DO_NOT_USE


	)

34 
	#uå™s_›í
 
uå™s_›í_DEPRECATED_API_DO_NOT_USE


	)

35 
	#uå™s_uƒegi°î
 
uå™s_uƒegi°î_DEPRECATED_API_DO_NOT_USE


	)

37 
	#ucﬁ_gëC⁄åa˘i⁄s_4_6
 
ucﬁ_gëC⁄åa˘i⁄s_DEPRECATED_API_DO_NOT_USE


	)

38 
	#ucﬁ_gëLoˇÀ_4_6
 
ucﬁ_gëLoˇÀ_DEPRECATED_API_DO_NOT_USE


	)

39 
	#uªs_cou¡AºayIãms_4_6
 
uªs_cou¡AºayIãms_DEPRECATED_API_DO_NOT_USE


	)

40 
	#uªs_gëLoˇÀ_4_6
 
uªs_gëLoˇÀ_DEPRECATED_API_DO_NOT_USE


	)

41 
	#uªs_gëVîsi⁄Numbî_4_6
 
uªs_gëVîsi⁄Numbî_DEPRECATED_API_DO_NOT_USE


	)

42 
	#uå™s_gëAvaûabÀID_4_6
 
uå™s_gëAvaûabÀID_DEPRECATED_API_DO_NOT_USE


	)

43 
	#uå™s_gëID_4_6
 
uå™s_gëID_DEPRECATED_API_DO_NOT_USE


	)

44 
	#uå™s_›í_4_6
 
uå™s_›í_DEPRECATED_API_DO_NOT_USE


	)

45 
	#uå™s_uƒegi°î_4_6
 
uå™s_uƒegi°î_DEPRECATED_API_DO_NOT_USE


	)

	@unicode/udraft.h

21 #i‚de‡
UDRAFT_H


22 
	#UDRAFT_H


	)

24 #ifde‡
U_HIDE_DRAFT_API


26 #i‡
U_DISABLE_RENAMING


27 
	#ubidi_gëBa£Dúe˘i⁄
 
ubidi_gëBa£Dúe˘i⁄_DRAFT_API_DO_NOT_USE


	)

28 
	#uid«_˛o£
 
uid«_˛o£_DRAFT_API_DO_NOT_USE


	)

29 
	#uid«_œbñToASCII
 
uid«_œbñToASCII_DRAFT_API_DO_NOT_USE


	)

30 
	#uid«_œbñToASCII_UTF8
 
uid«_œbñToASCII_UTF8_DRAFT_API_DO_NOT_USE


	)

31 
	#uid«_œbñToUnicode
 
uid«_œbñToUnicode_DRAFT_API_DO_NOT_USE


	)

32 
	#uid«_œbñToUnicodeUTF8
 
uid«_œbñToUnicodeUTF8_DRAFT_API_DO_NOT_USE


	)

33 
	#uid«_«meToASCII
 
uid«_«meToASCII_DRAFT_API_DO_NOT_USE


	)

34 
	#uid«_«meToASCII_UTF8
 
uid«_«meToASCII_UTF8_DRAFT_API_DO_NOT_USE


	)

35 
	#uid«_«meToUnicode
 
uid«_«meToUnicode_DRAFT_API_DO_NOT_USE


	)

36 
	#uid«_«meToUnicodeUTF8
 
uid«_«meToUnicodeUTF8_DRAFT_API_DO_NOT_USE


	)

37 
	#uid«_›íUTS46
 
uid«_›íUTS46_DRAFT_API_DO_NOT_USE


	)

38 
	#uloc_f‹L™guageTag
 
uloc_f‹L™guageTag_DRAFT_API_DO_NOT_USE


	)

39 
	#uloc_toL™guageTag
 
uloc_toL™guageTag_DRAFT_API_DO_NOT_USE


	)

40 
	#un‹m2_gëDecomposôi⁄
 
un‹m2_gëDecomposôi⁄_DRAFT_API_DO_NOT_USE


	)

41 
	#uªgex_íd64
 
uªgex_íd64_DRAFT_API_DO_NOT_USE


	)

42 
	#uªgex_föd64
 
uªgex_föd64_DRAFT_API_DO_NOT_USE


	)

43 
	#uªgex_gëFödProgªssCÆlback
 
uªgex_gëFödProgªssCÆlback_DRAFT_API_DO_NOT_USE


	)

44 
	#uªgex_lookögAt64
 
uªgex_lookögAt64_DRAFT_API_DO_NOT_USE


	)

45 
	#uªgex_m©ches64
 
uªgex_m©ches64_DRAFT_API_DO_NOT_USE


	)

46 
	#uªgex_∑âînUText
 
uªgex_∑âînUText_DRAFT_API_DO_NOT_USE


	)

47 
	#uªgex_ªgi⁄End64
 
uªgex_ªgi⁄End64_DRAFT_API_DO_NOT_USE


	)

48 
	#uªgex_ªgi⁄Sèπ64
 
uªgex_ªgi⁄Sèπ64_DRAFT_API_DO_NOT_USE


	)

49 
	#uªgex_ª£t64
 
uªgex_ª£t64_DRAFT_API_DO_NOT_USE


	)

50 
	#uªgex_£tFödProgªssCÆlback
 
uªgex_£tFödProgªssCÆlback_DRAFT_API_DO_NOT_USE


	)

51 
	#uªgex_£tRegi⁄64
 
uªgex_£tRegi⁄64_DRAFT_API_DO_NOT_USE


	)

52 
	#uªgex_£tRegi⁄AndSèπ
 
uªgex_£tRegi⁄AndSèπ_DRAFT_API_DO_NOT_USE


	)

53 
	#uªgex_°¨t64
 
uªgex_°¨t64_DRAFT_API_DO_NOT_USE


	)

54 
	#us¸ùt_gëS¸ùtExãnsi⁄s
 
us¸ùt_gëS¸ùtExãnsi⁄s_DRAFT_API_DO_NOT_USE


	)

55 
	#us¸ùt_hasS¸ùt
 
us¸ùt_hasS¸ùt_DRAFT_API_DO_NOT_USE


	)

57 
	#ubidi_gëBa£Dúe˘i⁄_4_6
 
ubidi_gëBa£Dúe˘i⁄_DRAFT_API_DO_NOT_USE


	)

58 
	#uid«_˛o£_4_6
 
uid«_˛o£_DRAFT_API_DO_NOT_USE


	)

59 
	#uid«_œbñToASCII_4_6
 
uid«_œbñToASCII_DRAFT_API_DO_NOT_USE


	)

60 
	#uid«_œbñToASCII_UTF8_4_6
 
uid«_œbñToASCII_UTF8_DRAFT_API_DO_NOT_USE


	)

61 
	#uid«_œbñToUnicodeUTF8_4_6
 
uid«_œbñToUnicodeUTF8_DRAFT_API_DO_NOT_USE


	)

62 
	#uid«_œbñToUnicode_4_6
 
uid«_œbñToUnicode_DRAFT_API_DO_NOT_USE


	)

63 
	#uid«_«meToASCII_4_6
 
uid«_«meToASCII_DRAFT_API_DO_NOT_USE


	)

64 
	#uid«_«meToASCII_UTF8_4_6
 
uid«_«meToASCII_UTF8_DRAFT_API_DO_NOT_USE


	)

65 
	#uid«_«meToUnicodeUTF8_4_6
 
uid«_«meToUnicodeUTF8_DRAFT_API_DO_NOT_USE


	)

66 
	#uid«_«meToUnicode_4_6
 
uid«_«meToUnicode_DRAFT_API_DO_NOT_USE


	)

67 
	#uid«_›íUTS46_4_6
 
uid«_›íUTS46_DRAFT_API_DO_NOT_USE


	)

68 
	#uloc_f‹L™guageTag_4_6
 
uloc_f‹L™guageTag_DRAFT_API_DO_NOT_USE


	)

69 
	#uloc_toL™guageTag_4_6
 
uloc_toL™guageTag_DRAFT_API_DO_NOT_USE


	)

70 
	#un‹m2_gëDecomposôi⁄_4_6
 
un‹m2_gëDecomposôi⁄_DRAFT_API_DO_NOT_USE


	)

71 
	#uªgex_íd64_4_6
 
uªgex_íd64_DRAFT_API_DO_NOT_USE


	)

72 
	#uªgex_föd64_4_6
 
uªgex_föd64_DRAFT_API_DO_NOT_USE


	)

73 
	#uªgex_gëFödProgªssCÆlback_4_6
 
uªgex_gëFödProgªssCÆlback_DRAFT_API_DO_NOT_USE


	)

74 
	#uªgex_lookögAt64_4_6
 
uªgex_lookögAt64_DRAFT_API_DO_NOT_USE


	)

75 
	#uªgex_m©ches64_4_6
 
uªgex_m©ches64_DRAFT_API_DO_NOT_USE


	)

76 
	#uªgex_∑âînUText_4_6
 
uªgex_∑âînUText_DRAFT_API_DO_NOT_USE


	)

77 
	#uªgex_ªgi⁄End64_4_6
 
uªgex_ªgi⁄End64_DRAFT_API_DO_NOT_USE


	)

78 
	#uªgex_ªgi⁄Sèπ64_4_6
 
uªgex_ªgi⁄Sèπ64_DRAFT_API_DO_NOT_USE


	)

79 
	#uªgex_ª£t64_4_6
 
uªgex_ª£t64_DRAFT_API_DO_NOT_USE


	)

80 
	#uªgex_£tFödProgªssCÆlback_4_6
 
uªgex_£tFödProgªssCÆlback_DRAFT_API_DO_NOT_USE


	)

81 
	#uªgex_£tRegi⁄64_4_6
 
uªgex_£tRegi⁄64_DRAFT_API_DO_NOT_USE


	)

82 
	#uªgex_£tRegi⁄AndSèπ_4_6
 
uªgex_£tRegi⁄AndSèπ_DRAFT_API_DO_NOT_USE


	)

83 
	#uªgex_°¨t64_4_6
 
uªgex_°¨t64_DRAFT_API_DO_NOT_USE


	)

84 
	#us¸ùt_gëS¸ùtExãnsi⁄s_4_6
 
us¸ùt_gëS¸ùtExãnsi⁄s_DRAFT_API_DO_NOT_USE


	)

85 
	#us¸ùt_hasS¸ùt_4_6
 
us¸ùt_hasS¸ùt_DRAFT_API_DO_NOT_USE


	)

	@unicode/uenum.h

17 #i‚de‡
__UENUM_H


18 
	#__UENUM_H


	)

20 
	~"unicode/uty≥s.h
"

21 
	~"unicode/loˇÕoöãr.h
"

23 #i‡
U_SHOW_CPLUSPLUS_API


24 
	~"unicode/°ªnum.h
"

37 
	gUEnumî©i⁄
;

39 
UEnumî©i⁄
 
	tUEnumî©i⁄
;

48 
U_STABLE
 
U_EXPORT2


49 
uíum_˛o£
(
UEnumî©i⁄
* 
í
);

51 #i‡
U_SHOW_CPLUSPLUS_API


53 
U_NAMESPACE_BEGIN


64 
U_DEFINE_LOCAL_OPEN_POINTER
(
LoˇlUEnumî©i⁄Poöãr
, 
UEnumî©i⁄
, 
uíum_˛o£
);

66 
	gU_NAMESPACE_END


84 
U_STABLE
 
öt32_t
 
U_EXPORT2


85 
uíum_cou¡
(
UEnumî©i⁄
* 
í
, 
UEº‹Code
* 
°©us
);

108 
U_STABLE
 c⁄° 
UCh¨
* 
U_EXPORT2


109 
uíum_u√xt
(
UEnumî©i⁄
* 
í
,

110 
öt32_t
* 
ªsu…Lígth
,

111 
UEº‹Code
* 
°©us
);

141 
U_STABLE
 c⁄° * 
U_EXPORT2


142 
uíum_√xt
(
UEnumî©i⁄
* 
í
,

143 
öt32_t
* 
ªsu…Lígth
,

144 
UEº‹Code
* 
°©us
);

155 
U_STABLE
 
U_EXPORT2


156 
uíum_ª£t
(
UEnumî©i⁄
* 
í
, 
UEº‹Code
* 
°©us
);

158 #i‡
U_SHOW_CPLUSPLUS_API


169 
U_CAPI
 
UEnumî©i⁄
* 
U_EXPORT2


170 
uíum_›íFromSåögEnumî©i⁄
(
U_NAMESPACE_QUALIFIER
 
SåögEnumî©i⁄
* 
ad›ãd
, 
UEº‹Code
* 
ec
);

	@unicode/uidna.h

17 #i‚de‡
__UIDNA_H__


18 
	#__UIDNA_H__


	)

20 
	~"unicode/uty≥s.h
"

22 #i‡!
UCONFIG_NO_IDNA


24 
	~"unicode/loˇÕoöãr.h
"

25 
	~"unicode/∑r£îr.h
"

47 
	mUIDNA_DEFAULT
=0,

54 
	mUIDNA_ALLOW_UNASSIGNED
=1,

61 
	mUIDNA_USE_STD3_RULES
=2,

68 
	mUIDNA_CHECK_BIDI
=4,

75 
	mUIDNA_CHECK_CONTEXTJ
=8,

83 
	mUIDNA_NONTRANSITIONAL_TO_ASCII
=0x10,

91 
	mUIDNA_NONTRANSITIONAL_TO_UNICODE
=0x20

98 
	gUIDNA
;

99 
UIDNA
 
	tUIDNA
;

118 
U_DRAFT
 
UIDNA
 * 
U_EXPORT2


119 
uid«_›íUTS46
(
uöt32_t
 
›ti⁄s
, 
UEº‹Code
 *
pEº‹Code
);

126 
U_DRAFT
 
U_EXPORT2


127 
uid«_˛o£
(
UIDNA
 *
id«
);

129 #i‡
U_SHOW_CPLUSPLUS_API


131 
U_NAMESPACE_BEGIN


142 
U_DEFINE_LOCAL_OPEN_POINTER
(
LoˇlUIDNAPoöãr
, 
UIDNA
, 
uid«_˛o£
);

144 
	gU_NAMESPACE_END


158 
	sUIDNAInfo
 {

160 
öt16_t
 
	msize
;

166 
UBoﬁ
 
	misTønsôi⁄ÆDif„ª¡
;

167 
UBoﬁ
 
	mª£rvedB3
;

173 
uöt32_t
 
	mîr‹s
;

174 
öt32_t
 
	mª£rvedI2
;

175 
öt32_t
 
	mª£rvedI3
;

177 
UIDNAInfo
 
	tUIDNAInfo
;

183 
	#UIDNA_INFO_INITIALIZER
 { \

184 (
öt16_t
)(
UIDNAInfo
), \

185 
FALSE
, FALSE, \

186 0, 0, 0 }

	)

211 
U_DRAFT
 
öt32_t
 
U_EXPORT2


212 
uid«_œbñToASCII
(c⁄° 
UIDNA
 *
id«
,

213 c⁄° 
UCh¨
 *
œbñ
, 
öt32_t
 
Àngth
,

214 
UCh¨
 *
de°
, 
öt32_t
 
ˇ∑côy
,

215 
UIDNAInfo
 *
pInfo
, 
UEº‹Code
 *
pEº‹Code
);

238 
U_DRAFT
 
öt32_t
 
U_EXPORT2


239 
uid«_œbñToUnicode
(c⁄° 
UIDNA
 *
id«
,

240 c⁄° 
UCh¨
 *
œbñ
, 
öt32_t
 
Àngth
,

241 
UCh¨
 *
de°
, 
öt32_t
 
ˇ∑côy
,

242 
UIDNAInfo
 *
pInfo
, 
UEº‹Code
 *
pEº‹Code
);

267 
U_DRAFT
 
öt32_t
 
U_EXPORT2


268 
uid«_«meToASCII
(c⁄° 
UIDNA
 *
id«
,

269 c⁄° 
UCh¨
 *
«me
, 
öt32_t
 
Àngth
,

270 
UCh¨
 *
de°
, 
öt32_t
 
ˇ∑côy
,

271 
UIDNAInfo
 *
pInfo
, 
UEº‹Code
 *
pEº‹Code
);

294 
U_DRAFT
 
öt32_t
 
U_EXPORT2


295 
uid«_«meToUnicode
(c⁄° 
UIDNA
 *
id«
,

296 c⁄° 
UCh¨
 *
«me
, 
öt32_t
 
Àngth
,

297 
UCh¨
 *
de°
, 
öt32_t
 
ˇ∑côy
,

298 
UIDNAInfo
 *
pInfo
, 
UEº‹Code
 *
pEº‹Code
);

319 
U_DRAFT
 
öt32_t
 
U_EXPORT2


320 
uid«_œbñToASCII_UTF8
(c⁄° 
UIDNA
 *
id«
,

321 c⁄° *
œbñ
, 
öt32_t
 
Àngth
,

322 *
de°
, 
öt32_t
 
ˇ∑côy
,

323 
UIDNAInfo
 *
pInfo
, 
UEº‹Code
 *
pEº‹Code
);

342 
U_DRAFT
 
öt32_t
 
U_EXPORT2


343 
uid«_œbñToUnicodeUTF8
(c⁄° 
UIDNA
 *
id«
,

344 c⁄° *
œbñ
, 
öt32_t
 
Àngth
,

345 *
de°
, 
öt32_t
 
ˇ∑côy
,

346 
UIDNAInfo
 *
pInfo
, 
UEº‹Code
 *
pEº‹Code
);

365 
U_DRAFT
 
öt32_t
 
U_EXPORT2


366 
uid«_«meToASCII_UTF8
(c⁄° 
UIDNA
 *
id«
,

367 c⁄° *
«me
, 
öt32_t
 
Àngth
,

368 *
de°
, 
öt32_t
 
ˇ∑côy
,

369 
UIDNAInfo
 *
pInfo
, 
UEº‹Code
 *
pEº‹Code
);

388 
U_DRAFT
 
öt32_t
 
U_EXPORT2


389 
uid«_«meToUnicodeUTF8
(c⁄° 
UIDNA
 *
id«
,

390 c⁄° *
«me
, 
öt32_t
 
Àngth
,

391 *
de°
, 
öt32_t
 
ˇ∑côy
,

392 
UIDNAInfo
 *
pInfo
, 
UEº‹Code
 *
pEº‹Code
);

404 
	mUIDNA_ERROR_EMPTY_LABEL
=1,

411 
	mUIDNA_ERROR_LABEL_TOO_LONG
=2,

418 
	mUIDNA_ERROR_DOMAIN_NAME_TOO_LONG
=4,

423 
	mUIDNA_ERROR_LEADING_HYPHEN
=8,

428 
	mUIDNA_ERROR_TRAILING_HYPHEN
=0x10,

433 
	mUIDNA_ERROR_HYPHEN_3_4
=0x20,

438 
	mUIDNA_ERROR_LEADING_COMBINING_MARK
=0x40,

443 
	mUIDNA_ERROR_DISALLOWED
=0x80,

449 
	mUIDNA_ERROR_PUNYCODE
=0x100,

455 
	mUIDNA_ERROR_LABEL_HAS_DOT
=0x200,

464 
	mUIDNA_ERROR_INVALID_ACE_LABEL
=0x400,

469 
	mUIDNA_ERROR_BIDI
=0x800,

474 
	mUIDNA_ERROR_CONTEXTJ
=0x1000

538 
U_STABLE
 
öt32_t
 
U_EXPORT2


539 
uid«_toASCII
(c⁄° 
UCh¨
* 
§c
, 
öt32_t
 
§cLígth
,

540 
UCh¨
* 
de°
, 
öt32_t
 
de°C≠acôy
,

541 
öt32_t
 
›ti⁄s
,

542 
UP¨£Eº‹
* 
∑r£Eº‹
,

543 
UEº‹Code
* 
°©us
);

586 
U_STABLE
 
öt32_t
 
U_EXPORT2


587 
uid«_toUnicode
(c⁄° 
UCh¨
* 
§c
, 
öt32_t
 
§cLígth
,

588 
UCh¨
* 
de°
, 
öt32_t
 
de°C≠acôy
,

589 
öt32_t
 
›ti⁄s
,

590 
UP¨£Eº‹
* 
∑r£Eº‹
,

591 
UEº‹Code
* 
°©us
);

637 
U_STABLE
 
öt32_t
 
U_EXPORT2


638 
uid«_IDNToASCII
–c⁄° 
UCh¨
* 
§c
, 
öt32_t
 
§cLígth
,

639 
UCh¨
* 
de°
, 
öt32_t
 
de°C≠acôy
,

640 
öt32_t
 
›ti⁄s
,

641 
UP¨£Eº‹
* 
∑r£Eº‹
,

642 
UEº‹Code
* 
°©us
);

684 
U_STABLE
 
öt32_t
 
U_EXPORT2


685 
uid«_IDNToUnicode
–c⁄° 
UCh¨
* 
§c
, 
öt32_t
 
§cLígth
,

686 
UCh¨
* 
de°
, 
öt32_t
 
de°C≠acôy
,

687 
öt32_t
 
›ti⁄s
,

688 
UP¨£Eº‹
* 
∑r£Eº‹
,

689 
UEº‹Code
* 
°©us
);

725 
U_STABLE
 
öt32_t
 
U_EXPORT2


726 
uid«_com∑ª
–c⁄° 
UCh¨
 *
s1
, 
öt32_t
 
Àngth1
,

727 c⁄° 
UCh¨
 *
s2
, 
öt32_t
 
Àngth2
,

728 
öt32_t
 
›ti⁄s
,

729 
UEº‹Code
* 
°©us
);

	@unicode/uintrnal.h

21 #i‚de‡
UINTRNAL_H


22 
	#UINTRNAL_H


	)

24 #ifde‡
U_HIDE_INTERNAL_API


26 #i‡
U_DISABLE_RENAMING


27 
	#RegexP©ã∫Dump
 
RegexP©ã∫Dump_INTERNAL_API_DO_NOT_USE


	)

28 
	#bms_˛o£
 
bms_˛o£_INTERNAL_API_DO_NOT_USE


	)

29 
	#bms_em±y
 
bms_em±y_INTERNAL_API_DO_NOT_USE


	)

30 
	#bms_gëD©a
 
bms_gëD©a_INTERNAL_API_DO_NOT_USE


	)

31 
	#bms_›í
 
bms_›í_INTERNAL_API_DO_NOT_USE


	)

32 
	#bms_£¨ch
 
bms_£¨ch_INTERNAL_API_DO_NOT_USE


	)

33 
	#bms_£tT¨gëSåög
 
bms_£tT¨gëSåög_INTERNAL_API_DO_NOT_USE


	)

34 
	#∂_addF⁄tRun
 
∂_addF⁄tRun_INTERNAL_API_DO_NOT_USE


	)

35 
	#∂_addLoˇÀRun
 
∂_addLoˇÀRun_INTERNAL_API_DO_NOT_USE


	)

36 
	#∂_addVÆueRun
 
∂_addVÆueRun_INTERNAL_API_DO_NOT_USE


	)

37 
	#∂_˛o£
 
∂_˛o£_INTERNAL_API_DO_NOT_USE


	)

38 
	#∂_˛o£F⁄tRuns
 
∂_˛o£F⁄tRuns_INTERNAL_API_DO_NOT_USE


	)

39 
	#∂_˛o£Löe
 
∂_˛o£Löe_INTERNAL_API_DO_NOT_USE


	)

40 
	#∂_˛o£LoˇÀRuns
 
∂_˛o£LoˇÀRuns_INTERNAL_API_DO_NOT_USE


	)

41 
	#∂_˛o£VÆueRuns
 
∂_˛o£VÆueRuns_INTERNAL_API_DO_NOT_USE


	)

42 
	#∂_cou¡LöeRuns
 
∂_cou¡LöeRuns_INTERNAL_API_DO_NOT_USE


	)

43 
	#∂_gëAs˚¡
 
∂_gëAs˚¡_INTERNAL_API_DO_NOT_USE


	)

44 
	#∂_gëDes˚¡
 
∂_gëDes˚¡_INTERNAL_API_DO_NOT_USE


	)

45 
	#∂_gëF⁄tRunCou¡
 
∂_gëF⁄tRunCou¡_INTERNAL_API_DO_NOT_USE


	)

46 
	#∂_gëF⁄tRunF⁄t
 
∂_gëF⁄tRunF⁄t_INTERNAL_API_DO_NOT_USE


	)

47 
	#∂_gëF⁄tRunLa°Limô
 
∂_gëF⁄tRunLa°Limô_INTERNAL_API_DO_NOT_USE


	)

48 
	#∂_gëF⁄tRunLimô
 
∂_gëF⁄tRunLimô_INTERNAL_API_DO_NOT_USE


	)

49 
	#∂_gëLódög
 
∂_gëLódög_INTERNAL_API_DO_NOT_USE


	)

50 
	#∂_gëLöeAs˚¡
 
∂_gëLöeAs˚¡_INTERNAL_API_DO_NOT_USE


	)

51 
	#∂_gëLöeDes˚¡
 
∂_gëLöeDes˚¡_INTERNAL_API_DO_NOT_USE


	)

52 
	#∂_gëLöeLódög
 
∂_gëLöeLódög_INTERNAL_API_DO_NOT_USE


	)

53 
	#∂_gëLöeVisuÆRun
 
∂_gëLöeVisuÆRun_INTERNAL_API_DO_NOT_USE


	)

54 
	#∂_gëLöeWidth
 
∂_gëLöeWidth_INTERNAL_API_DO_NOT_USE


	)

55 
	#∂_gëLoˇÀRunCou¡
 
∂_gëLoˇÀRunCou¡_INTERNAL_API_DO_NOT_USE


	)

56 
	#∂_gëLoˇÀRunLa°Limô
 
∂_gëLoˇÀRunLa°Limô_INTERNAL_API_DO_NOT_USE


	)

57 
	#∂_gëLoˇÀRunLimô
 
∂_gëLoˇÀRunLimô_INTERNAL_API_DO_NOT_USE


	)

58 
	#∂_gëLoˇÀRunLoˇÀ
 
∂_gëLoˇÀRunLoˇÀ_INTERNAL_API_DO_NOT_USE


	)

59 
	#∂_gëP¨agøphLevñ
 
∂_gëP¨agøphLevñ_INTERNAL_API_DO_NOT_USE


	)

60 
	#∂_gëTextDúe˘i⁄
 
∂_gëTextDúe˘i⁄_INTERNAL_API_DO_NOT_USE


	)

61 
	#∂_gëVÆueRunCou¡
 
∂_gëVÆueRunCou¡_INTERNAL_API_DO_NOT_USE


	)

62 
	#∂_gëVÆueRunLa°Limô
 
∂_gëVÆueRunLa°Limô_INTERNAL_API_DO_NOT_USE


	)

63 
	#∂_gëVÆueRunLimô
 
∂_gëVÆueRunLimô_INTERNAL_API_DO_NOT_USE


	)

64 
	#∂_gëVÆueRunVÆue
 
∂_gëVÆueRunVÆue_INTERNAL_API_DO_NOT_USE


	)

65 
	#∂_gëVisuÆRunAs˚¡
 
∂_gëVisuÆRunAs˚¡_INTERNAL_API_DO_NOT_USE


	)

66 
	#∂_gëVisuÆRunDes˚¡
 
∂_gëVisuÆRunDes˚¡_INTERNAL_API_DO_NOT_USE


	)

67 
	#∂_gëVisuÆRunDúe˘i⁄
 
∂_gëVisuÆRunDúe˘i⁄_INTERNAL_API_DO_NOT_USE


	)

68 
	#∂_gëVisuÆRunF⁄t
 
∂_gëVisuÆRunF⁄t_INTERNAL_API_DO_NOT_USE


	)

69 
	#∂_gëVisuÆRunGlyphCou¡
 
∂_gëVisuÆRunGlyphCou¡_INTERNAL_API_DO_NOT_USE


	)

70 
	#∂_gëVisuÆRunGlyphToCh¨M≠
 
∂_gëVisuÆRunGlyphToCh¨M≠_INTERNAL_API_DO_NOT_USE


	)

71 
	#∂_gëVisuÆRunGlyphs
 
∂_gëVisuÆRunGlyphs_INTERNAL_API_DO_NOT_USE


	)

72 
	#∂_gëVisuÆRunLódög
 
∂_gëVisuÆRunLódög_INTERNAL_API_DO_NOT_USE


	)

73 
	#∂_gëVisuÆRunPosôi⁄s
 
∂_gëVisuÆRunPosôi⁄s_INTERNAL_API_DO_NOT_USE


	)

74 
	#∂_löe
 
∂_löe_INTERNAL_API_DO_NOT_USE


	)

75 
	#∂_√xtLöe
 
∂_√xtLöe_INTERNAL_API_DO_NOT_USE


	)

76 
	#∂_›íEm±yF⁄tRuns
 
∂_›íEm±yF⁄tRuns_INTERNAL_API_DO_NOT_USE


	)

77 
	#∂_›íEm±yLoˇÀRuns
 
∂_›íEm±yLoˇÀRuns_INTERNAL_API_DO_NOT_USE


	)

78 
	#∂_›íEm±yVÆueRuns
 
∂_›íEm±yVÆueRuns_INTERNAL_API_DO_NOT_USE


	)

79 
	#∂_›íF⁄tRuns
 
∂_›íF⁄tRuns_INTERNAL_API_DO_NOT_USE


	)

80 
	#∂_›íLoˇÀRuns
 
∂_›íLoˇÀRuns_INTERNAL_API_DO_NOT_USE


	)

81 
	#∂_›íVÆueRuns
 
∂_›íVÆueRuns_INTERNAL_API_DO_NOT_USE


	)

82 
	#∂_∑øgøph
 
∂_∑øgøph_INTERNAL_API_DO_NOT_USE


	)

83 
	#∂_ªÊow
 
∂_ªÊow_INTERNAL_API_DO_NOT_USE


	)

84 
	#∂_ª£tF⁄tRuns
 
∂_ª£tF⁄tRuns_INTERNAL_API_DO_NOT_USE


	)

85 
	#∂_ª£tLoˇÀRuns
 
∂_ª£tLoˇÀRuns_INTERNAL_API_DO_NOT_USE


	)

86 
	#∂_ª£tVÆueRuns
 
∂_ª£tVÆueRuns_INTERNAL_API_DO_NOT_USE


	)

87 
	#∂_visuÆRun
 
∂_visuÆRun_INTERNAL_API_DO_NOT_USE


	)

88 
	#ucd_˛o£
 
ucd_˛o£_INTERNAL_API_DO_NOT_USE


	)

89 
	#ucd_ÊushCache
 
ucd_ÊushCache_INTERNAL_API_DO_NOT_USE


	)

90 
	#ucd_‰ìCache
 
ucd_‰ìCache_INTERNAL_API_DO_NOT_USE


	)

91 
	#ucd_gëCﬁœt‹
 
ucd_gëCﬁœt‹_INTERNAL_API_DO_NOT_USE


	)

92 
	#ucd_›í
 
ucd_›í_INTERNAL_API_DO_NOT_USE


	)

93 
	#ucﬁ_equÆs
 
ucﬁ_equÆs_INTERNAL_API_DO_NOT_USE


	)

94 
	#ucﬁ_f‹˚H™Im∂icô
 
ucﬁ_f‹˚H™Im∂icô_INTERNAL_API_DO_NOT_USE


	)

95 
	#ucﬁ_f‹gëUCA
 
ucﬁ_f‹gëUCA_INTERNAL_API_DO_NOT_USE


	)

96 
	#ucﬁ_gëAâribuãOrDeÁu…
 
ucﬁ_gëAâribuãOrDeÁu…_INTERNAL_API_DO_NOT_USE


	)

97 
	#ucﬁ_gëRe‹dîCodes
 
ucﬁ_gëRe‹dîCodes_INTERNAL_API_DO_NOT_USE


	)

98 
	#ucﬁ_gëUnß„Së
 
ucﬁ_gëUnß„Së_INTERNAL_API_DO_NOT_USE


	)

99 
	#ucﬁ_√xtPro˚s£d
 
ucﬁ_√xtPro˚s£d_INTERNAL_API_DO_NOT_USE


	)

100 
	#ucﬁ_¥ï¨eSh‹tSåögO≥n
 
ucﬁ_¥ï¨eSh‹tSåögO≥n_INTERNAL_API_DO_NOT_USE


	)

101 
	#ucﬁ_¥eviousPro˚s£d
 
ucﬁ_¥eviousPro˚s£d_INTERNAL_API_DO_NOT_USE


	)

102 
	#ucﬁ_£tRe‹dîCodes
 
ucﬁ_£tRe‹dîCodes_INTERNAL_API_DO_NOT_USE


	)

103 
	#ud©_≠∂yP©ã∫Rñ©ive
 
ud©_≠∂yP©ã∫Rñ©ive_INTERNAL_API_DO_NOT_USE


	)

104 
	#ud©_toP©ã∫Rñ©iveD©e
 
ud©_toP©ã∫Rñ©iveD©e_INTERNAL_API_DO_NOT_USE


	)

105 
	#ud©_toP©ã∫Rñ©iveTime
 
ud©_toP©ã∫Rñ©iveTime_INTERNAL_API_DO_NOT_USE


	)

106 
	#u∂ug_gëC⁄figuøti⁄
 
u∂ug_gëC⁄figuøti⁄_INTERNAL_API_DO_NOT_USE


	)

107 
	#u∂ug_gëC⁄ãxt
 
u∂ug_gëC⁄ãxt_INTERNAL_API_DO_NOT_USE


	)

108 
	#u∂ug_gëCuºítLevñ
 
u∂ug_gëCuºítLevñ_INTERNAL_API_DO_NOT_USE


	)

109 
	#u∂ug_gëLibøry
 
u∂ug_gëLibøry_INTERNAL_API_DO_NOT_USE


	)

110 
	#u∂ug_gëLibøryName
 
u∂ug_gëLibøryName_INTERNAL_API_DO_NOT_USE


	)

111 
	#u∂ug_gëPlugLevñ
 
u∂ug_gëPlugLevñ_INTERNAL_API_DO_NOT_USE


	)

112 
	#u∂ug_gëPlugLﬂdSètus
 
u∂ug_gëPlugLﬂdSètus_INTERNAL_API_DO_NOT_USE


	)

113 
	#u∂ug_gëPlugName
 
u∂ug_gëPlugName_INTERNAL_API_DO_NOT_USE


	)

114 
	#u∂ug_gëSymbﬁName
 
u∂ug_gëSymbﬁName_INTERNAL_API_DO_NOT_USE


	)

115 
	#u∂ug_lﬂdPlugFromE¡rypoöt
 
u∂ug_lﬂdPlugFromE¡rypoöt_INTERNAL_API_DO_NOT_USE


	)

116 
	#u∂ug_lﬂdPlugFromLibøry
 
u∂ug_lﬂdPlugFromLibøry_INTERNAL_API_DO_NOT_USE


	)

117 
	#u∂ug_√xtPlug
 
u∂ug_√xtPlug_INTERNAL_API_DO_NOT_USE


	)

118 
	#u∂ug_ªmovePlug
 
u∂ug_ªmovePlug_INTERNAL_API_DO_NOT_USE


	)

119 
	#u∂ug_£tC⁄ãxt
 
u∂ug_£tC⁄ãxt_INTERNAL_API_DO_NOT_USE


	)

120 
	#u∂ug_£tPlugLevñ
 
u∂ug_£tPlugLevñ_INTERNAL_API_DO_NOT_USE


	)

121 
	#u∂ug_£tPlugName
 
u∂ug_£tPlugName_INTERNAL_API_DO_NOT_USE


	)

122 
	#u∂ug_£tPlugNoU∆ﬂd
 
u∂ug_£tPlugNoU∆ﬂd_INTERNAL_API_DO_NOT_USE


	)

123 
	#u¥v_gëDeÁu…Codïage
 
u¥v_gëDeÁu…Codïage_INTERNAL_API_DO_NOT_USE


	)

124 
	#u¥v_gëDeÁu…LoˇÀID
 
u¥v_gëDeÁu…LoˇÀID_INTERNAL_API_DO_NOT_USE


	)

125 
	#uªs_›íFûlIn
 
uªs_›íFûlIn_INTERNAL_API_DO_NOT_USE


	)

126 
	#u£¨ch_£¨ch
 
u£¨ch_£¨ch_INTERNAL_API_DO_NOT_USE


	)

127 
	#u£¨ch_£¨chBackw¨ds
 
u£¨ch_£¨chBackw¨ds_INTERNAL_API_DO_NOT_USE


	)

128 
	#uãxt_ˇ£Com∑ª
 
uãxt_ˇ£Com∑ª_INTERNAL_API_DO_NOT_USE


	)

129 
	#uãxt_ˇ£Com∑ªN©iveLimô
 
uãxt_ˇ£Com∑ªN©iveLimô_INTERNAL_API_DO_NOT_USE


	)

130 
	#uãxt_com∑ª
 
uãxt_com∑ª_INTERNAL_API_DO_NOT_USE


	)

131 
	#uãxt_com∑ªN©iveLimô
 
uãxt_com∑ªN©iveLimô_INTERNAL_API_DO_NOT_USE


	)

132 
	#utf8_≠≥ndCh¨Sa„Body
 
utf8_≠≥ndCh¨Sa„Body_INTERNAL_API_DO_NOT_USE


	)

133 
	#utf8_back1Sa„Body
 
utf8_back1Sa„Body_INTERNAL_API_DO_NOT_USE


	)

134 
	#utf8_cou¡TøûByãs
 
utf8_cou¡TøûByãs_INTERNAL_API_DO_NOT_USE


	)

135 
	#utf8_√xtCh¨Sa„Body
 
utf8_√xtCh¨Sa„Body_INTERNAL_API_DO_NOT_USE


	)

136 
	#utf8_¥evCh¨Sa„Body
 
utf8_¥evCh¨Sa„Body_INTERNAL_API_DO_NOT_USE


	)

138 
	#RegexP©ã∫Dump_4_6
 
RegexP©ã∫Dump_INTERNAL_API_DO_NOT_USE


	)

139 
	#bms_˛o£_4_6
 
bms_˛o£_INTERNAL_API_DO_NOT_USE


	)

140 
	#bms_em±y_4_6
 
bms_em±y_INTERNAL_API_DO_NOT_USE


	)

141 
	#bms_gëD©a_4_6
 
bms_gëD©a_INTERNAL_API_DO_NOT_USE


	)

142 
	#bms_›í_4_6
 
bms_›í_INTERNAL_API_DO_NOT_USE


	)

143 
	#bms_£¨ch_4_6
 
bms_£¨ch_INTERNAL_API_DO_NOT_USE


	)

144 
	#bms_£tT¨gëSåög_4_6
 
bms_£tT¨gëSåög_INTERNAL_API_DO_NOT_USE


	)

145 
	#∂_addF⁄tRun_4_6
 
∂_addF⁄tRun_INTERNAL_API_DO_NOT_USE


	)

146 
	#∂_addLoˇÀRun_4_6
 
∂_addLoˇÀRun_INTERNAL_API_DO_NOT_USE


	)

147 
	#∂_addVÆueRun_4_6
 
∂_addVÆueRun_INTERNAL_API_DO_NOT_USE


	)

148 
	#∂_˛o£_4_6
 
∂_˛o£_INTERNAL_API_DO_NOT_USE


	)

149 
	#∂_˛o£F⁄tRuns_4_6
 
∂_˛o£F⁄tRuns_INTERNAL_API_DO_NOT_USE


	)

150 
	#∂_˛o£Löe_4_6
 
∂_˛o£Löe_INTERNAL_API_DO_NOT_USE


	)

151 
	#∂_˛o£LoˇÀRuns_4_6
 
∂_˛o£LoˇÀRuns_INTERNAL_API_DO_NOT_USE


	)

152 
	#∂_˛o£VÆueRuns_4_6
 
∂_˛o£VÆueRuns_INTERNAL_API_DO_NOT_USE


	)

153 
	#∂_cou¡LöeRuns_4_6
 
∂_cou¡LöeRuns_INTERNAL_API_DO_NOT_USE


	)

154 
	#∂_gëAs˚¡_4_6
 
∂_gëAs˚¡_INTERNAL_API_DO_NOT_USE


	)

155 
	#∂_gëDes˚¡_4_6
 
∂_gëDes˚¡_INTERNAL_API_DO_NOT_USE


	)

156 
	#∂_gëF⁄tRunCou¡_4_6
 
∂_gëF⁄tRunCou¡_INTERNAL_API_DO_NOT_USE


	)

157 
	#∂_gëF⁄tRunF⁄t_4_6
 
∂_gëF⁄tRunF⁄t_INTERNAL_API_DO_NOT_USE


	)

158 
	#∂_gëF⁄tRunLa°Limô_4_6
 
∂_gëF⁄tRunLa°Limô_INTERNAL_API_DO_NOT_USE


	)

159 
	#∂_gëF⁄tRunLimô_4_6
 
∂_gëF⁄tRunLimô_INTERNAL_API_DO_NOT_USE


	)

160 
	#∂_gëLódög_4_6
 
∂_gëLódög_INTERNAL_API_DO_NOT_USE


	)

161 
	#∂_gëLöeAs˚¡_4_6
 
∂_gëLöeAs˚¡_INTERNAL_API_DO_NOT_USE


	)

162 
	#∂_gëLöeDes˚¡_4_6
 
∂_gëLöeDes˚¡_INTERNAL_API_DO_NOT_USE


	)

163 
	#∂_gëLöeLódög_4_6
 
∂_gëLöeLódög_INTERNAL_API_DO_NOT_USE


	)

164 
	#∂_gëLöeVisuÆRun_4_6
 
∂_gëLöeVisuÆRun_INTERNAL_API_DO_NOT_USE


	)

165 
	#∂_gëLöeWidth_4_6
 
∂_gëLöeWidth_INTERNAL_API_DO_NOT_USE


	)

166 
	#∂_gëLoˇÀRunCou¡_4_6
 
∂_gëLoˇÀRunCou¡_INTERNAL_API_DO_NOT_USE


	)

167 
	#∂_gëLoˇÀRunLa°Limô_4_6
 
∂_gëLoˇÀRunLa°Limô_INTERNAL_API_DO_NOT_USE


	)

168 
	#∂_gëLoˇÀRunLimô_4_6
 
∂_gëLoˇÀRunLimô_INTERNAL_API_DO_NOT_USE


	)

169 
	#∂_gëLoˇÀRunLoˇÀ_4_6
 
∂_gëLoˇÀRunLoˇÀ_INTERNAL_API_DO_NOT_USE


	)

170 
	#∂_gëP¨agøphLevñ_4_6
 
∂_gëP¨agøphLevñ_INTERNAL_API_DO_NOT_USE


	)

171 
	#∂_gëTextDúe˘i⁄_4_6
 
∂_gëTextDúe˘i⁄_INTERNAL_API_DO_NOT_USE


	)

172 
	#∂_gëVÆueRunCou¡_4_6
 
∂_gëVÆueRunCou¡_INTERNAL_API_DO_NOT_USE


	)

173 
	#∂_gëVÆueRunLa°Limô_4_6
 
∂_gëVÆueRunLa°Limô_INTERNAL_API_DO_NOT_USE


	)

174 
	#∂_gëVÆueRunLimô_4_6
 
∂_gëVÆueRunLimô_INTERNAL_API_DO_NOT_USE


	)

175 
	#∂_gëVÆueRunVÆue_4_6
 
∂_gëVÆueRunVÆue_INTERNAL_API_DO_NOT_USE


	)

176 
	#∂_gëVisuÆRunAs˚¡_4_6
 
∂_gëVisuÆRunAs˚¡_INTERNAL_API_DO_NOT_USE


	)

177 
	#∂_gëVisuÆRunDes˚¡_4_6
 
∂_gëVisuÆRunDes˚¡_INTERNAL_API_DO_NOT_USE


	)

178 
	#∂_gëVisuÆRunDúe˘i⁄_4_6
 
∂_gëVisuÆRunDúe˘i⁄_INTERNAL_API_DO_NOT_USE


	)

179 
	#∂_gëVisuÆRunF⁄t_4_6
 
∂_gëVisuÆRunF⁄t_INTERNAL_API_DO_NOT_USE


	)

180 
	#∂_gëVisuÆRunGlyphCou¡_4_6
 
∂_gëVisuÆRunGlyphCou¡_INTERNAL_API_DO_NOT_USE


	)

181 
	#∂_gëVisuÆRunGlyphToCh¨M≠_4_6
 
∂_gëVisuÆRunGlyphToCh¨M≠_INTERNAL_API_DO_NOT_USE


	)

182 
	#∂_gëVisuÆRunGlyphs_4_6
 
∂_gëVisuÆRunGlyphs_INTERNAL_API_DO_NOT_USE


	)

183 
	#∂_gëVisuÆRunLódög_4_6
 
∂_gëVisuÆRunLódög_INTERNAL_API_DO_NOT_USE


	)

184 
	#∂_gëVisuÆRunPosôi⁄s_4_6
 
∂_gëVisuÆRunPosôi⁄s_INTERNAL_API_DO_NOT_USE


	)

185 
	#∂_löe_4_6
 
∂_löe_INTERNAL_API_DO_NOT_USE


	)

186 
	#∂_√xtLöe_4_6
 
∂_√xtLöe_INTERNAL_API_DO_NOT_USE


	)

187 
	#∂_›íEm±yF⁄tRuns_4_6
 
∂_›íEm±yF⁄tRuns_INTERNAL_API_DO_NOT_USE


	)

188 
	#∂_›íEm±yLoˇÀRuns_4_6
 
∂_›íEm±yLoˇÀRuns_INTERNAL_API_DO_NOT_USE


	)

189 
	#∂_›íEm±yVÆueRuns_4_6
 
∂_›íEm±yVÆueRuns_INTERNAL_API_DO_NOT_USE


	)

190 
	#∂_›íF⁄tRuns_4_6
 
∂_›íF⁄tRuns_INTERNAL_API_DO_NOT_USE


	)

191 
	#∂_›íLoˇÀRuns_4_6
 
∂_›íLoˇÀRuns_INTERNAL_API_DO_NOT_USE


	)

192 
	#∂_›íVÆueRuns_4_6
 
∂_›íVÆueRuns_INTERNAL_API_DO_NOT_USE


	)

193 
	#∂_∑øgøph_4_6
 
∂_∑øgøph_INTERNAL_API_DO_NOT_USE


	)

194 
	#∂_ªÊow_4_6
 
∂_ªÊow_INTERNAL_API_DO_NOT_USE


	)

195 
	#∂_ª£tF⁄tRuns_4_6
 
∂_ª£tF⁄tRuns_INTERNAL_API_DO_NOT_USE


	)

196 
	#∂_ª£tLoˇÀRuns_4_6
 
∂_ª£tLoˇÀRuns_INTERNAL_API_DO_NOT_USE


	)

197 
	#∂_ª£tVÆueRuns_4_6
 
∂_ª£tVÆueRuns_INTERNAL_API_DO_NOT_USE


	)

198 
	#∂_visuÆRun_4_6
 
∂_visuÆRun_INTERNAL_API_DO_NOT_USE


	)

199 
	#ucd_˛o£_4_6
 
ucd_˛o£_INTERNAL_API_DO_NOT_USE


	)

200 
	#ucd_ÊushCache_4_6
 
ucd_ÊushCache_INTERNAL_API_DO_NOT_USE


	)

201 
	#ucd_‰ìCache_4_6
 
ucd_‰ìCache_INTERNAL_API_DO_NOT_USE


	)

202 
	#ucd_gëCﬁœt‹_4_6
 
ucd_gëCﬁœt‹_INTERNAL_API_DO_NOT_USE


	)

203 
	#ucd_›í_4_6
 
ucd_›í_INTERNAL_API_DO_NOT_USE


	)

204 
	#ucﬁ_equÆs_4_6
 
ucﬁ_equÆs_INTERNAL_API_DO_NOT_USE


	)

205 
	#ucﬁ_f‹˚H™Im∂icô_4_6
 
ucﬁ_f‹˚H™Im∂icô_INTERNAL_API_DO_NOT_USE


	)

206 
	#ucﬁ_f‹gëUCA_4_6
 
ucﬁ_f‹gëUCA_INTERNAL_API_DO_NOT_USE


	)

207 
	#ucﬁ_gëAâribuãOrDeÁu…_4_6
 
ucﬁ_gëAâribuãOrDeÁu…_INTERNAL_API_DO_NOT_USE


	)

208 
	#ucﬁ_gëRe‹dîCodes_4_6
 
ucﬁ_gëRe‹dîCodes_INTERNAL_API_DO_NOT_USE


	)

209 
	#ucﬁ_gëUnß„Së_4_6
 
ucﬁ_gëUnß„Së_INTERNAL_API_DO_NOT_USE


	)

210 
	#ucﬁ_√xtPro˚s£d_4_6
 
ucﬁ_√xtPro˚s£d_INTERNAL_API_DO_NOT_USE


	)

211 
	#ucﬁ_¥ï¨eSh‹tSåögO≥n_4_6
 
ucﬁ_¥ï¨eSh‹tSåögO≥n_INTERNAL_API_DO_NOT_USE


	)

212 
	#ucﬁ_¥eviousPro˚s£d_4_6
 
ucﬁ_¥eviousPro˚s£d_INTERNAL_API_DO_NOT_USE


	)

213 
	#ucﬁ_£tRe‹dîCodes_4_6
 
ucﬁ_£tRe‹dîCodes_INTERNAL_API_DO_NOT_USE


	)

214 
	#ud©_≠∂yP©ã∫Rñ©ive_4_6
 
ud©_≠∂yP©ã∫Rñ©ive_INTERNAL_API_DO_NOT_USE


	)

215 
	#ud©_toP©ã∫Rñ©iveD©e_4_6
 
ud©_toP©ã∫Rñ©iveD©e_INTERNAL_API_DO_NOT_USE


	)

216 
	#ud©_toP©ã∫Rñ©iveTime_4_6
 
ud©_toP©ã∫Rñ©iveTime_INTERNAL_API_DO_NOT_USE


	)

217 
	#u∂ug_gëC⁄figuøti⁄_4_6
 
u∂ug_gëC⁄figuøti⁄_INTERNAL_API_DO_NOT_USE


	)

218 
	#u∂ug_gëC⁄ãxt_4_6
 
u∂ug_gëC⁄ãxt_INTERNAL_API_DO_NOT_USE


	)

219 
	#u∂ug_gëCuºítLevñ_4_6
 
u∂ug_gëCuºítLevñ_INTERNAL_API_DO_NOT_USE


	)

220 
	#u∂ug_gëLibøry_4_6
 
u∂ug_gëLibøry_INTERNAL_API_DO_NOT_USE


	)

221 
	#u∂ug_gëLibøryName_4_6
 
u∂ug_gëLibøryName_INTERNAL_API_DO_NOT_USE


	)

222 
	#u∂ug_gëPlugLevñ_4_6
 
u∂ug_gëPlugLevñ_INTERNAL_API_DO_NOT_USE


	)

223 
	#u∂ug_gëPlugLﬂdSètus_4_6
 
u∂ug_gëPlugLﬂdSètus_INTERNAL_API_DO_NOT_USE


	)

224 
	#u∂ug_gëPlugName_4_6
 
u∂ug_gëPlugName_INTERNAL_API_DO_NOT_USE


	)

225 
	#u∂ug_gëSymbﬁName_4_6
 
u∂ug_gëSymbﬁName_INTERNAL_API_DO_NOT_USE


	)

226 
	#u∂ug_lﬂdPlugFromE¡rypoöt_4_6
 
u∂ug_lﬂdPlugFromE¡rypoöt_INTERNAL_API_DO_NOT_USE


	)

227 
	#u∂ug_lﬂdPlugFromLibøry_4_6
 
u∂ug_lﬂdPlugFromLibøry_INTERNAL_API_DO_NOT_USE


	)

228 
	#u∂ug_√xtPlug_4_6
 
u∂ug_√xtPlug_INTERNAL_API_DO_NOT_USE


	)

229 
	#u∂ug_ªmovePlug_4_6
 
u∂ug_ªmovePlug_INTERNAL_API_DO_NOT_USE


	)

230 
	#u∂ug_£tC⁄ãxt_4_6
 
u∂ug_£tC⁄ãxt_INTERNAL_API_DO_NOT_USE


	)

231 
	#u∂ug_£tPlugLevñ_4_6
 
u∂ug_£tPlugLevñ_INTERNAL_API_DO_NOT_USE


	)

232 
	#u∂ug_£tPlugName_4_6
 
u∂ug_£tPlugName_INTERNAL_API_DO_NOT_USE


	)

233 
	#u∂ug_£tPlugNoU∆ﬂd_4_6
 
u∂ug_£tPlugNoU∆ﬂd_INTERNAL_API_DO_NOT_USE


	)

234 
	#u¥v_gëDeÁu…Codïage_4_6
 
u¥v_gëDeÁu…Codïage_INTERNAL_API_DO_NOT_USE


	)

235 
	#u¥v_gëDeÁu…LoˇÀID_4_6
 
u¥v_gëDeÁu…LoˇÀID_INTERNAL_API_DO_NOT_USE


	)

236 
	#uªs_›íFûlIn_4_6
 
uªs_›íFûlIn_INTERNAL_API_DO_NOT_USE


	)

237 
	#u£¨ch_£¨ch_4_6
 
u£¨ch_£¨ch_INTERNAL_API_DO_NOT_USE


	)

238 
	#u£¨ch_£¨chBackw¨ds_4_6
 
u£¨ch_£¨chBackw¨ds_INTERNAL_API_DO_NOT_USE


	)

239 
	#uãxt_ˇ£Com∑ªN©iveLimô_4_6
 
uãxt_ˇ£Com∑ªN©iveLimô_INTERNAL_API_DO_NOT_USE


	)

240 
	#uãxt_ˇ£Com∑ª_4_6
 
uãxt_ˇ£Com∑ª_INTERNAL_API_DO_NOT_USE


	)

241 
	#uãxt_com∑ªN©iveLimô_4_6
 
uãxt_com∑ªN©iveLimô_INTERNAL_API_DO_NOT_USE


	)

242 
	#uãxt_com∑ª_4_6
 
uãxt_com∑ª_INTERNAL_API_DO_NOT_USE


	)

243 
	#utf8_≠≥ndCh¨Sa„Body_4_6
 
utf8_≠≥ndCh¨Sa„Body_INTERNAL_API_DO_NOT_USE


	)

244 
	#utf8_back1Sa„Body_4_6
 
utf8_back1Sa„Body_INTERNAL_API_DO_NOT_USE


	)

245 
	#utf8_cou¡TøûByãs_4_6
 
utf8_cou¡TøûByãs_INTERNAL_API_DO_NOT_USE


	)

246 
	#utf8_√xtCh¨Sa„Body_4_6
 
utf8_√xtCh¨Sa„Body_INTERNAL_API_DO_NOT_USE


	)

247 
	#utf8_¥evCh¨Sa„Body_4_6
 
utf8_¥evCh¨Sa„Body_INTERNAL_API_DO_NOT_USE


	)

	@unicode/uiter.h

17 #i‚de‡
__UITER_H__


18 
	#__UITER_H__


	)

27 
	~"unicode/uty≥s.h
"

29 #i‡
U_SHOW_CPLUSPLUS_API


30 
U_NAMESPACE_BEGIN


32 
˛ass
 
	gCh¨a˘îIãøt‹
;

33 
˛ass
 
	gRïœ˚abÀ
;

35 
	gU_NAMESPACE_END


38 
U_CDECL_BEGIN


40 
	gUCh¨Iãøt‹
;

41 
UCh¨Iãøt‹
 
	tUCh¨Iãøt‹
;

49 
	eUCh¨Iãøt‹Origö
 {

50 
	mUITER_START
, 
	mUITER_CURRENT
, 
	mUITER_LIMIT
, 
	mUITER_ZERO
, 
	mUITER_LENGTH


51 } 
	tUCh¨Iãøt‹Origö
;

69 
	mUITER_UNKNOWN_INDEX
=-2

84 
	#UITER_NO_STATE
 ((
uöt32_t
)0xffffffff)

	)

104 
öt32_t
 
	tU_CALLCONV


105 
	tUCh¨Iãøt‹GëIndex
(
	tUCh¨Iãøt‹
 *
	tôî
, 
	tUCh¨Iãøt‹Origö
 
	t‹igö
);

141 
öt32_t
 
	tU_CALLCONV


142 
	tUCh¨Iãøt‹Move
(
	tUCh¨Iãøt‹
 *
	tôî
, 
	töt32_t
 
	tdñè
, 
	tUCh¨Iãøt‹Origö
 
	t‹igö
);

156 
UBoﬁ
 
	tU_CALLCONV


157 
	tUCh¨Iãøt‹HasNext
(
	tUCh¨Iãøt‹
 *
	tôî
);

170 
UBoﬁ
 
	tU_CALLCONV


171 
	tUCh¨Iãøt‹HasPªvious
(
	tUCh¨Iãøt‹
 *
	tôî
);

185 
UCh¨32
 
	tU_CALLCONV


186 
	tUCh¨Iãøt‹Cuºít
(
	tUCh¨Iãøt‹
 *
	tôî
);

201 
UCh¨32
 
	tU_CALLCONV


202 
	tUCh¨Iãøt‹Next
(
	tUCh¨Iãøt‹
 *
	tôî
);

217 
UCh¨32
 
	tU_CALLCONV


218 
	tUCh¨Iãøt‹Pªvious
(
	tUCh¨Iãøt‹
 *
	tôî
);

231 
öt32_t
 
	tU_CALLCONV


232 
	tUCh¨Iãøt‹Re£rved
(
	tUCh¨Iãøt‹
 *
	tôî
, 
	töt32_t
 
	tsomëhög
);

278 
uöt32_t
 
	tU_CALLCONV


279 
	tUCh¨Iãøt‹GëSèã
(c⁄° 
	tUCh¨Iãøt‹
 *
	tôî
);

306 
	tU_CALLCONV


307 
	tUCh¨Iãøt‹SëSèã
(
	tUCh¨Iãøt‹
 *
	tôî
, 
	tuöt32_t
 
	t°©e
, 
	tUEº‹Code
 *
	tpEº‹Code
);

339 
	sUCh¨Iãøt‹
 {

345 c⁄° *
	mc⁄ãxt
;

352 
öt32_t
 
	mÀngth
;

359 
öt32_t
 
	m°¨t
;

366 
öt32_t
 
	mödex
;

373 
öt32_t
 
	mlimô
;

379 
öt32_t
 
	mª£rvedFõld
;

388 
UCh¨Iãøt‹GëIndex
 *
	mgëIndex
;

399 
UCh¨Iãøt‹Move
 *
	mmove
;

408 
UCh¨Iãøt‹HasNext
 *
	mhasNext
;

416 
UCh¨Iãøt‹HasPªvious
 *
	mhasPªvious
;

425 
UCh¨Iãøt‹Cuºít
 *
	mcuºít
;

435 
UCh¨Iãøt‹Next
 *
	m√xt
;

445 
UCh¨Iãøt‹Pªvious
 *
	m¥evious
;

453 
UCh¨Iãøt‹Re£rved
 *
	mª£rvedFn
;

462 
UCh¨Iãøt‹GëSèã
 *
	mgëSèã
;

472 
UCh¨Iãøt‹SëSèã
 *
	m£tSèã
;

493 
U_STABLE
 
UCh¨32
 
U_EXPORT2


494 
uôî_cuºít32
(
UCh¨Iãøt‹
 *
ôî
);

510 
U_STABLE
 
UCh¨32
 
U_EXPORT2


511 
uôî_√xt32
(
UCh¨Iãøt‹
 *
ôî
);

527 
U_STABLE
 
UCh¨32
 
U_EXPORT2


528 
uôî_¥evious32
(
UCh¨Iãøt‹
 *
ôî
);

548 
U_STABLE
 
uöt32_t
 
U_EXPORT2


549 
uôî_gëSèã
(c⁄° 
UCh¨Iãøt‹
 *
ôî
);

566 
U_STABLE
 
U_EXPORT2


567 
uôî_£tSèã
(
UCh¨Iãøt‹
 *
ôî
, 
uöt32_t
 
°©e
, 
UEº‹Code
 *
pEº‹Code
);

591 
U_STABLE
 
U_EXPORT2


592 
uôî_£tSåög
(
UCh¨Iãøt‹
 *
ôî
, c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
);

614 
U_STABLE
 
U_EXPORT2


615 
uôî_£tUTF16BE
(
UCh¨Iãøt‹
 *
ôî
, c⁄° *
s
, 
öt32_t
 
Àngth
);

650 
U_STABLE
 
U_EXPORT2


651 
uôî_£tUTF8
(
UCh¨Iãøt‹
 *
ôî
, c⁄° *
s
, 
öt32_t
 
Àngth
);

653 #i‡
U_SHOW_CPLUSPLUS_API


675 
U_STABLE
 
U_EXPORT2


676 
uôî_£tCh¨a˘îIãøt‹
(
UCh¨Iãøt‹
 *
ôî
, 
U_NAMESPACE_QUALIFIER
 
Ch¨a˘îIãøt‹
 *
ch¨Iãr
);

700 
U_STABLE
 
U_EXPORT2


701 
uôî_£tRïœ˚abÀ
(
UCh¨Iãøt‹
 *
ôî
, c⁄° 
U_NAMESPACE_QUALIFIER
 
Rïœ˚abÀ
 *
ªp
);

705 
	gU_CDECL_END


	@unicode/uloc.h

21 #i‚de‡
ULOC_H


22 
	#ULOC_H


	)

24 
	~"unicode/uty≥s.h
"

25 
	~"unicode/uíum.h
"

201 
	#ULOC_CHINESE
 "zh"

	)

203 
	#ULOC_ENGLISH
 "í"

	)

205 
	#ULOC_FRENCH
 "‰"

	)

207 
	#ULOC_GERMAN
 "de"

	)

209 
	#ULOC_ITALIAN
 "ô"

	)

211 
	#ULOC_JAPANESE
 "ja"

	)

213 
	#ULOC_KOREAN
 "ko"

	)

215 
	#ULOC_SIMPLIFIED_CHINESE
 "zh_CN"

	)

217 
	#ULOC_TRADITIONAL_CHINESE
 "zh_TW"

	)

220 
	#ULOC_CANADA
 "í_CA"

	)

222 
	#ULOC_CANADA_FRENCH
 "‰_CA"

	)

224 
	#ULOC_CHINA
 "zh_CN"

	)

226 
	#ULOC_PRC
 "zh_CN"

	)

228 
	#ULOC_FRANCE
 "‰_FR"

	)

230 
	#ULOC_GERMANY
 "de_DE"

	)

232 
	#ULOC_ITALY
 "ô_IT"

	)

234 
	#ULOC_JAPAN
 "ja_JP"

	)

236 
	#ULOC_KOREA
 "ko_KR"

	)

238 
	#ULOC_TAIWAN
 "zh_TW"

	)

240 
	#ULOC_UK
 "í_GB"

	)

242 
	#ULOC_US
 "í_US"

	)

249 
	#ULOC_LANG_CAPACITY
 12

	)

256 
	#ULOC_COUNTRY_CAPACITY
 4

	)

262 
	#ULOC_FULLNAME_CAPACITY
 157

	)

269 
	#ULOC_SCRIPT_CAPACITY
 6

	)

275 
	#ULOC_KEYWORDS_CAPACITY
 50

	)

281 
	#ULOC_KEYWORD_AND_VALUES_CAPACITY
 100

	)

287 
	#ULOC_KEYWORD_SEPARATOR
 '@'

	)

294 
	#ULOC_KEYWORD_SEPARATOR_UNICODE
 0x40

	)

300 
	#ULOC_KEYWORD_ASSIGN
 '='

	)

307 
	#ULOC_KEYWORD_ASSIGN_UNICODE
 0x3D

	)

313 
	#ULOC_KEYWORD_ITEM_SEPARATOR
 ';'

	)

320 
	#ULOC_KEYWORD_ITEM_SEPARATOR_UNICODE
 0x3B

	)

340 
	mULOC_ACTUAL_LOCALE
 = 0,

344 
	mULOC_VALID_LOCALE
 = 1,

346 #i‚de‡
U_HIDE_DEPRECATED_API


350 
	mULOC_REQUESTED_LOCALE
 = 2,

353 
	mULOC_DATA_LOCALE_TYPE_LIMIT
 = 3

354 } 
	tULocD©aLoˇÀTy≥
 ;

368 
U_STABLE
 c⁄° * 
U_EXPORT2


369 
uloc_gëDeÁu…
();

388 
U_STABLE
 
U_EXPORT2


389 
uloc_£tDeÁu…
(c⁄° * 
loˇÀID
,

390 
UEº‹Code
* 
°©us
);

404 
U_STABLE
 
öt32_t
 
U_EXPORT2


405 
uloc_gëL™guage
(c⁄° * 
loˇÀID
,

406 * 
œnguage
,

407 
öt32_t
 
œnguageC≠acôy
,

408 
UEº‹Code
* 
îr
);

422 
U_STABLE
 
öt32_t
 
U_EXPORT2


423 
uloc_gëS¸ùt
(c⁄° * 
loˇÀID
,

424 * 
s¸ùt
,

425 
öt32_t
 
s¸ùtC≠acôy
,

426 
UEº‹Code
* 
îr
);

440 
U_STABLE
 
öt32_t
 
U_EXPORT2


441 
uloc_gëCou¡ry
(c⁄° * 
loˇÀID
,

442 * 
cou¡ry
,

443 
öt32_t
 
cou¡ryC≠acôy
,

444 
UEº‹Code
* 
îr
);

458 
U_STABLE
 
öt32_t
 
U_EXPORT2


459 
uloc_gëV¨ü¡
(c⁄° * 
loˇÀID
,

460 * 
v¨ü¡
,

461 
öt32_t
 
v¨ü¡C≠acôy
,

462 
UEº‹Code
* 
îr
);

481 
U_STABLE
 
öt32_t
 
U_EXPORT2


482 
uloc_gëName
(c⁄° * 
loˇÀID
,

483 * 
«me
,

484 
öt32_t
 
«meC≠acôy
,

485 
UEº‹Code
* 
îr
);

504 
U_STABLE
 
öt32_t
 
U_EXPORT2


505 
uloc_ˇn⁄iˇlize
(c⁄° * 
loˇÀID
,

506 * 
«me
,

507 
öt32_t
 
«meC≠acôy
,

508 
UEº‹Code
* 
îr
);

517 
U_STABLE
 c⁄° * 
U_EXPORT2


518 
uloc_gëISO3L™guage
(c⁄° * 
loˇÀID
);

528 
U_STABLE
 c⁄° * 
U_EXPORT2


529 
uloc_gëISO3Cou¡ry
(c⁄° * 
loˇÀID
);

539 
U_STABLE
 
uöt32_t
 
U_EXPORT2


540 
uloc_gëLCID
(c⁄° * 
loˇÀID
);

558 
U_STABLE
 
öt32_t
 
U_EXPORT2


559 
uloc_gëDi•œyL™guage
(c⁄° * 
loˇÀ
,

560 c⁄° * 
di•œyLoˇÀ
,

561 
UCh¨
* 
œnguage
,

562 
öt32_t
 
œnguageC≠acôy
,

563 
UEº‹Code
* 
°©us
);

581 
U_STABLE
 
öt32_t
 
U_EXPORT2


582 
uloc_gëDi•œyS¸ùt
(c⁄° * 
loˇÀ
,

583 c⁄° * 
di•œyLoˇÀ
,

584 
UCh¨
* 
s¸ùt
,

585 
öt32_t
 
s¸ùtC≠acôy
,

586 
UEº‹Code
* 
°©us
);

604 
U_STABLE
 
öt32_t
 
U_EXPORT2


605 
uloc_gëDi•œyCou¡ry
(c⁄° * 
loˇÀ
,

606 c⁄° * 
di•œyLoˇÀ
,

607 
UCh¨
* 
cou¡ry
,

608 
öt32_t
 
cou¡ryC≠acôy
,

609 
UEº‹Code
* 
°©us
);

628 
U_STABLE
 
öt32_t
 
U_EXPORT2


629 
uloc_gëDi•œyV¨ü¡
(c⁄° * 
loˇÀ
,

630 c⁄° * 
di•œyLoˇÀ
,

631 
UCh¨
* 
v¨ü¡
,

632 
öt32_t
 
v¨ü¡C≠acôy
,

633 
UEº‹Code
* 
°©us
);

675 
U_STABLE
 
öt32_t
 
U_EXPORT2


676 
uloc_gëDi•œyKeyw‹d
(c⁄° * 
keyw‹d
,

677 c⁄° * 
di•œyLoˇÀ
,

678 
UCh¨
* 
de°
,

679 
öt32_t
 
de°C≠acôy
,

680 
UEº‹Code
* 
°©us
);

701 
U_STABLE
 
öt32_t
 
U_EXPORT2


702 
uloc_gëDi•œyKeyw‹dVÆue
–c⁄° * 
loˇÀ
,

703 c⁄° * 
keyw‹d
,

704 c⁄° * 
di•œyLoˇÀ
,

705 
UCh¨
* 
de°
,

706 
öt32_t
 
de°C≠acôy
,

707 
UEº‹Code
* 
°©us
);

724 
U_STABLE
 
öt32_t
 
U_EXPORT2


725 
uloc_gëDi•œyName
(c⁄° * 
loˇÀID
,

726 c⁄° * 
öLoˇÀID
,

727 
UCh¨
* 
ªsu…
,

728 
öt32_t
 
maxResu…Size
,

729 
UEº‹Code
* 
îr
);

742 
U_STABLE
 c⁄° * 
U_EXPORT2


743 
uloc_gëAvaûabÀ
(
öt32_t
 
n
);

751 
U_STABLE
 
öt32_t
 
U_EXPORT2
 
uloc_cou¡AvaûabÀ
();

762 
U_STABLE
 c⁄° * c⁄°* 
U_EXPORT2


763 
uloc_gëISOL™guages
();

774 
U_STABLE
 c⁄° * c⁄°* 
U_EXPORT2


775 
uloc_gëISOCou¡rõs
();

790 
U_STABLE
 
öt32_t
 
U_EXPORT2


791 
uloc_gëP¨ít
(c⁄° * 
loˇÀID
,

792 * 
∑ª¡
,

793 
öt32_t
 
∑ª¡C≠acôy
,

794 
UEº‹Code
* 
îr
);

818 
U_STABLE
 
öt32_t
 
U_EXPORT2


819 
uloc_gëBa£Name
(c⁄° * 
loˇÀID
,

820 * 
«me
,

821 
öt32_t
 
«meC≠acôy
,

822 
UEº‹Code
* 
îr
);

833 
U_STABLE
 
UEnumî©i⁄
* 
U_EXPORT2


834 
uloc_›íKeyw‹ds
(c⁄° * 
loˇÀID
,

835 
UEº‹Code
* 
°©us
);

848 
U_STABLE
 
öt32_t
 
U_EXPORT2


849 
uloc_gëKeyw‹dVÆue
(c⁄° * 
loˇÀID
,

850 c⁄° * 
keyw‹dName
,

851 * 
buf„r
, 
öt32_t
 
buf„rC≠acôy
,

852 
UEº‹Code
* 
°©us
);

874 
U_STABLE
 
öt32_t
 
U_EXPORT2


875 
uloc_£tKeyw‹dVÆue
(c⁄° * 
keyw‹dName
,

876 c⁄° * 
keyw‹dVÆue
,

877 * 
buf„r
, 
öt32_t
 
buf„rC≠acôy
,

878 
UEº‹Code
* 
°©us
);

886 
	mULOC_LAYOUT_LTR
 = 0,

887 
	mULOC_LAYOUT_RTL
 = 1,

888 
	mULOC_LAYOUT_TTB
 = 2,

889 
	mULOC_LAYOUT_BTT
 = 3,

890 
	mULOC_LAYOUT_UNKNOWN


891 } 
	tULayoutTy≥
;

901 
U_STABLE
 
ULayoutTy≥
 
U_EXPORT2


902 
uloc_gëCh¨a˘îOrõ¡©i⁄
(c⁄° * 
loˇÀId
,

903 
UEº‹Code
 *
°©us
);

913 
U_STABLE
 
ULayoutTy≥
 
U_EXPORT2


914 
uloc_gëLöeOrõ¡©i⁄
(c⁄° * 
loˇÀId
,

915 
UEº‹Code
 *
°©us
);

924 
	mULOC_ACCEPT_FAILED
 = 0,

925 
	mULOC_ACCEPT_VALID
 = 1,

926 
	mULOC_ACCEPT_FALLBACK
 = 2

929 } 
	tUAc˚±Resu…
;

944 
U_STABLE
 
öt32_t
 
U_EXPORT2


945 
uloc_ac˚±L™guageFromHTTP
(*
ªsu…
, 
öt32_t
 
ªsu…AvaûabÀ
,

946 
UAc˚±Resu…
 *
outResu…
,

947 c⁄° *
hâpAc˚±L™guage
,

948 
UEnumî©i⁄
* 
avaûabÀLoˇÀs
,

949 
UEº‹Code
 *
°©us
);

964 
U_STABLE
 
öt32_t
 
U_EXPORT2


965 
uloc_ac˚±L™guage
(*
ªsu…
, 
öt32_t
 
ªsu…AvaûabÀ
,

966 
UAc˚±Resu…
 *
outResu…
, c⁄° **
ac˚±Li°
,

967 
öt32_t
 
ac˚±Li°Cou¡
,

968 
UEnumî©i⁄
* 
avaûabÀLoˇÀs
,

969 
UEº‹Code
 *
°©us
);

984 
U_STABLE
 
öt32_t
 
U_EXPORT2


985 
uloc_gëLoˇÀF‹LCID
(
uöt32_t
 
ho°ID
, *
loˇÀ
, 
öt32_t
 
loˇÀC≠acôy
,

986 
UEº‹Code
 *
°©us
);

1022 
U_STABLE
 
öt32_t
 
U_EXPORT2


1023 
uloc_addLikñySubègs
(c⁄° * 
loˇÀID
,

1024 * 
maximizedLoˇÀID
,

1025 
öt32_t
 
maximizedLoˇÀIDC≠acôy
,

1026 
UEº‹Code
* 
îr
);

1062 
U_STABLE
 
öt32_t
 
U_EXPORT2


1063 
uloc_möimizeSubègs
(c⁄° * 
loˇÀID
,

1064 * 
möimizedLoˇÀID
,

1065 
öt32_t
 
möimizedLoˇÀIDC≠acôy
,

1066 
UEº‹Code
* 
îr
);

1091 
U_DRAFT
 
öt32_t
 
U_EXPORT2


1092 
uloc_f‹L™guageTag
(c⁄° * 
œngèg
,

1093 * 
loˇÀID
,

1094 
öt32_t
 
loˇÀIDC≠acôy
,

1095 
öt32_t
* 
∑r£dLígth
,

1096 
UEº‹Code
* 
îr
);

1119 
U_DRAFT
 
öt32_t
 
U_EXPORT2


1120 
uloc_toL™guageTag
(c⁄° * 
loˇÀID
,

1121 * 
œngèg
,

1122 
öt32_t
 
œngègC≠acôy
,

1123 
UBoﬁ
 
°ri˘
,

1124 
UEº‹Code
* 
îr
);

	@unicode/umachine.h

23 #i‚de‡
__UMACHINE_H__


24 
	#__UMACHINE_H__


	)

44 #i‡
deföed
(
U_PALMOS
)

45 
	~"unicode/µÆmos.h
"

46 #ñi‡!
deföed
(
__MINGW32__
Ë&& (deföed(
WIN32
Ë|| deföed(
_WIN32
Ë|| deföed(
WIN64
Ë|| deföed(
_WIN64
))

47 #ifde‡
CYGWINMSVC


48 
	~"unicode/∂©f‹m.h
"

50 
	~"unicode/pwö32.h
"

52 
	~"unicode/±y≥s.h
"

59 
	~<°ddef.h
>

66 #ifde‡
__˝lu•lus


67 #i‚de‡
XP_CPLUSPLUS


68 
	#XP_CPLUSPLUS


	)

71 #unde‡
XP_CPLUSPLUS


98 #ifde‡
XP_CPLUSPLUS


99 
	#U_CFUNC
 "C"

	)

100 
	#U_CDECL_BEGIN
 "C" {

	)

101 
	#U_CDECL_END
 }

	)

103 
	#U_CFUNC
 

	)

104 
	#U_CDECL_BEGIN


	)

105 
	#U_CDECL_END


	)

113 #i‡
deföed
(
__GNUC__
Ë&& (__GNUC__ > 3 || (__GNUC__ =3 && 
__GNUC_MINOR__
 >= 2))

114 
	#U_ATTRIBUTE_DEPRECATED
 
	`__©åibuã__
 ((
dïªˇãd
))

	)

120 #ñi‡
deföed
(
U_WINDOWS
Ë&& deföed(
_MSC_VER
) && (_MSC_VER >= 1400)

121 
	#U_ATTRIBUTE_DEPRECATED
 
	`__de˛•ec
(
dïªˇãd
)

	)

123 
	#U_ATTRIBUTE_DEPRECATED


	)

126 
	#U_CAPI
 
U_CFUNC
 
U_EXPORT


	)

128 
	#U_STABLE
 
U_CAPI


	)

130 
	#U_DRAFT
 
U_CAPI


	)

132 
	#U_DEPRECATED
 
U_CAPI
 
U_ATTRIBUTE_DEPRECATED


	)

134 
	#U_OBSOLETE
 
U_CAPI


	)

136 
	#U_INTERNAL
 
U_CAPI


	)

142 #i‚de‡
INT8_MIN


144 
	#INT8_MIN
 ((
öt8_t
)(-128))

	)

146 #i‚de‡
INT16_MIN


148 
	#INT16_MIN
 ((
öt16_t
)(-32767-1))

	)

150 #i‚de‡
INT32_MIN


152 
	#INT32_MIN
 ((
öt32_t
)(-2147483647-1))

	)

155 #i‚de‡
INT8_MAX


157 
	#INT8_MAX
 ((
öt8_t
)(127))

	)

159 #i‚de‡
INT16_MAX


161 
	#INT16_MAX
 ((
öt16_t
)(32767))

	)

163 #i‚de‡
INT32_MAX


165 
	#INT32_MAX
 ((
öt32_t
)(2147483647))

	)

168 #i‚de‡
UINT8_MAX


170 
	#UINT8_MAX
 ((
uöt8_t
)(255U))

	)

172 #i‚de‡
UINT16_MAX


174 
	#UINT16_MAX
 ((
uöt16_t
)(65535U))

	)

176 #i‚de‡
UINT32_MAX


178 
	#UINT32_MAX
 ((
uöt32_t
)(4294967295U))

	)

181 #i‡
deföed
(
U_INT64_T_UNAVAILABLE
)

182 #îr‹ 
öt64_t
 
is
 
ªquúed
 
decimÆ
 
f‹m©
 
™d
 
ruÀ
-
ba£d
 
numbî
 format.

184 #i‚de‡
INT64_C


190 
	#INT64_C
(
c
Ë¯## 
LL


	)

192 #i‚de‡
UINT64_C


198 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

200 #i‚de‡
U_INT64_MIN


202 
	#U_INT64_MIN
 ((
öt64_t
)(
	`INT64_C
(-9223372036854775807)-1))

	)

204 #i‚de‡
U_INT64_MAX


206 
	#U_INT64_MAX
 ((
öt64_t
)(
	`INT64_C
(9223372036854775807)))

	)

208 #i‚de‡
U_UINT64_MAX


210 
	#U_UINT64_MAX
 ((
uöt64_t
)(
	`UINT64_C
(18446744073709551615)))

	)

219 
öt8_t
 
	tUBoﬁ
;

221 #i‚de‡
TRUE


223 
	#TRUE
 1

	)

225 #i‚de‡
FALSE


227 
	#FALSE
 0

	)

243 #i‚de‡
U_HAVE_WCHAR_H


244 
	#U_HAVE_WCHAR_H
 1

	)

253 #i‡
U_SIZEOF_WCHAR_T
==0

254 #unde‡
U_SIZEOF_WCHAR_T


255 
	#U_SIZEOF_WCHAR_T
 4

	)

270 #i‡!
deföed
(
U_WCHAR_IS_UTF16
Ë&& !deföed(
U_WCHAR_IS_UTF32
)

271 #ifde‡
__STDC_ISO_10646__


272 #i‡(
U_SIZEOF_WCHAR_T
==2)

273 
	#U_WCHAR_IS_UTF16


	)

274 #ñi‡(
U_SIZEOF_WCHAR_T
==4)

275 
	#U_WCHAR_IS_UTF32


	)

277 #ñi‡
deföed
 
__UCS2__


278 #i‡(
__OS390__
 || 
__OS400__
Ë&& (
U_SIZEOF_WCHAR_T
==2)

279 
	#U_WCHAR_IS_UTF16


	)

281 #ñi‡
deföed
 
__UCS4__


282 #i‡(
U_SIZEOF_WCHAR_T
==4)

283 
	#U_WCHAR_IS_UTF32


	)

285 #ñi‡
deföed
(
U_WINDOWS
)

286 
	#U_WCHAR_IS_UTF16


	)

293 
	#U_SIZEOF_UCHAR
 2

	)

308 #i‡
U_SIZEOF_WCHAR_T
==2

309 
wch¨_t
 
	tUCh¨
;

310 #ñi‡
U_GNUC_UTF16_STRING


311 #i‡
deföed
 
_GCC_


312 
__CHAR16_TYPE__
 
	tch¨16_t
;

314 
ch¨16_t
 
	tUCh¨
;

316 
uöt16_t
 
	tUCh¨
;

336 
öt32_t
 
	tUCh¨32
;

345 #i‚de‡
U_HIDE_INTERNAL_API


353 #i‚de‡
U_ALIGN_CODE


354 
	#U_ALIGN_CODE
(
n
)

	)

364 #i‚de‡
U_INLINE


365 #ifde‡
XP_CPLUSPLUS


366 
	#U_INLINE
 
ölöe


	)

368 
	#U_INLINE


	)

372 
	~"unicode/uª«me.h
"

	@unicode/umisc.h

15 #i‚de‡
UMISC_H


16 
	#UMISC_H


	)

18 
	~"unicode/uty≥s.h
"

27 
U_CDECL_BEGIN


32 
	sUFõldPosôi⁄
 {

37 
öt32_t
 
	mfõld
;

42 
öt32_t
 
	mbegöIndex
;

47 
öt32_t
 
	mídIndex
;

48 } 
	tUFõldPosôi⁄
;

50 #i‡!
UCONFIG_NO_SERVICE


55 c⁄° * 
	tURegi°ryKey
;

58 
	gU_CDECL_END


	@unicode/unifilt.h

10 #i‚de‡
UNIFILT_H


11 
	#UNIFILT_H


	)

13 
	~"unicode/unifun˘.h
"

14 
	~"unicode/unim©ch.h
"

21 
	gU_NAMESPACE_BEGIN


31 
	#U_ETHER
 ((
UCh¨
)0xFFFF)

	)

59 
˛ass
 
U_COMMON_API
 
	gUnicodeFûãr
 : 
public
 
UnicodeFun˘‹
,Öubli¯
	gUnicodeM©chî
 {

61 
	gpublic
:

66 
vútuÆ
 ~
UnicodeFûãr
();

75 
vútuÆ
 
UBoﬁ
 
c⁄èös
(
UCh¨32
 
c
) const = 0;

82 
vútuÆ
 
UnicodeM©chî
* 
toM©chî
() const;

88 
vútuÆ
 
UM©chDegªe
 
m©ches
(c⁄° 
Rïœ˚abÀ
& 
ãxt
,

89 
öt32_t
& 
off£t
,

90 
öt32_t
 
limô
,

91 
UBoﬁ
 
ö¸emíèl
);

97 
vútuÆ
 
£tD©a
(c⁄° 
Tøn¶ôî©i⁄RuÀD©a
*);

104 
UCœssID
 
U_EXPORT2
 
gëSèticCœssID
();

106 
	g¥Ÿe˘ed
:

118 
	gU_NAMESPACE_END


	@unicode/unifunct.h

10 #i‚de‡
UNIFUNCT_H


11 
	#UNIFUNCT_H


	)

13 
	~"unicode/uty≥s.h
"

14 
	~"unicode/uobje˘.h
"

21 
U_NAMESPACE_BEGIN


23 
˛ass
 
	gUnicodeM©chî
;

24 
˛ass
 
	gUnicodeRïœ˚r
;

25 
˛ass
 
	gTøn¶ôî©i⁄RuÀD©a
;

33 ˛as†
	cU_COMMON_API
 
	mUnicodeFun˘‹
 : 
public
 
UObje˘
 {

35 
public
:

41 
vútuÆ
 ~
UnicodeFun˘‹
();

49 
vútuÆ
 
UnicodeFun˘‹
* 
	$˛⁄e
() const = 0;

61 
vútuÆ
 
UnicodeM©chî
* 
	$toM©chî
() const;

73 
vútuÆ
 
UnicodeRïœ˚r
* 
	$toRïœ˚r
() const;

81 
UCœssID
 
U_EXPORT2
 
	`gëSèticCœssID
();

98 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const = 0;

108 
vútuÆ
 
	`£tD©a
(c⁄° 
Tøn¶ôî©i⁄RuÀD©a
*) = 0;

110 
¥Ÿe˘ed
:

123 
U_NAMESPACE_END


	@unicode/unimatch.h

8 #i‚de‡
UNIMATCH_H


9 
	#UNIMATCH_H


	)

11 
	~"unicode/uty≥s.h
"

19 
U_NAMESPACE_BEGIN


21 
˛ass
 
	gRïœ˚abÀ
;

22 
˛ass
 
	gUnicodeSåög
;

23 
˛ass
 
	gUnicodeSë
;

30 
	eUM©chDegªe
 {

38 
	mU_MISMATCH
,

50 
	mU_PARTIAL_MATCH
,

60 
	mU_MATCH


68 ˛as†
	cU_COMMON_API
 
	mUnicodeM©chî
 {

70 
	mpublic
:

75 
vútuÆ
 ~
UnicodeM©chî
();

123 
vútuÆ
 
UM©chDegªe
 
m©ches
(c⁄° 
Rïœ˚abÀ
& 
ãxt
,

124 
öt32_t
& 
off£t
,

125 
öt32_t
 
limô
,

126 
UBoﬁ
 
ö¸emíèl
) = 0;

140 
vútuÆ
 
	mUnicodeSåög
& 
	$toP©ã∫
(
UnicodeSåög
& 
ªsu…
,

141 
UBoﬁ
 
esˇ≥U≈röèbÀ
 = 
FALSE
) const = 0;

150 
vútuÆ
 
UBoﬁ
 
	$m©chesIndexVÆue
(
uöt8_t
 
v
) const = 0;

158 
vútuÆ
 
	$addM©chSëTo
(
UnicodeSë
& 
toUni⁄To
) const = 0;

161 
U_NAMESPACE_END


	@unicode/uniset.h

11 #i‚de‡
UNICODESET_H


12 
	#UNICODESET_H


	)

14 
	~"unicode/unifût.h
"

15 
	~"unicode/uni°r.h
"

16 
	~"unicode/u£t.h
"

23 
U_NAMESPACE_BEGIN


25 
˛ass
 
	gBMPSë
;

26 
˛ass
 
	gP¨£Posôi⁄
;

27 
˛ass
 
	gSymbﬁTabÀ
;

28 
˛ass
 
	gUnicodeSëSåögS∑n
;

29 
˛ass
 
	gUVe˘‹
;

30 
˛ass
 
	gRuÀCh¨a˘îIãøt‹
;

272 ˛as†
	cU_COMMON_API
 
	mUnicodeSë
 : 
public
 
UnicodeFûãr
 {

274 
öt32_t
 
Àn
;

275 
öt32_t
 
	mˇ∑côy
;

276 
UCh¨32
* 
	mli°
;

277 
BMPSë
 *
	mbmpSë
;

278 
UCh¨32
* 
	mbuf„r
;

279 
öt32_t
 
	mbuf„rC≠acôy
;

280 
öt32_t
 
	m∑tLí
;

291 
UCh¨
 *
	m∑t
;

292 
UVe˘‹
* 
	m°rögs
;

293 
UnicodeSëSåögS∑n
 *
	m°rögS∑n
;

295 
	m¥iv©e
:

297 
kIsBogus
 = 1

299 
uöt8_t
 
	gfFœgs
;

300 
	gpublic
:

310 
ölöe
 
UBoﬁ
 
	$isBogus
() const;

328 
	`£tToBogus
();

330 
public
:

337 
MIN_VALUE
 = 0,

343 
MAX_VALUE
 = 0x10ffff

344 
	}
};

350 
	gpublic
:

356 
UnicodeSë
();

366 
UnicodeSë
(
UCh¨32
 
°¨t
, UCh¨32 
íd
);

376 
UnicodeSë
(c⁄° 
UnicodeSåög
& 
∑âîn
,

377 
UEº‹Code
& 
°©us
);

391 
UnicodeSë
(c⁄° 
UnicodeSåög
& 
∑âîn
,

392 
uöt32_t
 
›ti⁄s
,

393 c⁄° 
SymbﬁTabÀ
* 
symbﬁs
,

394 
UEº‹Code
& 
°©us
);

409 
UnicodeSë
(c⁄° 
UnicodeSåög
& 
∑âîn
, 
P¨£Posôi⁄
& 
pos
,

410 
uöt32_t
 
›ti⁄s
,

411 c⁄° 
SymbﬁTabÀ
* 
symbﬁs
,

412 
UEº‹Code
& 
°©us
);

418 
UnicodeSë
(c⁄° UnicodeSë& 
o
);

424 
	gvútuÆ
 ~
UnicodeSë
();

431 
	gUnicodeSë
& 
	g›î©‹
=(c⁄° 
UnicodeSë
& 
o
);

444 
vútuÆ
 
UBoﬁ
 
	g›î©‹
==(c⁄° 
UnicodeSë
& 
o
) const;

451 
UBoﬁ
 
	g›î©‹
!=(c⁄° 
UnicodeSë
& 
o
) const;

462 
vútuÆ
 
UnicodeFun˘‹
* 
	$˛⁄e
() const;

471 
vútuÆ
 
öt32_t
 
	$hashCode
() const;

481 
ölöe
 
UnicodeSë
 *
	`‰omUSë
(
USë
 *
u£t
);

491 
ölöe
 c⁄° 
UnicodeSë
 *
	`‰omUSë
(c⁄° 
USë
 *
u£t
);

500 
ölöe
 
USë
 *
	`toUSë
();

510 
ölöe
 c⁄° 
USë
 * 
	$toUSë
() const;

525 
ölöe
 
UBoﬁ
 
	$isFrozí
() const;

540 
UnicodeFun˘‹
 *
	`‰ìze
();

550 
UnicodeFun˘‹
 *
	$˛⁄eAsThawed
() const;

566 
UnicodeSë
& 
	`£t
(
UCh¨32
 
°¨t
, UCh¨32 
íd
);

573 
UBoﬁ
 
	`ª£mbÀsP©ã∫
(c⁄° 
UnicodeSåög
& 
∑âîn
,

574 
öt32_t
 
pos
);

588 
UnicodeSë
& 
	`≠∂yP©ã∫
(c⁄° 
UnicodeSåög
& 
∑âîn
,

589 
UEº‹Code
& 
°©us
);

607 
UnicodeSë
& 
	`≠∂yP©ã∫
(c⁄° 
UnicodeSåög
& 
∑âîn
,

608 
uöt32_t
 
›ti⁄s
,

609 c⁄° 
SymbﬁTabÀ
* 
symbﬁs
,

610 
UEº‹Code
& 
°©us
);

643 
UnicodeSë
& 
	`≠∂yP©ã∫
(c⁄° 
UnicodeSåög
& 
∑âîn
,

644 
P¨£Posôi⁄
& 
pos
,

645 
uöt32_t
 
›ti⁄s
,

646 c⁄° 
SymbﬁTabÀ
* 
symbﬁs
,

647 
UEº‹Code
& 
°©us
);

662 
vútuÆ
 
UnicodeSåög
& 
	$toP©ã∫
(
UnicodeSåög
& 
ªsu…
,

663 
UBoﬁ
 
esˇ≥U≈röèbÀ
 = 
FALSE
) const;

687 
UnicodeSë
& 
	`≠∂yI¡Pr›îtyVÆue
(
UPr›îty
 
¥›
,

688 
öt32_t
 
vÆue
,

689 
UEº‹Code
& 
ec
);

720 
UnicodeSë
& 
	`≠∂yPr›îtyAlüs
(c⁄° 
UnicodeSåög
& 
¥›
,

721 c⁄° 
UnicodeSåög
& 
vÆue
,

722 
UEº‹Code
& 
ec
);

732 
vútuÆ
 
öt32_t
 
	$size
() const;

740 
vútuÆ
 
UBoﬁ
 
	$isEm±y
() const;

749 
vútuÆ
 
UBoﬁ
 
	$c⁄èös
(
UCh¨32
 
c
) const;

759 
vútuÆ
 
UBoﬁ
 
	$c⁄èös
(
UCh¨32
 
°¨t
, UCh¨32 
íd
) const;

768 
UBoﬁ
 
	$c⁄èös
(c⁄° 
UnicodeSåög
& 
s
) const;

777 
vútuÆ
 
UBoﬁ
 
	$c⁄èösAŒ
(c⁄° 
UnicodeSë
& 
c
) const;

786 
UBoﬁ
 
	$c⁄èösAŒ
(c⁄° 
UnicodeSåög
& 
s
) const;

796 
UBoﬁ
 
	$c⁄èösN⁄e
(
UCh¨32
 
°¨t
, UCh¨32 
íd
) const;

805 
UBoﬁ
 
	$c⁄èösN⁄e
(c⁄° 
UnicodeSë
& 
c
) const;

814 
UBoﬁ
 
	$c⁄èösN⁄e
(c⁄° 
UnicodeSåög
& 
s
) const;

824 
ölöe
 
UBoﬁ
 
	$c⁄èösSome
(
UCh¨32
 
°¨t
, UCh¨32 
íd
) const;

833 
ölöe
 
UBoﬁ
 
	$c⁄èösSome
(c⁄° 
UnicodeSë
& 
s
) const;

842 
ölöe
 
UBoﬁ
 
	$c⁄èösSome
(c⁄° 
UnicodeSåög
& 
s
) const;

862 
öt32_t
 
	$•™
(c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
) const;

876 
ölöe
 
öt32_t
 
	$•™
(c⁄° 
UnicodeSåög
 &
s
, 
öt32_t
 
°¨t
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
) const;

895 
öt32_t
 
	$•™Back
(c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
) const;

910 
ölöe
 
öt32_t
 
	$•™Back
(c⁄° 
UnicodeSåög
 &
s
, 
öt32_t
 
limô
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
) const;

930 
öt32_t
 
	$•™UTF8
(c⁄° *
s
, 
öt32_t
 
Àngth
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
) const;

949 
öt32_t
 
	$•™BackUTF8
(c⁄° *
s
, 
öt32_t
 
Àngth
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
) const;

955 
vútuÆ
 
UM©chDegªe
 
	`m©ches
(c⁄° 
Rïœ˚abÀ
& 
ãxt
,

956 
öt32_t
& 
off£t
,

957 
öt32_t
 
limô
,

958 
UBoﬁ
 
ö¸emíèl
);

960 
¥iv©e
:

982 
öt32_t
 
	`m©chRe°
(c⁄° 
Rïœ˚abÀ
& 
ãxt
,

983 
öt32_t
 
°¨t
, i¡32_à
limô
,

984 c⁄° 
UnicodeSåög
& 
s
);

995 
öt32_t
 
	$födCodePoöt
(
UCh¨32
 
c
) const;

997 
public
:

1006 
vútuÆ
 
	$addM©chSëTo
(
UnicodeSë
& 
toUni⁄To
) const;

1016 
öt32_t
 
	$ödexOf
(
UCh¨32
 
c
) const;

1027 
UCh¨32
 
	$ch¨At
(
öt32_t
 
ödex
) const;

1043 
vútuÆ
 
UnicodeSë
& 
	`add
(
UCh¨32
 
°¨t
, UCh¨32 
íd
);

1052 
UnicodeSë
& 
	`add
(
UCh¨32
 
c
);

1065 
UnicodeSë
& 
	`add
(c⁄° 
UnicodeSåög
& 
s
);

1067 
¥iv©e
:

1073 
öt32_t
 
	`gëSögÀCP
(c⁄° 
UnicodeSåög
& 
s
);

1075 
	`_add
(c⁄° 
UnicodeSåög
& 
s
);

1077 
public
:

1086 
UnicodeSë
& 
	`addAŒ
(c⁄° 
UnicodeSåög
& 
s
);

1096 
UnicodeSë
& 
	`ªèöAŒ
(c⁄° 
UnicodeSåög
& 
s
);

1106 
UnicodeSë
& 
	`com∂emítAŒ
(c⁄° 
UnicodeSåög
& 
s
);

1116 
UnicodeSë
& 
	`ªmoveAŒ
(c⁄° 
UnicodeSåög
& 
s
);

1126 
UnicodeSë
* 
U_EXPORT2
 
	`¸óãFrom
(c⁄° 
UnicodeSåög
& 
s
);

1136 
UnicodeSë
* 
U_EXPORT2
 
	`¸óãFromAŒ
(c⁄° 
UnicodeSåög
& 
s
);

1151 
vútuÆ
 
UnicodeSë
& 
	`ªèö
(
UCh¨32
 
°¨t
, UCh¨32 
íd
);

1159 
UnicodeSë
& 
	`ªèö
(
UCh¨32
 
c
);

1174 
vútuÆ
 
UnicodeSë
& 
	`ªmove
(
UCh¨32
 
°¨t
, UCh¨32 
íd
);

1183 
UnicodeSë
& 
	`ªmove
(
UCh¨32
 
c
);

1194 
UnicodeSë
& 
	`ªmove
(c⁄° 
UnicodeSåög
& 
s
);

1203 
vútuÆ
 
UnicodeSë
& 
	`com∂emít
();

1219 
vútuÆ
 
UnicodeSë
& 
	`com∂emít
(
UCh¨32
 
°¨t
, UCh¨32 
íd
);

1228 
UnicodeSë
& 
	`com∂emít
(
UCh¨32
 
c
);

1240 
UnicodeSë
& 
	`com∂emít
(c⁄° 
UnicodeSåög
& 
s
);

1254 
vútuÆ
 
UnicodeSë
& 
	`addAŒ
(c⁄° UnicodeSë& 
c
);

1267 
vútuÆ
 
UnicodeSë
& 
	`ªèöAŒ
(c⁄° UnicodeSë& 
c
);

1280 
vútuÆ
 
UnicodeSë
& 
	`ªmoveAŒ
(c⁄° UnicodeSë& 
c
);

1292 
vútuÆ
 
UnicodeSë
& 
	`com∂emítAŒ
(c⁄° UnicodeSë& 
c
);

1300 
vútuÆ
 
UnicodeSë
& 
	`˛ór
();

1327 
UnicodeSë
& 
	`˛o£Ovî
(
öt32_t
 
©åibuã
);

1335 
vútuÆ
 
UnicodeSë
 &
	`ªmoveAŒSåögs
();

1344 
vútuÆ
 
öt32_t
 
	$gëR™geCou¡
() const;

1353 
vútuÆ
 
UCh¨32
 
	$gëR™geSèπ
(
öt32_t
 
ödex
) const;

1362 
vútuÆ
 
UCh¨32
 
	$gëR™geEnd
(
öt32_t
 
ödex
) const;

1412 
öt32_t
 
	$£rülize
(
uöt16_t
 *
de°
, 
öt32_t
 
de°C≠acôy
, 
UEº‹Code
& 
ec
) const;

1420 
vútuÆ
 
UnicodeSë
& 
	`com∑˘
();

1433 
UCœssID
 
U_EXPORT2
 
	`gëSèticCœssID
();

1443 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const;

1445 
¥iv©e
:

1449 
‰õnd
 
˛ass
 
USëAc˚ss
;

1451 
öt32_t
 
	$gëSåögCou¡
() const;

1453 c⁄° 
UnicodeSåög
* 
	$gëSåög
(
öt32_t
 
ödex
) const;

1459 
¥iv©e
:

1466 
vútuÆ
 
UBoﬁ
 
	$m©chesIndexVÆue
(
uöt8_t
 
v
) const;

1468 
¥iv©e
:

1474 
	`UnicodeSë
(c⁄° 
UnicodeSë
& 
o
, 
UBoﬁ
 );

1480 
	`≠∂yP©ã∫
(
RuÀCh¨a˘îIãøt‹
& 
ch¨s
,

1481 c⁄° 
SymbﬁTabÀ
* 
symbﬁs
,

1482 
UnicodeSåög
& 
ªbuûtP©
,

1483 
uöt32_t
 
›ti⁄s
,

1484 
UEº‹Code
& 
ec
);

1490 
	`ísuªC≠acôy
(
öt32_t
 
√wLí
, 
UEº‹Code
& 
ec
);

1492 
	`ísuªBuf„rC≠acôy
(
öt32_t
 
√wLí
, 
UEº‹Code
& 
ec
);

1494 
	`sw≠Buf„rs
();

1496 
UBoﬁ
 
	`ÆloˇãSåögs
(
UEº‹Code
 &
°©us
);

1498 
UnicodeSåög
& 
	$_toP©ã∫
(
UnicodeSåög
& 
ªsu…
,

1499 
UBoﬁ
 
esˇ≥U≈röèbÀ
) const;

1501 
UnicodeSåög
& 
	$_gíî©eP©ã∫
(
UnicodeSåög
& 
ªsu…
,

1502 
UBoﬁ
 
esˇ≥U≈röèbÀ
) const;

1504 
	`_≠≥ndToP©
(
UnicodeSåög
& 
buf
, c⁄° UnicodeSåög& 
s
, 
UBoﬁ
 
esˇ≥U≈röèbÀ
);

1506 
	`_≠≥ndToP©
(
UnicodeSåög
& 
buf
, 
UCh¨32
 
c
, 
UBoﬁ
 
esˇ≥U≈röèbÀ
);

1512 
	`ex˛usiveOr
(c⁄° 
UCh¨32
* 
Ÿhî
, 
öt32_t
 
ŸhîLí
, 
öt8_t
 
pﬁ¨ôy
);

1514 
	`add
(c⁄° 
UCh¨32
* 
Ÿhî
, 
öt32_t
 
ŸhîLí
, 
öt8_t
 
pﬁ¨ôy
);

1516 
	`ªèö
(c⁄° 
UCh¨32
* 
Ÿhî
, 
öt32_t
 
ŸhîLí
, 
öt8_t
 
pﬁ¨ôy
);

1523 
UBoﬁ
 
	`ª£mbÀsPr›îtyP©ã∫
(c⁄° 
UnicodeSåög
& 
∑âîn
,

1524 
öt32_t
 
pos
);

1526 
UBoﬁ
 
	`ª£mbÀsPr›îtyP©ã∫
(
RuÀCh¨a˘îIãøt‹
& 
ch¨s
,

1527 
öt32_t
 
ôîO±s
);

1567 
UnicodeSë
& 
	`≠∂yPr›îtyP©ã∫
(c⁄° 
UnicodeSåög
& 
∑âîn
,

1568 
P¨£Posôi⁄
& 
µos
,

1569 
UEº‹Code
 &
ec
);

1571 
	`≠∂yPr›îtyP©ã∫
(
RuÀCh¨a˘îIãøt‹
& 
ch¨s
,

1572 
UnicodeSåög
& 
ªbuûtP©
,

1573 
UEº‹Code
& 
ec
);

1575 c⁄° 
UnicodeSë
* 
	`gëIn˛usi⁄s
(
öt32_t
 
§c
, 
UEº‹Code
 &
°©us
);

1581 
	$UBoﬁ
 (*
	tFûãr
)(
	tUCh¨32
 
	tcodePoöt
, * 
	tc⁄ãxt
);

1592 
	`≠∂yFûãr
(
Fûãr
 
fûãr
,

1593 * 
c⁄ãxt
,

1594 
öt32_t
 
§c
,

1595 
UEº‹Code
 &
°©us
);

1600 
	`£tP©ã∫
(c⁄° 
UnicodeSåög
& 
√wP©
);

1604 
	`ªÀa£P©ã∫
();

1606 
‰õnd
 
˛ass
 
UnicodeSëIãøt‹
;

1607 
	}
};

1611 
ölöe
 
UBoﬁ
 
	gUnicodeSë
::
›î©‹
!=(c⁄° 
UnicodeSë
& 
o
) const {

1612  !
›î©‹
==(
o
);

1615 
ölöe
 
UBoﬁ
 
	gUnicodeSë
::
	$isFrozí
() const {

1616  (
UBoﬁ
)(
bmpSë
!=
NULL
 || 
°rögS∑n
!=NULL);

1617 
	}
}

1619 
ölöe
 
UBoﬁ
 
	gUnicodeSë
::
	$c⁄èösSome
(
UCh¨32
 
°¨t
, UCh¨32 
íd
) const {

1620  !
	`c⁄èösN⁄e
(
°¨t
, 
íd
);

1621 
	}
}

1623 
ölöe
 
UBoﬁ
 
	gUnicodeSë
::
	$c⁄èösSome
(c⁄° 
UnicodeSë
& 
s
) const {

1624  !
	`c⁄èösN⁄e
(
s
);

1625 
	}
}

1627 
ölöe
 
UBoﬁ
 
	gUnicodeSë
::
	$c⁄èösSome
(c⁄° 
UnicodeSåög
& 
s
) const {

1628  !
	`c⁄èösN⁄e
(
s
);

1629 
	}
}

1631 
ölöe
 
UBoﬁ
 
	gUnicodeSë
::
	$isBogus
() const {

1632  (
UBoﬁ
)(
fFœgs
 & 
kIsBogus
);

1633 
	}
}

1635 
ölöe
 
UnicodeSë
 *
	gUnicodeSë
::
	$‰omUSë
(
USë
 *
u£t
) {

1636  
ªöãΩªt_ˇ°
<
UnicodeSë
 *>(
u£t
);

1637 
	}
}

1639 
ölöe
 c⁄° 
UnicodeSë
 *
	gUnicodeSë
::
	$‰omUSë
(c⁄° 
USë
 *
u£t
) {

1640  
ªöãΩªt_ˇ°
<c⁄° 
UnicodeSë
 *>(
u£t
);

1641 
	}
}

1643 
ölöe
 
USë
 *
	gUnicodeSë
::
	$toUSë
() {

1644  
ªöãΩªt_ˇ°
<
USë
 *>(
this
);

1645 
	}
}

1647 
ölöe
 c⁄° 
USë
 *
	gUnicodeSë
::
	$toUSë
() const {

1648  
ªöãΩªt_ˇ°
<c⁄° 
USë
 *>(
this
);

1649 
	}
}

1651 
ölöe
 
öt32_t
 
	gUnicodeSë
::
	$•™
(c⁄° 
UnicodeSåög
 &
s
, 
öt32_t
 
°¨t
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
) const {

1652 
öt32_t
 
sLígth
=
s
.
	`Àngth
();

1653 if(
°¨t
<0) {

1654 
°¨t
=0;

1655 } if(
°¨t
>
sLígth
) {

1656 
°¨t
=
sLígth
;

1658  
°¨t
+
	`•™
(
s
.
	`gëBuf„r
()+°¨t, 
sLígth
-°¨t, 
•™C⁄dôi⁄
);

1659 
	}
}

1661 
ölöe
 
öt32_t
 
	gUnicodeSë
::
	$•™Back
(c⁄° 
UnicodeSåög
 &
s
, 
öt32_t
 
limô
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
) const {

1662 
öt32_t
 
sLígth
=
s
.
	`Àngth
();

1663 if(
limô
<0) {

1664 
limô
=0;

1665 } if(
limô
>
sLígth
) {

1666 
limô
=
sLígth
;

1668  
	`•™Back
(
s
.
	`gëBuf„r
(), 
limô
, 
•™C⁄dôi⁄
);

1669 
	}
}

1671 
	gU_NAMESPACE_END


	@unicode/unistr.h

21 #i‚de‡
UNISTR_H


22 
	#UNISTR_H


	)

29 
	~"unicode/uty≥s.h
"

30 
	~"unicode/ªp.h
"

31 
	~"unicode/°d_°rög.h
"

32 
	~"unicode/°rögpõ˚.h
"

33 
	~"unicode/byã°ªam.h
"

35 
	gUC⁄vîãr
;

36 
˛ass
 
	gSåögThªadTe°
;

38 #i‚de‡
U_COMPARE_CODE_POINT_ORDER


45 
	#U_COMPARE_CODE_POINT_ORDER
 0x8000

	)

48 #i‚de‡
USTRING_H


52 
U_STABLE
 
öt32_t
 
U_EXPORT2


53 
u_°æí
(c⁄° 
UCh¨
 *
s
);

56 
U_NAMESPACE_BEGIN


58 
˛ass
 
	gLoˇÀ
;

59 
˛ass
 
	gSåögCh¨a˘îIãøt‹
;

60 
˛ass
 
	gBªakIãøt‹
;

74 
	#US_INV
 
U_NAMESPACE_QUALIFIER
 
UnicodeSåög
::
kInv¨ü¡


	)

93 #i‡
deföed
(
U_DECLARE_UTF16
)

94 
	#UNICODE_STRING
(
cs
, 
_Àngth
Ë
U_NAMESPACE_QUALIFIER
 
	`UnicodeSåög
(
TRUE
, (c⁄° 
UCh¨
 *)
	`U_DECLARE_UTF16
(cs), _Àngth)

	)

95 #ñi‡
U_SIZEOF_WCHAR_T
==
U_SIZEOF_UCHAR
 && (
U_CHARSET_FAMILY
==
U_ASCII_FAMILY
 || (U_SIZEOF_UCHAR =2 && 
deföed
(
U_WCHAR_IS_UTF16
)))

96 
	#UNICODE_STRING
(
cs
, 
_Àngth
Ë
U_NAMESPACE_QUALIFIER
 
	`UnicodeSåög
(
TRUE
, (c⁄° 
UCh¨
 *)
L
 ## cs, _Àngth)

	)

97 #ñi‡
U_SIZEOF_UCHAR
==1 && 
U_CHARSET_FAMILY
==
U_ASCII_FAMILY


98 
	#UNICODE_STRING
(
cs
, 
_Àngth
Ë
U_NAMESPACE_QUALIFIER
 
	`UnicodeSåög
(
TRUE
, (c⁄° 
UCh¨
 *)cs, _Àngth)

	)

100 
	#UNICODE_STRING
(
cs
, 
_Àngth
Ë
U_NAMESPACE_QUALIFIER
 
	`UnicodeSåög
(cs, _Àngth, 
US_INV
)

	)

116 
	#UNICODE_STRING_SIMPLE
(
cs
Ë
	`UNICODE_STRING
(cs, -1)

	)

187 ˛as†
	cU_COMMON_API
 
	mUnicodeSåög
 : 
public
 
Rïœ˚abÀ


189 
public
:

199 
	eEInv¨ü¡
 {

204 
kInv¨ü¡


220 
ölöe
 
UBoﬁ
 
	g›î©‹
=(c⁄° 
UnicodeSåög
& 
ãxt
) const;

229 
ölöe
 
UBoﬁ
 
	g›î©‹
!(c⁄° 
UnicodeSåög
& 
ãxt
) const;

238 
ölöe
 
UBoﬁ
 
	g›î©‹
> (c⁄° 
	gUnicodeSåög
& 
	gãxt
) const;

247 
ölöe
 
UBoﬁ
 
	g›î©‹
< (c⁄° 
	gUnicodeSåög
& 
	gãxt
) const;

256 
ölöe
 
UBoﬁ
 
	g›î©‹
>(c⁄° 
UnicodeSåög
& 
ãxt
) const;

265 
ölöe
 
UBoﬁ
 
	g›î©‹
<(c⁄° 
UnicodeSåög
& 
ãxt
) const;

278 
ölöe
 
öt8_t
 
	$com∑ª
(c⁄° 
UnicodeSåög
& 
ãxt
) const;

294 
ölöe
 
öt8_t
 
	$com∑ª
(
öt32_t
 
°¨t
,

295 
öt32_t
 
Àngth
,

296 c⁄° 
UnicodeSåög
& 
ãxt
) const;

315 
ölöe
 
öt8_t
 
	$com∑ª
(
öt32_t
 
°¨t
,

316 
öt32_t
 
Àngth
,

317 c⁄° 
UnicodeSåög
& 
§cText
,

318 
öt32_t
 
§cSèπ
,

319 
öt32_t
 
§cLígth
) const;

333 
ölöe
 
öt8_t
 
	$com∑ª
(c⁄° 
UCh¨
 *
§cCh¨s
,

334 
öt32_t
 
§cLígth
) const;

350 
ölöe
 
öt8_t
 
	$com∑ª
(
öt32_t
 
°¨t
,

351 
öt32_t
 
Àngth
,

352 c⁄° 
UCh¨
 *
§cCh¨s
) const;

371 
ölöe
 
öt8_t
 
	$com∑ª
(
öt32_t
 
°¨t
,

372 
öt32_t
 
Àngth
,

373 c⁄° 
UCh¨
 *
§cCh¨s
,

374 
öt32_t
 
§cSèπ
,

375 
öt32_t
 
§cLígth
) const;

394 
ölöe
 
öt8_t
 
	$com∑ªBëwìn
(
öt32_t
 
°¨t
,

395 
öt32_t
 
limô
,

396 c⁄° 
UnicodeSåög
& 
§cText
,

397 
öt32_t
 
§cSèπ
,

398 
öt32_t
 
§cLimô
) const;

417 
ölöe
 
öt8_t
 
	$com∑ªCodePoötOrdî
(c⁄° 
UnicodeSåög
& 
ãxt
) const;

438 
ölöe
 
öt8_t
 
	$com∑ªCodePoötOrdî
(
öt32_t
 
°¨t
,

439 
öt32_t
 
Àngth
,

440 c⁄° 
UnicodeSåög
& 
§cText
) const;

463 
ölöe
 
öt8_t
 
	$com∑ªCodePoötOrdî
(
öt32_t
 
°¨t
,

464 
öt32_t
 
Àngth
,

465 c⁄° 
UnicodeSåög
& 
§cText
,

466 
öt32_t
 
§cSèπ
,

467 
öt32_t
 
§cLígth
) const;

487 
ölöe
 
öt8_t
 
	$com∑ªCodePoötOrdî
(c⁄° 
UCh¨
 *
§cCh¨s
,

488 
öt32_t
 
§cLígth
) const;

509 
ölöe
 
öt8_t
 
	$com∑ªCodePoötOrdî
(
öt32_t
 
°¨t
,

510 
öt32_t
 
Àngth
,

511 c⁄° 
UCh¨
 *
§cCh¨s
) const;

534 
ölöe
 
öt8_t
 
	$com∑ªCodePoötOrdî
(
öt32_t
 
°¨t
,

535 
öt32_t
 
Àngth
,

536 c⁄° 
UCh¨
 *
§cCh¨s
,

537 
öt32_t
 
§cSèπ
,

538 
öt32_t
 
§cLígth
) const;

561 
ölöe
 
öt8_t
 
	$com∑ªCodePoötOrdîBëwìn
(
öt32_t
 
°¨t
,

562 
öt32_t
 
limô
,

563 c⁄° 
UnicodeSåög
& 
§cText
,

564 
öt32_t
 
§cSèπ
,

565 
öt32_t
 
§cLimô
) const;

585 
ölöe
 
öt8_t
 
	$ˇ£Com∑ª
(c⁄° 
UnicodeSåög
& 
ãxt
, 
uöt32_t
 
›ti⁄s
) const;

607 
ölöe
 
öt8_t
 
	$ˇ£Com∑ª
(
öt32_t
 
°¨t
,

608 
öt32_t
 
Àngth
,

609 c⁄° 
UnicodeSåög
& 
§cText
,

610 
uöt32_t
 
›ti⁄s
) const;

634 
ölöe
 
öt8_t
 
	$ˇ£Com∑ª
(
öt32_t
 
°¨t
,

635 
öt32_t
 
Àngth
,

636 c⁄° 
UnicodeSåög
& 
§cText
,

637 
öt32_t
 
§cSèπ
,

638 
öt32_t
 
§cLígth
,

639 
uöt32_t
 
›ti⁄s
) const;

660 
ölöe
 
öt8_t
 
	$ˇ£Com∑ª
(c⁄° 
UCh¨
 *
§cCh¨s
,

661 
öt32_t
 
§cLígth
,

662 
uöt32_t
 
›ti⁄s
) const;

684 
ölöe
 
öt8_t
 
	$ˇ£Com∑ª
(
öt32_t
 
°¨t
,

685 
öt32_t
 
Àngth
,

686 c⁄° 
UCh¨
 *
§cCh¨s
,

687 
uöt32_t
 
›ti⁄s
) const;

711 
ölöe
 
öt8_t
 
	$ˇ£Com∑ª
(
öt32_t
 
°¨t
,

712 
öt32_t
 
Àngth
,

713 c⁄° 
UCh¨
 *
§cCh¨s
,

714 
öt32_t
 
§cSèπ
,

715 
öt32_t
 
§cLígth
,

716 
uöt32_t
 
›ti⁄s
) const;

740 
ölöe
 
öt8_t
 
	$ˇ£Com∑ªBëwìn
(
öt32_t
 
°¨t
,

741 
öt32_t
 
limô
,

742 c⁄° 
UnicodeSåög
& 
§cText
,

743 
öt32_t
 
§cSèπ
,

744 
öt32_t
 
§cLimô
,

745 
uöt32_t
 
›ti⁄s
) const;

754 
ölöe
 
UBoﬁ
 
	$°¨tsWôh
(c⁄° 
UnicodeSåög
& 
ãxt
) const;

766 
ölöe
 
UBoﬁ
 
	$°¨tsWôh
(c⁄° 
UnicodeSåög
& 
§cText
,

767 
öt32_t
 
§cSèπ
,

768 
öt32_t
 
§cLígth
) const;

778 
ölöe
 
UBoﬁ
 
	$°¨tsWôh
(c⁄° 
UCh¨
 *
§cCh¨s
,

779 
öt32_t
 
§cLígth
) const;

790 
ölöe
 
UBoﬁ
 
	$°¨tsWôh
(c⁄° 
UCh¨
 *
§cCh¨s
,

791 
öt32_t
 
§cSèπ
,

792 
öt32_t
 
§cLígth
) const;

801 
ölöe
 
UBoﬁ
 
	$ídsWôh
(c⁄° 
UnicodeSåög
& 
ãxt
) const;

813 
ölöe
 
UBoﬁ
 
	$ídsWôh
(c⁄° 
UnicodeSåög
& 
§cText
,

814 
öt32_t
 
§cSèπ
,

815 
öt32_t
 
§cLígth
) const;

825 
ölöe
 
UBoﬁ
 
	$ídsWôh
(c⁄° 
UCh¨
 *
§cCh¨s
,

826 
öt32_t
 
§cLígth
) const;

838 
ölöe
 
UBoﬁ
 
	$ídsWôh
(c⁄° 
UCh¨
 *
§cCh¨s
,

839 
öt32_t
 
§cSèπ
,

840 
öt32_t
 
§cLígth
) const;

853 
ölöe
 
öt32_t
 
	$ödexOf
(c⁄° 
UnicodeSåög
& 
ãxt
) const;

864 
ölöe
 
öt32_t
 
	$ödexOf
(c⁄° 
UnicodeSåög
& 
ãxt
,

865 
öt32_t
 
°¨t
) const;

878 
ölöe
 
öt32_t
 
	$ödexOf
(c⁄° 
UnicodeSåög
& 
ãxt
,

879 
öt32_t
 
°¨t
,

880 
öt32_t
 
Àngth
) const;

898 
ölöe
 
öt32_t
 
	$ödexOf
(c⁄° 
UnicodeSåög
& 
§cText
,

899 
öt32_t
 
§cSèπ
,

900 
öt32_t
 
§cLígth
,

901 
öt32_t
 
°¨t
,

902 
öt32_t
 
Àngth
) const;

915 
ölöe
 
öt32_t
 
	$ödexOf
(c⁄° 
UCh¨
 *
§cCh¨s
,

916 
öt32_t
 
§cLígth
,

917 
öt32_t
 
°¨t
) const;

931 
ölöe
 
öt32_t
 
	$ödexOf
(c⁄° 
UCh¨
 *
§cCh¨s
,

932 
öt32_t
 
§cLígth
,

933 
öt32_t
 
°¨t
,

934 
öt32_t
 
Àngth
) const;

952 
öt32_t
 
	$ödexOf
(c⁄° 
UCh¨
 *
§cCh¨s
,

953 
öt32_t
 
§cSèπ
,

954 
öt32_t
 
§cLígth
,

955 
öt32_t
 
°¨t
,

956 
öt32_t
 
Àngth
) const;

965 
ölöe
 
öt32_t
 
	$ödexOf
(
UCh¨
 
c
) const;

975 
ölöe
 
öt32_t
 
	$ödexOf
(
UCh¨32
 
c
) const;

985 
ölöe
 
öt32_t
 
	$ödexOf
(
UCh¨
 
c
,

986 
öt32_t
 
°¨t
) const;

997 
ölöe
 
öt32_t
 
	$ödexOf
(
UCh¨32
 
c
,

998 
öt32_t
 
°¨t
) const;

1010 
ölöe
 
öt32_t
 
	$ödexOf
(
UCh¨
 
c
,

1011 
öt32_t
 
°¨t
,

1012 
öt32_t
 
Àngth
) const;

1025 
ölöe
 
öt32_t
 
	$ödexOf
(
UCh¨32
 
c
,

1026 
öt32_t
 
°¨t
,

1027 
öt32_t
 
Àngth
) const;

1037 
ölöe
 
öt32_t
 
	$œ°IndexOf
(c⁄° 
UnicodeSåög
& 
ãxt
) const;

1048 
ölöe
 
öt32_t
 
	$œ°IndexOf
(c⁄° 
UnicodeSåög
& 
ãxt
,

1049 
öt32_t
 
°¨t
) const;

1062 
ölöe
 
öt32_t
 
	$œ°IndexOf
(c⁄° 
UnicodeSåög
& 
ãxt
,

1063 
öt32_t
 
°¨t
,

1064 
öt32_t
 
Àngth
) const;

1082 
ölöe
 
öt32_t
 
	$œ°IndexOf
(c⁄° 
UnicodeSåög
& 
§cText
,

1083 
öt32_t
 
§cSèπ
,

1084 
öt32_t
 
§cLígth
,

1085 
öt32_t
 
°¨t
,

1086 
öt32_t
 
Àngth
) const;

1098 
ölöe
 
öt32_t
 
	$œ°IndexOf
(c⁄° 
UCh¨
 *
§cCh¨s
,

1099 
öt32_t
 
§cLígth
,

1100 
öt32_t
 
°¨t
) const;

1114 
ölöe
 
öt32_t
 
	$œ°IndexOf
(c⁄° 
UCh¨
 *
§cCh¨s
,

1115 
öt32_t
 
§cLígth
,

1116 
öt32_t
 
°¨t
,

1117 
öt32_t
 
Àngth
) const;

1135 
öt32_t
 
	$œ°IndexOf
(c⁄° 
UCh¨
 *
§cCh¨s
,

1136 
öt32_t
 
§cSèπ
,

1137 
öt32_t
 
§cLígth
,

1138 
öt32_t
 
°¨t
,

1139 
öt32_t
 
Àngth
) const;

1148 
ölöe
 
öt32_t
 
	$œ°IndexOf
(
UCh¨
 
c
) const;

1158 
ölöe
 
öt32_t
 
	$œ°IndexOf
(
UCh¨32
 
c
) const;

1168 
ölöe
 
öt32_t
 
	$œ°IndexOf
(
UCh¨
 
c
,

1169 
öt32_t
 
°¨t
) const;

1180 
ölöe
 
öt32_t
 
	$œ°IndexOf
(
UCh¨32
 
c
,

1181 
öt32_t
 
°¨t
) const;

1193 
ölöe
 
öt32_t
 
	$œ°IndexOf
(
UCh¨
 
c
,

1194 
öt32_t
 
°¨t
,

1195 
öt32_t
 
Àngth
) const;

1208 
ölöe
 
öt32_t
 
	$œ°IndexOf
(
UCh¨32
 
c
,

1209 
öt32_t
 
°¨t
,

1210 
öt32_t
 
Àngth
) const;

1223 
ölöe
 
UCh¨
 
	$ch¨At
(
öt32_t
 
off£t
) const;

1232 
ölöe
 
UCh¨
 
›î©‹
[] (
öt32_t
 
off£t
) const;

1245 
ölöe
 
UCh¨32
 
	$ch¨32At
(
öt32_t
 
off£t
) const;

1262 
ölöe
 
öt32_t
 
	$gëCh¨32Sèπ
(
öt32_t
 
off£t
) const;

1280 
ölöe
 
öt32_t
 
	$gëCh¨32Limô
(
öt32_t
 
off£t
) const;

1332 
öt32_t
 
	$moveIndex32
(
öt32_t
 
ödex
, i¡32_à
dñè
) const;

1351 
ölöe
 
	$exåa˘
(
öt32_t
 
°¨t
,

1352 
öt32_t
 
Àngth
,

1353 
UCh¨
 *
d°
,

1354 
öt32_t
 
d°Sèπ
 = 0) const;

1377 
öt32_t


1378 
	$exåa˘
(
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

1379 
UEº‹Code
 &
îr‹Code
) const;

1391 
ölöe
 
	$exåa˘
(
öt32_t
 
°¨t
,

1392 
öt32_t
 
Àngth
,

1393 
UnicodeSåög
& 
èrgë
) const;

1406 
ölöe
 
	$exåa˘Bëwìn
(
öt32_t
 
°¨t
,

1407 
öt32_t
 
limô
,

1408 
UCh¨
 *
d°
,

1409 
öt32_t
 
d°Sèπ
 = 0) const;

1420 
vútuÆ
 
	$exåa˘Bëwìn
(
öt32_t
 
°¨t
,

1421 
öt32_t
 
limô
,

1422 
UnicodeSåög
& 
èrgë
) const;

1445 
öt32_t
 
	$exåa˘
(
öt32_t
 
°¨t
,

1446 
öt32_t
 
°¨tLígth
,

1447 *
èrgë
,

1448 
öt32_t
 
èrgëC≠acôy
,

1449 
EInv¨ü¡
 
öv
) const;

1451 #i‡
U_CHARSET_IS_UTF8
 || !
UCONFIG_NO_CONVERSION


1472 
öt32_t
 
	$exåa˘
(
öt32_t
 
°¨t
,

1473 
öt32_t
 
°¨tLígth
,

1474 *
èrgë
,

1475 
uöt32_t
 
èrgëLígth
) const;

1479 #i‡!
UCONFIG_NO_CONVERSION


1506 
ölöe
 
öt32_t
 
	$exåa˘
(
öt32_t
 
°¨t
,

1507 
öt32_t
 
°¨tLígth
,

1508 *
èrgë
,

1509 c⁄° *
codïage
 = 0) const;

1540 
öt32_t
 
	$exåa˘
(
öt32_t
 
°¨t
,

1541 
öt32_t
 
°¨tLígth
,

1542 *
èrgë
,

1543 
uöt32_t
 
èrgëLígth
,

1544 c⁄° *
codïage
) const;

1563 
öt32_t
 
	$exåa˘
(*
de°
, 
öt32_t
 
de°C≠acôy
,

1564 
UC⁄vîãr
 *
˙v
,

1565 
UEº‹Code
 &
îr‹Code
) const;

1582 
UnicodeSåög
 
	$ãmpSubSåög
(
öt32_t
 
°¨t
=0, i¡32_à
Àngth
=
INT32_MAX
) const;

1594 
ölöe
 
UnicodeSåög
 
	$ãmpSubSåögBëwìn
(
öt32_t
 
°¨t
, i¡32_à
limô
=
INT32_MAX
) const;

1607 
	$toUTF8
(
ByãSök
 &
sök
) const;

1609 #i‡
U_HAVE_STD_STRING


1623 
ãm∂©e
<
ty≥«me
 
SåögCœss
>

1624 
SåögCœss
 &
	$toUTF8Såög
(
SåögCœss
 &
ªsu…
) const {

1625 
SåögByãSök
<
SåögCœss
> 
	`sbs
(&
ªsu…
);

1626 
	`toUTF8
(
sbs
);

1627  
ªsu…
;

1628 
	}
}

1647 
öt32_t
 
	$toUTF32
(
UCh¨32
 *
utf32
, 
öt32_t
 
ˇ∑côy
, 
UEº‹Code
 &
îr‹Code
) const;

1659 
ölöe
 
öt32_t
 
	$Àngth
() const;

1674 
öt32_t


1675 
	$cou¡Ch¨32
(
öt32_t
 
°¨t
=0, i¡32_à
Àngth
=
INT32_MAX
) const;

1700 
UBoﬁ


1701 
	$hasM‹eCh¨32Th™
(
öt32_t
 
°¨t
, i¡32_à
Àngth
, i¡32_à
numbî
) const;

1708 
ölöe
 
UBoﬁ
 
	$isEm±y
() const;

1719 
ölöe
 
öt32_t
 
	$gëC≠acôy
() const;

1728 
ölöe
 
öt32_t
 
	$hashCode
() const;

1742 
ölöe
 
UBoﬁ
 
	$isBogus
() const;

1758 
UnicodeSåög
 &
›î©‹
=(c⁄° UnicodeSåög &
§cText
);

1780 
UnicodeSåög
 &
	`Á°C›yFrom
(c⁄° UnicodeSåög &
§c
);

1789 
ölöe
 
UnicodeSåög
& 
›î©‹
(
UCh¨
 
ch
);

1798 
ölöe
 
UnicodeSåög
& 
›î©‹
(
UCh¨32
 
ch
);

1811 
ölöe
 
UnicodeSåög
& 
	`£tTo
(c⁄° UnicodeSåög& 
§cText
,

1812 
öt32_t
 
§cSèπ
);

1827 
ölöe
 
UnicodeSåög
& 
	`£tTo
(c⁄° UnicodeSåög& 
§cText
,

1828 
öt32_t
 
§cSèπ
,

1829 
öt32_t
 
§cLígth
);

1839 
ölöe
 
UnicodeSåög
& 
	`£tTo
(c⁄° UnicodeSåög& 
§cText
);

1849 
ölöe
 
UnicodeSåög
& 
	`£tTo
(c⁄° 
UCh¨
 *
§cCh¨s
,

1850 
öt32_t
 
§cLígth
);

1860 
UnicodeSåög
& 
	`£tTo
(
UCh¨
 
§cCh¨
);

1870 
UnicodeSåög
& 
	`£tTo
(
UCh¨32
 
§cCh¨
);

1892 
UnicodeSåög
 &
	`£tTo
(
UBoﬁ
 
isTîmö©ed
,

1893 c⁄° 
UCh¨
 *
ãxt
,

1894 
öt32_t
 
ãxtLígth
);

1915 
UnicodeSåög
 &
	`£tTo
(
UCh¨
 *
buf„r
,

1916 
öt32_t
 
buffLígth
,

1917 
öt32_t
 
buffC≠acôy
);

1959 
	`£tToBogus
();

1968 
UnicodeSåög
& 
	`£tCh¨At
(
öt32_t
 
off£t
,

1969 
UCh¨
 
ch
);

1981 
ölöe
 
UnicodeSåög
& 
›î©‹
+(
UCh¨
 
ch
);

1990 
ölöe
 
UnicodeSåög
& 
›î©‹
+(
UCh¨32
 
ch
);

2000 
ölöe
 
UnicodeSåög
& 
›î©‹
+(c⁄° UnicodeSåög& 
§cText
);

2016 
ölöe
 
UnicodeSåög
& 
	`≠≥nd
(c⁄° UnicodeSåög& 
§cText
,

2017 
öt32_t
 
§cSèπ
,

2018 
öt32_t
 
§cLígth
);

2027 
ölöe
 
UnicodeSåög
& 
	`≠≥nd
(c⁄° UnicodeSåög& 
§cText
);

2042 
ölöe
 
UnicodeSåög
& 
	`≠≥nd
(c⁄° 
UCh¨
 *
§cCh¨s
,

2043 
öt32_t
 
§cSèπ
,

2044 
öt32_t
 
§cLígth
);

2054 
ölöe
 
UnicodeSåög
& 
	`≠≥nd
(c⁄° 
UCh¨
 *
§cCh¨s
,

2055 
öt32_t
 
§cLígth
);

2063 
ölöe
 
UnicodeSåög
& 
	`≠≥nd
(
UCh¨
 
§cCh¨
);

2071 
ölöe
 
UnicodeSåög
& 
	`≠≥nd
(
UCh¨32
 
§cCh¨
);

2089 
ölöe
 
UnicodeSåög
& 
	`ö£π
(
öt32_t
 
°¨t
,

2090 c⁄° 
UnicodeSåög
& 
§cText
,

2091 
öt32_t
 
§cSèπ
,

2092 
öt32_t
 
§cLígth
);

2102 
ölöe
 
UnicodeSåög
& 
	`ö£π
(
öt32_t
 
°¨t
,

2103 c⁄° 
UnicodeSåög
& 
§cText
);

2118 
ölöe
 
UnicodeSåög
& 
	`ö£π
(
öt32_t
 
°¨t
,

2119 c⁄° 
UCh¨
 *
§cCh¨s
,

2120 
öt32_t
 
§cSèπ
,

2121 
öt32_t
 
§cLígth
);

2132 
ölöe
 
UnicodeSåög
& 
	`ö£π
(
öt32_t
 
°¨t
,

2133 c⁄° 
UCh¨
 *
§cCh¨s
,

2134 
öt32_t
 
§cLígth
);

2144 
ölöe
 
UnicodeSåög
& 
	`ö£π
(
öt32_t
 
°¨t
,

2145 
UCh¨
 
§cCh¨
);

2155 
ölöe
 
UnicodeSåög
& 
	`ö£π
(
öt32_t
 
°¨t
,

2156 
UCh¨32
 
§cCh¨
);

2178 
UnicodeSåög
& 
	`ª∂a˚
(
öt32_t
 
°¨t
,

2179 
öt32_t
 
Àngth
,

2180 c⁄° 
UnicodeSåög
& 
§cText
,

2181 
öt32_t
 
§cSèπ
,

2182 
öt32_t
 
§cLígth
);

2196 
UnicodeSåög
& 
	`ª∂a˚
(
öt32_t
 
°¨t
,

2197 
öt32_t
 
Àngth
,

2198 c⁄° 
UnicodeSåög
& 
§cText
);

2217 
UnicodeSåög
& 
	`ª∂a˚
(
öt32_t
 
°¨t
,

2218 
öt32_t
 
Àngth
,

2219 c⁄° 
UCh¨
 *
§cCh¨s
,

2220 
öt32_t
 
§cSèπ
,

2221 
öt32_t
 
§cLígth
);

2235 
ölöe
 
UnicodeSåög
& 
	`ª∂a˚
(
öt32_t
 
°¨t
,

2236 
öt32_t
 
Àngth
,

2237 c⁄° 
UCh¨
 *
§cCh¨s
,

2238 
öt32_t
 
§cLígth
);

2251 
ölöe
 
UnicodeSåög
& 
	`ª∂a˚
(
öt32_t
 
°¨t
,

2252 
öt32_t
 
Àngth
,

2253 
UCh¨
 
§cCh¨
);

2266 
ölöe
 
UnicodeSåög
& 
	`ª∂a˚
(
öt32_t
 
°¨t
,

2267 
öt32_t
 
Àngth
,

2268 
UCh¨32
 
§cCh¨
);

2279 
ölöe
 
UnicodeSåög
& 
	`ª∂a˚Bëwìn
(
öt32_t
 
°¨t
,

2280 
öt32_t
 
limô
,

2281 c⁄° 
UnicodeSåög
& 
§cText
);

2297 
ölöe
 
UnicodeSåög
& 
	`ª∂a˚Bëwìn
(
öt32_t
 
°¨t
,

2298 
öt32_t
 
limô
,

2299 c⁄° 
UnicodeSåög
& 
§cText
,

2300 
öt32_t
 
§cSèπ
,

2301 
öt32_t
 
§cLimô
);

2313 
vútuÆ
 
	`h™dÀRïœ˚Bëwìn
(
öt32_t
 
°¨t
,

2314 
öt32_t
 
limô
,

2315 c⁄° 
UnicodeSåög
& 
ãxt
);

2322 
vútuÆ
 
UBoﬁ
 
	$hasMëaD©a
() const;

2339 
vútuÆ
 
	`c›y
(
öt32_t
 
°¨t
, i¡32_à
limô
, i¡32_à
de°
);

2351 
ölöe
 
UnicodeSåög
& 
	`födAndRïœ˚
(c⁄° UnicodeSåög& 
ﬁdText
,

2352 c⁄° 
UnicodeSåög
& 
√wText
);

2365 
ölöe
 
UnicodeSåög
& 
	`födAndRïœ˚
(
öt32_t
 
°¨t
,

2366 
öt32_t
 
Àngth
,

2367 c⁄° 
UnicodeSåög
& 
ﬁdText
,

2368 c⁄° 
UnicodeSåög
& 
√wText
);

2387 
UnicodeSåög
& 
	`födAndRïœ˚
(
öt32_t
 
°¨t
,

2388 
öt32_t
 
Àngth
,

2389 c⁄° 
UnicodeSåög
& 
ﬁdText
,

2390 
öt32_t
 
ﬁdSèπ
,

2391 
öt32_t
 
ﬁdLígth
,

2392 c⁄° 
UnicodeSåög
& 
√wText
,

2393 
öt32_t
 
√wSèπ
,

2394 
öt32_t
 
√wLígth
);

2404 
ölöe
 
UnicodeSåög
& 
	`ªmove
();

2414 
ölöe
 
UnicodeSåög
& 
	`ªmove
(
öt32_t
 
°¨t
,

2415 
öt32_t
 
Àngth
 = (öt32_t)
INT32_MAX
);

2425 
ölöe
 
UnicodeSåög
& 
	`ªmoveBëwìn
(
öt32_t
 
°¨t
,

2426 
öt32_t
 
limô
 = (öt32_t)
INT32_MAX
);

2437 
ölöe
 
UnicodeSåög
 &
	`ªèöBëwìn
(
öt32_t
 
°¨t
, i¡32_à
limô
 = 
INT32_MAX
);

2452 
UBoﬁ
 
	`∑dLódög
(
öt32_t
 
èrgëLígth
,

2453 
UCh¨
 
∑dCh¨
 = 0x0020);

2466 
UBoﬁ
 
	`∑dTøûög
(
öt32_t
 
èrgëLígth
,

2467 
UCh¨
 
∑dCh¨
 = 0x0020);

2475 
ölöe
 
UBoﬁ
 
	`åunˇã
(
öt32_t
 
èrgëLígth
);

2482 
UnicodeSåög
& 
	`åim
();

2492 
ölöe
 
UnicodeSåög
& 
	`ªvî£
();

2502 
ölöe
 
UnicodeSåög
& 
	`ªvî£
(
öt32_t
 
°¨t
,

2503 
öt32_t
 
Àngth
);

2511 
UnicodeSåög
& 
	`toUµî
();

2520 
UnicodeSåög
& 
	`toUµî
(c⁄° 
LoˇÀ
& 
loˇÀ
);

2528 
UnicodeSåög
& 
	`toLowî
();

2537 
UnicodeSåög
& 
	`toLowî
(c⁄° 
LoˇÀ
& 
loˇÀ
);

2539 #i‡!
UCONFIG_NO_BREAK_ITERATION


2567 
UnicodeSåög
 &
	`toTôÀ
(
BªakIãøt‹
 *
tôÀIãr
);

2596 
UnicodeSåög
 &
	`toTôÀ
(
BªakIãøt‹
 *
tôÀIãr
, c⁄° 
LoˇÀ
 &
loˇÀ
);

2629 
UnicodeSåög
 &
	`toTôÀ
(
BªakIãøt‹
 *
tôÀIãr
, c⁄° 
LoˇÀ
 &
loˇÀ
, 
uöt32_t
 
›ti⁄s
);

2644 
UnicodeSåög
 &
	`fﬁdCa£
(
uöt32_t
 
›ti⁄s
=0 );

2693 
UCh¨
 *
	`gëBuf„r
(
öt32_t
 
möC≠acôy
);

2715 
	`ªÀa£Buf„r
(
öt32_t
 
√wLígth
=-1);

2747 
ölöe
 c⁄° 
UCh¨
 *
	$gëBuf„r
() const;

2782 
ölöe
 c⁄° 
UCh¨
 *
	`gëTîmö©edBuf„r
();

2791 
	`UnicodeSåög
();

2804 
	`UnicodeSåög
(
öt32_t
 
ˇ∑côy
, 
UCh¨32
 
c
, i¡32_à
cou¡
);

2811 
	`UnicodeSåög
(
UCh¨
 
ch
);

2818 
	`UnicodeSåög
(
UCh¨32
 
ch
);

2826 
	`UnicodeSåög
(c⁄° 
UCh¨
 *
ãxt
);

2835 
	`UnicodeSåög
(c⁄° 
UCh¨
 *
ãxt
,

2836 
öt32_t
 
ãxtLígth
);

2857 
	`UnicodeSåög
(
UBoﬁ
 
isTîmö©ed
,

2858 c⁄° 
UCh¨
 *
ãxt
,

2859 
öt32_t
 
ãxtLígth
);

2879 
	`UnicodeSåög
(
UCh¨
 *
buf„r
, 
öt32_t
 
buffLígth
, i¡32_à
buffC≠acôy
);

2881 #i‡
U_CHARSET_IS_UTF8
 || !
UCONFIG_NO_CONVERSION


2889 
	`UnicodeSåög
(c⁄° *
codïageD©a
);

2897 
	`UnicodeSåög
(c⁄° *
codïageD©a
, 
öt32_t
 
d©aLígth
);

2901 #i‡!
UCONFIG_NO_CONVERSION


2920 
	`UnicodeSåög
(c⁄° *
codïageD©a
, c⁄° *
codïage
);

2939 
	`UnicodeSåög
(c⁄° *
codïageD©a
, 
öt32_t
 
d©aLígth
, c⁄° *
codïage
);

2962 
	`UnicodeSåög
(

2963 c⁄° *
§c
, 
öt32_t
 
§cLígth
,

2964 
UC⁄vîãr
 *
˙v
,

2965 
UEº‹Code
 &
îr‹Code
);

2993 
	`UnicodeSåög
(c⁄° *
§c
, 
öt32_t
 
Àngth
, 
EInv¨ü¡
 
öv
);

3001 
	`UnicodeSåög
(c⁄° 
UnicodeSåög
& 
th©
);

3009 
	`UnicodeSåög
(c⁄° 
UnicodeSåög
& 
§c
, 
öt32_t
 
§cSèπ
);

3018 
	`UnicodeSåög
(c⁄° 
UnicodeSåög
& 
§c
, 
öt32_t
 
§cSèπ
, i¡32_à
§cLígth
);

3036 
vútuÆ
 
Rïœ˚abÀ
 *
	$˛⁄e
() const;

3041 
vútuÆ
 ~
	`UnicodeSåög
();

3056 
UnicodeSåög
 
	`‰omUTF8
(c⁄° 
SåögPõ˚
 &
utf8
);

3069 
UnicodeSåög
 
	`‰omUTF32
(c⁄° 
UCh¨32
 *
utf32
, 
öt32_t
 
Àngth
);

3107 
UnicodeSåög
 
	$u√sˇ≥
() const;

3128 
UCh¨32
 
	$u√sˇ≥At
(
öt32_t
 &
off£t
) const;

3135 
UCœssID
 
U_EXPORT2
 
	`gëSèticCœssID
();

3142 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const;

3148 
¥Ÿe˘ed
:

3153 
vútuÆ
 
öt32_t
 
	$gëLígth
() const;

3160 
vútuÆ
 
UCh¨
 
	$gëCh¨At
(
öt32_t
 
off£t
) const;

3167 
vútuÆ
 
UCh¨32
 
	$gëCh¨32At
(
öt32_t
 
off£t
) const;

3169 
¥iv©e
:

3171 
UnicodeSåög
 &
	`£tToUTF8
(c⁄° 
SåögPõ˚
 &
utf8
);

3177 
öt32_t


3178 
	$toUTF8
(
öt32_t
 
°¨t
, i¡32_à
Àn
,

3179 *
èrgë
, 
öt32_t
 
ˇ∑côy
) const;

3182 
ölöe
 
öt8_t


3183 
	$doCom∑ª
(
öt32_t
 
°¨t
,

3184 
öt32_t
 
Àngth
,

3185 c⁄° 
UnicodeSåög
& 
§cText
,

3186 
öt32_t
 
§cSèπ
,

3187 
öt32_t
 
§cLígth
) const;

3189 
öt8_t
 
	$doCom∑ª
(
öt32_t
 
°¨t
,

3190 
öt32_t
 
Àngth
,

3191 c⁄° 
UCh¨
 *
§cCh¨s
,

3192 
öt32_t
 
§cSèπ
,

3193 
öt32_t
 
§cLígth
) const;

3195 
ölöe
 
öt8_t


3196 
	$doCom∑ªCodePoötOrdî
(
öt32_t
 
°¨t
,

3197 
öt32_t
 
Àngth
,

3198 c⁄° 
UnicodeSåög
& 
§cText
,

3199 
öt32_t
 
§cSèπ
,

3200 
öt32_t
 
§cLígth
) const;

3202 
öt8_t
 
	$doCom∑ªCodePoötOrdî
(
öt32_t
 
°¨t
,

3203 
öt32_t
 
Àngth
,

3204 c⁄° 
UCh¨
 *
§cCh¨s
,

3205 
öt32_t
 
§cSèπ
,

3206 
öt32_t
 
§cLígth
) const;

3208 
ölöe
 
öt8_t


3209 
	$doCa£Com∑ª
(
öt32_t
 
°¨t
,

3210 
öt32_t
 
Àngth
,

3211 c⁄° 
UnicodeSåög
 &
§cText
,

3212 
öt32_t
 
§cSèπ
,

3213 
öt32_t
 
§cLígth
,

3214 
uöt32_t
 
›ti⁄s
) const;

3216 
öt8_t


3217 
	$doCa£Com∑ª
(
öt32_t
 
°¨t
,

3218 
öt32_t
 
Àngth
,

3219 c⁄° 
UCh¨
 *
§cCh¨s
,

3220 
öt32_t
 
§cSèπ
,

3221 
öt32_t
 
§cLígth
,

3222 
uöt32_t
 
›ti⁄s
) const;

3224 
öt32_t
 
	$doIndexOf
(
UCh¨
 
c
,

3225 
öt32_t
 
°¨t
,

3226 
öt32_t
 
Àngth
) const;

3228 
öt32_t
 
	$doIndexOf
(
UCh¨32
 
c
,

3229 
öt32_t
 
°¨t
,

3230 
öt32_t
 
Àngth
) const;

3232 
öt32_t
 
	$doLa°IndexOf
(
UCh¨
 
c
,

3233 
öt32_t
 
°¨t
,

3234 
öt32_t
 
Àngth
) const;

3236 
öt32_t
 
	$doLa°IndexOf
(
UCh¨32
 
c
,

3237 
öt32_t
 
°¨t
,

3238 
öt32_t
 
Àngth
) const;

3240 
	$doExåa˘
(
öt32_t
 
°¨t
,

3241 
öt32_t
 
Àngth
,

3242 
UCh¨
 *
d°
,

3243 
öt32_t
 
d°Sèπ
) const;

3245 
ölöe
 
	$doExåa˘
(
öt32_t
 
°¨t
,

3246 
öt32_t
 
Àngth
,

3247 
UnicodeSåög
& 
èrgë
) const;

3249 
ölöe
 
UCh¨
 
	$doCh¨At
(
öt32_t
 
off£t
) const;

3251 
UnicodeSåög
& 
	`doRïœ˚
(
öt32_t
 
°¨t
,

3252 
öt32_t
 
Àngth
,

3253 c⁄° 
UnicodeSåög
& 
§cText
,

3254 
öt32_t
 
§cSèπ
,

3255 
öt32_t
 
§cLígth
);

3257 
UnicodeSåög
& 
	`doRïœ˚
(
öt32_t
 
°¨t
,

3258 
öt32_t
 
Àngth
,

3259 c⁄° 
UCh¨
 *
§cCh¨s
,

3260 
öt32_t
 
§cSèπ
,

3261 
öt32_t
 
§cLígth
);

3263 
UnicodeSåög
& 
	`doRevî£
(
öt32_t
 
°¨t
,

3264 
öt32_t
 
Àngth
);

3267 
öt32_t
 
	$doHashCode
() const;

3271 
ölöe
 
UCh¨
* 
	`gëAºaySèπ
();

3272 
ölöe
 c⁄° 
UCh¨
* 
	$gëAºaySèπ
() const;

3276 
ölöe
 
UBoﬁ
 
	$isWrôabÀ
() const;

3279 
ölöe
 
UBoﬁ
 
	$isBuf„rWrôabÀ
() const;

3282 
ölöe
 
	`£tLígth
(
öt32_t
 
Àn
);

3283 
ölöe
 
	`£tToEm±y
();

3284 
ölöe
 
	`£tAºay
(
UCh¨
 *
¨øy
, 
öt32_t
 
Àn
, i¡32_à
ˇ∑côy
);

3290 
UBoﬁ
 
	`Æloˇã
(
öt32_t
 
ˇ∑côy
);

3293 
	`ªÀa£Aºay
();

3296 
	`unBogus
();

3299 
UnicodeSåög
 &
	`c›yFrom
(c⁄° UnicodeSåög &
§c
, 
UBoﬁ
 
Á°C›y
=
FALSE
);

3302 
ölöe
 
	$pöIndex
(
öt32_t
& 
°¨t
) const;

3303 
ölöe
 
	$pöIndi˚s
(
öt32_t
& 
°¨t
,

3304 
öt32_t
& 
Àngth
) const;

3306 #i‡!
UCONFIG_NO_CONVERSION


3309 
öt32_t
 
	$doExåa˘
(
öt32_t
 
°¨t
, i¡32_à
Àngth
,

3310 *
de°
, 
öt32_t
 
de°C≠acôy
,

3311 
UC⁄vîãr
 *
˙v
,

3312 
UEº‹Code
 &
îr‹Code
) const;

3324 
	`doCodïageCª©e
(c⁄° *
codïageD©a
,

3325 
öt32_t
 
d©aLígth
,

3326 c⁄° *
codïage
);

3333 
	`doCodïageCª©e
(c⁄° *
codïageD©a
,

3334 
öt32_t
 
d©aLígth
,

3335 
UC⁄vîãr
 *
c⁄vîãr
,

3336 
UEº‹Code
 &
°©us
);

3351 
UBoﬁ
 
	`˛⁄eAºayIfNìded
(
öt32_t
 
√wC≠acôy
 = -1,

3352 
öt32_t
 
growC≠acôy
 = -1,

3353 
UBoﬁ
 
doC›yAºay
 = 
TRUE
,

3354 
öt32_t
 **
pBuf„rToDñëe
 = 0,

3355 
UBoﬁ
 
f‹˚Cl⁄e
 = 
FALSE
);

3358 
UnicodeSåög
 &

3359 
	`ˇ£M≠
(
BªakIãøt‹
 *
tôÀIãr
,

3360 c⁄° *
loˇÀ
,

3361 
uöt32_t
 
›ti⁄s
,

3362 
öt32_t
 
toWhichCa£
);

3365 
	`addRef
();

3366 
öt32_t
 
	`ªmoveRef
();

3367 
öt32_t
 
	$ªfCou¡
() const;

3374 
US_STACKBUF_SIZE
= (*)==4 ? 13 : 15,

3375 
kInvÆidUCh¨
=0xffff,

3376 
kGrowSize
=128,

3377 
kInvÆidHashCode
=0,

3378 
kEm±yHashCode
=1,

3381 
kIsBogus
=1,

3382 
kUsögSèckBuf„r
=2,

3383 
kRefCou¡ed
=4,

3384 
kBuf„rIsRód⁄ly
=8,

3385 
kO≥nGëBuf„r
=16,

3389 
kSh‹tSåög
=
kUsögSèckBuf„r
,

3390 
kL⁄gSåög
=
kRefCou¡ed
,

3391 
kRód⁄lyAlüs
=
kBuf„rIsRód⁄ly
,

3392 
kWrôabÀAlüs
=0

3393 
	}
};

3395 
‰õnd
 
˛ass
 
	gSåögThªadTe°
;

3397 
	gSèckBuf„rOrFõlds
;

3398 
‰õnd
 
	gSèckBuf„rOrFõlds
;

3412 
öt8_t
 
	gfSh‹tLígth
;

3413 
uöt8_t
 
	gfFœgs
;

3414 
	uSèckBuf„rOrFõlds
 {

3417 
UCh¨
 
	gfSèckBuf„r
 [
US_STACKBUF_SIZE
];

3419 
uöt16_t
 
	gfPaddög
;

3420 
öt32_t
 
	gfLígth
;

3421 
UCh¨
 *
	gfAºay
;

3422 
öt32_t
 
	gfC≠acôy
;

3423 } 
	gfFõlds
;

3424 } 
	gfUni⁄
;

3435 
U_COMMON_API
 
UnicodeSåög
 
U_EXPORT2


3436 
	g›î©‹
+ (c⁄° 
	gUnicodeSåög
 &
	gs1
, c⁄° UnicodeSåög &
	gs2
);

3446 
ölöe
 

3447 
	gUnicodeSåög
::
	$pöIndex
(
öt32_t
& 
°¨t
) const

3450 if(
°¨t
 < 0) {

3451 
°¨t
 = 0;

3452 } if(
°¨t
 > 
	`Àngth
()) {

3453 
°¨t
 = 
	`Àngth
();

3455 
	}
}

3457 
ölöe
 

3458 
	gUnicodeSåög
::
	$pöIndi˚s
(
öt32_t
& 
°¨t
,

3459 
öt32_t
& 
_Àngth
) const

3462 
öt32_t
 
Àn
 = 
	`Àngth
();

3463 if(
°¨t
 < 0) {

3464 
°¨t
 = 0;

3465 } if(
°¨t
 > 
Àn
) {

3466 
°¨t
 = 
Àn
;

3468 if(
_Àngth
 < 0) {

3469 
_Àngth
 = 0;

3470 } if(
_Àngth
 > (
Àn
 - 
°¨t
)) {

3471 
_Àngth
 = (
Àn
 - 
°¨t
);

3473 
	}
}

3475 
ölöe
 
UCh¨
*

3476 
	gUnicodeSåög
::
	$gëAºaySèπ
()

3477 {  (
fFœgs
&
kUsögSèckBuf„r
Ë? 
fUni⁄
.
fSèckBuf„r
 : fUni⁄.
fFõlds
.
fAºay
; 
	}
}

3479 
ölöe
 c⁄° 
UCh¨
*

3480 
	gUnicodeSåög
::
	$gëAºaySèπ
() const

3481 {  (
fFœgs
&
kUsögSèckBuf„r
Ë? 
fUni⁄
.
fSèckBuf„r
 : fUni⁄.
fFõlds
.
fAºay
; 
	}
}

3486 
ölöe
 
öt32_t


3487 
	gUnicodeSåög
::
	$Àngth
() const

3488 {  
fSh‹tLígth
>=0 ? fSh‹tLígth : 
fUni⁄
.
fFõlds
.
fLígth
; 
	}
}

3490 
ölöe
 
öt32_t


3491 
	gUnicodeSåög
::
	$gëC≠acôy
() const

3492 {  (
fFœgs
&
kUsögSèckBuf„r
Ë? 
US_STACKBUF_SIZE
 : 
fUni⁄
.
fFõlds
.
fC≠acôy
; 
	}
}

3494 
ölöe
 
öt32_t


3495 
	gUnicodeSåög
::
	$hashCode
() const

3496 {  
	`doHashCode
(); 
	}
}

3498 
ölöe
 
UBoﬁ


3499 
	gUnicodeSåög
::
	$isBogus
() const

3500 {  (
UBoﬁ
)(
fFœgs
 & 
kIsBogus
); 
	}
}

3502 
ölöe
 
UBoﬁ


3503 
	gUnicodeSåög
::
	$isWrôabÀ
() const

3504 {  (
UBoﬁ
)!(
fFœgs
&(
kO≥nGëBuf„r
|
kIsBogus
)); 
	}
}

3506 
ölöe
 
UBoﬁ


3507 
	gUnicodeSåög
::
	$isBuf„rWrôabÀ
() const

3509  (
UBoﬁ
)(

3510 !(
fFœgs
&(
kO≥nGëBuf„r
|
kIsBogus
|
kBuf„rIsRód⁄ly
)) &&

3511 (!(
fFœgs
&
kRefCou¡ed
Ë|| 
	`ªfCou¡
()==1));

3512 
	}
}

3514 
ölöe
 c⁄° 
UCh¨
 *

3515 
	gUnicodeSåög
::
	$gëBuf„r
() const {

3516 if(
fFœgs
&(
kIsBogus
|
kO≥nGëBuf„r
)) {

3518 } if(
fFœgs
&
kUsögSèckBuf„r
) {

3519  
fUni⁄
.
fSèckBuf„r
;

3521  
fUni⁄
.
fFõlds
.
fAºay
;

3523 
	}
}

3528 
ölöe
 
öt8_t


3529 
	gUnicodeSåög
::
	$doCom∑ª
(
öt32_t
 
°¨t
,

3530 
öt32_t
 
thisLígth
,

3531 c⁄° 
UnicodeSåög
& 
§cText
,

3532 
öt32_t
 
§cSèπ
,

3533 
öt32_t
 
§cLígth
) const

3535 if(
§cText
.
	`isBogus
()) {

3536  (
öt8_t
)!
	`isBogus
();

3538 
§cText
.
	`pöIndi˚s
(
§cSèπ
, 
§cLígth
);

3539  
	`doCom∑ª
(
°¨t
, 
thisLígth
, 
§cText
.
	`gëAºaySèπ
(), 
§cSèπ
, 
§cLígth
);

3541 
	}
}

3543 
ölöe
 
UBoﬁ


3544 
	gUnicodeSåög
::
›î©‹
=(c⁄° 
UnicodeSåög
& 
ãxt
) const

3546 if(
isBogus
()) {

3547  
ãxt
.
isBogus
();

3549 
öt32_t
 
	gÀn
 = 
Àngth
(), 
	gãxtLígth
 = 
ãxt
.length();

3551 !
	gãxt
.
isBogus
() &&

3552 
	gÀn
 =
ãxtLígth
 &&

3553 
doCom∑ª
(0, 
Àn
, 
ãxt
, 0, 
ãxtLígth
) == 0;

3557 
ölöe
 
UBoﬁ


3558 
	gUnicodeSåög
::
›î©‹
!(c⁄° 
UnicodeSåög
& 
ãxt
) const

3559 {  (! 
›î©‹
==(
ãxt
)); }

3561 
ölöe
 
UBoﬁ


3562 
	gUnicodeSåög
::
›î©‹
> (c⁄° 
UnicodeSåög
& 
ãxt
) const

3563 {  
doCom∑ª
(0, 
Àngth
(), 
ãxt
, 0,Åext.length()) == 1; }

3565 
ölöe
 
UBoﬁ


3566 
	gUnicodeSåög
::
›î©‹
< (c⁄° 
UnicodeSåög
& 
ãxt
) const

3567 {  
doCom∑ª
(0, 
Àngth
(), 
ãxt
, 0,Åext.length()) == -1; }

3569 
ölöe
 
UBoﬁ


3570 
	gUnicodeSåög
::
›î©‹
>(c⁄° 
UnicodeSåög
& 
ãxt
) const

3571 {  
doCom∑ª
(0, 
Àngth
(), 
ãxt
, 0,Åext.length()) != -1; }

3573 
ölöe
 
UBoﬁ


3574 
	gUnicodeSåög
::
›î©‹
<(c⁄° 
UnicodeSåög
& 
ãxt
) const

3575 {  
doCom∑ª
(0, 
Àngth
(), 
ãxt
, 0,Åext.length()) != 1; }

3577 
ölöe
 
öt8_t


3578 
	gUnicodeSåög
::
	$com∑ª
(c⁄° 
UnicodeSåög
& 
ãxt
) const

3579 {  
	`doCom∑ª
(0, 
	`Àngth
(), 
ãxt
, 0,Åext.Àngth()); 
	}
}

3581 
ölöe
 
öt8_t


3582 
	gUnicodeSåög
::
	$com∑ª
(
öt32_t
 
°¨t
,

3583 
öt32_t
 
_Àngth
,

3584 c⁄° 
UnicodeSåög
& 
§cText
) const

3585 {  
	`doCom∑ª
(
°¨t
, 
_Àngth
, 
§cText
, 0, srcText.
	`Àngth
()); 
	}
}

3587 
ölöe
 
öt8_t


3588 
	gUnicodeSåög
::
	$com∑ª
(c⁄° 
UCh¨
 *
§cCh¨s
,

3589 
öt32_t
 
§cLígth
) const

3590 {  
	`doCom∑ª
(0, 
	`Àngth
(), 
§cCh¨s
, 0, 
§cLígth
); 
	}
}

3592 
ölöe
 
öt8_t


3593 
	gUnicodeSåög
::
	$com∑ª
(
öt32_t
 
°¨t
,

3594 
öt32_t
 
_Àngth
,

3595 c⁄° 
UnicodeSåög
& 
§cText
,

3596 
öt32_t
 
§cSèπ
,

3597 
öt32_t
 
§cLígth
) const

3598 {  
	`doCom∑ª
(
°¨t
, 
_Àngth
, 
§cText
, 
§cSèπ
, 
§cLígth
); 
	}
}

3600 
ölöe
 
öt8_t


3601 
	gUnicodeSåög
::
	$com∑ª
(
öt32_t
 
°¨t
,

3602 
öt32_t
 
_Àngth
,

3603 c⁄° 
UCh¨
 *
§cCh¨s
) const

3604 {  
	`doCom∑ª
(
°¨t
, 
_Àngth
, 
§cCh¨s
, 0, _Àngth); 
	}
}

3606 
ölöe
 
öt8_t


3607 
	gUnicodeSåög
::
	$com∑ª
(
öt32_t
 
°¨t
,

3608 
öt32_t
 
_Àngth
,

3609 c⁄° 
UCh¨
 *
§cCh¨s
,

3610 
öt32_t
 
§cSèπ
,

3611 
öt32_t
 
§cLígth
) const

3612 {  
	`doCom∑ª
(
°¨t
, 
_Àngth
, 
§cCh¨s
, 
§cSèπ
, 
§cLígth
); 
	}
}

3614 
ölöe
 
öt8_t


3615 
	gUnicodeSåög
::
	$com∑ªBëwìn
(
öt32_t
 
°¨t
,

3616 
öt32_t
 
limô
,

3617 c⁄° 
UnicodeSåög
& 
§cText
,

3618 
öt32_t
 
§cSèπ
,

3619 
öt32_t
 
§cLimô
) const

3620 {  
	`doCom∑ª
(
°¨t
, 
limô
 - start,

3621 
§cText
, 
§cSèπ
, 
§cLimô
 - srcSèπ); 
	}
}

3623 
ölöe
 
öt8_t


3624 
	gUnicodeSåög
::
	$doCom∑ªCodePoötOrdî
(
öt32_t
 
°¨t
,

3625 
öt32_t
 
thisLígth
,

3626 c⁄° 
UnicodeSåög
& 
§cText
,

3627 
öt32_t
 
§cSèπ
,

3628 
öt32_t
 
§cLígth
) const

3630 if(
§cText
.
	`isBogus
()) {

3631  (
öt8_t
)!
	`isBogus
();

3633 
§cText
.
	`pöIndi˚s
(
§cSèπ
, 
§cLígth
);

3634  
	`doCom∑ªCodePoötOrdî
(
°¨t
, 
thisLígth
, 
§cText
.
	`gëAºaySèπ
(), 
§cSèπ
, 
§cLígth
);

3636 
	}
}

3638 
ölöe
 
öt8_t


3639 
	gUnicodeSåög
::
	$com∑ªCodePoötOrdî
(c⁄° 
UnicodeSåög
& 
ãxt
) const

3640 {  
	`doCom∑ªCodePoötOrdî
(0, 
	`Àngth
(), 
ãxt
, 0,Åext.Àngth()); 
	}
}

3642 
ölöe
 
öt8_t


3643 
	gUnicodeSåög
::
	$com∑ªCodePoötOrdî
(
öt32_t
 
°¨t
,

3644 
öt32_t
 
_Àngth
,

3645 c⁄° 
UnicodeSåög
& 
§cText
) const

3646 {  
	`doCom∑ªCodePoötOrdî
(
°¨t
, 
_Àngth
, 
§cText
, 0, srcText.
	`Àngth
()); 
	}
}

3648 
ölöe
 
öt8_t


3649 
	gUnicodeSåög
::
	$com∑ªCodePoötOrdî
(c⁄° 
UCh¨
 *
§cCh¨s
,

3650 
öt32_t
 
§cLígth
) const

3651 {  
	`doCom∑ªCodePoötOrdî
(0, 
	`Àngth
(), 
§cCh¨s
, 0, 
§cLígth
); 
	}
}

3653 
ölöe
 
öt8_t


3654 
	gUnicodeSåög
::
	$com∑ªCodePoötOrdî
(
öt32_t
 
°¨t
,

3655 
öt32_t
 
_Àngth
,

3656 c⁄° 
UnicodeSåög
& 
§cText
,

3657 
öt32_t
 
§cSèπ
,

3658 
öt32_t
 
§cLígth
) const

3659 {  
	`doCom∑ªCodePoötOrdî
(
°¨t
, 
_Àngth
, 
§cText
, 
§cSèπ
, 
§cLígth
); 
	}
}

3661 
ölöe
 
öt8_t


3662 
	gUnicodeSåög
::
	$com∑ªCodePoötOrdî
(
öt32_t
 
°¨t
,

3663 
öt32_t
 
_Àngth
,

3664 c⁄° 
UCh¨
 *
§cCh¨s
) const

3665 {  
	`doCom∑ªCodePoötOrdî
(
°¨t
, 
_Àngth
, 
§cCh¨s
, 0, _Àngth); 
	}
}

3667 
ölöe
 
öt8_t


3668 
	gUnicodeSåög
::
	$com∑ªCodePoötOrdî
(
öt32_t
 
°¨t
,

3669 
öt32_t
 
_Àngth
,

3670 c⁄° 
UCh¨
 *
§cCh¨s
,

3671 
öt32_t
 
§cSèπ
,

3672 
öt32_t
 
§cLígth
) const

3673 {  
	`doCom∑ªCodePoötOrdî
(
°¨t
, 
_Àngth
, 
§cCh¨s
, 
§cSèπ
, 
§cLígth
); 
	}
}

3675 
ölöe
 
öt8_t


3676 
	gUnicodeSåög
::
	$com∑ªCodePoötOrdîBëwìn
(
öt32_t
 
°¨t
,

3677 
öt32_t
 
limô
,

3678 c⁄° 
UnicodeSåög
& 
§cText
,

3679 
öt32_t
 
§cSèπ
,

3680 
öt32_t
 
§cLimô
) const

3681 {  
	`doCom∑ªCodePoötOrdî
(
°¨t
, 
limô
 - start,

3682 
§cText
, 
§cSèπ
, 
§cLimô
 - srcSèπ); 
	}
}

3684 
ölöe
 
öt8_t


3685 
	gUnicodeSåög
::
	$doCa£Com∑ª
(
öt32_t
 
°¨t
,

3686 
öt32_t
 
thisLígth
,

3687 c⁄° 
UnicodeSåög
 &
§cText
,

3688 
öt32_t
 
§cSèπ
,

3689 
öt32_t
 
§cLígth
,

3690 
uöt32_t
 
›ti⁄s
) const

3692 if(
§cText
.
	`isBogus
()) {

3693  (
öt8_t
)!
	`isBogus
();

3695 
§cText
.
	`pöIndi˚s
(
§cSèπ
, 
§cLígth
);

3696  
	`doCa£Com∑ª
(
°¨t
, 
thisLígth
, 
§cText
.
	`gëAºaySèπ
(), 
§cSèπ
, 
§cLígth
, 
›ti⁄s
);

3698 
	}
}

3700 
ölöe
 
öt8_t


3701 
	gUnicodeSåög
::
	$ˇ£Com∑ª
(c⁄° 
UnicodeSåög
 &
ãxt
, 
uöt32_t
 
›ti⁄s
) const {

3702  
	`doCa£Com∑ª
(0, 
	`Àngth
(), 
ãxt
, 0,Åext.Àngth(), 
›ti⁄s
);

3703 
	}
}

3705 
ölöe
 
öt8_t


3706 
	gUnicodeSåög
::
	$ˇ£Com∑ª
(
öt32_t
 
°¨t
,

3707 
öt32_t
 
_Àngth
,

3708 c⁄° 
UnicodeSåög
 &
§cText
,

3709 
uöt32_t
 
›ti⁄s
) const {

3710  
	`doCa£Com∑ª
(
°¨t
, 
_Àngth
, 
§cText
, 0, srcText.
	`Àngth
(), 
›ti⁄s
);

3711 
	}
}

3713 
ölöe
 
öt8_t


3714 
	gUnicodeSåög
::
	$ˇ£Com∑ª
(c⁄° 
UCh¨
 *
§cCh¨s
,

3715 
öt32_t
 
§cLígth
,

3716 
uöt32_t
 
›ti⁄s
) const {

3717  
	`doCa£Com∑ª
(0, 
	`Àngth
(), 
§cCh¨s
, 0, 
§cLígth
, 
›ti⁄s
);

3718 
	}
}

3720 
ölöe
 
öt8_t


3721 
	gUnicodeSåög
::
	$ˇ£Com∑ª
(
öt32_t
 
°¨t
,

3722 
öt32_t
 
_Àngth
,

3723 c⁄° 
UnicodeSåög
 &
§cText
,

3724 
öt32_t
 
§cSèπ
,

3725 
öt32_t
 
§cLígth
,

3726 
uöt32_t
 
›ti⁄s
) const {

3727  
	`doCa£Com∑ª
(
°¨t
, 
_Àngth
, 
§cText
, 
§cSèπ
, 
§cLígth
, 
›ti⁄s
);

3728 
	}
}

3730 
ölöe
 
öt8_t


3731 
	gUnicodeSåög
::
	$ˇ£Com∑ª
(
öt32_t
 
°¨t
,

3732 
öt32_t
 
_Àngth
,

3733 c⁄° 
UCh¨
 *
§cCh¨s
,

3734 
uöt32_t
 
›ti⁄s
) const {

3735  
	`doCa£Com∑ª
(
°¨t
, 
_Àngth
, 
§cCh¨s
, 0, _Àngth, 
›ti⁄s
);

3736 
	}
}

3738 
ölöe
 
öt8_t


3739 
	gUnicodeSåög
::
	$ˇ£Com∑ª
(
öt32_t
 
°¨t
,

3740 
öt32_t
 
_Àngth
,

3741 c⁄° 
UCh¨
 *
§cCh¨s
,

3742 
öt32_t
 
§cSèπ
,

3743 
öt32_t
 
§cLígth
,

3744 
uöt32_t
 
›ti⁄s
) const {

3745  
	`doCa£Com∑ª
(
°¨t
, 
_Àngth
, 
§cCh¨s
, 
§cSèπ
, 
§cLígth
, 
›ti⁄s
);

3746 
	}
}

3748 
ölöe
 
öt8_t


3749 
	gUnicodeSåög
::
	$ˇ£Com∑ªBëwìn
(
öt32_t
 
°¨t
,

3750 
öt32_t
 
limô
,

3751 c⁄° 
UnicodeSåög
 &
§cText
,

3752 
öt32_t
 
§cSèπ
,

3753 
öt32_t
 
§cLimô
,

3754 
uöt32_t
 
›ti⁄s
) const {

3755  
	`doCa£Com∑ª
(
°¨t
, 
limô
 - sèπ, 
§cText
, 
§cSèπ
, 
§cLimô
 - srcSèπ, 
›ti⁄s
);

3756 
	}
}

3758 
ölöe
 
öt32_t


3759 
	gUnicodeSåög
::
	$ödexOf
(c⁄° 
UnicodeSåög
& 
§cText
,

3760 
öt32_t
 
§cSèπ
,

3761 
öt32_t
 
§cLígth
,

3762 
öt32_t
 
°¨t
,

3763 
öt32_t
 
_Àngth
) const

3765 if(!
§cText
.
	`isBogus
()) {

3766 
§cText
.
	`pöIndi˚s
(
§cSèπ
, 
§cLígth
);

3767 if(
§cLígth
 > 0) {

3768  
	`ödexOf
(
§cText
.
	`gëAºaySèπ
(), 
§cSèπ
, 
§cLígth
, 
°¨t
, 
_Àngth
);

3772 
	}
}

3774 
ölöe
 
öt32_t


3775 
	gUnicodeSåög
::
	$ödexOf
(c⁄° 
UnicodeSåög
& 
ãxt
) const

3776 {  
	`ödexOf
(
ãxt
, 0,Åext.
	`Àngth
(), 0,Üígth()); 
	}
}

3778 
ölöe
 
öt32_t


3779 
	gUnicodeSåög
::
	$ödexOf
(c⁄° 
UnicodeSåög
& 
ãxt
,

3780 
öt32_t
 
°¨t
) const {

3781 
	`pöIndex
(
°¨t
);

3782  
	`ödexOf
(
ãxt
, 0,Åext.
	`Àngth
(), 
°¨t
,Üength() - start);

3783 
	}
}

3785 
ölöe
 
öt32_t


3786 
	gUnicodeSåög
::
	$ödexOf
(c⁄° 
UnicodeSåög
& 
ãxt
,

3787 
öt32_t
 
°¨t
,

3788 
öt32_t
 
_Àngth
) const

3789 {  
	`ödexOf
(
ãxt
, 0,Åext.
	`Àngth
(), 
°¨t
, 
_Àngth
); 
	}
}

3791 
ölöe
 
öt32_t


3792 
	gUnicodeSåög
::
	$ödexOf
(c⁄° 
UCh¨
 *
§cCh¨s
,

3793 
öt32_t
 
§cLígth
,

3794 
öt32_t
 
°¨t
) const {

3795 
	`pöIndex
(
°¨t
);

3796  
	`ödexOf
(
§cCh¨s
, 0, 
§cLígth
, 
°¨t
, 
	`Àngth
() - start);

3797 
	}
}

3799 
ölöe
 
öt32_t


3800 
	gUnicodeSåög
::
	$ödexOf
(c⁄° 
UCh¨
 *
§cCh¨s
,

3801 
öt32_t
 
§cLígth
,

3802 
öt32_t
 
°¨t
,

3803 
öt32_t
 
_Àngth
) const

3804 {  
	`ödexOf
(
§cCh¨s
, 0, 
§cLígth
, 
°¨t
, 
_Àngth
); 
	}
}

3806 
ölöe
 
öt32_t


3807 
	gUnicodeSåög
::
	$ödexOf
(
UCh¨
 
c
,

3808 
öt32_t
 
°¨t
,

3809 
öt32_t
 
_Àngth
) const

3810 {  
	`doIndexOf
(
c
, 
°¨t
, 
_Àngth
); 
	}
}

3812 
ölöe
 
öt32_t


3813 
	gUnicodeSåög
::
	$ödexOf
(
UCh¨32
 
c
,

3814 
öt32_t
 
°¨t
,

3815 
öt32_t
 
_Àngth
) const

3816 {  
	`doIndexOf
(
c
, 
°¨t
, 
_Àngth
); 
	}
}

3818 
ölöe
 
öt32_t


3819 
	gUnicodeSåög
::
	$ödexOf
(
UCh¨
 
c
) const

3820 {  
	`doIndexOf
(
c
, 0, 
	`Àngth
()); 
	}
}

3822 
ölöe
 
öt32_t


3823 
	gUnicodeSåög
::
	$ödexOf
(
UCh¨32
 
c
) const

3824 {  
	`ödexOf
(
c
, 0, 
	`Àngth
()); 
	}
}

3826 
ölöe
 
öt32_t


3827 
	gUnicodeSåög
::
	$ödexOf
(
UCh¨
 
c
,

3828 
öt32_t
 
°¨t
) const {

3829 
	`pöIndex
(
°¨t
);

3830  
	`doIndexOf
(
c
, 
°¨t
, 
	`Àngth
() - start);

3831 
	}
}

3833 
ölöe
 
öt32_t


3834 
	gUnicodeSåög
::
	$ödexOf
(
UCh¨32
 
c
,

3835 
öt32_t
 
°¨t
) const {

3836 
	`pöIndex
(
°¨t
);

3837  
	`ödexOf
(
c
, 
°¨t
, 
	`Àngth
() - start);

3838 
	}
}

3840 
ölöe
 
öt32_t


3841 
	gUnicodeSåög
::
	$œ°IndexOf
(c⁄° 
UCh¨
 *
§cCh¨s
,

3842 
öt32_t
 
§cLígth
,

3843 
öt32_t
 
°¨t
,

3844 
öt32_t
 
_Àngth
) const

3845 {  
	`œ°IndexOf
(
§cCh¨s
, 0, 
§cLígth
, 
°¨t
, 
_Àngth
); 
	}
}

3847 
ölöe
 
öt32_t


3848 
	gUnicodeSåög
::
	$œ°IndexOf
(c⁄° 
UCh¨
 *
§cCh¨s
,

3849 
öt32_t
 
§cLígth
,

3850 
öt32_t
 
°¨t
) const {

3851 
	`pöIndex
(
°¨t
);

3852  
	`œ°IndexOf
(
§cCh¨s
, 0, 
§cLígth
, 
°¨t
, 
	`Àngth
() - start);

3853 
	}
}

3855 
ölöe
 
öt32_t


3856 
	gUnicodeSåög
::
	$œ°IndexOf
(c⁄° 
UnicodeSåög
& 
§cText
,

3857 
öt32_t
 
§cSèπ
,

3858 
öt32_t
 
§cLígth
,

3859 
öt32_t
 
°¨t
,

3860 
öt32_t
 
_Àngth
) const

3862 if(!
§cText
.
	`isBogus
()) {

3863 
§cText
.
	`pöIndi˚s
(
§cSèπ
, 
§cLígth
);

3864 if(
§cLígth
 > 0) {

3865  
	`œ°IndexOf
(
§cText
.
	`gëAºaySèπ
(), 
§cSèπ
, 
§cLígth
, 
°¨t
, 
_Àngth
);

3869 
	}
}

3871 
ölöe
 
öt32_t


3872 
	gUnicodeSåög
::
	$œ°IndexOf
(c⁄° 
UnicodeSåög
& 
ãxt
,

3873 
öt32_t
 
°¨t
,

3874 
öt32_t
 
_Àngth
) const

3875 {  
	`œ°IndexOf
(
ãxt
, 0,Åext.
	`Àngth
(), 
°¨t
, 
_Àngth
); 
	}
}

3877 
ölöe
 
öt32_t


3878 
	gUnicodeSåög
::
	$œ°IndexOf
(c⁄° 
UnicodeSåög
& 
ãxt
,

3879 
öt32_t
 
°¨t
) const {

3880 
	`pöIndex
(
°¨t
);

3881  
	`œ°IndexOf
(
ãxt
, 0,Åext.
	`Àngth
(), 
°¨t
,Üength() - start);

3882 
	}
}

3884 
ölöe
 
öt32_t


3885 
	gUnicodeSåög
::
	$œ°IndexOf
(c⁄° 
UnicodeSåög
& 
ãxt
) const

3886 {  
	`œ°IndexOf
(
ãxt
, 0,Åext.
	`Àngth
(), 0,Üígth()); 
	}
}

3888 
ölöe
 
öt32_t


3889 
	gUnicodeSåög
::
	$œ°IndexOf
(
UCh¨
 
c
,

3890 
öt32_t
 
°¨t
,

3891 
öt32_t
 
_Àngth
) const

3892 {  
	`doLa°IndexOf
(
c
, 
°¨t
, 
_Àngth
); 
	}
}

3894 
ölöe
 
öt32_t


3895 
	gUnicodeSåög
::
	$œ°IndexOf
(
UCh¨32
 
c
,

3896 
öt32_t
 
°¨t
,

3897 
öt32_t
 
_Àngth
) const {

3898  
	`doLa°IndexOf
(
c
, 
°¨t
, 
_Àngth
);

3899 
	}
}

3901 
ölöe
 
öt32_t


3902 
	gUnicodeSåög
::
	$œ°IndexOf
(
UCh¨
 
c
) const

3903 {  
	`doLa°IndexOf
(
c
, 0, 
	`Àngth
()); 
	}
}

3905 
ölöe
 
öt32_t


3906 
	gUnicodeSåög
::
	$œ°IndexOf
(
UCh¨32
 
c
) const {

3907  
	`œ°IndexOf
(
c
, 0, 
	`Àngth
());

3908 
	}
}

3910 
ölöe
 
öt32_t


3911 
	gUnicodeSåög
::
	$œ°IndexOf
(
UCh¨
 
c
,

3912 
öt32_t
 
°¨t
) const {

3913 
	`pöIndex
(
°¨t
);

3914  
	`doLa°IndexOf
(
c
, 
°¨t
, 
	`Àngth
() - start);

3915 
	}
}

3917 
ölöe
 
öt32_t


3918 
	gUnicodeSåög
::
	$œ°IndexOf
(
UCh¨32
 
c
,

3919 
öt32_t
 
°¨t
) const {

3920 
	`pöIndex
(
°¨t
);

3921  
	`œ°IndexOf
(
c
, 
°¨t
, 
	`Àngth
() - start);

3922 
	}
}

3924 
ölöe
 
UBoﬁ


3925 
	gUnicodeSåög
::
	$°¨tsWôh
(c⁄° 
UnicodeSåög
& 
ãxt
) const

3926 {  
	`com∑ª
(0, 
ãxt
.
	`Àngth
(),Åext, 0,Åext.Àngth()Ë=0; 
	}
}

3928 
ölöe
 
UBoﬁ


3929 
	gUnicodeSåög
::
	$°¨tsWôh
(c⁄° 
UnicodeSåög
& 
§cText
,

3930 
öt32_t
 
§cSèπ
,

3931 
öt32_t
 
§cLígth
) const

3932 {  
	`doCom∑ª
(0, 
§cLígth
, 
§cText
, 
§cSèπ
, srcLígthË=0; 
	}
}

3934 
ölöe
 
UBoﬁ


3935 
	gUnicodeSåög
::
	$°¨tsWôh
(c⁄° 
UCh¨
 *
§cCh¨s
,

3936 
öt32_t
 
§cLígth
) const

3937 {  
	`doCom∑ª
(0, 
§cLígth
, 
§cCh¨s
, 0, srcLígthË=0; 
	}
}

3939 
ölöe
 
UBoﬁ


3940 
	gUnicodeSåög
::
	$°¨tsWôh
(c⁄° 
UCh¨
 *
§cCh¨s
,

3941 
öt32_t
 
§cSèπ
,

3942 
öt32_t
 
§cLígth
) const

3943 {  
	`doCom∑ª
(0, 
§cLígth
, 
§cCh¨s
, 
§cSèπ
, srcLígthË=0;
	}
}

3945 
ölöe
 
UBoﬁ


3946 
	gUnicodeSåög
::
	$ídsWôh
(c⁄° 
UnicodeSåög
& 
ãxt
) const

3947 {  
	`doCom∑ª
(
	`Àngth
(Ë- 
ãxt
.length(),Åext.length(),

3948 
ãxt
, 0,Åext.
	`Àngth
()Ë=0; 
	}
}

3950 
ölöe
 
UBoﬁ


3951 
	gUnicodeSåög
::
	$ídsWôh
(c⁄° 
UnicodeSåög
& 
§cText
,

3952 
öt32_t
 
§cSèπ
,

3953 
öt32_t
 
§cLígth
) const {

3954 
§cText
.
	`pöIndi˚s
(
§cSèπ
, 
§cLígth
);

3955  
	`doCom∑ª
(
	`Àngth
(Ë- 
§cLígth
, srcLength,

3956 
§cText
, 
§cSèπ
, 
§cLígth
) == 0;

3957 
	}
}

3959 
ölöe
 
UBoﬁ


3960 
	gUnicodeSåög
::
	$ídsWôh
(c⁄° 
UCh¨
 *
§cCh¨s
,

3961 
öt32_t
 
§cLígth
) const {

3962 if(
§cLígth
 < 0) {

3963 
§cLígth
 = 
	`u_°æí
(
§cCh¨s
);

3965  
	`doCom∑ª
(
	`Àngth
(Ë- 
§cLígth
, srcLength,

3966 
§cCh¨s
, 0, 
§cLígth
) == 0;

3967 
	}
}

3969 
ölöe
 
UBoﬁ


3970 
	gUnicodeSåög
::
	$ídsWôh
(c⁄° 
UCh¨
 *
§cCh¨s
,

3971 
öt32_t
 
§cSèπ
,

3972 
öt32_t
 
§cLígth
) const {

3973 if(
§cLígth
 < 0) {

3974 
§cLígth
 = 
	`u_°æí
(
§cCh¨s
 + 
§cSèπ
);

3976  
	`doCom∑ª
(
	`Àngth
(Ë- 
§cLígth
, srcLength,

3977 
§cCh¨s
, 
§cSèπ
, 
§cLígth
) == 0;

3978 
	}
}

3983 
ölöe
 
	gUnicodeSåög
&

3984 
	gUnicodeSåög
::
	$ª∂a˚
(
öt32_t
 
°¨t
,

3985 
öt32_t
 
_Àngth
,

3986 c⁄° 
UnicodeSåög
& 
§cText
)

3987 {  
	`doRïœ˚
(
°¨t
, 
_Àngth
, 
§cText
, 0, srcText.
	`Àngth
()); 
	}
}

3989 
ölöe
 
	gUnicodeSåög
&

3990 
	gUnicodeSåög
::
	$ª∂a˚
(
öt32_t
 
°¨t
,

3991 
öt32_t
 
_Àngth
,

3992 c⁄° 
UnicodeSåög
& 
§cText
,

3993 
öt32_t
 
§cSèπ
,

3994 
öt32_t
 
§cLígth
)

3995 {  
	`doRïœ˚
(
°¨t
, 
_Àngth
, 
§cText
, 
§cSèπ
, 
§cLígth
); 
	}
}

3997 
ölöe
 
	gUnicodeSåög
&

3998 
	gUnicodeSåög
::
	$ª∂a˚
(
öt32_t
 
°¨t
,

3999 
öt32_t
 
_Àngth
,

4000 c⁄° 
UCh¨
 *
§cCh¨s
,

4001 
öt32_t
 
§cLígth
)

4002 {  
	`doRïœ˚
(
°¨t
, 
_Àngth
, 
§cCh¨s
, 0, 
§cLígth
); 
	}
}

4004 
ölöe
 
	gUnicodeSåög
&

4005 
	gUnicodeSåög
::
	$ª∂a˚
(
öt32_t
 
°¨t
,

4006 
öt32_t
 
_Àngth
,

4007 c⁄° 
UCh¨
 *
§cCh¨s
,

4008 
öt32_t
 
§cSèπ
,

4009 
öt32_t
 
§cLígth
)

4010 {  
	`doRïœ˚
(
°¨t
, 
_Àngth
, 
§cCh¨s
, 
§cSèπ
, 
§cLígth
); 
	}
}

4012 
ölöe
 
	gUnicodeSåög
&

4013 
	gUnicodeSåög
::
	$ª∂a˚
(
öt32_t
 
°¨t
,

4014 
öt32_t
 
_Àngth
,

4015 
UCh¨
 
§cCh¨
)

4016 {  
	`doRïœ˚
(
°¨t
, 
_Àngth
, &
§cCh¨
, 0, 1); 
	}
}

4018 
ölöe
 
	gUnicodeSåög
&

4019 
	gUnicodeSåög
::
	$ª∂a˚
(
öt32_t
 
°¨t
,

4020 
öt32_t
 
_Àngth
,

4021 
UCh¨32
 
§cCh¨
) {

4022 
UCh¨
 
buf„r
[
U16_MAX_LENGTH
];

4023 
öt32_t
 
cou¡
 = 0;

4024 
UBoﬁ
 
isEº‹
 = 
FALSE
;

4025 
	`U16_APPEND
(
buf„r
, 
cou¡
, 
U16_MAX_LENGTH
, 
§cCh¨
, 
isEº‹
);

4026  
	`doRïœ˚
(
°¨t
, 
_Àngth
, 
buf„r
, 0, 
cou¡
);

4027 
	}
}

4029 
ölöe
 
	gUnicodeSåög
&

4030 
	gUnicodeSåög
::
	$ª∂a˚Bëwìn
(
öt32_t
 
°¨t
,

4031 
öt32_t
 
limô
,

4032 c⁄° 
UnicodeSåög
& 
§cText
)

4033 {  
	`doRïœ˚
(
°¨t
, 
limô
 - sèπ, 
§cText
, 0, srcText.
	`Àngth
()); 
	}
}

4035 
ölöe
 
	gUnicodeSåög
&

4036 
	gUnicodeSåög
::
	$ª∂a˚Bëwìn
(
öt32_t
 
°¨t
,

4037 
öt32_t
 
limô
,

4038 c⁄° 
UnicodeSåög
& 
§cText
,

4039 
öt32_t
 
§cSèπ
,

4040 
öt32_t
 
§cLimô
)

4041 {  
	`doRïœ˚
(
°¨t
, 
limô
 - sèπ, 
§cText
, 
§cSèπ
, 
§cLimô
 - srcSèπ); 
	}
}

4043 
ölöe
 
	gUnicodeSåög
&

4044 
	gUnicodeSåög
::
	$födAndRïœ˚
(c⁄° 
UnicodeSåög
& 
ﬁdText
,

4045 c⁄° 
UnicodeSåög
& 
√wText
)

4046 {  
	`födAndRïœ˚
(0, 
	`Àngth
(), 
ﬁdText
, 0, oldText.length(),

4047 
√wText
, 0,ÇewText.
	`Àngth
()); 
	}
}

4049 
ölöe
 
	gUnicodeSåög
&

4050 
	gUnicodeSåög
::
	$födAndRïœ˚
(
öt32_t
 
°¨t
,

4051 
öt32_t
 
_Àngth
,

4052 c⁄° 
UnicodeSåög
& 
ﬁdText
,

4053 c⁄° 
UnicodeSåög
& 
√wText
)

4054 {  
	`födAndRïœ˚
(
°¨t
, 
_Àngth
, 
ﬁdText
, 0, oldText.
	`Àngth
(),

4055 
√wText
, 0,ÇewText.
	`Àngth
()); 
	}
}

4060 
ölöe
 

4061 
	gUnicodeSåög
::
	$doExåa˘
(
öt32_t
 
°¨t
,

4062 
öt32_t
 
_Àngth
,

4063 
UnicodeSåög
& 
èrgë
) const

4064 { 
èrgë
.
	`ª∂a˚
(0,Å¨gë.
	`Àngth
(), *
this
, 
°¨t
, 
_Àngth
); 
	}
}

4066 
ölöe
 

4067 
	gUnicodeSåög
::
	$exåa˘
(
öt32_t
 
°¨t
,

4068 
öt32_t
 
_Àngth
,

4069 
UCh¨
 *
èrgë
,

4070 
öt32_t
 
èrgëSèπ
) const

4071 { 
	`doExåa˘
(
°¨t
, 
_Àngth
, 
èrgë
, 
èrgëSèπ
); 
	}
}

4073 
ölöe
 

4074 
	gUnicodeSåög
::
	$exåa˘
(
öt32_t
 
°¨t
,

4075 
öt32_t
 
_Àngth
,

4076 
UnicodeSåög
& 
èrgë
) const

4077 { 
	`doExåa˘
(
°¨t
, 
_Àngth
, 
èrgë
); 
	}
}

4079 #i‡!
UCONFIG_NO_CONVERSION


4081 
ölöe
 
öt32_t


4082 
	gUnicodeSåög
::
	$exåa˘
(
öt32_t
 
°¨t
,

4083 
öt32_t
 
_Àngth
,

4084 *
d°
,

4085 c⁄° *
codïage
) const

4089 #i‡
	`deföed
(
__GNUC__
)

4092  
	`exåa˘
(
°¨t
, 
_Àngth
, 
d°
, d°!=0 ? ((d° >(*)((
size_t
)-1Ë- 
UINT32_MAX
Ë? (((*)UINT32_MAXË- d°Ë: UINT32_MAXË: 0, 
codïage
);

4094  
	`exåa˘
(
°¨t
, 
_Àngth
, 
d°
, d°!=0 ? 0xfffffff‡: 0, 
codïage
);

4096 
	}
}

4100 
ölöe
 

4101 
	gUnicodeSåög
::
	$exåa˘Bëwìn
(
öt32_t
 
°¨t
,

4102 
öt32_t
 
limô
,

4103 
UCh¨
 *
d°
,

4104 
öt32_t
 
d°Sèπ
) const {

4105 
	`pöIndex
(
°¨t
);

4106 
	`pöIndex
(
limô
);

4107 
	`doExåa˘
(
°¨t
, 
limô
 - sèπ, 
d°
, 
d°Sèπ
);

4108 
	}
}

4110 
ölöe
 
UnicodeSåög


4111 
	gUnicodeSåög
::
	$ãmpSubSåögBëwìn
(
öt32_t
 
°¨t
, i¡32_à
limô
) const {

4112  
	`ãmpSubSåög
(
°¨t
, 
limô
 - start);

4113 
	}
}

4115 
ölöe
 
UCh¨


4116 
	gUnicodeSåög
::
	$doCh¨At
(
öt32_t
 
off£t
) const

4118 if((
uöt32_t
)
off£t
 < (uöt32_t)
	`Àngth
()) {

4119  
	`gëAºaySèπ
()[
off£t
];

4121  
kInvÆidUCh¨
;

4123 
	}
}

4125 
ölöe
 
UCh¨


4126 
	gUnicodeSåög
::
	$ch¨At
(
öt32_t
 
off£t
) const

4127 {  
	`doCh¨At
(
off£t
); 
	}
}

4129 
ölöe
 
UCh¨


4130 
	gUnicodeSåög
::
›î©‹
[] (
öt32_t
 
off£t
) const

4131 {  
doCh¨At
(
off£t
); }

4133 
ölöe
 
UCh¨32


4134 
	gUnicodeSåög
::
	$ch¨32At
(
öt32_t
 
off£t
) const

4136 
öt32_t
 
Àn
 = 
	`Àngth
();

4137 if((
uöt32_t
)
off£t
 < (uöt32_t)
Àn
) {

4138 c⁄° 
UCh¨
 *
¨øy
 = 
	`gëAºaySèπ
();

4139 
UCh¨32
 
c
;

4140 
	`U16_GET
(
¨øy
, 0, 
off£t
, 
Àn
, 
c
);

4141  
c
;

4143  
kInvÆidUCh¨
;

4145 
	}
}

4147 
ölöe
 
öt32_t


4148 
	gUnicodeSåög
::
	$gëCh¨32Sèπ
(
öt32_t
 
off£t
) const {

4149 if((
uöt32_t
)
off£t
 < (uöt32_t)
	`Àngth
()) {

4150 c⁄° 
UCh¨
 *
¨øy
 = 
	`gëAºaySèπ
();

4151 
	`U16_SET_CP_START
(
¨øy
, 0, 
off£t
);

4152  
off£t
;

4156 
	}
}

4158 
ölöe
 
öt32_t


4159 
	gUnicodeSåög
::
	$gëCh¨32Limô
(
öt32_t
 
off£t
) const {

4160 
öt32_t
 
Àn
 = 
	`Àngth
();

4161 if((
uöt32_t
)
off£t
 < (uöt32_t)
Àn
) {

4162 c⁄° 
UCh¨
 *
¨øy
 = 
	`gëAºaySèπ
();

4163 
	`U16_SET_CP_LIMIT
(
¨øy
, 0, 
off£t
, 
Àn
);

4164  
off£t
;

4166  
Àn
;

4168 
	}
}

4170 
ölöe
 
UBoﬁ


4171 
	gUnicodeSåög
::
	$isEm±y
() const {

4172  
fSh‹tLígth
 == 0;

4173 
	}
}

4178 
ölöe
 

4179 
	gUnicodeSåög
::
	$£tLígth
(
öt32_t
 
Àn
) {

4180 if(
Àn
 <= 127) {

4181 
fSh‹tLígth
 = (
öt8_t
)
Àn
;

4183 
fSh‹tLígth
 = (
öt8_t
)-1;

4184 
fUni⁄
.
fFõlds
.
fLígth
 = 
Àn
;

4186 
	}
}

4188 
ölöe
 

4189 
	gUnicodeSåög
::
	$£tToEm±y
() {

4190 
fSh‹tLígth
 = 0;

4191 
fFœgs
 = 
kSh‹tSåög
;

4192 
	}
}

4194 
ölöe
 

4195 
	gUnicodeSåög
::
	$£tAºay
(
UCh¨
 *
¨øy
, 
öt32_t
 
Àn
, i¡32_à
ˇ∑côy
) {

4196 
	`£tLígth
(
Àn
);

4197 
fUni⁄
.
fFõlds
.
fAºay
 = 
¨øy
;

4198 
fUni⁄
.
fFõlds
.
fC≠acôy
 = 
ˇ∑côy
;

4199 
	}
}

4201 
ölöe
 c⁄° 
UCh¨
 *

4202 
	gUnicodeSåög
::
	$gëTîmö©edBuf„r
() {

4203 if(!
	`isWrôabÀ
()) {

4206 
UCh¨
 *
¨øy
 = 
	`gëAºaySèπ
();

4207 
öt32_t
 
Àn
 = 
	`Àngth
();

4208 if(
Àn
 < 
	`gëC≠acôy
(Ë&& ((
fFœgs
&
kRefCou¡ed
Ë=0 || 
	`ªfCou¡
() == 1)) {

4215 if(!(
fFœgs
&
kBuf„rIsRód⁄ly
)) {

4230 
¨øy
[
Àn
] = 0;

4232  
¨øy
;

4233 } if(
	`˛⁄eAºayIfNìded
(
Àn
+1)) {

4234 
¨øy
 = 
	`gëAºaySèπ
();

4235 
¨øy
[
Àn
] = 0;

4236  
¨øy
;

4241 
	}
}

4243 
ölöe
 
	gUnicodeSåög
&

4244 
	gUnicodeSåög
::
›î©‹
(
UCh¨
 
ch
)

4245 {  
doRïœ˚
(0, 
Àngth
(), &
ch
, 0, 1); }

4247 
ölöe
 
	gUnicodeSåög
&

4248 
	gUnicodeSåög
::
›î©‹
(
UCh¨32
 
ch
)

4249 {  
ª∂a˚
(0, 
Àngth
(), 
ch
); }

4251 
ölöe
 
	gUnicodeSåög
&

4252 
	gUnicodeSåög
::
	$£tTo
(c⁄° 
UnicodeSåög
& 
§cText
,

4253 
öt32_t
 
§cSèπ
,

4254 
öt32_t
 
§cLígth
)

4256 
	`unBogus
();

4257  
	`doRïœ˚
(0, 
	`Àngth
(), 
§cText
, 
§cSèπ
, 
§cLígth
);

4258 
	}
}

4260 
ölöe
 
	gUnicodeSåög
&

4261 
	gUnicodeSåög
::
	$£tTo
(c⁄° 
UnicodeSåög
& 
§cText
,

4262 
öt32_t
 
§cSèπ
)

4264 
	`unBogus
();

4265 
§cText
.
	`pöIndex
(
§cSèπ
);

4266  
	`doRïœ˚
(0, 
	`Àngth
(), 
§cText
, 
§cSèπ
, srcText.length() - srcStart);

4267 
	}
}

4269 
ölöe
 
	gUnicodeSåög
&

4270 
	gUnicodeSåög
::
	$£tTo
(c⁄° 
UnicodeSåög
& 
§cText
)

4272 
	`unBogus
();

4273  
	`doRïœ˚
(0, 
	`Àngth
(), 
§cText
, 0, srcText.length());

4274 
	}
}

4276 
ölöe
 
	gUnicodeSåög
&

4277 
	gUnicodeSåög
::
	$£tTo
(c⁄° 
UCh¨
 *
§cCh¨s
,

4278 
öt32_t
 
§cLígth
)

4280 
	`unBogus
();

4281  
	`doRïœ˚
(0, 
	`Àngth
(), 
§cCh¨s
, 0, 
§cLígth
);

4282 
	}
}

4284 
ölöe
 
	gUnicodeSåög
&

4285 
	gUnicodeSåög
::
	$£tTo
(
UCh¨
 
§cCh¨
)

4287 
	`unBogus
();

4288  
	`doRïœ˚
(0, 
	`Àngth
(), &
§cCh¨
, 0, 1);

4289 
	}
}

4291 
ölöe
 
	gUnicodeSåög
&

4292 
	gUnicodeSåög
::
	$£tTo
(
UCh¨32
 
§cCh¨
)

4294 
	`unBogus
();

4295  
	`ª∂a˚
(0, 
	`Àngth
(), 
§cCh¨
);

4296 
	}
}

4298 
ölöe
 
	gUnicodeSåög
&

4299 
	gUnicodeSåög
::
	$≠≥nd
(c⁄° 
UnicodeSåög
& 
§cText
,

4300 
öt32_t
 
§cSèπ
,

4301 
öt32_t
 
§cLígth
)

4302 {  
	`doRïœ˚
(
	`Àngth
(), 0, 
§cText
, 
§cSèπ
, 
§cLígth
); 
	}
}

4304 
ölöe
 
	gUnicodeSåög
&

4305 
	gUnicodeSåög
::
	$≠≥nd
(c⁄° 
UnicodeSåög
& 
§cText
)

4306 {  
	`doRïœ˚
(
	`Àngth
(), 0, 
§cText
, 0, srcText.Àngth()); 
	}
}

4308 
ölöe
 
	gUnicodeSåög
&

4309 
	gUnicodeSåög
::
	$≠≥nd
(c⁄° 
UCh¨
 *
§cCh¨s
,

4310 
öt32_t
 
§cSèπ
,

4311 
öt32_t
 
§cLígth
)

4312 {  
	`doRïœ˚
(
	`Àngth
(), 0, 
§cCh¨s
, 
§cSèπ
, 
§cLígth
); 
	}
}

4314 
ölöe
 
	gUnicodeSåög
&

4315 
	gUnicodeSåög
::
	$≠≥nd
(c⁄° 
UCh¨
 *
§cCh¨s
,

4316 
öt32_t
 
§cLígth
)

4317 {  
	`doRïœ˚
(
	`Àngth
(), 0, 
§cCh¨s
, 0, 
§cLígth
); 
	}
}

4319 
ölöe
 
	gUnicodeSåög
&

4320 
	gUnicodeSåög
::
	$≠≥nd
(
UCh¨
 
§cCh¨
)

4321 {  
	`doRïœ˚
(
	`Àngth
(), 0, &
§cCh¨
, 0, 1); 
	}
}

4323 
ölöe
 
	gUnicodeSåög
&

4324 
	gUnicodeSåög
::
	$≠≥nd
(
UCh¨32
 
§cCh¨
) {

4325 
UCh¨
 
buf„r
[
U16_MAX_LENGTH
];

4326 
öt32_t
 
_Àngth
 = 0;

4327 
UBoﬁ
 
isEº‹
 = 
FALSE
;

4328 
	`U16_APPEND
(
buf„r
, 
_Àngth
, 
U16_MAX_LENGTH
, 
§cCh¨
, 
isEº‹
);

4329  
	`doRïœ˚
(
	`Àngth
(), 0, 
buf„r
, 0, 
_Àngth
);

4330 
	}
}

4332 
ölöe
 
	gUnicodeSåög
&

4333 
	gUnicodeSåög
::
›î©‹
+(
UCh¨
 
ch
)

4334 {  
doRïœ˚
(
Àngth
(), 0, &
ch
, 0, 1); }

4336 
ölöe
 
	gUnicodeSåög
&

4337 
	gUnicodeSåög
::
›î©‹
+(
UCh¨32
 
ch
) {

4338  
≠≥nd
(
ch
);

4341 
ölöe
 
	gUnicodeSåög
&

4342 
	gUnicodeSåög
::
›î©‹
+(c⁄° 
UnicodeSåög
& 
§cText
)

4343 {  
doRïœ˚
(
Àngth
(), 0, 
§cText
, 0, srcText.length()); }

4345 
ölöe
 
	gUnicodeSåög
&

4346 
	gUnicodeSåög
::
	$ö£π
(
öt32_t
 
°¨t
,

4347 c⁄° 
UnicodeSåög
& 
§cText
,

4348 
öt32_t
 
§cSèπ
,

4349 
öt32_t
 
§cLígth
)

4350 {  
	`doRïœ˚
(
°¨t
, 0, 
§cText
, 
§cSèπ
, 
§cLígth
); 
	}
}

4352 
ölöe
 
	gUnicodeSåög
&

4353 
	gUnicodeSåög
::
	$ö£π
(
öt32_t
 
°¨t
,

4354 c⁄° 
UnicodeSåög
& 
§cText
)

4355 {  
	`doRïœ˚
(
°¨t
, 0, 
§cText
, 0, srcText.
	`Àngth
()); 
	}
}

4357 
ölöe
 
	gUnicodeSåög
&

4358 
	gUnicodeSåög
::
	$ö£π
(
öt32_t
 
°¨t
,

4359 c⁄° 
UCh¨
 *
§cCh¨s
,

4360 
öt32_t
 
§cSèπ
,

4361 
öt32_t
 
§cLígth
)

4362 {  
	`doRïœ˚
(
°¨t
, 0, 
§cCh¨s
, 
§cSèπ
, 
§cLígth
); 
	}
}

4364 
ölöe
 
	gUnicodeSåög
&

4365 
	gUnicodeSåög
::
	$ö£π
(
öt32_t
 
°¨t
,

4366 c⁄° 
UCh¨
 *
§cCh¨s
,

4367 
öt32_t
 
§cLígth
)

4368 {  
	`doRïœ˚
(
°¨t
, 0, 
§cCh¨s
, 0, 
§cLígth
); 
	}
}

4370 
ölöe
 
	gUnicodeSåög
&

4371 
	gUnicodeSåög
::
	$ö£π
(
öt32_t
 
°¨t
,

4372 
UCh¨
 
§cCh¨
)

4373 {  
	`doRïœ˚
(
°¨t
, 0, &
§cCh¨
, 0, 1); 
	}
}

4375 
ölöe
 
	gUnicodeSåög
&

4376 
	gUnicodeSåög
::
	$ö£π
(
öt32_t
 
°¨t
,

4377 
UCh¨32
 
§cCh¨
)

4378 {  
	`ª∂a˚
(
°¨t
, 0, 
§cCh¨
); 
	}
}

4381 
ölöe
 
	gUnicodeSåög
&

4382 
	gUnicodeSåög
::
	$ªmove
()

4387 if(
fFœgs
 & (
kIsBogus
|
kBuf„rIsRód⁄ly
)) {

4388 
	`£tToEm±y
();

4390 
fSh‹tLígth
 = 0;

4392  *
this
;

4393 
	}
}

4395 
ölöe
 
	gUnicodeSåög
&

4396 
	gUnicodeSåög
::
	$ªmove
(
öt32_t
 
°¨t
,

4397 
öt32_t
 
_Àngth
)

4399 if(
°¨t
 <0 && 
_Àngth
 =
INT32_MAX
) {

4401  
	`ªmove
();

4403  
	`doRïœ˚
(
°¨t
, 
_Àngth
, 
NULL
, 0, 0);

4404 
	}
}

4406 
ölöe
 
	gUnicodeSåög
&

4407 
	gUnicodeSåög
::
	$ªmoveBëwìn
(
öt32_t
 
°¨t
,

4408 
öt32_t
 
limô
)

4409 {  
	`doRïœ˚
(
°¨t
, 
limô
 - sèπ, 
NULL
, 0, 0); 
	}
}

4411 
ölöe
 
	gUnicodeSåög
 &

4412 
	gUnicodeSåög
::
	$ªèöBëwìn
(
öt32_t
 
°¨t
, i¡32_à
limô
) {

4413 
	`åunˇã
(
limô
);

4414  
	`doRïœ˚
(0, 
°¨t
, 
NULL
, 0, 0);

4415 
	}
}

4417 
ölöe
 
UBoﬁ


4418 
	gUnicodeSåög
::
	$åunˇã
(
öt32_t
 
èrgëLígth
)

4420 if(
	`isBogus
(Ë&& 
èrgëLígth
 == 0) {

4422 
	`unBogus
();

4423  
FALSE
;

4424 } if((
uöt32_t
)
èrgëLígth
 < (uöt32_t)
	`Àngth
()) {

4425 
	`£tLígth
(
èrgëLígth
);

4426 if(
fFœgs
&
kBuf„rIsRód⁄ly
) {

4427 
fUni⁄
.
fFõlds
.
fC≠acôy
 = 
èrgëLígth
;

4429  
TRUE
;

4431  
FALSE
;

4433 
	}
}

4435 
ölöe
 
	gUnicodeSåög
&

4436 
	gUnicodeSåög
::
	$ªvî£
()

4437 {  
	`doRevî£
(0, 
	`Àngth
()); 
	}
}

4439 
ölöe
 
	gUnicodeSåög
&

4440 
	gUnicodeSåög
::
	$ªvî£
(
öt32_t
 
°¨t
,

4441 
öt32_t
 
_Àngth
)

4442 {  
	`doRevî£
(
°¨t
, 
_Àngth
); 
	}
}

4444 
	gU_NAMESPACE_END


	@unicode/unorm.h

15 #i‚de‡
UNORM_H


16 
	#UNORM_H


	)

18 
	~"unicode/uty≥s.h
"

20 #i‡!
UCONFIG_NO_NORMALIZATION


22 
	~"unicode/uôî.h
"

23 
	~"unicode/un‹m2.h
"

135 
	mUNORM_NONE
 = 1,

137 
	mUNORM_NFD
 = 2,

139 
	mUNORM_NFKD
 = 3,

141 
	mUNORM_NFC
 = 4,

143 
	mUNORM_DEFAULT
 = 
UNORM_NFC
,

145 
	mUNORM_NFKC
 =5,

147 
	mUNORM_FCD
 = 6,

150 
	mUNORM_MODE_COUNT


151 } 
	tUN‹mÆiz©i⁄Mode
;

167 
	mUNORM_UNICODE_3_2
=0x20

185 
	#UNORM_COMPARE_NORM_OPTIONS_SHIFT
 20

	)

206 
U_STABLE
 
öt32_t
 
U_EXPORT2


207 
un‹m_n‹mÆize
(c⁄° 
UCh¨
 *
sour˚
, 
öt32_t
 
sour˚Lígth
,

208 
UN‹mÆiz©i⁄Mode
 
mode
, 
öt32_t
 
›ti⁄s
,

209 
UCh¨
 *
ªsu…
, 
öt32_t
 
ªsu…Lígth
,

210 
UEº‹Code
 *
°©us
);

232 
U_STABLE
 
UN‹mÆiz©i⁄CheckResu…
 
U_EXPORT2


233 
un‹m_quickCheck
(c⁄° 
UCh¨
 *
sour˚
, 
öt32_t
 
sour˚Àngth
,

234 
UN‹mÆiz©i⁄Mode
 
mode
,

235 
UEº‹Code
 *
°©us
);

253 
U_STABLE
 
UN‹mÆiz©i⁄CheckResu…
 
U_EXPORT2


254 
un‹m_quickCheckWôhO±i⁄s
(c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

255 
UN‹mÆiz©i⁄Mode
 
mode
, 
öt32_t
 
›ti⁄s
,

256 
UEº‹Code
 *
pEº‹Code
);

279 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


280 
un‹m_isN‹mÆized
(c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

281 
UN‹mÆiz©i⁄Mode
 
mode
,

282 
UEº‹Code
 *
pEº‹Code
);

301 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


302 
un‹m_isN‹mÆizedWôhO±i⁄s
(c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

303 
UN‹mÆiz©i⁄Mode
 
mode
, 
öt32_t
 
›ti⁄s
,

304 
UEº‹Code
 *
pEº‹Code
);

379 
U_STABLE
 
öt32_t
 
U_EXPORT2


380 
un‹m_√xt
(
UCh¨Iãøt‹
 *
§c
,

381 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

382 
UN‹mÆiz©i⁄Mode
 
mode
, 
öt32_t
 
›ti⁄s
,

383 
UBoﬁ
 
doN‹mÆize
, UBoﬁ *
pNìdedToN‹mÆize
,

384 
UEº‹Code
 *
pEº‹Code
);

412 
U_STABLE
 
öt32_t
 
U_EXPORT2


413 
un‹m_¥evious
(
UCh¨Iãøt‹
 *
§c
,

414 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

415 
UN‹mÆiz©i⁄Mode
 
mode
, 
öt32_t
 
›ti⁄s
,

416 
UBoﬁ
 
doN‹mÆize
, UBoﬁ *
pNìdedToN‹mÆize
,

417 
UEº‹Code
 *
pEº‹Code
);

456 
U_STABLE
 
öt32_t
 
U_EXPORT2


457 
un‹m_c⁄ˇã«ã
(c⁄° 
UCh¨
 *
À·
, 
öt32_t
 
À·Lígth
,

458 c⁄° 
UCh¨
 *
right
, 
öt32_t
 
rightLígth
,

459 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

460 
UN‹mÆiz©i⁄Mode
 
mode
, 
öt32_t
 
›ti⁄s
,

461 
UEº‹Code
 *
pEº‹Code
);

468 
	#UNORM_INPUT_IS_FCD
 0x20000

	)

475 
	#U_COMPARE_IGNORE_CASE
 0x10000

	)

477 #i‚de‡
U_COMPARE_CODE_POINT_ORDER


484 
	#U_COMPARE_CODE_POINT_ORDER
 0x8000

	)

553 
U_STABLE
 
öt32_t
 
U_EXPORT2


554 
un‹m_com∑ª
(c⁄° 
UCh¨
 *
s1
, 
öt32_t
 
Àngth1
,

555 c⁄° 
UCh¨
 *
s2
, 
öt32_t
 
Àngth2
,

556 
uöt32_t
 
›ti⁄s
,

557 
UEº‹Code
 *
pEº‹Code
);

	@unicode/unorm2.h

17 #i‚de‡
__UNORM2_H__


18 
	#__UNORM2_H__


	)

31 
	~"unicode/uty≥s.h
"

32 
	~"unicode/loˇÕoöãr.h
"

33 
	~"unicode/u£t.h
"

51 
	mUNORM2_COMPOSE
,

60 
	mUNORM2_DECOMPOSE
,

73 
	mUNORM2_FCD
,

83 
	mUNORM2_COMPOSE_CONTIGUOUS


84 } 
	tUN‹mÆiz©i⁄2Mode
;

91 
	eUN‹mÆiz©i⁄CheckResu…
 {

96 
	mUNORM_NO
,

101 
	mUNORM_YES
,

109 
	mUNORM_MAYBE


110 } 
	tUN‹mÆiz©i⁄CheckResu…
;

116 
	gUN‹mÆizî2
;

117 
UN‹mÆizî2
 
	tUN‹mÆizî2
;

119 #i‡!
UCONFIG_NO_NORMALIZATION


142 
U_STABLE
 c⁄° 
UN‹mÆizî2
 * 
U_EXPORT2


143 
un‹m2_gëIn°™˚
(c⁄° *
∑ckageName
,

144 c⁄° *
«me
,

145 
UN‹mÆiz©i⁄2Mode
 
mode
,

146 
UEº‹Code
 *
pEº‹Code
);

163 
U_STABLE
 
UN‹mÆizî2
 * 
U_EXPORT2


164 
un‹m2_›íFûãªd
(c⁄° 
UN‹mÆizî2
 *
n‹m2
, c⁄° 
USë
 *
fûãrSë
, 
UEº‹Code
 *
pEº‹Code
);

172 
U_STABLE
 
U_EXPORT2


173 
un‹m2_˛o£
(
UN‹mÆizî2
 *
n‹m2
);

175 #i‡
U_SHOW_CPLUSPLUS_API


177 
U_NAMESPACE_BEGIN


188 
U_DEFINE_LOCAL_OPEN_POINTER
(
LoˇlUN‹mÆizî2Poöãr
, 
UN‹mÆizî2
, 
un‹m2_˛o£
);

190 
	gU_NAMESPACE_END


210 
U_STABLE
 
öt32_t
 
U_EXPORT2


211 
un‹m2_n‹mÆize
(c⁄° 
UN‹mÆizî2
 *
n‹m2
,

212 c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
Àngth
,

213 
UCh¨
 *
de°
, 
öt32_t
 
ˇ∑côy
,

214 
UEº‹Code
 *
pEº‹Code
);

233 
U_STABLE
 
öt32_t
 
U_EXPORT2


234 
un‹m2_n‹mÆizeSec⁄dAndAµíd
(c⁄° 
UN‹mÆizî2
 *
n‹m2
,

235 
UCh¨
 *
fú°
, 
öt32_t
 
fú°Lígth
, i¡32_à
fú°C≠acôy
,

236 c⁄° 
UCh¨
 *
£c⁄d
, 
öt32_t
 
£c⁄dLígth
,

237 
UEº‹Code
 *
pEº‹Code
);

256 
U_STABLE
 
öt32_t
 
U_EXPORT2


257 
un‹m2_≠≥nd
(c⁄° 
UN‹mÆizî2
 *
n‹m2
,

258 
UCh¨
 *
fú°
, 
öt32_t
 
fú°Lígth
, i¡32_à
fú°C≠acôy
,

259 c⁄° 
UCh¨
 *
£c⁄d
, 
öt32_t
 
£c⁄dLígth
,

260 
UEº‹Code
 *
pEº‹Code
);

278 
U_DRAFT
 
öt32_t
 
U_EXPORT2


279 
un‹m2_gëDecomposôi⁄
(c⁄° 
UN‹mÆizî2
 *
n‹m2
,

280 
UCh¨32
 
c
, 
UCh¨
 *
decomposôi⁄
, 
öt32_t
 
ˇ∑côy
,

281 
UEº‹Code
 *
pEº‹Code
);

299 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


300 
un‹m2_isN‹mÆized
(c⁄° 
UN‹mÆizî2
 *
n‹m2
,

301 c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
,

302 
UEº‹Code
 *
pEº‹Code
);

321 
U_STABLE
 
UN‹mÆiz©i⁄CheckResu…
 
U_EXPORT2


322 
un‹m2_quickCheck
(c⁄° 
UN‹mÆizî2
 *
n‹m2
,

323 c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
,

324 
UEº‹Code
 *
pEº‹Code
);

350 
U_STABLE
 
öt32_t
 
U_EXPORT2


351 
un‹m2_•™QuickCheckYes
(c⁄° 
UN‹mÆizî2
 *
n‹m2
,

352 c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
,

353 
UEº‹Code
 *
pEº‹Code
);

364 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


365 
un‹m2_hasBound¨yBef‹e
(c⁄° 
UN‹mÆizî2
 *
n‹m2
, 
UCh¨32
 
c
);

376 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


377 
un‹m2_hasBound¨yA·î
(c⁄° 
UN‹mÆizî2
 *
n‹m2
, 
UCh¨32
 
c
);

387 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


388 
un‹m2_isI√π
(c⁄° 
UN‹mÆizî2
 *
n‹m2
, 
UCh¨32
 
c
);

	@unicode/uobject.h

17 #i‚de‡
__UOBJECT_H__


18 
	#__UOBJECT_H__


	)

20 
	~"unicode/uty≥s.h
"

22 
	gU_NAMESPACE_BEGIN


39 #i‚de‡
U_OVERRIDE_CXX_ALLOCATION


40 
	#U_OVERRIDE_CXX_ALLOCATION
 1

	)

50 #i‚de‡
U_HAVE_PLACEMENT_NEW


51 
	#U_HAVE_PLACEMENT_NEW
 1

	)

62 #i‚de‡
U_HAVE_DEBUG_LOCATION_NEW


63 
	#U_HAVE_DEBUG_LOCATION_NEW
 0

	)

80 #i‚de‡
U_NO_THROW


81 
	#U_NO_THROW
 
	`throw
()

	)

101 ˛as†
	cU_COMMON_API
 
	mUMem‹y
 {

102 
	mpublic
:

105 #ifde‡
SHAPER_MEMORY_DEBUG


106 * 
NewAºay
(
size
, 
cou¡
);

107 * 
GrowAºay
(* 
¨øy
, 
√wSize
 );

108 
FªeAºay
(* 
¨øy
 );

111 #i‡
U_OVERRIDE_CXX_ALLOCATION


120 * 
U_EXPORT2
 
›î©‹
 
	$√w
(
size_t
 
size
Ë
U_NO_THROW
;

127 * 
U_EXPORT2
 
›î©‹
 
√w
[](
size_t
 
size
Ë
U_NO_THROW
;

137 
U_EXPORT2
 
›î©‹
 
	$dñëe
(*
p
Ë
U_NO_THROW
;

144 
U_EXPORT2
 
›î©‹
 
dñëe
[](*
p
Ë
U_NO_THROW
;

146 #i‡
U_HAVE_PLACEMENT_NEW


152 
ölöe
 * 
U_EXPORT2
 
›î©‹
 
	$√w
(
size_t
, *
±r
Ë
U_NO_THROW
 { Ötr; }

159 
ölöe
 
U_EXPORT2
 
›î©‹
 
	$dñëe
(*, *Ë
U_NO_THROW
 {
	}
}

161 #i‡
U_HAVE_DEBUG_LOCATION_NEW


169 * 
U_EXPORT2
 
›î©‹
 
	$√w
(
size_t
 
size
, c⁄° * 
fûe
, 
löe
Ë
U_NO_THROW
;

177 
U_EXPORT2
 
›î©‹
 
	$dñëe
(* 
p
, c⁄° * 
fûe
, 
löe
Ë
U_NO_THROW
;

191 
	}
};

215 ˛as†
	cU_COMMON_API
 
	mUObje˘
 : 
public
 
UMem‹y
 {

216 
public
:

222 
vútuÆ
 ~
UObje˘
();

229 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const = 0;

231 
¥Ÿe˘ed
:

255 
vútuÆ
 
ölöe
 
UBoﬁ
 
›î©‹
==(c⁄° 
UObje˘
 &
Ÿhî
Ëc⁄° {  
this
==&other; }

256 
ölöe
 
UBoﬁ
 
›î©‹
!=(c⁄° 
UObje˘
 &
Ÿhî
Ëc⁄° {  !›î©‹==(Ÿhî); 
	}
}

297 
	#UOBJECT_DEFINE_RTTI_IMPLEMENTATION
(
myCœss
) \

298 
UCœssID
 
U_EXPORT2
 
myCœss
::
	`gëSèticCœssID
() { \

299 
˛assID
 = 0; \

300  (
UCœssID
)&
˛assID
; \

302 
UCœssID
 
myCœss
::
	`gëDy«micCœssID
() const \

303 {  
myCœss
::
	`gëSèticCœssID
(); }

	)

314 
	#UOBJECT_DEFINE_ABSTRACT_RTTI_IMPLEMENTATION
(
myCœss
) \

315 
UCœssID
 
U_EXPORT2
 
myCœss
::
	`gëSèticCœssID
() { \

316 
˛assID
 = 0; \

317  (
UCœssID
)&
˛assID
; \

318 }

	)

330 
	#UOBJECT_DEFINE_NO_RTTI_IMPLEMENTATION
(
myCœss
) \

331 
UCœssID
 
myCœss
::
	`gëDy«micCœssID
(Ëc⁄° {  
NULL
; }

	)

350 
	gU_NAMESPACE_END


	@unicode/uobslete.h

21 #i‚de‡
UOBSLETE_H


22 
	#UOBSLETE_H


	)

24 #ifde‡
U_HIDE_OBSOLETE_API


26 #i‡
U_DISABLE_RENAMING


	@unicode/urename.h

21 #i‚de‡
URENAME_H


22 
	#URENAME_H


	)

28 #i‡!
U_DISABLE_RENAMING


34 #i‚de‡
U_ICU_ENTRY_POINT_RENAME


35 
	~"unicode/umachöe.h
"

39 #i‚de‡
U_ICU_ENTRY_POINT_RENAME


40 
	~"unicode/uvînum.h
"

44 #i‚de‡
U_ICU_ENTRY_POINT_RENAME


45 #îr‹ 
U_ICU_ENTRY_POINT_RENAME
 
is
 
nŸ
 
deföed
 - 
ˇ¬Ÿ
 . 
C⁄sidî
 
deföög
 
U_DISABLE_RENAMING
 
ª«mög
 
should
ÇŸ 
be
 
u£d
.

51 
	#DECPOWERS
 
	`U_ICU_ENTRY_POINT_RENAME
(
DECPOWERS
)

	)

52 
	#DECSTICKYTAB
 
	`U_ICU_ENTRY_POINT_RENAME
(
DECSTICKYTAB
)

	)

53 
	#LN¬
 
	`U_ICU_ENTRY_POINT_RENAME
(
LN¬
)

	)

54 
	#T_CSåög_öt64ToSåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
T_CSåög_öt64ToSåög
)

	)

55 
	#T_CSåög_öãgîToSåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
T_CSåög_öãgîToSåög
)

	)

56 
	#T_CSåög_°ricmp
 
	`U_ICU_ENTRY_POINT_RENAME
(
T_CSåög_°ricmp
)

	)

57 
	#T_CSåög_°rögToI¡egî
 
	`U_ICU_ENTRY_POINT_RENAME
(
T_CSåög_°rögToI¡egî
)

	)

58 
	#T_CSåög_°∫icmp
 
	`U_ICU_ENTRY_POINT_RENAME
(
T_CSåög_°∫icmp
)

	)

59 
	#T_CSåög_toLowîCa£
 
	`U_ICU_ENTRY_POINT_RENAME
(
T_CSåög_toLowîCa£
)

	)

60 
	#T_CSåög_toUµîCa£
 
	`U_ICU_ENTRY_POINT_RENAME
(
T_CSåög_toUµîCa£
)

	)

61 
	#UCNV_FROM_U_CALLBACK_ESCAPE
 
	`U_ICU_ENTRY_POINT_RENAME
(
UCNV_FROM_U_CALLBACK_ESCAPE
)

	)

62 
	#UCNV_FROM_U_CALLBACK_SKIP
 
	`U_ICU_ENTRY_POINT_RENAME
(
UCNV_FROM_U_CALLBACK_SKIP
)

	)

63 
	#UCNV_FROM_U_CALLBACK_STOP
 
	`U_ICU_ENTRY_POINT_RENAME
(
UCNV_FROM_U_CALLBACK_STOP
)

	)

64 
	#UCNV_FROM_U_CALLBACK_SUBSTITUTE
 
	`U_ICU_ENTRY_POINT_RENAME
(
UCNV_FROM_U_CALLBACK_SUBSTITUTE
)

	)

65 
	#UCNV_TO_U_CALLBACK_ESCAPE
 
	`U_ICU_ENTRY_POINT_RENAME
(
UCNV_TO_U_CALLBACK_ESCAPE
)

	)

66 
	#UCNV_TO_U_CALLBACK_SKIP
 
	`U_ICU_ENTRY_POINT_RENAME
(
UCNV_TO_U_CALLBACK_SKIP
)

	)

67 
	#UCNV_TO_U_CALLBACK_STOP
 
	`U_ICU_ENTRY_POINT_RENAME
(
UCNV_TO_U_CALLBACK_STOP
)

	)

68 
	#UCNV_TO_U_CALLBACK_SUBSTITUTE
 
	`U_ICU_ENTRY_POINT_RENAME
(
UCNV_TO_U_CALLBACK_SUBSTITUTE
)

	)

69 
	#UD©aMem‹y_¸óãNewIn°™˚
 
	`U_ICU_ENTRY_POINT_RENAME
(
UD©aMem‹y_¸óãNewIn°™˚
)

	)

70 
	#UD©aMem‹y_öô
 
	`U_ICU_ENTRY_POINT_RENAME
(
UD©aMem‹y_öô
)

	)

71 
	#UD©aMem‹y_isLﬂded
 
	`U_ICU_ENTRY_POINT_RENAME
(
UD©aMem‹y_isLﬂded
)

	)

72 
	#UD©aMem‹y_n‹mÆizeD©aPoöãr
 
	`U_ICU_ENTRY_POINT_RENAME
(
UD©aMem‹y_n‹mÆizeD©aPoöãr
)

	)

73 
	#UD©aMem‹y_£tD©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
UD©aMem‹y_£tD©a
)

	)

74 
	#UD©amem‹y_assign
 
	`U_ICU_ENTRY_POINT_RENAME
(
UD©amem‹y_assign
)

	)

75 
	#_ASCIID©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
_ASCIID©a
)

	)

76 
	#_Bocu1D©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
_Bocu1D©a
)

	)

77 
	#_CESU8D©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
_CESU8D©a
)

	)

78 
	#_HZD©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
_HZD©a
)

	)

79 
	#_IMAPD©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
_IMAPD©a
)

	)

80 
	#_ISCIID©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
_ISCIID©a
)

	)

81 
	#_ISO2022D©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
_ISO2022D©a
)

	)

82 
	#_LMBCSD©a1
 
	`U_ICU_ENTRY_POINT_RENAME
(
_LMBCSD©a1
)

	)

83 
	#_LMBCSD©a11
 
	`U_ICU_ENTRY_POINT_RENAME
(
_LMBCSD©a11
)

	)

84 
	#_LMBCSD©a16
 
	`U_ICU_ENTRY_POINT_RENAME
(
_LMBCSD©a16
)

	)

85 
	#_LMBCSD©a17
 
	`U_ICU_ENTRY_POINT_RENAME
(
_LMBCSD©a17
)

	)

86 
	#_LMBCSD©a18
 
	`U_ICU_ENTRY_POINT_RENAME
(
_LMBCSD©a18
)

	)

87 
	#_LMBCSD©a19
 
	`U_ICU_ENTRY_POINT_RENAME
(
_LMBCSD©a19
)

	)

88 
	#_LMBCSD©a2
 
	`U_ICU_ENTRY_POINT_RENAME
(
_LMBCSD©a2
)

	)

89 
	#_LMBCSD©a3
 
	`U_ICU_ENTRY_POINT_RENAME
(
_LMBCSD©a3
)

	)

90 
	#_LMBCSD©a4
 
	`U_ICU_ENTRY_POINT_RENAME
(
_LMBCSD©a4
)

	)

91 
	#_LMBCSD©a5
 
	`U_ICU_ENTRY_POINT_RENAME
(
_LMBCSD©a5
)

	)

92 
	#_LMBCSD©a6
 
	`U_ICU_ENTRY_POINT_RENAME
(
_LMBCSD©a6
)

	)

93 
	#_LMBCSD©a8
 
	`U_ICU_ENTRY_POINT_RENAME
(
_LMBCSD©a8
)

	)

94 
	#_L©ö1D©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
_L©ö1D©a
)

	)

95 
	#_MBCSD©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
_MBCSD©a
)

	)

96 
	#_SCSUD©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
_SCSUD©a
)

	)

97 
	#_UTF16BED©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
_UTF16BED©a
)

	)

98 
	#_UTF16D©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
_UTF16D©a
)

	)

99 
	#_UTF16LED©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
_UTF16LED©a
)

	)

100 
	#_UTF32BED©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
_UTF32BED©a
)

	)

101 
	#_UTF32D©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
_UTF32D©a
)

	)

102 
	#_UTF32LED©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
_UTF32LED©a
)

	)

103 
	#_UTF7D©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
_UTF7D©a
)

	)

104 
	#_UTF8D©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
_UTF8D©a
)

	)

105 
	#bms_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
bms_˛o£
)

	)

106 
	#bms_em±y
 
	`U_ICU_ENTRY_POINT_RENAME
(
bms_em±y
)

	)

107 
	#bms_gëD©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
bms_gëD©a
)

	)

108 
	#bms_›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
bms_›í
)

	)

109 
	#bms_£¨ch
 
	`U_ICU_ENTRY_POINT_RENAME
(
bms_£¨ch
)

	)

110 
	#bms_£tT¨gëSåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
bms_£tT¨gëSåög
)

	)

111 
	#buûdWSC⁄fußbÀD©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
buûdWSC⁄fußbÀD©a
)

	)

112 
	#cmem‹y_˛ónup
 
	`U_ICU_ENTRY_POINT_RENAME
(
cmem‹y_˛ónup
)

	)

113 
	#cmem‹y_öU£
 
	`U_ICU_ENTRY_POINT_RENAME
(
cmem‹y_öU£
)

	)

114 
	#d2uèbÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
d2uèbÀ
)

	)

115 
	#dñëeCELi°
 
	`U_ICU_ENTRY_POINT_RENAME
(
dñëeCELi°
)

	)

116 
	#dñëeCh¨s
 
	`U_ICU_ENTRY_POINT_RENAME
(
dñëeCh¨s
)

	)

117 
	#dñëeCﬁlD©aCacheE¡ry
 
	`U_ICU_ENTRY_POINT_RENAME
(
dñëeCﬁlD©aCacheE¡ry
)

	)

118 
	#dñëeSåögLi°
 
	`U_ICU_ENTRY_POINT_RENAME
(
dñëeSåögLi°
)

	)

119 
	#dñëeUnicodeSåögKey
 
	`U_ICU_ENTRY_POINT_RENAME
(
dñëeUnicodeSåögKey
)

	)

120 
	#izruÀ_˛⁄e
 
	`U_ICU_ENTRY_POINT_RENAME
(
izruÀ_˛⁄e
)

	)

121 
	#izruÀ_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
izruÀ_˛o£
)

	)

122 
	#izruÀ_equÆs
 
	`U_ICU_ENTRY_POINT_RENAME
(
izruÀ_equÆs
)

	)

123 
	#izruÀ_gëDSTSavögs
 
	`U_ICU_ENTRY_POINT_RENAME
(
izruÀ_gëDSTSavögs
)

	)

124 
	#izruÀ_gëDy«micCœssID
 
	`U_ICU_ENTRY_POINT_RENAME
(
izruÀ_gëDy«micCœssID
)

	)

125 
	#izruÀ_gëFöÆSèπ
 
	`U_ICU_ENTRY_POINT_RENAME
(
izruÀ_gëFöÆSèπ
)

	)

126 
	#izruÀ_gëFú°Sèπ
 
	`U_ICU_ENTRY_POINT_RENAME
(
izruÀ_gëFú°Sèπ
)

	)

127 
	#izruÀ_gëName
 
	`U_ICU_ENTRY_POINT_RENAME
(
izruÀ_gëName
)

	)

128 
	#izruÀ_gëNextSèπ
 
	`U_ICU_ENTRY_POINT_RENAME
(
izruÀ_gëNextSèπ
)

	)

129 
	#izruÀ_gëPªviousSèπ
 
	`U_ICU_ENTRY_POINT_RENAME
(
izruÀ_gëPªviousSèπ
)

	)

130 
	#izruÀ_gëRawOff£t
 
	`U_ICU_ENTRY_POINT_RENAME
(
izruÀ_gëRawOff£t
)

	)

131 
	#izruÀ_gëSèticCœssID
 
	`U_ICU_ENTRY_POINT_RENAME
(
izruÀ_gëSèticCœssID
)

	)

132 
	#izruÀ_isEquivÆítTo
 
	`U_ICU_ENTRY_POINT_RENAME
(
izruÀ_isEquivÆítTo
)

	)

133 
	#izruÀ_›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
izruÀ_›í
)

	)

134 
	#À_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
À_˛o£
)

	)

135 
	#À_¸óã
 
	`U_ICU_ENTRY_POINT_RENAME
(
À_¸óã
)

	)

136 
	#À_gëCh¨Indi˚s
 
	`U_ICU_ENTRY_POINT_RENAME
(
À_gëCh¨Indi˚s
)

	)

137 
	#À_gëCh¨Indi˚sWôhBa£
 
	`U_ICU_ENTRY_POINT_RENAME
(
À_gëCh¨Indi˚sWôhBa£
)

	)

138 
	#À_gëGlyphCou¡
 
	`U_ICU_ENTRY_POINT_RENAME
(
À_gëGlyphCou¡
)

	)

139 
	#À_gëGlyphPosôi⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
À_gëGlyphPosôi⁄
)

	)

140 
	#À_gëGlyphPosôi⁄s
 
	`U_ICU_ENTRY_POINT_RENAME
(
À_gëGlyphPosôi⁄s
)

	)

141 
	#À_gëGlyphs
 
	`U_ICU_ENTRY_POINT_RENAME
(
À_gëGlyphs
)

	)

142 
	#À_œyoutCh¨s
 
	`U_ICU_ENTRY_POINT_RENAME
(
À_œyoutCh¨s
)

	)

143 
	#À_ª£t
 
	`U_ICU_ENTRY_POINT_RENAME
(
À_ª£t
)

	)

144 
	#loˇÀ_gëKeyw‹ds
 
	`U_ICU_ENTRY_POINT_RENAME
(
loˇÀ_gëKeyw‹ds
)

	)

145 
	#loˇÀ_gëKeyw‹dsSèπ
 
	`U_ICU_ENTRY_POINT_RENAME
(
loˇÀ_gëKeyw‹dsSèπ
)

	)

146 
	#loˇÀ_gë_deÁu…
 
	`U_ICU_ENTRY_POINT_RENAME
(
loˇÀ_gë_deÁu…
)

	)

147 
	#loˇÀ_£t_deÁu…
 
	`U_ICU_ENTRY_POINT_RENAME
(
loˇÀ_£t_deÁu…
)

	)

148 
	#∂_addF⁄tRun
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_addF⁄tRun
)

	)

149 
	#∂_addLoˇÀRun
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_addLoˇÀRun
)

	)

150 
	#∂_addVÆueRun
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_addVÆueRun
)

	)

151 
	#∂_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_˛o£
)

	)

152 
	#∂_˛o£F⁄tRuns
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_˛o£F⁄tRuns
)

	)

153 
	#∂_˛o£Löe
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_˛o£Löe
)

	)

154 
	#∂_˛o£LoˇÀRuns
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_˛o£LoˇÀRuns
)

	)

155 
	#∂_˛o£VÆueRuns
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_˛o£VÆueRuns
)

	)

156 
	#∂_cou¡LöeRuns
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_cou¡LöeRuns
)

	)

157 
	#∂_¸óã
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_¸óã
)

	)

158 
	#∂_gëAs˚¡
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_gëAs˚¡
)

	)

159 
	#∂_gëDes˚¡
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_gëDes˚¡
)

	)

160 
	#∂_gëF⁄tRunCou¡
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_gëF⁄tRunCou¡
)

	)

161 
	#∂_gëF⁄tRunF⁄t
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_gëF⁄tRunF⁄t
)

	)

162 
	#∂_gëF⁄tRunLa°Limô
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_gëF⁄tRunLa°Limô
)

	)

163 
	#∂_gëF⁄tRunLimô
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_gëF⁄tRunLimô
)

	)

164 
	#∂_gëLódög
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_gëLódög
)

	)

165 
	#∂_gëLöeAs˚¡
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_gëLöeAs˚¡
)

	)

166 
	#∂_gëLöeDes˚¡
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_gëLöeDes˚¡
)

	)

167 
	#∂_gëLöeLódög
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_gëLöeLódög
)

	)

168 
	#∂_gëLöeVisuÆRun
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_gëLöeVisuÆRun
)

	)

169 
	#∂_gëLöeWidth
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_gëLöeWidth
)

	)

170 
	#∂_gëLoˇÀRunCou¡
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_gëLoˇÀRunCou¡
)

	)

171 
	#∂_gëLoˇÀRunLa°Limô
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_gëLoˇÀRunLa°Limô
)

	)

172 
	#∂_gëLoˇÀRunLimô
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_gëLoˇÀRunLimô
)

	)

173 
	#∂_gëLoˇÀRunLoˇÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_gëLoˇÀRunLoˇÀ
)

	)

174 
	#∂_gëP¨agøphLevñ
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_gëP¨agøphLevñ
)

	)

175 
	#∂_gëTextDúe˘i⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_gëTextDúe˘i⁄
)

	)

176 
	#∂_gëVÆueRunCou¡
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_gëVÆueRunCou¡
)

	)

177 
	#∂_gëVÆueRunLa°Limô
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_gëVÆueRunLa°Limô
)

	)

178 
	#∂_gëVÆueRunLimô
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_gëVÆueRunLimô
)

	)

179 
	#∂_gëVÆueRunVÆue
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_gëVÆueRunVÆue
)

	)

180 
	#∂_gëVisuÆRunAs˚¡
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_gëVisuÆRunAs˚¡
)

	)

181 
	#∂_gëVisuÆRunDes˚¡
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_gëVisuÆRunDes˚¡
)

	)

182 
	#∂_gëVisuÆRunDúe˘i⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_gëVisuÆRunDúe˘i⁄
)

	)

183 
	#∂_gëVisuÆRunF⁄t
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_gëVisuÆRunF⁄t
)

	)

184 
	#∂_gëVisuÆRunGlyphCou¡
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_gëVisuÆRunGlyphCou¡
)

	)

185 
	#∂_gëVisuÆRunGlyphToCh¨M≠
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_gëVisuÆRunGlyphToCh¨M≠
)

	)

186 
	#∂_gëVisuÆRunGlyphs
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_gëVisuÆRunGlyphs
)

	)

187 
	#∂_gëVisuÆRunLódög
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_gëVisuÆRunLódög
)

	)

188 
	#∂_gëVisuÆRunPosôi⁄s
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_gëVisuÆRunPosôi⁄s
)

	)

189 
	#∂_isCom∂ex
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_isCom∂ex
)

	)

190 
	#∂_√xtLöe
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_√xtLöe
)

	)

191 
	#∂_›íEm±yF⁄tRuns
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_›íEm±yF⁄tRuns
)

	)

192 
	#∂_›íEm±yLoˇÀRuns
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_›íEm±yLoˇÀRuns
)

	)

193 
	#∂_›íEm±yVÆueRuns
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_›íEm±yVÆueRuns
)

	)

194 
	#∂_›íF⁄tRuns
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_›íF⁄tRuns
)

	)

195 
	#∂_›íLoˇÀRuns
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_›íLoˇÀRuns
)

	)

196 
	#∂_›íVÆueRuns
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_›íVÆueRuns
)

	)

197 
	#∂_ªÊow
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_ªÊow
)

	)

198 
	#∂_ª£tF⁄tRuns
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_ª£tF⁄tRuns
)

	)

199 
	#∂_ª£tLoˇÀRuns
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_ª£tLoˇÀRuns
)

	)

200 
	#∂_ª£tVÆueRuns
 
	`U_ICU_ENTRY_POINT_RENAME
(
∂_ª£tVÆueRuns
)

	)

201 
	#ªs_cou¡AºayIãms
 
	`U_ICU_ENTRY_POINT_RENAME
(
ªs_cou¡AºayIãms
)

	)

202 
	#ªs_födResour˚
 
	`U_ICU_ENTRY_POINT_RENAME
(
ªs_födResour˚
)

	)

203 
	#ªs_gëAlüs
 
	`U_ICU_ENTRY_POINT_RENAME
(
ªs_gëAlüs
)

	)

204 
	#ªs_gëAºayIãm
 
	`U_ICU_ENTRY_POINT_RENAME
(
ªs_gëAºayIãm
)

	)

205 
	#ªs_gëBö¨y
 
	`U_ICU_ENTRY_POINT_RENAME
(
ªs_gëBö¨y
)

	)

206 
	#ªs_gëI¡Ve˘‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
ªs_gëI¡Ve˘‹
)

	)

207 
	#ªs_gëPublicTy≥
 
	`U_ICU_ENTRY_POINT_RENAME
(
ªs_gëPublicTy≥
)

	)

208 
	#ªs_gëResour˚
 
	`U_ICU_ENTRY_POINT_RENAME
(
ªs_gëResour˚
)

	)

209 
	#ªs_gëSåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
ªs_gëSåög
)

	)

210 
	#ªs_gëTabÀIãmByIndex
 
	`U_ICU_ENTRY_POINT_RENAME
(
ªs_gëTabÀIãmByIndex
)

	)

211 
	#ªs_gëTabÀIãmByKey
 
	`U_ICU_ENTRY_POINT_RENAME
(
ªs_gëTabÀIãmByKey
)

	)

212 
	#ªs_lﬂd
 
	`U_ICU_ENTRY_POINT_RENAME
(
ªs_lﬂd
)

	)

213 
	#ªs_ªad
 
	`U_ICU_ENTRY_POINT_RENAME
(
ªs_ªad
)

	)

214 
	#ªs_u∆ﬂd
 
	`U_ICU_ENTRY_POINT_RENAME
(
ªs_u∆ﬂd
)

	)

215 
	#tmutfmtHashTabÀVÆueCom∑øt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
tmutfmtHashTabÀVÆueCom∑øt‹
)

	)

216 
	#åõdi˘_sw≠
 
	`U_ICU_ENTRY_POINT_RENAME
(
åõdi˘_sw≠
)

	)

217 
	#u_UCh¨sToCh¨s
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_UCh¨sToCh¨s
)

	)

218 
	#u_au°r˝y
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_au°r˝y
)

	)

219 
	#u_au°∫˝y
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_au°∫˝y
)

	)

220 
	#u_ˇt˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_ˇt˛o£
)

	)

221 
	#u_ˇtgës
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_ˇtgës
)

	)

222 
	#u_ˇt›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_ˇt›í
)

	)

223 
	#u_ch¨Age
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_ch¨Age
)

	)

224 
	#u_ch¨DigôVÆue
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_ch¨DigôVÆue
)

	)

225 
	#u_ch¨Dúe˘i⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_ch¨Dúe˘i⁄
)

	)

226 
	#u_ch¨FromName
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_ch¨FromName
)

	)

227 
	#u_ch¨Múr‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_ch¨Múr‹
)

	)

228 
	#u_ch¨Name
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_ch¨Name
)

	)

229 
	#u_ch¨Ty≥
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_ch¨Ty≥
)

	)

230 
	#u_ch¨sToUCh¨s
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_ch¨sToUCh¨s
)

	)

231 
	#u_˛ónup
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_˛ónup
)

	)

232 
	#u_cou¡Ch¨32
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_cou¡Ch¨32
)

	)

233 
	#u_digô
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_digô
)

	)

234 
	#u_íumCh¨Names
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_íumCh¨Names
)

	)

235 
	#u_íumCh¨Ty≥s
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_íumCh¨Ty≥s
)

	)

236 
	#u_îr‹Name
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_îr‹Name
)

	)

237 
	#u_Ád›t
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_Ád›t
)

	)

238 
	#u_f˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_f˛o£
)

	)

239 
	#u_„of
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_„of
)

	)

240 
	#u_fÊush
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_fÊush
)

	)

241 
	#u_fgëC⁄vîãr
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_fgëC⁄vîãr
)

	)

242 
	#u_fgëc
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_fgëc
)

	)

243 
	#u_fgëcodïage
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_fgëcodïage
)

	)

244 
	#u_fgëcx
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_fgëcx
)

	)

245 
	#u_fgëfûe
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_fgëfûe
)

	)

246 
	#u_fgëloˇÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_fgëloˇÀ
)

	)

247 
	#u_fgës
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_fgës
)

	)

248 
	#u_fûe_ªad
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_fûe_ªad
)

	)

249 
	#u_fûe_wrôe
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_fûe_wrôe
)

	)

250 
	#u_fûe_wrôe_Êush
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_fûe_wrôe_Êush
)

	)

251 
	#u_föô
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_föô
)

	)

252 
	#u_ÊushDeÁu…C⁄vîãr
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_ÊushDeÁu…C⁄vîãr
)

	)

253 
	#u_fﬁdCa£
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_fﬁdCa£
)

	)

254 
	#u_f›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_f›í
)

	)

255 
	#u_f‹Digô
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_f‹Digô
)

	)

256 
	#u_f‹m©Mesßge
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_f‹m©Mesßge
)

	)

257 
	#u_f‹m©MesßgeWôhEº‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_f‹m©MesßgeWôhEº‹
)

	)

258 
	#u_Ârötf
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_Ârötf
)

	)

259 
	#u_Ârötf_u
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_Ârötf_u
)

	)

260 
	#u_Âutc
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_Âutc
)

	)

261 
	#u_Âuts
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_Âuts
)

	)

262 
	#u_‰ewöd
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_‰ewöd
)

	)

263 
	#u_fsˇnf
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_fsˇnf
)

	)

264 
	#u_fsˇnf_u
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_fsˇnf_u
)

	)

265 
	#u_f£tcodïage
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_f£tcodïage
)

	)

266 
	#u_f£éoˇÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_f£éoˇÀ
)

	)

267 
	#u_f£âøn¶ôî©‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_f£âøn¶ôî©‹
)

	)

268 
	#u_f°r›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_f°r›í
)

	)

269 
	#u_fungëc
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_fungëc
)

	)

270 
	#u_gëComböögCœss
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_gëComböögCœss
)

	)

271 
	#u_gëD©aDúe˘‹y
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_gëD©aDúe˘‹y
)

	)

272 
	#u_gëD©aVîsi⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_gëD©aVîsi⁄
)

	)

273 
	#u_gëDeÁu…C⁄vîãr
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_gëDeÁu…C⁄vîãr
)

	)

274 
	#u_gëFC_NFKC_Closuª
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_gëFC_NFKC_Closuª
)

	)

275 
	#u_gëISOCommít
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_gëISOCommít
)

	)

276 
	#u_gëI¡Pr›îtyMaxVÆue
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_gëI¡Pr›îtyMaxVÆue
)

	)

277 
	#u_gëI¡Pr›îtyMöVÆue
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_gëI¡Pr›îtyMöVÆue
)

	)

278 
	#u_gëI¡Pr›îtyVÆue
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_gëI¡Pr›îtyVÆue
)

	)

279 
	#u_gëNumîicVÆue
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_gëNumîicVÆue
)

	)

280 
	#u_gëPr›îtyEnum
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_gëPr›îtyEnum
)

	)

281 
	#u_gëPr›îtyName
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_gëPr›îtyName
)

	)

282 
	#u_gëPr›îtyVÆueEnum
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_gëPr›îtyVÆueEnum
)

	)

283 
	#u_gëPr›îtyVÆueName
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_gëPr›îtyVÆueName
)

	)

284 
	#u_gëUnicodePr›îtõs
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_gëUnicodePr›îtõs
)

	)

285 
	#u_gëUnicodeVîsi⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_gëUnicodeVîsi⁄
)

	)

286 
	#u_gëVîsi⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_gëVîsi⁄
)

	)

287 
	#u_hasBö¨yPr›îty
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_hasBö¨yPr›îty
)

	)

288 
	#u_öô
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_öô
)

	)

289 
	#u_isD©aOldî
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_isD©aOldî
)

	)

290 
	#u_isIDIgn‹abÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_isIDIgn‹abÀ
)

	)

291 
	#u_isIDP¨t
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_isIDP¨t
)

	)

292 
	#u_isIDSèπ
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_isIDSèπ
)

	)

293 
	#u_isISOC⁄åﬁ
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_isISOC⁄åﬁ
)

	)

294 
	#u_isJavaIDP¨t
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_isJavaIDP¨t
)

	)

295 
	#u_isJavaIDSèπ
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_isJavaIDSèπ
)

	)

296 
	#u_isJavaS∑˚Ch¨
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_isJavaS∑˚Ch¨
)

	)

297 
	#u_isMúr‹ed
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_isMúr‹ed
)

	)

298 
	#u_isUAÕhabëic
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_isUAÕhabëic
)

	)

299 
	#u_isULowîˇ£
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_isULowîˇ£
)

	)

300 
	#u_isUUµîˇ£
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_isUUµîˇ£
)

	)

301 
	#u_isUWhôeS∑˚
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_isUWhôeS∑˚
)

	)

302 
	#u_isWhôe•a˚
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_isWhôe•a˚
)

	)

303 
	#u_iß um
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_iß um
)

	)

304 
	#u_iß umPOSIX
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_iß umPOSIX
)

	)

305 
	#u_ißÕha
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_ißÕha
)

	)

306 
	#u_isba£
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_isba£
)

	)

307 
	#u_isbœnk
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_isbœnk
)

	)

308 
	#u_is˙ål
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_is˙ål
)

	)

309 
	#u_isdeföed
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_isdeföed
)

	)

310 
	#u_isdigô
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_isdigô
)

	)

311 
	#u_isgøph
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_isgøph
)

	)

312 
	#u_isgøphPOSIX
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_isgøphPOSIX
)

	)

313 
	#u_i¶owî
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_i¶owî
)

	)

314 
	#u_i•röt
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_i•röt
)

	)

315 
	#u_i•rötPOSIX
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_i•rötPOSIX
)

	)

316 
	#u_i•un˘
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_i•un˘
)

	)

317 
	#u_is•a˚
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_is•a˚
)

	)

318 
	#u_i°ôÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_i°ôÀ
)

	)

319 
	#u_isuµî
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_isuµî
)

	)

320 
	#u_isxdigô
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_isxdigô
)

	)

321 
	#u_ÀngthOfIdítiˇlLevñRun
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_ÀngthOfIdítiˇlLevñRun
)

	)

322 
	#u_locbund_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_locbund_˛o£
)

	)

323 
	#u_locbund_gëNumbîF‹m©
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_locbund_gëNumbîF‹m©
)

	)

324 
	#u_locbund_öô
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_locbund_öô
)

	)

325 
	#u_memˇ£cmp
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_memˇ£cmp
)

	)

326 
	#u_memchr
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_memchr
)

	)

327 
	#u_memchr32
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_memchr32
)

	)

328 
	#u_memcmp
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_memcmp
)

	)

329 
	#u_memcmpCodePoötOrdî
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_memcmpCodePoötOrdî
)

	)

330 
	#u_mem˝y
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_mem˝y
)

	)

331 
	#u_memmove
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_memmove
)

	)

332 
	#u_memrchr
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_memrchr
)

	)

333 
	#u_memrchr32
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_memrchr32
)

	)

334 
	#u_mem£t
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_mem£t
)

	)

335 
	#u_∑r£Mesßge
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_∑r£Mesßge
)

	)

336 
	#u_∑r£MesßgeWôhEº‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_∑r£MesßgeWôhEº‹
)

	)

337 
	#u_¥ötf_∑r£
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_¥ötf_∑r£
)

	)

338 
	#u_ªÀa£DeÁu…C⁄vîãr
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_ªÀa£DeÁu…C⁄vîãr
)

	)

339 
	#u_sˇnf_∑r£
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_sˇnf_∑r£
)

	)

340 
	#u_£tAtomicIncDecFun˘i⁄s
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_£tAtomicIncDecFun˘i⁄s
)

	)

341 
	#u_£tD©aDúe˘‹y
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_£tD©aDúe˘‹y
)

	)

342 
	#u_£tMem‹yFun˘i⁄s
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_£tMem‹yFun˘i⁄s
)

	)

343 
	#u_£tMuãxFun˘i⁄s
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_£tMuãxFun˘i⁄s
)

	)

344 
	#u_sh≠eAøbic
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_sh≠eAøbic
)

	)

345 
	#u_¢¥ötf
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_¢¥ötf
)

	)

346 
	#u_¢¥ötf_u
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_¢¥ötf_u
)

	)

347 
	#u_•rötf
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_•rötf
)

	)

348 
	#u_•rötf_u
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_•rötf_u
)

	)

349 
	#u_ssˇnf
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_ssˇnf
)

	)

350 
	#u_ssˇnf_u
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_ssˇnf_u
)

	)

351 
	#u_°rCa£Com∑ª
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°rCa£Com∑ª
)

	)

352 
	#u_°rCom∑ª
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°rCom∑ª
)

	)

353 
	#u_°rCom∑ªIãr
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°rCom∑ªIãr
)

	)

354 
	#u_°rFödFú°
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°rFödFú°
)

	)

355 
	#u_°rFödLa°
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°rFödLa°
)

	)

356 
	#u_°rFﬁdCa£
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°rFﬁdCa£
)

	)

357 
	#u_°rFromJavaModifõdUTF8WôhSub
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°rFromJavaModifõdUTF8WôhSub
)

	)

358 
	#u_°rFromPunycode
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°rFromPunycode
)

	)

359 
	#u_°rFromUTF32
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°rFromUTF32
)

	)

360 
	#u_°rFromUTF32WôhSub
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°rFromUTF32WôhSub
)

	)

361 
	#u_°rFromUTF8
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°rFromUTF8
)

	)

362 
	#u_°rFromUTF8Líõ¡
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°rFromUTF8Líõ¡
)

	)

363 
	#u_°rFromUTF8WôhSub
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°rFromUTF8WôhSub
)

	)

364 
	#u_°rFromWCS
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°rFromWCS
)

	)

365 
	#u_°rHasM‹eCh¨32Th™
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°rHasM‹eCh¨32Th™
)

	)

366 
	#u_°rToJavaModifõdUTF8
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°rToJavaModifõdUTF8
)

	)

367 
	#u_°rToLowî
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°rToLowî
)

	)

368 
	#u_°rToPunycode
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°rToPunycode
)

	)

369 
	#u_°rToTôÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°rToTôÀ
)

	)

370 
	#u_°rToUTF32
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°rToUTF32
)

	)

371 
	#u_°rToUTF32WôhSub
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°rToUTF32WôhSub
)

	)

372 
	#u_°rToUTF8
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°rToUTF8
)

	)

373 
	#u_°rToUTF8WôhSub
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°rToUTF8WôhSub
)

	)

374 
	#u_°rToUµî
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°rToUµî
)

	)

375 
	#u_°rToWCS
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°rToWCS
)

	)

376 
	#u_°rˇ£cmp
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°rˇ£cmp
)

	)

377 
	#u_°rˇt
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°rˇt
)

	)

378 
	#u_°rchr
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°rchr
)

	)

379 
	#u_°rchr32
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°rchr32
)

	)

380 
	#u_°rcmp
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°rcmp
)

	)

381 
	#u_°rcmpCodePoötOrdî
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°rcmpCodePoötOrdî
)

	)

382 
	#u_°rcmpFﬁd
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°rcmpFﬁd
)

	)

383 
	#u_°r˝y
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°r˝y
)

	)

384 
	#u_°rc•n
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°rc•n
)

	)

385 
	#u_°æí
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°æí
)

	)

386 
	#u_°∫ˇ£cmp
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°∫ˇ£cmp
)

	)

387 
	#u_°∫ˇt
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°∫ˇt
)

	)

388 
	#u_°∫cmp
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°∫cmp
)

	)

389 
	#u_°∫cmpCodePoötOrdî
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°∫cmpCodePoötOrdî
)

	)

390 
	#u_°∫˝y
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°∫˝y
)

	)

391 
	#u_°Ωbrk
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°Ωbrk
)

	)

392 
	#u_°ºchr
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°ºchr
)

	)

393 
	#u_°ºchr32
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°ºchr32
)

	)

394 
	#u_°º°r
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°º°r
)

	)

395 
	#u_°r•n
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°r•n
)

	)

396 
	#u_°r°r
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°r°r
)

	)

397 
	#u_°πok_r
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_°πok_r
)

	)

398 
	#u_ãrmö©eCh¨s
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_ãrmö©eCh¨s
)

	)

399 
	#u_ãrmö©eUCh¨32s
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_ãrmö©eUCh¨32s
)

	)

400 
	#u_ãrmö©eUCh¨s
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_ãrmö©eUCh¨s
)

	)

401 
	#u_ãrmö©eWCh¨s
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_ãrmö©eWCh¨s
)

	)

402 
	#u_tﬁowî
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_tﬁowî
)

	)

403 
	#u_tŸôÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_tŸôÀ
)

	)

404 
	#u_touµî
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_touµî
)

	)

405 
	#u_ua°r˝y
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_ua°r˝y
)

	)

406 
	#u_ua°∫˝y
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_ua°∫˝y
)

	)

407 
	#u_u√sˇ≥
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_u√sˇ≥
)

	)

408 
	#u_u√sˇ≥At
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_u√sˇ≥At
)

	)

409 
	#u_vîsi⁄FromSåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_vîsi⁄FromSåög
)

	)

410 
	#u_vîsi⁄FromUSåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_vîsi⁄FromUSåög
)

	)

411 
	#u_vîsi⁄ToSåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_vîsi⁄ToSåög
)

	)

412 
	#u_vf‹m©Mesßge
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_vf‹m©Mesßge
)

	)

413 
	#u_vf‹m©MesßgeWôhEº‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_vf‹m©MesßgeWôhEº‹
)

	)

414 
	#u_vÂrötf
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_vÂrötf
)

	)

415 
	#u_vÂrötf_u
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_vÂrötf_u
)

	)

416 
	#u_vfsˇnf
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_vfsˇnf
)

	)

417 
	#u_vfsˇnf_u
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_vfsˇnf_u
)

	)

418 
	#u_v∑r£Mesßge
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_v∑r£Mesßge
)

	)

419 
	#u_v∑r£MesßgeWôhEº‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_v∑r£MesßgeWôhEº‹
)

	)

420 
	#u_v¢¥ötf
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_v¢¥ötf
)

	)

421 
	#u_v¢¥ötf_u
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_v¢¥ötf_u
)

	)

422 
	#u_v•rötf
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_v•rötf
)

	)

423 
	#u_v•rötf_u
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_v•rötf_u
)

	)

424 
	#u_vssˇnf
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_vssˇnf
)

	)

425 
	#u_vssˇnf_u
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_vssˇnf_u
)

	)

426 
	#u_wrôeDiff
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_wrôeDiff
)

	)

427 
	#u_wrôeIdítiˇlLevñRun
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_wrôeIdítiˇlLevñRun
)

	)

428 
	#u_wrôeIdítiˇlLevñRunTwoCh¨s
 
	`U_ICU_ENTRY_POINT_RENAME
(
u_wrôeIdítiˇlLevñRunTwoCh¨s
)

	)

429 
	#ubidi_addPr›îtySèπs
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_addPr›îtySèπs
)

	)

430 
	#ubidi_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_˛o£
)

	)

431 
	#ubidi_cou¡P¨agøphs
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_cou¡P¨agøphs
)

	)

432 
	#ubidi_cou¡Runs
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_cou¡Runs
)

	)

433 
	#ubidi_gëBa£Dúe˘i⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_gëBa£Dúe˘i⁄
)

	)

434 
	#ubidi_gëCœss
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_gëCœss
)

	)

435 
	#ubidi_gëCœssCÆlback
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_gëCœssCÆlback
)

	)

436 
	#ubidi_gëCu°omizedCœss
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_gëCu°omizedCœss
)

	)

437 
	#ubidi_gëDúe˘i⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_gëDúe˘i⁄
)

	)

438 
	#ubidi_gëJoöögGroup
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_gëJoöögGroup
)

	)

439 
	#ubidi_gëJoöögTy≥
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_gëJoöögTy≥
)

	)

440 
	#ubidi_gëLígth
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_gëLígth
)

	)

441 
	#ubidi_gëLevñAt
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_gëLevñAt
)

	)

442 
	#ubidi_gëLevñs
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_gëLevñs
)

	)

443 
	#ubidi_gëLogiˇlIndex
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_gëLogiˇlIndex
)

	)

444 
	#ubidi_gëLogiˇlM≠
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_gëLogiˇlM≠
)

	)

445 
	#ubidi_gëLogiˇlRun
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_gëLogiˇlRun
)

	)

446 
	#ubidi_gëMaxVÆue
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_gëMaxVÆue
)

	)

447 
	#ubidi_gëMem‹y
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_gëMem‹y
)

	)

448 
	#ubidi_gëMúr‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_gëMúr‹
)

	)

449 
	#ubidi_gëP¨aLevñ
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_gëP¨aLevñ
)

	)

450 
	#ubidi_gëP¨agøph
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_gëP¨agøph
)

	)

451 
	#ubidi_gëP¨agøphByIndex
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_gëP¨agøphByIndex
)

	)

452 
	#ubidi_gëPro˚s£dLígth
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_gëPro˚s£dLígth
)

	)

453 
	#ubidi_gëRe‹dîögMode
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_gëRe‹dîögMode
)

	)

454 
	#ubidi_gëRe‹dîögO±i⁄s
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_gëRe‹dîögO±i⁄s
)

	)

455 
	#ubidi_gëResu…Lígth
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_gëResu…Lígth
)

	)

456 
	#ubidi_gëRuns
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_gëRuns
)

	)

457 
	#ubidi_gëSögÀt⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_gëSögÀt⁄
)

	)

458 
	#ubidi_gëText
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_gëText
)

	)

459 
	#ubidi_gëVisuÆIndex
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_gëVisuÆIndex
)

	)

460 
	#ubidi_gëVisuÆM≠
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_gëVisuÆM≠
)

	)

461 
	#ubidi_gëVisuÆRun
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_gëVisuÆRun
)

	)

462 
	#ubidi_övîtM≠
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_övîtM≠
)

	)

463 
	#ubidi_isBidiC⁄åﬁ
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_isBidiC⁄åﬁ
)

	)

464 
	#ubidi_isInvî£
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_isInvî£
)

	)

465 
	#ubidi_isJoöC⁄åﬁ
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_isJoöC⁄åﬁ
)

	)

466 
	#ubidi_isMúr‹ed
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_isMúr‹ed
)

	)

467 
	#ubidi_isOrdîP¨agøphsLTR
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_isOrdîP¨agøphsLTR
)

	)

468 
	#ubidi_›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_›í
)

	)

469 
	#ubidi_›íSized
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_›íSized
)

	)

470 
	#ubidi_‹dîP¨agøphsLTR
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_‹dîP¨agøphsLTR
)

	)

471 
	#ubidi_ª‹dîLogiˇl
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_ª‹dîLogiˇl
)

	)

472 
	#ubidi_ª‹dîVisuÆ
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_ª‹dîVisuÆ
)

	)

473 
	#ubidi_£tCœssCÆlback
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_£tCœssCÆlback
)

	)

474 
	#ubidi_£tInvî£
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_£tInvî£
)

	)

475 
	#ubidi_£tLöe
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_£tLöe
)

	)

476 
	#ubidi_£tP¨a
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_£tP¨a
)

	)

477 
	#ubidi_£tRe‹dîögMode
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_£tRe‹dîögMode
)

	)

478 
	#ubidi_£tRe‹dîögO±i⁄s
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_£tRe‹dîögO±i⁄s
)

	)

479 
	#ubidi_wrôeRe‹dîed
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_wrôeRe‹dîed
)

	)

480 
	#ubidi_wrôeRevî£
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubidi_wrôeRevî£
)

	)

481 
	#ublock_gëCode
 
	`U_ICU_ENTRY_POINT_RENAME
(
ublock_gëCode
)

	)

482 
	#ubrk_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubrk_˛o£
)

	)

483 
	#ubrk_cou¡AvaûabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubrk_cou¡AvaûabÀ
)

	)

484 
	#ubrk_cuºít
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubrk_cuºít
)

	)

485 
	#ubrk_fú°
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubrk_fú°
)

	)

486 
	#ubrk_fﬁlowög
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubrk_fﬁlowög
)

	)

487 
	#ubrk_gëAvaûabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubrk_gëAvaûabÀ
)

	)

488 
	#ubrk_gëLoˇÀByTy≥
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubrk_gëLoˇÀByTy≥
)

	)

489 
	#ubrk_gëRuÀSètus
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubrk_gëRuÀSètus
)

	)

490 
	#ubrk_gëRuÀSètusVec
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubrk_gëRuÀSètusVec
)

	)

491 
	#ubrk_isBound¨y
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubrk_isBound¨y
)

	)

492 
	#ubrk_œ°
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubrk_œ°
)

	)

493 
	#ubrk_√xt
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubrk_√xt
)

	)

494 
	#ubrk_›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubrk_›í
)

	)

495 
	#ubrk_›íRuÀs
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubrk_›íRuÀs
)

	)

496 
	#ubrk_¥e˚dög
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubrk_¥e˚dög
)

	)

497 
	#ubrk_¥evious
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubrk_¥evious
)

	)

498 
	#ubrk_ß„Cl⁄e
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubrk_ß„Cl⁄e
)

	)

499 
	#ubrk_£tText
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubrk_£tText
)

	)

500 
	#ubrk_£tUText
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubrk_£tUText
)

	)

501 
	#ubrk_sw≠
 
	`U_ICU_ENTRY_POINT_RENAME
(
ubrk_sw≠
)

	)

502 
	#uˇl_add
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_add
)

	)

503 
	#uˇl_˛ór
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_˛ór
)

	)

504 
	#uˇl_˛órFõld
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_˛órFõld
)

	)

505 
	#uˇl_˛⁄e
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_˛⁄e
)

	)

506 
	#uˇl_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_˛o£
)

	)

507 
	#uˇl_cou¡AvaûabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_cou¡AvaûabÀ
)

	)

508 
	#uˇl_equivÆítTo
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_equivÆítTo
)

	)

509 
	#uˇl_gë
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_gë
)

	)

510 
	#uˇl_gëAâribuã
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_gëAâribuã
)

	)

511 
	#uˇl_gëAvaûabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_gëAvaûabÀ
)

	)

512 
	#uˇl_gëC™⁄iˇlTimeZ⁄eID
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_gëC™⁄iˇlTimeZ⁄eID
)

	)

513 
	#uˇl_gëDSTSavögs
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_gëDSTSavögs
)

	)

514 
	#uˇl_gëDayOfWìkTy≥
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_gëDayOfWìkTy≥
)

	)

515 
	#uˇl_gëDeÁu…TimeZ⁄e
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_gëDeÁu…TimeZ⁄e
)

	)

516 
	#uˇl_gëGªg‹ünCh™ge
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_gëGªg‹ünCh™ge
)

	)

517 
	#uˇl_gëKeyw‹dVÆuesF‹LoˇÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_gëKeyw‹dVÆuesF‹LoˇÀ
)

	)

518 
	#uˇl_gëLimô
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_gëLimô
)

	)

519 
	#uˇl_gëLoˇÀByTy≥
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_gëLoˇÀByTy≥
)

	)

520 
	#uˇl_gëMûlis
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_gëMûlis
)

	)

521 
	#uˇl_gëNow
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_gëNow
)

	)

522 
	#uˇl_gëTZD©aVîsi⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_gëTZD©aVîsi⁄
)

	)

523 
	#uˇl_gëTimeZ⁄eDi•œyName
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_gëTimeZ⁄eDi•œyName
)

	)

524 
	#uˇl_gëTy≥
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_gëTy≥
)

	)

525 
	#uˇl_gëWìkídTønsôi⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_gëWìkídTønsôi⁄
)

	)

526 
	#uˇl_öDaylightTime
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_öDaylightTime
)

	)

527 
	#uˇl_isSë
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_isSë
)

	)

528 
	#uˇl_isWìkíd
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_isWìkíd
)

	)

529 
	#uˇl_›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_›í
)

	)

530 
	#uˇl_›íCou¡ryTimeZ⁄es
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_›íCou¡ryTimeZ⁄es
)

	)

531 
	#uˇl_›íTimeZ⁄es
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_›íTimeZ⁄es
)

	)

532 
	#uˇl_rﬁl
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_rﬁl
)

	)

533 
	#uˇl_£t
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_£t
)

	)

534 
	#uˇl_£tAâribuã
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_£tAâribuã
)

	)

535 
	#uˇl_£tD©e
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_£tD©e
)

	)

536 
	#uˇl_£tD©eTime
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_£tD©eTime
)

	)

537 
	#uˇl_£tDeÁu…TimeZ⁄e
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_£tDeÁu…TimeZ⁄e
)

	)

538 
	#uˇl_£tGªg‹ünCh™ge
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_£tGªg‹ünCh™ge
)

	)

539 
	#uˇl_£tMûlis
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_£tMûlis
)

	)

540 
	#uˇl_£tTimeZ⁄e
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇl_£tTimeZ⁄e
)

	)

541 
	#uˇ£_addCa£Closuª
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇ£_addCa£Closuª
)

	)

542 
	#uˇ£_addPr›îtySèπs
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇ£_addPr›îtySèπs
)

	)

543 
	#uˇ£_addSåögCa£Closuª
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇ£_addSåögCa£Closuª
)

	)

544 
	#uˇ£_fﬁd
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇ£_fﬁd
)

	)

545 
	#uˇ£_gëCa£LoˇÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇ£_gëCa£LoˇÀ
)

	)

546 
	#uˇ£_gëSögÀt⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇ£_gëSögÀt⁄
)

	)

547 
	#uˇ£_gëTy≥
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇ£_gëTy≥
)

	)

548 
	#uˇ£_gëTy≥OrIgn‹abÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇ£_gëTy≥OrIgn‹abÀ
)

	)

549 
	#uˇ£_hasBö¨yPr›îty
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇ£_hasBö¨yPr›îty
)

	)

550 
	#uˇ£_isCa£Sísôive
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇ£_isCa£Sísôive
)

	)

551 
	#uˇ£_isSo·DŸãd
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇ£_isSo·DŸãd
)

	)

552 
	#uˇ£_toFuŒFﬁdög
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇ£_toFuŒFﬁdög
)

	)

553 
	#uˇ£_toFuŒLowî
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇ£_toFuŒLowî
)

	)

554 
	#uˇ£_toFuŒTôÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇ£_toFuŒTôÀ
)

	)

555 
	#uˇ£_toFuŒUµî
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇ£_toFuŒUµî
)

	)

556 
	#uˇ£_tﬁowî
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇ£_tﬁowî
)

	)

557 
	#uˇ£_tŸôÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇ£_tŸôÀ
)

	)

558 
	#uˇ£_touµî
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇ£_touµî
)

	)

559 
	#uˇ£m≠_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇ£m≠_˛o£
)

	)

560 
	#uˇ£m≠_gëBªakIãøt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇ£m≠_gëBªakIãøt‹
)

	)

561 
	#uˇ£m≠_gëLoˇÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇ£m≠_gëLoˇÀ
)

	)

562 
	#uˇ£m≠_gëO±i⁄s
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇ£m≠_gëO±i⁄s
)

	)

563 
	#uˇ£m≠_›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇ£m≠_›í
)

	)

564 
	#uˇ£m≠_£tBªakIãøt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇ£m≠_£tBªakIãøt‹
)

	)

565 
	#uˇ£m≠_£tLoˇÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇ£m≠_£tLoˇÀ
)

	)

566 
	#uˇ£m≠_£tO±i⁄s
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇ£m≠_£tO±i⁄s
)

	)

567 
	#uˇ£m≠_toTôÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇ£m≠_toTôÀ
)

	)

568 
	#uˇ£m≠_utf8FﬁdCa£
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇ£m≠_utf8FﬁdCa£
)

	)

569 
	#uˇ£m≠_utf8ToLowî
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇ£m≠_utf8ToLowî
)

	)

570 
	#uˇ£m≠_utf8ToTôÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇ£m≠_utf8ToTôÀ
)

	)

571 
	#uˇ£m≠_utf8ToUµî
 
	`U_ICU_ENTRY_POINT_RENAME
(
uˇ£m≠_utf8ToUµî
)

	)

572 
	#ucd_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucd_˛o£
)

	)

573 
	#ucd_ÊushCache
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucd_ÊushCache
)

	)

574 
	#ucd_‰ìCache
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucd_‰ìCache
)

	)

575 
	#ucd_gëCﬁœt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucd_gëCﬁœt‹
)

	)

576 
	#ucd_›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucd_›í
)

	)

577 
	#uch¨_addPr›îtySèπs
 
	`U_ICU_ENTRY_POINT_RENAME
(
uch¨_addPr›îtySèπs
)

	)

578 
	#uch¨_sw≠Names
 
	`U_ICU_ENTRY_POINT_RENAME
(
uch¨_sw≠Names
)

	)

579 
	#u˛n_˛ónupO√
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˛n_˛ónupO√
)

	)

580 
	#u˛n_comm⁄_ªgi°îCÀ™up
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˛n_comm⁄_ªgi°îCÀ™up
)

	)

581 
	#u˛n_i18n_ªgi°îCÀ™up
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˛n_i18n_ªgi°îCÀ™up
)

	)

582 
	#u˛n_io_ªgi°îCÀ™up
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˛n_io_ªgi°îCÀ™up
)

	)

583 
	#u˛n_lib_˛ónup
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˛n_lib_˛ónup
)

	)

584 
	#u˛n_ªgi°îCÀ™up
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˛n_ªgi°îCÀ™up
)

	)

585 
	#u˙v_MBCSFromUCh¨32
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_MBCSFromUCh¨32
)

	)

586 
	#u˙v_MBCSFromUnicodeWôhOff£ts
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_MBCSFromUnicodeWôhOff£ts
)

	)

587 
	#u˙v_MBCSGëFûãªdUnicodeSëF‹Unicode
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_MBCSGëFûãªdUnicodeSëF‹Unicode
)

	)

588 
	#u˙v_MBCSGëTy≥
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_MBCSGëTy≥
)

	)

589 
	#u˙v_MBCSGëUnicodeSëF‹Unicode
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_MBCSGëUnicodeSëF‹Unicode
)

	)

590 
	#u˙v_MBCSIsLódByã
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_MBCSIsLódByã
)

	)

591 
	#u˙v_MBCSSim∂eGëNextUCh¨
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_MBCSSim∂eGëNextUCh¨
)

	)

592 
	#u˙v_MBCSToUnicodeWôhOff£ts
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_MBCSToUnicodeWôhOff£ts
)

	)

593 
	#u˙v_bld_cou¡AvaûabÀC⁄vîãrs
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_bld_cou¡AvaûabÀC⁄vîãrs
)

	)

594 
	#u˙v_bld_gëAvaûabÀC⁄vîãr
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_bld_gëAvaûabÀC⁄vîãr
)

	)

595 
	#u˙v_ˇnCª©eC⁄vîãr
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_ˇnCª©eC⁄vîãr
)

	)

596 
	#u˙v_cbFromUWrôeByãs
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_cbFromUWrôeByãs
)

	)

597 
	#u˙v_cbFromUWrôeSub
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_cbFromUWrôeSub
)

	)

598 
	#u˙v_cbFromUWrôeUCh¨s
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_cbFromUWrôeUCh¨s
)

	)

599 
	#u˙v_cbToUWrôeSub
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_cbToUWrôeSub
)

	)

600 
	#u˙v_cbToUWrôeUCh¨s
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_cbToUWrôeUCh¨s
)

	)

601 
	#u˙v_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_˛o£
)

	)

602 
	#u˙v_com∑ªNames
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_com∑ªNames
)

	)

603 
	#u˙v_c⁄vît
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_c⁄vît
)

	)

604 
	#u˙v_c⁄vîtEx
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_c⁄vîtEx
)

	)

605 
	#u˙v_cou¡Alü£s
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_cou¡Alü£s
)

	)

606 
	#u˙v_cou¡AvaûabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_cou¡AvaûabÀ
)

	)

607 
	#u˙v_cou¡Sènd¨ds
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_cou¡Sènd¨ds
)

	)

608 
	#u˙v_¸óãAlg‹ôhmicC⁄vîãr
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_¸óãAlg‹ôhmicC⁄vîãr
)

	)

609 
	#u˙v_¸óãC⁄vîãr
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_¸óãC⁄vîãr
)

	)

610 
	#u˙v_¸óãC⁄vîãrFromPackage
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_¸óãC⁄vîãrFromPackage
)

	)

611 
	#u˙v_¸óãC⁄vîãrFromSh¨edD©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_¸óãC⁄vîãrFromSh¨edD©a
)

	)

612 
	#u˙v_dëe˘UnicodeSig«tuª
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_dëe˘UnicodeSig«tuª
)

	)

613 
	#u˙v_extC⁄töueM©chFromU
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_extC⁄töueM©chFromU
)

	)

614 
	#u˙v_extC⁄töueM©chToU
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_extC⁄töueM©chToU
)

	)

615 
	#u˙v_extGëUnicodeSë
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_extGëUnicodeSë
)

	)

616 
	#u˙v_extInôülM©chFromU
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_extInôülM©chFromU
)

	)

617 
	#u˙v_extInôülM©chToU
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_extInôülM©chToU
)

	)

618 
	#u˙v_extSim∂eM©chFromU
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_extSim∂eM©chFromU
)

	)

619 
	#u˙v_extSim∂eM©chToU
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_extSim∂eM©chToU
)

	)

620 
	#u˙v_fixFûeSï¨©‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_fixFûeSï¨©‹
)

	)

621 
	#u˙v_ÊushCache
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_ÊushCache
)

	)

622 
	#u˙v_‰omAlg‹ôhmic
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_‰omAlg‹ôhmic
)

	)

623 
	#u˙v_‰omUCh¨s
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_‰omUCh¨s
)

	)

624 
	#u˙v_‰omUCou¡Pídög
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_‰omUCou¡Pídög
)

	)

625 
	#u˙v_‰omUWrôeByãs
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_‰omUWrôeByãs
)

	)

626 
	#u˙v_‰omUnicode
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_‰omUnicode
)

	)

627 
	#u˙v_‰omUnicode_UTF8
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_‰omUnicode_UTF8
)

	)

628 
	#u˙v_‰omUnicode_UTF8_OFFSETS_LOGIC
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_‰omUnicode_UTF8_OFFSETS_LOGIC
)

	)

629 
	#u˙v_gëAlüs
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_gëAlüs
)

	)

630 
	#u˙v_gëAlü£s
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_gëAlü£s
)

	)

631 
	#u˙v_gëAvaûabÀName
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_gëAvaûabÀName
)

	)

632 
	#u˙v_gëCCSID
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_gëCCSID
)

	)

633 
	#u˙v_gëC™⁄iˇlName
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_gëC™⁄iˇlName
)

	)

634 
	#u˙v_gëCom∂ëeUnicodeSë
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_gëCom∂ëeUnicodeSë
)

	)

635 
	#u˙v_gëDeÁu…Name
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_gëDeÁu…Name
)

	)

636 
	#u˙v_gëDi•œyName
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_gëDi•œyName
)

	)

637 
	#u˙v_gëFromUCÆlBack
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_gëFromUCÆlBack
)

	)

638 
	#u˙v_gëInvÆidCh¨s
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_gëInvÆidCh¨s
)

	)

639 
	#u˙v_gëInvÆidUCh¨s
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_gëInvÆidUCh¨s
)

	)

640 
	#u˙v_gëMaxCh¨Size
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_gëMaxCh¨Size
)

	)

641 
	#u˙v_gëMöCh¨Size
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_gëMöCh¨Size
)

	)

642 
	#u˙v_gëName
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_gëName
)

	)

643 
	#u˙v_gëNextUCh¨
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_gëNextUCh¨
)

	)

644 
	#u˙v_gëN⁄Suºog©eUnicodeSë
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_gëN⁄Suºog©eUnicodeSë
)

	)

645 
	#u˙v_gëPœtf‹m
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_gëPœtf‹m
)

	)

646 
	#u˙v_gëSènd¨d
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_gëSènd¨d
)

	)

647 
	#u˙v_gëSènd¨dName
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_gëSènd¨dName
)

	)

648 
	#u˙v_gëSèπîs
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_gëSèπîs
)

	)

649 
	#u˙v_gëSub°Ch¨s
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_gëSub°Ch¨s
)

	)

650 
	#u˙v_gëToUCÆlBack
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_gëToUCÆlBack
)

	)

651 
	#u˙v_gëTy≥
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_gëTy≥
)

	)

652 
	#u˙v_gëUnicodeSë
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_gëUnicodeSë
)

	)

653 
	#u˙v_ö¸emítRefCou¡
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_ö¸emítRefCou¡
)

	)

654 
	#u˙v_io_cou¡KnownC⁄vîãrs
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_io_cou¡KnownC⁄vîãrs
)

	)

655 
	#u˙v_io_gëC⁄vîãrName
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_io_gëC⁄vîãrName
)

	)

656 
	#u˙v_io_°rùASCIIF‹Com∑ª
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_io_°rùASCIIF‹Com∑ª
)

	)

657 
	#u˙v_io_°rùEBCDICF‹Com∑ª
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_io_°rùEBCDICF‹Com∑ª
)

	)

658 
	#u˙v_isAmbiguous
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_isAmbiguous
)

	)

659 
	#u˙v_lﬂd
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_lﬂd
)

	)

660 
	#u˙v_lﬂdSh¨edD©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_lﬂdSh¨edD©a
)

	)

661 
	#u˙v_›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_›í
)

	)

662 
	#u˙v_›íAŒNames
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_›íAŒNames
)

	)

663 
	#u˙v_›íCCSID
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_›íCCSID
)

	)

664 
	#u˙v_›íPackage
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_›íPackage
)

	)

665 
	#u˙v_›íSènd¨dNames
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_›íSènd¨dNames
)

	)

666 
	#u˙v_›íU
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_›íU
)

	)

667 
	#u˙v_ª£t
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_ª£t
)

	)

668 
	#u˙v_ª£tFromUnicode
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_ª£tFromUnicode
)

	)

669 
	#u˙v_ª£tToUnicode
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_ª£tToUnicode
)

	)

670 
	#u˙v_ß„Cl⁄e
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_ß„Cl⁄e
)

	)

671 
	#u˙v_£tDeÁu…Name
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_£tDeÁu…Name
)

	)

672 
	#u˙v_£tFÆlback
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_£tFÆlback
)

	)

673 
	#u˙v_£tFromUCÆlBack
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_£tFromUCÆlBack
)

	)

674 
	#u˙v_£tSub°Ch¨s
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_£tSub°Ch¨s
)

	)

675 
	#u˙v_£tSub°Såög
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_£tSub°Såög
)

	)

676 
	#u˙v_£tToUCÆlBack
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_£tToUCÆlBack
)

	)

677 
	#u˙v_sw≠
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_sw≠
)

	)

678 
	#u˙v_sw≠Alü£s
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_sw≠Alü£s
)

	)

679 
	#u˙v_toAlg‹ôhmic
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_toAlg‹ôhmic
)

	)

680 
	#u˙v_toUCh¨s
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_toUCh¨s
)

	)

681 
	#u˙v_toUCou¡Pídög
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_toUCou¡Pídög
)

	)

682 
	#u˙v_toUWrôeCodePoöt
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_toUWrôeCodePoöt
)

	)

683 
	#u˙v_toUWrôeUCh¨s
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_toUWrôeUCh¨s
)

	)

684 
	#u˙v_toUnicode
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_toUnicode
)

	)

685 
	#u˙v_u∆ﬂd
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_u∆ﬂd
)

	)

686 
	#u˙v_u∆ﬂdSh¨edD©aIfRódy
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_u∆ﬂdSh¨edD©aIfRódy
)

	)

687 
	#u˙v_u£sFÆlback
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v_u£sFÆlback
)

	)

688 
	#u˙v£l_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v£l_˛o£
)

	)

689 
	#u˙v£l_›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v£l_›í
)

	)

690 
	#u˙v£l_›íFromSîülized
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v£l_›íFromSîülized
)

	)

691 
	#u˙v£l_£À˘F‹Såög
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v£l_£À˘F‹Såög
)

	)

692 
	#u˙v£l_£À˘F‹UTF8
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v£l_£À˘F‹UTF8
)

	)

693 
	#u˙v£l_£rülize
 
	`U_ICU_ENTRY_POINT_RENAME
(
u˙v£l_£rülize
)

	)

694 
	#ucﬁ_ÆlocWeights
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_ÆlocWeights
)

	)

695 
	#ucﬁ_as£mbÀTaû‹ögTabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_as£mbÀTaû‹ögTabÀ
)

	)

696 
	#ucﬁ_buûdPîmuèti⁄TabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_buûdPîmuèti⁄TabÀ
)

	)

697 
	#ucﬁ_ˇlcS‹tKey
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_ˇlcS‹tKey
)

	)

698 
	#ucﬁ_ˇlcS‹tKeySim∂eTîtüry
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_ˇlcS‹tKeySim∂eTîtüry
)

	)

699 
	#ucﬁ_˛⁄eBö¨y
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_˛⁄eBö¨y
)

	)

700 
	#ucﬁ_˛⁄eRuÀD©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_˛⁄eRuÀD©a
)

	)

701 
	#ucﬁ_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_˛o£
)

	)

702 
	#ucﬁ_˛o£EÀmíts
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_˛o£EÀmíts
)

	)

703 
	#ucﬁ_cou¡AvaûabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_cou¡AvaûabÀ
)

	)

704 
	#ucﬁ_¸óãEÀmíts
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_¸óãEÀmíts
)

	)

705 
	#ucﬁ_doCE
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_doCE
)

	)

706 
	#ucﬁ_equÆ
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_equÆ
)

	)

707 
	#ucﬁ_equÆs
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_equÆs
)

	)

708 
	#ucﬁ_födRe‹dîögE¡ry
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_födRe‹dîögE¡ry
)

	)

709 
	#ucﬁ_f‹˚H™Im∂icô
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_f‹˚H™Im∂icô
)

	)

710 
	#ucﬁ_f‹gëUCA
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_f‹gëUCA
)

	)

711 
	#ucﬁ_‰ìOff£tBuf„r
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_‰ìOff£tBuf„r
)

	)

712 
	#ucﬁ_gëAâribuã
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëAâribuã
)

	)

713 
	#ucﬁ_gëAâribuãOrDeÁu…
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëAâribuãOrDeÁu…
)

	)

714 
	#ucﬁ_gëAvaûabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëAvaûabÀ
)

	)

715 
	#ucﬁ_gëBound
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëBound
)

	)

716 
	#ucﬁ_gëCESåígthDif„ªn˚
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëCESåígthDif„ªn˚
)

	)

717 
	#ucﬁ_gëC⁄åa˘i⁄s
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëC⁄åa˘i⁄s
)

	)

718 
	#ucﬁ_gëC⁄åa˘i⁄sAndEx∑nsi⁄s
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëC⁄åa˘i⁄sAndEx∑nsi⁄s
)

	)

719 
	#ucﬁ_gëDi•œyName
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëDi•œyName
)

	)

720 
	#ucﬁ_gëFú°CE
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëFú°CE
)

	)

721 
	#ucﬁ_gëFun˘i⁄ÆEquivÆít
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëFun˘i⁄ÆEquivÆít
)

	)

722 
	#ucﬁ_gëKeyw‹dVÆues
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëKeyw‹dVÆues
)

	)

723 
	#ucﬁ_gëKeyw‹dVÆuesF‹LoˇÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëKeyw‹dVÆuesF‹LoˇÀ
)

	)

724 
	#ucﬁ_gëKeyw‹ds
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëKeyw‹ds
)

	)

725 
	#ucﬁ_gëLódByãsF‹Re‹dîCode
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëLódByãsF‹Re‹dîCode
)

	)

726 
	#ucﬁ_gëLoˇÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëLoˇÀ
)

	)

727 
	#ucﬁ_gëLoˇÀByTy≥
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëLoˇÀByTy≥
)

	)

728 
	#ucﬁ_gëMaxEx∑nsi⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëMaxEx∑nsi⁄
)

	)

729 
	#ucﬁ_gëNextCE
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëNextCE
)

	)

730 
	#ucﬁ_gëOff£t
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëOff£t
)

	)

731 
	#ucﬁ_gëPªvCE
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëPªvCE
)

	)

732 
	#ucﬁ_gëRe‹dîCodes
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëRe‹dîCodes
)

	)

733 
	#ucﬁ_gëRe‹dîCodesF‹LódByã
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëRe‹dîCodesF‹LódByã
)

	)

734 
	#ucﬁ_gëRuÀs
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëRuÀs
)

	)

735 
	#ucﬁ_gëRuÀsEx
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëRuÀsEx
)

	)

736 
	#ucﬁ_gëSh‹tDeföôi⁄Såög
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëSh‹tDeföôi⁄Såög
)

	)

737 
	#ucﬁ_gëS‹tKey
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëS‹tKey
)

	)

738 
	#ucﬁ_gëS‹tKeySize
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëS‹tKeySize
)

	)

739 
	#ucﬁ_gëS‹tKeyWôhAŒoˇti⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëS‹tKeyWôhAŒoˇti⁄
)

	)

740 
	#ucﬁ_gëSåígth
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëSåígth
)

	)

741 
	#ucﬁ_gëTaû‹edSë
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëTaû‹edSë
)

	)

742 
	#ucﬁ_gëUCAVîsi⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëUCAVîsi⁄
)

	)

743 
	#ucﬁ_gëUnß„Së
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëUnß„Së
)

	)

744 
	#ucﬁ_gëV¨übÀT›
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëV¨übÀT›
)

	)

745 
	#ucﬁ_gëVîsi⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gëVîsi⁄
)

	)

746 
	#ucﬁ_gª©î
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gª©î
)

	)

747 
	#ucﬁ_gª©îOrEquÆ
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_gª©îOrEquÆ
)

	)

748 
	#ucﬁ_öôBuf„rs
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_öôBuf„rs
)

	)

749 
	#ucﬁ_öôCﬁœt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_öôCﬁœt‹
)

	)

750 
	#ucﬁ_öôInvî£UCA
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_öôInvî£UCA
)

	)

751 
	#ucﬁ_öôUCA
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_öôUCA
)

	)

752 
	#ucﬁ_öv_gëNextCE
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_öv_gëNextCE
)

	)

753 
	#ucﬁ_öv_gëPªvCE
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_öv_gëPªvCE
)

	)

754 
	#ucﬁ_isTaû‹ed
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_isTaû‹ed
)

	)

755 
	#ucﬁ_keyHashCode
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_keyHashCode
)

	)

756 
	#ucﬁ_looksLikeCﬁœti⁄Bö¨y
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_looksLikeCﬁœti⁄Bö¨y
)

	)

757 
	#ucﬁ_mîgeS‹tkeys
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_mîgeS‹tkeys
)

	)

758 
	#ucﬁ_√xt
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_√xt
)

	)

759 
	#ucﬁ_√xtPro˚s£d
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_√xtPro˚s£d
)

	)

760 
	#ucﬁ_√xtS‹tKeyP¨t
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_√xtS‹tKeyP¨t
)

	)

761 
	#ucﬁ_√xtWeight
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_√xtWeight
)

	)

762 
	#ucﬁ_n‹mÆizeSh‹tDeföôi⁄Såög
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_n‹mÆizeSh‹tDeföôi⁄Såög
)

	)

763 
	#ucﬁ_›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_›í
)

	)

764 
	#ucﬁ_›íAvaûabÀLoˇÀs
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_›íAvaûabÀLoˇÀs
)

	)

765 
	#ucﬁ_›íBö¨y
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_›íBö¨y
)

	)

766 
	#ucﬁ_›íEÀmíts
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_›íEÀmíts
)

	)

767 
	#ucﬁ_›íFromSh‹tSåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_›íFromSh‹tSåög
)

	)

768 
	#ucﬁ_›íRuÀs
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_›íRuÀs
)

	)

769 
	#ucﬁ_›íRuÀsF‹Imp‹t
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_›íRuÀsF‹Imp‹t
)

	)

770 
	#ucﬁ_›í_öã∫Æ
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_›í_öã∫Æ
)

	)

771 
	#ucﬁ_¥ï¨eSh‹tSåögO≥n
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_¥ï¨eSh‹tSåögO≥n
)

	)

772 
	#ucﬁ_¥evious
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_¥evious
)

	)

773 
	#ucﬁ_¥eviousPro˚s£d
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_¥eviousPro˚s£d
)

	)

774 
	#ucﬁ_¥im¨yOrdî
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_¥im¨yOrdî
)

	)

775 
	#ucﬁ_¥v_gëS≥cülCE
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_¥v_gëS≥cülCE
)

	)

776 
	#ucﬁ_¥v_gëS≥cülPªvCE
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_¥v_gëS≥cülPªvCE
)

	)

777 
	#ucﬁ_ª£t
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_ª£t
)

	)

778 
	#ucﬁ_ª°‹eV¨übÀT›
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_ª°‹eV¨übÀT›
)

	)

779 
	#ucﬁ_ß„Cl⁄e
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_ß„Cl⁄e
)

	)

780 
	#ucﬁ_£c⁄d¨yOrdî
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_£c⁄d¨yOrdî
)

	)

781 
	#ucﬁ_£tAâribuã
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_£tAâribuã
)

	)

782 
	#ucﬁ_£tOff£t
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_£tOff£t
)

	)

783 
	#ucﬁ_£tO±i⁄sFromHódî
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_£tO±i⁄sFromHódî
)

	)

784 
	#ucﬁ_£tRe‹dîCodes
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_£tRe‹dîCodes
)

	)

785 
	#ucﬁ_£tReqVÆidLoˇÀs
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_£tReqVÆidLoˇÀs
)

	)

786 
	#ucﬁ_£tSåígth
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_£tSåígth
)

	)

787 
	#ucﬁ_£tText
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_£tText
)

	)

788 
	#ucﬁ_£tV¨übÀT›
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_£tV¨übÀT›
)

	)

789 
	#ucﬁ_°rcﬁl
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_°rcﬁl
)

	)

790 
	#ucﬁ_°rcﬁlIãr
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_°rcﬁlIãr
)

	)

791 
	#ucﬁ_sw≠
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_sw≠
)

	)

792 
	#ucﬁ_sw≠Bö¨y
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_sw≠Bö¨y
)

	)

793 
	#ucﬁ_sw≠Invî£UCA
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_sw≠Invî£UCA
)

	)

794 
	#ucﬁ_ãπüryOrdî
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_ãπüryOrdî
)

	)

795 
	#ucﬁ_tok_as£mbÀTokíLi°
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_tok_as£mbÀTokíLi°
)

	)

796 
	#ucﬁ_tok_˛o£TokíLi°
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_tok_˛o£TokíLi°
)

	)

797 
	#ucﬁ_tok_gëNextArgumít
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_tok_gëNextArgumít
)

	)

798 
	#ucﬁ_tok_gëRuÀsFromBundÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_tok_gëRuÀsFromBundÀ
)

	)

799 
	#ucﬁ_tok_öôTokíLi°
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_tok_öôTokíLi°
)

	)

800 
	#ucﬁ_tok_∑r£NextTokí
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_tok_∑r£NextTokí
)

	)

801 
	#ucﬁ_upd©eI¡î«lSèã
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucﬁ_upd©eI¡î«lSèã
)

	)

802 
	#ucsdë_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucsdë_˛o£
)

	)

803 
	#ucsdë_dëe˘
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucsdë_dëe˘
)

	)

804 
	#ucsdë_dëe˘AŒ
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucsdë_dëe˘AŒ
)

	)

805 
	#ucsdë_íabÀI≈utFûãr
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucsdë_íabÀI≈utFûãr
)

	)

806 
	#ucsdë_gëAŒDëe˘abÀCh¨£ts
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucsdë_gëAŒDëe˘abÀCh¨£ts
)

	)

807 
	#ucsdë_gëC⁄fidí˚
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucsdë_gëC⁄fidí˚
)

	)

808 
	#ucsdë_gëL™guage
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucsdë_gëL™guage
)

	)

809 
	#ucsdë_gëName
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucsdë_gëName
)

	)

810 
	#ucsdë_gëUCh¨s
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucsdë_gëUCh¨s
)

	)

811 
	#ucsdë_isI≈utFûãrE«bÀd
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucsdë_isI≈utFûãrE«bÀd
)

	)

812 
	#ucsdë_›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucsdë_›í
)

	)

813 
	#ucsdë_£tDe˛¨edEncodög
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucsdë_£tDe˛¨edEncodög
)

	)

814 
	#ucsdë_£tText
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucsdë_£tText
)

	)

815 
	#ucuº_cou¡Cuºícõs
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucuº_cou¡Cuºícõs
)

	)

816 
	#ucuº_f‹LoˇÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucuº_f‹LoˇÀ
)

	)

817 
	#ucuº_f‹LoˇÀAndD©e
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucuº_f‹LoˇÀAndD©e
)

	)

818 
	#ucuº_gëDeÁu…Fø˘i⁄Digôs
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucuº_gëDeÁu…Fø˘i⁄Digôs
)

	)

819 
	#ucuº_gëKeyw‹dVÆuesF‹LoˇÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucuº_gëKeyw‹dVÆuesF‹LoˇÀ
)

	)

820 
	#ucuº_gëName
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucuº_gëName
)

	)

821 
	#ucuº_gëPluølName
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucuº_gëPluølName
)

	)

822 
	#ucuº_gëRoundögIn¸emít
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucuº_gëRoundögIn¸emít
)

	)

823 
	#ucuº_›íISOCuºícõs
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucuº_›íISOCuºícõs
)

	)

824 
	#ucuº_ªgi°î
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucuº_ªgi°î
)

	)

825 
	#ucuº_uƒegi°î
 
	`U_ICU_ENTRY_POINT_RENAME
(
ucuº_uƒegi°î
)

	)

826 
	#ud©_≠∂yP©ã∫
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©_≠∂yP©ã∫
)

	)

827 
	#ud©_≠∂yP©ã∫Rñ©ive
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©_≠∂yP©ã∫Rñ©ive
)

	)

828 
	#ud©_˛⁄e
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©_˛⁄e
)

	)

829 
	#ud©_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©_˛o£
)

	)

830 
	#ud©_cou¡AvaûabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©_cou¡AvaûabÀ
)

	)

831 
	#ud©_cou¡Symbﬁs
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©_cou¡Symbﬁs
)

	)

832 
	#ud©_f‹m©
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©_f‹m©
)

	)

833 
	#ud©_gë2DigôYórSèπ
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©_gë2DigôYórSèπ
)

	)

834 
	#ud©_gëAvaûabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©_gëAvaûabÀ
)

	)

835 
	#ud©_gëCÆíd¨
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©_gëCÆíd¨
)

	)

836 
	#ud©_gëLoˇÀByTy≥
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©_gëLoˇÀByTy≥
)

	)

837 
	#ud©_gëNumbîF‹m©
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©_gëNumbîF‹m©
)

	)

838 
	#ud©_gëSymbﬁs
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©_gëSymbﬁs
)

	)

839 
	#ud©_isLíõ¡
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©_isLíõ¡
)

	)

840 
	#ud©_›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©_›í
)

	)

841 
	#ud©_∑r£
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©_∑r£
)

	)

842 
	#ud©_∑r£CÆíd¨
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©_∑r£CÆíd¨
)

	)

843 
	#ud©_£t2DigôYórSèπ
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©_£t2DigôYórSèπ
)

	)

844 
	#ud©_£tCÆíd¨
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©_£tCÆíd¨
)

	)

845 
	#ud©_£tLíõ¡
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©_£tLíõ¡
)

	)

846 
	#ud©_£tNumbîF‹m©
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©_£tNumbîF‹m©
)

	)

847 
	#ud©_£tSymbﬁs
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©_£tSymbﬁs
)

	)

848 
	#ud©_toCÆíd¨D©eFõld
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©_toCÆíd¨D©eFõld
)

	)

849 
	#ud©_toP©ã∫
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©_toP©ã∫
)

	)

850 
	#ud©_toP©ã∫Rñ©iveD©e
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©_toP©ã∫Rñ©iveD©e
)

	)

851 
	#ud©_toP©ã∫Rñ©iveTime
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©_toP©ã∫Rñ©iveTime
)

	)

852 
	#ud©a_checkComm⁄D©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©a_checkComm⁄D©a
)

	)

853 
	#ud©a_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©a_˛o£
)

	)

854 
	#ud©a_˛o£Sw≠≥r
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©a_˛o£Sw≠≥r
)

	)

855 
	#ud©a_gëHódîSize
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©a_gëHódîSize
)

	)

856 
	#ud©a_gëInfo
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©a_gëInfo
)

	)

857 
	#ud©a_gëInfoSize
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©a_gëInfoSize
)

	)

858 
	#ud©a_gëLígth
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©a_gëLígth
)

	)

859 
	#ud©a_gëMem‹y
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©a_gëMem‹y
)

	)

860 
	#ud©a_gëRawMem‹y
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©a_gëRawMem‹y
)

	)

861 
	#ud©a_›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©a_›í
)

	)

862 
	#ud©a_›íChoi˚
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©a_›íChoi˚
)

	)

863 
	#ud©a_›íSw≠≥r
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©a_›íSw≠≥r
)

	)

864 
	#ud©a_›íSw≠≥rF‹I≈utD©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©a_›íSw≠≥rF‹I≈utD©a
)

	)

865 
	#ud©a_¥ötEº‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©a_¥ötEº‹
)

	)

866 
	#ud©a_ªadI¡16
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©a_ªadI¡16
)

	)

867 
	#ud©a_ªadI¡32
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©a_ªadI¡32
)

	)

868 
	#ud©a_£tAµD©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©a_£tAµD©a
)

	)

869 
	#ud©a_£tComm⁄D©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©a_£tComm⁄D©a
)

	)

870 
	#ud©a_£tFûeAc˚ss
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©a_£tFûeAc˚ss
)

	)

871 
	#ud©a_sw≠D©aHódî
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©a_sw≠D©aHódî
)

	)

872 
	#ud©a_sw≠InvSåögBlock
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©a_sw≠InvSåögBlock
)

	)

873 
	#ud©pg_addP©ã∫
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©pg_addP©ã∫
)

	)

874 
	#ud©pg_˛⁄e
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©pg_˛⁄e
)

	)

875 
	#ud©pg_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©pg_˛o£
)

	)

876 
	#ud©pg_gëAµídIãmF‹m©
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©pg_gëAµídIãmF‹m©
)

	)

877 
	#ud©pg_gëAµídIãmName
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©pg_gëAµídIãmName
)

	)

878 
	#ud©pg_gëBa£Skñë⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©pg_gëBa£Skñë⁄
)

	)

879 
	#ud©pg_gëBe°P©ã∫
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©pg_gëBe°P©ã∫
)

	)

880 
	#ud©pg_gëBe°P©ã∫WôhO±i⁄s
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©pg_gëBe°P©ã∫WôhO±i⁄s
)

	)

881 
	#ud©pg_gëD©eTimeF‹m©
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©pg_gëD©eTimeF‹m©
)

	)

882 
	#ud©pg_gëDecimÆ
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©pg_gëDecimÆ
)

	)

883 
	#ud©pg_gëP©ã∫F‹Skñë⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©pg_gëP©ã∫F‹Skñë⁄
)

	)

884 
	#ud©pg_gëSkñë⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©pg_gëSkñë⁄
)

	)

885 
	#ud©pg_›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©pg_›í
)

	)

886 
	#ud©pg_›íBa£Skñë⁄s
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©pg_›íBa£Skñë⁄s
)

	)

887 
	#ud©pg_›íEm±y
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©pg_›íEm±y
)

	)

888 
	#ud©pg_›íSkñë⁄s
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©pg_›íSkñë⁄s
)

	)

889 
	#ud©pg_ª∂a˚FõldTy≥s
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©pg_ª∂a˚FõldTy≥s
)

	)

890 
	#ud©pg_ª∂a˚FõldTy≥sWôhO±i⁄s
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©pg_ª∂a˚FõldTy≥sWôhO±i⁄s
)

	)

891 
	#ud©pg_£tAµídIãmF‹m©
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©pg_£tAµídIãmF‹m©
)

	)

892 
	#ud©pg_£tAµídIãmName
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©pg_£tAµídIãmName
)

	)

893 
	#ud©pg_£tD©eTimeF‹m©
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©pg_£tD©eTimeF‹m©
)

	)

894 
	#ud©pg_£tDecimÆ
 
	`U_ICU_ENTRY_POINT_RENAME
(
ud©pg_£tDecimÆ
)

	)

895 
	#uíum_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
uíum_˛o£
)

	)

896 
	#uíum_cou¡
 
	`U_ICU_ENTRY_POINT_RENAME
(
uíum_cou¡
)

	)

897 
	#uíum_√xt
 
	`U_ICU_ENTRY_POINT_RENAME
(
uíum_√xt
)

	)

898 
	#uíum_√xtDeÁu…
 
	`U_ICU_ENTRY_POINT_RENAME
(
uíum_√xtDeÁu…
)

	)

899 
	#uíum_›íCh¨SåögsEnumî©i⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
uíum_›íCh¨SåögsEnumî©i⁄
)

	)

900 
	#uíum_›íFromSåögEnumî©i⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
uíum_›íFromSåögEnumî©i⁄
)

	)

901 
	#uíum_ª£t
 
	`U_ICU_ENTRY_POINT_RENAME
(
uíum_ª£t
)

	)

902 
	#uíum_u√xt
 
	`U_ICU_ENTRY_POINT_RENAME
(
uíum_u√xt
)

	)

903 
	#uíum_u√xtDeÁu…
 
	`U_ICU_ENTRY_POINT_RENAME
(
uíum_u√xtDeÁu…
)

	)

904 
	#ufûe_˛o£_å™¶ô
 
	`U_ICU_ENTRY_POINT_RENAME
(
ufûe_˛o£_å™¶ô
)

	)

905 
	#ufûe_fûl_uch¨_buf„r
 
	`U_ICU_ENTRY_POINT_RENAME
(
ufûe_fûl_uch¨_buf„r
)

	)

906 
	#ufûe_Êush_io
 
	`U_ICU_ENTRY_POINT_RENAME
(
ufûe_Êush_io
)

	)

907 
	#ufûe_Êush_å™¶ô
 
	`U_ICU_ENTRY_POINT_RENAME
(
ufûe_Êush_å™¶ô
)

	)

908 
	#ufûe_gëch
 
	`U_ICU_ENTRY_POINT_RENAME
(
ufûe_gëch
)

	)

909 
	#ufûe_gëch32
 
	`U_ICU_ENTRY_POINT_RENAME
(
ufûe_gëch32
)

	)

910 
	#ufmt_64tou
 
	`U_ICU_ENTRY_POINT_RENAME
(
ufmt_64tou
)

	)

911 
	#ufmt_deÁu…CPToUnicode
 
	`U_ICU_ENTRY_POINT_RENAME
(
ufmt_deÁu…CPToUnicode
)

	)

912 
	#ufmt_digôvÆue
 
	`U_ICU_ENTRY_POINT_RENAME
(
ufmt_digôvÆue
)

	)

913 
	#ufmt_isdigô
 
	`U_ICU_ENTRY_POINT_RENAME
(
ufmt_isdigô
)

	)

914 
	#ufmt_±ou
 
	`U_ICU_ENTRY_POINT_RENAME
(
ufmt_±ou
)

	)

915 
	#ufmt_uto64
 
	`U_ICU_ENTRY_POINT_RENAME
(
ufmt_uto64
)

	)

916 
	#ufmt_ut›
 
	`U_ICU_ENTRY_POINT_RENAME
(
ufmt_ut›
)

	)

917 
	#uhash_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_˛o£
)

	)

918 
	#uhash_com∑ªCa£ÀssUnicodeSåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_com∑ªCa£ÀssUnicodeSåög
)

	)

919 
	#uhash_com∑ªCh¨s
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_com∑ªCh¨s
)

	)

920 
	#uhash_com∑ªICh¨s
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_com∑ªICh¨s
)

	)

921 
	#uhash_com∑ªL⁄g
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_com∑ªL⁄g
)

	)

922 
	#uhash_com∑ªUCh¨s
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_com∑ªUCh¨s
)

	)

923 
	#uhash_com∑ªUnicodeSåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_com∑ªUnicodeSåög
)

	)

924 
	#uhash_cou¡
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_cou¡
)

	)

925 
	#uhash_dñëeHashèbÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_dñëeHashèbÀ
)

	)

926 
	#uhash_dñëeUObje˘
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_dñëeUObje˘
)

	)

927 
	#uhash_dñëeUnicodeSåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_dñëeUnicodeSåög
)

	)

928 
	#uhash_equÆs
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_equÆs
)

	)

929 
	#uhash_föd
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_föd
)

	)

930 
	#uhash_‰ìBlock
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_‰ìBlock
)

	)

931 
	#uhash_gë
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_gë
)

	)

932 
	#uhash_gëi
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_gëi
)

	)

933 
	#uhash_hashCa£ÀssUnicodeSåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_hashCa£ÀssUnicodeSåög
)

	)

934 
	#uhash_hashCh¨s
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_hashCh¨s
)

	)

935 
	#uhash_hashICh¨s
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_hashICh¨s
)

	)

936 
	#uhash_hashL⁄g
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_hashL⁄g
)

	)

937 
	#uhash_hashUCh¨s
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_hashUCh¨s
)

	)

938 
	#uhash_hashUCh¨sN
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_hashUCh¨sN
)

	)

939 
	#uhash_hashUnicodeSåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_hashUnicodeSåög
)

	)

940 
	#uhash_igë
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_igë
)

	)

941 
	#uhash_igëi
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_igëi
)

	)

942 
	#uhash_öô
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_öô
)

	)

943 
	#uhash_ùut
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_ùut
)

	)

944 
	#uhash_ùuti
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_ùuti
)

	)

945 
	#uhash_úemove
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_úemove
)

	)

946 
	#uhash_úemovei
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_úemovei
)

	)

947 
	#uhash_√xtEÀmít
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_√xtEÀmít
)

	)

948 
	#uhash_›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_›í
)

	)

949 
	#uhash_›íSize
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_›íSize
)

	)

950 
	#uhash_put
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_put
)

	)

951 
	#uhash_puti
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_puti
)

	)

952 
	#uhash_ªmove
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_ªmove
)

	)

953 
	#uhash_ªmoveAŒ
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_ªmoveAŒ
)

	)

954 
	#uhash_ªmoveEÀmít
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_ªmoveEÀmít
)

	)

955 
	#uhash_ªmovei
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_ªmovei
)

	)

956 
	#uhash_£tKeyCom∑øt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_£tKeyCom∑øt‹
)

	)

957 
	#uhash_£tKeyDñëî
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_£tKeyDñëî
)

	)

958 
	#uhash_£tKeyHashî
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_£tKeyHashî
)

	)

959 
	#uhash_£tResizePﬁicy
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_£tResizePﬁicy
)

	)

960 
	#uhash_£tVÆueCom∑øt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_£tVÆueCom∑øt‹
)

	)

961 
	#uhash_£tVÆueDñëî
 
	`U_ICU_ENTRY_POINT_RENAME
(
uhash_£tVÆueDñëî
)

	)

962 
	#uid«_IDNToASCII
 
	`U_ICU_ENTRY_POINT_RENAME
(
uid«_IDNToASCII
)

	)

963 
	#uid«_IDNToUnicode
 
	`U_ICU_ENTRY_POINT_RENAME
(
uid«_IDNToUnicode
)

	)

964 
	#uid«_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
uid«_˛o£
)

	)

965 
	#uid«_com∑ª
 
	`U_ICU_ENTRY_POINT_RENAME
(
uid«_com∑ª
)

	)

966 
	#uid«_œbñToASCII
 
	`U_ICU_ENTRY_POINT_RENAME
(
uid«_œbñToASCII
)

	)

967 
	#uid«_œbñToASCII_UTF8
 
	`U_ICU_ENTRY_POINT_RENAME
(
uid«_œbñToASCII_UTF8
)

	)

968 
	#uid«_œbñToUnicode
 
	`U_ICU_ENTRY_POINT_RENAME
(
uid«_œbñToUnicode
)

	)

969 
	#uid«_œbñToUnicodeUTF8
 
	`U_ICU_ENTRY_POINT_RENAME
(
uid«_œbñToUnicodeUTF8
)

	)

970 
	#uid«_«meToASCII
 
	`U_ICU_ENTRY_POINT_RENAME
(
uid«_«meToASCII
)

	)

971 
	#uid«_«meToASCII_UTF8
 
	`U_ICU_ENTRY_POINT_RENAME
(
uid«_«meToASCII_UTF8
)

	)

972 
	#uid«_«meToUnicode
 
	`U_ICU_ENTRY_POINT_RENAME
(
uid«_«meToUnicode
)

	)

973 
	#uid«_«meToUnicodeUTF8
 
	`U_ICU_ENTRY_POINT_RENAME
(
uid«_«meToUnicodeUTF8
)

	)

974 
	#uid«_›íUTS46
 
	`U_ICU_ENTRY_POINT_RENAME
(
uid«_›íUTS46
)

	)

975 
	#uid«_toASCII
 
	`U_ICU_ENTRY_POINT_RENAME
(
uid«_toASCII
)

	)

976 
	#uid«_toUnicode
 
	`U_ICU_ENTRY_POINT_RENAME
(
uid«_toUnicode
)

	)

977 
	#uôî_cuºít32
 
	`U_ICU_ENTRY_POINT_RENAME
(
uôî_cuºít32
)

	)

978 
	#uôî_gëSèã
 
	`U_ICU_ENTRY_POINT_RENAME
(
uôî_gëSèã
)

	)

979 
	#uôî_√xt32
 
	`U_ICU_ENTRY_POINT_RENAME
(
uôî_√xt32
)

	)

980 
	#uôî_¥evious32
 
	`U_ICU_ENTRY_POINT_RENAME
(
uôî_¥evious32
)

	)

981 
	#uôî_£tCh¨a˘îIãøt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
uôî_£tCh¨a˘îIãøt‹
)

	)

982 
	#uôî_£tRïœ˚abÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
uôî_£tRïœ˚abÀ
)

	)

983 
	#uôî_£tSèã
 
	`U_ICU_ENTRY_POINT_RENAME
(
uôî_£tSèã
)

	)

984 
	#uôî_£tSåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
uôî_£tSåög
)

	)

985 
	#uôî_£tUTF16BE
 
	`U_ICU_ENTRY_POINT_RENAME
(
uôî_£tUTF16BE
)

	)

986 
	#uôî_£tUTF8
 
	`U_ICU_ENTRY_POINT_RENAME
(
uôî_£tUTF8
)

	)

987 
	#uldn_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
uldn_˛o£
)

	)

988 
	#uldn_gëDüÀ˘H™dlög
 
	`U_ICU_ENTRY_POINT_RENAME
(
uldn_gëDüÀ˘H™dlög
)

	)

989 
	#uldn_gëLoˇÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
uldn_gëLoˇÀ
)

	)

990 
	#uldn_keyDi•œyName
 
	`U_ICU_ENTRY_POINT_RENAME
(
uldn_keyDi•œyName
)

	)

991 
	#uldn_keyVÆueDi•œyName
 
	`U_ICU_ENTRY_POINT_RENAME
(
uldn_keyVÆueDi•œyName
)

	)

992 
	#uldn_œnguageDi•œyName
 
	`U_ICU_ENTRY_POINT_RENAME
(
uldn_œnguageDi•œyName
)

	)

993 
	#uldn_loˇÀDi•œyName
 
	`U_ICU_ENTRY_POINT_RENAME
(
uldn_loˇÀDi•œyName
)

	)

994 
	#uldn_›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
uldn_›í
)

	)

995 
	#uldn_ªgi⁄Di•œyName
 
	`U_ICU_ENTRY_POINT_RENAME
(
uldn_ªgi⁄Di•œyName
)

	)

996 
	#uldn_s¸ùtCodeDi•œyName
 
	`U_ICU_ENTRY_POINT_RENAME
(
uldn_s¸ùtCodeDi•œyName
)

	)

997 
	#uldn_s¸ùtDi•œyName
 
	`U_ICU_ENTRY_POINT_RENAME
(
uldn_s¸ùtDi•œyName
)

	)

998 
	#uldn_v¨ü¡Di•œyName
 
	`U_ICU_ENTRY_POINT_RENAME
(
uldn_v¨ü¡Di•œyName
)

	)

999 
	#uli°_addIãmBegöLi°
 
	`U_ICU_ENTRY_POINT_RENAME
(
uli°_addIãmBegöLi°
)

	)

1000 
	#uli°_addIãmEndLi°
 
	`U_ICU_ENTRY_POINT_RENAME
(
uli°_addIãmEndLi°
)

	)

1001 
	#uli°_˛o£_keyw‹d_vÆues_ôî©‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
uli°_˛o£_keyw‹d_vÆues_ôî©‹
)

	)

1002 
	#uli°_c⁄èösSåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
uli°_c⁄èösSåög
)

	)

1003 
	#uli°_cou¡_keyw‹d_vÆues
 
	`U_ICU_ENTRY_POINT_RENAME
(
uli°_cou¡_keyw‹d_vÆues
)

	)

1004 
	#uli°_¸óãEm±yLi°
 
	`U_ICU_ENTRY_POINT_RENAME
(
uli°_¸óãEm±yLi°
)

	)

1005 
	#uli°_dñëeLi°
 
	`U_ICU_ENTRY_POINT_RENAME
(
uli°_dñëeLi°
)

	)

1006 
	#uli°_gëLi°FromEnum
 
	`U_ICU_ENTRY_POINT_RENAME
(
uli°_gëLi°FromEnum
)

	)

1007 
	#uli°_gëLi°Size
 
	`U_ICU_ENTRY_POINT_RENAME
(
uli°_gëLi°Size
)

	)

1008 
	#uli°_gëNext
 
	`U_ICU_ENTRY_POINT_RENAME
(
uli°_gëNext
)

	)

1009 
	#uli°_√xt_keyw‹d_vÆue
 
	`U_ICU_ENTRY_POINT_RENAME
(
uli°_√xt_keyw‹d_vÆue
)

	)

1010 
	#uli°_ª£tLi°
 
	`U_ICU_ENTRY_POINT_RENAME
(
uli°_ª£tLi°
)

	)

1011 
	#uli°_ª£t_keyw‹d_vÆues_ôî©‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
uli°_ª£t_keyw‹d_vÆues_ôî©‹
)

	)

1012 
	#uloc_ac˚±L™guage
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_ac˚±L™guage
)

	)

1013 
	#uloc_ac˚±L™guageFromHTTP
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_ac˚±L™guageFromHTTP
)

	)

1014 
	#uloc_addLikñySubègs
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_addLikñySubègs
)

	)

1015 
	#uloc_ˇn⁄iˇlize
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_ˇn⁄iˇlize
)

	)

1016 
	#uloc_cou¡AvaûabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_cou¡AvaûabÀ
)

	)

1017 
	#uloc_f‹L™guageTag
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_f‹L™guageTag
)

	)

1018 
	#uloc_gëAvaûabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_gëAvaûabÀ
)

	)

1019 
	#uloc_gëBa£Name
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_gëBa£Name
)

	)

1020 
	#uloc_gëCh¨a˘îOrõ¡©i⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_gëCh¨a˘îOrõ¡©i⁄
)

	)

1021 
	#uloc_gëCou¡ry
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_gëCou¡ry
)

	)

1022 
	#uloc_gëCuºítCou¡ryID
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_gëCuºítCou¡ryID
)

	)

1023 
	#uloc_gëCuºítL™guageID
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_gëCuºítL™guageID
)

	)

1024 
	#uloc_gëDeÁu…
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_gëDeÁu…
)

	)

1025 
	#uloc_gëDi•œyCou¡ry
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_gëDi•œyCou¡ry
)

	)

1026 
	#uloc_gëDi•œyKeyw‹d
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_gëDi•œyKeyw‹d
)

	)

1027 
	#uloc_gëDi•œyKeyw‹dVÆue
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_gëDi•œyKeyw‹dVÆue
)

	)

1028 
	#uloc_gëDi•œyL™guage
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_gëDi•œyL™guage
)

	)

1029 
	#uloc_gëDi•œyName
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_gëDi•œyName
)

	)

1030 
	#uloc_gëDi•œyS¸ùt
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_gëDi•œyS¸ùt
)

	)

1031 
	#uloc_gëDi•œyV¨ü¡
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_gëDi•œyV¨ü¡
)

	)

1032 
	#uloc_gëISO3Cou¡ry
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_gëISO3Cou¡ry
)

	)

1033 
	#uloc_gëISO3L™guage
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_gëISO3L™guage
)

	)

1034 
	#uloc_gëISOCou¡rõs
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_gëISOCou¡rõs
)

	)

1035 
	#uloc_gëISOL™guages
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_gëISOL™guages
)

	)

1036 
	#uloc_gëKeyw‹dVÆue
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_gëKeyw‹dVÆue
)

	)

1037 
	#uloc_gëLCID
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_gëLCID
)

	)

1038 
	#uloc_gëL™guage
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_gëL™guage
)

	)

1039 
	#uloc_gëLöeOrõ¡©i⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_gëLöeOrõ¡©i⁄
)

	)

1040 
	#uloc_gëLoˇÀF‹LCID
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_gëLoˇÀF‹LCID
)

	)

1041 
	#uloc_gëName
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_gëName
)

	)

1042 
	#uloc_gëP¨ít
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_gëP¨ít
)

	)

1043 
	#uloc_gëS¸ùt
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_gëS¸ùt
)

	)

1044 
	#uloc_gëTabÀSåögWôhFÆlback
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_gëTabÀSåögWôhFÆlback
)

	)

1045 
	#uloc_gëV¨ü¡
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_gëV¨ü¡
)

	)

1046 
	#uloc_möimizeSubègs
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_möimizeSubègs
)

	)

1047 
	#uloc_›íKeyw‹dLi°
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_›íKeyw‹dLi°
)

	)

1048 
	#uloc_›íKeyw‹ds
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_›íKeyw‹ds
)

	)

1049 
	#uloc_£tDeÁu…
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_£tDeÁu…
)

	)

1050 
	#uloc_£tKeyw‹dVÆue
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_£tKeyw‹dVÆue
)

	)

1051 
	#uloc_toL™guageTag
 
	`U_ICU_ENTRY_POINT_RENAME
(
uloc_toL™guageTag
)

	)

1052 
	#ulocd©a_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
ulocd©a_˛o£
)

	)

1053 
	#ulocd©a_gëCLDRVîsi⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
ulocd©a_gëCLDRVîsi⁄
)

	)

1054 
	#ulocd©a_gëDñimôî
 
	`U_ICU_ENTRY_POINT_RENAME
(
ulocd©a_gëDñimôî
)

	)

1055 
	#ulocd©a_gëExem∂¨Së
 
	`U_ICU_ENTRY_POINT_RENAME
(
ulocd©a_gëExem∂¨Së
)

	)

1056 
	#ulocd©a_gëLoˇÀDi•œyP©ã∫
 
	`U_ICU_ENTRY_POINT_RENAME
(
ulocd©a_gëLoˇÀDi•œyP©ã∫
)

	)

1057 
	#ulocd©a_gëLoˇÀSï¨©‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
ulocd©a_gëLoˇÀSï¨©‹
)

	)

1058 
	#ulocd©a_gëMósuªmítSy°em
 
	`U_ICU_ENTRY_POINT_RENAME
(
ulocd©a_gëMósuªmítSy°em
)

	)

1059 
	#ulocd©a_gëNoSub°ôuã
 
	`U_ICU_ENTRY_POINT_RENAME
(
ulocd©a_gëNoSub°ôuã
)

	)

1060 
	#ulocd©a_gëP≠îSize
 
	`U_ICU_ENTRY_POINT_RENAME
(
ulocd©a_gëP≠îSize
)

	)

1061 
	#ulocd©a_›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
ulocd©a_›í
)

	)

1062 
	#ulocd©a_£tNoSub°ôuã
 
	`U_ICU_ENTRY_POINT_RENAME
(
ulocd©a_£tNoSub°ôuã
)

	)

1063 
	#ulocimp_gëCou¡ry
 
	`U_ICU_ENTRY_POINT_RENAME
(
ulocimp_gëCou¡ry
)

	)

1064 
	#ulocimp_gëL™guage
 
	`U_ICU_ENTRY_POINT_RENAME
(
ulocimp_gëL™guage
)

	)

1065 
	#ulocimp_gëS¸ùt
 
	`U_ICU_ENTRY_POINT_RENAME
(
ulocimp_gëS¸ùt
)

	)

1066 
	#umsg_≠∂yP©ã∫
 
	`U_ICU_ENTRY_POINT_RENAME
(
umsg_≠∂yP©ã∫
)

	)

1067 
	#umsg_autoQuŸeApo°r›he
 
	`U_ICU_ENTRY_POINT_RENAME
(
umsg_autoQuŸeApo°r›he
)

	)

1068 
	#umsg_˛⁄e
 
	`U_ICU_ENTRY_POINT_RENAME
(
umsg_˛⁄e
)

	)

1069 
	#umsg_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
umsg_˛o£
)

	)

1070 
	#umsg_f‹m©
 
	`U_ICU_ENTRY_POINT_RENAME
(
umsg_f‹m©
)

	)

1071 
	#umsg_gëLoˇÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
umsg_gëLoˇÀ
)

	)

1072 
	#umsg_›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
umsg_›í
)

	)

1073 
	#umsg_∑r£
 
	`U_ICU_ENTRY_POINT_RENAME
(
umsg_∑r£
)

	)

1074 
	#umsg_£tLoˇÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
umsg_£tLoˇÀ
)

	)

1075 
	#umsg_toP©ã∫
 
	`U_ICU_ENTRY_POINT_RENAME
(
umsg_toP©ã∫
)

	)

1076 
	#umsg_vf‹m©
 
	`U_ICU_ENTRY_POINT_RENAME
(
umsg_vf‹m©
)

	)

1077 
	#umsg_v∑r£
 
	`U_ICU_ENTRY_POINT_RENAME
(
umsg_v∑r£
)

	)

1078 
	#umtx_©omic_dec
 
	`U_ICU_ENTRY_POINT_RENAME
(
umtx_©omic_dec
)

	)

1079 
	#umtx_©omic_öc
 
	`U_ICU_ENTRY_POINT_RENAME
(
umtx_©omic_öc
)

	)

1080 
	#umtx_˛ónup
 
	`U_ICU_ENTRY_POINT_RENAME
(
umtx_˛ónup
)

	)

1081 
	#umtx_de°roy
 
	`U_ICU_ENTRY_POINT_RENAME
(
umtx_de°roy
)

	)

1082 
	#umtx_öô
 
	`U_ICU_ENTRY_POINT_RENAME
(
umtx_öô
)

	)

1083 
	#umtx_lock
 
	`U_ICU_ENTRY_POINT_RENAME
(
umtx_lock
)

	)

1084 
	#umtx_u∆ock
 
	`U_ICU_ENTRY_POINT_RENAME
(
umtx_u∆ock
)

	)

1085 
	#uni£t_gëUnicode32In°™˚
 
	`U_ICU_ENTRY_POINT_RENAME
(
uni£t_gëUnicode32In°™˚
)

	)

1086 
	#un‹m2_≠≥nd
 
	`U_ICU_ENTRY_POINT_RENAME
(
un‹m2_≠≥nd
)

	)

1087 
	#un‹m2_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
un‹m2_˛o£
)

	)

1088 
	#un‹m2_gëDecomposôi⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
un‹m2_gëDecomposôi⁄
)

	)

1089 
	#un‹m2_gëIn°™˚
 
	`U_ICU_ENTRY_POINT_RENAME
(
un‹m2_gëIn°™˚
)

	)

1090 
	#un‹m2_hasBound¨yA·î
 
	`U_ICU_ENTRY_POINT_RENAME
(
un‹m2_hasBound¨yA·î
)

	)

1091 
	#un‹m2_hasBound¨yBef‹e
 
	`U_ICU_ENTRY_POINT_RENAME
(
un‹m2_hasBound¨yBef‹e
)

	)

1092 
	#un‹m2_isI√π
 
	`U_ICU_ENTRY_POINT_RENAME
(
un‹m2_isI√π
)

	)

1093 
	#un‹m2_isN‹mÆized
 
	`U_ICU_ENTRY_POINT_RENAME
(
un‹m2_isN‹mÆized
)

	)

1094 
	#un‹m2_n‹mÆize
 
	`U_ICU_ENTRY_POINT_RENAME
(
un‹m2_n‹mÆize
)

	)

1095 
	#un‹m2_n‹mÆizeSec⁄dAndAµíd
 
	`U_ICU_ENTRY_POINT_RENAME
(
un‹m2_n‹mÆizeSec⁄dAndAµíd
)

	)

1096 
	#un‹m2_›íFûãªd
 
	`U_ICU_ENTRY_POINT_RENAME
(
un‹m2_›íFûãªd
)

	)

1097 
	#un‹m2_quickCheck
 
	`U_ICU_ENTRY_POINT_RENAME
(
un‹m2_quickCheck
)

	)

1098 
	#un‹m2_•™QuickCheckYes
 
	`U_ICU_ENTRY_POINT_RENAME
(
un‹m2_•™QuickCheckYes
)

	)

1099 
	#un‹m2_sw≠
 
	`U_ICU_ENTRY_POINT_RENAME
(
un‹m2_sw≠
)

	)

1100 
	#un‹m_˛o£Iãr
 
	`U_ICU_ENTRY_POINT_RENAME
(
un‹m_˛o£Iãr
)

	)

1101 
	#un‹m_com∑ª
 
	`U_ICU_ENTRY_POINT_RENAME
(
un‹m_com∑ª
)

	)

1102 
	#un‹m_c⁄ˇã«ã
 
	`U_ICU_ENTRY_POINT_RENAME
(
un‹m_c⁄ˇã«ã
)

	)

1103 
	#un‹m_gëFCDTrõIndex
 
	`U_ICU_ENTRY_POINT_RENAME
(
un‹m_gëFCDTrõIndex
)

	)

1104 
	#un‹m_gëQuickCheck
 
	`U_ICU_ENTRY_POINT_RENAME
(
un‹m_gëQuickCheck
)

	)

1105 
	#un‹m_isN‹mÆized
 
	`U_ICU_ENTRY_POINT_RENAME
(
un‹m_isN‹mÆized
)

	)

1106 
	#un‹m_isN‹mÆizedWôhO±i⁄s
 
	`U_ICU_ENTRY_POINT_RENAME
(
un‹m_isN‹mÆizedWôhO±i⁄s
)

	)

1107 
	#un‹m_√xt
 
	`U_ICU_ENTRY_POINT_RENAME
(
un‹m_√xt
)

	)

1108 
	#un‹m_n‹mÆize
 
	`U_ICU_ENTRY_POINT_RENAME
(
un‹m_n‹mÆize
)

	)

1109 
	#un‹m_›íIãr
 
	`U_ICU_ENTRY_POINT_RENAME
(
un‹m_›íIãr
)

	)

1110 
	#un‹m_¥evious
 
	`U_ICU_ENTRY_POINT_RENAME
(
un‹m_¥evious
)

	)

1111 
	#un‹m_quickCheck
 
	`U_ICU_ENTRY_POINT_RENAME
(
un‹m_quickCheck
)

	)

1112 
	#un‹m_quickCheckWôhO±i⁄s
 
	`U_ICU_ENTRY_POINT_RENAME
(
un‹m_quickCheckWôhO±i⁄s
)

	)

1113 
	#un‹m_£tIãr
 
	`U_ICU_ENTRY_POINT_RENAME
(
un‹m_£tIãr
)

	)

1114 
	#unum_≠∂yP©ã∫
 
	`U_ICU_ENTRY_POINT_RENAME
(
unum_≠∂yP©ã∫
)

	)

1115 
	#unum_˛⁄e
 
	`U_ICU_ENTRY_POINT_RENAME
(
unum_˛⁄e
)

	)

1116 
	#unum_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
unum_˛o£
)

	)

1117 
	#unum_cou¡AvaûabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
unum_cou¡AvaûabÀ
)

	)

1118 
	#unum_f‹m©
 
	`U_ICU_ENTRY_POINT_RENAME
(
unum_f‹m©
)

	)

1119 
	#unum_f‹m©DecimÆ
 
	`U_ICU_ENTRY_POINT_RENAME
(
unum_f‹m©DecimÆ
)

	)

1120 
	#unum_f‹m©DoubÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
unum_f‹m©DoubÀ
)

	)

1121 
	#unum_f‹m©DoubÀCuºícy
 
	`U_ICU_ENTRY_POINT_RENAME
(
unum_f‹m©DoubÀCuºícy
)

	)

1122 
	#unum_f‹m©I¡64
 
	`U_ICU_ENTRY_POINT_RENAME
(
unum_f‹m©I¡64
)

	)

1123 
	#unum_gëAâribuã
 
	`U_ICU_ENTRY_POINT_RENAME
(
unum_gëAâribuã
)

	)

1124 
	#unum_gëAvaûabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
unum_gëAvaûabÀ
)

	)

1125 
	#unum_gëDoubÀAâribuã
 
	`U_ICU_ENTRY_POINT_RENAME
(
unum_gëDoubÀAâribuã
)

	)

1126 
	#unum_gëLoˇÀByTy≥
 
	`U_ICU_ENTRY_POINT_RENAME
(
unum_gëLoˇÀByTy≥
)

	)

1127 
	#unum_gëSymbﬁ
 
	`U_ICU_ENTRY_POINT_RENAME
(
unum_gëSymbﬁ
)

	)

1128 
	#unum_gëTextAâribuã
 
	`U_ICU_ENTRY_POINT_RENAME
(
unum_gëTextAâribuã
)

	)

1129 
	#unum_›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
unum_›í
)

	)

1130 
	#unum_∑r£
 
	`U_ICU_ENTRY_POINT_RENAME
(
unum_∑r£
)

	)

1131 
	#unum_∑r£DecimÆ
 
	`U_ICU_ENTRY_POINT_RENAME
(
unum_∑r£DecimÆ
)

	)

1132 
	#unum_∑r£DoubÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
unum_∑r£DoubÀ
)

	)

1133 
	#unum_∑r£DoubÀCuºícy
 
	`U_ICU_ENTRY_POINT_RENAME
(
unum_∑r£DoubÀCuºícy
)

	)

1134 
	#unum_∑r£I¡64
 
	`U_ICU_ENTRY_POINT_RENAME
(
unum_∑r£I¡64
)

	)

1135 
	#unum_£tAâribuã
 
	`U_ICU_ENTRY_POINT_RENAME
(
unum_£tAâribuã
)

	)

1136 
	#unum_£tDoubÀAâribuã
 
	`U_ICU_ENTRY_POINT_RENAME
(
unum_£tDoubÀAâribuã
)

	)

1137 
	#unum_£tSymbﬁ
 
	`U_ICU_ENTRY_POINT_RENAME
(
unum_£tSymbﬁ
)

	)

1138 
	#unum_£tTextAâribuã
 
	`U_ICU_ENTRY_POINT_RENAME
(
unum_£tTextAâribuã
)

	)

1139 
	#unum_toP©ã∫
 
	`U_ICU_ENTRY_POINT_RENAME
(
unum_toP©ã∫
)

	)

1140 
	#u∂ug_˛o£Libøry
 
	`U_ICU_ENTRY_POINT_RENAME
(
u∂ug_˛o£Libøry
)

	)

1141 
	#u∂ug_födLibøry
 
	`U_ICU_ENTRY_POINT_RENAME
(
u∂ug_födLibøry
)

	)

1142 
	#u∂ug_gëC⁄figuøti⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
u∂ug_gëC⁄figuøti⁄
)

	)

1143 
	#u∂ug_gëC⁄ãxt
 
	`U_ICU_ENTRY_POINT_RENAME
(
u∂ug_gëC⁄ãxt
)

	)

1144 
	#u∂ug_gëCuºítLevñ
 
	`U_ICU_ENTRY_POINT_RENAME
(
u∂ug_gëCuºítLevñ
)

	)

1145 
	#u∂ug_gëLibøry
 
	`U_ICU_ENTRY_POINT_RENAME
(
u∂ug_gëLibøry
)

	)

1146 
	#u∂ug_gëLibøryName
 
	`U_ICU_ENTRY_POINT_RENAME
(
u∂ug_gëLibøryName
)

	)

1147 
	#u∂ug_gëPlugI¡î«l
 
	`U_ICU_ENTRY_POINT_RENAME
(
u∂ug_gëPlugI¡î«l
)

	)

1148 
	#u∂ug_gëPlugLevñ
 
	`U_ICU_ENTRY_POINT_RENAME
(
u∂ug_gëPlugLevñ
)

	)

1149 
	#u∂ug_gëPlugLﬂdSètus
 
	`U_ICU_ENTRY_POINT_RENAME
(
u∂ug_gëPlugLﬂdSètus
)

	)

1150 
	#u∂ug_gëPlugName
 
	`U_ICU_ENTRY_POINT_RENAME
(
u∂ug_gëPlugName
)

	)

1151 
	#u∂ug_gëPlugöFûe
 
	`U_ICU_ENTRY_POINT_RENAME
(
u∂ug_gëPlugöFûe
)

	)

1152 
	#u∂ug_gëSymbﬁName
 
	`U_ICU_ENTRY_POINT_RENAME
(
u∂ug_gëSymbﬁName
)

	)

1153 
	#u∂ug_öô
 
	`U_ICU_ENTRY_POINT_RENAME
(
u∂ug_öô
)

	)

1154 
	#u∂ug_lﬂdPlugFromE¡rypoöt
 
	`U_ICU_ENTRY_POINT_RENAME
(
u∂ug_lﬂdPlugFromE¡rypoöt
)

	)

1155 
	#u∂ug_lﬂdPlugFromLibøry
 
	`U_ICU_ENTRY_POINT_RENAME
(
u∂ug_lﬂdPlugFromLibøry
)

	)

1156 
	#u∂ug_√xtPlug
 
	`U_ICU_ENTRY_POINT_RENAME
(
u∂ug_√xtPlug
)

	)

1157 
	#u∂ug_›íLibøry
 
	`U_ICU_ENTRY_POINT_RENAME
(
u∂ug_›íLibøry
)

	)

1158 
	#u∂ug_ªmovePlug
 
	`U_ICU_ENTRY_POINT_RENAME
(
u∂ug_ªmovePlug
)

	)

1159 
	#u∂ug_£tC⁄ãxt
 
	`U_ICU_ENTRY_POINT_RENAME
(
u∂ug_£tC⁄ãxt
)

	)

1160 
	#u∂ug_£tPlugLevñ
 
	`U_ICU_ENTRY_POINT_RENAME
(
u∂ug_£tPlugLevñ
)

	)

1161 
	#u∂ug_£tPlugName
 
	`U_ICU_ENTRY_POINT_RENAME
(
u∂ug_£tPlugName
)

	)

1162 
	#u∂ug_£tPlugNoU∆ﬂd
 
	`U_ICU_ENTRY_POINT_RENAME
(
u∂ug_£tPlugNoU∆ﬂd
)

	)

1163 
	#u≤ame_sw≠
 
	`U_ICU_ENTRY_POINT_RENAME
(
u≤ame_sw≠
)

	)

1164 
	#u¥›s_gëSour˚
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥›s_gëSour˚
)

	)

1165 
	#u¥›svec_addPr›îtySèπs
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥›svec_addPr›îtySèπs
)

	)

1166 
	#u¥v_´°∫˝y
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_´°∫˝y
)

	)

1167 
	#u¥v_asciiFromEbcdic
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_asciiFromEbcdic
)

	)

1168 
	#u¥v_asciôﬁowî
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_asciôﬁowî
)

	)

1169 
	#u¥v_˚û
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_˚û
)

	)

1170 
	#u¥v_˙âab_addC⁄åa˘i⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_˙âab_addC⁄åa˘i⁄
)

	)

1171 
	#u¥v_˙âab_ch™geC⁄åa˘i⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_˙âab_ch™geC⁄åa˘i⁄
)

	)

1172 
	#u¥v_˙âab_ch™geLa°CE
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_˙âab_ch™geLa°CE
)

	)

1173 
	#u¥v_˙âab_˛⁄e
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_˙âab_˛⁄e
)

	)

1174 
	#u¥v_˙âab_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_˙âab_˛o£
)

	)

1175 
	#u¥v_˙âab_c⁄°ru˘TabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_˙âab_c⁄°ru˘TabÀ
)

	)

1176 
	#u¥v_˙âab_födCE
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_˙âab_födCE
)

	)

1177 
	#u¥v_˙âab_födCP
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_˙âab_födCP
)

	)

1178 
	#u¥v_˙âab_gëCE
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_˙âab_gëCE
)

	)

1179 
	#u¥v_˙âab_ö£πC⁄åa˘i⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_˙âab_ö£πC⁄åa˘i⁄
)

	)

1180 
	#u¥v_˙âab_isTaû‹ed
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_˙âab_isTaû‹ed
)

	)

1181 
	#u¥v_˙âab_›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_˙âab_›í
)

	)

1182 
	#u¥v_˙âab_£tC⁄åa˘i⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_˙âab_£tC⁄åa˘i⁄
)

	)

1183 
	#u¥v_cﬁlIãøãAtEnd
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_cﬁlIãøãAtEnd
)

	)

1184 
	#u¥v_com∑ªASCIIPr›îtyNames
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_com∑ªASCIIPr›îtyNames
)

	)

1185 
	#u¥v_com∑ªEBCDICPr›îtyNames
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_com∑ªEBCDICPr›îtyNames
)

	)

1186 
	#u¥v_com∑ªInvAscii
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_com∑ªInvAscii
)

	)

1187 
	#u¥v_com∑ªInvEbcdic
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_com∑ªInvEbcdic
)

	)

1188 
	#u¥v_com∑ªInvEbcdicAsAscii
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_com∑ªInvEbcdicAsAscii
)

	)

1189 
	#u¥v_c⁄vîtToLCID
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_c⁄vîtToLCID
)

	)

1190 
	#u¥v_c⁄vîtToPosix
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_c⁄vîtToPosix
)

	)

1191 
	#u¥v_c›yAscii
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_c›yAscii
)

	)

1192 
	#u¥v_c›yEbcdic
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_c›yEbcdic
)

	)

1193 
	#u¥v_decC⁄ãxtCÀ¨Sètus
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decC⁄ãxtCÀ¨Sètus
)

	)

1194 
	#u¥v_decC⁄ãxtDeÁu…
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decC⁄ãxtDeÁu…
)

	)

1195 
	#u¥v_decC⁄ãxtGëRoundög
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decC⁄ãxtGëRoundög
)

	)

1196 
	#u¥v_decC⁄ãxtGëSètus
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decC⁄ãxtGëSètus
)

	)

1197 
	#u¥v_decC⁄ãxtRe°‹eSètus
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decC⁄ãxtRe°‹eSètus
)

	)

1198 
	#u¥v_decC⁄ãxtSaveSètus
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decC⁄ãxtSaveSètus
)

	)

1199 
	#u¥v_decC⁄ãxtSëRoundög
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decC⁄ãxtSëRoundög
)

	)

1200 
	#u¥v_decC⁄ãxtSëSètus
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decC⁄ãxtSëSètus
)

	)

1201 
	#u¥v_decC⁄ãxtSëSètusFromSåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decC⁄ãxtSëSètusFromSåög
)

	)

1202 
	#u¥v_decC⁄ãxtSëSètusFromSåögQuõt
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decC⁄ãxtSëSètusFromSåögQuõt
)

	)

1203 
	#u¥v_decC⁄ãxtSëSètusQuõt
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decC⁄ãxtSëSètusQuõt
)

	)

1204 
	#u¥v_decC⁄ãxtSètusToSåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decC⁄ãxtSètusToSåög
)

	)

1205 
	#u¥v_decC⁄ãxtTe°Endün
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decC⁄ãxtTe°Endün
)

	)

1206 
	#u¥v_decC⁄ãxtTe°SavedSètus
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decC⁄ãxtTe°SavedSètus
)

	)

1207 
	#u¥v_decC⁄ãxtTe°Sètus
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decC⁄ãxtTe°Sètus
)

	)

1208 
	#u¥v_decC⁄ãxtZîoSètus
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decC⁄ãxtZîoSètus
)

	)

1209 
	#u¥v_decNumbîAbs
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîAbs
)

	)

1210 
	#u¥v_decNumbîAdd
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîAdd
)

	)

1211 
	#u¥v_decNumbîAnd
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîAnd
)

	)

1212 
	#u¥v_decNumbîCœss
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîCœss
)

	)

1213 
	#u¥v_decNumbîCœssToSåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîCœssToSåög
)

	)

1214 
	#u¥v_decNumbîCom∑ª
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîCom∑ª
)

	)

1215 
	#u¥v_decNumbîCom∑ªSig«l
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîCom∑ªSig«l
)

	)

1216 
	#u¥v_decNumbîCom∑ªTŸÆ
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîCom∑ªTŸÆ
)

	)

1217 
	#u¥v_decNumbîCom∑ªTŸÆMag
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîCom∑ªTŸÆMag
)

	)

1218 
	#u¥v_decNumbîC›y
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîC›y
)

	)

1219 
	#u¥v_decNumbîC›yAbs
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîC›yAbs
)

	)

1220 
	#u¥v_decNumbîC›yNeg©e
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîC›yNeg©e
)

	)

1221 
	#u¥v_decNumbîC›ySign
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîC›ySign
)

	)

1222 
	#u¥v_decNumbîDivide
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîDivide
)

	)

1223 
	#u¥v_decNumbîDivideI¡egî
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîDivideI¡egî
)

	)

1224 
	#u¥v_decNumbîExp
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîExp
)

	)

1225 
	#u¥v_decNumbîFMA
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîFMA
)

	)

1226 
	#u¥v_decNumbîFromI¡32
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîFromI¡32
)

	)

1227 
	#u¥v_decNumbîFromSåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîFromSåög
)

	)

1228 
	#u¥v_decNumbîFromUI¡32
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîFromUI¡32
)

	)

1229 
	#u¥v_decNumbîGëBCD
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîGëBCD
)

	)

1230 
	#u¥v_decNumbîInvît
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîInvît
)

	)

1231 
	#u¥v_decNumbîIsN‹mÆ
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîIsN‹mÆ
)

	)

1232 
	#u¥v_decNumbîIsSubn‹mÆ
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîIsSubn‹mÆ
)

	)

1233 
	#u¥v_decNumbîLn
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîLn
)

	)

1234 
	#u¥v_decNumbîLog10
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîLog10
)

	)

1235 
	#u¥v_decNumbîLogB
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîLogB
)

	)

1236 
	#u¥v_decNumbîMax
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîMax
)

	)

1237 
	#u¥v_decNumbîMaxMag
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîMaxMag
)

	)

1238 
	#u¥v_decNumbîMö
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîMö
)

	)

1239 
	#u¥v_decNumbîMöMag
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîMöMag
)

	)

1240 
	#u¥v_decNumbîMöus
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîMöus
)

	)

1241 
	#u¥v_decNumbîMu…ùly
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîMu…ùly
)

	)

1242 
	#u¥v_decNumbîNextMöus
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîNextMöus
)

	)

1243 
	#u¥v_decNumbîNextPlus
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîNextPlus
)

	)

1244 
	#u¥v_decNumbîNextTow¨d
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîNextTow¨d
)

	)

1245 
	#u¥v_decNumbîN‹mÆize
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîN‹mÆize
)

	)

1246 
	#u¥v_decNumbîOr
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîOr
)

	)

1247 
	#u¥v_decNumbîPlus
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîPlus
)

	)

1248 
	#u¥v_decNumbîPowî
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîPowî
)

	)

1249 
	#u¥v_decNumbîQu™tize
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîQu™tize
)

	)

1250 
	#u¥v_decNumbîRedu˚
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîRedu˚
)

	)

1251 
	#u¥v_decNumbîRemaödî
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîRemaödî
)

	)

1252 
	#u¥v_decNumbîRemaödîNór
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîRemaödîNór
)

	)

1253 
	#u¥v_decNumbîResˇÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîResˇÀ
)

	)

1254 
	#u¥v_decNumbîRŸ©e
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîRŸ©e
)

	)

1255 
	#u¥v_decNumbîSameQu™tum
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîSameQu™tum
)

	)

1256 
	#u¥v_decNumbîSˇÀB
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîSˇÀB
)

	)

1257 
	#u¥v_decNumbîSëBCD
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîSëBCD
)

	)

1258 
	#u¥v_decNumbîShi·
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîShi·
)

	)

1259 
	#u¥v_decNumbîSqu¨eRoŸ
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîSqu¨eRoŸ
)

	)

1260 
	#u¥v_decNumbîSubåa˘
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîSubåa˘
)

	)

1261 
	#u¥v_decNumbîToEngSåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîToEngSåög
)

	)

1262 
	#u¥v_decNumbîToI¡32
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîToI¡32
)

	)

1263 
	#u¥v_decNumbîToI¡egølExa˘
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîToI¡egølExa˘
)

	)

1264 
	#u¥v_decNumbîToI¡egølVÆue
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîToI¡egølVÆue
)

	)

1265 
	#u¥v_decNumbîToSåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîToSåög
)

	)

1266 
	#u¥v_decNumbîToUI¡32
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîToUI¡32
)

	)

1267 
	#u¥v_decNumbîTrim
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîTrim
)

	)

1268 
	#u¥v_decNumbîVîsi⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîVîsi⁄
)

	)

1269 
	#u¥v_decNumbîX‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîX‹
)

	)

1270 
	#u¥v_decNumbîZîo
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_decNumbîZîo
)

	)

1271 
	#u¥v_dñëe_cﬁlIãøã
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_dñëe_cﬁlIãøã
)

	)

1272 
	#u¥v_dl_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_dl_˛o£
)

	)

1273 
	#u¥v_dl_›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_dl_›í
)

	)

1274 
	#u¥v_dl_sym
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_dl_sym
)

	)

1275 
	#u¥v_ó°∫˝y
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_ó°∫˝y
)

	)

1276 
	#u¥v_ebcdicFromAscii
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_ebcdicFromAscii
)

	)

1277 
	#u¥v_ebcdi˘ﬁowî
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_ebcdi˘ﬁowî
)

	)

1278 
	#u¥v_Ábs
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_Ábs
)

	)

1279 
	#u¥v_Êo‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_Êo‹
)

	)

1280 
	#u¥v_fmax
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_fmax
)

	)

1281 
	#u¥v_fmö
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_fmö
)

	)

1282 
	#u¥v_fmod
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_fmod
)

	)

1283 
	#u¥v_‰ì
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_‰ì
)

	)

1284 
	#u¥v_gëCh¨NameCh¨a˘îs
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_gëCh¨NameCh¨a˘îs
)

	)

1285 
	#u¥v_gëDeÁu…Codïage
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_gëDeÁu…Codïage
)

	)

1286 
	#u¥v_gëDeÁu…LoˇÀID
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_gëDeÁu…LoˇÀID
)

	)

1287 
	#u¥v_gëInföôy
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_gëInföôy
)

	)

1288 
	#u¥v_gëMaxCh¨NameLígth
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_gëMaxCh¨NameLígth
)

	)

1289 
	#u¥v_gëMaxVÆues
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_gëMaxVÆues
)

	)

1290 
	#u¥v_gëNaN
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_gëNaN
)

	)

1291 
	#u¥v_gëRawUTCtime
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_gëRawUTCtime
)

	)

1292 
	#u¥v_gëSèticCuºícyName
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_gëSèticCuºícyName
)

	)

1293 
	#u¥v_gëUTCtime
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_gëUTCtime
)

	)

1294 
	#u¥v_havePr›îtõs
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_havePr›îtõs
)

	)

1295 
	#u¥v_öô_cﬁlIãøã
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_öô_cﬁlIãøã
)

	)

1296 
	#u¥v_öô_p˚
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_öô_p˚
)

	)

1297 
	#u¥v_öt32Com∑øt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_öt32Com∑øt‹
)

	)

1298 
	#u¥v_isInföôe
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_isInföôe
)

	)

1299 
	#u¥v_isInv¨ü¡Såög
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_isInv¨ü¡Såög
)

	)

1300 
	#u¥v_isInv¨ü¡USåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_isInv¨ü¡USåög
)

	)

1301 
	#u¥v_isNaN
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_isNaN
)

	)

1302 
	#u¥v_isNeg©iveInföôy
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_isNeg©iveInföôy
)

	)

1303 
	#u¥v_isPosôiveInföôy
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_isPosôiveInföôy
)

	)

1304 
	#u¥v_isRuÀWhôeS∑˚
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_isRuÀWhôeS∑˚
)

	)

1305 
	#u¥v_ôou
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_ôou
)

	)

1306 
	#u¥v_log
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_log
)

	)

1307 
	#u¥v_mÆloc
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_mÆloc
)

	)

1308 
	#u¥v_m≠Fûe
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_m≠Fûe
)

	)

1309 
	#u¥v_max
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_max
)

	)

1310 
	#u¥v_maxM™tisß
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_maxM™tisß
)

	)

1311 
	#u¥v_maximumPå
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_maximumPå
)

	)

1312 
	#u¥v_mö
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_mö
)

	)

1313 
	#u¥v_modf
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_modf
)

	)

1314 
	#u¥v_√w_cﬁlIãøã
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_√w_cﬁlIãøã
)

	)

1315 
	#u¥v_›íRuÀWhôeS∑˚Së
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_›íRuÀWhôeS∑˚Së
)

	)

1316 
	#u¥v_∑r£Cuºícy
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_∑r£Cuºícy
)

	)

1317 
	#u¥v_∑thIsAbsﬁuã
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_∑thIsAbsﬁuã
)

	)

1318 
	#u¥v_pow
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_pow
)

	)

1319 
	#u¥v_pow10
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_pow10
)

	)

1320 
	#u¥v_ªÆloc
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_ªÆloc
)

	)

1321 
	#u¥v_round
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_round
)

	)

1322 
	#u¥v_s‹tAºay
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_s‹tAºay
)

	)

1323 
	#u¥v_°rCom∑ª
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_°rCom∑ª
)

	)

1324 
	#u¥v_°rdup
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_°rdup
)

	)

1325 
	#u¥v_°∫dup
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_°∫dup
)

	)

1326 
	#u¥v_sy¡axEº‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_sy¡axEº‹
)

	)

1327 
	#u¥v_timez⁄e
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_timez⁄e
)

	)

1328 
	#u¥v_touµî
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_touµî
)

	)

1329 
	#u¥v_åunc
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_åunc
)

	)

1330 
	#u¥v_tz«me
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_tz«me
)

	)

1331 
	#u¥v_tz£t
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_tz£t
)

	)

1332 
	#u¥v_uˇ_addAnEÀmít
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_uˇ_addAnEÀmít
)

	)

1333 
	#u¥v_uˇ_as£mbÀTabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_uˇ_as£mbÀTabÀ
)

	)

1334 
	#u¥v_uˇ_ˇn⁄iˇlClosuª
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_uˇ_ˇn⁄iˇlClosuª
)

	)

1335 
	#u¥v_uˇ_˛o£TempTabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_uˇ_˛o£TempTabÀ
)

	)

1336 
	#u¥v_uˇ_gëCodePoötFromRaw
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_uˇ_gëCodePoötFromRaw
)

	)

1337 
	#u¥v_uˇ_gëIm∂icôFromRaw
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_uˇ_gëIm∂icôFromRaw
)

	)

1338 
	#u¥v_uˇ_gëRawFromCodePoöt
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_uˇ_gëRawFromCodePoöt
)

	)

1339 
	#u¥v_uˇ_gëRawFromIm∂icô
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_uˇ_gëRawFromIm∂icô
)

	)

1340 
	#u¥v_uˇ_öôIm∂icôC⁄°™ts
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_uˇ_öôIm∂icôC⁄°™ts
)

	)

1341 
	#u¥v_uˇ_öôTempTabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_uˇ_öôTempTabÀ
)

	)

1342 
	#u¥v_uöt16Com∑øt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_uöt16Com∑øt‹
)

	)

1343 
	#u¥v_uöt32Com∑øt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_uöt32Com∑øt‹
)

	)

1344 
	#u¥v_unm≠Fûe
 
	`U_ICU_ENTRY_POINT_RENAME
(
u¥v_unm≠Fûe
)

	)

1345 
	#upvec_˛⁄eAºay
 
	`U_ICU_ENTRY_POINT_RENAME
(
upvec_˛⁄eAºay
)

	)

1346 
	#upvec_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
upvec_˛o£
)

	)

1347 
	#upvec_com∑˘
 
	`U_ICU_ENTRY_POINT_RENAME
(
upvec_com∑˘
)

	)

1348 
	#upvec_com∑˘ToUTrõ2H™dÀr
 
	`U_ICU_ENTRY_POINT_RENAME
(
upvec_com∑˘ToUTrõ2H™dÀr
)

	)

1349 
	#upvec_com∑˘ToUTrõ2WôhRowIndexes
 
	`U_ICU_ENTRY_POINT_RENAME
(
upvec_com∑˘ToUTrõ2WôhRowIndexes
)

	)

1350 
	#upvec_gëAºay
 
	`U_ICU_ENTRY_POINT_RENAME
(
upvec_gëAºay
)

	)

1351 
	#upvec_gëRow
 
	`U_ICU_ENTRY_POINT_RENAME
(
upvec_gëRow
)

	)

1352 
	#upvec_gëVÆue
 
	`U_ICU_ENTRY_POINT_RENAME
(
upvec_gëVÆue
)

	)

1353 
	#upvec_›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
upvec_›í
)

	)

1354 
	#upvec_£tVÆue
 
	`U_ICU_ENTRY_POINT_RENAME
(
upvec_£tVÆue
)

	)

1355 
	#uªgex_≠≥ndRïœ˚mít
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_≠≥ndRïœ˚mít
)

	)

1356 
	#uªgex_≠≥ndRïœ˚mítUText
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_≠≥ndRïœ˚mítUText
)

	)

1357 
	#uªgex_≠≥ndTaû
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_≠≥ndTaû
)

	)

1358 
	#uªgex_≠≥ndTaûUText
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_≠≥ndTaûUText
)

	)

1359 
	#uªgex_˛⁄e
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_˛⁄e
)

	)

1360 
	#uªgex_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_˛o£
)

	)

1361 
	#uªgex_íd
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_íd
)

	)

1362 
	#uªgex_íd64
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_íd64
)

	)

1363 
	#uªgex_föd
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_föd
)

	)

1364 
	#uªgex_föd64
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_föd64
)

	)

1365 
	#uªgex_födNext
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_födNext
)

	)

1366 
	#uªgex_Êags
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_Êags
)

	)

1367 
	#uªgex_gëFödProgªssCÆlback
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_gëFödProgªssCÆlback
)

	)

1368 
	#uªgex_gëM©chCÆlback
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_gëM©chCÆlback
)

	)

1369 
	#uªgex_gëSèckLimô
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_gëSèckLimô
)

	)

1370 
	#uªgex_gëText
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_gëText
)

	)

1371 
	#uªgex_gëTimeLimô
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_gëTimeLimô
)

	)

1372 
	#uªgex_gëUText
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_gëUText
)

	)

1373 
	#uªgex_group
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_group
)

	)

1374 
	#uªgex_groupCou¡
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_groupCou¡
)

	)

1375 
	#uªgex_groupUText
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_groupUText
)

	)

1376 
	#uªgex_groupUTextDìp
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_groupUTextDìp
)

	)

1377 
	#uªgex_hasAnch‹ögBounds
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_hasAnch‹ögBounds
)

	)

1378 
	#uªgex_hasTøn•¨ítBounds
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_hasTøn•¨ítBounds
)

	)

1379 
	#uªgex_hôEnd
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_hôEnd
)

	)

1380 
	#uªgex_lookögAt
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_lookögAt
)

	)

1381 
	#uªgex_lookögAt64
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_lookögAt64
)

	)

1382 
	#uªgex_m©ches
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_m©ches
)

	)

1383 
	#uªgex_m©ches64
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_m©ches64
)

	)

1384 
	#uªgex_›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_›í
)

	)

1385 
	#uªgex_›íC
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_›íC
)

	)

1386 
	#uªgex_›íUText
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_›íUText
)

	)

1387 
	#uªgex_∑âîn
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_∑âîn
)

	)

1388 
	#uªgex_∑âînUText
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_∑âînUText
)

	)

1389 
	#uªgex_ªgi⁄End
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_ªgi⁄End
)

	)

1390 
	#uªgex_ªgi⁄End64
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_ªgi⁄End64
)

	)

1391 
	#uªgex_ªgi⁄Sèπ
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_ªgi⁄Sèπ
)

	)

1392 
	#uªgex_ªgi⁄Sèπ64
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_ªgi⁄Sèπ64
)

	)

1393 
	#uªgex_ª∂a˚AŒ
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_ª∂a˚AŒ
)

	)

1394 
	#uªgex_ª∂a˚AŒUText
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_ª∂a˚AŒUText
)

	)

1395 
	#uªgex_ª∂a˚Fú°
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_ª∂a˚Fú°
)

	)

1396 
	#uªgex_ª∂a˚Fú°UText
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_ª∂a˚Fú°UText
)

	)

1397 
	#uªgex_ªquúeEnd
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_ªquúeEnd
)

	)

1398 
	#uªgex_ª£t
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_ª£t
)

	)

1399 
	#uªgex_ª£t64
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_ª£t64
)

	)

1400 
	#uªgex_£tFödProgªssCÆlback
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_£tFödProgªssCÆlback
)

	)

1401 
	#uªgex_£tM©chCÆlback
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_£tM©chCÆlback
)

	)

1402 
	#uªgex_£tRegi⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_£tRegi⁄
)

	)

1403 
	#uªgex_£tRegi⁄64
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_£tRegi⁄64
)

	)

1404 
	#uªgex_£tRegi⁄AndSèπ
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_£tRegi⁄AndSèπ
)

	)

1405 
	#uªgex_£tSèckLimô
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_£tSèckLimô
)

	)

1406 
	#uªgex_£tText
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_£tText
)

	)

1407 
	#uªgex_£tTimeLimô
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_£tTimeLimô
)

	)

1408 
	#uªgex_£tUText
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_£tUText
)

	)

1409 
	#uªgex_•lô
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_•lô
)

	)

1410 
	#uªgex_•lôUText
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_•lôUText
)

	)

1411 
	#uªgex_°¨t
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_°¨t
)

	)

1412 
	#uªgex_°¨t64
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_°¨t64
)

	)

1413 
	#uªgex_uc°r_u√sˇ≥_ch¨At
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_uc°r_u√sˇ≥_ch¨At
)

	)

1414 
	#uªgex_u£Anch‹ögBounds
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_u£Anch‹ögBounds
)

	)

1415 
	#uªgex_u£Tøn•¨ítBounds
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_u£Tøn•¨ítBounds
)

	)

1416 
	#uªgex_uãxt_u√sˇ≥_ch¨At
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªgex_uãxt_u√sˇ≥_ch¨At
)

	)

1417 
	#uªs_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_˛o£
)

	)

1418 
	#uªs_c›yResb
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_c›yResb
)

	)

1419 
	#uªs_cou¡AºayIãms
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_cou¡AºayIãms
)

	)

1420 
	#uªs_födResour˚
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_födResour˚
)

	)

1421 
	#uªs_födSubResour˚
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_födSubResour˚
)

	)

1422 
	#uªs_gëBö¨y
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_gëBö¨y
)

	)

1423 
	#uªs_gëByIndex
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_gëByIndex
)

	)

1424 
	#uªs_gëByKey
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_gëByKey
)

	)

1425 
	#uªs_gëByKeyWôhFÆlback
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_gëByKeyWôhFÆlback
)

	)

1426 
	#uªs_gëFun˘i⁄ÆEquivÆít
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_gëFun˘i⁄ÆEquivÆít
)

	)

1427 
	#uªs_gëI¡
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_gëI¡
)

	)

1428 
	#uªs_gëI¡Ve˘‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_gëI¡Ve˘‹
)

	)

1429 
	#uªs_gëKey
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_gëKey
)

	)

1430 
	#uªs_gëKeyw‹dVÆues
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_gëKeyw‹dVÆues
)

	)

1431 
	#uªs_gëLoˇÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_gëLoˇÀ
)

	)

1432 
	#uªs_gëLoˇÀByTy≥
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_gëLoˇÀByTy≥
)

	)

1433 
	#uªs_gëLoˇÀI¡î«l
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_gëLoˇÀI¡î«l
)

	)

1434 
	#uªs_gëName
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_gëName
)

	)

1435 
	#uªs_gëNextResour˚
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_gëNextResour˚
)

	)

1436 
	#uªs_gëNextSåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_gëNextSåög
)

	)

1437 
	#uªs_gëSize
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_gëSize
)

	)

1438 
	#uªs_gëSåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_gëSåög
)

	)

1439 
	#uªs_gëSåögByIndex
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_gëSåögByIndex
)

	)

1440 
	#uªs_gëSåögByKey
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_gëSåögByKey
)

	)

1441 
	#uªs_gëSåögByKeyWôhFÆlback
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_gëSåögByKeyWôhFÆlback
)

	)

1442 
	#uªs_gëTy≥
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_gëTy≥
)

	)

1443 
	#uªs_gëUI¡
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_gëUI¡
)

	)

1444 
	#uªs_gëUTF8Såög
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_gëUTF8Såög
)

	)

1445 
	#uªs_gëUTF8SåögByIndex
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_gëUTF8SåögByIndex
)

	)

1446 
	#uªs_gëUTF8SåögByKey
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_gëUTF8SåögByKey
)

	)

1447 
	#uªs_gëVîsi⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_gëVîsi⁄
)

	)

1448 
	#uªs_gëVîsi⁄ByKey
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_gëVîsi⁄ByKey
)

	)

1449 
	#uªs_gëVîsi⁄Numbî
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_gëVîsi⁄Numbî
)

	)

1450 
	#uªs_gëVîsi⁄NumbîI¡î«l
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_gëVîsi⁄NumbîI¡î«l
)

	)

1451 
	#uªs_hasNext
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_hasNext
)

	)

1452 
	#uªs_öôSèckObje˘
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_öôSèckObje˘
)

	)

1453 
	#uªs_›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_›í
)

	)

1454 
	#uªs_›íAvaûabÀLoˇÀs
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_›íAvaûabÀLoˇÀs
)

	)

1455 
	#uªs_›íDúe˘
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_›íDúe˘
)

	)

1456 
	#uªs_›íFûlIn
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_›íFûlIn
)

	)

1457 
	#uªs_›íU
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_›íU
)

	)

1458 
	#uªs_ª£tIãøt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_ª£tIãøt‹
)

	)

1459 
	#uªs_sw≠
 
	`U_ICU_ENTRY_POINT_RENAME
(
uªs_sw≠
)

	)

1460 
	#us¸ùt_˛o£Run
 
	`U_ICU_ENTRY_POINT_RENAME
(
us¸ùt_˛o£Run
)

	)

1461 
	#us¸ùt_gëCode
 
	`U_ICU_ENTRY_POINT_RENAME
(
us¸ùt_gëCode
)

	)

1462 
	#us¸ùt_gëName
 
	`U_ICU_ENTRY_POINT_RENAME
(
us¸ùt_gëName
)

	)

1463 
	#us¸ùt_gëS¸ùt
 
	`U_ICU_ENTRY_POINT_RENAME
(
us¸ùt_gëS¸ùt
)

	)

1464 
	#us¸ùt_gëS¸ùtExãnsi⁄s
 
	`U_ICU_ENTRY_POINT_RENAME
(
us¸ùt_gëS¸ùtExãnsi⁄s
)

	)

1465 
	#us¸ùt_gëSh‹tName
 
	`U_ICU_ENTRY_POINT_RENAME
(
us¸ùt_gëSh‹tName
)

	)

1466 
	#us¸ùt_hasS¸ùt
 
	`U_ICU_ENTRY_POINT_RENAME
(
us¸ùt_hasS¸ùt
)

	)

1467 
	#us¸ùt_√xtRun
 
	`U_ICU_ENTRY_POINT_RENAME
(
us¸ùt_√xtRun
)

	)

1468 
	#us¸ùt_›íRun
 
	`U_ICU_ENTRY_POINT_RENAME
(
us¸ùt_›íRun
)

	)

1469 
	#us¸ùt_ª£tRun
 
	`U_ICU_ENTRY_POINT_RENAME
(
us¸ùt_ª£tRun
)

	)

1470 
	#us¸ùt_£tRunText
 
	`U_ICU_ENTRY_POINT_RENAME
(
us¸ùt_£tRunText
)

	)

1471 
	#u£¨ch_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£¨ch_˛o£
)

	)

1472 
	#u£¨ch_fú°
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£¨ch_fú°
)

	)

1473 
	#u£¨ch_fﬁlowög
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£¨ch_fﬁlowög
)

	)

1474 
	#u£¨ch_gëAâribuã
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£¨ch_gëAâribuã
)

	)

1475 
	#u£¨ch_gëBªakIãøt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£¨ch_gëBªakIãøt‹
)

	)

1476 
	#u£¨ch_gëCﬁœt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£¨ch_gëCﬁœt‹
)

	)

1477 
	#u£¨ch_gëM©chedLígth
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£¨ch_gëM©chedLígth
)

	)

1478 
	#u£¨ch_gëM©chedSèπ
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£¨ch_gëM©chedSèπ
)

	)

1479 
	#u£¨ch_gëM©chedText
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£¨ch_gëM©chedText
)

	)

1480 
	#u£¨ch_gëOff£t
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£¨ch_gëOff£t
)

	)

1481 
	#u£¨ch_gëP©ã∫
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£¨ch_gëP©ã∫
)

	)

1482 
	#u£¨ch_gëText
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£¨ch_gëText
)

	)

1483 
	#u£¨ch_h™dÀNextC™⁄iˇl
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£¨ch_h™dÀNextC™⁄iˇl
)

	)

1484 
	#u£¨ch_h™dÀNextExa˘
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£¨ch_h™dÀNextExa˘
)

	)

1485 
	#u£¨ch_h™dÀPªviousC™⁄iˇl
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£¨ch_h™dÀPªviousC™⁄iˇl
)

	)

1486 
	#u£¨ch_h™dÀPªviousExa˘
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£¨ch_h™dÀPªviousExa˘
)

	)

1487 
	#u£¨ch_œ°
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£¨ch_œ°
)

	)

1488 
	#u£¨ch_√xt
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£¨ch_√xt
)

	)

1489 
	#u£¨ch_›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£¨ch_›í
)

	)

1490 
	#u£¨ch_›íFromCﬁœt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£¨ch_›íFromCﬁœt‹
)

	)

1491 
	#u£¨ch_¥e˚dög
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£¨ch_¥e˚dög
)

	)

1492 
	#u£¨ch_¥evious
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£¨ch_¥evious
)

	)

1493 
	#u£¨ch_ª£t
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£¨ch_ª£t
)

	)

1494 
	#u£¨ch_£¨ch
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£¨ch_£¨ch
)

	)

1495 
	#u£¨ch_£¨chBackw¨ds
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£¨ch_£¨chBackw¨ds
)

	)

1496 
	#u£¨ch_£tAâribuã
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£¨ch_£tAâribuã
)

	)

1497 
	#u£¨ch_£tBªakIãøt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£¨ch_£tBªakIãøt‹
)

	)

1498 
	#u£¨ch_£tCﬁœt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£¨ch_£tCﬁœt‹
)

	)

1499 
	#u£¨ch_£tOff£t
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£¨ch_£tOff£t
)

	)

1500 
	#u£¨ch_£tP©ã∫
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£¨ch_£tP©ã∫
)

	)

1501 
	#u£¨ch_£tText
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£¨ch_£tText
)

	)

1502 
	#u£t_add
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_add
)

	)

1503 
	#u£t_addAŒ
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_addAŒ
)

	)

1504 
	#u£t_addAŒCodePoöts
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_addAŒCodePoöts
)

	)

1505 
	#u£t_addR™ge
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_addR™ge
)

	)

1506 
	#u£t_addSåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_addSåög
)

	)

1507 
	#u£t_≠∂yI¡Pr›îtyVÆue
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_≠∂yI¡Pr›îtyVÆue
)

	)

1508 
	#u£t_≠∂yP©ã∫
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_≠∂yP©ã∫
)

	)

1509 
	#u£t_≠∂yPr›îtyAlüs
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_≠∂yPr›îtyAlüs
)

	)

1510 
	#u£t_ch¨At
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_ch¨At
)

	)

1511 
	#u£t_˛ór
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_˛ór
)

	)

1512 
	#u£t_˛⁄e
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_˛⁄e
)

	)

1513 
	#u£t_˛⁄eAsThawed
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_˛⁄eAsThawed
)

	)

1514 
	#u£t_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_˛o£
)

	)

1515 
	#u£t_˛o£Ovî
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_˛o£Ovî
)

	)

1516 
	#u£t_com∑˘
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_com∑˘
)

	)

1517 
	#u£t_com∂emít
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_com∂emít
)

	)

1518 
	#u£t_com∂emítAŒ
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_com∂emítAŒ
)

	)

1519 
	#u£t_c⁄èös
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_c⁄èös
)

	)

1520 
	#u£t_c⁄èösAŒ
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_c⁄èösAŒ
)

	)

1521 
	#u£t_c⁄èösAŒCodePoöts
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_c⁄èösAŒCodePoöts
)

	)

1522 
	#u£t_c⁄èösN⁄e
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_c⁄èösN⁄e
)

	)

1523 
	#u£t_c⁄èösR™ge
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_c⁄èösR™ge
)

	)

1524 
	#u£t_c⁄èösSome
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_c⁄èösSome
)

	)

1525 
	#u£t_c⁄èösSåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_c⁄èösSåög
)

	)

1526 
	#u£t_equÆs
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_equÆs
)

	)

1527 
	#u£t_‰ìze
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_‰ìze
)

	)

1528 
	#u£t_gëIãm
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_gëIãm
)

	)

1529 
	#u£t_gëIãmCou¡
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_gëIãmCou¡
)

	)

1530 
	#u£t_gëSîülizedR™ge
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_gëSîülizedR™ge
)

	)

1531 
	#u£t_gëSîülizedR™geCou¡
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_gëSîülizedR™geCou¡
)

	)

1532 
	#u£t_gëSîülizedSë
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_gëSîülizedSë
)

	)

1533 
	#u£t_ödexOf
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_ödexOf
)

	)

1534 
	#u£t_isEm±y
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_isEm±y
)

	)

1535 
	#u£t_isFrozí
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_isFrozí
)

	)

1536 
	#u£t_›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_›í
)

	)

1537 
	#u£t_›íEm±y
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_›íEm±y
)

	)

1538 
	#u£t_›íP©ã∫
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_›íP©ã∫
)

	)

1539 
	#u£t_›íP©ã∫O±i⁄s
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_›íP©ã∫O±i⁄s
)

	)

1540 
	#u£t_ªmove
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_ªmove
)

	)

1541 
	#u£t_ªmoveAŒ
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_ªmoveAŒ
)

	)

1542 
	#u£t_ªmoveAŒSåögs
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_ªmoveAŒSåögs
)

	)

1543 
	#u£t_ªmoveR™ge
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_ªmoveR™ge
)

	)

1544 
	#u£t_ªmoveSåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_ªmoveSåög
)

	)

1545 
	#u£t_ª£mbÀsP©ã∫
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_ª£mbÀsP©ã∫
)

	)

1546 
	#u£t_ªèö
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_ªèö
)

	)

1547 
	#u£t_ªèöAŒ
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_ªèöAŒ
)

	)

1548 
	#u£t_£rülize
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_£rülize
)

	)

1549 
	#u£t_£rülizedC⁄èös
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_£rülizedC⁄èös
)

	)

1550 
	#u£t_£t
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_£t
)

	)

1551 
	#u£t_£tSîülizedToO√
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_£tSîülizedToO√
)

	)

1552 
	#u£t_size
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_size
)

	)

1553 
	#u£t_•™
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_•™
)

	)

1554 
	#u£t_•™Back
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_•™Back
)

	)

1555 
	#u£t_•™BackUTF8
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_•™BackUTF8
)

	)

1556 
	#u£t_•™UTF8
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_•™UTF8
)

	)

1557 
	#u£t_toP©ã∫
 
	`U_ICU_ENTRY_POINT_RENAME
(
u£t_toP©ã∫
)

	)

1558 
	#u•oof_¨eC⁄fußbÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
u•oof_¨eC⁄fußbÀ
)

	)

1559 
	#u•oof_¨eC⁄fußbÀUTF8
 
	`U_ICU_ENTRY_POINT_RENAME
(
u•oof_¨eC⁄fußbÀUTF8
)

	)

1560 
	#u•oof_¨eC⁄fußbÀUnicodeSåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
u•oof_¨eC⁄fußbÀUnicodeSåög
)

	)

1561 
	#u•oof_check
 
	`U_ICU_ENTRY_POINT_RENAME
(
u•oof_check
)

	)

1562 
	#u•oof_checkUTF8
 
	`U_ICU_ENTRY_POINT_RENAME
(
u•oof_checkUTF8
)

	)

1563 
	#u•oof_checkUnicodeSåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
u•oof_checkUnicodeSåög
)

	)

1564 
	#u•oof_˛⁄e
 
	`U_ICU_ENTRY_POINT_RENAME
(
u•oof_˛⁄e
)

	)

1565 
	#u•oof_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
u•oof_˛o£
)

	)

1566 
	#u•oof_gëAŒowedCh¨s
 
	`U_ICU_ENTRY_POINT_RENAME
(
u•oof_gëAŒowedCh¨s
)

	)

1567 
	#u•oof_gëAŒowedLoˇÀs
 
	`U_ICU_ENTRY_POINT_RENAME
(
u•oof_gëAŒowedLoˇÀs
)

	)

1568 
	#u•oof_gëAŒowedUnicodeSë
 
	`U_ICU_ENTRY_POINT_RENAME
(
u•oof_gëAŒowedUnicodeSë
)

	)

1569 
	#u•oof_gëChecks
 
	`U_ICU_ENTRY_POINT_RENAME
(
u•oof_gëChecks
)

	)

1570 
	#u•oof_gëSkñë⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
u•oof_gëSkñë⁄
)

	)

1571 
	#u•oof_gëSkñë⁄UTF8
 
	`U_ICU_ENTRY_POINT_RENAME
(
u•oof_gëSkñë⁄UTF8
)

	)

1572 
	#u•oof_gëSkñë⁄UnicodeSåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
u•oof_gëSkñë⁄UnicodeSåög
)

	)

1573 
	#u•oof_›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
u•oof_›í
)

	)

1574 
	#u•oof_›íFromSîülized
 
	`U_ICU_ENTRY_POINT_RENAME
(
u•oof_›íFromSîülized
)

	)

1575 
	#u•oof_›íFromSour˚
 
	`U_ICU_ENTRY_POINT_RENAME
(
u•oof_›íFromSour˚
)

	)

1576 
	#u•oof_£rülize
 
	`U_ICU_ENTRY_POINT_RENAME
(
u•oof_£rülize
)

	)

1577 
	#u•oof_£tAŒowedCh¨s
 
	`U_ICU_ENTRY_POINT_RENAME
(
u•oof_£tAŒowedCh¨s
)

	)

1578 
	#u•oof_£tAŒowedLoˇÀs
 
	`U_ICU_ENTRY_POINT_RENAME
(
u•oof_£tAŒowedLoˇÀs
)

	)

1579 
	#u•oof_£tAŒowedUnicodeSë
 
	`U_ICU_ENTRY_POINT_RENAME
(
u•oof_£tAŒowedUnicodeSë
)

	)

1580 
	#u•oof_£tChecks
 
	`U_ICU_ENTRY_POINT_RENAME
(
u•oof_£tChecks
)

	)

1581 
	#u•oof_sw≠
 
	`U_ICU_ENTRY_POINT_RENAME
(
u•oof_sw≠
)

	)

1582 
	#u•ªp_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
u•ªp_˛o£
)

	)

1583 
	#u•ªp_›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
u•ªp_›í
)

	)

1584 
	#u•ªp_›íByTy≥
 
	`U_ICU_ENTRY_POINT_RENAME
(
u•ªp_›íByTy≥
)

	)

1585 
	#u•ªp_¥ï¨e
 
	`U_ICU_ENTRY_POINT_RENAME
(
u•ªp_¥ï¨e
)

	)

1586 
	#u•ªp_sw≠
 
	`U_ICU_ENTRY_POINT_RENAME
(
u•ªp_sw≠
)

	)

1587 
	#u°r_fﬁdCa£
 
	`U_ICU_ENTRY_POINT_RENAME
(
u°r_fﬁdCa£
)

	)

1588 
	#u°r_toLowî
 
	`U_ICU_ENTRY_POINT_RENAME
(
u°r_toLowî
)

	)

1589 
	#u°r_toTôÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
u°r_toTôÀ
)

	)

1590 
	#u°r_toUµî
 
	`U_ICU_ENTRY_POINT_RENAME
(
u°r_toUµî
)

	)

1591 
	#uãxt_ˇ£Com∑ª
 
	`U_ICU_ENTRY_POINT_RENAME
(
uãxt_ˇ£Com∑ª
)

	)

1592 
	#uãxt_ˇ£Com∑ªN©iveLimô
 
	`U_ICU_ENTRY_POINT_RENAME
(
uãxt_ˇ£Com∑ªN©iveLimô
)

	)

1593 
	#uãxt_ch¨32At
 
	`U_ICU_ENTRY_POINT_RENAME
(
uãxt_ch¨32At
)

	)

1594 
	#uãxt_˛⁄e
 
	`U_ICU_ENTRY_POINT_RENAME
(
uãxt_˛⁄e
)

	)

1595 
	#uãxt_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
uãxt_˛o£
)

	)

1596 
	#uãxt_com∑ª
 
	`U_ICU_ENTRY_POINT_RENAME
(
uãxt_com∑ª
)

	)

1597 
	#uãxt_com∑ªN©iveLimô
 
	`U_ICU_ENTRY_POINT_RENAME
(
uãxt_com∑ªN©iveLimô
)

	)

1598 
	#uãxt_c›y
 
	`U_ICU_ENTRY_POINT_RENAME
(
uãxt_c›y
)

	)

1599 
	#uãxt_cuºít32
 
	`U_ICU_ENTRY_POINT_RENAME
(
uãxt_cuºít32
)

	)

1600 
	#uãxt_equÆs
 
	`U_ICU_ENTRY_POINT_RENAME
(
uãxt_equÆs
)

	)

1601 
	#uãxt_exåa˘
 
	`U_ICU_ENTRY_POINT_RENAME
(
uãxt_exåa˘
)

	)

1602 
	#uãxt_‰ìze
 
	`U_ICU_ENTRY_POINT_RENAME
(
uãxt_‰ìze
)

	)

1603 
	#uãxt_gëN©iveIndex
 
	`U_ICU_ENTRY_POINT_RENAME
(
uãxt_gëN©iveIndex
)

	)

1604 
	#uãxt_gëPªviousN©iveIndex
 
	`U_ICU_ENTRY_POINT_RENAME
(
uãxt_gëPªviousN©iveIndex
)

	)

1605 
	#uãxt_hasMëaD©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
uãxt_hasMëaD©a
)

	)

1606 
	#uãxt_isLígthEx≥nsive
 
	`U_ICU_ENTRY_POINT_RENAME
(
uãxt_isLígthEx≥nsive
)

	)

1607 
	#uãxt_isWrôabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
uãxt_isWrôabÀ
)

	)

1608 
	#uãxt_moveIndex32
 
	`U_ICU_ENTRY_POINT_RENAME
(
uãxt_moveIndex32
)

	)

1609 
	#uãxt_«tiveLígth
 
	`U_ICU_ENTRY_POINT_RENAME
(
uãxt_«tiveLígth
)

	)

1610 
	#uãxt_√xt32
 
	`U_ICU_ENTRY_POINT_RENAME
(
uãxt_√xt32
)

	)

1611 
	#uãxt_√xt32From
 
	`U_ICU_ENTRY_POINT_RENAME
(
uãxt_√xt32From
)

	)

1612 
	#uãxt_›íCh¨a˘îIãøt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
uãxt_›íCh¨a˘îIãøt‹
)

	)

1613 
	#uãxt_›íC⁄°UnicodeSåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
uãxt_›íC⁄°UnicodeSåög
)

	)

1614 
	#uãxt_›íRïœ˚abÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
uãxt_›íRïœ˚abÀ
)

	)

1615 
	#uãxt_›íUCh¨s
 
	`U_ICU_ENTRY_POINT_RENAME
(
uãxt_›íUCh¨s
)

	)

1616 
	#uãxt_›íUTF8
 
	`U_ICU_ENTRY_POINT_RENAME
(
uãxt_›íUTF8
)

	)

1617 
	#uãxt_›íUnicodeSåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
uãxt_›íUnicodeSåög
)

	)

1618 
	#uãxt_¥evious32
 
	`U_ICU_ENTRY_POINT_RENAME
(
uãxt_¥evious32
)

	)

1619 
	#uãxt_¥evious32From
 
	`U_ICU_ENTRY_POINT_RENAME
(
uãxt_¥evious32From
)

	)

1620 
	#uãxt_ª∂a˚
 
	`U_ICU_ENTRY_POINT_RENAME
(
uãxt_ª∂a˚
)

	)

1621 
	#uãxt_£tN©iveIndex
 
	`U_ICU_ENTRY_POINT_RENAME
(
uãxt_£tN©iveIndex
)

	)

1622 
	#uãxt_£tup
 
	`U_ICU_ENTRY_POINT_RENAME
(
uãxt_£tup
)

	)

1623 
	#utf8_≠≥ndCh¨Sa„Body
 
	`U_ICU_ENTRY_POINT_RENAME
(
utf8_≠≥ndCh¨Sa„Body
)

	)

1624 
	#utf8_back1Sa„Body
 
	`U_ICU_ENTRY_POINT_RENAME
(
utf8_back1Sa„Body
)

	)

1625 
	#utf8_cou¡TøûByãs
 
	`U_ICU_ENTRY_POINT_RENAME
(
utf8_cou¡TøûByãs
)

	)

1626 
	#utf8_√xtCh¨Sa„Body
 
	`U_ICU_ENTRY_POINT_RENAME
(
utf8_√xtCh¨Sa„Body
)

	)

1627 
	#utf8_¥evCh¨Sa„Body
 
	`U_ICU_ENTRY_POINT_RENAME
(
utf8_¥evCh¨Sa„Body
)

	)

1628 
	#utmsˇÀ_‰omI¡64
 
	`U_ICU_ENTRY_POINT_RENAME
(
utmsˇÀ_‰omI¡64
)

	)

1629 
	#utmsˇÀ_gëTimeSˇÀVÆue
 
	`U_ICU_ENTRY_POINT_RENAME
(
utmsˇÀ_gëTimeSˇÀVÆue
)

	)

1630 
	#utmsˇÀ_toI¡64
 
	`U_ICU_ENTRY_POINT_RENAME
(
utmsˇÀ_toI¡64
)

	)

1631 
	#uåa˚_˛ónup
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåa˚_˛ónup
)

	)

1632 
	#uåa˚_d©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåa˚_d©a
)

	)

1633 
	#uåa˚_íåy
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåa˚_íåy
)

	)

1634 
	#uåa˚_exô
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåa˚_exô
)

	)

1635 
	#uåa˚_f‹m©
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåa˚_f‹m©
)

	)

1636 
	#uåa˚_fun˘i⁄Name
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåa˚_fun˘i⁄Name
)

	)

1637 
	#uåa˚_gëFun˘i⁄s
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåa˚_gëFun˘i⁄s
)

	)

1638 
	#uåa˚_gëLevñ
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåa˚_gëLevñ
)

	)

1639 
	#uåa˚_Àvñ
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåa˚_Àvñ
)

	)

1640 
	#uåa˚_£tFun˘i⁄s
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåa˚_£tFun˘i⁄s
)

	)

1641 
	#uåa˚_£tLevñ
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåa˚_£tLevñ
)

	)

1642 
	#uåa˚_vf‹m©
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåa˚_vf‹m©
)

	)

1643 
	#uå™s_˛⁄e
 
	`U_ICU_ENTRY_POINT_RENAME
(
uå™s_˛⁄e
)

	)

1644 
	#uå™s_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
uå™s_˛o£
)

	)

1645 
	#uå™s_cou¡AvaûabÀIDs
 
	`U_ICU_ENTRY_POINT_RENAME
(
uå™s_cou¡AvaûabÀIDs
)

	)

1646 
	#uå™s_gëAvaûabÀID
 
	`U_ICU_ENTRY_POINT_RENAME
(
uå™s_gëAvaûabÀID
)

	)

1647 
	#uå™s_gëID
 
	`U_ICU_ENTRY_POINT_RENAME
(
uå™s_gëID
)

	)

1648 
	#uå™s_gëUnicodeID
 
	`U_ICU_ENTRY_POINT_RENAME
(
uå™s_gëUnicodeID
)

	)

1649 
	#uå™s_›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
uå™s_›í
)

	)

1650 
	#uå™s_›íIDs
 
	`U_ICU_ENTRY_POINT_RENAME
(
uå™s_›íIDs
)

	)

1651 
	#uå™s_›íInvî£
 
	`U_ICU_ENTRY_POINT_RENAME
(
uå™s_›íInvî£
)

	)

1652 
	#uå™s_›íU
 
	`U_ICU_ENTRY_POINT_RENAME
(
uå™s_›íU
)

	)

1653 
	#uå™s_ªgi°î
 
	`U_ICU_ENTRY_POINT_RENAME
(
uå™s_ªgi°î
)

	)

1654 
	#uå™s_ªp_ˇ£C⁄ãxtIãøt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
uå™s_ªp_ˇ£C⁄ãxtIãøt‹
)

	)

1655 
	#uå™s_£tFûãr
 
	`U_ICU_ENTRY_POINT_RENAME
(
uå™s_£tFûãr
)

	)

1656 
	#uå™s_°rùRuÀs
 
	`U_ICU_ENTRY_POINT_RENAME
(
uå™s_°rùRuÀs
)

	)

1657 
	#uå™s_å™s
 
	`U_ICU_ENTRY_POINT_RENAME
(
uå™s_å™s
)

	)

1658 
	#uå™s_å™sIn¸emíèl
 
	`U_ICU_ENTRY_POINT_RENAME
(
uå™s_å™sIn¸emíèl
)

	)

1659 
	#uå™s_å™sIn¸emíèlUCh¨s
 
	`U_ICU_ENTRY_POINT_RENAME
(
uå™s_å™sIn¸emíèlUCh¨s
)

	)

1660 
	#uå™s_å™sUCh¨s
 
	`U_ICU_ENTRY_POINT_RENAME
(
uå™s_å™sUCh¨s
)

	)

1661 
	#uå™s_å™¶ôî©‹_˛ónup
 
	`U_ICU_ENTRY_POINT_RENAME
(
uå™s_å™¶ôî©‹_˛ónup
)

	)

1662 
	#uå™s_uƒegi°î
 
	`U_ICU_ENTRY_POINT_RENAME
(
uå™s_uƒegi°î
)

	)

1663 
	#uå™s_uƒegi°îID
 
	`U_ICU_ENTRY_POINT_RENAME
(
uå™s_uƒegi°îID
)

	)

1664 
	#uåõ2_˛⁄e
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ2_˛⁄e
)

	)

1665 
	#uåõ2_˛⁄eAsThawed
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ2_˛⁄eAsThawed
)

	)

1666 
	#uåõ2_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ2_˛o£
)

	)

1667 
	#uåõ2_íum
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ2_íum
)

	)

1668 
	#uåõ2_íumF‹LódSuºog©e
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ2_íumF‹LódSuºog©e
)

	)

1669 
	#uåõ2_‰ìze
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ2_‰ìze
)

	)

1670 
	#uåõ2_‰omUTrõ
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ2_‰omUTrõ
)

	)

1671 
	#uåõ2_gë32
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ2_gë32
)

	)

1672 
	#uåõ2_gë32FromLódSuºog©eCodeUnô
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ2_gë32FromLódSuºog©eCodeUnô
)

	)

1673 
	#uåõ2_gëVîsi⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ2_gëVîsi⁄
)

	)

1674 
	#uåõ2_öã∫ÆU8NextIndex
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ2_öã∫ÆU8NextIndex
)

	)

1675 
	#uåõ2_öã∫ÆU8PªvIndex
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ2_öã∫ÆU8PªvIndex
)

	)

1676 
	#uåõ2_isFrozí
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ2_isFrozí
)

	)

1677 
	#uåõ2_›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ2_›í
)

	)

1678 
	#uåõ2_›íDummy
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ2_›íDummy
)

	)

1679 
	#uåõ2_›íFromSîülized
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ2_›íFromSîülized
)

	)

1680 
	#uåõ2_£rülize
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ2_£rülize
)

	)

1681 
	#uåõ2_£t32
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ2_£t32
)

	)

1682 
	#uåõ2_£t32F‹LódSuºog©eCodeUnô
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ2_£t32F‹LódSuºog©eCodeUnô
)

	)

1683 
	#uåõ2_£tR™ge32
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ2_£tR™ge32
)

	)

1684 
	#uåõ2_sw≠
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ2_sw≠
)

	)

1685 
	#uåõ2_sw≠AnyVîsi⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ2_sw≠AnyVîsi⁄
)

	)

1686 
	#uåõ_˛⁄e
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ_˛⁄e
)

	)

1687 
	#uåõ_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ_˛o£
)

	)

1688 
	#uåõ_deÁu…GëFﬁdögOff£t
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ_deÁu…GëFﬁdögOff£t
)

	)

1689 
	#uåõ_íum
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ_íum
)

	)

1690 
	#uåõ_gë32
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ_gë32
)

	)

1691 
	#uåõ_gëD©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ_gëD©a
)

	)

1692 
	#uåõ_›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ_›í
)

	)

1693 
	#uåõ_£rülize
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ_£rülize
)

	)

1694 
	#uåõ_£t32
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ_£t32
)

	)

1695 
	#uåõ_£tR™ge32
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ_£tR™ge32
)

	)

1696 
	#uåõ_sw≠
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ_sw≠
)

	)

1697 
	#uåõ_un£rülize
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ_un£rülize
)

	)

1698 
	#uåõ_un£rülizeDummy
 
	`U_ICU_ENTRY_POINT_RENAME
(
uåõ_un£rülizeDummy
)

	)

1699 
	#vz⁄e_˛⁄e
 
	`U_ICU_ENTRY_POINT_RENAME
(
vz⁄e_˛⁄e
)

	)

1700 
	#vz⁄e_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
vz⁄e_˛o£
)

	)

1701 
	#vz⁄e_cou¡Tønsôi⁄RuÀs
 
	`U_ICU_ENTRY_POINT_RENAME
(
vz⁄e_cou¡Tønsôi⁄RuÀs
)

	)

1702 
	#vz⁄e_equÆs
 
	`U_ICU_ENTRY_POINT_RENAME
(
vz⁄e_equÆs
)

	)

1703 
	#vz⁄e_gëDy«micCœssID
 
	`U_ICU_ENTRY_POINT_RENAME
(
vz⁄e_gëDy«micCœssID
)

	)

1704 
	#vz⁄e_gëLa°Modifõd
 
	`U_ICU_ENTRY_POINT_RENAME
(
vz⁄e_gëLa°Modifõd
)

	)

1705 
	#vz⁄e_gëNextTønsôi⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
vz⁄e_gëNextTønsôi⁄
)

	)

1706 
	#vz⁄e_gëOff£t
 
	`U_ICU_ENTRY_POINT_RENAME
(
vz⁄e_gëOff£t
)

	)

1707 
	#vz⁄e_gëOff£t2
 
	`U_ICU_ENTRY_POINT_RENAME
(
vz⁄e_gëOff£t2
)

	)

1708 
	#vz⁄e_gëOff£t3
 
	`U_ICU_ENTRY_POINT_RENAME
(
vz⁄e_gëOff£t3
)

	)

1709 
	#vz⁄e_gëPªviousTønsôi⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
vz⁄e_gëPªviousTønsôi⁄
)

	)

1710 
	#vz⁄e_gëRawOff£t
 
	`U_ICU_ENTRY_POINT_RENAME
(
vz⁄e_gëRawOff£t
)

	)

1711 
	#vz⁄e_gëSèticCœssID
 
	`U_ICU_ENTRY_POINT_RENAME
(
vz⁄e_gëSèticCœssID
)

	)

1712 
	#vz⁄e_gëTZURL
 
	`U_ICU_ENTRY_POINT_RENAME
(
vz⁄e_gëTZURL
)

	)

1713 
	#vz⁄e_hasSameRuÀs
 
	`U_ICU_ENTRY_POINT_RENAME
(
vz⁄e_hasSameRuÀs
)

	)

1714 
	#vz⁄e_öDaylightTime
 
	`U_ICU_ENTRY_POINT_RENAME
(
vz⁄e_öDaylightTime
)

	)

1715 
	#vz⁄e_›íD©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
vz⁄e_›íD©a
)

	)

1716 
	#vz⁄e_›íID
 
	`U_ICU_ENTRY_POINT_RENAME
(
vz⁄e_›íID
)

	)

1717 
	#vz⁄e_£tLa°Modifõd
 
	`U_ICU_ENTRY_POINT_RENAME
(
vz⁄e_£tLa°Modifõd
)

	)

1718 
	#vz⁄e_£tRawOff£t
 
	`U_ICU_ENTRY_POINT_RENAME
(
vz⁄e_£tRawOff£t
)

	)

1719 
	#vz⁄e_£tTZURL
 
	`U_ICU_ENTRY_POINT_RENAME
(
vz⁄e_£tTZURL
)

	)

1720 
	#vz⁄e_u£DaylightTime
 
	`U_ICU_ENTRY_POINT_RENAME
(
vz⁄e_u£DaylightTime
)

	)

1721 
	#vz⁄e_wrôe
 
	`U_ICU_ENTRY_POINT_RENAME
(
vz⁄e_wrôe
)

	)

1722 
	#vz⁄e_wrôeFromSèπ
 
	`U_ICU_ENTRY_POINT_RENAME
(
vz⁄e_wrôeFromSèπ
)

	)

1723 
	#vz⁄e_wrôeSim∂e
 
	`U_ICU_ENTRY_POINT_RENAME
(
vz⁄e_wrôeSim∂e
)

	)

1724 
	#zruÀ_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
zruÀ_˛o£
)

	)

1725 
	#zruÀ_equÆs
 
	`U_ICU_ENTRY_POINT_RENAME
(
zruÀ_equÆs
)

	)

1726 
	#zruÀ_gëDSTSavögs
 
	`U_ICU_ENTRY_POINT_RENAME
(
zruÀ_gëDSTSavögs
)

	)

1727 
	#zruÀ_gëName
 
	`U_ICU_ENTRY_POINT_RENAME
(
zruÀ_gëName
)

	)

1728 
	#zruÀ_gëRawOff£t
 
	`U_ICU_ENTRY_POINT_RENAME
(
zruÀ_gëRawOff£t
)

	)

1729 
	#zruÀ_isEquivÆítTo
 
	`U_ICU_ENTRY_POINT_RENAME
(
zruÀ_isEquivÆítTo
)

	)

1730 
	#zå™s_ad›tFrom
 
	`U_ICU_ENTRY_POINT_RENAME
(
zå™s_ad›tFrom
)

	)

1731 
	#zå™s_ad›tTo
 
	`U_ICU_ENTRY_POINT_RENAME
(
zå™s_ad›tTo
)

	)

1732 
	#zå™s_˛⁄e
 
	`U_ICU_ENTRY_POINT_RENAME
(
zå™s_˛⁄e
)

	)

1733 
	#zå™s_˛o£
 
	`U_ICU_ENTRY_POINT_RENAME
(
zå™s_˛o£
)

	)

1734 
	#zå™s_equÆs
 
	`U_ICU_ENTRY_POINT_RENAME
(
zå™s_equÆs
)

	)

1735 
	#zå™s_gëDy«micCœssID
 
	`U_ICU_ENTRY_POINT_RENAME
(
zå™s_gëDy«micCœssID
)

	)

1736 
	#zå™s_gëFrom
 
	`U_ICU_ENTRY_POINT_RENAME
(
zå™s_gëFrom
)

	)

1737 
	#zå™s_gëSèticCœssID
 
	`U_ICU_ENTRY_POINT_RENAME
(
zå™s_gëSèticCœssID
)

	)

1738 
	#zå™s_gëTime
 
	`U_ICU_ENTRY_POINT_RENAME
(
zå™s_gëTime
)

	)

1739 
	#zå™s_gëTo
 
	`U_ICU_ENTRY_POINT_RENAME
(
zå™s_gëTo
)

	)

1740 
	#zå™s_›í
 
	`U_ICU_ENTRY_POINT_RENAME
(
zå™s_›í
)

	)

1741 
	#zå™s_›íEm±y
 
	`U_ICU_ENTRY_POINT_RENAME
(
zå™s_›íEm±y
)

	)

1742 
	#zå™s_£tFrom
 
	`U_ICU_ENTRY_POINT_RENAME
(
zå™s_£tFrom
)

	)

1743 
	#zå™s_£tTime
 
	`U_ICU_ENTRY_POINT_RENAME
(
zå™s_£tTime
)

	)

1744 
	#zå™s_£tTo
 
	`U_ICU_ENTRY_POINT_RENAME
(
zå™s_£tTo
)

	)

1749 #ifde‡
XP_CPLUSPLUS


1750 #i‡!
U_HAVE_NAMESPACE


1752 
	#AbsﬁuãVÆueSub°ôuti⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
AbsﬁuãVÆueSub°ôuti⁄
)

	)

1753 
	#A…î«ãSub°ôuti⁄SubèbÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
A…î«ãSub°ôuti⁄SubèbÀ
)

	)

1754 
	#Anch‹TabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
Anch‹TabÀ
)

	)

1755 
	#AndC⁄°øöt
 
	`U_ICU_ENTRY_POINT_RENAME
(
AndC⁄°øöt
)

	)

1756 
	#A¬uÆTimeZ⁄eRuÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
A¬uÆTimeZ⁄eRuÀ
)

	)

1757 
	#AnyTøn¶ôî©‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
AnyTøn¶ôî©‹
)

	)

1758 
	#AøbicO≥nTy≥LayoutEngöe
 
	`U_ICU_ENTRY_POINT_RENAME
(
AøbicO≥nTy≥LayoutEngöe
)

	)

1759 
	#AøbicSh≠ög
 
	`U_ICU_ENTRY_POINT_RENAME
(
AøbicSh≠ög
)

	)

1760 
	#ArgExåa˘‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
ArgExåa˘‹
)

	)

1761 
	#BMPSë
 
	`U_ICU_ENTRY_POINT_RENAME
(
BMPSë
)

	)

1762 
	#Backw¨dUTrõ2SåögIãøt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
Backw¨dUTrõ2SåögIãøt‹
)

	)

1763 
	#BadCh¨a˘îTabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
BadCh¨a˘îTabÀ
)

	)

1764 
	#BasicCÆíd¨Fa˘‹y
 
	`U_ICU_ENTRY_POINT_RENAME
(
BasicCÆíd¨Fa˘‹y
)

	)

1765 
	#BasicTimeZ⁄e
 
	`U_ICU_ENTRY_POINT_RENAME
(
BasicTimeZ⁄e
)

	)

1766 
	#Bö¨ySórchLookupTabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
Bö¨ySórchLookupTabÀ
)

	)

1767 
	#BoyîMo‹eSórch
 
	`U_ICU_ENTRY_POINT_RENAME
(
BoyîMo‹eSórch
)

	)

1768 
	#BªakIãøt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
BªakIãøt‹
)

	)

1769 
	#BªakTøn¶ôî©‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
BªakTøn¶ôî©‹
)

	)

1770 
	#Buddhi°CÆíd¨
 
	`U_ICU_ENTRY_POINT_RENAME
(
Buddhi°CÆíd¨
)

	)

1771 
	#BuûdCom∑˘TrõH‹iz⁄èlNode
 
	`U_ICU_ENTRY_POINT_RENAME
(
BuûdCom∑˘TrõH‹iz⁄èlNode
)

	)

1772 
	#BuûdCom∑˘TrõNode
 
	`U_ICU_ENTRY_POINT_RENAME
(
BuûdCom∑˘TrõNode
)

	)

1773 
	#BuûdCom∑˘TrõVîtiˇlNode
 
	`U_ICU_ENTRY_POINT_RENAME
(
BuûdCom∑˘TrõVîtiˇlNode
)

	)

1774 
	#BuûdîS¸ùtSë
 
	`U_ICU_ENTRY_POINT_RENAME
(
BuûdîS¸ùtSë
)

	)

1775 
	#ByãSök
 
	`U_ICU_ENTRY_POINT_RENAME
(
ByãSök
)

	)

1776 
	#CEBuf„r
 
	`U_ICU_ENTRY_POINT_RENAME
(
CEBuf„r
)

	)

1777 
	#CECÆíd¨
 
	`U_ICU_ENTRY_POINT_RENAME
(
CECÆíd¨
)

	)

1778 
	#CELi°
 
	`U_ICU_ENTRY_POINT_RENAME
(
CELi°
)

	)

1779 
	#CEToSåögsM≠
 
	`U_ICU_ENTRY_POINT_RENAME
(
CEToSåögsM≠
)

	)

1780 
	#CFa˘‹y
 
	`U_ICU_ENTRY_POINT_RENAME
(
CFa˘‹y
)

	)

1781 
	#CÆíd¨
 
	`U_ICU_ENTRY_POINT_RENAME
(
CÆíd¨
)

	)

1782 
	#CÆíd¨A°r⁄omî
 
	`U_ICU_ENTRY_POINT_RENAME
(
CÆíd¨A°r⁄omî
)

	)

1783 
	#CÆíd¨Cache
 
	`U_ICU_ENTRY_POINT_RENAME
(
CÆíd¨Cache
)

	)

1784 
	#CÆíd¨D©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
CÆíd¨D©a
)

	)

1785 
	#CÆíd¨Sîvi˚
 
	`U_ICU_ENTRY_POINT_RENAME
(
CÆíd¨Sîvi˚
)

	)

1786 
	#C™⁄IãrD©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
C™⁄IãrD©a
)

	)

1787 
	#C™⁄IãrD©aSögÀt⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
C™⁄IãrD©aSögÀt⁄
)

	)

1788 
	#C™⁄M¨kFûãr
 
	`U_ICU_ENTRY_POINT_RENAME
(
C™⁄M¨kFûãr
)

	)

1789 
	#C™⁄Sh≠ög
 
	`U_ICU_ENTRY_POINT_RENAME
(
C™⁄Sh≠ög
)

	)

1790 
	#C™⁄iˇlIãøt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
C™⁄iˇlIãøt‹
)

	)

1791 
	#Ca£M≠Tøn¶ôî©‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ca£M≠Tøn¶ôî©‹
)

	)

1792 
	#ChaöögC⁄ãxtuÆSub°ôuti⁄F‹m©1SubèbÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
ChaöögC⁄ãxtuÆSub°ôuti⁄F‹m©1SubèbÀ
)

	)

1793 
	#ChaöögC⁄ãxtuÆSub°ôuti⁄F‹m©2SubèbÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
ChaöögC⁄ãxtuÆSub°ôuti⁄F‹m©2SubèbÀ
)

	)

1794 
	#ChaöögC⁄ãxtuÆSub°ôuti⁄F‹m©3SubèbÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
ChaöögC⁄ãxtuÆSub°ôuti⁄F‹m©3SubèbÀ
)

	)

1795 
	#ChaöögC⁄ãxtuÆSub°ôuti⁄SubèbÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
ChaöögC⁄ãxtuÆSub°ôuti⁄SubèbÀ
)

	)

1796 
	#Ch¨Såög
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨Såög
)

	)

1797 
	#Ch¨Sub°ôuti⁄Fûãr
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨Sub°ôuti⁄Fûãr
)

	)

1798 
	#Ch¨a˘îIãøt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨a˘îIãøt‹
)

	)

1799 
	#Ch¨a˘îNode
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨a˘îNode
)

	)

1800 
	#Ch¨£tDëe˘‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tDëe˘‹
)

	)

1801 
	#Ch¨£tM©ch
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tM©ch
)

	)

1802 
	#Ch¨£tRecog_2022
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_2022
)

	)

1803 
	#Ch¨£tRecog_2022CN
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_2022CN
)

	)

1804 
	#Ch¨£tRecog_2022JP
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_2022JP
)

	)

1805 
	#Ch¨£tRecog_2022KR
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_2022KR
)

	)

1806 
	#Ch¨£tRecog_8859_1
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_8859_1
)

	)

1807 
	#Ch¨£tRecog_8859_1_da
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_8859_1_da
)

	)

1808 
	#Ch¨£tRecog_8859_1_de
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_8859_1_de
)

	)

1809 
	#Ch¨£tRecog_8859_1_í
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_8859_1_í
)

	)

1810 
	#Ch¨£tRecog_8859_1_es
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_8859_1_es
)

	)

1811 
	#Ch¨£tRecog_8859_1_‰
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_8859_1_‰
)

	)

1812 
	#Ch¨£tRecog_8859_1_ô
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_8859_1_ô
)

	)

1813 
	#Ch¨£tRecog_8859_1_∆
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_8859_1_∆
)

	)

1814 
	#Ch¨£tRecog_8859_1_no
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_8859_1_no
)

	)

1815 
	#Ch¨£tRecog_8859_1_±
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_8859_1_±
)

	)

1816 
	#Ch¨£tRecog_8859_1_sv
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_8859_1_sv
)

	)

1817 
	#Ch¨£tRecog_8859_2
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_8859_2
)

	)

1818 
	#Ch¨£tRecog_8859_2_cs
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_8859_2_cs
)

	)

1819 
	#Ch¨£tRecog_8859_2_hu
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_8859_2_hu
)

	)

1820 
	#Ch¨£tRecog_8859_2_∂
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_8859_2_∂
)

	)

1821 
	#Ch¨£tRecog_8859_2_ro
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_8859_2_ro
)

	)

1822 
	#Ch¨£tRecog_8859_5
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_8859_5
)

	)

1823 
	#Ch¨£tRecog_8859_5_ru
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_8859_5_ru
)

	)

1824 
	#Ch¨£tRecog_8859_6
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_8859_6
)

	)

1825 
	#Ch¨£tRecog_8859_6_¨
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_8859_6_¨
)

	)

1826 
	#Ch¨£tRecog_8859_7
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_8859_7
)

	)

1827 
	#Ch¨£tRecog_8859_7_ñ
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_8859_7_ñ
)

	)

1828 
	#Ch¨£tRecog_8859_8
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_8859_8
)

	)

1829 
	#Ch¨£tRecog_8859_8_I_he
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_8859_8_I_he
)

	)

1830 
	#Ch¨£tRecog_8859_8_he
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_8859_8_he
)

	)

1831 
	#Ch¨£tRecog_8859_9
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_8859_9
)

	)

1832 
	#Ch¨£tRecog_8859_9_å
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_8859_9_å
)

	)

1833 
	#Ch¨£tRecog_IBM420_¨
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_IBM420_¨
)

	)

1834 
	#Ch¨£tRecog_IBM420_¨_…r
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_IBM420_¨_…r
)

	)

1835 
	#Ch¨£tRecog_IBM420_¨_πl
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_IBM420_¨_πl
)

	)

1836 
	#Ch¨£tRecog_IBM424_he
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_IBM424_he
)

	)

1837 
	#Ch¨£tRecog_IBM424_he_…r
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_IBM424_he_…r
)

	)

1838 
	#Ch¨£tRecog_IBM424_he_πl
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_IBM424_he_πl
)

	)

1839 
	#Ch¨£tRecog_KOI8_R
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_KOI8_R
)

	)

1840 
	#Ch¨£tRecog_UTF8
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_UTF8
)

	)

1841 
	#Ch¨£tRecog_UTF_16_BE
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_UTF_16_BE
)

	)

1842 
	#Ch¨£tRecog_UTF_16_LE
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_UTF_16_LE
)

	)

1843 
	#Ch¨£tRecog_UTF_32
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_UTF_32
)

	)

1844 
	#Ch¨£tRecog_UTF_32_BE
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_UTF_32_BE
)

	)

1845 
	#Ch¨£tRecog_UTF_32_LE
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_UTF_32_LE
)

	)

1846 
	#Ch¨£tRecog_Unicode
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_Unicode
)

	)

1847 
	#Ch¨£tRecog_big5
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_big5
)

	)

1848 
	#Ch¨£tRecog_euc
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_euc
)

	)

1849 
	#Ch¨£tRecog_euc_jp
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_euc_jp
)

	)

1850 
	#Ch¨£tRecog_euc_kr
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_euc_kr
)

	)

1851 
	#Ch¨£tRecog_gb_18030
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_gb_18030
)

	)

1852 
	#Ch¨£tRecog_mbcs
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_mbcs
)

	)

1853 
	#Ch¨£tRecog_sbcs
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_sbcs
)

	)

1854 
	#Ch¨£tRecog_sjis
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_sjis
)

	)

1855 
	#Ch¨£tRecog_wödows_1251
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_wödows_1251
)

	)

1856 
	#Ch¨£tRecog_wödows_1256
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecog_wödows_1256
)

	)

1857 
	#Ch¨£tRecognizî
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ch¨£tRecognizî
)

	)

1858 
	#CheckedAºayByãSök
 
	`U_ICU_ENTRY_POINT_RENAME
(
CheckedAºayByãSök
)

	)

1859 
	#Chöe£CÆíd¨
 
	`U_ICU_ENTRY_POINT_RENAME
(
Chöe£CÆíd¨
)

	)

1860 
	#Choi˚F‹m©
 
	`U_ICU_ENTRY_POINT_RENAME
(
Choi˚F‹m©
)

	)

1861 
	#CœssDefF‹m©1TabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
CœssDefF‹m©1TabÀ
)

	)

1862 
	#CœssDefF‹m©2TabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
CœssDefF‹m©2TabÀ
)

	)

1863 
	#CœssDeföôi⁄TabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
CœssDeföôi⁄TabÀ
)

	)

1864 
	#ClockM©h
 
	`U_ICU_ENTRY_POINT_RENAME
(
ClockM©h
)

	)

1865 
	#CﬁlD©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
CﬁlD©a
)

	)

1866 
	#CﬁlD©aCache
 
	`U_ICU_ENTRY_POINT_RENAME
(
CﬁlD©aCache
)

	)

1867 
	#CﬁlD©aCacheE¡ry
 
	`U_ICU_ENTRY_POINT_RENAME
(
CﬁlD©aCacheE¡ry
)

	)

1868 
	#Cﬁœti⁄EÀmítIãøt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
Cﬁœti⁄EÀmítIãøt‹
)

	)

1869 
	#Cﬁœti⁄Key
 
	`U_ICU_ENTRY_POINT_RENAME
(
Cﬁœti⁄Key
)

	)

1870 
	#Cﬁœti⁄LoˇÀLi°Enumî©i⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
Cﬁœti⁄LoˇÀLi°Enumî©i⁄
)

	)

1871 
	#Cﬁœt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
Cﬁœt‹
)

	)

1872 
	#Cﬁœt‹Fa˘‹y
 
	`U_ICU_ENTRY_POINT_RENAME
(
Cﬁœt‹Fa˘‹y
)

	)

1873 
	#Com∑˘TrõDi˘i⁄¨y
 
	`U_ICU_ENTRY_POINT_RENAME
(
Com∑˘TrõDi˘i⁄¨y
)

	)

1874 
	#Com∑˘TrõEnumî©i⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
Com∑˘TrõEnumî©i⁄
)

	)

1875 
	#Compo£N‹mÆizî2
 
	`U_ICU_ENTRY_POINT_RENAME
(
Compo£N‹mÆizî2
)

	)

1876 
	#CompoundTøn¶ôî©‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
CompoundTøn¶ôî©‹
)

	)

1877 
	#C⁄fußbÀd©aBuûdî
 
	`U_ICU_ENTRY_POINT_RENAME
(
C⁄fußbÀd©aBuûdî
)

	)

1878 
	#C⁄ãxtuÆGlyphSub°ôuti⁄Pro˚ss‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
C⁄ãxtuÆGlyphSub°ôuti⁄Pro˚ss‹
)

	)

1879 
	#C⁄ãxtuÆSub°ôuti⁄Ba£
 
	`U_ICU_ENTRY_POINT_RENAME
(
C⁄ãxtuÆSub°ôuti⁄Ba£
)

	)

1880 
	#C⁄ãxtuÆSub°ôuti⁄F‹m©1SubèbÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
C⁄ãxtuÆSub°ôuti⁄F‹m©1SubèbÀ
)

	)

1881 
	#C⁄ãxtuÆSub°ôuti⁄F‹m©2SubèbÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
C⁄ãxtuÆSub°ôuti⁄F‹m©2SubèbÀ
)

	)

1882 
	#C⁄ãxtuÆSub°ôuti⁄F‹m©3SubèbÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
C⁄ãxtuÆSub°ôuti⁄F‹m©3SubèbÀ
)

	)

1883 
	#C⁄ãxtuÆSub°ôuti⁄SubèbÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
C⁄ãxtuÆSub°ôuti⁄SubèbÀ
)

	)

1884 
	#C›ticCÆíd¨
 
	`U_ICU_ENTRY_POINT_RENAME
(
C›ticCÆíd¨
)

	)

1885 
	#CovîageF‹m©1TabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
CovîageF‹m©1TabÀ
)

	)

1886 
	#CovîageF‹m©2TabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
CovîageF‹m©2TabÀ
)

	)

1887 
	#CovîageTabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
CovîageTabÀ
)

	)

1888 
	#CuºícyAmou¡
 
	`U_ICU_ENTRY_POINT_RENAME
(
CuºícyAmou¡
)

	)

1889 
	#CuºícyF‹m©
 
	`U_ICU_ENTRY_POINT_RENAME
(
CuºícyF‹m©
)

	)

1890 
	#CuºícyPluølInfo
 
	`U_ICU_ENTRY_POINT_RENAME
(
CuºícyPluølInfo
)

	)

1891 
	#CuºícyUnô
 
	`U_ICU_ENTRY_POINT_RENAME
(
CuºícyUnô
)

	)

1892 
	#CursiveAâachmítSubèbÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
CursiveAâachmítSubèbÀ
)

	)

1893 
	#DTRedund™tEnumî©i⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
DTRedund™tEnumî©i⁄
)

	)

1894 
	#DTSkñë⁄Enumî©i⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
DTSkñë⁄Enumî©i⁄
)

	)

1895 
	#D©eF‹m©
 
	`U_ICU_ENTRY_POINT_RENAME
(
D©eF‹m©
)

	)

1896 
	#D©eF‹m©Symbﬁs
 
	`U_ICU_ENTRY_POINT_RENAME
(
D©eF‹m©Symbﬁs
)

	)

1897 
	#D©eI¡îvÆ
 
	`U_ICU_ENTRY_POINT_RENAME
(
D©eI¡îvÆ
)

	)

1898 
	#D©eI¡îvÆF‹m©
 
	`U_ICU_ENTRY_POINT_RENAME
(
D©eI¡îvÆF‹m©
)

	)

1899 
	#D©eI¡îvÆInfo
 
	`U_ICU_ENTRY_POINT_RENAME
(
D©eI¡îvÆInfo
)

	)

1900 
	#D©eTimeM©chî
 
	`U_ICU_ENTRY_POINT_RENAME
(
D©eTimeM©chî
)

	)

1901 
	#D©eTimeP©ã∫Gíî©‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
D©eTimeP©ã∫Gíî©‹
)

	)

1902 
	#D©eTimeRuÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
D©eTimeRuÀ
)

	)

1903 
	#DecimÆF‹m©
 
	`U_ICU_ENTRY_POINT_RENAME
(
DecimÆF‹m©
)

	)

1904 
	#DecimÆF‹m©Symbﬁs
 
	`U_ICU_ENTRY_POINT_RENAME
(
DecimÆF‹m©Symbﬁs
)

	)

1905 
	#Decompo£N‹mÆizî2
 
	`U_ICU_ENTRY_POINT_RENAME
(
Decompo£N‹mÆizî2
)

	)

1906 
	#DeÁu…CÆíd¨Fa˘‹y
 
	`U_ICU_ENTRY_POINT_RENAME
(
DeÁu…CÆíd¨Fa˘‹y
)

	)

1907 
	#DeÁu…Ch¨M≠≥r
 
	`U_ICU_ENTRY_POINT_RENAME
(
DeÁu…Ch¨M≠≥r
)

	)

1908 
	#Devi˚TabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
Devi˚TabÀ
)

	)

1909 
	#Di˘i⁄¨yBªakEngöe
 
	`U_ICU_ENTRY_POINT_RENAME
(
Di˘i⁄¨yBªakEngöe
)

	)

1910 
	#DigôLi°
 
	`U_ICU_ENTRY_POINT_RENAME
(
DigôLi°
)

	)

1911 
	#Di°™˚Info
 
	`U_ICU_ENTRY_POINT_RENAME
(
Di°™˚Info
)

	)

1912 
	#EnumToOff£t
 
	`U_ICU_ENTRY_POINT_RENAME
(
EnumToOff£t
)

	)

1913 
	#Eº‹Code
 
	`U_ICU_ENTRY_POINT_RENAME
(
Eº‹Code
)

	)

1914 
	#Esˇ≥Tøn¶ôî©‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
Esˇ≥Tøn¶ôî©‹
)

	)

1915 
	#Ethi›icCÆíd¨
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ethi›icCÆíd¨
)

	)

1916 
	#EvítLi°íî
 
	`U_ICU_ENTRY_POINT_RENAME
(
EvítLi°íî
)

	)

1917 
	#Exãnsi⁄SubèbÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
Exãnsi⁄SubèbÀ
)

	)

1918 
	#FCDN‹mÆizî2
 
	`U_ICU_ENTRY_POINT_RENAME
(
FCDN‹mÆizî2
)

	)

1919 
	#FCDTrõSögÀt⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
FCDTrõSögÀt⁄
)

	)

1920 
	#FótuªLi°TabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
FótuªLi°TabÀ
)

	)

1921 
	#FõldPosôi⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
FõldPosôi⁄
)

	)

1922 
	#FõldPosôi⁄H™dÀr
 
	`U_ICU_ENTRY_POINT_RENAME
(
FõldPosôi⁄H™dÀr
)

	)

1923 
	#FõldPosôi⁄Iãøt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
FõldPosôi⁄Iãøt‹
)

	)

1924 
	#FõldPosôi⁄Iãøt‹H™dÀr
 
	`U_ICU_ENTRY_POINT_RENAME
(
FõldPosôi⁄Iãøt‹H™dÀr
)

	)

1925 
	#FõldPosôi⁄O∆yH™dÀr
 
	`U_ICU_ENTRY_POINT_RENAME
(
FõldPosôi⁄O∆yH™dÀr
)

	)

1926 
	#FûãªdN‹mÆizî2
 
	`U_ICU_ENTRY_POINT_RENAME
(
FûãªdN‹mÆizî2
)

	)

1927 
	#F⁄tRuns
 
	`U_ICU_ENTRY_POINT_RENAME
(
F⁄tRuns
)

	)

1928 
	#F‹m©
 
	`U_ICU_ENTRY_POINT_RENAME
(
F‹m©
)

	)

1929 
	#F‹m©1Anch‹TabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
F‹m©1Anch‹TabÀ
)

	)

1930 
	#F‹m©2Anch‹TabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
F‹m©2Anch‹TabÀ
)

	)

1931 
	#F‹m©3Anch‹TabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
F‹m©3Anch‹TabÀ
)

	)

1932 
	#F‹m©NameEnumî©i⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
F‹m©NameEnumî©i⁄
)

	)

1933 
	#F‹m©P¨£r
 
	`U_ICU_ENTRY_POINT_RENAME
(
F‹m©P¨£r
)

	)

1934 
	#F‹m©èbÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
F‹m©èbÀ
)

	)

1935 
	#F‹w¨dCh¨a˘îIãøt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
F‹w¨dCh¨a˘îIãøt‹
)

	)

1936 
	#F‹w¨dUTrõ2SåögIãøt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
F‹w¨dUTrõ2SåögIãøt‹
)

	)

1937 
	#Fø˘i⁄ÆP¨tSub°ôuti⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
Fø˘i⁄ÆP¨tSub°ôuti⁄
)

	)

1938 
	#Fun˘i⁄Rïœ˚r
 
	`U_ICU_ENTRY_POINT_RENAME
(
Fun˘i⁄Rïœ˚r
)

	)

1939 
	#GDEFM¨kFûãr
 
	`U_ICU_ENTRY_POINT_RENAME
(
GDEFM¨kFûãr
)

	)

1940 
	#GXLayoutEngöe
 
	`U_ICU_ENTRY_POINT_RENAME
(
GXLayoutEngöe
)

	)

1941 
	#GlyphDeföôi⁄TabÀHódî
 
	`U_ICU_ENTRY_POINT_RENAME
(
GlyphDeföôi⁄TabÀHódî
)

	)

1942 
	#GlyphIãøt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
GlyphIãøt‹
)

	)

1943 
	#GlyphLookupTabÀHódî
 
	`U_ICU_ENTRY_POINT_RENAME
(
GlyphLookupTabÀHódî
)

	)

1944 
	#GlyphPosôi⁄Adju°míts
 
	`U_ICU_ENTRY_POINT_RENAME
(
GlyphPosôi⁄Adju°míts
)

	)

1945 
	#GlyphPosôi⁄ögLookupPro˚ss‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
GlyphPosôi⁄ögLookupPro˚ss‹
)

	)

1946 
	#GlyphPosôi⁄ögTabÀHódî
 
	`U_ICU_ENTRY_POINT_RENAME
(
GlyphPosôi⁄ögTabÀHódî
)

	)

1947 
	#GlyphSub°ôuti⁄LookupPro˚ss‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
GlyphSub°ôuti⁄LookupPro˚ss‹
)

	)

1948 
	#GlyphSub°ôuti⁄TabÀHódî
 
	`U_ICU_ENTRY_POINT_RENAME
(
GlyphSub°ôuti⁄TabÀHódî
)

	)

1949 
	#GoodSuffixTabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
GoodSuffixTabÀ
)

	)

1950 
	#Gªgo
 
	`U_ICU_ENTRY_POINT_RENAME
(
Gªgo
)

	)

1951 
	#Gªg‹ünCÆíd¨
 
	`U_ICU_ENTRY_POINT_RENAME
(
Gªg‹ünCÆíd¨
)

	)

1952 
	#H™O≥nTy≥LayoutEngöe
 
	`U_ICU_ENTRY_POINT_RENAME
(
H™O≥nTy≥LayoutEngöe
)

	)

1953 
	#H™gulO≥nTy≥LayoutEngöe
 
	`U_ICU_ENTRY_POINT_RENAME
(
H™gulO≥nTy≥LayoutEngöe
)

	)

1954 
	#HebªwCÆíd¨
 
	`U_ICU_ENTRY_POINT_RENAME
(
HebªwCÆíd¨
)

	)

1955 
	#ICUBªakIãøt‹Fa˘‹y
 
	`U_ICU_ENTRY_POINT_RENAME
(
ICUBªakIãøt‹Fa˘‹y
)

	)

1956 
	#ICUBªakIãøt‹Sîvi˚
 
	`U_ICU_ENTRY_POINT_RENAME
(
ICUBªakIãøt‹Sîvi˚
)

	)

1957 
	#ICUCﬁœt‹Fa˘‹y
 
	`U_ICU_ENTRY_POINT_RENAME
(
ICUCﬁœt‹Fa˘‹y
)

	)

1958 
	#ICUCﬁœt‹Sîvi˚
 
	`U_ICU_ENTRY_POINT_RENAME
(
ICUCﬁœt‹Sîvi˚
)

	)

1959 
	#ICUD©aTabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
ICUD©aTabÀ
)

	)

1960 
	#ICUL™guageBªakFa˘‹y
 
	`U_ICU_ENTRY_POINT_RENAME
(
ICUL™guageBªakFa˘‹y
)

	)

1961 
	#ICULoˇÀSîvi˚
 
	`U_ICU_ENTRY_POINT_RENAME
(
ICULoˇÀSîvi˚
)

	)

1962 
	#ICUNŸifõr
 
	`U_ICU_ENTRY_POINT_RENAME
(
ICUNŸifõr
)

	)

1963 
	#ICUNumbîF‹m©Fa˘‹y
 
	`U_ICU_ENTRY_POINT_RENAME
(
ICUNumbîF‹m©Fa˘‹y
)

	)

1964 
	#ICUNumbîF‹m©Sîvi˚
 
	`U_ICU_ENTRY_POINT_RENAME
(
ICUNumbîF‹m©Sîvi˚
)

	)

1965 
	#ICUResour˚BundÀFa˘‹y
 
	`U_ICU_ENTRY_POINT_RENAME
(
ICUResour˚BundÀFa˘‹y
)

	)

1966 
	#ICUSîvi˚
 
	`U_ICU_ENTRY_POINT_RENAME
(
ICUSîvi˚
)

	)

1967 
	#ICUSîvi˚Fa˘‹y
 
	`U_ICU_ENTRY_POINT_RENAME
(
ICUSîvi˚Fa˘‹y
)

	)

1968 
	#ICUSîvi˚Key
 
	`U_ICU_ENTRY_POINT_RENAME
(
ICUSîvi˚Key
)

	)

1969 
	#ICU_Utûôy
 
	`U_ICU_ENTRY_POINT_RENAME
(
ICU_Utûôy
)

	)

1970 
	#IDNA
 
	`U_ICU_ENTRY_POINT_RENAME
(
IDNA
)

	)

1971 
	#IndünCÆíd¨
 
	`U_ICU_ENTRY_POINT_RENAME
(
IndünCÆíd¨
)

	)

1972 
	#IndicCœssTabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
IndicCœssTabÀ
)

	)

1973 
	#IndicO≥nTy≥LayoutEngöe
 
	`U_ICU_ENTRY_POINT_RENAME
(
IndicO≥nTy≥LayoutEngöe
)

	)

1974 
	#IndicRóº™gemítPro˚ss‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
IndicRóº™gemítPro˚ss‹
)

	)

1975 
	#IndicRe‹dîög
 
	`U_ICU_ENTRY_POINT_RENAME
(
IndicRe‹dîög
)

	)

1976 
	#InôülTimeZ⁄eRuÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
InôülTimeZ⁄eRuÀ
)

	)

1977 
	#I≈utText
 
	`U_ICU_ENTRY_POINT_RENAME
(
I≈utText
)

	)

1978 
	#I¡egølP¨tSub°ôuti⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
I¡egølP¨tSub°ôuti⁄
)

	)

1979 
	#I¶amicCÆíd¨
 
	`U_ICU_ENTRY_POINT_RENAME
(
I¶amicCÆíd¨
)

	)

1980 
	#IãøãdCh¨
 
	`U_ICU_ENTRY_POINT_RENAME
(
IãøãdCh¨
)

	)

1981 
	#J≠™e£CÆíd¨
 
	`U_ICU_ENTRY_POINT_RENAME
(
J≠™e£CÆíd¨
)

	)

1982 
	#KînTabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
KînTabÀ
)

	)

1983 
	#Keyw‹dEnumî©i⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
Keyw‹dEnumî©i⁄
)

	)

1984 
	#KhmîCœssTabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
KhmîCœssTabÀ
)

	)

1985 
	#KhmîO≥nTy≥LayoutEngöe
 
	`U_ICU_ENTRY_POINT_RENAME
(
KhmîO≥nTy≥LayoutEngöe
)

	)

1986 
	#KhmîRe‹dîög
 
	`U_ICU_ENTRY_POINT_RENAME
(
KhmîRe‹dîög
)

	)

1987 
	#LECh¨M≠≥r
 
	`U_ICU_ENTRY_POINT_RENAME
(
LECh¨M≠≥r
)

	)

1988 
	#LEF⁄tIn°™˚
 
	`U_ICU_ENTRY_POINT_RENAME
(
LEF⁄tIn°™˚
)

	)

1989 
	#LEGlyphFûãr
 
	`U_ICU_ENTRY_POINT_RENAME
(
LEGlyphFûãr
)

	)

1990 
	#LEGlyphSt‹age
 
	`U_ICU_ENTRY_POINT_RENAME
(
LEGlyphSt‹age
)

	)

1991 
	#LEIn£πi⁄CÆlback
 
	`U_ICU_ENTRY_POINT_RENAME
(
LEIn£πi⁄CÆlback
)

	)

1992 
	#LEIn£πi⁄Li°
 
	`U_ICU_ENTRY_POINT_RENAME
(
LEIn£πi⁄Li°
)

	)

1993 
	#LXUtûôõs
 
	`U_ICU_ENTRY_POINT_RENAME
(
LXUtûôõs
)

	)

1994 
	#L™guageBªakEngöe
 
	`U_ICU_ENTRY_POINT_RENAME
(
L™guageBªakEngöe
)

	)

1995 
	#L™guageBªakFa˘‹y
 
	`U_ICU_ENTRY_POINT_RENAME
(
L™guageBªakFa˘‹y
)

	)

1996 
	#LayoutEngöe
 
	`U_ICU_ENTRY_POINT_RENAME
(
LayoutEngöe
)

	)

1997 
	#Lig©uªSub°ôuti⁄Pro˚ss‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
Lig©uªSub°ôuti⁄Pro˚ss‹
)

	)

1998 
	#Lig©uªSub°ôuti⁄SubèbÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
Lig©uªSub°ôuti⁄SubèbÀ
)

	)

1999 
	#LocD©aP¨£r
 
	`U_ICU_ENTRY_POINT_RENAME
(
LocD©aP¨£r
)

	)

2000 
	#LoˇÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
LoˇÀ
)

	)

2001 
	#LoˇÀBa£d
 
	`U_ICU_ENTRY_POINT_RENAME
(
LoˇÀBa£d
)

	)

2002 
	#LoˇÀDi•œyNames
 
	`U_ICU_ENTRY_POINT_RENAME
(
LoˇÀDi•œyNames
)

	)

2003 
	#LoˇÀDi•œyNamesIm∂
 
	`U_ICU_ENTRY_POINT_RENAME
(
LoˇÀDi•œyNamesIm∂
)

	)

2004 
	#LoˇÀKey
 
	`U_ICU_ENTRY_POINT_RENAME
(
LoˇÀKey
)

	)

2005 
	#LoˇÀKeyFa˘‹y
 
	`U_ICU_ENTRY_POINT_RENAME
(
LoˇÀKeyFa˘‹y
)

	)

2006 
	#LoˇÀRuns
 
	`U_ICU_ENTRY_POINT_RENAME
(
LoˇÀRuns
)

	)

2007 
	#LoˇÀUtûôy
 
	`U_ICU_ENTRY_POINT_RENAME
(
LoˇÀUtûôy
)

	)

2008 
	#Loˇliz©i⁄Info
 
	`U_ICU_ENTRY_POINT_RENAME
(
Loˇliz©i⁄Info
)

	)

2009 
	#LookupLi°TabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
LookupLi°TabÀ
)

	)

2010 
	#LookupPro˚ss‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
LookupPro˚ss‹
)

	)

2011 
	#LookupSubèbÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
LookupSubèbÀ
)

	)

2012 
	#LookupTabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
LookupTabÀ
)

	)

2013 
	#Lowîˇ£Tøn¶ôî©‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
Lowîˇ£Tøn¶ôî©‹
)

	)

2014 
	#MPªFixups
 
	`U_ICU_ENTRY_POINT_RENAME
(
MPªFixups
)

	)

2015 
	#M¨kAºay
 
	`U_ICU_ENTRY_POINT_RENAME
(
M¨kAºay
)

	)

2016 
	#M¨kToBa£Posôi⁄ögSubèbÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
M¨kToBa£Posôi⁄ögSubèbÀ
)

	)

2017 
	#M¨kToLig©uªPosôi⁄ögSubèbÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
M¨kToLig©uªPosôi⁄ögSubèbÀ
)

	)

2018 
	#M¨kToM¨kPosôi⁄ögSubèbÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
M¨kToM¨kPosôi⁄ögSubèbÀ
)

	)

2019 
	#Mósuª
 
	`U_ICU_ENTRY_POINT_RENAME
(
Mósuª
)

	)

2020 
	#MósuªF‹m©
 
	`U_ICU_ENTRY_POINT_RENAME
(
MósuªF‹m©
)

	)

2021 
	#MósuªUnô
 
	`U_ICU_ENTRY_POINT_RENAME
(
MósuªUnô
)

	)

2022 
	#MesßgeF‹m©
 
	`U_ICU_ENTRY_POINT_RENAME
(
MesßgeF‹m©
)

	)

2023 
	#MesßgeF‹m©Ad≠ãr
 
	`U_ICU_ENTRY_POINT_RENAME
(
MesßgeF‹m©Ad≠ãr
)

	)

2024 
	#ModulusSub°ôuti⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
ModulusSub°ôuti⁄
)

	)

2025 
	#Mo⁄Ri£SëCo‹dFunc
 
	`U_ICU_ENTRY_POINT_RENAME
(
Mo⁄Ri£SëCo‹dFunc
)

	)

2026 
	#Mo⁄TimeAngÀFunc
 
	`U_ICU_ENTRY_POINT_RENAME
(
Mo⁄TimeAngÀFunc
)

	)

2027 
	#M‹phSubèbÀHódî
 
	`U_ICU_ENTRY_POINT_RENAME
(
M‹phSubèbÀHódî
)

	)

2028 
	#M‹phTabÀHódî
 
	`U_ICU_ENTRY_POINT_RENAME
(
M‹phTabÀHódî
)

	)

2029 
	#Mu…ùÀSub°ôuti⁄SubèbÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
Mu…ùÀSub°ôuti⁄SubèbÀ
)

	)

2030 
	#Mu…ùlõrSub°ôuti⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
Mu…ùlõrSub°ôuti⁄
)

	)

2031 
	#MuèbÀTrõDi˘i⁄¨y
 
	`U_ICU_ENTRY_POINT_RENAME
(
MuèbÀTrõDi˘i⁄¨y
)

	)

2032 
	#MuèbÀTrõEnumî©i⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
MuèbÀTrõEnumî©i⁄
)

	)

2033 
	#NFFa˘‹y
 
	`U_ICU_ENTRY_POINT_RENAME
(
NFFa˘‹y
)

	)

2034 
	#NFKDBuf„r
 
	`U_ICU_ENTRY_POINT_RENAME
(
NFKDBuf„r
)

	)

2035 
	#NFRuÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
NFRuÀ
)

	)

2036 
	#NFRuÀSë
 
	`U_ICU_ENTRY_POINT_RENAME
(
NFRuÀSë
)

	)

2037 
	#NFSub°ôuti⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
NFSub°ôuti⁄
)

	)

2038 
	#NGømP¨£r
 
	`U_ICU_ENTRY_POINT_RENAME
(
NGømP¨£r
)

	)

2039 
	#NameToEnum
 
	`U_ICU_ENTRY_POINT_RENAME
(
NameToEnum
)

	)

2040 
	#NameUnicodeTøn¶ôî©‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
NameUnicodeTøn¶ôî©‹
)

	)

2041 
	#N⁄C⁄ãxtuÆGlyphSub°ôuti⁄Pro˚ss‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
N⁄C⁄ãxtuÆGlyphSub°ôuti⁄Pro˚ss‹
)

	)

2042 
	#N⁄C⁄tiguousEnumToOff£t
 
	`U_ICU_ENTRY_POINT_RENAME
(
N⁄C⁄tiguousEnumToOff£t
)

	)

2043 
	#No›N‹mÆizî2
 
	`U_ICU_ENTRY_POINT_RENAME
(
No›N‹mÆizî2
)

	)

2044 
	#N‹m2AŒModes
 
	`U_ICU_ENTRY_POINT_RENAME
(
N‹m2AŒModes
)

	)

2045 
	#N‹mÆiz©i⁄Tøn¶ôî©‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
N‹mÆiz©i⁄Tøn¶ôî©‹
)

	)

2046 
	#N‹mÆizî
 
	`U_ICU_ENTRY_POINT_RENAME
(
N‹mÆizî
)

	)

2047 
	#N‹mÆizî2
 
	`U_ICU_ENTRY_POINT_RENAME
(
N‹mÆizî2
)

	)

2048 
	#N‹mÆizî2Fa˘‹y
 
	`U_ICU_ENTRY_POINT_RENAME
(
N‹mÆizî2Fa˘‹y
)

	)

2049 
	#N‹mÆizî2Im∂
 
	`U_ICU_ENTRY_POINT_RENAME
(
N‹mÆizî2Im∂
)

	)

2050 
	#N‹mÆizî2WôhIm∂
 
	`U_ICU_ENTRY_POINT_RENAME
(
N‹mÆizî2WôhIm∂
)

	)

2051 
	#NuŒSub°ôuti⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
NuŒSub°ôuti⁄
)

	)

2052 
	#NuŒTøn¶ôî©‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
NuŒTøn¶ôî©‹
)

	)

2053 
	#NumbîF‹m©
 
	`U_ICU_ENTRY_POINT_RENAME
(
NumbîF‹m©
)

	)

2054 
	#NumbîF‹m©Fa˘‹y
 
	`U_ICU_ENTRY_POINT_RENAME
(
NumbîF‹m©Fa˘‹y
)

	)

2055 
	#NumbîögSy°em
 
	`U_ICU_ENTRY_POINT_RENAME
(
NumbîögSy°em
)

	)

2056 
	#Numî©‹Sub°ôuti⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
Numî©‹Sub°ôuti⁄
)

	)

2057 
	#Ols⁄TimeZ⁄e
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ols⁄TimeZ⁄e
)

	)

2058 
	#O≥nTy≥LayoutEngöe
 
	`U_ICU_ENTRY_POINT_RENAME
(
O≥nTy≥LayoutEngöe
)

	)

2059 
	#O≥nTy≥Utûôõs
 
	`U_ICU_ENTRY_POINT_RENAME
(
O≥nTy≥Utûôõs
)

	)

2060 
	#OrC⁄°øöt
 
	`U_ICU_ENTRY_POINT_RENAME
(
OrC⁄°øöt
)

	)

2061 
	#PCEBuf„r
 
	`U_ICU_ENTRY_POINT_RENAME
(
PCEBuf„r
)

	)

2062 
	#PaúPosôi⁄ögF‹m©1SubèbÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
PaúPosôi⁄ögF‹m©1SubèbÀ
)

	)

2063 
	#PaúPosôi⁄ögF‹m©2SubèbÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
PaúPosôi⁄ögF‹m©2SubèbÀ
)

	)

2064 
	#PaúPosôi⁄ögSubèbÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
PaúPosôi⁄ögSubèbÀ
)

	)

2065 
	#P¨agøphLayout
 
	`U_ICU_ENTRY_POINT_RENAME
(
P¨agøphLayout
)

	)

2066 
	#P¨£D©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
P¨£D©a
)

	)

2067 
	#P¨£Posôi⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
P¨£Posôi⁄
)

	)

2068 
	#P©ã∫M≠
 
	`U_ICU_ENTRY_POINT_RENAME
(
P©ã∫M≠
)

	)

2069 
	#P©ã∫M≠Iãøt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
P©ã∫M≠Iãøt‹
)

	)

2070 
	#PîsünCÆíd¨
 
	`U_ICU_ENTRY_POINT_RENAME
(
PîsünCÆíd¨
)

	)

2071 
	#PluølF‹m©
 
	`U_ICU_ENTRY_POINT_RENAME
(
PluølF‹m©
)

	)

2072 
	#PluølKeyw‹dEnumî©i⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
PluølKeyw‹dEnumî©i⁄
)

	)

2073 
	#PluølRuÀs
 
	`U_ICU_ENTRY_POINT_RENAME
(
PluølRuÀs
)

	)

2074 
	#Pr›îtyAlü£s
 
	`U_ICU_ENTRY_POINT_RENAME
(
Pr›îtyAlü£s
)

	)

2075 
	#PäEÀm
 
	`U_ICU_ENTRY_POINT_RENAME
(
PäEÀm
)

	)

2076 
	#PäSkñë⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
PäSkñë⁄
)

	)

2077 
	#Qu™tifõr
 
	`U_ICU_ENTRY_POINT_RENAME
(
Qu™tifõr
)

	)

2078 
	#RBBID©aWøµî
 
	`U_ICU_ENTRY_POINT_RENAME
(
RBBID©aWøµî
)

	)

2079 
	#RBBINode
 
	`U_ICU_ENTRY_POINT_RENAME
(
RBBINode
)

	)

2080 
	#RBBIRuÀBuûdî
 
	`U_ICU_ENTRY_POINT_RENAME
(
RBBIRuÀBuûdî
)

	)

2081 
	#RBBIRuÀSˇ¬î
 
	`U_ICU_ENTRY_POINT_RENAME
(
RBBIRuÀSˇ¬î
)

	)

2082 
	#RBBISëBuûdî
 
	`U_ICU_ENTRY_POINT_RENAME
(
RBBISëBuûdî
)

	)

2083 
	#RBBISèãDes¸ùt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
RBBISèãDes¸ùt‹
)

	)

2084 
	#RBBISymbﬁTabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
RBBISymbﬁTabÀ
)

	)

2085 
	#RBBISymbﬁTabÀE¡ry
 
	`U_ICU_ENTRY_POINT_RENAME
(
RBBISymbﬁTabÀE¡ry
)

	)

2086 
	#RBBITabÀBuûdî
 
	`U_ICU_ENTRY_POINT_RENAME
(
RBBITabÀBuûdî
)

	)

2087 
	#RCEBuf„r
 
	`U_ICU_ENTRY_POINT_RENAME
(
RCEBuf„r
)

	)

2088 
	#R™geDes¸ùt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
R™geDes¸ùt‹
)

	)

2089 
	#RegexCompûe
 
	`U_ICU_ENTRY_POINT_RENAME
(
RegexCompûe
)

	)

2090 
	#RegexM©chî
 
	`U_ICU_ENTRY_POINT_RENAME
(
RegexM©chî
)

	)

2091 
	#RegexP©ã∫
 
	`U_ICU_ENTRY_POINT_RENAME
(
RegexP©ã∫
)

	)

2092 
	#RegexSèticSës
 
	`U_ICU_ENTRY_POINT_RENAME
(
RegexSèticSës
)

	)

2093 
	#ReguœrEx¥essi⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
ReguœrEx¥essi⁄
)

	)

2094 
	#Rñ©iveD©eF‹m©
 
	`U_ICU_ENTRY_POINT_RENAME
(
Rñ©iveD©eF‹m©
)

	)

2095 
	#RemoveTøn¶ôî©‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
RemoveTøn¶ôî©‹
)

	)

2096 
	#Re‹dîögBuf„r
 
	`U_ICU_ENTRY_POINT_RENAME
(
Re‹dîögBuf„r
)

	)

2097 
	#Rïœ˚abÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
Rïœ˚abÀ
)

	)

2098 
	#Rïœ˚abÀGlue
 
	`U_ICU_ENTRY_POINT_RENAME
(
Rïœ˚abÀGlue
)

	)

2099 
	#Resour˚BundÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
Resour˚BundÀ
)

	)

2100 
	#Ri£SëCo‹dFunc
 
	`U_ICU_ENTRY_POINT_RENAME
(
Ri£SëCo‹dFunc
)

	)

2101 
	#RuÀBa£dBªakIãøt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
RuÀBa£dBªakIãøt‹
)

	)

2102 
	#RuÀBa£dCﬁœt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
RuÀBa£dCﬁœt‹
)

	)

2103 
	#RuÀBa£dNumbîF‹m©
 
	`U_ICU_ENTRY_POINT_RENAME
(
RuÀBa£dNumbîF‹m©
)

	)

2104 
	#RuÀBa£dTimeZ⁄e
 
	`U_ICU_ENTRY_POINT_RENAME
(
RuÀBa£dTimeZ⁄e
)

	)

2105 
	#RuÀBa£dTøn¶ôî©‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
RuÀBa£dTøn¶ôî©‹
)

	)

2106 
	#RuÀChaö
 
	`U_ICU_ENTRY_POINT_RENAME
(
RuÀChaö
)

	)

2107 
	#RuÀCh¨a˘îIãøt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
RuÀCh¨a˘îIãøt‹
)

	)

2108 
	#RuÀHÆf
 
	`U_ICU_ENTRY_POINT_RENAME
(
RuÀHÆf
)

	)

2109 
	#RuÀP¨£r
 
	`U_ICU_ENTRY_POINT_RENAME
(
RuÀP¨£r
)

	)

2110 
	#RunAºay
 
	`U_ICU_ENTRY_POINT_RENAME
(
RunAºay
)

	)

2111 
	#SPUSåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
SPUSåög
)

	)

2112 
	#SPUSåögPoﬁ
 
	`U_ICU_ENTRY_POINT_RENAME
(
SPUSåögPoﬁ
)

	)

2113 
	#Sa„Z⁄eSåögF‹m©På
 
	`U_ICU_ENTRY_POINT_RENAME
(
Sa„Z⁄eSåögF‹m©På
)

	)

2114 
	#SameVÆueSub°ôuti⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
SameVÆueSub°ôuti⁄
)

	)

2115 
	#S¸ùtLi°TabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
S¸ùtLi°TabÀ
)

	)

2116 
	#S¸ùtRunIãøt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
S¸ùtRunIãøt‹
)

	)

2117 
	#S¸ùtSë
 
	`U_ICU_ENTRY_POINT_RENAME
(
S¸ùtSë
)

	)

2118 
	#S¸ùtTabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
S¸ùtTabÀ
)

	)

2119 
	#SórchIãøt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
SórchIãøt‹
)

	)

2120 
	#SegmítAºayPro˚ss‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
SegmítAºayPro˚ss‹
)

	)

2121 
	#SegmítSögÀPro˚ss‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
SegmítSögÀPro˚ss‹
)

	)

2122 
	#Sñe˘F‹m©
 
	`U_ICU_ENTRY_POINT_RENAME
(
Sñe˘F‹m©
)

	)

2123 
	#Sîvi˚Enumî©i⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
Sîvi˚Enumî©i⁄
)

	)

2124 
	#Sîvi˚Li°íî
 
	`U_ICU_ENTRY_POINT_RENAME
(
Sîvi˚Li°íî
)

	)

2125 
	#Sim∂eAºayPro˚ss‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
Sim∂eAºayPro˚ss‹
)

	)

2126 
	#Sim∂eD©eF‹m©
 
	`U_ICU_ENTRY_POINT_RENAME
(
Sim∂eD©eF‹m©
)

	)

2127 
	#Sim∂eFa˘‹y
 
	`U_ICU_ENTRY_POINT_RENAME
(
Sim∂eFa˘‹y
)

	)

2128 
	#Sim∂eLoˇÀKeyFa˘‹y
 
	`U_ICU_ENTRY_POINT_RENAME
(
Sim∂eLoˇÀKeyFa˘‹y
)

	)

2129 
	#Sim∂eNumbîF‹m©Fa˘‹y
 
	`U_ICU_ENTRY_POINT_RENAME
(
Sim∂eNumbîF‹m©Fa˘‹y
)

	)

2130 
	#Sim∂eSögÀt⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
Sim∂eSögÀt⁄
)

	)

2131 
	#Sim∂eTimeZ⁄e
 
	`U_ICU_ENTRY_POINT_RENAME
(
Sim∂eTimeZ⁄e
)

	)

2132 
	#SögÀPosôi⁄ögF‹m©1SubèbÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
SögÀPosôi⁄ögF‹m©1SubèbÀ
)

	)

2133 
	#SögÀPosôi⁄ögF‹m©2SubèbÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
SögÀPosôi⁄ögF‹m©2SubèbÀ
)

	)

2134 
	#SögÀPosôi⁄ögSubèbÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
SögÀPosôi⁄ögSubèbÀ
)

	)

2135 
	#SögÀSub°ôuti⁄F‹m©1SubèbÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
SögÀSub°ôuti⁄F‹m©1SubèbÀ
)

	)

2136 
	#SögÀSub°ôuti⁄F‹m©2SubèbÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
SögÀSub°ôuti⁄F‹m©2SubèbÀ
)

	)

2137 
	#SögÀSub°ôuti⁄SubèbÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
SögÀSub°ôuti⁄SubèbÀ
)

	)

2138 
	#SögÀTabÀPro˚ss‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
SögÀTabÀPro˚ss‹
)

	)

2139 
	#SpoofD©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
SpoofD©a
)

	)

2140 
	#SpoofIm∂
 
	`U_ICU_ENTRY_POINT_RENAME
(
SpoofIm∂
)

	)

2141 
	#SèãTabÀPro˚ss‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
SèãTabÀPro˚ss‹
)

	)

2142 
	#SåögCh¨a˘îIãøt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
SåögCh¨a˘îIãøt‹
)

	)

2143 
	#SåögEnumî©i⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
SåögEnumî©i⁄
)

	)

2144 
	#SåögLi°
 
	`U_ICU_ENTRY_POINT_RENAME
(
SåögLi°
)

	)

2145 
	#SåögLoˇliz©i⁄Info
 
	`U_ICU_ENTRY_POINT_RENAME
(
SåögLoˇliz©i⁄Info
)

	)

2146 
	#SåögM©chî
 
	`U_ICU_ENTRY_POINT_RENAME
(
SåögM©chî
)

	)

2147 
	#SåögPaú
 
	`U_ICU_ENTRY_POINT_RENAME
(
SåögPaú
)

	)

2148 
	#SåögPõ˚
 
	`U_ICU_ENTRY_POINT_RENAME
(
SåögPõ˚
)

	)

2149 
	#SåögRïœ˚r
 
	`U_ICU_ENTRY_POINT_RENAME
(
SåögRïœ˚r
)

	)

2150 
	#SåögSórch
 
	`U_ICU_ENTRY_POINT_RENAME
(
SåögSórch
)

	)

2151 
	#SåögToCEsM≠
 
	`U_ICU_ENTRY_POINT_RENAME
(
SåögToCEsM≠
)

	)

2152 
	#StyÀRuns
 
	`U_ICU_ENTRY_POINT_RENAME
(
StyÀRuns
)

	)

2153 
	#Sub°ôuti⁄Lookup
 
	`U_ICU_ENTRY_POINT_RENAME
(
Sub°ôuti⁄Lookup
)

	)

2154 
	#SubèbÀPro˚ss‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
SubèbÀPro˚ss‹
)

	)

2155 
	#SunTimeAngÀFunc
 
	`U_ICU_ENTRY_POINT_RENAME
(
SunTimeAngÀFunc
)

	)

2156 
	#SymbﬁTabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
SymbﬁTabÀ
)

	)

2157 
	#TZEnumî©i⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
TZEnumî©i⁄
)

	)

2158 
	#Taiw™CÆíd¨
 
	`U_ICU_ENTRY_POINT_RENAME
(
Taiw™CÆíd¨
)

	)

2159 
	#T¨gë
 
	`U_ICU_ENTRY_POINT_RENAME
(
T¨gë
)

	)

2160 
	#Tî«ryNode
 
	`U_ICU_ENTRY_POINT_RENAME
(
Tî«ryNode
)

	)

2161 
	#TextTrõM≠
 
	`U_ICU_ENTRY_POINT_RENAME
(
TextTrõM≠
)

	)

2162 
	#TextTrõM≠SórchResu…H™dÀr
 
	`U_ICU_ENTRY_POINT_RENAME
(
TextTrõM≠SórchResu…H™dÀr
)

	)

2163 
	#ThaiBªakEngöe
 
	`U_ICU_ENTRY_POINT_RENAME
(
ThaiBªakEngöe
)

	)

2164 
	#ThaiLayoutEngöe
 
	`U_ICU_ENTRY_POINT_RENAME
(
ThaiLayoutEngöe
)

	)

2165 
	#ThaiSh≠ög
 
	`U_ICU_ENTRY_POINT_RENAME
(
ThaiSh≠ög
)

	)

2166 
	#Tibë™CœssTabÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
Tibë™CœssTabÀ
)

	)

2167 
	#Tibë™O≥nTy≥LayoutEngöe
 
	`U_ICU_ENTRY_POINT_RENAME
(
Tibë™O≥nTy≥LayoutEngöe
)

	)

2168 
	#Tibë™Re‹dîög
 
	`U_ICU_ENTRY_POINT_RENAME
(
Tibë™Re‹dîög
)

	)

2169 
	#TimeAºayTimeZ⁄eRuÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
TimeAºayTimeZ⁄eRuÀ
)

	)

2170 
	#TimeUnô
 
	`U_ICU_ENTRY_POINT_RENAME
(
TimeUnô
)

	)

2171 
	#TimeUnôAmou¡
 
	`U_ICU_ENTRY_POINT_RENAME
(
TimeUnôAmou¡
)

	)

2172 
	#TimeUnôF‹m©
 
	`U_ICU_ENTRY_POINT_RENAME
(
TimeUnôF‹m©
)

	)

2173 
	#TimeZ⁄e
 
	`U_ICU_ENTRY_POINT_RENAME
(
TimeZ⁄e
)

	)

2174 
	#TimeZ⁄eRuÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
TimeZ⁄eRuÀ
)

	)

2175 
	#TimeZ⁄eTønsôi⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
TimeZ⁄eTønsôi⁄
)

	)

2176 
	#TôÀˇ£Tøn¶ôî©‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
TôÀˇ£Tøn¶ôî©‹
)

	)

2177 
	#Tøn¶ôî©i⁄RuÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
Tøn¶ôî©i⁄RuÀ
)

	)

2178 
	#Tøn¶ôî©i⁄RuÀD©a
 
	`U_ICU_ENTRY_POINT_RENAME
(
Tøn¶ôî©i⁄RuÀD©a
)

	)

2179 
	#Tøn¶ôî©i⁄RuÀSë
 
	`U_ICU_ENTRY_POINT_RENAME
(
Tøn¶ôî©i⁄RuÀSë
)

	)

2180 
	#Tøn¶ôî©‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
Tøn¶ôî©‹
)

	)

2181 
	#Tøn¶ôî©‹Alüs
 
	`U_ICU_ENTRY_POINT_RENAME
(
Tøn¶ôî©‹Alüs
)

	)

2182 
	#Tøn¶ôî©‹E¡ry
 
	`U_ICU_ENTRY_POINT_RENAME
(
Tøn¶ôî©‹E¡ry
)

	)

2183 
	#Tøn¶ôî©‹IDP¨£r
 
	`U_ICU_ENTRY_POINT_RENAME
(
Tøn¶ôî©‹IDP¨£r
)

	)

2184 
	#Tøn¶ôî©‹P¨£r
 
	`U_ICU_ENTRY_POINT_RENAME
(
Tøn¶ôî©‹P¨£r
)

	)

2185 
	#Tøn¶ôî©‹Regi°ry
 
	`U_ICU_ENTRY_POINT_RENAME
(
Tøn¶ôî©‹Regi°ry
)

	)

2186 
	#Tøn¶ôî©‹S≥c
 
	`U_ICU_ENTRY_POINT_RENAME
(
Tøn¶ôî©‹S≥c
)

	)

2187 
	#TriSèãSögÀt⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
TriSèãSögÀt⁄
)

	)

2188 
	#TrõW‹dDi˘i⁄¨y
 
	`U_ICU_ENTRY_POINT_RENAME
(
TrõW‹dDi˘i⁄¨y
)

	)

2189 
	#TrimmedAºayPro˚ss‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
TrimmedAºayPro˚ss‹
)

	)

2190 
	#UCh¨Ch¨a˘îIãøt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
UCh¨Ch¨a˘îIãøt‹
)

	)

2191 
	#UCﬁœti⁄PCE
 
	`U_ICU_ENTRY_POINT_RENAME
(
UCﬁœti⁄PCE
)

	)

2192 
	#UD©aP©hIãøt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
UD©aP©hIãøt‹
)

	)

2193 
	#ULocRuns
 
	`U_ICU_ENTRY_POINT_RENAME
(
ULocRuns
)

	)

2194 
	#UMem‹y
 
	`U_ICU_ENTRY_POINT_RENAME
(
UMem‹y
)

	)

2195 
	#UObje˘
 
	`U_ICU_ENTRY_POINT_RENAME
(
UObje˘
)

	)

2196 
	#USèck
 
	`U_ICU_ENTRY_POINT_RENAME
(
USèck
)

	)

2197 
	#USåögEnumî©i⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
USåögEnumî©i⁄
)

	)

2198 
	#UTS46
 
	`U_ICU_ENTRY_POINT_RENAME
(
UTS46
)

	)

2199 
	#UTrõ2SögÀt⁄
 
	`U_ICU_ENTRY_POINT_RENAME
(
UTrõ2SögÀt⁄
)

	)

2200 
	#UVe˘‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
UVe˘‹
)

	)

2201 
	#UVe˘‹32
 
	`U_ICU_ENTRY_POINT_RENAME
(
UVe˘‹32
)

	)

2202 
	#UVe˘‹64
 
	`U_ICU_ENTRY_POINT_RENAME
(
UVe˘‹64
)

	)

2203 
	#U√sˇ≥Tøn¶ôî©‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
U√sˇ≥Tøn¶ôî©‹
)

	)

2204 
	#Unh™dÀdEngöe
 
	`U_ICU_ENTRY_POINT_RENAME
(
Unh™dÀdEngöe
)

	)

2205 
	#UnicodeAøbicO≥nTy≥LayoutEngöe
 
	`U_ICU_ENTRY_POINT_RENAME
(
UnicodeAøbicO≥nTy≥LayoutEngöe
)

	)

2206 
	#UnicodeFûãr
 
	`U_ICU_ENTRY_POINT_RENAME
(
UnicodeFûãr
)

	)

2207 
	#UnicodeFun˘‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
UnicodeFun˘‹
)

	)

2208 
	#UnicodeM©chî
 
	`U_ICU_ENTRY_POINT_RENAME
(
UnicodeM©chî
)

	)

2209 
	#UnicodeNameTøn¶ôî©‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
UnicodeNameTøn¶ôî©‹
)

	)

2210 
	#UnicodeRïœ˚r
 
	`U_ICU_ENTRY_POINT_RENAME
(
UnicodeRïœ˚r
)

	)

2211 
	#UnicodeSë
 
	`U_ICU_ENTRY_POINT_RENAME
(
UnicodeSë
)

	)

2212 
	#UnicodeSëIãøt‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
UnicodeSëIãøt‹
)

	)

2213 
	#UnicodeSëSåögS∑n
 
	`U_ICU_ENTRY_POINT_RENAME
(
UnicodeSëSåögS∑n
)

	)

2214 
	#UnicodeSåög
 
	`U_ICU_ENTRY_POINT_RENAME
(
UnicodeSåög
)

	)

2215 
	#Uµîˇ£Tøn¶ôî©‹
 
	`U_ICU_ENTRY_POINT_RENAME
(
Uµîˇ£Tøn¶ôî©‹
)

	)

2216 
	#VTZRódî
 
	`U_ICU_ENTRY_POINT_RENAME
(
VTZRódî
)

	)

2217 
	#VTZWrôî
 
	`U_ICU_ENTRY_POINT_RENAME
(
VTZWrôî
)

	)

2218 
	#VTimeZ⁄e
 
	`U_ICU_ENTRY_POINT_RENAME
(
VTimeZ⁄e
)

	)

2219 
	#VÆueRec‹d
 
	`U_ICU_ENTRY_POINT_RENAME
(
VÆueRec‹d
)

	)

2220 
	#VÆueRuns
 
	`U_ICU_ENTRY_POINT_RENAME
(
VÆueRuns
)

	)

2221 
	#ZSFCache
 
	`U_ICU_ENTRY_POINT_RENAME
(
ZSFCache
)

	)

2222 
	#ZSFCacheE¡ry
 
	`U_ICU_ENTRY_POINT_RENAME
(
ZSFCacheE¡ry
)

	)

2223 
	#ZSFSåögPoﬁ
 
	`U_ICU_ENTRY_POINT_RENAME
(
ZSFSåögPoﬁ
)

	)

2224 
	#ZSFSåögPoﬁChunk
 
	`U_ICU_ENTRY_POINT_RENAME
(
ZSFSåögPoﬁChunk
)

	)

2225 
	#Z⁄eMëa
 
	`U_ICU_ENTRY_POINT_RENAME
(
Z⁄eMëa
)

	)

2226 
	#Z⁄eSåögF‹m©
 
	`U_ICU_ENTRY_POINT_RENAME
(
Z⁄eSåögF‹m©
)

	)

2227 
	#Z⁄eSåögInfo
 
	`U_ICU_ENTRY_POINT_RENAME
(
Z⁄eSåögInfo
)

	)

2228 
	#Z⁄eSåögSórchResu…H™dÀr
 
	`U_ICU_ENTRY_POINT_RENAME
(
Z⁄eSåögSórchResu…H™dÀr
)

	)

2229 
	#Z⁄eSåögs
 
	`U_ICU_ENTRY_POINT_RENAME
(
Z⁄eSåögs
)

	)

2230 
	#cﬁlIãøã
 
	`U_ICU_ENTRY_POINT_RENAME
(
cﬁlIãøã
)

	)

2231 
	#loˇÀ_£t_deÁu…_öã∫Æ
 
	`U_ICU_ENTRY_POINT_RENAME
(
loˇÀ_£t_deÁu…_öã∫Æ
)

	)

2232 
	#utû64_‰omDoubÀ
 
	`U_ICU_ENTRY_POINT_RENAME
(
utû64_‰omDoubÀ
)

	)

2233 
	#utû64_pow
 
	`U_ICU_ENTRY_POINT_RENAME
(
utû64_pow
)

	)

2234 
	#utû64_tou
 
	`U_ICU_ENTRY_POINT_RENAME
(
utû64_tou
)

	)

	@unicode/urep.h

11 #i‚de‡
__UREP_H


12 
	#__UREP_H


	)

14 
	~"unicode/uty≥s.h
"

16 
U_CDECL_BEGIN


42 * 
	tURïœ˚abÀ
;

51 
	sURïœ˚abÀCÆlbacks
 {

61 
öt32_t
 (*
Àngth
)(c⁄° 
URïœ˚abÀ
* 
	mªp
);

74 
UCh¨
 (*
ch¨At
)(c⁄° 
URïœ˚abÀ
* 
	mªp
,

75 
öt32_t
 
	moff£t
);

87 
UCh¨32
 (*
ch¨32At
)(c⁄° 
URïœ˚abÀ
* 
	mªp
,

88 
öt32_t
 
	moff£t
);

106 (*
	mª∂a˚
)(
URïœ˚abÀ
* 
	mªp
,

107 
öt32_t
 
	m°¨t
,

108 
öt32_t
 
	mlimô
,

109 c⁄° 
UCh¨
* 
	mãxt
,

110 
öt32_t
 
	mãxtLígth
);

125 (*
	mexåa˘
)(
URïœ˚abÀ
* 
	mªp
,

126 
öt32_t
 
	m°¨t
,

127 
öt32_t
 
	mlimô
,

128 
UCh¨
* 
	md°
);

146 (*
	mc›y
)(
URïœ˚abÀ
* 
	mªp
,

147 
öt32_t
 
	m°¨t
,

148 
öt32_t
 
	mlimô
,

149 
öt32_t
 
	mde°
);

151 } 
	tURïœ˚abÀCÆlbacks
;

153 
	gU_CDECL_END


	@unicode/ures.h

23 #i‚de‡
URES_H


24 
	#URES_H


	)

26 
	~"unicode/uty≥s.h
"

27 
	~"unicode/uloc.h
"

28 
	~"unicode/loˇÕoöãr.h
"

52 
	gUResour˚BundÀ
;

57 
UResour˚BundÀ
 
	tUResour˚BundÀ
;

66 
	mURES_NONE
=-1,

69 
	mURES_STRING
=0,

72 
	mURES_BINARY
=1,

75 
	mURES_TABLE
=2,

84 
	mURES_ALIAS
=3,

93 
	mURES_INT
=7,

96 
	mURES_ARRAY
=8,

103 
	mURES_INT_VECTOR
 = 14,

104 #i‚de‡
U_HIDE_DEPRECATED_API


106 
	mRES_NONE
=
URES_NONE
,

108 
	mRES_STRING
=
URES_STRING
,

110 
	mRES_BINARY
=
URES_BINARY
,

112 
	mRES_TABLE
=
URES_TABLE
,

114 
	mRES_ALIAS
=
URES_ALIAS
,

116 
	mRES_INT
=
URES_INT
,

118 
	mRES_ARRAY
=
URES_ARRAY
,

120 
	mRES_INT_VECTOR
=
URES_INT_VECTOR
,

122 
	mRES_RESERVED
=15,

125 
	mURES_LIMIT
 = 16

126 } 
	tUResTy≥
;

160 
U_STABLE
 
UResour˚BundÀ
* 
U_EXPORT2


161 
uªs_›í
(c⁄° * 
∑ckageName
,

162 c⁄° * 
loˇÀ
,

163 
UEº‹Code
* 
°©us
);

183 
U_STABLE
 
UResour˚BundÀ
* 
U_EXPORT2


184 
uªs_›íDúe˘
(c⁄° * 
∑ckageName
,

185 c⁄° * 
loˇÀ
,

186 
UEº‹Code
* 
°©us
);

206 
U_STABLE
 
UResour˚BundÀ
* 
U_EXPORT2


207 
uªs_›íU
(c⁄° 
UCh¨
* 
∑ckageName
,

208 c⁄° * 
loˇÀ
,

209 
UEº‹Code
* 
°©us
);

227 
U_DEPRECATED
 
öt32_t
 
U_EXPORT2


228 
uªs_cou¡AºayIãms
(c⁄° 
UResour˚BundÀ
* 
ªsour˚BundÀ
,

229 c⁄° * 
ªsour˚Key
,

230 
UEº‹Code
* 
îr
);

239 
U_STABLE
 
U_EXPORT2


240 
uªs_˛o£
(
UResour˚BundÀ
* 
ªsour˚BundÀ
);

242 #i‡
U_SHOW_CPLUSPLUS_API


244 
U_NAMESPACE_BEGIN


255 
U_DEFINE_LOCAL_OPEN_POINTER
(
LoˇlUResour˚BundÀPoöãr
, 
UResour˚BundÀ
, 
uªs_˛o£
);

257 
	gU_NAMESPACE_END


271 
U_DEPRECATED
 c⁄° * 
U_EXPORT2


272 
uªs_gëVîsi⁄Numbî
(c⁄° 
UResour˚BundÀ
* 
ªsour˚BundÀ
);

283 
U_STABLE
 
U_EXPORT2


284 
uªs_gëVîsi⁄
(c⁄° 
UResour˚BundÀ
* 
ªsB
,

285 
UVîsi⁄Info
 
vîsi⁄Info
);

299 
U_DEPRECATED
 c⁄° * 
U_EXPORT2


300 
uªs_gëLoˇÀ
(c⁄° 
UResour˚BundÀ
* 
ªsour˚BundÀ
,

301 
UEº‹Code
* 
°©us
);

316 
U_STABLE
 c⁄° * 
U_EXPORT2


317 
uªs_gëLoˇÀByTy≥
(c⁄° 
UResour˚BundÀ
* 
ªsour˚BundÀ
,

318 
ULocD©aLoˇÀTy≥
 
ty≥
,

319 
UEº‹Code
* 
°©us
);

338 
U_INTERNAL
 
U_EXPORT2


339 
uªs_›íFûlIn
(
UResour˚BundÀ
 *
r
,

340 c⁄° * 
∑ckageName
,

341 c⁄° * 
loˇÀID
,

342 
UEº‹Code
* 
°©us
);

361 
U_STABLE
 c⁄° 
UCh¨
* 
U_EXPORT2


362 
uªs_gëSåög
(c⁄° 
UResour˚BundÀ
* 
ªsour˚BundÀ
,

363 
öt32_t
* 
Àn
,

364 
UEº‹Code
* 
°©us
);

413 
U_STABLE
 c⁄° * 
U_EXPORT2


414 
uªs_gëUTF8Såög
(c⁄° 
UResour˚BundÀ
 *
ªsB
,

415 *
de°
, 
öt32_t
 *
Àngth
,

416 
UBoﬁ
 
f‹˚C›y
,

417 
UEº‹Code
 *
°©us
);

436 
U_STABLE
 c⁄° 
uöt8_t
* 
U_EXPORT2


437 
uªs_gëBö¨y
(c⁄° 
UResour˚BundÀ
* 
ªsour˚BundÀ
,

438 
öt32_t
* 
Àn
,

439 
UEº‹Code
* 
°©us
);

458 
U_STABLE
 c⁄° 
öt32_t
* 
U_EXPORT2


459 
uªs_gëI¡Ve˘‹
(c⁄° 
UResour˚BundÀ
* 
ªsour˚BundÀ
,

460 
öt32_t
* 
Àn
,

461 
UEº‹Code
* 
°©us
);

479 
U_STABLE
 
uöt32_t
 
U_EXPORT2


480 
uªs_gëUI¡
(c⁄° 
UResour˚BundÀ
* 
ªsour˚BundÀ
,

481 
UEº‹Code
 *
°©us
);

499 
U_STABLE
 
öt32_t
 
U_EXPORT2


500 
uªs_gëI¡
(c⁄° 
UResour˚BundÀ
* 
ªsour˚BundÀ
,

501 
UEº‹Code
 *
°©us
);

513 
U_STABLE
 
öt32_t
 
U_EXPORT2


514 
uªs_gëSize
(c⁄° 
UResour˚BundÀ
 *
ªsour˚BundÀ
);

524 
U_STABLE
 
UResTy≥
 
U_EXPORT2


525 
uªs_gëTy≥
(c⁄° 
UResour˚BundÀ
 *
ªsour˚BundÀ
);

535 
U_STABLE
 c⁄° * 
U_EXPORT2


536 
uªs_gëKey
(c⁄° 
UResour˚BundÀ
 *
ªsour˚BundÀ
);

548 
U_STABLE
 
U_EXPORT2


549 
uªs_ª£tIãøt‹
(
UResour˚BundÀ
 *
ªsour˚BundÀ
);

558 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


559 
uªs_hasNext
(c⁄° 
UResour˚BundÀ
 *
ªsour˚BundÀ
);

573 
U_STABLE
 
UResour˚BundÀ
* 
U_EXPORT2


574 
uªs_gëNextResour˚
(
UResour˚BundÀ
 *
ªsour˚BundÀ
,

575 
UResour˚BundÀ
 *
fûlIn
,

576 
UEº‹Code
 *
°©us
);

590 
U_STABLE
 c⁄° 
UCh¨
* 
U_EXPORT2


591 
uªs_gëNextSåög
(
UResour˚BundÀ
 *
ªsour˚BundÀ
,

592 
öt32_t
* 
Àn
,

593 c⁄° ** 
key
,

594 
UEº‹Code
 *
°©us
);

608 
U_STABLE
 
UResour˚BundÀ
* 
U_EXPORT2


609 
uªs_gëByIndex
(c⁄° 
UResour˚BundÀ
 *
ªsour˚BundÀ
,

610 
öt32_t
 
ödexR
,

611 
UResour˚BundÀ
 *
fûlIn
,

612 
UEº‹Code
 *
°©us
);

625 
U_STABLE
 c⁄° 
UCh¨
* 
U_EXPORT2


626 
uªs_gëSåögByIndex
(c⁄° 
UResour˚BundÀ
 *
ªsour˚BundÀ
,

627 
öt32_t
 
ödexS
,

628 
öt32_t
* 
Àn
,

629 
UEº‹Code
 *
°©us
);

679 
U_STABLE
 c⁄° * 
U_EXPORT2


680 
uªs_gëUTF8SåögByIndex
(c⁄° 
UResour˚BundÀ
 *
ªsB
,

681 
öt32_t
 
°rögIndex
,

682 *
de°
, 
öt32_t
 *
pLígth
,

683 
UBoﬁ
 
f‹˚C›y
,

684 
UEº‹Code
 *
°©us
);

698 
U_STABLE
 
UResour˚BundÀ
* 
U_EXPORT2


699 
uªs_gëByKey
(c⁄° 
UResour˚BundÀ
 *
ªsour˚BundÀ
,

700 c⁄° * 
key
,

701 
UResour˚BundÀ
 *
fûlIn
,

702 
UEº‹Code
 *
°©us
);

716 
U_STABLE
 c⁄° 
UCh¨
* 
U_EXPORT2


717 
uªs_gëSåögByKey
(c⁄° 
UResour˚BundÀ
 *
ªsB
,

718 c⁄° * 
key
,

719 
öt32_t
* 
Àn
,

720 
UEº‹Code
 *
°©us
);

772 
U_STABLE
 c⁄° * 
U_EXPORT2


773 
uªs_gëUTF8SåögByKey
(c⁄° 
UResour˚BundÀ
 *
ªsB
,

774 c⁄° *
key
,

775 *
de°
, 
öt32_t
 *
pLígth
,

776 
UBoﬁ
 
f‹˚C›y
,

777 
UEº‹Code
 *
°©us
);

779 #i‡
U_SHOW_CPLUSPLUS_API


780 
	~"unicode/uni°r.h
"

782 
U_NAMESPACE_BEGIN


794 
ölöe
 
UnicodeSåög


795 
	$uªs_gëUnicodeSåög
(c⁄° 
UResour˚BundÀ
 *
ªsB
,

796 
UEº‹Code
* 
°©us
)

798 
öt32_t
 
Àn
 = 0;

799 c⁄° 
UCh¨
 *
r
 = 
	`uªs_gëSåög
(
ªsB
, &
Àn
, 
°©us
);

800  
	`UnicodeSåög
(
TRUE
, 
r
, 
Àn
);

801 
	}
}

813 
ölöe
 
UnicodeSåög


814 
	$uªs_gëNextUnicodeSåög
(
UResour˚BundÀ
 *
ªsB
,

815 c⁄° ** 
key
,

816 
UEº‹Code
* 
°©us
)

818 
öt32_t
 
Àn
 = 0;

819 c⁄° 
UCh¨
* 
r
 = 
	`uªs_gëNextSåög
(
ªsB
, &
Àn
, 
key
, 
°©us
);

820  
	`UnicodeSåög
(
TRUE
, 
r
, 
Àn
);

821 
	}
}

832 
ölöe
 
UnicodeSåög


833 
	$uªs_gëUnicodeSåögByIndex
(c⁄° 
UResour˚BundÀ
 *
ªsB
,

834 
öt32_t
 
ödexS
,

835 
UEº‹Code
* 
°©us
)

837 
öt32_t
 
Àn
 = 0;

838 c⁄° 
UCh¨
* 
r
 = 
	`uªs_gëSåögByIndex
(
ªsB
, 
ödexS
, &
Àn
, 
°©us
);

839  
	`UnicodeSåög
(
TRUE
, 
r
, 
Àn
);

840 
	}
}

852 
ölöe
 
UnicodeSåög


853 
	$uªs_gëUnicodeSåögByKey
(c⁄° 
UResour˚BundÀ
 *
ªsB
,

854 c⁄° * 
key
,

855 
UEº‹Code
* 
°©us
)

857 
öt32_t
 
Àn
 = 0;

858 c⁄° 
UCh¨
* 
r
 = 
	`uªs_gëSåögByKey
(
ªsB
, 
key
, &
Àn
, 
°©us
);

859  
	`UnicodeSåög
(
TRUE
, 
r
, 
Àn
);

860 
	}
}

862 
	gU_NAMESPACE_END


874 
U_STABLE
 
UEnumî©i⁄
* 
U_EXPORT2


875 
uªs_›íAvaûabÀLoˇÀs
(c⁄° *
∑ckageName
, 
UEº‹Code
 *
°©us
);

	@unicode/uscript.h

16 #i‚de‡
USCRIPT_H


17 
	#USCRIPT_H


	)

18 
	~"unicode/uty≥s.h
"

46 
	eUS¸ùtCode
 {

47 
	mUSCRIPT_INVALID_CODE
 = -1,

48 
	mUSCRIPT_COMMON
 = 0,

49 
	mUSCRIPT_INHERITED
 = 1,

50 
	mUSCRIPT_ARABIC
 = 2,

51 
	mUSCRIPT_ARMENIAN
 = 3,

52 
	mUSCRIPT_BENGALI
 = 4,

53 
	mUSCRIPT_BOPOMOFO
 = 5,

54 
	mUSCRIPT_CHEROKEE
 = 6,

55 
	mUSCRIPT_COPTIC
 = 7,

56 
	mUSCRIPT_CYRILLIC
 = 8,

57 
	mUSCRIPT_DESERET
 = 9,

58 
	mUSCRIPT_DEVANAGARI
 = 10,

59 
	mUSCRIPT_ETHIOPIC
 = 11,

60 
	mUSCRIPT_GEORGIAN
 = 12,

61 
	mUSCRIPT_GOTHIC
 = 13,

62 
	mUSCRIPT_GREEK
 = 14,

63 
	mUSCRIPT_GUJARATI
 = 15,

64 
	mUSCRIPT_GURMUKHI
 = 16,

65 
	mUSCRIPT_HAN
 = 17,

66 
	mUSCRIPT_HANGUL
 = 18,

67 
	mUSCRIPT_HEBREW
 = 19,

68 
	mUSCRIPT_HIRAGANA
 = 20,

69 
	mUSCRIPT_KANNADA
 = 21,

70 
	mUSCRIPT_KATAKANA
 = 22,

71 
	mUSCRIPT_KHMER
 = 23,

72 
	mUSCRIPT_LAO
 = 24,

73 
	mUSCRIPT_LATIN
 = 25,

74 
	mUSCRIPT_MALAYALAM
 = 26,

75 
	mUSCRIPT_MONGOLIAN
 = 27,

76 
	mUSCRIPT_MYANMAR
 = 28,

77 
	mUSCRIPT_OGHAM
 = 29,

78 
	mUSCRIPT_OLD_ITALIC
 = 30,

79 
	mUSCRIPT_ORIYA
 = 31,

80 
	mUSCRIPT_RUNIC
 = 32,

81 
	mUSCRIPT_SINHALA
 = 33,

82 
	mUSCRIPT_SYRIAC
 = 34,

83 
	mUSCRIPT_TAMIL
 = 35,

84 
	mUSCRIPT_TELUGU
 = 36,

85 
	mUSCRIPT_THAANA
 = 37,

86 
	mUSCRIPT_THAI
 = 38,

87 
	mUSCRIPT_TIBETAN
 = 39,

89 
	mUSCRIPT_CANADIAN_ABORIGINAL
 = 40,

91 
	mUSCRIPT_UCAS
 = 
USCRIPT_CANADIAN_ABORIGINAL
,

92 
	mUSCRIPT_YI
 = 41,

93 
	mUSCRIPT_TAGALOG
 = 42,

94 
	mUSCRIPT_HANUNOO
 = 43,

95 
	mUSCRIPT_BUHID
 = 44,

96 
	mUSCRIPT_TAGBANWA
 = 45,

99 
	mUSCRIPT_BRAILLE
 = 46,

100 
	mUSCRIPT_CYPRIOT
 = 47,

101 
	mUSCRIPT_LIMBU
 = 48,

102 
	mUSCRIPT_LINEAR_B
 = 49,

103 
	mUSCRIPT_OSMANYA
 = 50,

104 
	mUSCRIPT_SHAVIAN
 = 51,

105 
	mUSCRIPT_TAI_LE
 = 52,

106 
	mUSCRIPT_UGARITIC
 = 53,

109 
	mUSCRIPT_KATAKANA_OR_HIRAGANA
 = 54,

112 
	mUSCRIPT_BUGINESE
 = 55,

113 
	mUSCRIPT_GLAGOLITIC
 = 56,

114 
	mUSCRIPT_KHAROSHTHI
 = 57,

115 
	mUSCRIPT_SYLOTI_NAGRI
 = 58,

116 
	mUSCRIPT_NEW_TAI_LUE
 = 59,

117 
	mUSCRIPT_TIFINAGH
 = 60,

118 
	mUSCRIPT_OLD_PERSIAN
 = 61,

121 
	mUSCRIPT_BALINESE
 = 62,

122 
	mUSCRIPT_BATAK
 = 63,

123 
	mUSCRIPT_BLISSYMBOLS
 = 64,

124 
	mUSCRIPT_BRAHMI
 = 65,

125 
	mUSCRIPT_CHAM
 = 66,

126 
	mUSCRIPT_CIRTH
 = 67,

127 
	mUSCRIPT_OLD_CHURCH_SLAVONIC_CYRILLIC
 = 68,

128 
	mUSCRIPT_DEMOTIC_EGYPTIAN
 = 69,

129 
	mUSCRIPT_HIERATIC_EGYPTIAN
 = 70,

130 
	mUSCRIPT_EGYPTIAN_HIEROGLYPHS
 = 71,

131 
	mUSCRIPT_KHUTSURI
 = 72,

132 
	mUSCRIPT_SIMPLIFIED_HAN
 = 73,

133 
	mUSCRIPT_TRADITIONAL_HAN
 = 74,

134 
	mUSCRIPT_PAHAWH_HMONG
 = 75,

135 
	mUSCRIPT_OLD_HUNGARIAN
 = 76,

136 
	mUSCRIPT_HARAPPAN_INDUS
 = 77,

137 
	mUSCRIPT_JAVANESE
 = 78,

138 
	mUSCRIPT_KAYAH_LI
 = 79,

139 
	mUSCRIPT_LATIN_FRAKTUR
 = 80,

140 
	mUSCRIPT_LATIN_GAELIC
 = 81,

141 
	mUSCRIPT_LEPCHA
 = 82,

142 
	mUSCRIPT_LINEAR_A
 = 83,

144 
	mUSCRIPT_MANDAIC
 = 84,

146 
	mUSCRIPT_MANDAEAN
 = 
USCRIPT_MANDAIC
,

147 
	mUSCRIPT_MAYAN_HIEROGLYPHS
 = 85,

149 
	mUSCRIPT_MEROITIC_HIEROGLYPHS
 = 86,

151 
	mUSCRIPT_MEROITIC
 = 
USCRIPT_MEROITIC_HIEROGLYPHS
,

152 
	mUSCRIPT_NKO
 = 87,

153 
	mUSCRIPT_ORKHON
 = 88,

154 
	mUSCRIPT_OLD_PERMIC
 = 89,

155 
	mUSCRIPT_PHAGS_PA
 = 90,

156 
	mUSCRIPT_PHOENICIAN
 = 91,

157 
	mUSCRIPT_PHONETIC_POLLARD
 = 92,

158 
	mUSCRIPT_RONGORONGO
 = 93,

159 
	mUSCRIPT_SARATI
 = 94,

160 
	mUSCRIPT_ESTRANGELO_SYRIAC
 = 95,

161 
	mUSCRIPT_WESTERN_SYRIAC
 = 96,

162 
	mUSCRIPT_EASTERN_SYRIAC
 = 97,

163 
	mUSCRIPT_TENGWAR
 = 98,

164 
	mUSCRIPT_VAI
 = 99,

165 
	mUSCRIPT_VISIBLE_SPEECH
 = 100,

166 
	mUSCRIPT_CUNEIFORM
 = 101,

167 
	mUSCRIPT_UNWRITTEN_LANGUAGES
 = 102,

168 
	mUSCRIPT_UNKNOWN
 = 103,

171 
	mUSCRIPT_CARIAN
 = 104,

172 
	mUSCRIPT_JAPANESE
 = 105,

173 
	mUSCRIPT_LANNA
 = 106,

174 
	mUSCRIPT_LYCIAN
 = 107,

175 
	mUSCRIPT_LYDIAN
 = 108,

176 
	mUSCRIPT_OL_CHIKI
 = 109,

177 
	mUSCRIPT_REJANG
 = 110,

178 
	mUSCRIPT_SAURASHTRA
 = 111,

179 
	mUSCRIPT_SIGN_WRITING
 = 112,

180 
	mUSCRIPT_SUNDANESE
 = 113,

181 
	mUSCRIPT_MOON
 = 114,

182 
	mUSCRIPT_MEITEI_MAYEK
 = 115,

185 
	mUSCRIPT_IMPERIAL_ARAMAIC
 = 116,

186 
	mUSCRIPT_AVESTAN
 = 117,

187 
	mUSCRIPT_CHAKMA
 = 118,

188 
	mUSCRIPT_KOREAN
 = 119,

189 
	mUSCRIPT_KAITHI
 = 120,

190 
	mUSCRIPT_MANICHAEAN
 = 121,

191 
	mUSCRIPT_INSCRIPTIONAL_PAHLAVI
 = 122,

192 
	mUSCRIPT_PSALTER_PAHLAVI
 = 123,

193 
	mUSCRIPT_BOOK_PAHLAVI
 = 124,

194 
	mUSCRIPT_INSCRIPTIONAL_PARTHIAN
 = 125,

195 
	mUSCRIPT_SAMARITAN
 = 126,

196 
	mUSCRIPT_TAI_VIET
 = 127,

197 
	mUSCRIPT_MATHEMATICAL_NOTATION
 = 128,

198 
	mUSCRIPT_SYMBOLS
 = 129,

201 
	mUSCRIPT_BAMUM
 = 130,

202 
	mUSCRIPT_LISU
 = 131,

203 
	mUSCRIPT_NAKHI_GEBA
 = 132,

204 
	mUSCRIPT_OLD_SOUTH_ARABIAN
 = 133,

207 
	mUSCRIPT_BASSA_VAH
 = 134,

208 
	mUSCRIPT_DUPLOYAN_SHORTAND
 = 135,

209 
	mUSCRIPT_ELBASAN
 = 136,

210 
	mUSCRIPT_GRANTHA
 = 137,

211 
	mUSCRIPT_KPELLE
 = 138,

212 
	mUSCRIPT_LOMA
 = 139,

213 
	mUSCRIPT_MENDE
 = 140,

214 
	mUSCRIPT_MEROITIC_CURSIVE
 = 141,

215 
	mUSCRIPT_OLD_NORTH_ARABIAN
 = 142,

216 
	mUSCRIPT_NABATAEAN
 = 143,

217 
	mUSCRIPT_PALMYRENE
 = 144,

218 
	mUSCRIPT_SINDHI
 = 145,

219 
	mUSCRIPT_WARANG_CITI
 = 146,

222 
	mUSCRIPT_CODE_LIMIT
 = 147

223 } 
	tUS¸ùtCode
;

243 
U_STABLE
 
öt32_t
 
U_EXPORT2


244 
us¸ùt_gëCode
(c⁄° * 
«meOrAbbrOrLoˇÀ
,
US¸ùtCode
* 
fûlIn
,
öt32_t
 
ˇ∑côy
,
UEº‹Code
 *
îr
);

254 
U_STABLE
 c⁄° * 
U_EXPORT2


255 
us¸ùt_gëName
(
US¸ùtCode
 
s¸ùtCode
);

265 
U_STABLE
 c⁄° * 
U_EXPORT2


266 
us¸ùt_gëSh‹tName
(
US¸ùtCode
 
s¸ùtCode
);

276 
U_STABLE
 
US¸ùtCode
 
U_EXPORT2


277 
us¸ùt_gëS¸ùt
(
UCh¨32
 
codïoöt
, 
UEº‹Code
 *
îr
);

294 
U_DRAFT
 
UBoﬁ
 
U_EXPORT2


295 
us¸ùt_hasS¸ùt
(
UCh¨32
 
c
, 
US¸ùtCode
 
sc
);

321 
U_DRAFT
 
öt32_t
 
U_EXPORT2


322 
us¸ùt_gëS¸ùtExãnsi⁄s
(
UCh¨32
 
c
,

323 
US¸ùtCode
 *
s¸ùts
, 
öt32_t
 
ˇ∑côy
,

324 
UEº‹Code
 *
pEº‹Code
);

	@unicode/uset.h

27 #i‚de‡
__USET_H__


28 
	#__USET_H__


	)

30 
	~"unicode/uty≥s.h
"

31 
	~"unicode/uch¨.h
"

32 
	~"unicode/loˇÕoöãr.h
"

34 #i‚de‡
UCNV_H


35 
	gUSë
;

41 
USë
 
	tUSë
;

54 
	mUSET_IGNORE_SPACE
 = 1,

82 
	mUSET_CASE_INSENSITIVE
 = 2,

92 
	mUSET_ADD_CASE_MAPPINGS
 = 4,

98 
	mUSET_SERIALIZED_STATIC_ARRAY_CAPACITY
=8

156 
	eUSëS∑nC⁄dôi⁄
 {

168 
	mUSET_SPAN_NOT_CONTAINED
 = 0,

183 
	mUSET_SPAN_CONTAINED
 = 1,

202 
	mUSET_SPAN_SIMPLE
 = 2,

207 
	mUSET_SPAN_CONDITION_COUNT


208 } 
	tUSëS∑nC⁄dôi⁄
;

215 
	sUSîülizedSë
 {

220 c⁄° 
uöt16_t
 *
	m¨øy
;

225 
öt32_t
 
	mbmpLígth
;

230 
öt32_t
 
	mÀngth
;

235 
uöt16_t
 
	m°©icAºay
[
USET_SERIALIZED_STATIC_ARRAY_CAPACITY
];

236 } 
	tUSîülizedSë
;

249 
U_STABLE
 
USë
* 
U_EXPORT2


250 
u£t_›íEm±y
();

262 
U_STABLE
 
USë
* 
U_EXPORT2


263 
u£t_›í
(
UCh¨32
 
°¨t
, UCh¨32 
íd
);

274 
U_STABLE
 
USë
* 
U_EXPORT2


275 
u£t_›íP©ã∫
(c⁄° 
UCh¨
* 
∑âîn
, 
öt32_t
 
∑âînLígth
,

276 
UEº‹Code
* 
ec
);

289 
U_STABLE
 
USë
* 
U_EXPORT2


290 
u£t_›íP©ã∫O±i⁄s
(c⁄° 
UCh¨
* 
∑âîn
, 
öt32_t
 
∑âînLígth
,

291 
uöt32_t
 
›ti⁄s
,

292 
UEº‹Code
* 
ec
);

300 
U_STABLE
 
U_EXPORT2


301 
u£t_˛o£
(
USë
* 
£t
);

303 #i‡
U_SHOW_CPLUSPLUS_API


305 
U_NAMESPACE_BEGIN


316 
U_DEFINE_LOCAL_OPEN_POINTER
(
LoˇlUSëPoöãr
, 
USë
, 
u£t_˛o£
);

318 
	gU_NAMESPACE_END


331 
U_STABLE
 
USë
 * 
U_EXPORT2


332 
u£t_˛⁄e
(c⁄° 
USë
 *
£t
);

343 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


344 
u£t_isFrozí
(c⁄° 
USë
 *
£t
);

360 
U_STABLE
 
U_EXPORT2


361 
u£t_‰ìze
(
USë
 *
£t
);

373 
U_STABLE
 
USë
 * 
U_EXPORT2


374 
u£t_˛⁄eAsThawed
(c⁄° 
USë
 *
£t
);

385 
U_STABLE
 
U_EXPORT2


386 
u£t_£t
(
USë
* 
£t
,

387 
UCh¨32
 
°¨t
, UCh¨32 
íd
);

410 
U_STABLE
 
öt32_t
 
U_EXPORT2


411 
u£t_≠∂yP©ã∫
(
USë
 *
£t
,

412 c⁄° 
UCh¨
 *
∑âîn
, 
öt32_t
 
∑âînLígth
,

413 
uöt32_t
 
›ti⁄s
,

414 
UEº‹Code
 *
°©us
);

438 
U_STABLE
 
U_EXPORT2


439 
u£t_≠∂yI¡Pr›îtyVÆue
(
USë
* 
£t
,

440 
UPr›îty
 
¥›
, 
öt32_t
 
vÆue
, 
UEº‹Code
* 
ec
);

477 
U_STABLE
 
U_EXPORT2


478 
u£t_≠∂yPr›îtyAlüs
(
USë
* 
£t
,

479 c⁄° 
UCh¨
 *
¥›
, 
öt32_t
 
¥›Lígth
,

480 c⁄° 
UCh¨
 *
vÆue
, 
öt32_t
 
vÆueLígth
,

481 
UEº‹Code
* 
ec
);

492 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


493 
u£t_ª£mbÀsP©ã∫
(c⁄° 
UCh¨
 *
∑âîn
, 
öt32_t
 
∑âînLígth
,

494 
öt32_t
 
pos
);

511 
U_STABLE
 
öt32_t
 
U_EXPORT2


512 
u£t_toP©ã∫
(c⁄° 
USë
* 
£t
,

513 
UCh¨
* 
ªsu…
, 
öt32_t
 
ªsu…C≠acôy
,

514 
UBoﬁ
 
esˇ≥U≈röèbÀ
,

515 
UEº‹Code
* 
ec
);

525 
U_STABLE
 
U_EXPORT2


526 
u£t_add
(
USë
* 
£t
, 
UCh¨32
 
c
);

540 
U_STABLE
 
U_EXPORT2


541 
u£t_addAŒ
(
USë
* 
£t
, c⁄° USë *
addôi⁄ÆSë
);

552 
U_STABLE
 
U_EXPORT2


553 
u£t_addR™ge
(
USë
* 
£t
, 
UCh¨32
 
°¨t
, UCh¨32 
íd
);

564 
U_STABLE
 
U_EXPORT2


565 
u£t_addSåög
(
USë
* 
£t
, c⁄° 
UCh¨
* 
°r
, 
öt32_t
 
°rLí
);

576 
U_STABLE
 
U_EXPORT2


577 
u£t_addAŒCodePoöts
(
USë
* 
£t
, c⁄° 
UCh¨
 *
°r
, 
öt32_t
 
°rLí
);

587 
U_STABLE
 
U_EXPORT2


588 
u£t_ªmove
(
USë
* 
£t
, 
UCh¨32
 
c
);

599 
U_STABLE
 
U_EXPORT2


600 
u£t_ªmoveR™ge
(
USë
* 
£t
, 
UCh¨32
 
°¨t
, UCh¨32 
íd
);

611 
U_STABLE
 
U_EXPORT2


612 
u£t_ªmoveSåög
(
USë
* 
£t
, c⁄° 
UCh¨
* 
°r
, 
öt32_t
 
°rLí
);

625 
U_STABLE
 
U_EXPORT2


626 
u£t_ªmoveAŒ
(
USë
* 
£t
, c⁄° USë* 
ªmoveSë
);

642 
U_STABLE
 
U_EXPORT2


643 
u£t_ªèö
(
USë
* 
£t
, 
UCh¨32
 
°¨t
, UCh¨32 
íd
);

657 
U_STABLE
 
U_EXPORT2


658 
u£t_ªèöAŒ
(
USë
* 
£t
, c⁄° USë* 
ªèö
);

668 
U_STABLE
 
U_EXPORT2


669 
u£t_com∑˘
(
USë
* 
£t
);

679 
U_STABLE
 
U_EXPORT2


680 
u£t_com∂emít
(
USë
* 
£t
);

693 
U_STABLE
 
U_EXPORT2


694 
u£t_com∂emítAŒ
(
USë
* 
£t
, c⁄° USë* 
com∂emít
);

703 
U_STABLE
 
U_EXPORT2


704 
u£t_˛ór
(
USë
* 
£t
);

732 
U_STABLE
 
U_EXPORT2


733 
u£t_˛o£Ovî
(
USë
* 
£t
, 
öt32_t
 
©åibuãs
);

741 
U_STABLE
 
U_EXPORT2


742 
u£t_ªmoveAŒSåögs
(
USë
* 
£t
);

751 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


752 
u£t_isEm±y
(c⁄° 
USë
* 
£t
);

762 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


763 
u£t_c⁄èös
(c⁄° 
USë
* 
£t
, 
UCh¨32
 
c
);

774 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


775 
u£t_c⁄èösR™ge
(c⁄° 
USë
* 
£t
, 
UCh¨32
 
°¨t
, UCh¨32 
íd
);

785 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


786 
u£t_c⁄èösSåög
(c⁄° 
USë
* 
£t
, c⁄° 
UCh¨
* 
°r
, 
öt32_t
 
°rLí
);

798 
U_STABLE
 
öt32_t
 
U_EXPORT2


799 
u£t_ödexOf
(c⁄° 
USë
* 
£t
, 
UCh¨32
 
c
);

811 
U_STABLE
 
UCh¨32
 
U_EXPORT2


812 
u£t_ch¨At
(c⁄° 
USë
* 
£t
, 
öt32_t
 
ch¨Index
);

822 
U_STABLE
 
öt32_t
 
U_EXPORT2


823 
u£t_size
(c⁄° 
USë
* 
£t
);

833 
U_STABLE
 
öt32_t
 
U_EXPORT2


834 
u£t_gëIãmCou¡
(c⁄° 
USë
* 
£t
);

854 
U_STABLE
 
öt32_t
 
U_EXPORT2


855 
u£t_gëIãm
(c⁄° 
USë
* 
£t
, 
öt32_t
 
ôemIndex
,

856 
UCh¨32
* 
°¨t
, UCh¨32* 
íd
,

857 
UCh¨
* 
°r
, 
öt32_t
 
°rC≠acôy
,

858 
UEº‹Code
* 
ec
);

868 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


869 
u£t_c⁄èösAŒ
(c⁄° 
USë
* 
£t1
, c⁄° USë* 
£t2
);

881 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


882 
u£t_c⁄èösAŒCodePoöts
(c⁄° 
USë
* 
£t
, c⁄° 
UCh¨
 *
°r
, 
öt32_t
 
°rLí
);

892 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


893 
u£t_c⁄èösN⁄e
(c⁄° 
USë
* 
£t1
, c⁄° USë* 
£t2
);

903 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


904 
u£t_c⁄èösSome
(c⁄° 
USë
* 
£t1
, c⁄° USë* 
£t2
);

925 
U_STABLE
 
öt32_t
 
U_EXPORT2


926 
u£t_•™
(c⁄° 
USë
 *
£t
, c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
);

946 
U_STABLE
 
öt32_t
 
U_EXPORT2


947 
u£t_•™Back
(c⁄° 
USë
 *
£t
, c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
);

968 
U_STABLE
 
öt32_t
 
U_EXPORT2


969 
u£t_•™UTF8
(c⁄° 
USë
 *
£t
, c⁄° *
s
, 
öt32_t
 
Àngth
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
);

989 
U_STABLE
 
öt32_t
 
U_EXPORT2


990 
u£t_•™BackUTF8
(c⁄° 
USë
 *
£t
, c⁄° *
s
, 
öt32_t
 
Àngth
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
);

1000 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


1001 
u£t_equÆs
(c⁄° 
USë
* 
£t1
, c⁄° USë* 
£t2
);

1056 
U_STABLE
 
öt32_t
 
U_EXPORT2


1057 
u£t_£rülize
(c⁄° 
USë
* 
£t
, 
uöt16_t
* 
de°
, 
öt32_t
 
de°C≠acôy
, 
UEº‹Code
* 
pEº‹Code
);

1067 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


1068 
u£t_gëSîülizedSë
(
USîülizedSë
* 
fûlSë
, c⁄° 
uöt16_t
* 
§c
, 
öt32_t
 
§cLígth
);

1077 
U_STABLE
 
U_EXPORT2


1078 
u£t_£tSîülizedToO√
(
USîülizedSë
* 
fûlSë
, 
UCh¨32
 
c
);

1088 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


1089 
u£t_£rülizedC⁄èös
(c⁄° 
USîülizedSë
* 
£t
, 
UCh¨32
 
c
);

1100 
U_STABLE
 
öt32_t
 
U_EXPORT2


1101 
u£t_gëSîülizedR™geCou¡
(c⁄° 
USîülizedSë
* 
£t
);

1116 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


1117 
u£t_gëSîülizedR™ge
(c⁄° 
USîülizedSë
* 
£t
, 
öt32_t
 
øngeIndex
,

1118 
UCh¨32
* 
pSèπ
, UCh¨32* 
pEnd
);

	@unicode/usetiter.h

7 #i‚de‡
USETITER_H


8 
	#USETITER_H


	)

10 
	~"unicode/uty≥s.h
"

11 
	~"unicode/uobje˘.h
"

12 
	~"unicode/uni°r.h
"

19 
U_NAMESPACE_BEGIN


21 
˛ass
 
	gUnicodeSë
;

22 
˛ass
 
	gUnicodeSåög
;

61 ˛as†
	cU_COMMON_API
 
	mUnicodeSëIãøt‹
 : 
public
 
UObje˘
 {

63 
¥Ÿe˘ed
:

71 íum { 
IS_STRING
 = -1 };

78 
UCh¨32
 
	gcodïoöt
;

89 
UCh¨32
 
	gcodïoötEnd
;

97 c⁄° 
UnicodeSåög
* 
	g°rög
;

99 
	gpublic
:

107 
UnicodeSëIãøt‹
(c⁄° 
UnicodeSë
& 
£t
);

115 
UnicodeSëIãøt‹
();

121 
	gvútuÆ
 ~
UnicodeSëIãøt‹
();

138 
ölöe
 
UBoﬁ
 
	$isSåög
() const;

145 
ölöe
 
UCh¨32
 
	$gëCodïoöt
() const;

153 
ölöe
 
UCh¨32
 
	$gëCodïoötEnd
() const;

166 c⁄° 
UnicodeSåög
& 
	`gëSåög
();

190 
UBoﬁ
 
	`√xt
();

211 
UBoﬁ
 
	`√xtR™ge
();

220 
	`ª£t
(c⁄° 
UnicodeSë
& 
£t
);

226 
	`ª£t
();

233 
UCœssID
 
U_EXPORT2
 
	`gëSèticCœssID
();

240 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const;

244 
¥Ÿe˘ed
:

252 c⁄° 
UnicodeSë
* 
£t
;

256 
öt32_t
 
ídR™ge
;

260 
öt32_t
 
ønge
;

264 
öt32_t
 
ídEÀmít
;

268 
öt32_t
 
√xtEÀmít
;

273 
öt32_t
 
√xtSåög
;

277 
öt32_t
 
°rögCou¡
;

284 
UnicodeSåög
 *
˝Såög
;

289 
	`UnicodeSëIãøt‹
(c⁄° 
UnicodeSëIãøt‹
&);

294 
UnicodeSëIãøt‹
& 
›î©‹
=(const UnicodeSetIterator&);

299 
vútuÆ
 
	`lﬂdR™ge
(
öt32_t
 
ønge
);

301 
	}
};

303 
ölöe
 
UBoﬁ
 
	gUnicodeSëIãøt‹
::
	$isSåög
() const {

304  
codïoöt
 =(
UCh¨32
)
IS_STRING
;

305 
	}
}

307 
ölöe
 
UCh¨32
 
	gUnicodeSëIãøt‹
::
	$gëCodïoöt
() const {

308  
codïoöt
;

309 
	}
}

311 
ölöe
 
UCh¨32
 
	gUnicodeSëIãøt‹
::
	$gëCodïoötEnd
() const {

312  
codïoötEnd
;

313 
	}
}

316 
	gU_NAMESPACE_END


	@unicode/ushape.h

17 #i‚de‡
__USHAPE_H__


18 
	#__USHAPE_H__


	)

20 
	~"unicode/uty≥s.h
"

100 
U_STABLE
 
öt32_t
 
U_EXPORT2


101 
u_sh≠eAøbic
(c⁄° 
UCh¨
 *
sour˚
, 
öt32_t
 
sour˚Lígth
,

102 
UCh¨
 *
de°
, 
öt32_t
 
de°Size
,

103 
uöt64_t
 
›ti⁄s
,

104 
UEº‹Code
 *
pEº‹Code
);

112 
	#U_SHAPE_LENGTH_GROW_SHRINK
 0

	)

120 
	#U_SHAPE_LAMALEF_RESIZE
 0

	)

127 
	#U_SHAPE_LENGTH_FIXED_SPACES_NEAR
 1

	)

136 
	#U_SHAPE_LAMALEF_NEAR
 1

	)

143 
	#U_SHAPE_LENGTH_FIXED_SPACES_AT_END
 2

	)

152 
	#U_SHAPE_LAMALEF_END
 2

	)

159 
	#U_SHAPE_LENGTH_FIXED_SPACES_AT_BEGINNING
 3

	)

168 
	#U_SHAPE_LAMALEF_BEGIN
 3

	)

184 
	#U_SHAPE_LAMALEF_AUTO
 0x10000

	)

187 
	#U_SHAPE_LENGTH_MASK
 0x10003

	)

194 
	#U_SHAPE_LAMALEF_MASK
 0x10003

	)

197 
	#U_SHAPE_TEXT_DIRECTION_LOGICAL
 0

	)

206 
	#U_SHAPE_TEXT_DIRECTION_VISUAL_RTL
 0

	)

214 
	#U_SHAPE_TEXT_DIRECTION_VISUAL_LTR
 4

	)

217 
	#U_SHAPE_TEXT_DIRECTION_MASK
 4

	)

221 
	#U_SHAPE_LETTERS_NOOP
 0

	)

224 
	#U_SHAPE_LETTERS_SHAPE
 8

	)

227 
	#U_SHAPE_LETTERS_UNSHAPE
 0x10

	)

236 
	#U_SHAPE_LETTERS_SHAPE_TASHKEEL_ISOLATED
 0x18

	)

240 
	#U_SHAPE_LETTERS_MASK
 0x18

	)

244 
	#U_SHAPE_DIGITS_NOOP
 0

	)

251 
	#U_SHAPE_DIGITS_EN2AN
 0x20

	)

258 
	#U_SHAPE_DIGITS_AN2EN
 0x40

	)

271 
	#U_SHAPE_DIGITS_ALEN2AN_INIT_LR
 0x60

	)

283 
	#U_SHAPE_DIGITS_ALEN2AN_INIT_AL
 0x80

	)

286 
	#U_SHAPE_DIGITS_RESERVED
 0xa0

	)

289 
	#U_SHAPE_DIGITS_MASK
 0xe0

	)

293 
	#U_SHAPE_DIGIT_TYPE_AN
 0

	)

296 
	#U_SHAPE_DIGIT_TYPE_AN_EXTENDED
 0x100

	)

299 
	#U_SHAPE_DIGIT_TYPE_RESERVED
 0x200

	)

302 
	#U_SHAPE_DIGIT_TYPE_MASK
 0x300

	)

311 
	#U_SHAPE_AGGREGATE_TASHKEEL
 0x4000

	)

313 
	#U_SHAPE_AGGREGATE_TASHKEEL_NOOP
 0

	)

315 
	#U_SHAPE_AGGREGATE_TASHKEEL_MASK
 0x4000

	)

323 
	#U_SHAPE_PRESERVE_PRESENTATION
 0x8000

	)

329 
	#U_SHAPE_PRESERVE_PRESENTATION_NOOP
 0

	)

331 
	#U_SHAPE_PRESERVE_PRESENTATION_MASK
 0x8000

	)

346 
	#U_SHAPE_SEEN_TWOCELL_NEAR
 0x200000

	)

352 
	#U_SHAPE_SEEN_MASK
 0x700000

	)

367 
	#U_SHAPE_YEHHAMZA_TWOCELL_NEAR
 0x1000000

	)

374 
	#U_SHAPE_YEHHAMZA_MASK
 0x3800000

	)

386 
	#U_SHAPE_TASHKEEL_BEGIN
 0x40000

	)

397 
	#U_SHAPE_TASHKEEL_END
 0x60000

	)

407 
	#U_SHAPE_TASHKEEL_RESIZE
 0x80000

	)

418 
	#U_SHAPE_TASHKEEL_REPLACE_BY_TATWEEL
 0xC0000

	)

424 
	#U_SHAPE_TASHKEEL_MASK
 0xE0000

	)

448 
	#U_SHAPE_SPACES_RELATIVE_TO_TEXT_BEGIN_END
 0x4000000

	)

454 
	#U_SHAPE_SPACES_RELATIVE_TO_TEXT_MASK
 0x4000000

	)

468 
	#SHAPE_TAIL_NEW_UNICODE
 0x8000000

	)

474 
	#SHAPE_TAIL_TYPE_MASK
 0x8000000

	)

484 
	#U_SHAPE_X_LAMALEF_SUB_ALTERNATE
 (0x1ULL << 32)

	)

	@unicode/usprep.h

17 #i‚de‡
__USPREP_H__


18 
	#__USPREP_H__


	)

25 
	~"unicode/uty≥s.h
"

26 
	~"unicode/loˇÕoöãr.h
"

60 #i‡!
UCONFIG_NO_IDNA


62 
	~"unicode/∑r£îr.h
"

68 
USåögPªpProfûe
 
	tUSåögPªpProfûe
;

77 
	#USPREP_DEFAULT
 0x0000

	)

85 
	#USPREP_ALLOW_UNASSIGNED
 0x0001

	)

93 
	eUSåögPªpProfûeTy≥
 {

98 
	mUSPREP_RFC3491_NAMEPREP
,

103 
	mUSPREP_RFC3530_NFS4_CS_PREP
,

108 
	mUSPREP_RFC3530_NFS4_CS_PREP_CI
,

113 
	mUSPREP_RFC3530_NFS4_CIS_PREP
,

118 
	mUSPREP_RFC3530_NFS4_MIXED_PREP_PREFIX
,

123 
	mUSPREP_RFC3530_NFS4_MIXED_PREP_SUFFIX
,

128 
	mUSPREP_RFC3722_ISCSI
,

133 
	mUSPREP_RFC3920_NODEPREP
,

138 
	mUSPREP_RFC3920_RESOURCEPREP
,

143 
	mUSPREP_RFC4011_MIB
,

148 
	mUSPREP_RFC4013_SASLPREP
,

153 
	mUSPREP_RFC4505_TRACE
,

158 
	mUSPREP_RFC4518_LDAP
,

164 
	mUSPREP_RFC4518_LDAP_CI


165 } 
	tUSåögPªpProfûeTy≥
;

182 
U_STABLE
 
USåögPªpProfûe
* 
U_EXPORT2


183 
u•ªp_›í
(c⁄° * 
∑th
,

184 c⁄° * 
fûeName
,

185 
UEº‹Code
* 
°©us
);

198 
U_STABLE
 
USåögPªpProfûe
* 
U_EXPORT2


199 
u•ªp_›íByTy≥
(
USåögPªpProfûeTy≥
 
ty≥
,

200 
UEº‹Code
* 
°©us
);

207 
U_STABLE
 
U_EXPORT2


208 
u•ªp_˛o£
(
USåögPªpProfûe
* 
¥ofûe
);

210 #i‡
U_SHOW_CPLUSPLUS_API


212 
U_NAMESPACE_BEGIN


223 
U_DEFINE_LOCAL_OPEN_POINTER
(
LoˇlUSåögPªpProfûePoöãr
, 
USåögPªpProfûe
, 
u•ªp_˛o£
);

225 
	gU_NAMESPACE_END


258 
U_STABLE
 
öt32_t
 
U_EXPORT2


259 
u•ªp_¥ï¨e
–c⁄° 
USåögPªpProfûe
* 
¥ï
,

260 c⁄° 
UCh¨
* 
§c
, 
öt32_t
 
§cLígth
,

261 
UCh¨
* 
de°
, 
öt32_t
 
de°C≠acôy
,

262 
öt32_t
 
›ti⁄s
,

263 
UP¨£Eº‹
* 
∑r£Eº‹
,

264 
UEº‹Code
* 
°©us
 );

	@unicode/ustring.h

16 #i‚de‡
USTRING_H


17 
	#USTRING_H


	)

19 
	~"unicode/uty≥s.h
"

20 
	~"unicode/putû.h
"

21 
	~"unicode/uôî.h
"

24 #i‚de‡
UBRK_TYPEDEF_UBREAK_ITERATOR


25 
	#UBRK_TYPEDEF_UBREAK_ITERATOR


	)

26 
UBªakIãøt‹
 
	tUBªakIãøt‹
;

85 
U_STABLE
 
öt32_t
 
U_EXPORT2


86 
u_°æí
(c⁄° 
UCh¨
 *
s
);

102 
U_STABLE
 
öt32_t
 
U_EXPORT2


103 
u_cou¡Ch¨32
(c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
);

123 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


124 
u_°rHasM‹eCh¨32Th™
(c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
, i¡32_à
numbî
);

136 
U_STABLE
 
UCh¨
* 
U_EXPORT2


137 
u_°rˇt
(
UCh¨
 *
d°
,

138 c⁄° 
UCh¨
 *
§c
);

154 
U_STABLE
 
UCh¨
* 
U_EXPORT2


155 
u_°∫ˇt
(
UCh¨
 *
d°
,

156 c⁄° 
UCh¨
 *
§c
,

157 
öt32_t
 
n
);

179 
U_STABLE
 
UCh¨
 * 
U_EXPORT2


180 
u_°r°r
(c⁄° 
UCh¨
 *
s
, c⁄° UCh¨ *
sub°rög
);

203 
U_STABLE
 
UCh¨
 * 
U_EXPORT2


204 
u_°rFödFú°
(c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
, c⁄° UCh¨ *
sub°rög
, i¡32_à
subLígth
);

223 
U_STABLE
 
UCh¨
 * 
U_EXPORT2


224 
u_°rchr
(c⁄° 
UCh¨
 *
s
, UCh¨ 
c
);

243 
U_STABLE
 
UCh¨
 * 
U_EXPORT2


244 
u_°rchr32
(c⁄° 
UCh¨
 *
s
, 
UCh¨32
 
c
);

266 
U_STABLE
 
UCh¨
 * 
U_EXPORT2


267 
u_°º°r
(c⁄° 
UCh¨
 *
s
, c⁄° UCh¨ *
sub°rög
);

290 
U_STABLE
 
UCh¨
 * 
U_EXPORT2


291 
u_°rFödLa°
(c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
, c⁄° UCh¨ *
sub°rög
, i¡32_à
subLígth
);

310 
U_STABLE
 
UCh¨
 * 
U_EXPORT2


311 
u_°ºchr
(c⁄° 
UCh¨
 *
s
, UCh¨ 
c
);

330 
U_STABLE
 
UCh¨
 * 
U_EXPORT2


331 
u_°ºchr32
(c⁄° 
UCh¨
 *
s
, 
UCh¨32
 
c
);

345 
U_STABLE
 
UCh¨
 * 
U_EXPORT2


346 
u_°Ωbrk
(c⁄° 
UCh¨
 *
°rög
, c⁄° UCh¨ *
m©chSë
);

361 
U_STABLE
 
öt32_t
 
U_EXPORT2


362 
u_°rc•n
(c⁄° 
UCh¨
 *
°rög
, c⁄° UCh¨ *
m©chSë
);

377 
U_STABLE
 
öt32_t
 
U_EXPORT2


378 
u_°r•n
(c⁄° 
UCh¨
 *
°rög
, c⁄° UCh¨ *
m©chSë
);

405 
U_STABLE
 
UCh¨
 * 
U_EXPORT2


406 
u_°πok_r
(
UCh¨
 *
§c
,

407 c⁄° 
UCh¨
 *
dñim
,

408 
UCh¨
 **
ßveSèã
);

420 
U_STABLE
 
öt32_t
 
U_EXPORT2


421 
u_°rcmp
(c⁄° 
UCh¨
 *
s1
,

422 c⁄° 
UCh¨
 *
s2
);

435 
U_STABLE
 
öt32_t
 
U_EXPORT2


436 
u_°rcmpCodePoötOrdî
(c⁄° 
UCh¨
 *
s1
, c⁄° UCh¨ *
s2
);

465 
U_STABLE
 
öt32_t
 
U_EXPORT2


466 
u_°rCom∑ª
(c⁄° 
UCh¨
 *
s1
, 
öt32_t
 
Àngth1
,

467 c⁄° 
UCh¨
 *
s2
, 
öt32_t
 
Àngth2
,

468 
UBoﬁ
 
codePoötOrdî
);

490 
U_STABLE
 
öt32_t
 
U_EXPORT2


491 
u_°rCom∑ªIãr
(
UCh¨Iãøt‹
 *
ôî1
, UCh¨Iãøt‹ *
ôî2
, 
UBoﬁ
 
codePoötOrdî
);

493 #i‚de‡
U_COMPARE_CODE_POINT_ORDER


500 
	#U_COMPARE_CODE_POINT_ORDER
 0x8000

	)

543 
U_STABLE
 
öt32_t
 
U_EXPORT2


544 
u_°rCa£Com∑ª
(c⁄° 
UCh¨
 *
s1
, 
öt32_t
 
Àngth1
,

545 c⁄° 
UCh¨
 *
s2
, 
öt32_t
 
Àngth2
,

546 
uöt32_t
 
›ti⁄s
,

547 
UEº‹Code
 *
pEº‹Code
);

561 
U_STABLE
 
öt32_t
 
U_EXPORT2


562 
u_°∫cmp
(c⁄° 
UCh¨
 *
ucs1
,

563 c⁄° 
UCh¨
 *
ucs2
,

564 
öt32_t
 
n
);

579 
U_STABLE
 
öt32_t
 
U_EXPORT2


580 
u_°∫cmpCodePoötOrdî
(c⁄° 
UCh¨
 *
s1
, c⁄° UCh¨ *
s2
, 
öt32_t
 
n
);

601 
U_STABLE
 
öt32_t
 
U_EXPORT2


602 
u_°rˇ£cmp
(c⁄° 
UCh¨
 *
s1
, c⁄° UCh¨ *
s2
, 
uöt32_t
 
›ti⁄s
);

625 
U_STABLE
 
öt32_t
 
U_EXPORT2


626 
u_°∫ˇ£cmp
(c⁄° 
UCh¨
 *
s1
, c⁄° UCh¨ *
s2
, 
öt32_t
 
n
, 
uöt32_t
 
›ti⁄s
);

649 
U_STABLE
 
öt32_t
 
U_EXPORT2


650 
u_memˇ£cmp
(c⁄° 
UCh¨
 *
s1
, c⁄° UCh¨ *
s2
, 
öt32_t
 
Àngth
, 
uöt32_t
 
›ti⁄s
);

660 
U_STABLE
 
UCh¨
* 
U_EXPORT2


661 
u_°r˝y
(
UCh¨
 *
d°
,

662 c⁄° 
UCh¨
 *
§c
);

675 
U_STABLE
 
UCh¨
* 
U_EXPORT2


676 
u_°∫˝y
(
UCh¨
 *
d°
,

677 c⁄° 
UCh¨
 *
§c
,

678 
öt32_t
 
n
);

680 #i‡!
UCONFIG_NO_CONVERSION


692 
U_STABLE
 
UCh¨
* 
U_EXPORT2
 
u_ua°r˝y
(UCh¨ *
d°
,

693 c⁄° *
§c
 );

707 
U_STABLE
 
UCh¨
* 
U_EXPORT2
 
u_ua°∫˝y
(UCh¨ *
d°
,

708 c⁄° *
§c
,

709 
öt32_t
 
n
);

721 
U_STABLE
 * 
U_EXPORT2
 
u_au°r˝y
(*
d°
,

722 c⁄° 
UCh¨
 *
§c
 );

736 
U_STABLE
 * 
U_EXPORT2
 
u_au°∫˝y
(*
d°
,

737 c⁄° 
UCh¨
 *
§c
,

738 
öt32_t
 
n
 );

750 
U_STABLE
 
UCh¨
* 
U_EXPORT2


751 
u_mem˝y
(
UCh¨
 *
de°
, c⁄° UCh¨ *
§c
, 
öt32_t
 
cou¡
);

761 
U_STABLE
 
UCh¨
* 
U_EXPORT2


762 
u_memmove
(
UCh¨
 *
de°
, c⁄° UCh¨ *
§c
, 
öt32_t
 
cou¡
);

773 
U_STABLE
 
UCh¨
* 
U_EXPORT2


774 
u_mem£t
(
UCh¨
 *
de°
, UCh¨ 
c
, 
öt32_t
 
cou¡
);

787 
U_STABLE
 
öt32_t
 
U_EXPORT2


788 
u_memcmp
(c⁄° 
UCh¨
 *
buf1
, c⁄° UCh¨ *
buf2
, 
öt32_t
 
cou¡
);

803 
U_STABLE
 
öt32_t
 
U_EXPORT2


804 
u_memcmpCodePoötOrdî
(c⁄° 
UCh¨
 *
s1
, c⁄° UCh¨ *
s2
, 
öt32_t
 
cou¡
);

823 
U_STABLE
 
UCh¨
* 
U_EXPORT2


824 
u_memchr
(c⁄° 
UCh¨
 *
s
, UCh¨ 
c
, 
öt32_t
 
cou¡
);

843 
U_STABLE
 
UCh¨
* 
U_EXPORT2


844 
u_memchr32
(c⁄° 
UCh¨
 *
s
, 
UCh¨32
 
c
, 
öt32_t
 
cou¡
);

863 
U_STABLE
 
UCh¨
* 
U_EXPORT2


864 
u_memrchr
(c⁄° 
UCh¨
 *
s
, UCh¨ 
c
, 
öt32_t
 
cou¡
);

883 
U_STABLE
 
UCh¨
* 
U_EXPORT2


884 
u_memrchr32
(c⁄° 
UCh¨
 *
s
, 
UCh¨32
 
c
, 
öt32_t
 
cou¡
);

936 #i‡
deföed
(
U_DECLARE_UTF16
)

937 
	#U_STRING_DECL
(
v¨
, 
cs
, 
Àngth
Ëc⁄° 
UCh¨
 v¨[÷ígth)+1]=
	`U_DECLARE_UTF16
(cs)

	)

939 
	#U_STRING_INIT
(
v¨
, 
cs
, 
Àngth
)

	)

940 #ñi‡
U_SIZEOF_WCHAR_T
==
U_SIZEOF_UCHAR
 && (
U_CHARSET_FAMILY
==
U_ASCII_FAMILY
 || (U_SIZEOF_UCHAR =2 && 
deföed
(
U_WCHAR_IS_UTF16
)))

941 
	#U_STRING_DECL
(
v¨
, 
cs
, 
Àngth
Ëc⁄° 
UCh¨
 v¨[÷ígth)+1]=
L
 ## 
	)
cs

943 
	#U_STRING_INIT
(
v¨
, 
cs
, 
Àngth
)

	)

944 #ñi‡
U_SIZEOF_UCHAR
==1 && 
U_CHARSET_FAMILY
==
U_ASCII_FAMILY


945 
	#U_STRING_DECL
(
v¨
, 
cs
, 
Àngth
Ëc⁄° 
UCh¨
 v¨[÷ígth)+1]=
	)
cs

947 
	#U_STRING_INIT
(
v¨
, 
cs
, 
Àngth
)

	)

949 
	#U_STRING_DECL
(
v¨
, 
cs
, 
Àngth
Ë
UCh¨
 v¨[÷ígth)+1]

	)

951 
	#U_STRING_INIT
(
v¨
, 
cs
, 
Àngth
Ë
	`u_ch¨sToUCh¨s
(cs, v¨,Üígth+1)

	)

1001 
U_STABLE
 
öt32_t
 
U_EXPORT2


1002 
u_u√sˇ≥
(c⁄° *
§c
,

1003 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
);

1005 
U_CDECL_BEGIN


1018 
	$UCh¨
 (
	tU_CALLCONV
 *
	tUNESCAPE_CHAR_AT
)(
	töt32_t
 
	toff£t
, *
	tc⁄ãxt
);

1019 
U_CDECL_END


1049 
U_STABLE
 
UCh¨32
 
U_EXPORT2


1050 
	`u_u√sˇ≥At
(
UNESCAPE_CHAR_AT
 
ch¨At
,

1051 
öt32_t
 *
off£t
,

1052 
öt32_t
 
Àngth
,

1053 *
c⁄ãxt
);

1075 
U_STABLE
 
öt32_t
 
U_EXPORT2


1076 
	`u_°rToUµî
(
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

1077 c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

1078 c⁄° *
loˇÀ
,

1079 
UEº‹Code
 *
pEº‹Code
);

1101 
U_STABLE
 
öt32_t
 
U_EXPORT2


1102 
	`u_°rToLowî
(
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

1103 c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

1104 c⁄° *
loˇÀ
,

1105 
UEº‹Code
 *
pEº‹Code
);

1107 #i‡!
UCONFIG_NO_BREAK_ITERATION


1147 
U_STABLE
 
öt32_t
 
U_EXPORT2


1148 
	`u_°rToTôÀ
(
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

1149 c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

1150 
UBªakIãøt‹
 *
tôÀIãr
,

1151 c⁄° *
loˇÀ
,

1152 
UEº‹Code
 *
pEº‹Code
);

1178 
U_STABLE
 
öt32_t
 
U_EXPORT2


1179 
	`u_°rFﬁdCa£
(
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

1180 c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

1181 
uöt32_t
 
›ti⁄s
,

1182 
UEº‹Code
 *
pEº‹Code
);

1184 #i‡
	`deföed
(
U_WCHAR_IS_UTF16
Ë|| deföed(
U_WCHAR_IS_UTF32
Ë|| !
UCONFIG_NO_CONVERSION


1207 
U_STABLE
 
wch¨_t
* 
U_EXPORT2


1208 
	`u_°rToWCS
(
wch¨_t
 *
de°
,

1209 
öt32_t
 
de°C≠acôy
,

1210 
öt32_t
 *
pDe°Lígth
,

1211 c⁄° 
UCh¨
 *
§c
,

1212 
öt32_t
 
§cLígth
,

1213 
UEº‹Code
 *
pEº‹Code
);

1236 
U_STABLE
 
UCh¨
* 
U_EXPORT2


1237 
	`u_°rFromWCS
(
UCh¨
 *
de°
,

1238 
öt32_t
 
de°C≠acôy
,

1239 
öt32_t
 *
pDe°Lígth
,

1240 c⁄° 
wch¨_t
 *
§c
,

1241 
öt32_t
 
§cLígth
,

1242 
UEº‹Code
 *
pEº‹Code
);

1267 
U_STABLE
 * 
U_EXPORT2


1268 
	`u_°rToUTF8
(*
de°
,

1269 
öt32_t
 
de°C≠acôy
,

1270 
öt32_t
 *
pDe°Lígth
,

1271 c⁄° 
UCh¨
 *
§c
,

1272 
öt32_t
 
§cLígth
,

1273 
UEº‹Code
 *
pEº‹Code
);

1297 
U_STABLE
 
UCh¨
* 
U_EXPORT2


1298 
	`u_°rFromUTF8
(
UCh¨
 *
de°
,

1299 
öt32_t
 
de°C≠acôy
,

1300 
öt32_t
 *
pDe°Lígth
,

1301 c⁄° *
§c
,

1302 
öt32_t
 
§cLígth
,

1303 
UEº‹Code
 *
pEº‹Code
);

1341 
U_STABLE
 * 
U_EXPORT2


1342 
	`u_°rToUTF8WôhSub
(*
de°
,

1343 
öt32_t
 
de°C≠acôy
,

1344 
öt32_t
 *
pDe°Lígth
,

1345 c⁄° 
UCh¨
 *
§c
,

1346 
öt32_t
 
§cLígth
,

1347 
UCh¨32
 
subch¨
, 
öt32_t
 *
pNumSub°ôuti⁄s
,

1348 
UEº‹Code
 *
pEº‹Code
);

1387 
U_STABLE
 
UCh¨
* 
U_EXPORT2


1388 
	`u_°rFromUTF8WôhSub
(
UCh¨
 *
de°
,

1389 
öt32_t
 
de°C≠acôy
,

1390 
öt32_t
 *
pDe°Lígth
,

1391 c⁄° *
§c
,

1392 
öt32_t
 
§cLígth
,

1393 
UCh¨32
 
subch¨
, 
öt32_t
 *
pNumSub°ôuti⁄s
,

1394 
UEº‹Code
 *
pEº‹Code
);

1447 
U_STABLE
 
UCh¨
 * 
U_EXPORT2


1448 
	`u_°rFromUTF8Líõ¡
(
UCh¨
 *
de°
,

1449 
öt32_t
 
de°C≠acôy
,

1450 
öt32_t
 *
pDe°Lígth
,

1451 c⁄° *
§c
,

1452 
öt32_t
 
§cLígth
,

1453 
UEº‹Code
 *
pEº‹Code
);

1477 
U_STABLE
 
UCh¨32
* 
U_EXPORT2


1478 
	`u_°rToUTF32
(
UCh¨32
 *
de°
,

1479 
öt32_t
 
de°C≠acôy
,

1480 
öt32_t
 *
pDe°Lígth
,

1481 c⁄° 
UCh¨
 *
§c
,

1482 
öt32_t
 
§cLígth
,

1483 
UEº‹Code
 *
pEº‹Code
);

1507 
U_STABLE
 
UCh¨
* 
U_EXPORT2


1508 
	`u_°rFromUTF32
(
UCh¨
 *
de°
,

1509 
öt32_t
 
de°C≠acôy
,

1510 
öt32_t
 *
pDe°Lígth
,

1511 c⁄° 
UCh¨32
 *
§c
,

1512 
öt32_t
 
§cLígth
,

1513 
UEº‹Code
 *
pEº‹Code
);

1551 
U_STABLE
 
UCh¨32
* 
U_EXPORT2


1552 
	`u_°rToUTF32WôhSub
(
UCh¨32
 *
de°
,

1553 
öt32_t
 
de°C≠acôy
,

1554 
öt32_t
 *
pDe°Lígth
,

1555 c⁄° 
UCh¨
 *
§c
,

1556 
öt32_t
 
§cLígth
,

1557 
UCh¨32
 
subch¨
, 
öt32_t
 *
pNumSub°ôuti⁄s
,

1558 
UEº‹Code
 *
pEº‹Code
);

1596 
U_STABLE
 
UCh¨
* 
U_EXPORT2


1597 
	`u_°rFromUTF32WôhSub
(
UCh¨
 *
de°
,

1598 
öt32_t
 
de°C≠acôy
,

1599 
öt32_t
 *
pDe°Lígth
,

1600 c⁄° 
UCh¨32
 *
§c
,

1601 
öt32_t
 
§cLígth
,

1602 
UCh¨32
 
subch¨
, 
öt32_t
 *
pNumSub°ôuti⁄s
,

1603 
UEº‹Code
 *
pEº‹Code
);

1637 
U_STABLE
 * 
U_EXPORT2


1638 
	`u_°rToJavaModifõdUTF8
(

1639 *
de°
,

1640 
öt32_t
 
de°C≠acôy
,

1641 
öt32_t
 *
pDe°Lígth
,

1642 c⁄° 
UCh¨
 *
§c
,

1643 
öt32_t
 
§cLígth
,

1644 
UEº‹Code
 *
pEº‹Code
);

1686 
U_STABLE
 
UCh¨
* 
U_EXPORT2


1687 
	`u_°rFromJavaModifõdUTF8WôhSub
(

1688 
UCh¨
 *
de°
,

1689 
öt32_t
 
de°C≠acôy
,

1690 
öt32_t
 *
pDe°Lígth
,

1691 c⁄° *
§c
,

1692 
öt32_t
 
§cLígth
,

1693 
UCh¨32
 
subch¨
, 
öt32_t
 *
pNumSub°ôuti⁄s
,

1694 
UEº‹Code
 *
pEº‹Code
);

	@unicode/usystem.h

21 #i‚de‡
USYSTEM_H


22 
	#USYSTEM_H


	)

24 #ifde‡
U_HIDE_SYSTEM_API


26 #i‡
U_DISABLE_RENAMING


27 
	#u_˛ónup
 
u_˛ónup_SYSTEM_API_DO_NOT_USE


	)

28 
	#u_£tAtomicIncDecFun˘i⁄s
 
u_£tAtomicIncDecFun˘i⁄s_SYSTEM_API_DO_NOT_USE


	)

29 
	#u_£tMem‹yFun˘i⁄s
 
u_£tMem‹yFun˘i⁄s_SYSTEM_API_DO_NOT_USE


	)

30 
	#u_£tMuãxFun˘i⁄s
 
u_£tMuãxFun˘i⁄s_SYSTEM_API_DO_NOT_USE


	)

31 
	#u˙v_£tDeÁu…Name
 
u˙v_£tDeÁu…Name_SYSTEM_API_DO_NOT_USE


	)

32 
	#uloc_gëDeÁu…
 
uloc_gëDeÁu…_SYSTEM_API_DO_NOT_USE


	)

33 
	#uloc_£tDeÁu…
 
uloc_£tDeÁu…_SYSTEM_API_DO_NOT_USE


	)

35 
	#u_˛ónup_4_6
 
u_˛ónup_SYSTEM_API_DO_NOT_USE


	)

36 
	#u_£tAtomicIncDecFun˘i⁄s_4_6
 
u_£tAtomicIncDecFun˘i⁄s_SYSTEM_API_DO_NOT_USE


	)

37 
	#u_£tMem‹yFun˘i⁄s_4_6
 
u_£tMem‹yFun˘i⁄s_SYSTEM_API_DO_NOT_USE


	)

38 
	#u_£tMuãxFun˘i⁄s_4_6
 
u_£tMuãxFun˘i⁄s_SYSTEM_API_DO_NOT_USE


	)

39 
	#u˙v_£tDeÁu…Name_4_6
 
u˙v_£tDeÁu…Name_SYSTEM_API_DO_NOT_USE


	)

40 
	#uloc_gëDeÁu…_4_6
 
uloc_gëDeÁu…_SYSTEM_API_DO_NOT_USE


	)

41 
	#uloc_£tDeÁu…_4_6
 
uloc_£tDeÁu…_SYSTEM_API_DO_NOT_USE


	)

	@unicode/utext.h

17 #i‚de‡
__UTEXT_H__


18 
	#__UTEXT_H__


	)

138 
	~"unicode/uty≥s.h
"

139 
	~"unicode/uch¨.h
"

140 #i‡
U_SHOW_CPLUSPLUS_API


141 
	~"unicode/loˇÕoöãr.h
"

142 
	~"unicode/ªp.h
"

143 
	~"unicode/uni°r.h
"

144 
	~"unicode/ch¨ôî.h
"

148 
U_CDECL_BEGIN


150 
	gUText
;

151 
UText
 
	tUText
;

181 
U_STABLE
 
UText
 * 
U_EXPORT2


182 
uãxt_˛o£
(
UText
 *
ut
);

184 #i‡
U_SHOW_CPLUSPLUS_API


186 
U_NAMESPACE_BEGIN


197 
U_DEFINE_LOCAL_OPEN_POINTER
(
LoˇlUTextPoöãr
, 
UText
, 
uãxt_˛o£
);

199 
	gU_NAMESPACE_END


224 
U_STABLE
 
UText
 * 
U_EXPORT2


225 
uãxt_›íUTF8
(
UText
 *
ut
, c⁄° *
s
, 
öt64_t
 
Àngth
, 
UEº‹Code
 *
°©us
);

242 
U_STABLE
 
UText
 * 
U_EXPORT2


243 
uãxt_›íUCh¨s
(
UText
 *
ut
, c⁄° 
UCh¨
 *
s
, 
öt64_t
 
Àngth
, 
UEº‹Code
 *
°©us
);

246 #i‡
U_SHOW_CPLUSPLUS_API


259 
U_STABLE
 
UText
 * 
U_EXPORT2


260 
uãxt_›íUnicodeSåög
(
UText
 *
ut
, 
U_NAMESPACE_QUALIFIER
 
UnicodeSåög
 *
s
, 
UEº‹Code
 *
°©us
);

275 
U_STABLE
 
UText
 * 
U_EXPORT2


276 
uãxt_›íC⁄°UnicodeSåög
(
UText
 *
ut
, c⁄° 
U_NAMESPACE_QUALIFIER
 
UnicodeSåög
 *
s
, 
UEº‹Code
 *
°©us
);

291 
U_STABLE
 
UText
 * 
U_EXPORT2


292 
uãxt_›íRïœ˚abÀ
(
UText
 *
ut
, 
U_NAMESPACE_QUALIFIER
 
Rïœ˚abÀ
 *
ªp
, 
UEº‹Code
 *
°©us
);

306 
U_STABLE
 
UText
 * 
U_EXPORT2


307 
uãxt_›íCh¨a˘îIãøt‹
(
UText
 *
ut
, 
U_NAMESPACE_QUALIFIER
 
Ch¨a˘îIãøt‹
 *
ic
, 
UEº‹Code
 *
°©us
);

369 
U_STABLE
 
UText
 * 
U_EXPORT2


370 
uãxt_˛⁄e
(
UText
 *
de°
, c⁄° UTexà*
§c
, 
UBoﬁ
 
dìp
, UBoﬁ 
ªadO∆y
, 
UEº‹Code
 *
°©us
);

384 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


385 
uãxt_equÆs
(c⁄° 
UText
 *
a
, c⁄° UTexà*
b
);

405 
U_STABLE
 
öt64_t
 
U_EXPORT2


406 
uãxt_«tiveLígth
(
UText
 *
ut
);

421 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


422 
uãxt_isLígthEx≥nsive
(c⁄° 
UText
 *
ut
);

449 
U_STABLE
 
UCh¨32
 
U_EXPORT2


450 
uãxt_ch¨32At
(
UText
 *
ut
, 
öt64_t
 
«tiveIndex
);

463 
U_STABLE
 
UCh¨32
 
U_EXPORT2


464 
uãxt_cuºít32
(
UText
 *
ut
);

485 
U_STABLE
 
UCh¨32
 
U_EXPORT2


486 
uãxt_√xt32
(
UText
 *
ut
);

506 
U_STABLE
 
UCh¨32
 
U_EXPORT2


507 
uãxt_¥evious32
(
UText
 *
ut
);

528 
U_STABLE
 
UCh¨32
 
U_EXPORT2


529 
uãxt_√xt32From
(
UText
 *
ut
, 
öt64_t
 
«tiveIndex
);

548 
U_STABLE
 
UCh¨32
 
U_EXPORT2


549 
uãxt_¥evious32From
(
UText
 *
ut
, 
öt64_t
 
«tiveIndex
);

563 
U_STABLE
 
öt64_t
 
U_EXPORT2


564 
uãxt_gëN©iveIndex
(c⁄° 
UText
 *
ut
);

589 
U_STABLE
 
U_EXPORT2


590 
uãxt_£tN©iveIndex
(
UText
 *
ut
, 
öt64_t
 
«tiveIndex
);

608 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


609 
uãxt_moveIndex32
(
UText
 *
ut
, 
öt32_t
 
dñè
);

633 
U_STABLE
 
öt64_t
 
U_EXPORT2


634 
uãxt_gëPªviousN©iveIndex
(
UText
 *
ut
);

671 
U_STABLE
 
öt32_t
 
U_EXPORT2


672 
uãxt_exåa˘
(
UText
 *
ut
,

673 
öt64_t
 
«tiveSèπ
, i¡64_à
«tiveLimô
,

674 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

675 
UEº‹Code
 *
°©us
);

704 
U_INTERNAL
 
öt32_t
 
U_EXPORT2


705 
uãxt_com∑ª
(
UText
 *
s1
, 
öt32_t
 
Àngth1
,

706 
UText
 *
s2
, 
öt32_t
 
Àngth2
);

735 
U_INTERNAL
 
öt32_t
 
U_EXPORT2


736 
uãxt_com∑ªN©iveLimô
(
UText
 *
s1
, 
öt64_t
 
limô1
,

737 
UText
 *
s2
, 
öt64_t
 
limô2
);

773 
U_INTERNAL
 
öt32_t
 
U_EXPORT2


774 
uãxt_ˇ£Com∑ª
(
UText
 *
s1
, 
öt32_t
 
Àngth1
,

775 
UText
 *
s2
, 
öt32_t
 
Àngth2
,

776 
uöt32_t
 
›ti⁄s
, 
UEº‹Code
 *
pEº‹Code
);

814 
U_INTERNAL
 
öt32_t
 
U_EXPORT2


815 
uãxt_ˇ£Com∑ªN©iveLimô
(
UText
 *
s1
, 
öt64_t
 
limô1
,

816 
UText
 *
s2
, 
öt64_t
 
limô2
,

817 
uöt32_t
 
›ti⁄s
, 
UEº‹Code
 *
pEº‹Code
);

844 
	#UTEXT_CURRENT32
(
ut
) \

845 ((
ut
)->
chunkOff£t
 < (ut)->
chunkLígth
 && ((ut)->
chunkC⁄ã¡s
)[(ut)->chunkOffset]<0xd800 ? \

846 ((
ut
)->
chunkC⁄ã¡s
)[((ut)->
chunkOff£t
)] : 
	`uãxt_cuºít32
(ut))

	)

859 
	#UTEXT_NEXT32
(
ut
) \

860 ((
ut
)->
chunkOff£t
 < (ut)->
chunkLígth
 && ((ut)->
chunkC⁄ã¡s
)[(ut)->chunkOffset]<0xd800 ? \

861 ((
ut
)->
chunkC⁄ã¡s
)[((ut)->
chunkOff£t
)++] : 
	`uãxt_√xt32
(ut))

	)

873 
	#UTEXT_PREVIOUS32
(
ut
) \

874 ((
ut
)->
chunkOff£t
 > 0 && \

875 (
ut
)->
chunkC⁄ã¡s
[(ut)->
chunkOff£t
-1] < 0xd800 ? \

876 (
ut
)->
chunkC⁄ã¡s
[--((ut)->
chunkOff£t
)] : 
	`uãxt_¥evious32
(ut))

	)

890 
	#UTEXT_GETNATIVEINDEX
(
ut
) \

891 ((
ut
)->
chunkOff£t
 <(ut)->
«tiveIndexögLimô
? \

892 (
ut
)->
chunkN©iveSèπ
+(ut)->
chunkOff£t
 : \

893 (
ut
)->
pFuncs
->
	`m≠Off£tToN©ive
(ut))

	)

906 
	#UTEXT_SETNATIVEINDEX
(
ut
, 
ix
) \

907 { 
öt64_t
 
__off£t
 = (
ix
Ë- (
ut
)->
chunkN©iveSèπ
; \

908 i‡(
__off£t
>=0 && __off£t<=(
öt64_t
)(
ut
)->
«tiveIndexögLimô
) { \

909 (
ut
)->
chunkOff£t
=(
öt32_t
)
__off£t
; \

911 
	`uãxt_£tN©iveIndex
((
ut
), (
ix
)); } }

	)

942 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


943 
uãxt_isWrôabÀ
(c⁄° 
UText
 *
ut
);

954 
U_STABLE
 
UBoﬁ
 
U_EXPORT2


955 
uãxt_hasMëaD©a
(c⁄° 
UText
 *
ut
);

985 
U_STABLE
 
öt32_t
 
U_EXPORT2


986 
uãxt_ª∂a˚
(
UText
 *
ut
,

987 
öt64_t
 
«tiveSèπ
, i¡64_à
«tiveLimô
,

988 c⁄° 
UCh¨
 *
ª∂a˚mítText
, 
öt32_t
 
ª∂a˚mítLígth
,

989 
UEº‹Code
 *
°©us
);

1025 
U_STABLE
 
U_EXPORT2


1026 
uãxt_c›y
(
UText
 *
ut
,

1027 
öt64_t
 
«tiveSèπ
, i¡64_à
«tiveLimô
,

1028 
öt64_t
 
de°Index
,

1029 
UBoﬁ
 
move
,

1030 
UEº‹Code
 *
°©us
);

1054 
U_STABLE
 
U_EXPORT2


1055 
uãxt_‰ìze
(
UText
 *
ut
);

1069 
	mUTEXT_PROVIDER_LENGTH_IS_EXPENSIVE
 = 1,

1076 
	mUTEXT_PROVIDER_STABLE_CHUNKS
 = 2,

1083 
	mUTEXT_PROVIDER_WRITABLE
 = 3,

1089 
	mUTEXT_PROVIDER_HAS_META_DATA
 = 4,

1097 
	mUTEXT_PROVIDER_OWNS_TEXT
 = 5

1137 
UText
 * 
	tU_CALLCONV


1138 
	tUTextCl⁄e
(
	tUText
 *
	tde°
, c⁄° UTexà*
	t§c
, 
	tUBoﬁ
 
	tdìp
, 
	tUEº‹Code
 *
	t°©us
);

1149 
öt64_t
 
	tU_CALLCONV


1150 
	tUTextN©iveLígth
(
	tUText
 *
	tut
);

1177 
UBoﬁ
 
	tU_CALLCONV


1178 
	tUTextAc˚ss
(
	tUText
 *
	tut
, 
	töt64_t
 
	t«tiveIndex
, 
	tUBoﬁ
 
	tf‹w¨d
);

1207 
öt32_t
 
	tU_CALLCONV


1208 
	tUTextExåa˘
(
	tUText
 *
	tut
,

1209 
	töt64_t
 
	t«tiveSèπ
, i¡64_à
	t«tiveLimô
,

1210 
	tUCh¨
 *
	tde°
, 
	töt32_t
 
	tde°C≠acôy
,

1211 
	tUEº‹Code
 *
	t°©us
);

1242 
öt32_t
 
	tU_CALLCONV


1243 
	tUTextRïœ˚
(
	tUText
 *
	tut
,

1244 
	töt64_t
 
	t«tiveSèπ
, i¡64_à
	t«tiveLimô
,

1245 c⁄° 
	tUCh¨
 *
	tª∂a˚mítText
, 
	töt32_t
 
	tª∂acmítLígth
,

1246 
	tUEº‹Code
 *
	t°©us
);

1276 
	tU_CALLCONV


1277 
	tUTextC›y
(
	tUText
 *
	tut
,

1278 
	töt64_t
 
	t«tiveSèπ
, i¡64_à
	t«tiveLimô
,

1279 
	töt64_t
 
	t«tiveDe°
,

1280 
	tUBoﬁ
 
	tmove
,

1281 
	tUEº‹Code
 *
	t°©us
);

1296 
öt64_t
 
	tU_CALLCONV


1297 
	tUTextM≠Off£tToN©ive
(c⁄° 
	tUText
 *
	tut
);

1314 
öt32_t
 
	tU_CALLCONV


1315 
	tUTextM≠N©iveIndexToUTF16
(c⁄° 
	tUText
 *
	tut
, 
	töt64_t
 
	t«tiveIndex
);

1335 
	tU_CALLCONV


1336 
	tUTextClo£
(
	tUText
 *
	tut
);

1348 
	sUTextFuncs
 {

1363 
öt32_t
 
	mèbÀSize
;

1370 
öt32_t
 
	mª£rved1
, 
	mª£rved2
, 
	mª£rved3
;

1379 
UTextCl⁄e
 *
	m˛⁄e
;

1388 
UTextN©iveLígth
 *
	m«tiveLígth
;

1396 
UTextAc˚ss
 *
	mac˚ss
;

1404 
UTextExåa˘
 *
	mexåa˘
;

1412 
UTextRïœ˚
 *
	mª∂a˚
;

1420 
UTextC›y
 *
	mc›y
;

1428 
UTextM≠Off£tToN©ive
 *
	mm≠Off£tToN©ive
;

1436 
UTextM≠N©iveIndexToUTF16
 *
	mm≠N©iveIndexToUTF16
;

1444 
UTextClo£
 *
	m˛o£
;

1450 
UTextClo£
 *
	m•¨e1
;

1456 
UTextClo£
 *
	m•¨e2
;

1462 
UTextClo£
 *
	m•¨e3
;

1469 
UTextFuncs
 
	tUTextFuncs
;

1482 
	sUText
 {

1495 
uöt32_t
 
	mmagic
;

1503 
öt32_t
 
	mÊags
;

1511 
öt32_t
 
	m¥ovidîPr›îtõs
;

1519 
öt32_t
 
	msizeOfSåu˘
;

1529 
öt64_t
 
	mchunkN©iveLimô
;

1535 
öt32_t
 
	mexåaSize
;

1544 
öt32_t
 
	m«tiveIndexögLimô
;

1552 
öt64_t
 
	mchunkN©iveSèπ
;

1559 
öt32_t
 
	mchunkOff£t
;

1565 
öt32_t
 
	mchunkLígth
;

1576 c⁄° 
UCh¨
 *
	mchunkC⁄ã¡s
;

1582 c⁄° 
UTextFuncs
 *
	mpFuncs
;

1589 *
	mpExåa
;

1597 c⁄° *
	mc⁄ãxt
;

1606 c⁄° *
	mp
;

1612 c⁄° *
	mq
;

1618 c⁄° *
	mr
;

1625 *
	m¥ivP
;

1636 
öt64_t
 
	ma
;

1643 
öt32_t
 
	mb
;

1650 
öt32_t
 
	mc
;

1660 
öt64_t
 
	m¥ivA
;

1666 
öt32_t
 
	m¥ivB
;

1672 
öt32_t
 
	m¥ivC
;

1692 
U_STABLE
 
UText
 * 
U_EXPORT2


1693 
uãxt_£tup
(
UText
 *
ut
, 
öt32_t
 
exåaS∑˚
, 
UEº‹Code
 *
°©us
);

1701 
	mUTEXT_MAGIC
 = 0x345ad82c

1711 
	#UTEXT_INITIALIZER
 { \

1712 
UTEXT_MAGIC
, \

1715 (
UText
), \

1722 
NULL
, \

1723 
NULL
, \

1724 
NULL
, \

1725 
NULL
, \

1726 
NULL
, NULL, NULL, \

1727 
NULL
, \

1730 }

	)

1733 
	gU_CDECL_END


	@unicode/utf.h

108 #i‚de‡
__UTF_H__


109 
	#__UTF_H__


	)

111 
	~"unicode/uty≥s.h
"

134 
	#U_SENTINEL
 (-1)

	)

142 
	#U_IS_UNICODE_NONCHAR
(
c
) \

143 ((
c
)>=0xfdd0 && \

144 ((
uöt32_t
)(
c
)<=0xfdef || ((c)&0xfffe)==0xfffe) && \

145 (
uöt32_t
)(
c
)<=0x10ffff)

	)

164 
	#U_IS_UNICODE_CHAR
(
c
) \

165 ((
uöt32_t
)(
c
)<0xd800 || \

166 ((
uöt32_t
)(
c
)>0xdfff && \

167 (
uöt32_t
)(
c
)<=0x10ffff && \

168 !
	`U_IS_UNICODE_NONCHAR
(
c
)))

	)

176 
	#U_IS_BMP
(
c
Ë((
uöt32_t
)(c)<=0xffff)

	)

184 
	#U_IS_SUPPLEMENTARY
(
c
Ë((
uöt32_t
)((c)-0x10000)<=0xfffff)

	)

192 
	#U_IS_LEAD
(
c
Ë(((c)&0xfffffc00)==0xd800)

	)

200 
	#U_IS_TRAIL
(
c
Ë(((c)&0xfffffc00)==0xdc00)

	)

208 
	#U_IS_SURROGATE
(
c
Ë(((c)&0xfffff800)==0xd800)

	)

217 
	#U_IS_SURROGATE_LEAD
(
c
Ë(((c)&0x400)==0)

	)

226 
	#U_IS_SURROGATE_TRAIL
(
c
Ë(((c)&0x400)!=0)

	)

230 
	~"unicode/utf8.h
"

231 
	~"unicode/utf16.h
"

234 
	~"unicode/utf_ﬁd.h
"

	@unicode/utf16.h

34 #i‚de‡
__UTF16_H__


35 
	#__UTF16_H__


	)

38 #i‚de‡
__UTF_H__


39 
	~"unicode/utf.h
"

50 
	#U16_IS_SINGLE
(
c
Ë!
	`U_IS_SURROGATE
(c)

	)

58 
	#U16_IS_LEAD
(
c
Ë(((c)&0xfffffc00)==0xd800)

	)

66 
	#U16_IS_TRAIL
(
c
Ë(((c)&0xfffffc00)==0xdc00)

	)

74 
	#U16_IS_SURROGATE
(
c
Ë
	`U_IS_SURROGATE
(c)

	)

83 
	#U16_IS_SURROGATE_LEAD
(
c
Ë(((c)&0x400)==0)

	)

92 
	#U16_IS_SURROGATE_TRAIL
(
c
Ë(((c)&0x400)!=0)

	)

98 
	#U16_SURROGATE_OFFSET
 ((0xd800<<10UL)+0xdc00-0x10000)

	)

111 
	#U16_GET_SUPPLEMENTARY
(
Àad
, 
åaû
) \

112 (((
UCh¨32
)(
Àad
)<<10UL)+(UCh¨32)(
åaû
)-
U16_SURROGATE_OFFSET
)

	)

122 
	#U16_LEAD
(
suµÀmíèry
Ë(
UCh¨
)(((suµÀmíèry)>>10)+0xd7c0)

	)

131 
	#U16_TRAIL
(
suµÀmíèry
Ë(
UCh¨
)(((suµÀmíèry)&0x3ff)|0xdc00)

	)

140 
	#U16_LENGTH
(
c
Ë((
uöt32_t
)(c)<=0xfff‡? 1 : 2)

	)

147 
	#U16_MAX_LENGTH
 2

	)

166 
	#U16_GET_UNSAFE
(
s
, 
i
, 
c
) { \

167 (
c
)=(
s
)[
i
]; \

168 if(
	`U16_IS_SURROGATE
(
c
)) { \

169 if(
	`U16_IS_SURROGATE_LEAD
(
c
)) { \

170 (
c
)=
	`U16_GET_SUPPLEMENTARY
((c), (
s
)[(
i
)+1]); \

172 (
c
)=
	`U16_GET_SUPPLEMENTARY
((
s
)[(
i
)-1], (c)); \

175 }

	)

197 
	#U16_GET
(
s
, 
°¨t
, 
i
, 
Àngth
, 
c
) { \

198 (
c
)=(
s
)[
i
]; \

199 if(
	`U16_IS_SURROGATE
(
c
)) { \

200 
uöt16_t
 
__c2
; \

201 if(
	`U16_IS_SURROGATE_LEAD
(
c
)) { \

202 if((
i
)+1<(
Àngth
Ë&& 
	`U16_IS_TRAIL
(
__c2
=(
s
)[(i)+1])) { \

203 (
c
)=
	`U16_GET_SUPPLEMENTARY
((c), 
__c2
); \

206 if((
i
)>(
°¨t
Ë&& 
	`U16_IS_LEAD
(
__c2
=(
s
)[(i)-1])) { \

207 (
c
)=
	`U16_GET_SUPPLEMENTARY
(
__c2
, (c)); \

211 }

	)

234 
	#U16_NEXT_UNSAFE
(
s
, 
i
, 
c
) { \

235 (
c
)=(
s
)[(
i
)++]; \

236 if(
	`U16_IS_LEAD
(
c
)) { \

237 (
c
)=
	`U16_GET_SUPPLEMENTARY
((c), (
s
)[(
i
)++]); \

239 }

	)

261 
	#U16_NEXT
(
s
, 
i
, 
Àngth
, 
c
) { \

262 (
c
)=(
s
)[(
i
)++]; \

263 if(
	`U16_IS_LEAD
(
c
)) { \

264 
uöt16_t
 
__c2
; \

265 if((
i
)<(
Àngth
Ë&& 
	`U16_IS_TRAIL
(
__c2
=(
s
)[(i)])) { \

266 ++(
i
); \

267 (
c
)=
	`U16_GET_SUPPLEMENTARY
((c), 
__c2
); \

270 }

	)

285 
	#U16_APPEND_UNSAFE
(
s
, 
i
, 
c
) { \

286 if((
uöt32_t
)(
c
)<=0xffff) { \

287 (
s
)[(
i
)++]=(
uöt16_t
)(
c
); \

289 (
s
)[(
i
)++]=(
uöt16_t
)(((
c
)>>10)+0xd7c0); \

290 (
s
)[(
i
)++]=(
uöt16_t
)(((
c
)&0x3ff)|0xdc00); \

292 }

	)

311 
	#U16_APPEND
(
s
, 
i
, 
ˇ∑côy
, 
c
, 
isEº‹
) { \

312 if((
uöt32_t
)(
c
)<=0xffff) { \

313 (
s
)[(
i
)++]=(
uöt16_t
)(
c
); \

314 } if((
uöt32_t
)(
c
)<=0x10fff‡&& (
i
)+1<(
ˇ∑côy
)) { \

315 (
s
)[(
i
)++]=(
uöt16_t
)(((
c
)>>10)+0xd7c0); \

316 (
s
)[(
i
)++]=(
uöt16_t
)(((
c
)&0x3ff)|0xdc00); \

318 (
isEº‹
)=
TRUE
; \

320 }

	)

332 
	#U16_FWD_1_UNSAFE
(
s
, 
i
) { \

333 if(
	`U16_IS_LEAD
((
s
)[(
i
)++])) { \

334 ++(
i
); \

336 }

	)

349 
	#U16_FWD_1
(
s
, 
i
, 
Àngth
) { \

350 if(
	`U16_IS_LEAD
((
s
)[(
i
)++]Ë&& (i)<(
Àngth
Ë&& 
	`U16_IS_TRAIL
((s)[i])) { \

351 ++(
i
); \

353 }

	)

367 
	#U16_FWD_N_UNSAFE
(
s
, 
i
, 
n
) { \

368 
öt32_t
 
__N
=(
n
); \

369 
__N
>0) { \

370 
	`U16_FWD_1_UNSAFE
(
s
, 
i
); \

371 --
__N
; \

373 }

	)

388 
	#U16_FWD_N
(
s
, 
i
, 
Àngth
, 
n
) { \

389 
öt32_t
 
__N
=(
n
); \

390 
__N
>0 && (
i
)<(
Àngth
)) { \

391 
	`U16_FWD_1
(
s
, 
i
, 
Àngth
); \

392 --
__N
; \

394 }

	)

409 
	#U16_SET_CP_START_UNSAFE
(
s
, 
i
) { \

410 if(
	`U16_IS_TRAIL
((
s
)[
i
])) { \

411 --(
i
); \

413 }

	)

429 
	#U16_SET_CP_START
(
s
, 
°¨t
, 
i
) { \

430 if(
	`U16_IS_TRAIL
((
s
)[
i
]Ë&& (i)>(
°¨t
Ë&& 
	`U16_IS_LEAD
((s)[(i)-1])) { \

431 --(
i
); \

433 }

	)

457 
	#U16_PREV_UNSAFE
(
s
, 
i
, 
c
) { \

458 (
c
)=(
s
)[--(
i
)]; \

459 if(
	`U16_IS_TRAIL
(
c
)) { \

460 (
c
)=
	`U16_GET_SUPPLEMENTARY
((
s
)[--(
i
)], (c)); \

462 }

	)

485 
	#U16_PREV
(
s
, 
°¨t
, 
i
, 
c
) { \

486 (
c
)=(
s
)[--(
i
)]; \

487 if(
	`U16_IS_TRAIL
(
c
)) { \

488 
uöt16_t
 
__c2
; \

489 if((
i
)>(
°¨t
Ë&& 
	`U16_IS_LEAD
(
__c2
=(
s
)[(i)-1])) { \

490 --(
i
); \

491 (
c
)=
	`U16_GET_SUPPLEMENTARY
(
__c2
, (c)); \

494 }

	)

507 
	#U16_BACK_1_UNSAFE
(
s
, 
i
) { \

508 if(
	`U16_IS_TRAIL
((
s
)[--(
i
)])) { \

509 --(
i
); \

511 }

	)

525 
	#U16_BACK_1
(
s
, 
°¨t
, 
i
) { \

526 if(
	`U16_IS_TRAIL
((
s
)[--(
i
)]Ë&& (i)>(
°¨t
Ë&& 
	`U16_IS_LEAD
((s)[(i)-1])) { \

527 --(
i
); \

529 }

	)

544 
	#U16_BACK_N_UNSAFE
(
s
, 
i
, 
n
) { \

545 
öt32_t
 
__N
=(
n
); \

546 
__N
>0) { \

547 
	`U16_BACK_1_UNSAFE
(
s
, 
i
); \

548 --
__N
; \

550 }

	)

566 
	#U16_BACK_N
(
s
, 
°¨t
, 
i
, 
n
) { \

567 
öt32_t
 
__N
=(
n
); \

568 
__N
>0 && (
i
)>(
°¨t
)) { \

569 
	`U16_BACK_1
(
s
, 
°¨t
, 
i
); \

570 --
__N
; \

572 }

	)

587 
	#U16_SET_CP_LIMIT_UNSAFE
(
s
, 
i
) { \

588 if(
	`U16_IS_LEAD
((
s
)[(
i
)-1])) { \

589 ++(
i
); \

591 }

	)

608 
	#U16_SET_CP_LIMIT
(
s
, 
°¨t
, 
i
, 
Àngth
) { \

609 if((
°¨t
)<(
i
Ë&& (i)<(
Àngth
Ë&& 
	`U16_IS_LEAD
((
s
)[(i)-1]Ë&& 
	`U16_IS_TRAIL
((s)[i])) { \

610 ++(
i
); \

612 }

	)

	@unicode/utf32.h

	@unicode/utf8.h

34 #i‚de‡
__UTF8_H__


35 
	#__UTF8_H__


	)

38 #i‚de‡
__UTF_H__


39 
	~"unicode/utf.h
"

55 #ifde‡
U_UTF8_IMPL


56 
U_EXPORT
 c⁄° 
	guöt8_t


57 #ñi‡
deföed
(
U_STATIC_IMPLEMENTATION
Ë|| deföed(
U_COMMON_IMPLEMENTATION
)

58 
U_CFUNC
 c⁄° 
	guöt8_t


60 
U_CFUNC
 
U_IMPORT
 c⁄° 
	guöt8_t


62 
	gutf8_cou¡TøûByãs
[256];

71 
	#U8_COUNT_TRAIL_BYTES
(
ÀadByã
Ë(
utf8_cou¡TøûByãs
[(
uöt8_t
ÓódByã])

	)

80 
	#U8_MASK_LEAD_BYTE
(
ÀadByã
, 
cou¡TøûByãs
Ë(÷ódByã)&=(1<<(6-(cou¡TøûByãs)))-1)

	)

91 
U_STABLE
 
UCh¨32
 
U_EXPORT2


92 
utf8_√xtCh¨Sa„Body
(c⁄° 
uöt8_t
 *
s
, 
öt32_t
 *
pi
, i¡32_à
Àngth
, 
UCh¨32
 
c
, 
UBoﬁ
 
°ri˘
);

103 
U_STABLE
 
öt32_t
 
U_EXPORT2


104 
utf8_≠≥ndCh¨Sa„Body
(
uöt8_t
 *
s
, 
öt32_t
 
i
, i¡32_à
Àngth
, 
UCh¨32
 
c
, 
UBoﬁ
 *
pIsEº‹
);

115 
U_STABLE
 
UCh¨32
 
U_EXPORT2


116 
utf8_¥evCh¨Sa„Body
(c⁄° 
uöt8_t
 *
s
, 
öt32_t
 
°¨t
, i¡32_à*
pi
, 
UCh¨32
 
c
, 
UBoﬁ
 
°ri˘
);

127 
U_STABLE
 
öt32_t
 
U_EXPORT2


128 
utf8_back1Sa„Body
(c⁄° 
uöt8_t
 *
s
, 
öt32_t
 
°¨t
, i¡32_à
i
);

138 
	#U8_IS_SINGLE
(
c
Ë(((c)&0x80)==0)

	)

146 
	#U8_IS_LEAD
(
c
Ë((
uöt8_t
)((c)-0xc0)<0x3e)

	)

154 
	#U8_IS_TRAIL
(
c
Ë(((c)&0xc0)==0x80)

	)

163 
	#U8_LENGTH
(
c
) \

164 ((
uöt32_t
)(
c
)<=0x7f ? 1 : \

165 ((
uöt32_t
)(
c
)<=0x7ff ? 2 : \

166 ((
uöt32_t
)(
c
)<=0xd7ff ? 3 : \

167 ((
uöt32_t
)(
c
)<=0xdfff || (uint32_t)(c)>0x10ffff ? 0 : \

168 ((
uöt32_t
)(
c
)<=0xffff ? 3 : 4)\

172 )

	)

179 
	#U8_MAX_LENGTH
 4

	)

197 
	#U8_GET_UNSAFE
(
s
, 
i
, 
c
) { \

198 
öt32_t
 
_u8_gë_unß„_ödex
=(öt32_t)(
i
); \

199 
	`U8_SET_CP_START_UNSAFE
(
s
, 
_u8_gë_unß„_ödex
); \

200 
	`U8_NEXT_UNSAFE
(
s
, 
_u8_gë_unß„_ödex
, 
c
); \

201 }

	)

221 
	#U8_GET
(
s
, 
°¨t
, 
i
, 
Àngth
, 
c
) { \

222 
öt32_t
 
_u8_gë_ödex
=(öt32_t)(
i
); \

223 
	`U8_SET_CP_START
(
s
, 
°¨t
, 
_u8_gë_ödex
); \

224 
	`U8_NEXT
(
s
, 
_u8_gë_ödex
, 
Àngth
, 
c
); \

225 }

	)

246 
	#U8_NEXT_UNSAFE
(
s
, 
i
, 
c
) { \

247 (
c
)=(
uöt8_t
)(
s
)[(
i
)++]; \

248 if((
uöt8_t
)((
c
)-0xc0)<0x35) { \

249 
uöt8_t
 
__cou¡
=
	`U8_COUNT_TRAIL_BYTES
(
c
); \

250 
	`U8_MASK_LEAD_BYTE
(
c
, 
__cou¡
); \

251 
__cou¡
) { \

254 (
c
)=((c)<<6)|((
s
)[(
i
)++]&0x3f); \

256 (
c
)=((c)<<6)|((
s
)[(
i
)++]&0x3f); \

258 (
c
)=((c)<<6)|((
s
)[(
i
)++]&0x3f); \

263 }

	)

283 
	#U8_NEXT
(
s
, 
i
, 
Àngth
, 
c
) { \

284 (
c
)=(
uöt8_t
)(
s
)[(
i
)++]; \

285 if((
c
)>=0x80) { \

286 
uöt8_t
 
__t1
, 
__t2
; \

288 (0xe0<(
c
) && (c)<=0xec) && \

289 (((
i
)+1)<(
Àngth
)) && \

290 (
__t1
=(
uöt8_t
)((
s
)[
i
]-0x80))<=0x3f && \

291 (
__t2
=(
uöt8_t
)((
s
)[(
i
)+1]-0x80))<= 0x3f \

294 (
c
)=(
UCh¨
)(((c)<<12)|(
__t1
<<6)|
__t2
); \

295 (
i
)+=2; \

297 ((
c
)<0xe0 && (c)>=0xc2) && \

298 ((
i
)<(
Àngth
)) && \

299 (
__t1
=(
uöt8_t
)((
s
)[
i
]-0x80))<=0x3f \

301 (
c
)=(
UCh¨
)((((c)&0x1f)<<6)|
__t1
); \

302 ++(
i
); \

303 } if(
	`U8_IS_LEAD
(
c
)) { \

305 (
c
)=
	`utf8_√xtCh¨Sa„Body
((c⁄° 
uöt8_t
 *)
s
, &(
i
), (
öt32_t
)(
Àngth
), c, -1); \

307 (
c
)=
U_SENTINEL
; \

310 }

	)

325 
	#U8_APPEND_UNSAFE
(
s
, 
i
, 
c
) { \

326 if((
uöt32_t
)(
c
)<=0x7f) { \

327 (
s
)[(
i
)++]=(
uöt8_t
)(
c
); \

329 if((
uöt32_t
)(
c
)<=0x7ff) { \

330 (
s
)[(
i
)++]=(
uöt8_t
)(((
c
)>>6)|0xc0); \

332 if((
uöt32_t
)(
c
)<=0xffff) { \

333 (
s
)[(
i
)++]=(
uöt8_t
)(((
c
)>>12)|0xe0); \

335 (
s
)[(
i
)++]=(
uöt8_t
)(((
c
)>>18)|0xf0); \

336 (
s
)[(
i
)++]=(
uöt8_t
)((((
c
)>>12)&0x3f)|0x80); \

338 (
s
)[(
i
)++]=(
uöt8_t
)((((
c
)>>6)&0x3f)|0x80); \

340 (
s
)[(
i
)++]=(
uöt8_t
)(((
c
)&0x3f)|0x80); \

342 }

	)

361 
	#U8_APPEND
(
s
, 
i
, 
ˇ∑côy
, 
c
, 
isEº‹
) { \

362 if((
uöt32_t
)(
c
)<=0x7f) { \

363 (
s
)[(
i
)++]=(
uöt8_t
)(
c
); \

364 } if((
uöt32_t
)(
c
)<=0x7f‡&& (
i
)+1<(
ˇ∑côy
)) { \

365 (
s
)[(
i
)++]=(
uöt8_t
)(((
c
)>>6)|0xc0); \

366 (
s
)[(
i
)++]=(
uöt8_t
)(((
c
)&0x3f)|0x80); \

367 } if((
uöt32_t
)(
c
)<=0xd7f‡&& (
i
)+2<(
ˇ∑côy
)) { \

368 (
s
)[(
i
)++]=(
uöt8_t
)(((
c
)>>12)|0xe0); \

369 (
s
)[(
i
)++]=(
uöt8_t
)((((
c
)>>6)&0x3f)|0x80); \

370 (
s
)[(
i
)++]=(
uöt8_t
)(((
c
)&0x3f)|0x80); \

372 (
i
)=
	`utf8_≠≥ndCh¨Sa„Body
(
s
, (
öt32_t
)(i), (öt32_t)(
ˇ∑côy
), 
c
, &(
isEº‹
)); \

374 }

	)

386 
	#U8_FWD_1_UNSAFE
(
s
, 
i
) { \

387 (
i
)+=1+
	`U8_COUNT_TRAIL_BYTES
((
s
)[i]); \

388 }

	)

401 
	#U8_FWD_1
(
s
, 
i
, 
Àngth
) { \

402 
uöt8_t
 
__b
=(uöt8_t)(
s
)[(
i
)++]; \

403 if(
	`U8_IS_LEAD
(
__b
)) { \

404 
uöt8_t
 
__cou¡
=
	`U8_COUNT_TRAIL_BYTES
(
__b
); \

405 if((
i
)+
__cou¡
>(
Àngth
)) { \

406 
__cou¡
=(
uöt8_t
)((
Àngth
)-(
i
)); \

408 
__cou¡
>0 && 
	`U8_IS_TRAIL
((
s
)[
i
])) { \

409 ++(
i
); \

410 --
__cou¡
; \

413 }

	)

427 
	#U8_FWD_N_UNSAFE
(
s
, 
i
, 
n
) { \

428 
öt32_t
 
__N
=(
n
); \

429 
__N
>0) { \

430 
	`U8_FWD_1_UNSAFE
(
s
, 
i
); \

431 --
__N
; \

433 }

	)

448 
	#U8_FWD_N
(
s
, 
i
, 
Àngth
, 
n
) { \

449 
öt32_t
 
__N
=(
n
); \

450 
__N
>0 && (
i
)<(
Àngth
)) { \

451 
	`U8_FWD_1
(
s
, 
i
, 
Àngth
); \

452 --
__N
; \

454 }

	)

469 
	#U8_SET_CP_START_UNSAFE
(
s
, 
i
) { \

470 
	`U8_IS_TRAIL
((
s
)[
i
])) { --(i); } \

471 }

	)

487 
	#U8_SET_CP_START
(
s
, 
°¨t
, 
i
) { \

488 if(
	`U8_IS_TRAIL
((
s
)[(
i
)])) { \

489 (
i
)=
	`utf8_back1Sa„Body
(
s
, 
°¨t
, (
öt32_t
)(i)); \

491 }

	)

514 
	#U8_PREV_UNSAFE
(
s
, 
i
, 
c
) { \

515 (
c
)=(
uöt8_t
)(
s
)[--(
i
)]; \

516 if(
	`U8_IS_TRAIL
(
c
)) { \

517 
uöt8_t
 
__b
, 
__cou¡
=1, 
__shi·
=6; \

520 (
c
)&=0x3f; \

522 
__b
=(
uöt8_t
)(
s
)[--(
i
)]; \

523 if(
__b
>=0xc0) { \

524 
	`U8_MASK_LEAD_BYTE
(
__b
, 
__cou¡
); \

525 (
c
)|=(
UCh¨32
)
__b
<<
__shi·
; \

528 (
c
)|=(
UCh¨32
)(
__b
&0x3f)<<
__shi·
; \

529 ++
__cou¡
; \

530 
__shi·
+=6; \

534 }

	)

556 
	#U8_PREV
(
s
, 
°¨t
, 
i
, 
c
) { \

557 (
c
)=(
uöt8_t
)(
s
)[--(
i
)]; \

558 if((
c
)>=0x80) { \

559 if((
c
)<=0xbf) { \

560 (
c
)=
	`utf8_¥evCh¨Sa„Body
((c⁄° 
uöt8_t
 *)
s
, 
°¨t
, &(
i
), c, -1); \

562 (
c
)=
U_SENTINEL
; \

565 }

	)

578 
	#U8_BACK_1_UNSAFE
(
s
, 
i
) { \

579 
	`U8_IS_TRAIL
((
s
)[--(
i
)])) {} \

580 }

	)

594 
	#U8_BACK_1
(
s
, 
°¨t
, 
i
) { \

595 if(
	`U8_IS_TRAIL
((
s
)[--(
i
)])) { \

596 (
i
)=
	`utf8_back1Sa„Body
(
s
, 
°¨t
, (
öt32_t
)(i)); \

598 }

	)

613 
	#U8_BACK_N_UNSAFE
(
s
, 
i
, 
n
) { \

614 
öt32_t
 
__N
=(
n
); \

615 
__N
>0) { \

616 
	`U8_BACK_1_UNSAFE
(
s
, 
i
); \

617 --
__N
; \

619 }

	)

635 
	#U8_BACK_N
(
s
, 
°¨t
, 
i
, 
n
) { \

636 
öt32_t
 
__N
=(
n
); \

637 
__N
>0 && (
i
)>(
°¨t
)) { \

638 
	`U8_BACK_1
(
s
, 
°¨t
, 
i
); \

639 --
__N
; \

641 }

	)

656 
	#U8_SET_CP_LIMIT_UNSAFE
(
s
, 
i
) { \

657 
	`U8_BACK_1_UNSAFE
(
s
, 
i
); \

658 
	`U8_FWD_1_UNSAFE
(
s
, 
i
); \

659 }

	)

676 
	#U8_SET_CP_LIMIT
(
s
, 
°¨t
, 
i
, 
Àngth
) { \

677 if((
°¨t
)<(
i
Ë&& (i)<(
Àngth
)) { \

678 
	`U8_BACK_1
(
s
, 
°¨t
, 
i
); \

679 
	`U8_FWD_1
(
s
, 
i
, 
Àngth
); \

681 }

	)

	@unicode/utf_old.h

146 #i‚de‡
__UTF_OLD_H__


147 
	#__UTF_OLD_H__


	)

149 #i‚de‡
U_HIDE_DEPRECATED_API


152 #i‚de‡
__UTF_H__


153 
	~"unicode/utf.h
"

158 #ifde‡
U_USE_UTF_DEPRECATES


166 
öt32_t
 
	tUTextOff£t
;

170 
	#UTF_SIZE
 16

	)

178 
	#UTF_SAFE


	)

180 #unde‡
UTF_UNSAFE


182 #unde‡
UTF_STRICT


198 
	#UTF8_ERROR_VALUE_1
 0x15

	)

205 
	#UTF8_ERROR_VALUE_2
 0x9f

	)

213 
	#UTF_ERROR_VALUE
 0xffff

	)

221 
	#UTF_IS_ERROR
(
c
) \

222 (((
c
)&0xff„)==0xff„ || (c)==
UTF8_ERROR_VALUE_1
 || (c)==
UTF8_ERROR_VALUE_2
)

	)

229 
	#UTF_IS_VALID
(
c
) \

230 (
	`UTF_IS_UNICODE_CHAR
(
c
) && \

231 (
c
)!=
UTF8_ERROR_VALUE_1
 && (c)!=
UTF8_ERROR_VALUE_2
)

	)

237 
	#UTF_IS_SURROGATE
(
uch¨
Ë(((uch¨)&0xfffff800)==0xd800)

	)

244 
	#UTF_IS_UNICODE_NONCHAR
(
c
) \

245 ((
c
)>=0xfdd0 && \

246 ((
uöt32_t
)(
c
)<=0xfdef || ((c)&0xfffe)==0xfffe) && \

247 (
uöt32_t
)(
c
)<=0x10ffff)

	)

264 
	#UTF_IS_UNICODE_CHAR
(
c
) \

265 ((
uöt32_t
)(
c
)<0xd800 || \

266 ((
uöt32_t
)(
c
)>0xdfff && \

267 (
uöt32_t
)(
c
)<=0x10ffff && \

268 !
	`UTF_IS_UNICODE_NONCHAR
(
c
)))

	)

276 
	#UTF8_COUNT_TRAIL_BYTES
(
ÀadByã
Ë(
utf8_cou¡TøûByãs
[(
uöt8_t
ÓódByã])

	)

282 
	#UTF8_MASK_LEAD_BYTE
(
ÀadByã
, 
cou¡TøûByãs
Ë(÷ódByã)&=(1<<(6-(cou¡TøûByãs)))-1)

	)

285 
	#UTF8_IS_SINGLE
(
uch¨
Ë(((uch¨)&0x80)==0)

	)

287 
	#UTF8_IS_LEAD
(
uch¨
Ë((
uöt8_t
)((uch¨)-0xc0)<0x3e)

	)

289 
	#UTF8_IS_TRAIL
(
uch¨
Ë(((uch¨)&0xc0)==0x80)

	)

292 
	#UTF8_NEED_MULTIPLE_UCHAR
(
c
Ë((
uöt32_t
)(c)>0x7f)

	)

308 
	#UTF8_CHAR_LENGTH
(
c
) \

309 ((
uöt32_t
)(
c
)<=0x7f ? 1 : \

310 ((
uöt32_t
)(
c
)<=0x7ff ? 2 : \

311 ((
uöt32_t
)((
c
)-0x10000)>0xfffff ? 3 : 4) \

313 )

	)

315 
	#UTF8_CHAR_LENGTH
(
c
) \

316 ((
uöt32_t
)(
c
)<=0x7f ? 1 : \

317 ((
uöt32_t
)(
c
)<=0x7ff ? 2 : \

318 ((
uöt32_t
)(
c
)<=0xffff ? 3 : \

319 ((
uöt32_t
)(
c
)<=0x10ffff ? 4 : \

320 ((
uöt32_t
)(
c
)<=0x3ffffff ? 5 : \

321 ((
uöt32_t
)(
c
)<=0x7fffffff ? 6 : 3) \

326 )

	)

330 
	#UTF8_MAX_CHAR_LENGTH
 4

	)

333 
	#UTF8_ARRAY_SIZE
(
size
Ë((5*(size))/2)

	)

336 
	#UTF8_GET_CHAR_UNSAFE
(
s
, 
i
, 
c
) { \

337 
öt32_t
 
_utf8_gë_ch¨_unß„_ödex
=(öt32_t)(
i
); \

338 
	`UTF8_SET_CHAR_START_UNSAFE
(
s
, 
_utf8_gë_ch¨_unß„_ödex
); \

339 
	`UTF8_NEXT_CHAR_UNSAFE
(
s
, 
_utf8_gë_ch¨_unß„_ödex
, 
c
); \

340 }

	)

343 
	#UTF8_GET_CHAR_SAFE
(
s
, 
°¨t
, 
i
, 
Àngth
, 
c
, 
°ri˘
) { \

344 
öt32_t
 
_utf8_gë_ch¨_ß„_ödex
=(öt32_t)(
i
); \

345 
	`UTF8_SET_CHAR_START_SAFE
(
s
, 
°¨t
, 
_utf8_gë_ch¨_ß„_ödex
); \

346 
	`UTF8_NEXT_CHAR_SAFE
(
s
, 
_utf8_gë_ch¨_ß„_ödex
, 
Àngth
, 
c
, 
°ri˘
); \

347 }

	)

350 
	#UTF8_NEXT_CHAR_UNSAFE
(
s
, 
i
, 
c
) { \

351 (
c
)=(
s
)[(
i
)++]; \

352 if((
uöt8_t
)((
c
)-0xc0)<0x35) { \

353 
uöt8_t
 
__cou¡
=
	`UTF8_COUNT_TRAIL_BYTES
(
c
); \

354 
	`UTF8_MASK_LEAD_BYTE
(
c
, 
__cou¡
); \

355 
__cou¡
) { \

358 (
c
)=((c)<<6)|((
s
)[(
i
)++]&0x3f); \

360 (
c
)=((c)<<6)|((
s
)[(
i
)++]&0x3f); \

362 (
c
)=((c)<<6)|((
s
)[(
i
)++]&0x3f); \

367 }

	)

370 
	#UTF8_APPEND_CHAR_UNSAFE
(
s
, 
i
, 
c
) { \

371 if((
uöt32_t
)(
c
)<=0x7f) { \

372 (
s
)[(
i
)++]=(
uöt8_t
)(
c
); \

374 if((
uöt32_t
)(
c
)<=0x7ff) { \

375 (
s
)[(
i
)++]=(
uöt8_t
)(((
c
)>>6)|0xc0); \

377 if((
uöt32_t
)(
c
)<=0xffff) { \

378 (
s
)[(
i
)++]=(
uöt8_t
)(((
c
)>>12)|0xe0); \

380 (
s
)[(
i
)++]=(
uöt8_t
)(((
c
)>>18)|0xf0); \

381 (
s
)[(
i
)++]=(
uöt8_t
)((((
c
)>>12)&0x3f)|0x80); \

383 (
s
)[(
i
)++]=(
uöt8_t
)((((
c
)>>6)&0x3f)|0x80); \

385 (
s
)[(
i
)++]=(
uöt8_t
)(((
c
)&0x3f)|0x80); \

387 }

	)

390 
	#UTF8_FWD_1_UNSAFE
(
s
, 
i
) { \

391 (
i
)+=1+
	`UTF8_COUNT_TRAIL_BYTES
((
s
)[i]); \

392 }

	)

395 
	#UTF8_FWD_N_UNSAFE
(
s
, 
i
, 
n
) { \

396 
öt32_t
 
__N
=(
n
); \

397 
__N
>0) { \

398 
	`UTF8_FWD_1_UNSAFE
(
s
, 
i
); \

399 --
__N
; \

401 }

	)

404 
	#UTF8_SET_CHAR_START_UNSAFE
(
s
, 
i
) { \

405 
	`UTF8_IS_TRAIL
((
s
)[
i
])) { --(i); } \

406 }

	)

409 
	#UTF8_NEXT_CHAR_SAFE
(
s
, 
i
, 
Àngth
, 
c
, 
°ri˘
) { \

410 (
c
)=(
s
)[(
i
)++]; \

411 if((
c
)>=0x80) { \

412 if(
	`UTF8_IS_LEAD
(
c
)) { \

413 (
c
)=
	`utf8_√xtCh¨Sa„Body
(
s
, &(
i
), (
öt32_t
)(
Àngth
), c, 
°ri˘
); \

415 (
c
)=
UTF8_ERROR_VALUE_1
; \

418 }

	)

421 
	#UTF8_APPEND_CHAR_SAFE
(
s
, 
i
, 
Àngth
, 
c
) { \

422 if((
uöt32_t
)(
c
)<=0x7f) { \

423 (
s
)[(
i
)++]=(
uöt8_t
)(
c
); \

425 (
i
)=
	`utf8_≠≥ndCh¨Sa„Body
(
s
, (
öt32_t
)(i), (öt32_t)(
Àngth
), 
c
, 
NULL
); \

427 }

	)

430 
	#UTF8_FWD_1_SAFE
(
s
, 
i
, 
Àngth
Ë
	`U8_FWD_1
(s, i,Üígth)

	)

433 
	#UTF8_FWD_N_SAFE
(
s
, 
i
, 
Àngth
, 
n
Ë
	`U8_FWD_N
(s, i,Üígth,Ç)

	)

436 
	#UTF8_SET_CHAR_START_SAFE
(
s
, 
°¨t
, 
i
Ë
	`U8_SET_CP_START
(s, sèπ, i)

	)

439 
	#UTF8_PREV_CHAR_UNSAFE
(
s
, 
i
, 
c
) { \

440 (
c
)=(
s
)[--(
i
)]; \

441 if(
	`UTF8_IS_TRAIL
(
c
)) { \

442 
uöt8_t
 
__b
, 
__cou¡
=1, 
__shi·
=6; \

445 (
c
)&=0x3f; \

447 
__b
=(
s
)[--(
i
)]; \

448 if(
__b
>=0xc0) { \

449 
	`UTF8_MASK_LEAD_BYTE
(
__b
, 
__cou¡
); \

450 (
c
)|=(
UCh¨32
)
__b
<<
__shi·
; \

453 (
c
)|=(
UCh¨32
)(
__b
&0x3f)<<
__shi·
; \

454 ++
__cou¡
; \

455 
__shi·
+=6; \

459 }

	)

462 
	#UTF8_BACK_1_UNSAFE
(
s
, 
i
) { \

463 
	`UTF8_IS_TRAIL
((
s
)[--(
i
)])) {} \

464 }

	)

467 
	#UTF8_BACK_N_UNSAFE
(
s
, 
i
, 
n
) { \

468 
öt32_t
 
__N
=(
n
); \

469 
__N
>0) { \

470 
	`UTF8_BACK_1_UNSAFE
(
s
, 
i
); \

471 --
__N
; \

473 }

	)

476 
	#UTF8_SET_CHAR_LIMIT_UNSAFE
(
s
, 
i
) { \

477 
	`UTF8_BACK_1_UNSAFE
(
s
, 
i
); \

478 
	`UTF8_FWD_1_UNSAFE
(
s
, 
i
); \

479 }

	)

482 
	#UTF8_PREV_CHAR_SAFE
(
s
, 
°¨t
, 
i
, 
c
, 
°ri˘
) { \

483 (
c
)=(
s
)[--(
i
)]; \

484 if((
c
)>=0x80) { \

485 if((
c
)<=0xbf) { \

486 (
c
)=
	`utf8_¥evCh¨Sa„Body
(
s
, 
°¨t
, &(
i
), c, 
°ri˘
); \

488 (
c
)=
UTF8_ERROR_VALUE_1
; \

491 }

	)

494 
	#UTF8_BACK_1_SAFE
(
s
, 
°¨t
, 
i
Ë
	`U8_BACK_1
(s, sèπ, i)

	)

497 
	#UTF8_BACK_N_SAFE
(
s
, 
°¨t
, 
i
, 
n
Ë
	`U8_BACK_N
(s, sèπ, i,Ç)

	)

500 
	#UTF8_SET_CHAR_LIMIT_SAFE
(
s
, 
°¨t
, 
i
, 
Àngth
Ë
	`U8_SET_CP_LIMIT
(s, sèπ, i,Üígth)

	)

505 
	#UTF_IS_FIRST_SURROGATE
(
uch¨
Ë(((uch¨)&0xfffffc00)==0xd800)

	)

508 
	#UTF_IS_SECOND_SURROGATE
(
uch¨
Ë(((uch¨)&0xfffffc00)==0xdc00)

	)

511 
	#UTF_IS_SURROGATE_FIRST
(
c
Ë(((c)&0x400)==0)

	)

514 
	#UTF_SURROGATE_OFFSET
 ((0xd800<<10UL)+0xdc00-0x10000)

	)

517 
	#UTF16_GET_PAIR_VALUE
(
fú°
, 
£c⁄d
) \

518 (((
fú°
)<<10UL)+(
£c⁄d
)-
UTF_SURROGATE_OFFSET
)

	)

521 
	#UTF_FIRST_SURROGATE
(
suµÀmíèry
Ë(
UCh¨
)(((suµÀmíèry)>>10)+0xd7c0)

	)

524 
	#UTF_SECOND_SURROGATE
(
suµÀmíèry
Ë(
UCh¨
)(((suµÀmíèry)&0x3ff)|0xdc00)

	)

527 
	#UTF16_LEAD
(
suµÀmíèry
Ë
	`UTF_FIRST_SURROGATE
(suµÀmíèry)

	)

530 
	#UTF16_TRAIL
(
suµÀmíèry
Ë
	`UTF_SECOND_SURROGATE
(suµÀmíèry)

	)

533 
	#UTF16_IS_SINGLE
(
uch¨
Ë!
	`UTF_IS_SURROGATE
(uch¨)

	)

536 
	#UTF16_IS_LEAD
(
uch¨
Ë
	`UTF_IS_FIRST_SURROGATE
(uch¨)

	)

539 
	#UTF16_IS_TRAIL
(
uch¨
Ë
	`UTF_IS_SECOND_SURROGATE
(uch¨)

	)

542 
	#UTF16_NEED_MULTIPLE_UCHAR
(
c
Ë((
uöt32_t
)(c)>0xffff)

	)

545 
	#UTF16_CHAR_LENGTH
(
c
Ë((
uöt32_t
)(c)<=0xfff‡? 1 : 2)

	)

548 
	#UTF16_MAX_CHAR_LENGTH
 2

	)

551 
	#UTF16_ARRAY_SIZE
(
size
Ë(size)

	)

564 
	#UTF16_GET_CHAR_UNSAFE
(
s
, 
i
, 
c
) { \

565 (
c
)=(
s
)[
i
]; \

566 if(
	`UTF_IS_SURROGATE
(
c
)) { \

567 if(
	`UTF_IS_SURROGATE_FIRST
(
c
)) { \

568 (
c
)=
	`UTF16_GET_PAIR_VALUE
((c), (
s
)[(
i
)+1]); \

570 (
c
)=
	`UTF16_GET_PAIR_VALUE
((
s
)[(
i
)-1], (c)); \

573 }

	)

576 
	#UTF16_GET_CHAR_SAFE
(
s
, 
°¨t
, 
i
, 
Àngth
, 
c
, 
°ri˘
) { \

577 (
c
)=(
s
)[
i
]; \

578 if(
	`UTF_IS_SURROGATE
(
c
)) { \

579 
uöt16_t
 
__c2
; \

580 if(
	`UTF_IS_SURROGATE_FIRST
(
c
)) { \

581 if((
i
)+1<(
Àngth
Ë&& 
	`UTF_IS_SECOND_SURROGATE
(
__c2
=(
s
)[(i)+1])) { \

582 (
c
)=
	`UTF16_GET_PAIR_VALUE
((c), 
__c2
); \

584 } if(
°ri˘
) {\

586 (
c
)=
UTF_ERROR_VALUE
; \

589 if((
i
)-1>=(
°¨t
Ë&& 
	`UTF_IS_FIRST_SURROGATE
(
__c2
=(
s
)[(i)-1])) { \

590 (
c
)=
	`UTF16_GET_PAIR_VALUE
(
__c2
, (c)); \

592 } if(
°ri˘
) {\

594 (
c
)=
UTF_ERROR_VALUE
; \

597 } if((
°ri˘
Ë&& !
	`UTF_IS_UNICODE_CHAR
(
c
)) { \

598 (
c
)=
UTF_ERROR_VALUE
; \

600 }

	)

603 
	#UTF16_NEXT_CHAR_UNSAFE
(
s
, 
i
, 
c
) { \

604 (
c
)=(
s
)[(
i
)++]; \

605 if(
	`UTF_IS_FIRST_SURROGATE
(
c
)) { \

606 (
c
)=
	`UTF16_GET_PAIR_VALUE
((c), (
s
)[(
i
)++]); \

608 }

	)

611 
	#UTF16_APPEND_CHAR_UNSAFE
(
s
, 
i
, 
c
) { \

612 if((
uöt32_t
)(
c
)<=0xffff) { \

613 (
s
)[(
i
)++]=(
uöt16_t
)(
c
); \

615 (
s
)[(
i
)++]=(
uöt16_t
)(((
c
)>>10)+0xd7c0); \

616 (
s
)[(
i
)++]=(
uöt16_t
)(((
c
)&0x3ff)|0xdc00); \

618 }

	)

621 
	#UTF16_FWD_1_UNSAFE
(
s
, 
i
) { \

622 if(
	`UTF_IS_FIRST_SURROGATE
((
s
)[(
i
)++])) { \

623 ++(
i
); \

625 }

	)

628 
	#UTF16_FWD_N_UNSAFE
(
s
, 
i
, 
n
) { \

629 
öt32_t
 
__N
=(
n
); \

630 
__N
>0) { \

631 
	`UTF16_FWD_1_UNSAFE
(
s
, 
i
); \

632 --
__N
; \

634 }

	)

637 
	#UTF16_SET_CHAR_START_UNSAFE
(
s
, 
i
) { \

638 if(
	`UTF_IS_SECOND_SURROGATE
((
s
)[
i
])) { \

639 --(
i
); \

641 }

	)

644 
	#UTF16_NEXT_CHAR_SAFE
(
s
, 
i
, 
Àngth
, 
c
, 
°ri˘
) { \

645 (
c
)=(
s
)[(
i
)++]; \

646 if(
	`UTF_IS_FIRST_SURROGATE
(
c
)) { \

647 
uöt16_t
 
__c2
; \

648 if((
i
)<(
Àngth
Ë&& 
	`UTF_IS_SECOND_SURROGATE
(
__c2
=(
s
)[(i)])) { \

649 ++(
i
); \

650 (
c
)=
	`UTF16_GET_PAIR_VALUE
((c), 
__c2
); \

652 } if(
°ri˘
) {\

654 (
c
)=
UTF_ERROR_VALUE
; \

656 } if((
°ri˘
Ë&& !
	`UTF_IS_UNICODE_CHAR
(
c
)) { \

658 (
c
)=
UTF_ERROR_VALUE
; \

660 }

	)

663 
	#UTF16_APPEND_CHAR_SAFE
(
s
, 
i
, 
Àngth
, 
c
) { \

664 if((
uöt32_t
)(
c
)<=0xffff) { \

665 (
s
)[(
i
)++]=(
uöt16_t
)(
c
); \

666 } if((
uöt32_t
)(
c
)<=0x10ffff) { \

667 if((
i
)+1<(
Àngth
)) { \

668 (
s
)[(
i
)++]=(
uöt16_t
)(((
c
)>>10)+0xd7c0); \

669 (
s
)[(
i
)++]=(
uöt16_t
)(((
c
)&0x3ff)|0xdc00); \

671 (
s
)[(
i
)++]=
UTF_ERROR_VALUE
; \

674 (
s
)[(
i
)++]=
UTF_ERROR_VALUE
; \

676 }

	)

679 
	#UTF16_FWD_1_SAFE
(
s
, 
i
, 
Àngth
Ë
	`U16_FWD_1
(s, i,Üígth)

	)

682 
	#UTF16_FWD_N_SAFE
(
s
, 
i
, 
Àngth
, 
n
Ë
	`U16_FWD_N
(s, i,Üígth,Ç)

	)

685 
	#UTF16_SET_CHAR_START_SAFE
(
s
, 
°¨t
, 
i
Ë
	`U16_SET_CP_START
(s, sèπ, i)

	)

688 
	#UTF16_PREV_CHAR_UNSAFE
(
s
, 
i
, 
c
) { \

689 (
c
)=(
s
)[--(
i
)]; \

690 if(
	`UTF_IS_SECOND_SURROGATE
(
c
)) { \

691 (
c
)=
	`UTF16_GET_PAIR_VALUE
((
s
)[--(
i
)], (c)); \

693 }

	)

696 
	#UTF16_BACK_1_UNSAFE
(
s
, 
i
) { \

697 if(
	`UTF_IS_SECOND_SURROGATE
((
s
)[--(
i
)])) { \

698 --(
i
); \

700 }

	)

703 
	#UTF16_BACK_N_UNSAFE
(
s
, 
i
, 
n
) { \

704 
öt32_t
 
__N
=(
n
); \

705 
__N
>0) { \

706 
	`UTF16_BACK_1_UNSAFE
(
s
, 
i
); \

707 --
__N
; \

709 }

	)

712 
	#UTF16_SET_CHAR_LIMIT_UNSAFE
(
s
, 
i
) { \

713 if(
	`UTF_IS_FIRST_SURROGATE
((
s
)[(
i
)-1])) { \

714 ++(
i
); \

716 }

	)

719 
	#UTF16_PREV_CHAR_SAFE
(
s
, 
°¨t
, 
i
, 
c
, 
°ri˘
) { \

720 (
c
)=(
s
)[--(
i
)]; \

721 if(
	`UTF_IS_SECOND_SURROGATE
(
c
)) { \

722 
uöt16_t
 
__c2
; \

723 if((
i
)>(
°¨t
Ë&& 
	`UTF_IS_FIRST_SURROGATE
(
__c2
=(
s
)[(i)-1])) { \

724 --(
i
); \

725 (
c
)=
	`UTF16_GET_PAIR_VALUE
(
__c2
, (c)); \

727 } if(
°ri˘
) {\

729 (
c
)=
UTF_ERROR_VALUE
; \

731 } if((
°ri˘
Ë&& !
	`UTF_IS_UNICODE_CHAR
(
c
)) { \

733 (
c
)=
UTF_ERROR_VALUE
; \

735 }

	)

738 
	#UTF16_BACK_1_SAFE
(
s
, 
°¨t
, 
i
Ë
	`U16_BACK_1
(s, sèπ, i)

	)

741 
	#UTF16_BACK_N_SAFE
(
s
, 
°¨t
, 
i
, 
n
Ë
	`U16_BACK_N
(s, sèπ, i,Ç)

	)

744 
	#UTF16_SET_CHAR_LIMIT_SAFE
(
s
, 
°¨t
, 
i
, 
Àngth
Ë
	`U16_SET_CP_LIMIT
(s, sèπ, i,Üígth)

	)

764 
	#UTF32_IS_SAFE
(
c
, 
°ri˘
) \

765 (!(
°ri˘
) ? \

766 (
uöt32_t
)(
c
)<=0x10ffff : \

767 
	`UTF_IS_UNICODE_CHAR
(
c
))

	)

780 
	#UTF32_IS_SINGLE
(
uch¨
Ë1

	)

782 
	#UTF32_IS_LEAD
(
uch¨
Ë0

	)

784 
	#UTF32_IS_TRAIL
(
uch¨
Ë0

	)

789 
	#UTF32_NEED_MULTIPLE_UCHAR
(
c
Ë0

	)

791 
	#UTF32_CHAR_LENGTH
(
c
Ë1

	)

793 
	#UTF32_MAX_CHAR_LENGTH
 1

	)

798 
	#UTF32_ARRAY_SIZE
(
size
Ë(size)

	)

801 
	#UTF32_GET_CHAR_UNSAFE
(
s
, 
i
, 
c
) { \

802 (
c
)=(
s
)[
i
]; \

803 }

	)

806 
	#UTF32_GET_CHAR_SAFE
(
s
, 
°¨t
, 
i
, 
Àngth
, 
c
, 
°ri˘
) { \

807 (
c
)=(
s
)[
i
]; \

808 if(!
	`UTF32_IS_SAFE
(
c
, 
°ri˘
)) { \

809 (
c
)=
UTF_ERROR_VALUE
; \

811 }

	)

816 
	#UTF32_NEXT_CHAR_UNSAFE
(
s
, 
i
, 
c
) { \

817 (
c
)=(
s
)[(
i
)++]; \

818 }

	)

821 
	#UTF32_APPEND_CHAR_UNSAFE
(
s
, 
i
, 
c
) { \

822 (
s
)[(
i
)++]=(
c
); \

823 }

	)

826 
	#UTF32_FWD_1_UNSAFE
(
s
, 
i
) { \

827 ++(
i
); \

828 }

	)

831 
	#UTF32_FWD_N_UNSAFE
(
s
, 
i
, 
n
) { \

832 (
i
)+=(
n
); \

833 }

	)

836 
	#UTF32_SET_CHAR_START_UNSAFE
(
s
, 
i
) { \

837 }

	)

840 
	#UTF32_NEXT_CHAR_SAFE
(
s
, 
i
, 
Àngth
, 
c
, 
°ri˘
) { \

841 (
c
)=(
s
)[(
i
)++]; \

842 if(!
	`UTF32_IS_SAFE
(
c
, 
°ri˘
)) { \

843 (
c
)=
UTF_ERROR_VALUE
; \

845 }

	)

848 
	#UTF32_APPEND_CHAR_SAFE
(
s
, 
i
, 
Àngth
, 
c
) { \

849 if((
uöt32_t
)(
c
)<=0x10ffff) { \

850 (
s
)[(
i
)++]=(
c
); \

852 (
s
)[(
i
)++]=0xfffd; \

854 }

	)

857 
	#UTF32_FWD_1_SAFE
(
s
, 
i
, 
Àngth
) { \

858 ++(
i
); \

859 }

	)

862 
	#UTF32_FWD_N_SAFE
(
s
, 
i
, 
Àngth
, 
n
) { \

863 if(((
i
)+=(
n
))>(
Àngth
)) { \

864 (
i
)=(
Àngth
); \

866 }

	)

869 
	#UTF32_SET_CHAR_START_SAFE
(
s
, 
°¨t
, 
i
) { \

870 }

	)

875 
	#UTF32_PREV_CHAR_UNSAFE
(
s
, 
i
, 
c
) { \

876 (
c
)=(
s
)[--(
i
)]; \

877 }

	)

880 
	#UTF32_BACK_1_UNSAFE
(
s
, 
i
) { \

881 --(
i
); \

882 }

	)

885 
	#UTF32_BACK_N_UNSAFE
(
s
, 
i
, 
n
) { \

886 (
i
)-=(
n
); \

887 }

	)

890 
	#UTF32_SET_CHAR_LIMIT_UNSAFE
(
s
, 
i
) { \

891 }

	)

894 
	#UTF32_PREV_CHAR_SAFE
(
s
, 
°¨t
, 
i
, 
c
, 
°ri˘
) { \

895 (
c
)=(
s
)[--(
i
)]; \

896 if(!
	`UTF32_IS_SAFE
(
c
, 
°ri˘
)) { \

897 (
c
)=
UTF_ERROR_VALUE
; \

899 }

	)

902 
	#UTF32_BACK_1_SAFE
(
s
, 
°¨t
, 
i
) { \

903 --(
i
); \

904 }

	)

907 
	#UTF32_BACK_N_SAFE
(
s
, 
°¨t
, 
i
, 
n
) { \

908 (
i
)-=(
n
); \

909 if((
i
)<(
°¨t
)) { \

910 (
i
)=(
°¨t
); \

912 }

	)

915 
	#UTF32_SET_CHAR_LIMIT_SAFE
(
s
, 
i
, 
Àngth
) { \

916 }

	)

925 
	#UTF_ARRAY_SIZE
(
size
Ë
	`UTF16_ARRAY_SIZE
(size)

	)

928 
	#UTF_GET_CHAR_UNSAFE
(
s
, 
i
, 
c
Ë
	`UTF16_GET_CHAR_UNSAFE
(s, i, c)

	)

931 
	#UTF_GET_CHAR_SAFE
(
s
, 
°¨t
, 
i
, 
Àngth
, 
c
, 
°ri˘
Ë
	`UTF16_GET_CHAR_SAFE
(s, sèπ, i,Üígth, c, såi˘)

	)

935 
	#UTF_NEXT_CHAR_UNSAFE
(
s
, 
i
, 
c
Ë
	`UTF16_NEXT_CHAR_UNSAFE
(s, i, c)

	)

938 
	#UTF_NEXT_CHAR_SAFE
(
s
, 
i
, 
Àngth
, 
c
, 
°ri˘
Ë
	`UTF16_NEXT_CHAR_SAFE
(s, i,Üígth, c, såi˘)

	)

942 
	#UTF_APPEND_CHAR_UNSAFE
(
s
, 
i
, 
c
Ë
	`UTF16_APPEND_CHAR_UNSAFE
(s, i, c)

	)

945 
	#UTF_APPEND_CHAR_SAFE
(
s
, 
i
, 
Àngth
, 
c
Ë
	`UTF16_APPEND_CHAR_SAFE
(s, i,Üígth, c)

	)

949 
	#UTF_FWD_1_UNSAFE
(
s
, 
i
Ë
	`UTF16_FWD_1_UNSAFE
(s, i)

	)

952 
	#UTF_FWD_1_SAFE
(
s
, 
i
, 
Àngth
Ë
	`UTF16_FWD_1_SAFE
(s, i,Üígth)

	)

956 
	#UTF_FWD_N_UNSAFE
(
s
, 
i
, 
n
Ë
	`UTF16_FWD_N_UNSAFE
(s, i,Ç)

	)

959 
	#UTF_FWD_N_SAFE
(
s
, 
i
, 
Àngth
, 
n
Ë
	`UTF16_FWD_N_SAFE
(s, i,Üígth,Ç)

	)

963 
	#UTF_SET_CHAR_START_UNSAFE
(
s
, 
i
Ë
	`UTF16_SET_CHAR_START_UNSAFE
(s, i)

	)

966 
	#UTF_SET_CHAR_START_SAFE
(
s
, 
°¨t
, 
i
Ë
	`UTF16_SET_CHAR_START_SAFE
(s, sèπ, i)

	)

970 
	#UTF_PREV_CHAR_UNSAFE
(
s
, 
i
, 
c
Ë
	`UTF16_PREV_CHAR_UNSAFE
(s, i, c)

	)

973 
	#UTF_PREV_CHAR_SAFE
(
s
, 
°¨t
, 
i
, 
c
, 
°ri˘
Ë
	`UTF16_PREV_CHAR_SAFE
(s, sèπ, i, c, såi˘)

	)

977 
	#UTF_BACK_1_UNSAFE
(
s
, 
i
Ë
	`UTF16_BACK_1_UNSAFE
(s, i)

	)

980 
	#UTF_BACK_1_SAFE
(
s
, 
°¨t
, 
i
Ë
	`UTF16_BACK_1_SAFE
(s, sèπ, i)

	)

984 
	#UTF_BACK_N_UNSAFE
(
s
, 
i
, 
n
Ë
	`UTF16_BACK_N_UNSAFE
(s, i,Ç)

	)

987 
	#UTF_BACK_N_SAFE
(
s
, 
°¨t
, 
i
, 
n
Ë
	`UTF16_BACK_N_SAFE
(s, sèπ, i,Ç)

	)

991 
	#UTF_SET_CHAR_LIMIT_UNSAFE
(
s
, 
i
Ë
	`UTF16_SET_CHAR_LIMIT_UNSAFE
(s, i)

	)

994 
	#UTF_SET_CHAR_LIMIT_SAFE
(
s
, 
°¨t
, 
i
, 
Àngth
Ë
	`UTF16_SET_CHAR_LIMIT_SAFE
(s, sèπ, i,Üígth)

	)

1003 
	#UTF_IS_SINGLE
(
uch¨
Ë
	`U16_IS_SINGLE
(uch¨)

	)

1010 
	#UTF_IS_LEAD
(
uch¨
Ë
	`U16_IS_LEAD
(uch¨)

	)

1017 
	#UTF_IS_TRAIL
(
uch¨
Ë
	`U16_IS_TRAIL
(uch¨)

	)

1024 
	#UTF_NEED_MULTIPLE_UCHAR
(
c
Ë
	`UTF16_NEED_MULTIPLE_UCHAR
(c)

	)

1031 
	#UTF_CHAR_LENGTH
(
c
Ë
	`U16_LENGTH
(c)

	)

1038 
	#UTF_MAX_CHAR_LENGTH
 
U16_MAX_LENGTH


	)

1049 
	#UTF_GET_CHAR
(
s
, 
°¨t
, 
i
, 
Àngth
, 
c
Ë
	`U16_GET
(s, sèπ, i,Üígth, c)

	)

1062 
	#UTF_NEXT_CHAR
(
s
, 
i
, 
Àngth
, 
c
Ë
	`U16_NEXT
(s, i,Üígth, c)

	)

1075 
	#UTF_APPEND_CHAR
(
s
, 
i
, 
Àngth
, 
c
Ë
	`UTF16_APPEND_CHAR_SAFE
(s, i,Üígth, c)

	)

1086 
	#UTF_FWD_1
(
s
, 
i
, 
Àngth
Ë
	`U16_FWD_1
(s, i,Üígth)

	)

1097 
	#UTF_FWD_N
(
s
, 
i
, 
Àngth
, 
n
Ë
	`U16_FWD_N
(s, i,Üígth,Ç)

	)

1113 
	#UTF_SET_CHAR_START
(
s
, 
°¨t
, 
i
Ë
	`U16_SET_CP_START
(s, sèπ, i)

	)

1126 
	#UTF_PREV_CHAR
(
s
, 
°¨t
, 
i
, 
c
Ë
	`U16_PREV
(s, sèπ, i, c)

	)

1139 
	#UTF_BACK_1
(
s
, 
°¨t
, 
i
Ë
	`U16_BACK_1
(s, sèπ, i)

	)

1152 
	#UTF_BACK_N
(
s
, 
°¨t
, 
i
, 
n
Ë
	`U16_BACK_N
(s, sèπ, i,Ç)

	)

1168 
	#UTF_SET_CHAR_LIMIT
(
s
, 
°¨t
, 
i
, 
Àngth
Ë
	`U16_SET_CP_LIMIT
(s, sèπ, i,Üígth)

	)

	@unicode/utrace.h

20 #i‚de‡
__UTRACE_H__


21 
	#__UTRACE_H__


	)

23 
	~<°d¨g.h
>

24 
	~"unicode/uty≥s.h
"

37 
U_CDECL_BEGIN


44 
	eUTø˚Levñ
 {

46 
	mUTRACE_OFF
=-1,

48 
	mUTRACE_ERROR
=0,

50 
	mUTRACE_WARNING
=3,

52 
	mUTRACE_OPEN_CLOSE
=5,

54 
	mUTRACE_INFO
=7,

56 
	mUTRACE_VERBOSE
=9

57 } 
	tUTø˚Levñ
;

63 
	eUTø˚Fun˘i⁄Numbî
 {

64 
	mUTRACE_FUNCTION_START
=0,

65 
	mUTRACE_U_INIT
=
UTRACE_FUNCTION_START
,

66 
	mUTRACE_U_CLEANUP
,

67 
	mUTRACE_FUNCTION_LIMIT
,

69 
	mUTRACE_CONVERSION_START
=0x1000,

70 
	mUTRACE_UCNV_OPEN
=
UTRACE_CONVERSION_START
,

71 
	mUTRACE_UCNV_OPEN_PACKAGE
,

72 
	mUTRACE_UCNV_OPEN_ALGORITHMIC
,

73 
	mUTRACE_UCNV_CLONE
,

74 
	mUTRACE_UCNV_CLOSE
,

75 
	mUTRACE_UCNV_FLUSH_CACHE
,

76 
	mUTRACE_UCNV_LOAD
,

77 
	mUTRACE_UCNV_UNLOAD
,

78 
	mUTRACE_CONVERSION_LIMIT
,

80 
	mUTRACE_COLLATION_START
=0x2000,

81 
	mUTRACE_UCOL_OPEN
=
UTRACE_COLLATION_START
,

82 
	mUTRACE_UCOL_CLOSE
,

83 
	mUTRACE_UCOL_STRCOLL
,

84 
	mUTRACE_UCOL_GET_SORTKEY
,

85 
	mUTRACE_UCOL_GETLOCALE
,

86 
	mUTRACE_UCOL_NEXTSORTKEYPART
,

87 
	mUTRACE_UCOL_STRCOLLITER
,

88 
	mUTRACE_UCOL_OPEN_FROM_SHORT_STRING
,

89 
	mUTRACE_COLLATION_LIMIT


90 } 
	tUTø˚Fun˘i⁄Numbî
;

97 
U_STABLE
 
U_EXPORT2


98 
uåa˚_£tLevñ
(
öt32_t
 
åa˚Levñ
);

105 
U_STABLE
 
öt32_t
 
U_EXPORT2


106 
uåa˚_gëLevñ
();

116 
	tU_CALLCONV


117 
	tUTø˚E¡ry
(c⁄° *
	tc⁄ãxt
, 
	töt32_t
 
	t‚Numbî
);

132 
	tU_CALLCONV


133 
	tUTø˚Exô
(c⁄° *
	tc⁄ãxt
, 
	töt32_t
 
	t‚Numbî
,

134 c⁄° *
	tfmt
, 
	tva_li°
 
	t¨gs
);

147 
	tU_CALLCONV


148 
	tUTø˚D©a
(c⁄° *
	tc⁄ãxt
, 
	töt32_t
 
	t‚Numbî
, i¡32_à
	tÀvñ
,

149 c⁄° *
	tfmt
, 
	tva_li°
 
	t¨gs
);

179 
U_STABLE
 
U_EXPORT2


180 
uåa˚_£tFun˘i⁄s
(c⁄° *
c⁄ãxt
,

181 
UTø˚E¡ry
 *
e
, 
UTø˚Exô
 *
x
, 
UTø˚D©a
 *
d
);

193 
U_STABLE
 
U_EXPORT2


194 
uåa˚_gëFun˘i⁄s
(c⁄° **
c⁄ãxt
,

195 
UTø˚E¡ry
 **
e
, 
UTø˚Exô
 **
x
, 
UTø˚D©a
 **
d
);

315 
U_STABLE
 
öt32_t
 
U_EXPORT2


316 
uåa˚_vf‹m©
(*
outBuf
, 
öt32_t
 
ˇ∑côy
,

317 
öt32_t
 
ödít
, c⁄° *
fmt
, 
va_li°
 
¨gs
);

336 
U_STABLE
 
öt32_t
 
U_EXPORT2


337 
uåa˚_f‹m©
(*
outBuf
, 
öt32_t
 
ˇ∑côy
,

338 
öt32_t
 
ödít
, c⁄° *
fmt
, ...);

353 
U_STABLE
 c⁄° * 
U_EXPORT2


354 
uåa˚_fun˘i⁄Name
(
öt32_t
 
‚Numbî
);

356 
	gU_CDECL_END


	@unicode/utypes.h

32 #i‚de‡
UTYPES_H


33 
	#UTYPES_H


	)

36 
	~"unicode/umachöe.h
"

37 
	~"unicode/utf.h
"

38 
	~"unicode/uvîsi⁄.h
"

39 
	~"unicode/uc⁄fig.h
"

56 #ifde‡
XP_CPLUSPLUS


57 #i‚de‡
U_SHOW_CPLUSPLUS_API


58 
	#U_SHOW_CPLUSPLUS_API
 1

	)

61 #unde‡
U_SHOW_CPLUSPLUS_API


62 
	#U_SHOW_CPLUSPLUS_API
 0

	)

71 #i‡!
U_DEFAULT_SHOW_DRAFT
 && !
deföed
(
U_SHOW_DRAFT_API
)

72 
	#U_HIDE_DRAFT_API
 1

	)

74 #i‡!
U_DEFAULT_SHOW_DRAFT
 && !
deföed
(
U_SHOW_INTERNAL_API
)

75 
	#U_HIDE_INTERNAL_API
 1

	)

78 #ifde‡
U_HIDE_DRAFT_API


79 
	~"unicode/udø·.h
"

82 #ifde‡
U_HIDE_DEPRECATED_API


83 
	~"unicode/udïr˘d.h
"

86 #ifde‡
U_HIDE_DEPRECATED_API


87 
	~"unicode/uob¶ëe.h
"

90 #ifde‡
U_HIDE_INTERNAL_API


91 
	~"unicode/uöå«l.h
"

94 #ifde‡
U_HIDE_SYSTEM_API


95 
	~"unicode/usy°em.h
"

109 
	#U_ASCII_FAMILY
 0

	)

115 
	#U_EBCDIC_FAMILY
 1

	)

160 #i‚de‡
U_CHARSET_FAMILY


161 
	#U_CHARSET_FAMILY
 0

	)

184 #i‚de‡
U_CHARSET_IS_UTF8


185 
	#U_CHARSET_IS_UTF8
 0

	)

208 #i‡
U_CHARSET_FAMILY


209 #i‡
U_IS_BIG_ENDIAN


211 
	#U_ICUDATA_TYPE_LETTER
 "e"

	)

212 
	#U_ICUDATA_TYPE_LITLETTER
 
e


	)

215 
	#U_ICUDATA_TYPE_LETTER
 "x"

	)

216 
	#U_ICUDATA_TYPE_LITLETTER
 
x


	)

219 #i‡
U_IS_BIG_ENDIAN


221 
	#U_ICUDATA_TYPE_LETTER
 "b"

	)

222 
	#U_ICUDATA_TYPE_LITLETTER
 
b


	)

225 
	#U_ICUDATA_TYPE_LETTER
 "l"

	)

226 
	#U_ICUDATA_TYPE_LITLETTER
 
l


	)

235 
	#U_ICUDATA_NAME
 "icudt" 
U_ICU_VERSION_SHORT
 
U_ICUDATA_TYPE_LETTER


	)

236 
	#U_USRDATA_NAME
 "u§dt" 
U_ICU_VERSION_SHORT
 
U_ICUDATA_TYPE_LETTER


	)

237 
	#U_USE_USRDATA
 1

	)

250 
	#U_ICUDATA_ENTRY_POINT
 
	`U_DEF2_ICUDATA_ENTRY_POINT
(
U_ICU_VERSION_MAJOR_NUM
, 
U_ICU_VERSION_MINOR_NUM
)

	)

256 
	#U_DEF2_ICUDATA_ENTRY_POINT
(
maj‹
, 
mö‹
Ë
	`U_DEF_ICUDATA_ENTRY_POINT
(maj‹, mö‹)

	)

261 #i‚de‡
U_DEF_ICUDATA_ENTRY_POINT


263 
	#U_DEF_ICUDATA_ENTRY_POINT
(
maj‹
, 
mö‹
Ë
icudt
##maj‹##mö‹##
_d©


	)

277 #i‡
deföed
(
OS390
Ë&& deföed(
XP_CPLUSPLUS
)

278 
	#U_CALLCONV
 
__cde˛


	)

280 
	#U_CALLCONV
 
U_EXPORT2


	)

288 #i‚de‡
NULL


289 #ifde‡
XP_CPLUSPLUS


290 
	#NULL
 0

	)

292 
	#NULL
 ((*)0)

	)

307 
	tUD©e
;

310 
	#U_MILLIS_PER_SECOND
 (1000)

	)

312 
	#U_MILLIS_PER_MINUTE
 (60000)

	)

314 
	#U_MILLIS_PER_HOUR
 (3600000)

	)

316 
	#U_MILLIS_PER_DAY
 (86400000)

	)

365 * 
	tUCœssID
;

434 #i‡
deföed
(
U_COMBINED_IMPLEMENTATION
)

435 
	#U_DATA_API
 
U_EXPORT


	)

436 
	#U_COMMON_API
 
U_EXPORT


	)

437 
	#U_I18N_API
 
U_EXPORT


	)

438 
	#U_LAYOUT_API
 
U_EXPORT


	)

439 
	#U_LAYOUTEX_API
 
U_EXPORT


	)

440 
	#U_IO_API
 
U_EXPORT


	)

441 
	#U_TOOLUTIL_API
 
U_EXPORT


	)

442 #ñi‡
deföed
(
U_STATIC_IMPLEMENTATION
)

443 
	#U_DATA_API


	)

444 
	#U_COMMON_API


	)

445 
	#U_I18N_API


	)

446 
	#U_LAYOUT_API


	)

447 
	#U_LAYOUTEX_API


	)

448 
	#U_IO_API


	)

449 
	#U_TOOLUTIL_API


	)

450 #ñi‡
deföed
(
U_COMMON_IMPLEMENTATION
)

451 
	#U_DATA_API
 
U_IMPORT


	)

452 
	#U_COMMON_API
 
U_EXPORT


	)

453 
	#U_I18N_API
 
U_IMPORT


	)

454 
	#U_LAYOUT_API
 
U_IMPORT


	)

455 
	#U_LAYOUTEX_API
 
U_IMPORT


	)

456 
	#U_IO_API
 
U_IMPORT


	)

457 
	#U_TOOLUTIL_API
 
U_IMPORT


	)

458 #ñi‡
deföed
(
U_I18N_IMPLEMENTATION
)

459 
	#U_DATA_API
 
U_IMPORT


	)

460 
	#U_COMMON_API
 
U_IMPORT


	)

461 
	#U_I18N_API
 
U_EXPORT


	)

462 
	#U_LAYOUT_API
 
U_IMPORT


	)

463 
	#U_LAYOUTEX_API
 
U_IMPORT


	)

464 
	#U_IO_API
 
U_IMPORT


	)

465 
	#U_TOOLUTIL_API
 
U_IMPORT


	)

466 #ñi‡
deföed
(
U_LAYOUT_IMPLEMENTATION
)

467 
	#U_DATA_API
 
U_IMPORT


	)

468 
	#U_COMMON_API
 
U_IMPORT


	)

469 
	#U_I18N_API
 
U_IMPORT


	)

470 
	#U_LAYOUT_API
 
U_EXPORT


	)

471 
	#U_LAYOUTEX_API
 
U_IMPORT


	)

472 
	#U_IO_API
 
U_IMPORT


	)

473 
	#U_TOOLUTIL_API
 
U_IMPORT


	)

474 #ñi‡
deföed
(
U_LAYOUTEX_IMPLEMENTATION
)

475 
	#U_DATA_API
 
U_IMPORT


	)

476 
	#U_COMMON_API
 
U_IMPORT


	)

477 
	#U_I18N_API
 
U_IMPORT


	)

478 
	#U_LAYOUT_API
 
U_IMPORT


	)

479 
	#U_LAYOUTEX_API
 
U_EXPORT


	)

480 
	#U_IO_API
 
U_IMPORT


	)

481 
	#U_TOOLUTIL_API
 
U_IMPORT


	)

482 #ñi‡
deföed
(
U_IO_IMPLEMENTATION
)

483 
	#U_DATA_API
 
U_IMPORT


	)

484 
	#U_COMMON_API
 
U_IMPORT


	)

485 
	#U_I18N_API
 
U_IMPORT


	)

486 
	#U_LAYOUT_API
 
U_IMPORT


	)

487 
	#U_LAYOUTEX_API
 
U_IMPORT


	)

488 
	#U_IO_API
 
U_EXPORT


	)

489 
	#U_TOOLUTIL_API
 
U_IMPORT


	)

490 #ñi‡
deföed
(
U_TOOLUTIL_IMPLEMENTATION
)

491 
	#U_DATA_API
 
U_IMPORT


	)

492 
	#U_COMMON_API
 
U_IMPORT


	)

493 
	#U_I18N_API
 
U_IMPORT


	)

494 
	#U_LAYOUT_API
 
U_IMPORT


	)

495 
	#U_LAYOUTEX_API
 
U_IMPORT


	)

496 
	#U_IO_API
 
U_IMPORT


	)

497 
	#U_TOOLUTIL_API
 
U_EXPORT


	)

499 
	#U_DATA_API
 
U_IMPORT


	)

500 
	#U_COMMON_API
 
U_IMPORT


	)

501 
	#U_I18N_API
 
U_IMPORT


	)

502 
	#U_LAYOUT_API
 
U_IMPORT


	)

503 
	#U_LAYOUTEX_API
 
U_IMPORT


	)

504 
	#U_IO_API
 
U_IMPORT


	)

505 
	#U_TOOLUTIL_API
 
U_IMPORT


	)

513 #ifde‡
__˝lu•lus


514 
	#U_STANDARD_CPP_NAMESPACE
 ::

	)

516 
	#U_STANDARD_CPP_NAMESPACE


	)

545 #i‡
deföed
(
XP_CPLUSPLUS
Ë&& deföed(
U_WINDOWS
Ë&& 
U_DEBUG
 && 
U_OVERRIDE_CXX_ALLOCATION
 && (
_MSC_VER
>=1200Ë&& !deföed(
U_STATIC_IMPLEMENTATION
Ë&& (deföed(
U_COMMON_IMPLEMENTATION
Ë|| deföed(
U_I18N_IMPLEMENTATION
Ë|| deföed(
U_IO_IMPLEMENTATION
Ë|| deföed(
U_LAYOUT_IMPLEMENTATION
Ë|| deföed(
U_LAYOUTEX_IMPLEMENTATION
))

547 #i‚de‡
U_HIDE_INTERNAL_API


553 
ölöe
 *

554 
›î©‹
 
	$√w
(
size_t
 ) {

555 *
q
=
NULL
;

556 *
q
=5;

557  
q
;

558 
	}
}

560 #ifde‡
_Rë_byãˇp_


562 
	$_Rë_byãˇp_
(
_Size
)

569 
ölöe
 *

570 
›î©‹
 
√w
[](
size_t
 ) {

571 *
q
=
NULL
;

572 *
q
=5;

573  
q
;

574 
	}
}

581 
ölöe
 

582 
›î©‹
 
	$dñëe
(* ) {

583 *
q
=
NULL
;

584 *
q
=5;

585 
	}
}

592 
ölöe
 

593 
›î©‹
 
	gdñëe
[](* ) {

594 *
	gq
=
NULL
;

595 *
	gq
=5;

619 
	eUEº‹Code
 {

625 
	mU_USING_FALLBACK_WARNING
 = -128,

627 
	mU_ERROR_WARNING_START
 = -128,

629 
	mU_USING_DEFAULT_WARNING
 = -127,

631 
	mU_SAFECLONE_ALLOCATED_WARNING
 = -126,

633 
	mU_STATE_OLD_WARNING
 = -125,

635 
	mU_STRING_NOT_TERMINATED_WARNING
 = -124,

637 
	mU_SORT_KEY_TOO_SHORT_WARNING
 = -123,

639 
	mU_AMBIGUOUS_ALIAS_WARNING
 = -122,

641 
	mU_DIFFERENT_UCA_VERSION
 = -121,

643 
	mU_PLUGIN_CHANGED_LEVEL_WARNING
 = -120,

645 
	mU_ERROR_WARNING_LIMIT
,

648 
	mU_ZERO_ERROR
 = 0,

650 
	mU_ILLEGAL_ARGUMENT_ERROR
 = 1,

651 
	mU_MISSING_RESOURCE_ERROR
 = 2,

652 
	mU_INVALID_FORMAT_ERROR
 = 3,

653 
	mU_FILE_ACCESS_ERROR
 = 4,

654 
	mU_INTERNAL_PROGRAM_ERROR
 = 5,

655 
	mU_MESSAGE_PARSE_ERROR
 = 6,

656 
	mU_MEMORY_ALLOCATION_ERROR
 = 7,

657 
	mU_INDEX_OUTOFBOUNDS_ERROR
 = 8,

658 
	mU_PARSE_ERROR
 = 9,

659 
	mU_INVALID_CHAR_FOUND
 = 10,

660 
	mU_TRUNCATED_CHAR_FOUND
 = 11,

661 
	mU_ILLEGAL_CHAR_FOUND
 = 12,

662 
	mU_INVALID_TABLE_FORMAT
 = 13,

663 
	mU_INVALID_TABLE_FILE
 = 14,

664 
	mU_BUFFER_OVERFLOW_ERROR
 = 15,

665 
	mU_UNSUPPORTED_ERROR
 = 16,

666 
	mU_RESOURCE_TYPE_MISMATCH
 = 17,

667 
	mU_ILLEGAL_ESCAPE_SEQUENCE
 = 18,

668 
	mU_UNSUPPORTED_ESCAPE_SEQUENCE
 = 19,

669 
	mU_NO_SPACE_AVAILABLE
 = 20,

670 
	mU_CE_NOT_FOUND_ERROR
 = 21,

671 
	mU_PRIMARY_TOO_LONG_ERROR
 = 22,

672 
	mU_STATE_TOO_OLD_ERROR
 = 23,

673 
	mU_TOO_MANY_ALIASES_ERROR
 = 24,

675 
	mU_ENUM_OUT_OF_SYNC_ERROR
 = 25,

676 
	mU_INVARIANT_CONVERSION_ERROR
 = 26,

677 
	mU_INVALID_STATE_ERROR
 = 27,

678 
	mU_COLLATOR_VERSION_MISMATCH
 = 28,

679 
	mU_USELESS_COLLATOR_ERROR
 = 29,

680 
	mU_NO_WRITE_PERMISSION
 = 30,

682 
	mU_STANDARD_ERROR_LIMIT
,

686 
	mU_BAD_VARIABLE_DEFINITION
=0x10000,

687 
	mU_PARSE_ERROR_START
 = 0x10000,

688 
	mU_MALFORMED_RULE
,

689 
	mU_MALFORMED_SET
,

690 
	mU_MALFORMED_SYMBOL_REFERENCE
,

691 
	mU_MALFORMED_UNICODE_ESCAPE
,

692 
	mU_MALFORMED_VARIABLE_DEFINITION
,

693 
	mU_MALFORMED_VARIABLE_REFERENCE
,

694 
	mU_MISMATCHED_SEGMENT_DELIMITERS
,

695 
	mU_MISPLACED_ANCHOR_START
,

696 
	mU_MISPLACED_CURSOR_OFFSET
,

697 
	mU_MISPLACED_QUANTIFIER
,

698 
	mU_MISSING_OPERATOR
,

699 
	mU_MISSING_SEGMENT_CLOSE
,

700 
	mU_MULTIPLE_ANTE_CONTEXTS
,

701 
	mU_MULTIPLE_CURSORS
,

702 
	mU_MULTIPLE_POST_CONTEXTS
,

703 
	mU_TRAILING_BACKSLASH
,

704 
	mU_UNDEFINED_SEGMENT_REFERENCE
,

705 
	mU_UNDEFINED_VARIABLE
,

706 
	mU_UNQUOTED_SPECIAL
,

707 
	mU_UNTERMINATED_QUOTE
,

708 
	mU_RULE_MASK_ERROR
,

709 
	mU_MISPLACED_COMPOUND_FILTER
,

710 
	mU_MULTIPLE_COMPOUND_FILTERS
,

711 
	mU_INVALID_RBT_SYNTAX
,

712 
	mU_INVALID_PROPERTY_PATTERN
,

713 
	mU_MALFORMED_PRAGMA
,

714 
	mU_UNCLOSED_SEGMENT
,

715 
	mU_ILLEGAL_CHAR_IN_SEGMENT
,

716 
	mU_VARIABLE_RANGE_EXHAUSTED
,

717 
	mU_VARIABLE_RANGE_OVERLAP
,

718 
	mU_ILLEGAL_CHARACTER
,

719 
	mU_INTERNAL_TRANSLITERATOR_ERROR
,

720 
	mU_INVALID_ID
,

721 
	mU_INVALID_FUNCTION
,

722 
	mU_PARSE_ERROR_LIMIT
,

727 
	mU_UNEXPECTED_TOKEN
=0x10100,

728 
	mU_FMT_PARSE_ERROR_START
=0x10100,

729 
	mU_MULTIPLE_DECIMAL_SEPARATORS
,

730 
	mU_MULTIPLE_DECIMAL_SEPERATORS
 = 
U_MULTIPLE_DECIMAL_SEPARATORS
,

731 
	mU_MULTIPLE_EXPONENTIAL_SYMBOLS
,

732 
	mU_MALFORMED_EXPONENTIAL_PATTERN
,

733 
	mU_MULTIPLE_PERCENT_SYMBOLS
,

734 
	mU_MULTIPLE_PERMILL_SYMBOLS
,

735 
	mU_MULTIPLE_PAD_SPECIFIERS
,

736 
	mU_PATTERN_SYNTAX_ERROR
,

737 
	mU_ILLEGAL_PAD_POSITION
,

738 
	mU_UNMATCHED_BRACES
,

739 
	mU_UNSUPPORTED_PROPERTY
,

740 
	mU_UNSUPPORTED_ATTRIBUTE
,

741 
	mU_ARGUMENT_TYPE_MISMATCH
,

742 
	mU_DUPLICATE_KEYWORD
,

743 
	mU_UNDEFINED_KEYWORD
,

744 
	mU_DEFAULT_KEYWORD_MISSING
,

745 
	mU_DECIMAL_NUMBER_SYNTAX_ERROR
,

746 
	mU_FMT_PARSE_ERROR_LIMIT
,

751 
	mU_BRK_INTERNAL_ERROR
=0x10200,

752 
	mU_BRK_ERROR_START
=0x10200,

753 
	mU_BRK_HEX_DIGITS_EXPECTED
,

754 
	mU_BRK_SEMICOLON_EXPECTED
,

755 
	mU_BRK_RULE_SYNTAX
,

756 
	mU_BRK_UNCLOSED_SET
,

757 
	mU_BRK_ASSIGN_ERROR
,

758 
	mU_BRK_VARIABLE_REDFINITION
,

759 
	mU_BRK_MISMATCHED_PAREN
,

760 
	mU_BRK_NEW_LINE_IN_QUOTED_STRING
,

761 
	mU_BRK_UNDEFINED_VARIABLE
,

762 
	mU_BRK_INIT_ERROR
,

763 
	mU_BRK_RULE_EMPTY_SET
,

764 
	mU_BRK_UNRECOGNIZED_OPTION
,

765 
	mU_BRK_MALFORMED_RULE_TAG
,

766 
	mU_BRK_ERROR_LIMIT
,

771 
	mU_REGEX_INTERNAL_ERROR
=0x10300,

772 
	mU_REGEX_ERROR_START
=0x10300,

773 
	mU_REGEX_RULE_SYNTAX
,

774 
	mU_REGEX_INVALID_STATE
,

775 
	mU_REGEX_BAD_ESCAPE_SEQUENCE
,

776 
	mU_REGEX_PROPERTY_SYNTAX
,

777 
	mU_REGEX_UNIMPLEMENTED
,

778 
	mU_REGEX_MISMATCHED_PAREN
,

779 
	mU_REGEX_NUMBER_TOO_BIG
,

780 
	mU_REGEX_BAD_INTERVAL
,

781 
	mU_REGEX_MAX_LT_MIN
,

782 
	mU_REGEX_INVALID_BACK_REF
,

783 
	mU_REGEX_INVALID_FLAG
,

784 
	mU_REGEX_LOOK_BEHIND_LIMIT
,

785 
	mU_REGEX_SET_CONTAINS_STRING
,

786 
	mU_REGEX_OCTAL_TOO_BIG
,

787 
	mU_REGEX_MISSING_CLOSE_BRACKET
,

788 
	mU_REGEX_INVALID_RANGE
,

789 
	mU_REGEX_STACK_OVERFLOW
,

790 
	mU_REGEX_TIME_OUT
,

791 
	mU_REGEX_STOPPED_BY_CALLER
,

792 
	mU_REGEX_ERROR_LIMIT
,

797 
	mU_IDNA_PROHIBITED_ERROR
=0x10400,

798 
	mU_IDNA_ERROR_START
=0x10400,

799 
	mU_IDNA_UNASSIGNED_ERROR
,

800 
	mU_IDNA_CHECK_BIDI_ERROR
,

801 
	mU_IDNA_STD3_ASCII_RULES_ERROR
,

802 
	mU_IDNA_ACE_PREFIX_ERROR
,

803 
	mU_IDNA_VERIFICATION_ERROR
,

804 
	mU_IDNA_LABEL_TOO_LONG_ERROR
,

805 
	mU_IDNA_ZERO_LENGTH_LABEL_ERROR
,

806 
	mU_IDNA_DOMAIN_NAME_TOO_LONG_ERROR
,

807 
	mU_IDNA_ERROR_LIMIT
,

811 
	mU_STRINGPREP_PROHIBITED_ERROR
 = 
U_IDNA_PROHIBITED_ERROR
,

812 
	mU_STRINGPREP_UNASSIGNED_ERROR
 = 
U_IDNA_UNASSIGNED_ERROR
,

813 
	mU_STRINGPREP_CHECK_BIDI_ERROR
 = 
U_IDNA_CHECK_BIDI_ERROR
,

818 
	mU_PLUGIN_ERROR_START
=0x10500,

819 
	mU_PLUGIN_TOO_HIGH
=0x10500,

820 
	mU_PLUGIN_DIDNT_SET_LEVEL
,

821 
	mU_PLUGIN_ERROR_LIMIT
,

823 
	mU_ERROR_LIMIT
=
U_PLUGIN_ERROR_LIMIT


824 } 
	tUEº‹Code
;

829 #ifde‡
XP_CPLUSPLUS


835 
ölöe
 
UBoﬁ
 
	$U_SUCCESS
(
UEº‹Code
 
code
Ë{  (
UBoﬁ
)(code<=
U_ZERO_ERROR
); 
	}
}

841 
ölöe
 
UBoﬁ
 
	$U_FAILURE
(
UEº‹Code
 
code
Ë{  (
UBoﬁ
)(code>
U_ZERO_ERROR
); 
	}
}

847 
	#U_SUCCESS
(
x
Ë((x)<=
U_ZERO_ERROR
)

	)

852 
	#U_FAILURE
(
x
Ë((x)>
U_ZERO_ERROR
)

	)

861 
U_STABLE
 c⁄° * 
U_EXPORT2


862 
u_îr‹Name
(
UEº‹Code
 
code
);

	@unicode/uvernum.h

37 #i‚de‡
UVERNUM_H


38 
	#UVERNUM_H


	)

44 
	#U_COPYRIGHT_STRING
 \

45 " C›yrighà(CË2010, I¡î«ti⁄Æ Busöes†Machöe†C‹p‹©i⁄ánd othîs. AŒ Right†Re£rved. "

	)

51 
	#U_ICU_VERSION_MAJOR_NUM
 4

	)

57 
	#U_ICU_VERSION_MINOR_NUM
 6

	)

63 
	#U_ICU_VERSION_PATCHLEVEL_NUM
 0

	)

69 #i‚de‡
U_ICU_VERSION_BUILDLEVEL_NUM


70 
	#U_ICU_VERSION_BUILDLEVEL_NUM
 0

	)

77 
	#U_ICU_VERSION_SUFFIX
 
_46


	)

85 #i‚de‡
U_ICU_ENTRY_POINT_RENAME


86 
	#U_ICU_ENTRY_POINT_RENAME
(
x
Ëx ## 
_46


	)

94 
	#U_ICU_VERSION
 "4.6"

	)

100 
	#U_ICU_VERSION_SHORT
 "46"

	)

105 
	#U_ICU_DATA_VERSION
 "4.6"

	)

125 
	#UCOL_RUNTIME_VERSION
 6

	)

142 
	#UCOL_BUILDER_VERSION
 8

	)

148 
	#UCOL_TAILORINGS_VERSION
 1

	)

	@unicode/uversion.h

25 #i‚de‡
UVERSION_H


26 
	#UVERSION_H


	)

28 
	~"unicode/umachöe.h
"

31 
	~"unicode/uvînum.h
"

36 
	#U_COPYRIGHT_STRING_LENGTH
 128

	)

41 
	#U_MAX_VERSION_LENGTH
 4

	)

46 
	#U_VERSION_DELIMITER
 '.'

	)

51 
	#U_MAX_VERSION_STRING_LENGTH
 20

	)

57 
uöt8_t
 
	tUVîsi⁄Info
[
U_MAX_VERSION_LENGTH
];

102 #ifde‡
XP_CPLUSPLUS


103 #i‡
U_HAVE_NAMESPACE


104 #i‡
U_DISABLE_RENAMING


105 
	#U_ICU_NAMESPACE
 
icu


	)

106 
«me•a˚
 
	gU_ICU_NAMESPACE
 { }

108 
	#U_ICU_NAMESPACE
 
	`U_ICU_ENTRY_POINT_RENAME
(
icu
)

	)

109 
«me•a˚
 
	gU_ICU_NAMESPACE
 { }

110 
«me•a˚
 
	gicu
 = 
U_ICU_NAMESPACE
;

113 
	#U_NAMESPACE_BEGIN
 "C++" { 
«me•a˚
 
U_ICU_NAMESPACE
 {

	)

114 
	#U_NAMESPACE_END
 } }

	)

115 
	#U_NAMESPACE_USE
 
usög
 
«me•a˚
 
U_ICU_NAMESPACE
;

	)

116 
	#U_NAMESPACE_QUALIFIER
 
U_ICU_NAMESPACE
::

	)

118 #i‚de‡
U_USING_ICU_NAMESPACE


119 
	#U_USING_ICU_NAMESPACE
 1

	)

121 #i‡
U_USING_ICU_NAMESPACE


122 
	gU_NAMESPACE_USE


125 
	#U_NAMESPACE_BEGIN
 "C++" {

	)

126 
	#U_NAMESPACE_END
 }

	)

127 
	#U_NAMESPACE_USE


	)

128 
	#U_NAMESPACE_QUALIFIER


	)

131 
	#U_NAMESPACE_BEGIN


	)

132 
	#U_NAMESPACE_END


	)

133 
	#U_NAMESPACE_USE


	)

134 
	#U_NAMESPACE_QUALIFIER


	)

152 
U_STABLE
 
U_EXPORT2


153 
u_vîsi⁄FromSåög
(
UVîsi⁄Info
 
vîsi⁄Aºay
, c⁄° *
vîsi⁄Såög
);

166 
U_STABLE
 
U_EXPORT2


167 
u_vîsi⁄FromUSåög
(
UVîsi⁄Info
 
vîsi⁄Aºay
, c⁄° 
UCh¨
 *
vîsi⁄Såög
);

182 
U_STABLE
 
U_EXPORT2


183 
u_vîsi⁄ToSåög
(
UVîsi⁄Info
 
vîsi⁄Aºay
, *
vîsi⁄Såög
);

193 
U_STABLE
 
U_EXPORT2


194 
u_gëVîsi⁄
(
UVîsi⁄Info
 
vîsi⁄Aºay
);

	@unifilt.cpp

11 
	~"unicode/unifût.h
"

12 
	~"unicode/ªp.h
"

14 
U_NAMESPACE_BEGIN


15 
	$UOBJECT_DEFINE_ABSTRACT_RTTI_IMPLEMENTATION
(
UnicodeFûãr
)

20 
UnicodeM©chî
::~
	$UnicodeM©chî
(Ë{
	}
}

22 
UnicodeFûãr
::~
	$UnicodeFûãr
(Ë{
	}
}

28 
UnicodeM©chî
* 
UnicodeFûãr
::
	$toM©chî
() const {

29  (
UnicodeM©chî
*Ë
this
;

30 
	}
}

32 
	gUnicodeFûãr
::
	$£tD©a
(c⁄° 
Tøn¶ôî©i⁄RuÀD©a
*Ë{
	}
}

39 
UM©chDegªe
 
UnicodeFûãr
::
	$m©ches
(c⁄° 
Rïœ˚abÀ
& 
ãxt
,

40 
öt32_t
& 
off£t
,

41 
öt32_t
 
limô
,

42 
UBoﬁ
 
ö¸emíèl
) {

43 
UCh¨32
 
c
;

44 i‡(
off£t
 < 
limô
 &&

45 
	`c⁄èös
(
c
 = 
ãxt
.
	`ch¨32At
(
off£t
))) {

46 
off£t
 +
	`UTF_CHAR_LENGTH
(
c
);

47  
U_MATCH
;

49 i‡(
off£t
 > 
limô
 &&

50 
	`c⁄èös
(
c
 = 
ãxt
.
	`ch¨32At
(
off£t
))) {

54 --
off£t
;

55 i‡(
off£t
 >= 0) {

56 
off£t
 -
	`UTF_CHAR_LENGTH
(
ãxt
.
	`ch¨32At
(offset)) - 1;

58  
U_MATCH
;

60 i‡(
ö¸emíèl
 && 
off£t
 =
limô
) {

61  
U_PARTIAL_MATCH
;

63  
U_MISMATCH
;

64 
	}
}

66 
	gU_NAMESPACE_END


	@unifunct.cpp

8 
	~"unicode/unifun˘.h
"

10 
U_NAMESPACE_BEGIN


12 
	$UOBJECT_DEFINE_ABSTRACT_RTTI_IMPLEMENTATION
(
UnicodeFun˘‹
)

14 
UnicodeFun˘‹
::~
	$UnicodeFun˘‹
(Ë{
	}
}

16 
UnicodeM©chî
* 
UnicodeFun˘‹
::
	$toM©chî
() const {

18 
	}
}

20 
UnicodeRïœ˚r
* 
	gUnicodeFun˘‹
::
	$toRïœ˚r
() const {

22 
	}
}

24 
	gU_NAMESPACE_END


	@uniset.cpp

11 
	~"unicode/uty≥s.h
"

12 
	~"unicode/uni£t.h
"

13 
	~"unicode/∑r£pos.h
"

14 
	~"unicode/symèbÀ.h
"

15 
	~"ruÀôî.h
"

16 
	~"cmem‹y.h
"

17 
	~"c°rög.h
"

18 
	~"uhash.h
"

19 
	~"utû.h
"

20 
	~"uve˘‹.h
"

21 
	~"ch¨°r.h
"

22 
	~"u°rfmt.h
"

23 
	~"uas£π.h
"

24 
	~"hash.h
"

25 
	~"bmp£t.h
"

26 
	~"uni£t•™.h
"

30 
	#SET_OPEN
 ((
UCh¨
)0x005BË

	)

31 
	#SET_CLOSE
 ((
UCh¨
)0x005DË

	)

32 
	#HYPHEN
 ((
UCh¨
)0x002DË

	)

33 
	#COMPLEMENT
 ((
UCh¨
)0x005EË

	)

34 
	#COLON
 ((
UCh¨
)0x003AË

	)

35 
	#BACKSLASH
 ((
UCh¨
)0x005CË

	)

36 
	#INTERSECTION
 ((
UCh¨
)0x0026Ë

	)

37 
	#UPPER_U
 ((
UCh¨
)0x0055Ë

	)

38 
	#LOWER_U
 ((
UCh¨
)0x0075Ë

	)

39 
	#OPEN_BRACE
 ((
UCh¨
)123Ë

	)

40 
	#CLOSE_BRACE
 ((
UCh¨
)125Ë

	)

41 
	#UPPER_P
 ((
UCh¨
)0x0050Ë

	)

42 
	#LOWER_P
 ((
UCh¨
)0x0070Ë

	)

43 
	#UPPER_N
 ((
UCh¨
)78Ë

	)

44 
	#EQUALS
 ((
UCh¨
)0x003DË

	)

47 
	#UNICODESET_HIGH
 0x0110000

	)

50 
	#UNICODESET_LOW
 0x000000

	)

53 
	#START_EXTRA
 16

	)

56 
	#GROW_EXTRA
 
START_EXTRA


	)

58 
U_NAMESPACE_BEGIN


60 
	gSymbﬁTabÀ
::~
	$SymbﬁTabÀ
(Ë{
	}
}

62 
	$UOBJECT_DEFINE_RTTI_IMPLEMENTATION
(
UnicodeSë
)

70 
ölöe
 
UCh¨32
 
	$pöCodePoöt
(
UCh¨32
& 
c
) {

71 i‡(
c
 < 
UNICODESET_LOW
) {

72 
c
 = 
UNICODESET_LOW
;

73 } i‡(
c
 > (
UNICODESET_HIGH
-1)) {

74 
c
 = (
UNICODESET_HIGH
-1);

76  
c
;

77 
	}
}

95 #ifde‡
DEBUG_MEM


96 
	~<°dio.h
>

97 
öt32_t
 
	g_dbgCou¡
 = 0;

99 
ölöe
 
	$_dbg˘
(
UnicodeSë
* 
£t
) {

100 
UnicodeSåög
 
°r
;

101 
£t
->
	`toP©ã∫
(
°r
, 
TRUE
);

102 
buf
[40];

103 
°r
.
	`exåa˘
(0, 39, 
buf
, "");

104 
	`¥ötf
("DEBUG UnicodeSë: cà0x%08X; %d %s\n", 
£t
, ++
_dbgCou¡
, 
buf
);

105 
	}
}

107 
ölöe
 
	$_dbgdt
(
UnicodeSë
* 
£t
) {

108 
UnicodeSåög
 
°r
;

109 
£t
->
	`toP©ã∫
(
°r
, 
TRUE
);

110 
buf
[40];

111 
°r
.
	`exåa˘
(0, 39, 
buf
, "");

112 
	`¥ötf
("DEBUG UnicodeSë: dà0x%08X; %d %s\n", 
£t
, --
_dbgCou¡
, 
buf
);

113 
	}
}

117 
	#_dbg˘
(
£t
)

	)

118 
	#_dbgdt
(
£t
)

	)

126 
U_CALLCONV
 
	$˛⁄eUnicodeSåög
(
UHashTok
 *
d°
, UHashTok *
§c
) {

127 
d°
->
poöãr
 = 
√w
 
	`UnicodeSåög
(*(
UnicodeSåög
*)
§c
->pointer);

128 
	}
}

130 
öt8_t
 
U_CALLCONV
 
	$com∑ªUnicodeSåög
(
UHashTok
 
t1
, UHashTok 
t2
) {

131 c⁄° 
UnicodeSåög
 &
a
 = *(c⁄° UnicodeSåög*)
t1
.
poöãr
;

132 c⁄° 
UnicodeSåög
 &
b
 = *(c⁄° UnicodeSåög*)
t2
.
poöãr
;

133  
a
.
	`com∑ª
(
b
);

134 
	}
}

143 
	gUnicodeSë
::
	$UnicodeSë
() :

144 
	`Àn
(1), 
	`ˇ∑côy
(1 + 
START_EXTRA
), 
	`li°
(0), 
	`bmpSë
(0), 
	`buf„r
(0),

145 
	`buf„rC≠acôy
(0), 
	`∑tLí
(0), 
	`∑t
(
NULL
), 
	`°rögs
(NULL), 
	`°rögS∑n
(NULL),

146 
	$fFœgs
(0)

148 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

149 
	`ÆloˇãSåögs
(
°©us
);

150 i‡(
	`U_FAILURE
(
°©us
)) {

153 
li°
 = (
UCh¨32
*Ë
	`u¥v_mÆloc
((UCh¨32Ë* 
ˇ∑côy
);

154 if(
li°
!=
NULL
){

155 
li°
[0] = 
UNICODESET_HIGH
;

157 
	`£tToBogus
();

160 
	`_dbg˘
(
this
);

161 
	}
}

170 
	gUnicodeSë
::
	$UnicodeSë
(
UCh¨32
 
°¨t
, UCh¨32 
íd
) :

171 
	`Àn
(1), 
	`ˇ∑côy
(1 + 
START_EXTRA
), 
	`li°
(0), 
	`bmpSë
(0), 
	`buf„r
(0),

172 
	`buf„rC≠acôy
(0), 
	`∑tLí
(0), 
	`∑t
(
NULL
), 
	`°rögs
(NULL), 
	`°rögS∑n
(NULL),

173 
	$fFœgs
(0)

175 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

176 
	`ÆloˇãSåögs
(
°©us
);

177 i‡(
	`U_FAILURE
(
°©us
)) {

180 
li°
 = (
UCh¨32
*Ë
	`u¥v_mÆloc
((UCh¨32Ë* 
ˇ∑côy
);

181 if(
li°
!=
NULL
){

182 
li°
[0] = 
UNICODESET_HIGH
;

183 
	`com∂emít
(
°¨t
, 
íd
);

185 
	`£tToBogus
();

188 
	`_dbg˘
(
this
);

189 
	}
}

194 
	gUnicodeSë
::
	$UnicodeSë
(c⁄° 
UnicodeSë
& 
o
) :

195 
	`UnicodeFûãr
(
o
),

196 
	`Àn
(0), 
	`ˇ∑côy
(
o
.
	`isFrozí
(Ë? o.
Àn
 : o.À¿+ 
GROW_EXTRA
), 
	`li°
(0),

197 
	`bmpSë
(0),

198 
	`buf„r
(0), 
	`buf„rC≠acôy
(0),

199 
	`∑tLí
(0), 
	`∑t
(
NULL
), 
	`°rögs
(NULL), 
	`°rögS∑n
(NULL),

200 
	$fFœgs
(0)

202 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

203 
	`ÆloˇãSåögs
(
°©us
);

204 i‡(
	`U_FAILURE
(
°©us
)) {

207 
li°
 = (
UCh¨32
*Ë
	`u¥v_mÆloc
((UCh¨32Ë* 
ˇ∑côy
);

208 if(
li°
!=
NULL
){

209 *
this
 = 
o
;

211 
	`£tToBogus
();

214 
	`_dbg˘
(
this
);

215 
	}
}

218 
	gUnicodeSë
::
	$UnicodeSë
(c⁄° 
UnicodeSë
& 
o
, 
UBoﬁ
 ) :

219 
	`UnicodeFûãr
(
o
),

220 
	`Àn
(0), 
	`ˇ∑côy
(
o
.
Àn
 + 
GROW_EXTRA
), 
	`li°
(0),

221 
	`bmpSë
(0),

222 
	`buf„r
(0), 
	`buf„rC≠acôy
(0),

223 
	`∑tLí
(0), 
	`∑t
(
NULL
), 
	`°rögs
(NULL), 
	`°rögS∑n
(NULL),

224 
	$fFœgs
(0)

226 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

227 
	`ÆloˇãSåögs
(
°©us
);

228 i‡(
	`U_FAILURE
(
°©us
)) {

231 
li°
 = (
UCh¨32
*Ë
	`u¥v_mÆloc
((UCh¨32Ë* 
ˇ∑côy
);

232 if(
li°
!=
NULL
){

234 
Àn
 = 
o
.len;

235 
	`u¥v_mem˝y
(
li°
, 
o
.li°, 
Àn
*(
UCh¨32
));

236 i‡(
°rögs
 !
NULL
 && 
o
.strings != NULL) {

237 
°rögs
->
	`assign
(*
o
.°rögs, 
˛⁄eUnicodeSåög
, 
°©us
);

239 
	`£tToBogus
();

242 i‡(
o
.
∑t
) {

243 
	`£tP©ã∫
(
	`UnicodeSåög
(
o
.
∑t
, o.
∑tLí
));

246 
	`£tToBogus
();

249 
	`_dbg˘
(
this
);

250 
	}
}

255 
	gUnicodeSë
::~
	$UnicodeSë
() {

256 
	`_dbgdt
(
this
);

257 
	`u¥v_‰ì
(
li°
);

258 
dñëe
 
bmpSë
;

259 i‡(
buf„r
) {

260 
	`u¥v_‰ì
(
buf„r
);

262 
dñëe
 
°rögs
;

263 
dñëe
 
°rögS∑n
;

264 
	`ªÀa£P©ã∫
();

265 
	}
}

270 
	gUnicodeSë
& UnicodeSë::
›î©‹
=(c⁄° 
UnicodeSë
& 
o
) {

271 i‡(
this
 =&
o
) {

272  *
this
;

274 i‡(
isFrozí
()) {

275  *
	gthis
;

277 i‡(
	go
.
isBogus
()) {

278 
£tToBogus
();

279  *
	gthis
;

281 
UEº‹Code
 
	gec
 = 
U_ZERO_ERROR
;

282 
ísuªC≠acôy
(
o
.
Àn
, 
ec
);

283 i‡(
U_FAILURE
(
ec
)) {

284  *
	gthis
;

286 
	gÀn
 = 
o
.
Àn
;

287 
u¥v_mem˝y
(
li°
, 
o
.li°, 
Àn
*(
UCh¨32
));

288 i‡(
	go
.
	gbmpSë
 =
NULL
) {

289 
bmpSë
 = 
NULL
;

291 
	gbmpSë
 = 
√w
 
BMPSë
(*
o
.
bmpSë
, 
li°
, 
Àn
);

292 i‡(
	gbmpSë
 =
NULL
) {

293 
£tToBogus
();

294  *
	gthis
;

297 i‡(
	g°rögs
 !
NULL
 && 
o
.
°rögs
 != NULL) {

298 
°rögs
->
assign
(*
o
.°rögs, 
˛⁄eUnicodeSåög
, 
ec
);

300 
£tToBogus
();

301  *
	gthis
;

303 i‡(
	go
.
	g°rögS∑n
 =
NULL
) {

304 
°rögS∑n
 = 
NULL
;

306 
	g°rögS∑n
 = 
√w
 
UnicodeSëSåögS∑n
(*
o
.
°rögS∑n
, *
°rögs
);

307 i‡(
	g°rögS∑n
 =
NULL
) {

308 
£tToBogus
();

309  *
	gthis
;

312 
ªÀa£P©ã∫
();

313 i‡(
	go
.
	g∑t
) {

314 
£tP©ã∫
(
UnicodeSåög
(
o
.
∑t
, o.
∑tLí
));

316  *
	gthis
;

324 
UnicodeFun˘‹
* 
	gUnicodeSë
::
	$˛⁄e
() const {

325  
√w
 
	`UnicodeSë
(*
this
);

326 
	}
}

328 
UnicodeFun˘‹
 *
	gUnicodeSë
::
	$˛⁄eAsThawed
() const {

329  
√w
 
	`UnicodeSë
(*
this
, 
TRUE
);

330 
	}
}

342 
UBoﬁ
 
	gUnicodeSë
::
›î©‹
==(c⁄° 
UnicodeSë
& 
o
) const {

343 i‡(
Àn
 !
o
.ÀnË 
FALSE
;

344 
öt32_t
 
	gi
 = 0; i < 
	gÀn
; ++i) {

345 i‡(
	gli°
[
i
] !
o
.
li°
[i]Ë 
FALSE
;

347 i‡(*
	g°rögs
 !*
o
.
°rögs
Ë 
FALSE
;

348  
	gTRUE
;

357 
öt32_t
 
	gUnicodeSë
::
	$hashCode
() const {

358 
öt32_t
 
ªsu…
 = 
Àn
;

359 
öt32_t
 
i
 = 0; i < 
Àn
; ++i) {

360 
ªsu…
 *= 1000003;

361 
ªsu…
 +
li°
[
i
];

363  
ªsu…
;

364 
	}
}

377 
öt32_t
 
	gUnicodeSë
::
	$size
() const {

378 
öt32_t
 
n
 = 0;

379 
öt32_t
 
cou¡
 = 
	`gëR™geCou¡
();

380 
öt32_t
 
i
 = 0; i < 
cou¡
; ++i) {

381 
n
 +
	`gëR™geEnd
(
i
Ë- 
	`gëR™geSèπ
(i) + 1;

383  
n
 + 
°rögs
->
	`size
();

384 
	}
}

391 
UBoﬁ
 
	gUnicodeSë
::
	$isEm±y
() const {

392  
Àn
 =1 && 
°rögs
->
	`size
() == 0;

393 
	}
}

400 
UBoﬁ
 
	gUnicodeSë
::
	$c⁄èös
(
UCh¨32
 
c
) const {

408 i‡(
bmpSë
 !
NULL
) {

409  
bmpSë
->
	`c⁄èös
(
c
);

411 i‡(
°rögS∑n
 !
NULL
) {

412  
°rögS∑n
->
	`c⁄èös
(
c
);

414 i‡(
c
 >
UNICODESET_HIGH
) {

415  
FALSE
;

417 
öt32_t
 
i
 = 
	`födCodePoöt
(
c
);

418  (
UBoﬁ
)(
i
 & 1);

419 
	}
}

430 
öt32_t
 
	gUnicodeSë
::
	$födCodePoöt
(
UCh¨32
 
c
) const {

443 i‡(
c
 < 
li°
[0])

447 
öt32_t
 
lo
 = 0;

448 
öt32_t
 
hi
 = 
Àn
 - 1;

449 i‡(
lo
 >
hi
 || 
c
 >
li°
[hi-1])

450  
hi
;

454 
öt32_t
 
i
 = (
lo
 + 
hi
) >> 1;

455 i‡(
i
 =
lo
) {

457 } i‡(
c
 < 
li°
[
i
]) {

458 
hi
 = 
i
;

460 
lo
 = 
i
;

463  
hi
;

464 
	}
}

473 
UBoﬁ
 
	gUnicodeSë
::
	$c⁄èös
(
UCh¨32
 
°¨t
, UCh¨32 
íd
) const {

478 
öt32_t
 
i
 = 
	`födCodePoöt
(
°¨t
);

479  ((
i
 & 1Ë!0 && 
íd
 < 
li°
[i]);

480 
	}
}

488 
UBoﬁ
 
	gUnicodeSë
::
	$c⁄èös
(c⁄° 
UnicodeSåög
& 
s
) const {

489 i‡(
s
.
	`Àngth
(Ë=0Ë 
FALSE
;

490 
öt32_t
 
˝
 = 
	`gëSögÀCP
(
s
);

491 i‡(
˝
 < 0) {

492  
°rögs
->
	`c⁄èös
((*Ë&
s
);

494  
	`c⁄èös
((
UCh¨32
Ë
˝
);

496 
	}
}

504 
UBoﬁ
 
	gUnicodeSë
::
	$c⁄èösAŒ
(c⁄° 
UnicodeSë
& 
c
) const {

508 
öt32_t
 
n
 = 
c
.
	`gëR™geCou¡
();

509 
i
=0; i<
n
; ++i) {

510 i‡(!
	`c⁄èös
(
c
.
	`gëR™geSèπ
(
i
), c.
	`gëR™geEnd
(i))) {

511  
FALSE
;

514 i‡(!
°rögs
->
	`c⁄èösAŒ
(*
c
.°rögs)Ë 
FALSE
;

515  
TRUE
;

516 
	}
}

524 
UBoﬁ
 
	gUnicodeSë
::
	$c⁄èösAŒ
(c⁄° 
UnicodeSåög
& 
s
) const {

525  (
UBoﬁ
)(
	`•™
(
s
.
	`gëBuf„r
(), s.
	`Àngth
(), 
USET_SPAN_CONTAINED
) ==

526 
s
.
	`Àngth
());

527 
	}
}

536 
UBoﬁ
 
	gUnicodeSë
::
	$c⁄èösN⁄e
(
UCh¨32
 
°¨t
, UCh¨32 
íd
) const {

541 
öt32_t
 
i
 = 
	`födCodePoöt
(
°¨t
);

542  ((
i
 & 1Ë=0 && 
íd
 < 
li°
[i]);

543 
	}
}

551 
UBoﬁ
 
	gUnicodeSë
::
	$c⁄èösN⁄e
(c⁄° 
UnicodeSë
& 
c
) const {

555 
öt32_t
 
n
 = 
c
.
	`gëR™geCou¡
();

556 
öt32_t
 
i
=0; i<
n
; ++i) {

557 i‡(!
	`c⁄èösN⁄e
(
c
.
	`gëR™geSèπ
(
i
), c.
	`gëR™geEnd
(i))) {

558  
FALSE
;

561 i‡(!
°rögs
->
	`c⁄èösN⁄e
(*
c
.°rögs)Ë 
FALSE
;

562  
TRUE
;

563 
	}
}

571 
UBoﬁ
 
	gUnicodeSë
::
	$c⁄èösN⁄e
(c⁄° 
UnicodeSåög
& 
s
) const {

572  (
UBoﬁ
)(
	`•™
(
s
.
	`gëBuf„r
(), s.
	`Àngth
(), 
USET_SPAN_NOT_CONTAINED
) ==

573 
s
.
	`Àngth
());

574 
	}
}

581 
UBoﬁ
 
	gUnicodeSë
::
	$m©chesIndexVÆue
(
uöt8_t
 
v
) const {

590 
öt32_t
 
i
;

591 
öt32_t
 
øngeCou¡
=
	`gëR™geCou¡
();

592 
i
=0; i<
øngeCou¡
; ++i) {

593 
UCh¨32
 
low
 = 
	`gëR™geSèπ
(
i
);

594 
UCh¨32
 
high
 = 
	`gëR™geEnd
(
i
);

595 i‡((
low
 & ~0xFFË=(
high
 & ~0xFF)) {

596 i‡((
low
 & 0xFFË<
v
 && v <(
high
 & 0xFF)) {

597  
TRUE
;

599 } i‡((
low
 & 0xFFË<
v
 || v <(
high
 & 0xFF)) {

600  
TRUE
;

603 i‡(
°rögs
->
	`size
() != 0) {

604 
i
=0; i<
°rögs
->
	`size
(); ++i) {

605 c⁄° 
UnicodeSåög
& 
s
 = *(c⁄° UnicodeSåög*)
°rögs
->
	`ñemítAt
(
i
);

611 
UCh¨32
 
c
 = 
s
.
	`ch¨32At
(0);

612 i‡((
c
 & 0xFFË=
v
) {

613  
TRUE
;

617  
FALSE
;

618 
	}
}

624 
UM©chDegªe
 
	gUnicodeSë
::
	$m©ches
(c⁄° 
Rïœ˚abÀ
& 
ãxt
,

625 
öt32_t
& 
off£t
,

626 
öt32_t
 
limô
,

627 
UBoﬁ
 
ö¸emíèl
) {

628 i‡(
off£t
 =
limô
) {

632 i‡(
	`c⁄èös
(
U_ETHER
)) {

633  
ö¸emíèl
 ? 
U_PARTIAL_MATCH
 : 
U_MATCH
;

635  
U_MISMATCH
;

638 i‡(
°rögs
->
	`size
() != 0) {

647 
öt32_t
 
i
;

648 
UBoﬁ
 
f‹w¨d
 = 
off£t
 < 
limô
;

653 
UCh¨
 
fú°Ch¨
 = 
ãxt
.
	`ch¨At
(
off£t
);

657 
öt32_t
 
highW©îLígth
 = 0;

659 
i
=0; i<
°rögs
->
	`size
(); ++i) {

660 c⁄° 
UnicodeSåög
& 
åül
 = *(c⁄° UnicodeSåög*)
°rögs
->
	`ñemítAt
(
i
);

667 
UCh¨
 
c
 = 
åül
.
	`ch¨At
(
f‹w¨d
 ? 0 :Årül.
	`Àngth
() - 1);

671 i‡(
f‹w¨d
 && 
c
 > 
fú°Ch¨
) ;

672 i‡(
c
 !
fú°Ch¨
) ;

674 
öt32_t
 
m©chLí
 = 
	`m©chRe°
(
ãxt
, 
off£t
, 
limô
, 
åül
);

676 i‡(
ö¸emíèl
) {

677 
öt32_t
 
maxLí
 = 
f‹w¨d
 ? 
limô
-
off£t
 : offset-limit;

678 i‡(
m©chLí
 =
maxLí
) {

680  
U_PARTIAL_MATCH
;

684 i‡(
m©chLí
 =
åül
.
	`Àngth
()) {

686 i‡(
m©chLí
 > 
highW©îLígth
) {

687 
highW©îLígth
 = 
m©chLí
;

691 i‡(
f‹w¨d
 && 
m©chLí
 < 
highW©îLígth
) {

700 i‡(
highW©îLígth
 != 0) {

701 
off£t
 +
f‹w¨d
 ? 
highW©îLígth
 : -highWaterLength;

702  
U_MATCH
;

705  
UnicodeFûãr
::
	`m©ches
(
ãxt
, 
off£t
, 
limô
, 
ö¸emíèl
);

707 
	}
}

730 
öt32_t
 
	gUnicodeSë
::
	$m©chRe°
(c⁄° 
Rïœ˚abÀ
& 
ãxt
,

731 
öt32_t
 
°¨t
, i¡32_à
limô
,

732 c⁄° 
UnicodeSåög
& 
s
) {

733 
öt32_t
 
i
;

734 
öt32_t
 
maxLí
;

735 
öt32_t
 
¶í
 = 
s
.
	`Àngth
();

736 i‡(
°¨t
 < 
limô
) {

737 
maxLí
 = 
limô
 - 
°¨t
;

738 i‡(
maxLí
 > 
¶í
) maxLen = slen;

739 
i
 = 1; i < 
maxLí
; ++i) {

740 i‡(
ãxt
.
	`ch¨At
(
°¨t
 + 
i
Ë!
s
.charAt(i))  0;

743 
maxLí
 = 
°¨t
 - 
limô
;

744 i‡(
maxLí
 > 
¶í
) maxLen = slen;

745 --
¶í
;

746 
i
 = 1; i < 
maxLí
; ++i) {

747 i‡(
ãxt
.
	`ch¨At
(
°¨t
 - 
i
Ë!
s
.ch¨At(
¶í
 - i))  0;

750  
maxLí
;

751 
	}
}

756 
	gUnicodeSë
::
	$addM©chSëTo
(
UnicodeSë
& 
toUni⁄To
) const {

757 
toUni⁄To
.
	`addAŒ
(*
this
);

758 
	}
}

767 
öt32_t
 
	gUnicodeSë
::
	$ödexOf
(
UCh¨32
 
c
) const {

768 i‡(
c
 < 
MIN_VALUE
 || c > 
MAX_VALUE
) {

771 
öt32_t
 
i
 = 0;

772 
öt32_t
 
n
 = 0;

774 
UCh¨32
 
°¨t
 = 
li°
[
i
++];

775 i‡(
c
 < 
°¨t
) {

778 
UCh¨32
 
limô
 = 
li°
[
i
++];

779 i‡(
c
 < 
limô
) {

780  
n
 + 
c
 - 
°¨t
;

782 
n
 +
limô
 - 
°¨t
;

784 
	}
}

794 
UCh¨32
 
	gUnicodeSë
::
	$ch¨At
(
öt32_t
 
ödex
) const {

795 i‡(
ödex
 >= 0) {

799 
öt32_t
 
Àn2
 = 
Àn
 & ~1;

800 
öt32_t
 
i
=0; i < 
Àn2
;) {

801 
UCh¨32
 
°¨t
 = 
li°
[
i
++];

802 
öt32_t
 
cou¡
 = 
li°
[
i
++] - 
°¨t
;

803 i‡(
ödex
 < 
cou¡
) {

804  (
UCh¨32
)(
°¨t
 + 
ödex
);

806 
ödex
 -
cou¡
;

809  (
UCh¨32
)-1;

810 
	}
}

820 
	gUnicodeSë
& UnicodeSë::
	$£t
(
UCh¨32
 
°¨t
, UCh¨32 
íd
) {

821 
	`˛ór
();

822 
	`com∂emít
(
°¨t
, 
íd
);

823  *
this
;

824 
	}
}

837 
	gUnicodeSë
& UnicodeSë::
	$add
(
UCh¨32
 
°¨t
, UCh¨32 
íd
) {

838 i‡(
	`pöCodePoöt
(
°¨t
Ë<ÖöCodePoöt(
íd
)) {

839 
UCh¨32
 
ønge
[3] = { 
°¨t
, 
íd
+1, 
UNICODESET_HIGH
 };

840 
	`add
(
ønge
, 2, 0);

841 } i‡(
°¨t
 =
íd
) {

842 
	`add
(
°¨t
);

844  *
this
;

845 
	}
}

849 #ifde‡
DEBUG_US_ADD


850 
	~<°dio.h
>

851 
	$dump
(
UCh¨32
 
c
) {

852 i‡(
c
 <= 0xFF) {

853 
	`¥ötf
("%c", ()
c
);

855 
	`¥ötf
("U+%04X", 
c
);

857 
	}
}

858 
	$dump
(c⁄° 
UCh¨32
* 
li°
, 
öt32_t
 
Àn
) {

859 
	`¥ötf
("[");

860 
öt32_t
 
i
=0; i<
Àn
; ++i) {

861 i‡(
i
 !0Ë
	`¥ötf
(", ");

862 
	`dump
(
li°
[
i
]);

864 
	`¥ötf
("]");

865 
	}
}

873 
	gUnicodeSë
& UnicodeSë::
	$add
(
UCh¨32
 
c
) {

877 
öt32_t
 
i
 = 
	`födCodePoöt
(
	`pöCodePoöt
(
c
));

880 i‡((
i
 & 1Ë!0 || 
	`isFrozí
(Ë|| 
	`isBogus
()Ë *
this
;

894 #ifde‡
DEBUG_US_ADD


895 
	`¥ötf
("Add of ");

896 
	`dump
(
c
);

897 
	`¥ötf
(" foundáà%d", 
i
);

898 
	`¥ötf
(": ");

899 
	`dump
(
li°
, 
Àn
);

900 
	`¥ötf
(" => ");

903 i‡(
c
 =
li°
[
i
]-1) {

905 
li°
[
i
] = 
c
;

907 i‡(
c
 =(
UNICODESET_HIGH
 - 1)) {

908 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

909 
	`ísuªC≠acôy
(
Àn
+1, 
°©us
);

910 i‡(
	`U_FAILURE
(
°©us
)) {

911  *
this
;

913 
li°
[
Àn
++] = 
UNICODESET_HIGH
;

915 i‡(
i
 > 0 && 
c
 =
li°
[i-1]) {

925 
UCh¨32
* 
d°
 = 
li°
 + 
i
 - 1;

926 
UCh¨32
* 
§c
 = 
d°
 + 2;

927 
UCh¨32
* 
§˛imô
 = 
li°
 + 
Àn
;

928 
§c
 < 
§˛imô
Ë*(
d°
++) = *(src++);

930 
Àn
 -= 2;

934 i‡(
i
 > 0 && 
c
 =
li°
[i-1]) {

936 
li°
[
i
-1]++;

953 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

954 
	`ísuªC≠acôy
(
Àn
+2, 
°©us
);

955 i‡(
	`U_FAILURE
(
°©us
)) {

956  *
this
;

962 
UCh¨32
* 
§c
 = 
li°
 + 
Àn
;

963 
UCh¨32
* 
d°
 = 
§c
 + 2;

964 
UCh¨32
* 
§˛imô
 = 
li°
 + 
i
;

965 
§c
 > 
§˛imô
Ë*(--
d°
) = *(--src);

967 
li°
[
i
] = 
c
;

968 
li°
[
i
+1] = 
c
+1;

969 
Àn
 += 2;

972 #ifde‡
DEBUG_US_ADD


973 
	`dump
(
li°
, 
Àn
);

974 
	`¥ötf
("\n");

976 
i
=1; i<
Àn
; ++i) {

977 i‡(
li°
[
i
] <=Üist[i-1]) {

979 
	`¥ötf
("ERROR:Üist has been corrupted\n");

980 
	`exô
(1);

985 
	`ªÀa£P©ã∫
();

986  *
this
;

987 
	}
}

998 
	gUnicodeSë
& UnicodeSë::
	$add
(c⁄° 
UnicodeSåög
& 
s
) {

999 i‡(
s
.
	`Àngth
(Ë=0 || 
	`isFrozí
(Ë|| 
	`isBogus
()Ë *
this
;

1000 
öt32_t
 
˝
 = 
	`gëSögÀCP
(
s
);

1001 i‡(
˝
 < 0) {

1002 i‡(!
°rögs
->
	`c⁄èös
((*Ë&
s
)) {

1003 
	`_add
(
s
);

1004 
	`ªÀa£P©ã∫
();

1007 
	`add
((
UCh¨32
)
˝
);

1009  *
this
;

1010 
	}
}

1017 
	gUnicodeSë
::
	$_add
(c⁄° 
UnicodeSåög
& 
s
) {

1018 i‡(
	`isFrozí
(Ë|| 
	`isBogus
()) {

1021 
UnicodeSåög
* 
t
 = 
√w
 
	`UnicodeSåög
(
s
);

1022 i‡(
t
 =
NULL
) {

1023 
	`£tToBogus
();

1026 
UEº‹Code
 
ec
 = 
U_ZERO_ERROR
;

1027 
°rögs
->
	`s‹ãdIn£π
(
t
, 
com∑ªUnicodeSåög
, 
ec
);

1028 i‡(
	`U_FAILURE
(
ec
)) {

1029 
	`£tToBogus
();

1030 
dñëe
 
t
;

1032 
	}
}

1039 
öt32_t
 
	gUnicodeSë
::
	$gëSögÀCP
(c⁄° 
UnicodeSåög
& 
s
) {

1043 i‡(
s
.
	`Àngth
() > 2)  -1;

1044 i‡(
s
.
	`Àngth
(Ë=1Ë s.
	`ch¨At
(0);

1047 
UCh¨32
 
˝
 = 
s
.
	`ch¨32At
(0);

1048 i‡(
˝
 > 0xFFFF) {

1049  
˝
;

1052 
	}
}

1060 
	gUnicodeSë
& UnicodeSë::
	$addAŒ
(c⁄° 
UnicodeSåög
& 
s
) {

1061 
UCh¨32
 
˝
;

1062 
öt32_t
 
i
 = 0; i < 
s
.
	`Àngth
(); i +
	`UTF_CHAR_LENGTH
(
˝
)) {

1063 
˝
 = 
s
.
	`ch¨32At
(
i
);

1064 
	`add
(
˝
);

1066  *
this
;

1067 
	}
}

1075 
	gUnicodeSë
& UnicodeSë::
	$ªèöAŒ
(c⁄° 
UnicodeSåög
& 
s
) {

1076 
UnicodeSë
 
£t
;

1077 
£t
.
	`addAŒ
(
s
);

1078 
	`ªèöAŒ
(
£t
);

1079  *
this
;

1080 
	}
}

1088 
	gUnicodeSë
& UnicodeSë::
	$com∂emítAŒ
(c⁄° 
UnicodeSåög
& 
s
) {

1089 
UnicodeSë
 
£t
;

1090 
£t
.
	`addAŒ
(
s
);

1091 
	`com∂emítAŒ
(
£t
);

1092  *
this
;

1093 
	}
}

1101 
	gUnicodeSë
& UnicodeSë::
	$ªmoveAŒ
(c⁄° 
UnicodeSåög
& 
s
) {

1102 
UnicodeSë
 
£t
;

1103 
£t
.
	`addAŒ
(
s
);

1104 
	`ªmoveAŒ
(
£t
);

1105  *
this
;

1106 
	}
}

1108 
	gUnicodeSë
& UnicodeSë::
	$ªmoveAŒSåögs
() {

1109 
°rögs
->
	`ªmoveAŒEÀmíts
();

1110  *
this
;

1111 
	}
}

1120 
UnicodeSë
* 
U_EXPORT2
 
	gUnicodeSë
::
	$¸óãFrom
(c⁄° 
UnicodeSåög
& 
s
) {

1121 
UnicodeSë
 *
£t
 = 
√w
 
	`UnicodeSë
();

1122 i‡(
£t
 !
NULL
) {

1123 
£t
->
	`add
(
s
);

1125  
£t
;

1126 
	}
}

1134 
UnicodeSë
* 
U_EXPORT2
 
	gUnicodeSë
::
	$¸óãFromAŒ
(c⁄° 
UnicodeSåög
& 
s
) {

1135 
UnicodeSë
 *
£t
 = 
√w
 
	`UnicodeSë
();

1136 i‡(
£t
 !
NULL
) {

1137 
£t
->
	`addAŒ
(
s
);

1139  
£t
;

1140 
	}
}

1152 
	gUnicodeSë
& UnicodeSë::
	$ªèö
(
UCh¨32
 
°¨t
, UCh¨32 
íd
) {

1153 i‡(
	`pöCodePoöt
(
°¨t
Ë<pöCodePoöt(
íd
)) {

1154 
UCh¨32
 
ønge
[3] = { 
°¨t
, 
íd
+1, 
UNICODESET_HIGH
 };

1155 
	`ªèö
(
ønge
, 2, 0);

1157 
	`˛ór
();

1159  *
this
;

1160 
	}
}

1162 
	gUnicodeSë
& UnicodeSë::
	$ªèö
(
UCh¨32
 
c
) {

1163  
	`ªèö
(
c
, c);

1164 
	}
}

1177 
	gUnicodeSë
& UnicodeSë::
	$ªmove
(
UCh¨32
 
°¨t
, UCh¨32 
íd
) {

1178 i‡(
	`pöCodePoöt
(
°¨t
Ë<pöCodePoöt(
íd
)) {

1179 
UCh¨32
 
ønge
[3] = { 
°¨t
, 
íd
+1, 
UNICODESET_HIGH
 };

1180 
	`ªèö
(
ønge
, 2, 2);

1182  *
this
;

1183 
	}
}

1190 
	gUnicodeSë
& UnicodeSë::
	$ªmove
(
UCh¨32
 
c
) {

1191  
	`ªmove
(
c
, c);

1192 
	}
}

1201 
	gUnicodeSë
& UnicodeSë::
	$ªmove
(c⁄° 
UnicodeSåög
& 
s
) {

1202 i‡(
s
.
	`Àngth
(Ë=0 || 
	`isFrozí
(Ë|| 
	`isBogus
()Ë *
this
;

1203 
öt32_t
 
˝
 = 
	`gëSögÀCP
(
s
);

1204 i‡(
˝
 < 0) {

1205 
°rögs
->
	`ªmoveEÀmít
((*Ë&
s
);

1206 
	`ªÀa£P©ã∫
();

1208 
	`ªmove
((
UCh¨32
)
˝
, (UChar32)cp);

1210  *
this
;

1211 
	}
}

1224 
	gUnicodeSë
& UnicodeSë::
	$com∂emít
(
UCh¨32
 
°¨t
, UCh¨32 
íd
) {

1225 i‡(
	`isFrozí
(Ë|| 
	`isBogus
()) {

1226  *
this
;

1228 i‡(
	`pöCodePoöt
(
°¨t
Ë<pöCodePoöt(
íd
)) {

1229 
UCh¨32
 
ønge
[3] = { 
°¨t
, 
íd
+1, 
UNICODESET_HIGH
 };

1230 
	`ex˛usiveOr
(
ønge
, 2, 0);

1232 
	`ªÀa£P©ã∫
();

1233  *
this
;

1234 
	}
}

1236 
	gUnicodeSë
& UnicodeSë::
	$com∂emít
(
UCh¨32
 
c
) {

1237  
	`com∂emít
(
c
, c);

1238 
	}
}

1244 
	gUnicodeSë
& UnicodeSë::
	$com∂emít
() {

1245 i‡(
	`isFrozí
(Ë|| 
	`isBogus
()) {

1246  *
this
;

1248 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

1249 i‡(
li°
[0] =
UNICODESET_LOW
) {

1250 
	`ísuªBuf„rC≠acôy
(
Àn
-1, 
°©us
);

1251 i‡(
	`U_FAILURE
(
°©us
)) {

1252  *
this
;

1254 
	`u¥v_mem˝y
(
buf„r
, 
li°
 + 1, (
Àn
-1)*(
UCh¨32
));

1255 --
Àn
;

1257 
	`ísuªBuf„rC≠acôy
(
Àn
+1, 
°©us
);

1258 i‡(
	`U_FAILURE
(
°©us
)) {

1259  *
this
;

1261 
	`u¥v_mem˝y
(
buf„r
 + 1, 
li°
, 
Àn
*(
UCh¨32
));

1262 
buf„r
[0] = 
UNICODESET_LOW
;

1263 ++
Àn
;

1265 
	`sw≠Buf„rs
();

1266 
	`ªÀa£P©ã∫
();

1267  *
this
;

1268 
	}
}

1278 
	gUnicodeSë
& UnicodeSë::
	$com∂emít
(c⁄° 
UnicodeSåög
& 
s
) {

1279 i‡(
s
.
	`Àngth
(Ë=0 || 
	`isFrozí
(Ë|| 
	`isBogus
()Ë *
this
;

1280 
öt32_t
 
˝
 = 
	`gëSögÀCP
(
s
);

1281 i‡(
˝
 < 0) {

1282 i‡(
°rögs
->
	`c⁄èös
((*Ë&
s
)) {

1283 
°rögs
->
	`ªmoveEÀmít
((*Ë&
s
);

1285 
	`_add
(
s
);

1287 
	`ªÀa£P©ã∫
();

1289 
	`com∂emít
((
UCh¨32
)
˝
, (UChar32)cp);

1291  *
this
;

1292 
	}
}

1304 
	gUnicodeSë
& UnicodeSë::
	$addAŒ
(c⁄° 
UnicodeSë
& 
c
) {

1305 i‡–
c
.
Àn
>0 && c.
li°
!=
NULL
 ) {

1306 
	`add
(
c
.
li°
, c.
Àn
, 0);

1310 i‡–
c
.
°rögs
!=
NULL
 ) {

1311 
öt32_t
 
i
=0; i<
c
.
°rögs
->
	`size
(); ++i) {

1312 c⁄° 
UnicodeSåög
* 
s
 = (c⁄° UnicodeSåög*)
c
.
°rögs
->
	`ñemítAt
(
i
);

1313 i‡(!
°rögs
->
	`c⁄èös
((*Ë
s
)) {

1314 
	`_add
(*
s
);

1318  *
this
;

1319 
	}
}

1330 
	gUnicodeSë
& UnicodeSë::
	$ªèöAŒ
(c⁄° 
UnicodeSë
& 
c
) {

1331 i‡(
	`isFrozí
(Ë|| 
	`isBogus
()) {

1332  *
this
;

1334 
	`ªèö
(
c
.
li°
, c.
Àn
, 0);

1335 
°rögs
->
	`ªèöAŒ
(*
c
.strings);

1336  *
this
;

1337 
	}
}

1348 
	gUnicodeSë
& UnicodeSë::
	$ªmoveAŒ
(c⁄° 
UnicodeSë
& 
c
) {

1349 i‡(
	`isFrozí
(Ë|| 
	`isBogus
()) {

1350  *
this
;

1352 
	`ªèö
(
c
.
li°
, c.
Àn
, 2);

1353 
°rögs
->
	`ªmoveAŒ
(*
c
.strings);

1354  *
this
;

1355 
	}
}

1365 
	gUnicodeSë
& UnicodeSë::
	$com∂emítAŒ
(c⁄° 
UnicodeSë
& 
c
) {

1366 i‡(
	`isFrozí
(Ë|| 
	`isBogus
()) {

1367  *
this
;

1369 
	`ex˛usiveOr
(
c
.
li°
, c.
Àn
, 0);

1371 
öt32_t
 
i
=0; i<
c
.
°rögs
->
	`size
(); ++i) {

1372 * 
e
 = 
c
.
°rögs
->
	`ñemítAt
(
i
);

1373 i‡(!
°rögs
->
	`ªmoveEÀmít
(
e
)) {

1374 
	`_add
(*(c⁄° 
UnicodeSåög
*)
e
);

1377  *
this
;

1378 
	}
}

1384 
	gUnicodeSë
& UnicodeSë::
	$˛ór
() {

1385 i‡(
	`isFrozí
()) {

1386  *
this
;

1388 i‡(
li°
 !
NULL
) {

1389 
li°
[0] = 
UNICODESET_HIGH
;

1391 
Àn
 = 1;

1392 
	`ªÀa£P©ã∫
();

1393 i‡(
°rögs
 !
NULL
) {

1394 
°rögs
->
	`ªmoveAŒEÀmíts
();

1396 i‡(
li°
 !
NULL
 && 
°rögs
 != NULL) {

1398 
fFœgs
 = 0;

1400  *
this
;

1401 
	}
}

1409 
öt32_t
 
	gUnicodeSë
::
	$gëR™geCou¡
() const {

1410  
Àn
/2;

1411 
	}
}

1419 
UCh¨32
 
	gUnicodeSë
::
	$gëR™geSèπ
(
öt32_t
 
ödex
) const {

1420  
li°
[
ödex
*2];

1421 
	}
}

1429 
UCh¨32
 
	gUnicodeSë
::
	$gëR™geEnd
(
öt32_t
 
ödex
) const {

1430  
li°
[
ödex
*2 + 1] - 1;

1431 
	}
}

1433 
öt32_t
 
	gUnicodeSë
::
	$gëSåögCou¡
() const {

1434  
°rögs
->
	`size
();

1435 
	}
}

1437 c⁄° 
UnicodeSåög
* 
	gUnicodeSë
::
	$gëSåög
(
öt32_t
 
ödex
) const {

1438  (c⁄° 
UnicodeSåög
*Ë
°rögs
->
	`ñemítAt
(
ödex
);

1439 
	}
}

1445 
	gUnicodeSë
& UnicodeSë::
	$com∑˘
() {

1446 i‡(
	`isFrozí
(Ë|| 
	`isBogus
()) {

1447  *
this
;

1450 i‡(
buf„r
 !
NULL
) {

1451 
	`u¥v_‰ì
(
buf„r
);

1452 
buf„r
 = 
NULL
;

1454 i‡(
Àn
 < 
ˇ∑côy
) {

1457 
öt32_t
 
√wC≠acôy
 = 
Àn
 + (len == 0);

1458 
UCh¨32
* 
ãmp
 = (UCh¨32*Ë
	`u¥v_ªÆloc
(
li°
, (UCh¨32Ë* 
√wC≠acôy
);

1459 i‡(
ãmp
) {

1460 
li°
 = 
ãmp
;

1461 
ˇ∑côy
 = 
√wC≠acôy
;

1466  *
this
;

1467 
	}
}

1469 
öt32_t
 
	gUnicodeSë
::
	$£rülize
(
uöt16_t
 *
de°
, 
öt32_t
 
de°C≠acôy
, 
UEº‹Code
& 
ec
) const {

1470 
öt32_t
 
bmpLígth
, 
Àngth
, 
de°Lígth
;

1472 i‡(
	`U_FAILURE
(
ec
)) {

1476 i‡(
de°C≠acôy
<0 || (de°C≠acôy>0 && 
de°
==
NULL
)) {

1477 
ec
=
U_ILLEGAL_ARGUMENT_ERROR
;

1482 
Àngth
=
this
->
Àn
-1;

1484 i‡(
Àngth
==0) {

1486 i‡(
de°C≠acôy
>0) {

1487 *
de°
=0;

1489 
ec
=
U_BUFFER_OVERFLOW_ERROR
;

1495 i‡(
this
->
li°
[
Àngth
-1]<=0xffff) {

1497 
bmpLígth
=
Àngth
;

1498 } i‡(
this
->
li°
[0]>=0x10000) {

1500 
bmpLígth
=0;

1501 
Àngth
*=2;

1504 
bmpLígth
=0; bmpLígth<
Àngth
 && 
this
->
li°
[bmpLength]<=0xffff; ++bmpLength) {}

1505 
Àngth
=
bmpLígth
+2*(length-bmpLength);

1509 i‡(
Àngth
>0x7fff) {

1511 
ec
=
U_INDEX_OUTOFBOUNDS_ERROR
;

1521 
de°Lígth
=
Àngth
+(÷ígth>
bmpLígth
)?2:1);

1522 i‡(
de°Lígth
<=
de°C≠acôy
) {

1523 c⁄° 
UCh¨32
 *
p
;

1524 
öt32_t
 
i
;

1526 *
de°
=(
uöt16_t
)
Àngth
;

1527 i‡(
Àngth
>
bmpLígth
) {

1528 *
de°
|=0x8000;

1529 *++
de°
=(
uöt16_t
)
bmpLígth
;

1531 ++
de°
;

1534 
p
=
this
->
li°
;

1535 
i
=0; i<
bmpLígth
; ++i) {

1536 *
de°
++=(
uöt16_t
)*
p
++;

1540 ; 
i
<
Àngth
; i+=2) {

1541 *
de°
++=(
uöt16_t
)(*
p
>>16);

1542 *
de°
++=(
uöt16_t
)*
p
++;

1545 
ec
=
U_BUFFER_OVERFLOW_ERROR
;

1547  
de°Lígth
;

1548 
	}
}

1557 
UBoﬁ
 
	gUnicodeSë
::
	$ÆloˇãSåögs
(
UEº‹Code
 &
°©us
) {

1558 i‡(
	`U_FAILURE
(
°©us
)) {

1559  
FALSE
;

1561 
°rögs
 = 
√w
 
	`UVe˘‹
(
uhash_dñëeUnicodeSåög
,

1562 
uhash_com∑ªUnicodeSåög
, 1, 
°©us
);

1563 i‡(
°rögs
 =
NULL
) {

1564 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

1565  
FALSE
;

1567 i‡(
	`U_FAILURE
(
°©us
)) {

1568 
dñëe
 
°rögs
;

1569 
°rögs
 = 
NULL
;

1570  
FALSE
;

1572  
TRUE
;

1573 
	}
}

1575 
	gUnicodeSë
::
	$ísuªC≠acôy
(
öt32_t
 
√wLí
, 
UEº‹Code
& 
ec
) {

1576 i‡(
√wLí
 <
ˇ∑côy
)

1578 
UCh¨32
* 
ãmp
 = (UCh¨32*Ë
	`u¥v_ªÆloc
(
li°
, (UCh¨32Ë* (
√wLí
 + 
GROW_EXTRA
));

1579 i‡(
ãmp
 =
NULL
) {

1580 
ec
 = 
U_MEMORY_ALLOCATION_ERROR
;

1581 
	`£tToBogus
();

1584 
li°
 = 
ãmp
;

1585 
ˇ∑côy
 = 
√wLí
 + 
GROW_EXTRA
;

1587 
	}
}

1589 
	gUnicodeSë
::
	$ísuªBuf„rC≠acôy
(
öt32_t
 
√wLí
, 
UEº‹Code
& 
ec
) {

1590 i‡(
buf„r
 !
NULL
 && 
√wLí
 <
buf„rC≠acôy
)

1592 
UCh¨32
* 
ãmp
 = (UCh¨32*Ë
	`u¥v_ªÆloc
(
buf„r
, (UCh¨32Ë* (
√wLí
 + 
GROW_EXTRA
));

1593 i‡(
ãmp
 =
NULL
) {

1594 
ec
 = 
U_MEMORY_ALLOCATION_ERROR
;

1595 
	`£tToBogus
();

1598 
buf„r
 = 
ãmp
;

1599 
buf„rC≠acôy
 = 
√wLí
 + 
GROW_EXTRA
;

1601 
	}
}

1606 
	gUnicodeSë
::
	$sw≠Buf„rs
() {

1608 
UCh¨32
* 
ãmp
 = 
li°
;

1609 
li°
 = 
buf„r
;

1610 
buf„r
 = 
ãmp
;

1612 
öt32_t
 
c
 = 
ˇ∑côy
;

1613 
ˇ∑côy
 = 
buf„rC≠acôy
;

1614 
buf„rC≠acôy
 = 
c
;

1615 
	}
}

1617 
	gUnicodeSë
::
	$£tToBogus
() {

1618 
	`˛ór
();

1619 
fFœgs
 = 
kIsBogus
;

1620 
	}
}

1626 
ölöe
 
UCh¨32
 
	$max
(
UCh¨32
 
a
, UCh¨32 
b
) {

1627  (
a
 > 
b
) ?á : b;

1628 
	}
}

1633 
	gUnicodeSë
::
	$ex˛usiveOr
(c⁄° 
UCh¨32
* 
Ÿhî
, 
öt32_t
 
ŸhîLí
, 
öt8_t
 
pﬁ¨ôy
) {

1634 i‡(
	`isFrozí
(Ë|| 
	`isBogus
()) {

1637 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

1638 
	`ísuªBuf„rC≠acôy
(
Àn
 + 
ŸhîLí
, 
°©us
);

1639 i‡(
	`U_FAILURE
(
°©us
)) {

1643 
öt32_t
 
i
 = 0, 
j
 = 0, 
k
 = 0;

1644 
UCh¨32
 
a
 = 
li°
[
i
++];

1645 
UCh¨32
 
b
;

1646 i‡(
pﬁ¨ôy
 == 1 ||Öolarity == 2) {

1647 
b
 = 
UNICODESET_LOW
;

1648 i‡(
Ÿhî
[
j
] =
UNICODESET_LOW
) {

1649 ++
j
;

1650 
b
 = 
Ÿhî
[
j
];

1653 
b
 = 
Ÿhî
[
j
++];

1658 i‡(
a
 < 
b
) {

1659 
buf„r
[
k
++] = 
a
;

1660 
a
 = 
li°
[
i
++];

1661 } i‡(
b
 < 
a
) {

1662 
buf„r
[
k
++] = 
b
;

1663 
b
 = 
Ÿhî
[
j
++];

1664 } i‡(
a
 !
UNICODESET_HIGH
) {

1666 
a
 = 
li°
[
i
++];

1667 
b
 = 
Ÿhî
[
j
++];

1669 
buf„r
[
k
++] = 
UNICODESET_HIGH
;

1670 
Àn
 = 
k
;

1674 
	`sw≠Buf„rs
();

1675 
	`ªÀa£P©ã∫
();

1676 
	}
}

1683 
	gUnicodeSë
::
	$add
(c⁄° 
UCh¨32
* 
Ÿhî
, 
öt32_t
 
ŸhîLí
, 
öt8_t
 
pﬁ¨ôy
) {

1684 i‡(
	`isFrozí
(Ë|| 
	`isBogus
(Ë|| 
Ÿhî
==
NULL
) {

1687 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

1688 
	`ísuªBuf„rC≠acôy
(
Àn
 + 
ŸhîLí
, 
°©us
);

1689 i‡(
	`U_FAILURE
(
°©us
)) {

1693 
öt32_t
 
i
 = 0, 
j
 = 0, 
k
 = 0;

1694 
UCh¨32
 
a
 = 
li°
[
i
++];

1695 
UCh¨32
 
b
 = 
Ÿhî
[
j
++];

1699 
pﬁ¨ôy
) {

1701 i‡(
a
 < 
b
) {

1703 i‡(
k
 > 0 && 
a
 <
buf„r
[k-1]) {

1705 
a
 = 
	`max
(
li°
[
i
], 
buf„r
[--
k
]);

1708 
buf„r
[
k
++] = 
a
;

1709 
a
 = 
li°
[
i
];

1711 
i
++;

1712 
pﬁ¨ôy
 ^= 1;

1713 } i‡(
b
 < 
a
) {

1714 i‡(
k
 > 0 && 
b
 <
buf„r
[k-1]) {

1715 
b
 = 
	`max
(
Ÿhî
[
j
], 
buf„r
[--
k
]);

1717 
buf„r
[
k
++] = 
b
;

1718 
b
 = 
Ÿhî
[
j
];

1720 
j
++;

1721 
pﬁ¨ôy
 ^= 2;

1723 i‡(
a
 =
UNICODESET_HIGH
Ë
lo›_íd
;

1726 i‡(
k
 > 0 && 
a
 <
buf„r
[k-1]) {

1727 
a
 = 
	`max
(
li°
[
i
], 
buf„r
[--
k
]);

1730 
buf„r
[
k
++] = 
a
;

1731 
a
 = 
li°
[
i
];

1733 
i
++;

1734 
pﬁ¨ôy
 ^= 1;

1735 
b
 = 
Ÿhî
[
j
++];

1736 
pﬁ¨ôy
 ^= 2;

1740 i‡(
b
 <
a
) {

1741 i‡(
a
 =
UNICODESET_HIGH
Ë
lo›_íd
;

1742 
buf„r
[
k
++] = 
a
;

1744 i‡(
b
 =
UNICODESET_HIGH
Ë
lo›_íd
;

1745 
buf„r
[
k
++] = 
b
;

1747 
a
 = 
li°
[
i
++];

1748 
pﬁ¨ôy
 ^= 1;

1749 
b
 = 
Ÿhî
[
j
++];

1750 
pﬁ¨ôy
 ^= 2;

1753 i‡(
a
 < 
b
) {

1754 
buf„r
[
k
++] = 
a
;á = 
li°
[
i
++]; 
pﬁ¨ôy
 ^= 1;

1755 } i‡(
b
 < 
a
) {

1756 
b
 = 
Ÿhî
[
j
++];

1757 
pﬁ¨ôy
 ^= 2;

1759 i‡(
a
 =
UNICODESET_HIGH
Ë
lo›_íd
;

1760 
a
 = 
li°
[
i
++];

1761 
pﬁ¨ôy
 ^= 1;

1762 
b
 = 
Ÿhî
[
j
++];

1763 
pﬁ¨ôy
 ^= 2;

1767 i‡(
b
 < 
a
) {

1768 
buf„r
[
k
++] = 
b
;

1769 
b
 = 
Ÿhî
[
j
++];

1770 
pﬁ¨ôy
 ^= 2;

1771 } i‡(
a
 < 
b
) {

1772 
a
 = 
li°
[
i
++];

1773 
pﬁ¨ôy
 ^= 1;

1775 i‡(
a
 =
UNICODESET_HIGH
Ë
lo›_íd
;

1776 
a
 = 
li°
[
i
++];

1777 
pﬁ¨ôy
 ^= 1;

1778 
b
 = 
Ÿhî
[
j
++];

1779 
pﬁ¨ôy
 ^= 2;

1784 
lo›_íd
:

1785 
buf„r
[
k
++] = 
UNICODESET_HIGH
;

1786 
Àn
 = 
k
;

1787 
	`sw≠Buf„rs
();

1788 
	`ªÀa£P©ã∫
();

1789 
	}
}

1796 
	gUnicodeSë
::
	$ªèö
(c⁄° 
UCh¨32
* 
Ÿhî
, 
öt32_t
 
ŸhîLí
, 
öt8_t
 
pﬁ¨ôy
) {

1797 i‡(
	`isFrozí
(Ë|| 
	`isBogus
()) {

1800 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

1801 
	`ísuªBuf„rC≠acôy
(
Àn
 + 
ŸhîLí
, 
°©us
);

1802 i‡(
	`U_FAILURE
(
°©us
)) {

1806 
öt32_t
 
i
 = 0, 
j
 = 0, 
k
 = 0;

1807 
UCh¨32
 
a
 = 
li°
[
i
++];

1808 
UCh¨32
 
b
 = 
Ÿhî
[
j
++];

1812 
pﬁ¨ôy
) {

1814 i‡(
a
 < 
b
) {

1815 
a
 = 
li°
[
i
++];

1816 
pﬁ¨ôy
 ^= 1;

1817 } i‡(
b
 < 
a
) {

1818 
b
 = 
Ÿhî
[
j
++];

1819 
pﬁ¨ôy
 ^= 2;

1821 i‡(
a
 =
UNICODESET_HIGH
Ë
lo›_íd
;

1822 
buf„r
[
k
++] = 
a
;

1823 
a
 = 
li°
[
i
++];

1824 
pﬁ¨ôy
 ^= 1;

1825 
b
 = 
Ÿhî
[
j
++];

1826 
pﬁ¨ôy
 ^= 2;

1830 i‡(
a
 < 
b
) {

1831 
buf„r
[
k
++] = 
a
;

1832 
a
 = 
li°
[
i
++];

1833 
pﬁ¨ôy
 ^= 1;

1834 } i‡(
b
 < 
a
) {

1835 
buf„r
[
k
++] = 
b
;

1836 
b
 = 
Ÿhî
[
j
++];

1837 
pﬁ¨ôy
 ^= 2;

1839 i‡(
a
 =
UNICODESET_HIGH
Ë
lo›_íd
;

1840 
buf„r
[
k
++] = 
a
;

1841 
a
 = 
li°
[
i
++];

1842 
pﬁ¨ôy
 ^= 1;

1843 
b
 = 
Ÿhî
[
j
++];

1844 
pﬁ¨ôy
 ^= 2;

1848 i‡(
a
 < 
b
) {

1849 
a
 = 
li°
[
i
++];

1850 
pﬁ¨ôy
 ^= 1;

1851 } i‡(
b
 < 
a
) {

1852 
buf„r
[
k
++] = 
b
;

1853 
b
 = 
Ÿhî
[
j
++];

1854 
pﬁ¨ôy
 ^= 2;

1856 i‡(
a
 =
UNICODESET_HIGH
Ë
lo›_íd
;

1857 
a
 = 
li°
[
i
++];

1858 
pﬁ¨ôy
 ^= 1;

1859 
b
 = 
Ÿhî
[
j
++];

1860 
pﬁ¨ôy
 ^= 2;

1864 i‡(
b
 < 
a
) {

1865 
b
 = 
Ÿhî
[
j
++];

1866 
pﬁ¨ôy
 ^= 2;

1867 } i‡(
a
 < 
b
) {

1868 
buf„r
[
k
++] = 
a
;

1869 
a
 = 
li°
[
i
++];

1870 
pﬁ¨ôy
 ^= 1;

1872 i‡(
a
 =
UNICODESET_HIGH
Ë
lo›_íd
;

1873 
a
 = 
li°
[
i
++];

1874 
pﬁ¨ôy
 ^= 1;

1875 
b
 = 
Ÿhî
[
j
++];

1876 
pﬁ¨ôy
 ^= 2;

1881 
lo›_íd
:

1882 
buf„r
[
k
++] = 
UNICODESET_HIGH
;

1883 
Àn
 = 
k
;

1884 
	`sw≠Buf„rs
();

1885 
	`ªÀa£P©ã∫
();

1886 
	}
}

1892 
	gUnicodeSë
::
	$_≠≥ndToP©
(
UnicodeSåög
& 
buf
, c⁄° UnicodeSåög& 
s
, 
UBoﬁ


1893 
esˇ≥U≈röèbÀ
) {

1894 
UCh¨32
 
˝
;

1895 
öt32_t
 
i
 = 0; i < 
s
.
	`Àngth
(); i +
	`UTF_CHAR_LENGTH
(
˝
)) {

1896 
	`_≠≥ndToP©
(
buf
, 
˝
 = 
s
.
	`ch¨32At
(
i
), 
esˇ≥U≈röèbÀ
);

1898 
	}
}

1904 
	gUnicodeSë
::
	$_≠≥ndToP©
(
UnicodeSåög
& 
buf
, 
UCh¨32
 
c
, 
UBoﬁ


1905 
esˇ≥U≈röèbÀ
) {

1906 i‡(
esˇ≥U≈röèbÀ
 && 
ICU_Utûôy
::
	`isU≈röèbÀ
(
c
)) {

1909 i‡(
ICU_Utûôy
::
	`esˇ≥U≈röèbÀ
(
buf
, 
c
)) {

1914 
c
) {

1915 
SET_OPEN
:

1916 
SET_CLOSE
:

1917 
HYPHEN
:

1918 
COMPLEMENT
:

1919 
INTERSECTION
:

1920 
BACKSLASH
:

1921 
OPEN_BRACE
:

1922 
CLOSE_BRACE
:

1923 
COLON
:

1924 
SymbﬁTabÀ
::
SYMBOL_REF
:

1925 
buf
.
	`≠≥nd
(
BACKSLASH
);

1929 i‡(
	`u¥v_isRuÀWhôeS∑˚
(
c
)) {

1930 
buf
.
	`≠≥nd
(
BACKSLASH
);

1934 
buf
.
	`≠≥nd
(
c
);

1935 
	}
}

1942 
	gUnicodeSåög
& 
	gUnicodeSë
::
	$_toP©ã∫
(
UnicodeSåög
& 
ªsu…
,

1943 
UBoﬁ
 
esˇ≥U≈röèbÀ
) const

1945 i‡(
∑t
 !
NULL
) {

1946 
öt32_t
 
i
;

1947 
öt32_t
 
back¶ashCou¡
 = 0;

1948 
i
=0; i<
∑tLí
; ) {

1949 
UCh¨32
 
c
;

1950 
	`U16_NEXT
(
∑t
, 
i
, 
∑tLí
, 
c
);

1951 i‡(
esˇ≥U≈röèbÀ
 && 
ICU_Utûôy
::
	`isU≈röèbÀ
(
c
)) {

1956 i‡((
back¶ashCou¡
 % 2) == 1) {

1957 
ªsu…
.
	`åunˇã
‘esu….
	`Àngth
() - 1);

1959 
ICU_Utûôy
::
	`esˇ≥U≈röèbÀ
(
ªsu…
, 
c
);

1960 
back¶ashCou¡
 = 0;

1962 
ªsu…
.
	`≠≥nd
(
c
);

1963 i‡(
c
 =
BACKSLASH
) {

1964 ++
back¶ashCou¡
;

1966 
back¶ashCou¡
 = 0;

1970  
ªsu…
;

1973  
	`_gíî©eP©ã∫
(
ªsu…
, 
esˇ≥U≈röèbÀ
);

1974 
	}
}

1981 
	gUnicodeSåög
& 
	gUnicodeSë
::
	$toP©ã∫
(
UnicodeSåög
& 
ªsu…
,

1982 
UBoﬁ
 
esˇ≥U≈röèbÀ
) const

1984 
ªsu…
.
	`åunˇã
(0);

1985  
	`_toP©ã∫
(
ªsu…
, 
esˇ≥U≈röèbÀ
);

1986 
	}
}

1993 
	gUnicodeSåög
& 
	gUnicodeSë
::
	$_gíî©eP©ã∫
(
UnicodeSåög
& 
ªsu…
,

1994 
UBoﬁ
 
esˇ≥U≈röèbÀ
) const

1996 
ªsu…
.
	`≠≥nd
(
SET_OPEN
);

2008 
öt32_t
 
cou¡
 = 
	`gëR™geCou¡
();

2013 i‡(
cou¡
 > 1 &&

2014 
	`gëR™geSèπ
(0Ë=
MIN_VALUE
 &&

2015 
	`gëR™geEnd
(
cou¡
-1Ë=
MAX_VALUE
) {

2018 
ªsu…
.
	`≠≥nd
(
COMPLEMENT
);

2020 
öt32_t
 
i
 = 1; i < 
cou¡
; ++i) {

2021 
UCh¨32
 
°¨t
 = 
	`gëR™geEnd
(
i
-1)+1;

2022 
UCh¨32
 
íd
 = 
	`gëR™geSèπ
(
i
)-1;

2023 
	`_≠≥ndToP©
(
ªsu…
, 
°¨t
, 
esˇ≥U≈röèbÀ
);

2024 i‡(
°¨t
 !
íd
) {

2025 i‡((
°¨t
+1Ë!
íd
) {

2026 
ªsu…
.
	`≠≥nd
(
HYPHEN
);

2028 
	`_≠≥ndToP©
(
ªsu…
, 
íd
, 
esˇ≥U≈röèbÀ
);

2035 
öt32_t
 
i
 = 0; i < 
cou¡
; ++i) {

2036 
UCh¨32
 
°¨t
 = 
	`gëR™geSèπ
(
i
);

2037 
UCh¨32
 
íd
 = 
	`gëR™geEnd
(
i
);

2038 
	`_≠≥ndToP©
(
ªsu…
, 
°¨t
, 
esˇ≥U≈röèbÀ
);

2039 i‡(
°¨t
 !
íd
) {

2040 i‡((
°¨t
+1Ë!
íd
) {

2041 
ªsu…
.
	`≠≥nd
(
HYPHEN
);

2043 
	`_≠≥ndToP©
(
ªsu…
, 
íd
, 
esˇ≥U≈röèbÀ
);

2048 
öt32_t
 
i
 = 0; i<
°rögs
->
	`size
(); ++i) {

2049 
ªsu…
.
	`≠≥nd
(
OPEN_BRACE
);

2050 
	`_≠≥ndToP©
(
ªsu…
,

2051 *(c⁄° 
UnicodeSåög
*Ë
°rögs
->
	`ñemítAt
(
i
),

2052 
esˇ≥U≈röèbÀ
);

2053 
ªsu…
.
	`≠≥nd
(
CLOSE_BRACE
);

2055  
ªsu…
.
	`≠≥nd
(
SET_CLOSE
);

2056 
	}
}

2061 
	gUnicodeSë
::
	$ªÀa£P©ã∫
() {

2062 i‡(
∑t
) {

2063 
	`u¥v_‰ì
(
∑t
);

2064 
∑t
 = 
NULL
;

2065 
∑tLí
 = 0;

2067 
	}
}

2072 
	gUnicodeSë
::
	$£tP©ã∫
(c⁄° 
UnicodeSåög
& 
√wP©
) {

2073 
	`ªÀa£P©ã∫
();

2074 
öt32_t
 
√wP©Lí
 = 
√wP©
.
	`Àngth
();

2075 
∑t
 = (
UCh¨
 *)
	`u¥v_mÆloc
((
√wP©Lí
 + 1) * (UChar));

2076 i‡(
∑t
) {

2077 
∑tLí
 = 
√wP©Lí
;

2078 
√wP©
.
	`exåa˘Bëwìn
(0, 
∑tLí
, 
∑t
);

2079 
∑t
[
∑tLí
] = 0;

2083 
	}
}

2085 
UnicodeFun˘‹
 *
	gUnicodeSë
::
	$‰ìze
() {

2086 if(!
	`isFrozí
(Ë&& !
	`isBogus
()) {

2092 i‡(
buf„r
 !
NULL
) {

2093 
	`u¥v_‰ì
(
buf„r
);

2094 
buf„r
 = 
NULL
;

2096 i‡(
ˇ∑côy
 > (
Àn
 + 
GROW_EXTRA
)) {

2099 
ˇ∑côy
 = 
Àn
 + (len == 0);

2100 
li°
 = (
UCh¨32
*Ë
	`u¥v_ªÆloc
÷i°, (UCh¨32Ë* 
ˇ∑côy
);

2101 i‡(
li°
 =
NULL
) {

2102 
	`£tToBogus
();

2103  
this
;

2108 i‡(!
°rögs
->
	`isEm±y
()) {

2109 
°rögS∑n
 = 
√w
 
	`UnicodeSëSåögS∑n
(*
this
, *
°rögs
, 
UnicodeSëSåögS∑n
::
ALL
);

2110 i‡(
°rögS∑n
 !
NULL
 && !°rögS∑n->
	`√edsSåögS∑nUTF16
()) {

2116 
dñëe
 
°rögS∑n
;

2117 
°rögS∑n
 = 
NULL
;

2120 i‡(
°rögS∑n
 =
NULL
) {

2122 
bmpSë
=
√w
 
	`BMPSë
(
li°
, 
Àn
);

2123 i‡(
bmpSë
 =
NULL
) {

2124 
	`£tToBogus
();

2128  
this
;

2129 
	}
}

2131 
öt32_t
 
	gUnicodeSë
::
	$•™
(c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
) const {

2132 if(
Àngth
>0 && 
bmpSë
!=
NULL
) {

2133  (
öt32_t
)(
bmpSë
->
	`•™
(
s
, s+
Àngth
, 
•™C⁄dôi⁄
)-s);

2135 if(
Àngth
<0) {

2136 
Àngth
=
	`u_°æí
(
s
);

2138 if(
Àngth
==0) {

2141 if(
°rögS∑n
!=
NULL
) {

2142  
°rögS∑n
->
	`•™
(
s
, 
Àngth
, 
•™C⁄dôi⁄
);

2143 } if(!
°rögs
->
	`isEm±y
()) {

2144 
uöt32_t
 
which

•™C⁄dôi⁄
==
USET_SPAN_NOT_CONTAINED
 ?

2145 
UnicodeSëSåögS∑n
::
FWD_UTF16_NOT_CONTAINED
 :

2146 
UnicodeSëSåögS∑n
::
FWD_UTF16_CONTAINED
;

2147 
UnicodeSëSåögS∑n
 
	`°rS∑n
(*
this
, *
°rögs
, 
which
);

2148 if(
°rS∑n
.
	`√edsSåögS∑nUTF16
()) {

2149  
°rS∑n
.
	`•™
(
s
, 
Àngth
, 
•™C⁄dôi⁄
);

2153 if(
•™C⁄dôi⁄
!=
USET_SPAN_NOT_CONTAINED
) {

2154 
•™C⁄dôi⁄
=
USET_SPAN_CONTAINED
;

2157 
UCh¨32
 
c
;

2158 
öt32_t
 
°¨t
=0, 
¥ev
=0;

2160 
	`U16_NEXT
(
s
, 
°¨t
, 
Àngth
, 
c
);

2161 if(
•™C⁄dôi⁄
!=
	`c⁄èös
(
c
)) {

2164 } (
¥ev
=
°¨t
)<
Àngth
);

2165  
¥ev
;

2166 
	}
}

2168 
öt32_t
 
	gUnicodeSë
::
	$•™Back
(c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
) const {

2169 if(
Àngth
>0 && 
bmpSë
!=
NULL
) {

2170  (
öt32_t
)(
bmpSë
->
	`•™Back
(
s
, s+
Àngth
, 
•™C⁄dôi⁄
)-s);

2172 if(
Àngth
<0) {

2173 
Àngth
=
	`u_°æí
(
s
);

2175 if(
Àngth
==0) {

2178 if(
°rögS∑n
!=
NULL
) {

2179  
°rögS∑n
->
	`•™Back
(
s
, 
Àngth
, 
•™C⁄dôi⁄
);

2180 } if(!
°rögs
->
	`isEm±y
()) {

2181 
uöt32_t
 
which

•™C⁄dôi⁄
==
USET_SPAN_NOT_CONTAINED
 ?

2182 
UnicodeSëSåögS∑n
::
BACK_UTF16_NOT_CONTAINED
 :

2183 
UnicodeSëSåögS∑n
::
BACK_UTF16_CONTAINED
;

2184 
UnicodeSëSåögS∑n
 
	`°rS∑n
(*
this
, *
°rögs
, 
which
);

2185 if(
°rS∑n
.
	`√edsSåögS∑nUTF16
()) {

2186  
°rS∑n
.
	`•™Back
(
s
, 
Àngth
, 
•™C⁄dôi⁄
);

2190 if(
•™C⁄dôi⁄
!=
USET_SPAN_NOT_CONTAINED
) {

2191 
•™C⁄dôi⁄
=
USET_SPAN_CONTAINED
;

2194 
UCh¨32
 
c
;

2195 
öt32_t
 
¥ev
=
Àngth
;

2197 
	`U16_PREV
(
s
, 0, 
Àngth
, 
c
);

2198 if(
•™C⁄dôi⁄
!=
	`c⁄èös
(
c
)) {

2201 } (
¥ev
=
Àngth
)>0);

2202  
¥ev
;

2203 
	}
}

2205 
öt32_t
 
	gUnicodeSë
::
	$•™UTF8
(c⁄° *
s
, 
öt32_t
 
Àngth
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
) const {

2206 if(
Àngth
>0 && 
bmpSë
!=
NULL
) {

2207 c⁄° 
uöt8_t
 *
s0
=(c⁄° uöt8_à*)
s
;

2208  (
öt32_t
)(
bmpSë
->
	`•™UTF8
(
s0
, 
Àngth
, 
•™C⁄dôi⁄
)-s0);

2210 if(
Àngth
<0) {

2211 
Àngth
=(
öt32_t
)
	`u¥v_°æí
(
s
);

2213 if(
Àngth
==0) {

2216 if(
°rögS∑n
!=
NULL
) {

2217  
°rögS∑n
->
	`•™UTF8
((c⁄° 
uöt8_t
 *)
s
, 
Àngth
, 
•™C⁄dôi⁄
);

2218 } if(!
°rögs
->
	`isEm±y
()) {

2219 
uöt32_t
 
which

•™C⁄dôi⁄
==
USET_SPAN_NOT_CONTAINED
 ?

2220 
UnicodeSëSåögS∑n
::
FWD_UTF8_NOT_CONTAINED
 :

2221 
UnicodeSëSåögS∑n
::
FWD_UTF8_CONTAINED
;

2222 
UnicodeSëSåögS∑n
 
	`°rS∑n
(*
this
, *
°rögs
, 
which
);

2223 if(
°rS∑n
.
	`√edsSåögS∑nUTF8
()) {

2224  
°rS∑n
.
	`•™UTF8
((c⁄° 
uöt8_t
 *)
s
, 
Àngth
, 
•™C⁄dôi⁄
);

2228 if(
•™C⁄dôi⁄
!=
USET_SPAN_NOT_CONTAINED
) {

2229 
•™C⁄dôi⁄
=
USET_SPAN_CONTAINED
;

2232 
UCh¨32
 
c
;

2233 
öt32_t
 
°¨t
=0, 
¥ev
=0;

2235 
	`U8_NEXT
(
s
, 
°¨t
, 
Àngth
, 
c
);

2236 if(
c
<0) {

2237 
c
=0xfffd;

2239 if(
•™C⁄dôi⁄
!=
	`c⁄èös
(
c
)) {

2242 } (
¥ev
=
°¨t
)<
Àngth
);

2243  
¥ev
;

2244 
	}
}

2246 
öt32_t
 
	gUnicodeSë
::
	$•™BackUTF8
(c⁄° *
s
, 
öt32_t
 
Àngth
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
) const {

2247 if(
Àngth
>0 && 
bmpSë
!=
NULL
) {

2248 c⁄° 
uöt8_t
 *
s0
=(c⁄° uöt8_à*)
s
;

2249  
bmpSë
->
	`•™BackUTF8
(
s0
, 
Àngth
, 
•™C⁄dôi⁄
);

2251 if(
Àngth
<0) {

2252 
Àngth
=(
öt32_t
)
	`u¥v_°æí
(
s
);

2254 if(
Àngth
==0) {

2257 if(
°rögS∑n
!=
NULL
) {

2258  
°rögS∑n
->
	`•™BackUTF8
((c⁄° 
uöt8_t
 *)
s
, 
Àngth
, 
•™C⁄dôi⁄
);

2259 } if(!
°rögs
->
	`isEm±y
()) {

2260 
uöt32_t
 
which

•™C⁄dôi⁄
==
USET_SPAN_NOT_CONTAINED
 ?

2261 
UnicodeSëSåögS∑n
::
BACK_UTF8_NOT_CONTAINED
 :

2262 
UnicodeSëSåögS∑n
::
BACK_UTF8_CONTAINED
;

2263 
UnicodeSëSåögS∑n
 
	`°rS∑n
(*
this
, *
°rögs
, 
which
);

2264 if(
°rS∑n
.
	`√edsSåögS∑nUTF8
()) {

2265  
°rS∑n
.
	`•™BackUTF8
((c⁄° 
uöt8_t
 *)
s
, 
Àngth
, 
•™C⁄dôi⁄
);

2269 if(
•™C⁄dôi⁄
!=
USET_SPAN_NOT_CONTAINED
) {

2270 
•™C⁄dôi⁄
=
USET_SPAN_CONTAINED
;

2273 
UCh¨32
 
c
;

2274 
öt32_t
 
¥ev
=
Àngth
;

2276 
	`U8_PREV
(
s
, 0, 
Àngth
, 
c
);

2277 if(
c
<0) {

2278 
c
=0xfffd;

2280 if(
•™C⁄dôi⁄
!=
	`c⁄èös
(
c
)) {

2283 } (
¥ev
=
Àngth
)>0);

2284  
¥ev
;

2285 
	}
}

2287 
	gU_NAMESPACE_END


	@uniset_props.cpp

19 
	~"unicode/uty≥s.h
"

20 
	~"unicode/uni£t.h
"

21 
	~"unicode/∑r£pos.h
"

22 
	~"unicode/uch¨.h
"

23 
	~"unicode/us¸ùt.h
"

24 
	~"unicode/symèbÀ.h
"

25 
	~"unicode/u£t.h
"

26 
	~"unicode/locid.h
"

27 
	~"unicode/brkôî.h
"

28 
	~"u£t_imp.h
"

29 
	~"ruÀôî.h
"

30 
	~"cmem‹y.h
"

31 
	~"u˛n_cmn.h
"

32 
	~"utû.h
"

33 
	~"uve˘‹.h
"

34 
	~"u¥›s.h
"

35 
	~"¥›«me.h
"

36 
	~"n‹mÆizî2im∂.h
"

37 
	~"uˇ£.h
"

38 
	~"ubidi_¥›s.h
"

39 
	~"uövch¨.h
"

40 
	~"u¥›s.h
"

41 
	~"ch¨°r.h
"

42 
	~"c°rög.h
"

43 
	~"muãx.h
"

44 
	~"umuãx.h
"

45 
	~"uas£π.h
"

46 
	~"hash.h
"

48 
	gU_NAMESPACE_USE


50 
	#LENGTHOF
(
¨øy
Ë(
öt32_t
)(◊ºay)/(◊ºay)[0]))

	)

54 
	#START_EXTRA
 16

	)

58 
	#SET_OPEN
 ((
UCh¨
)0x005BË

	)

59 
	#SET_CLOSE
 ((
UCh¨
)0x005DË

	)

60 
	#HYPHEN
 ((
UCh¨
)0x002DË

	)

61 
	#COMPLEMENT
 ((
UCh¨
)0x005EË

	)

62 
	#COLON
 ((
UCh¨
)0x003AË

	)

63 
	#BACKSLASH
 ((
UCh¨
)0x005CË

	)

64 
	#INTERSECTION
 ((
UCh¨
)0x0026Ë

	)

65 
	#UPPER_U
 ((
UCh¨
)0x0055Ë

	)

66 
	#LOWER_U
 ((
UCh¨
)0x0075Ë

	)

67 
	#OPEN_BRACE
 ((
UCh¨
)123Ë

	)

68 
	#CLOSE_BRACE
 ((
UCh¨
)125Ë

	)

69 
	#UPPER_P
 ((
UCh¨
)0x0050Ë

	)

70 
	#LOWER_P
 ((
UCh¨
)0x0070Ë

	)

71 
	#UPPER_N
 ((
UCh¨
)78Ë

	)

72 
	#EQUALS
 ((
UCh¨
)0x003DË

	)

75 c⁄° 
UCh¨
 
	gPOSIX_CLOSE
[] = { 
COLON
,
SET_CLOSE
,0 };

77 c⁄° 
UCh¨
 
	gPERL_CLOSE
[] = { 
CLOSE_BRACE
,0 };

79 c⁄° 
UCh¨
 
	gHYPHEN_RIGHT_BRACE
[] = {
HYPHEN
,
SET_CLOSE
,0};

82 c⁄° 
	gANY
[] = "ANY";

83 c⁄° 
	gASCII
[] = "ASCII";

84 c⁄° 
	gASSIGNED
[] = "Assigned";

87 
	#NAME_PROP
 "«"

	)

88 
	#NAME_PROP_LENGTH
 2

	)

98 
U_CDECL_BEGIN


99 
UBoﬁ
 
U_CALLCONV
 
u£t_˛ónup
();

100 
U_CDECL_END


105 
˛ass
 
	gUnicodeSëSögÀt⁄
 : 
public
 
Sim∂eSögÀt⁄Wøµî
<
UnicodeSë
> {

106 
public
:

107 
UnicodeSëSögÀt⁄
(
Sim∂eSögÀt⁄
 &
s
, c⁄° *
∑âîn
) :

108 
Sim∂eSögÀt⁄Wøµî
<
UnicodeSë
>(
s
), 
fP©ã∫
(
∑âîn
) {}

109 
UnicodeSë
 *
gëIn°™˚
(
UEº‹Code
 &
îr‹Code
) {

110  
	gSim∂eSögÀt⁄Wøµî
<
	gUnicodeSë
>::
gëIn°™˚
(
¸óãIn°™˚
, 
fP©ã∫
, 
îr‹Code
);

112 
	g¥iv©e
:

113 *
¸óãIn°™˚
(c⁄° *
c⁄ãxt
, 
UEº‹Code
 &
îr‹Code
) {

114 
UnicodeSåög
 
∑âîn
((c⁄° *)
c⁄ãxt
, -1, 
US_INV
);

115 
UnicodeSë
 *
	g£t
=
√w
 UnicodeSë(
∑âîn
, 
îr‹Code
);

116 if(
	g£t
==
NULL
) {

117 
îr‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

119 
	g£t
->
‰ìze
();

120 
u˛n_comm⁄_ªgi°îCÀ™up
(
UCLN_COMMON_USET
, 
u£t_˛ónup
);

121  
	g£t
;

124 c⁄° *
	gfP©ã∫
;

127 
U_CDECL_BEGIN


129 
UnicodeSë
 *
	gINCLUSIONS
[
UPROPS_SRC_COUNT
] = { 
NULL
 };

131 
STATIC_SIMPLE_SINGLETON
(
uni32SögÀt⁄
);

139 
U_CALLCONV


140 
	$_£t_add
(
USë
 *
£t
, 
UCh¨32
 
c
) {

141 ((
UnicodeSë
 *)
£t
)->
	`add
(
c
);

142 
	}
}

144 
U_CALLCONV


145 
	$_£t_addR™ge
(
USë
 *
£t
, 
UCh¨32
 
°¨t
, UCh¨32 
íd
) {

146 ((
UnicodeSë
 *)
£t
)->
	`add
(
°¨t
, 
íd
);

147 
	}
}

149 
U_CALLCONV


150 
	$_£t_addSåög
(
USë
 *
£t
, c⁄° 
UCh¨
 *
°r
, 
öt32_t
 
Àngth
) {

151 ((
UnicodeSë
 *)
£t
)->
	`add
(
	`UnicodeSåög
((
UBoﬁ
)(
Àngth
<0), 
°r
,Üength));

152 
	}
}

157 
UBoﬁ
 
U_CALLCONV
 
	$u£t_˛ónup
() {

158 
öt32_t
 
i
;

160 
i
 = 
UPROPS_SRC_NONE
; i < 
UPROPS_SRC_COUNT
; ++i) {

161 i‡(
INCLUSIONS
[
i
] !
NULL
) {

162 
dñëe
 
INCLUSIONS
[
i
];

163 
INCLUSIONS
[
i
] = 
NULL
;

166 
	`UnicodeSëSögÀt⁄
(
uni32SögÀt⁄
, 
NULL
).
	`dñëeIn°™˚
();

167  
TRUE
;

168 
	}
}

170 
U_CDECL_END


172 
	gU_NAMESPACE_BEGIN


179 
	#DEFAULT_INCLUSION_CAPACITY
 3072

	)

181 c⁄° 
UnicodeSë
* 
	gUnicodeSë
::
	$gëIn˛usi⁄s
(
öt32_t
 
§c
, 
UEº‹Code
 &
°©us
) {

182 
UBoﬁ
 
√edInô
;

183 
	`UMTX_CHECK
(
NULL
, (
INCLUSIONS
[
§c
] =NULL), 
√edInô
);

184 i‡(
√edInô
) {

185 
UnicodeSë
* 
ö˛
 = 
√w
 
	`UnicodeSë
();

186 
USëAddî
 
ß
 = {

187 (
USë
 *)
ö˛
,

188 
_£t_add
,

189 
_£t_addR™ge
,

190 
_£t_addSåög
,

191 
NULL
,

192 
NULL


194 
ö˛
->
	`ísuªC≠acôy
(
DEFAULT_INCLUSION_CAPACITY
, 
°©us
);

195 i‡(
ö˛
 !
NULL
) {

196 
§c
) {

197 
UPROPS_SRC_CHAR
:

198 
	`uch¨_addPr›îtySèπs
(&
ß
, &
°©us
);

200 
UPROPS_SRC_PROPSVEC
:

201 
	`u¥›svec_addPr›îtySèπs
(&
ß
, &
°©us
);

203 
UPROPS_SRC_CHAR_AND_PROPSVEC
:

204 
	`uch¨_addPr›îtySèπs
(&
ß
, &
°©us
);

205 
	`u¥›svec_addPr›îtySèπs
(&
ß
, &
°©us
);

207 #i‡!
UCONFIG_NO_NORMALIZATION


208 
UPROPS_SRC_CASE_AND_NORM
: {

209 c⁄° 
N‹mÆizî2Im∂
 *
im∂
=
N‹mÆizî2Fa˘‹y
::
	`gëNFCIm∂
(
°©us
);

210 if(
	`U_SUCCESS
(
°©us
)) {

211 
im∂
->
	`addPr›îtySèπs
(&
ß
, 
°©us
);

213 
	`uˇ£_addPr›îtySèπs
(
	`uˇ£_gëSögÀt⁄
(), &
ß
, &
°©us
);

216 
UPROPS_SRC_NFC
: {

217 c⁄° 
N‹mÆizî2Im∂
 *
im∂
=
N‹mÆizî2Fa˘‹y
::
	`gëNFCIm∂
(
°©us
);

218 if(
	`U_SUCCESS
(
°©us
)) {

219 
im∂
->
	`addPr›îtySèπs
(&
ß
, 
°©us
);

223 
UPROPS_SRC_NFKC
: {

224 c⁄° 
N‹mÆizî2Im∂
 *
im∂
=
N‹mÆizî2Fa˘‹y
::
	`gëNFKCIm∂
(
°©us
);

225 if(
	`U_SUCCESS
(
°©us
)) {

226 
im∂
->
	`addPr›îtySèπs
(&
ß
, 
°©us
);

230 
UPROPS_SRC_NFKC_CF
: {

231 c⁄° 
N‹mÆizî2Im∂
 *
im∂
=
N‹mÆizî2Fa˘‹y
::
	`gëNFKC_CFIm∂
(
°©us
);

232 if(
	`U_SUCCESS
(
°©us
)) {

233 
im∂
->
	`addPr›îtySèπs
(&
ß
, 
°©us
);

237 
UPROPS_SRC_NFC_CANON_ITER
: {

238 c⁄° 
N‹mÆizî2Im∂
 *
im∂
=
N‹mÆizî2Fa˘‹y
::
	`gëNFCIm∂
(
°©us
);

239 if(
	`U_SUCCESS
(
°©us
)) {

240 
im∂
->
	`addC™⁄IãrPr›îtySèπs
(&
ß
, 
°©us
);

245 
UPROPS_SRC_CASE
:

246 
	`uˇ£_addPr›îtySèπs
(
	`uˇ£_gëSögÀt⁄
(), &
ß
, &
°©us
);

248 
UPROPS_SRC_BIDI
:

249 
	`ubidi_addPr›îtySèπs
(
	`ubidi_gëSögÀt⁄
(), &
ß
, &
°©us
);

252 
°©us
 = 
U_INTERNAL_PROGRAM_ERROR
;

255 i‡(
	`U_SUCCESS
(
°©us
)) {

257 
ö˛
->
	`com∑˘
();

258 
	`umtx_lock
(
NULL
);

259 i‡(
INCLUSIONS
[
§c
] =
NULL
) {

260 
INCLUSIONS
[
§c
] = 
ö˛
;

261 
ö˛
 = 
NULL
;

262 
	`u˛n_comm⁄_ªgi°îCÀ™up
(
UCLN_COMMON_USET
, 
u£t_˛ónup
);

264 
	`umtx_u∆ock
(
NULL
);

266 
dñëe
 
ö˛
;

268 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

271  
INCLUSIONS
[
§c
];

272 
	}
}

276 
U_CFUNC
 
UnicodeSë
 *

277 
	$uni£t_gëUnicode32In°™˚
(
UEº‹Code
 &
îr‹Code
) {

278  
	`UnicodeSëSögÀt⁄
(
uni32SögÀt⁄
, "[:age=3.2:]").
	`gëIn°™˚
(
îr‹Code
);

279 
	}
}

288 
ölöe
 
UBoﬁ


289 
	$isPîlO≥n
(c⁄° 
UnicodeSåög
 &
∑âîn
, 
öt32_t
 
pos
) {

290 
UCh¨
 
c
;

291  
∑âîn
.
	`ch¨At
(
pos
)==
BACKSLASH
 && ((
c
ı©ã∫.ch¨At’os+1))==
LOWER_P
 || c==
UPPER_P
);

292 
	}
}

299 
ölöe
 
UBoﬁ


300 
	$isNameO≥n
(c⁄° 
UnicodeSåög
 &
∑âîn
, 
öt32_t
 
pos
) {

301  
∑âîn
.
	`ch¨At
(
pos
)==
BACKSLASH
 &&Ö©ã∫.ch¨At’os+1)==
UPPER_N
;

302 
	}
}

304 
ölöe
 
UBoﬁ


305 
	$isPOSIXO≥n
(c⁄° 
UnicodeSåög
 &
∑âîn
, 
öt32_t
 
pos
) {

306  
∑âîn
.
	`ch¨At
(
pos
)==
SET_OPEN
 &&Ö©ã∫.ch¨At’os+1)==
COLON
;

307 
	}
}

317 
	#_dbg˘
(
me
)

	)

329 
	gUnicodeSë
::
	$UnicodeSë
(c⁄° 
UnicodeSåög
& 
∑âîn
,

330 
UEº‹Code
& 
°©us
) :

331 
	`Àn
(0), 
	`ˇ∑côy
(
START_EXTRA
), 
	`li°
(0), 
	`bmpSë
(0), 
	`buf„r
(0),

332 
	`buf„rC≠acôy
(0), 
	`∑tLí
(0), 
	`∑t
(
NULL
), 
	`°rögs
(NULL), 
	`°rögS∑n
(NULL),

333 
	$fFœgs
(0)

335 if(
	`U_SUCCESS
(
°©us
)){

336 
li°
 = (
UCh¨32
*Ë
	`u¥v_mÆloc
((UCh¨32Ë* 
ˇ∑côy
);

338 if(
li°
 =
NULL
) {

339 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

341 
	`ÆloˇãSåögs
(
°©us
);

342 
	`≠∂yP©ã∫
(
∑âîn
, 
USET_IGNORE_SPACE
, 
NULL
, 
°©us
);

345 
	`_dbg˘
(
this
);

346 
	}
}

356 
	gUnicodeSë
::
	$UnicodeSë
(c⁄° 
UnicodeSåög
& 
∑âîn
,

357 
uöt32_t
 
›ti⁄s
,

358 c⁄° 
SymbﬁTabÀ
* 
symbﬁs
,

359 
UEº‹Code
& 
°©us
) :

360 
	`Àn
(0), 
	`ˇ∑côy
(
START_EXTRA
), 
	`li°
(0), 
	`bmpSë
(0), 
	`buf„r
(0),

361 
	`buf„rC≠acôy
(0), 
	`∑tLí
(0), 
	`∑t
(
NULL
), 
	`°rögs
(NULL), 
	`°rögS∑n
(NULL),

362 
	$fFœgs
(0)

364 if(
	`U_SUCCESS
(
°©us
)){

365 
li°
 = (
UCh¨32
*Ë
	`u¥v_mÆloc
((UCh¨32Ë* 
ˇ∑côy
);

367 if(
li°
 =
NULL
) {

368 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

370 
	`ÆloˇãSåögs
(
°©us
);

371 
	`≠∂yP©ã∫
(
∑âîn
, 
›ti⁄s
, 
symbﬁs
, 
°©us
);

374 
	`_dbg˘
(
this
);

375 
	}
}

377 
	gUnicodeSë
::
	$UnicodeSë
(c⁄° 
UnicodeSåög
& 
∑âîn
, 
P¨£Posôi⁄
& 
pos
,

378 
uöt32_t
 
›ti⁄s
,

379 c⁄° 
SymbﬁTabÀ
* 
symbﬁs
,

380 
UEº‹Code
& 
°©us
) :

381 
	`Àn
(0), 
	`ˇ∑côy
(
START_EXTRA
), 
	`li°
(0), 
	`bmpSë
(0), 
	`buf„r
(0),

382 
	`buf„rC≠acôy
(0), 
	`∑tLí
(0), 
	`∑t
(
NULL
), 
	`°rögs
(NULL), 
	`°rögS∑n
(NULL),

383 
	$fFœgs
(0)

385 if(
	`U_SUCCESS
(
°©us
)){

386 
li°
 = (
UCh¨32
*Ë
	`u¥v_mÆloc
((UCh¨32Ë* 
ˇ∑côy
);

388 if(
li°
 =
NULL
) {

389 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

391 
	`ÆloˇãSåögs
(
°©us
);

392 
	`≠∂yP©ã∫
(
∑âîn
, 
pos
, 
›ti⁄s
, 
symbﬁs
, 
°©us
);

395 
	`_dbg˘
(
this
);

396 
	}
}

416 
	gUnicodeSë
& UnicodeSë::
	$≠∂yP©ã∫
(c⁄° 
UnicodeSåög
& 
∑âîn
,

417 
UEº‹Code
& 
°©us
) {

418  
	`≠∂yP©ã∫
(
∑âîn
, 
USET_IGNORE_SPACE
, 
NULL
, 
°©us
);

419 
	}
}

430 
	gUnicodeSë
& UnicodeSë::
	$≠∂yP©ã∫
(c⁄° 
UnicodeSåög
& 
∑âîn
,

431 
uöt32_t
 
›ti⁄s
,

432 c⁄° 
SymbﬁTabÀ
* 
symbﬁs
,

433 
UEº‹Code
& 
°©us
) {

434 i‡(
	`U_FAILURE
(
°©us
Ë|| 
	`isFrozí
()) {

435  *
this
;

438 
P¨£Posôi⁄
 
	`pos
(0);

439 
	`≠∂yP©ã∫
(
∑âîn
, 
pos
, 
›ti⁄s
, 
symbﬁs
, 
°©us
);

440 i‡(
	`U_FAILURE
(
°©us
)Ë *
this
;

442 
öt32_t
 
i
 = 
pos
.
	`gëIndex
();

444 i‡(
›ti⁄s
 & 
USET_IGNORE_SPACE
) {

446 
ICU_Utûôy
::
	`skùWhôe•a˚
(
∑âîn
, 
i
, 
TRUE
);

449 i‡(
i
 !
∑âîn
.
	`Àngth
()) {

450 
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

452  *
this
;

453 
	}
}

455 
	gUnicodeSë
& UnicodeSë::
	$≠∂yP©ã∫
(c⁄° 
UnicodeSåög
& 
∑âîn
,

456 
P¨£Posôi⁄
& 
pos
,

457 
uöt32_t
 
›ti⁄s
,

458 c⁄° 
SymbﬁTabÀ
* 
symbﬁs
,

459 
UEº‹Code
& 
°©us
) {

460 i‡(
	`U_FAILURE
(
°©us
Ë|| 
	`isFrozí
()) {

461  *
this
;

465 
UnicodeSåög
 
ªbuûtP©
;

466 
RuÀCh¨a˘îIãøt‹
 
	`ch¨s
(
∑âîn
, 
symbﬁs
, 
pos
);

467 
	`≠∂yP©ã∫
(
ch¨s
, 
symbﬁs
, 
ªbuûtP©
, 
›ti⁄s
, 
°©us
);

468 i‡(
	`U_FAILURE
(
°©us
)Ë *
this
;

469 i‡(
ch¨s
.
	`öV¨übÀ
()) {

471 
°©us
 = 
U_MALFORMED_SET
;

472  *
this
;

474 
	`£tP©ã∫
(
ªbuûtP©
);

475  *
this
;

476 
	}
}

482 
UBoﬁ
 
	gUnicodeSë
::
	$ª£mbÀsP©ã∫
(c⁄° 
UnicodeSåög
& 
∑âîn
, 
öt32_t
 
pos
) {

483  ((
pos
+1Ë< 
∑âîn
.
	`Àngth
() &&

484 
∑âîn
.
	`ch¨At
(
pos
Ë=(
UCh¨
)91 ) ||

485 
	`ª£mbÀsPr›îtyP©ã∫
(
∑âîn
, 
pos
);

486 
	}
}

496 ˛as†
	cUnicodeSëPoöãr
 {

497 
UnicodeSë
* 
	mp
;

498 
	mpublic
:

499 
ölöe
 
	$UnicodeSëPoöãr
(Ë: 
	$p
(0) {}

500 
ölöe
 ~
	$UnicodeSëPoöãr
(Ë{ 
dñëe
 
p
; 
	}
}

501 
ölöe
 
UnicodeSë
* 
	$poöãr
(Ë{  
p
; 
	}
}

502 
ölöe
 
UBoﬁ
 
	$Æloˇã
() {

503 i‡(
p
 == 0) {

504 
p
 = 
√w
 
	`UnicodeSë
();

506  
p
 != 0;

507 
	}
}

524 
	gUnicodeSë
::
	$≠∂yP©ã∫
(
RuÀCh¨a˘îIãøt‹
& 
ch¨s
,

525 c⁄° 
SymbﬁTabÀ
* 
symbﬁs
,

526 
UnicodeSåög
& 
ªbuûtP©
,

527 
uöt32_t
 
›ti⁄s
,

528 
UEº‹Code
& 
ec
) {

529 i‡(
	`U_FAILURE
(
ec
)) ;

535 
öt32_t
 
›ts
 = 
RuÀCh¨a˘îIãøt‹
::
PARSE_VARIABLES
 |

536 
RuÀCh¨a˘îIãøt‹
::
PARSE_ESCAPES
;

537 i‡((
›ti⁄s
 & 
USET_IGNORE_SPACE
) != 0) {

538 
›ts
 |
RuÀCh¨a˘îIãøt‹
::
SKIP_WHITESPACE
;

541 
UnicodeSåög
 
∑tLoˇl
, 
buf
;

542 
UBoﬁ
 
u£P©
 = 
FALSE
;

543 
UnicodeSëPoöãr
 
s¸©ch
;

544 
RuÀCh¨a˘îIãøt‹
::
Pos
 
backup
;

548 
öt8_t
 
œ°Iãm
 = 0, 
mode
 = 0;

549 
UCh¨32
 
œ°Ch¨
 = 0;

550 
UCh¨
 
›
 = 0;

552 
UBoﬁ
 
övît
 = 
FALSE
;

554 
	`˛ór
();

556 
mode
 !2 && !
ch¨s
.
	`©End
()) {

557 
	`U_ASSERT
((
œ°Iãm
 =0 && 
›
 == 0) ||

558 (
œ°Iãm
 =1 && (
›
 =0 || o∞=
HYPHEN
 )) ||

559 (
œ°Iãm
 =2 && (
›
 =0 || o∞=
HYPHEN
 ||

560 
›
 =
INTERSECTION
 )));

562 
UCh¨32
 
c
 = 0;

563 
UBoﬁ
 
lôîÆ
 = 
FALSE
;

564 
UnicodeSë
* 
√°ed
 = 0;

569 
öt8_t
 
£tMode
 = 0;

570 i‡(
	`ª£mbÀsPr›îtyP©ã∫
(
ch¨s
, 
›ts
)) {

571 
£tMode
 = 2;

584 
ch¨s
.
	`gëPos
(
backup
);

585 
c
 = 
ch¨s
.
	`√xt
(
›ts
, 
lôîÆ
, 
ec
);

586 i‡(
	`U_FAILURE
(
ec
)) ;

588 i‡(
c
 =0x5B && !
lôîÆ
) {

589 i‡(
mode
 == 1) {

590 
ch¨s
.
	`£tPos
(
backup
);

591 
£tMode
 = 1;

594 
mode
 = 1;

595 
∑tLoˇl
.
	`≠≥nd
((
UCh¨
) 0x5B );

596 
ch¨s
.
	`gëPos
(
backup
);

597 
c
 = 
ch¨s
.
	`√xt
(
›ts
, 
lôîÆ
, 
ec
);

598 i‡(
	`U_FAILURE
(
ec
)) ;

599 i‡(
c
 =0x5E && !
lôîÆ
) {

600 
övît
 = 
TRUE
;

601 
∑tLoˇl
.
	`≠≥nd
((
UCh¨
) 0x5E );

602 
ch¨s
.
	`gëPos
(
backup
);

603 
c
 = 
ch¨s
.
	`√xt
(
›ts
, 
lôîÆ
, 
ec
);

604 i‡(
	`U_FAILURE
(
ec
)) ;

608 i‡(
c
 =
HYPHEN
 ) {

609 
lôîÆ
 = 
TRUE
;

612 
ch¨s
.
	`£tPos
(
backup
);

616 } i‡(
symbﬁs
 != 0) {

617 c⁄° 
UnicodeFun˘‹
 *
m
 = 
symbﬁs
->
	`lookupM©chî
(
c
);

618 i‡(
m
 != 0) {

619 c⁄° 
UnicodeSë
 *
ms
 = 
dy«mic_ˇ°
<c⁄° UnicodeSë *>(
m
);

620 i‡(
ms
 =
NULL
) {

621 
ec
 = 
U_MALFORMED_SET
;

626 
√°ed
 = 
c⁄°_ˇ°
<
UnicodeSë
*>(
ms
);

627 
£tMode
 = 3;

637 i‡(
£tMode
 != 0) {

638 i‡(
œ°Iãm
 == 1) {

639 i‡(
›
 != 0) {

641 
ec
 = 
U_MALFORMED_SET
;

644 
	`add
(
œ°Ch¨
,ÜastChar);

645 
	`_≠≥ndToP©
(
∑tLoˇl
, 
œ°Ch¨
, 
FALSE
);

646 
œ°Iãm
 = 0;

647 
›
 = 0;

650 i‡(
›
 =
HYPHEN
 || o∞=
INTERSECTION
 ) {

651 
∑tLoˇl
.
	`≠≥nd
(
›
);

654 i‡(
√°ed
 == 0) {

656 i‡(!
s¸©ch
.
	`Æloˇã
()) {

657 
ec
 = 
U_MEMORY_ALLOCATION_ERROR
;

660 
√°ed
 = 
s¸©ch
.
	`poöãr
();

662 
£tMode
) {

664 
√°ed
->
	`≠∂yP©ã∫
(
ch¨s
, 
symbﬁs
, 
∑tLoˇl
, 
›ti⁄s
, 
ec
);

667 
ch¨s
.
	`skùIgn‹ed
(
›ts
);

668 
√°ed
->
	`≠∂yPr›îtyP©ã∫
(
ch¨s
, 
∑tLoˇl
, 
ec
);

669 i‡(
	`U_FAILURE
(
ec
)) ;

672 
√°ed
->
	`_toP©ã∫
(
∑tLoˇl
, 
FALSE
);

676 
u£P©
 = 
TRUE
;

678 i‡(
mode
 == 0) {

680 *
this
 = *
√°ed
;

681 
mode
 = 2;

685 
›
) {

686 
HYPHEN
:

687 
	`ªmoveAŒ
(*
√°ed
);

689 
INTERSECTION
:

690 
	`ªèöAŒ
(*
√°ed
);

693 
	`addAŒ
(*
√°ed
);

697 
›
 = 0;

698 
œ°Iãm
 = 2;

703 i‡(
mode
 == 0) {

705 
ec
 = 
U_MALFORMED_SET
;

713 i‡(!
lôîÆ
) {

714 
c
) {

716 i‡(
œ°Iãm
 == 1) {

717 
	`add
(
œ°Ch¨
,ÜastChar);

718 
	`_≠≥ndToP©
(
∑tLoˇl
, 
œ°Ch¨
, 
FALSE
);

721 i‡(
›
 =
HYPHEN
 ) {

722 
	`add
(
›
, op);

723 
∑tLoˇl
.
	`≠≥nd
(
›
);

724 } i‡(
›
 =
INTERSECTION
 ) {

726 
ec
 = 
U_MALFORMED_SET
;

729 
∑tLoˇl
.
	`≠≥nd
((
UCh¨
) 0x5D );

730 
mode
 = 2;

732 
HYPHEN
 :

733 i‡(
›
 == 0) {

734 i‡(
œ°Iãm
 != 0) {

735 
›
 = (
UCh¨
Ë
c
;

739 
	`add
(
c
, c);

740 
c
 = 
ch¨s
.
	`√xt
(
›ts
, 
lôîÆ
, 
ec
);

741 i‡(
	`U_FAILURE
(
ec
)) ;

742 i‡(
c
 =0x5D && !
lôîÆ
) {

743 
∑tLoˇl
.
	`≠≥nd
(
HYPHEN_RIGHT_BRACE
);

744 
mode
 = 2;

750 
ec
 = 
U_MALFORMED_SET
;

752 
INTERSECTION
 :

753 i‡(
œ°Iãm
 =2 && 
›
 == 0) {

754 
›
 = (
UCh¨
Ë
c
;

758 
ec
 = 
U_MALFORMED_SET
;

762 
ec
 = 
U_MALFORMED_SET
;

765 i‡(
›
 != 0) {

767 
ec
 = 
U_MALFORMED_SET
;

770 i‡(
œ°Iãm
 == 1) {

771 
	`add
(
œ°Ch¨
,ÜastChar);

772 
	`_≠≥ndToP©
(
∑tLoˇl
, 
œ°Ch¨
, 
FALSE
);

774 
œ°Iãm
 = 0;

775 
buf
.
	`åunˇã
(0);

777 
UBoﬁ
 
ok
 = 
FALSE
;

778 !
ch¨s
.
	`©End
()) {

779 
c
 = 
ch¨s
.
	`√xt
(
›ts
, 
lôîÆ
, 
ec
);

780 i‡(
	`U_FAILURE
(
ec
)) ;

781 i‡(
c
 =0x7D && !
lôîÆ
) {

782 
ok
 = 
TRUE
;

785 
buf
.
	`≠≥nd
(
c
);

787 i‡(
buf
.
	`Àngth
(Ë< 1 || !
ok
) {

789 
ec
 = 
U_MALFORMED_SET
;

796 
	`add
(
buf
);

797 
∑tLoˇl
.
	`≠≥nd
((
UCh¨
) 0x7B );

798 
	`_≠≥ndToP©
(
∑tLoˇl
, 
buf
, 
FALSE
);

799 
∑tLoˇl
.
	`≠≥nd
((
UCh¨
) 0x7D );

801 
SymbﬁTabÀ
::
SYMBOL_REF
:

809 
ch¨s
.
	`gëPos
(
backup
);

810 
c
 = 
ch¨s
.
	`√xt
(
›ts
, 
lôîÆ
, 
ec
);

811 i‡(
	`U_FAILURE
(
ec
)) ;

812 
UBoﬁ
 
™ch‹
 = (
c
 =0x5D && !
lôîÆ
);

813 i‡(
symbﬁs
 =0 && !
™ch‹
) {

814 
c
 = 
SymbﬁTabÀ
::
SYMBOL_REF
;

815 
ch¨s
.
	`£tPos
(
backup
);

818 i‡(
™ch‹
 && 
›
 == 0) {

819 i‡(
œ°Iãm
 == 1) {

820 
	`add
(
œ°Ch¨
,ÜastChar);

821 
	`_≠≥ndToP©
(
∑tLoˇl
, 
œ°Ch¨
, 
FALSE
);

823 
	`add
(
U_ETHER
);

824 
u£P©
 = 
TRUE
;

825 
∑tLoˇl
.
	`≠≥nd
((
UCh¨
Ë
SymbﬁTabÀ
::
SYMBOL_REF
);

826 
∑tLoˇl
.
	`≠≥nd
((
UCh¨
) 0x5D );

827 
mode
 = 2;

831 
ec
 = 
U_MALFORMED_SET
;

843 
œ°Iãm
) {

845 
œ°Iãm
 = 1;

846 
œ°Ch¨
 = 
c
;

849 i‡(
›
 =
HYPHEN
 ) {

850 i‡(
œ°Ch¨
 >
c
) {

854 
ec
 = 
U_MALFORMED_SET
;

857 
	`add
(
œ°Ch¨
, 
c
);

858 
	`_≠≥ndToP©
(
∑tLoˇl
, 
œ°Ch¨
, 
FALSE
);

859 
∑tLoˇl
.
	`≠≥nd
(
›
);

860 
	`_≠≥ndToP©
(
∑tLoˇl
, 
c
, 
FALSE
);

861 
œ°Iãm
 = 0;

862 
›
 = 0;

864 
	`add
(
œ°Ch¨
,ÜastChar);

865 
	`_≠≥ndToP©
(
∑tLoˇl
, 
œ°Ch¨
, 
FALSE
);

866 
œ°Ch¨
 = 
c
;

870 i‡(
›
 != 0) {

872 
ec
 = 
U_MALFORMED_SET
;

875 
œ°Ch¨
 = 
c
;

876 
œ°Iãm
 = 1;

881 i‡(
mode
 != 2) {

883 
ec
 = 
U_MALFORMED_SET
;

887 
ch¨s
.
	`skùIgn‹ed
(
›ts
);

895 i‡((
›ti⁄s
 & 
USET_CASE_INSENSITIVE
) != 0) {

896 
	`˛o£Ovî
(
USET_CASE_INSENSITIVE
);

898 i‡((
›ti⁄s
 & 
USET_ADD_CASE_MAPPINGS
) != 0) {

899 
	`˛o£Ovî
(
USET_ADD_CASE_MAPPINGS
);

901 i‡(
övît
) {

902 
	`com∂emít
();

907 i‡(
u£P©
) {

908 
ªbuûtP©
.
	`≠≥nd
(
∑tLoˇl
);

910 
	`_gíî©eP©ã∫
(
ªbuûtP©
, 
FALSE
);

912 i‡(
	`isBogus
(Ë&& 
	`U_SUCCESS
(
ec
)) {

914 
ec
 = 
U_MEMORY_ALLOCATION_ERROR
;

916 
	}
}

922 
UBoﬁ
 
	$numîicVÆueFûãr
(
UCh¨32
 
ch
, * 
c⁄ãxt
) {

923  
	`u_gëNumîicVÆue
(
ch
Ë=*(*)
c⁄ãxt
;

924 
	}
}

926 
UBoﬁ
 
	$gíîÆC©eg‹yMaskFûãr
(
UCh¨32
 
ch
, * 
c⁄ãxt
) {

927 
öt32_t
 
vÆue
 = *(öt32_t*)
c⁄ãxt
;

928  (
	`U_GET_GC_MASK
((
UCh¨32
Ë
ch
Ë& 
vÆue
) != 0;

929 
	}
}

931 
UBoﬁ
 
	$vîsi⁄Fûãr
(
UCh¨32
 
ch
, * 
c⁄ãxt
) {

932 c⁄° 
UVîsi⁄Info
 
n⁄e
 = { 0, 0, 0, 0 };

933 
UVîsi⁄Info
 
v
;

934 
	`u_ch¨Age
(
ch
, 
v
);

935 
UVîsi⁄Info
* 
vîsi⁄
 = (UVîsi⁄Info*)
c⁄ãxt
;

936  
	`u¥v_memcmp
(&
v
, &
n⁄e
, (v)Ë> 0 && u¥v_memcmp(&v, 
vîsi⁄
, (v)) <= 0;

937 
	}
}

940 
UPr›îty
 
	m¥›
;

941 
öt32_t
 
	mvÆue
;

942 } 
	tI¡Pr›îtyC⁄ãxt
;

944 
UBoﬁ
 
	$ötPr›îtyFûãr
(
UCh¨32
 
ch
, * 
c⁄ãxt
) {

945 
I¡Pr›îtyC⁄ãxt
* 
c
 = (I¡Pr›îtyC⁄ãxt*)
c⁄ãxt
;

946  
	`u_gëI¡Pr›îtyVÆue
((
UCh¨32
Ë
ch
, 
c
->
¥›
Ë=c->
vÆue
;

947 
	}
}

949 
UBoﬁ
 
	$s¸ùtExãnsi⁄sFûãr
(
UCh¨32
 
ch
, * 
c⁄ãxt
) {

950  
	`us¸ùt_hasS¸ùt
(
ch
, *(
US¸ùtCode
*)
c⁄ãxt
);

951 
	}
}

956 
	gUnicodeSë
::
≠∂yFûãr
(
UnicodeSë
::
Fûãr
 
fûãr
,

957 * 
c⁄ãxt
,

958 
öt32_t
 
§c
,

959 
UEº‹Code
 &
°©us
) {

960 i‡(
U_FAILURE
(
°©us
)) ;

971 c⁄° 
UnicodeSë
* 
	gö˛usi⁄s
 = 
gëIn˛usi⁄s
(
§c
, 
°©us
);

972 i‡(
U_FAILURE
(
°©us
)) {

976 
˛ór
();

978 
UCh¨32
 
	g°¨tHasPr›îty
 = -1;

979 
öt32_t
 
	glimôR™ge
 = 
ö˛usi⁄s
->
gëR™geCou¡
();

981 
	gj
=0; j<
	glimôR™ge
; ++j) {

983 
UCh¨32
 
	g°¨t
 = 
ö˛usi⁄s
->
gëR™geSèπ
(
j
);

984 
UCh¨32
 
	gíd
 = 
ö˛usi⁄s
->
gëR™geEnd
(
j
);

987 
UCh¨32
 
	gch
 = 
°¨t
; ch <
íd
; ++ch) {

990 i‡((*
	gfûãr
)(
	gch
, 
	gc⁄ãxt
)) {

991 i‡(
	g°¨tHasPr›îty
 < 0) {

992 
	g°¨tHasPr›îty
 = 
ch
;

994 } i‡(
	g°¨tHasPr›îty
 >= 0) {

995 
add
(
°¨tHasPr›îty
, 
ch
-1);

996 
	g°¨tHasPr›îty
 = -1;

1000 i‡(
	g°¨tHasPr›îty
 >= 0) {

1001 
add
((
UCh¨32
)
°¨tHasPr›îty
, (UChar32)0x10FFFF);

1003 i‡(
isBogus
(Ë&& 
U_SUCCESS
(
°©us
)) {

1005 
	g°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

1009 
UBoﬁ
 
	$mungeCh¨Name
(* 
d°
, c⁄° * 
§c
, 
öt32_t
 
d°C≠acôy
) {

1011 
öt32_t
 
j
 = 0;

1012 
ch
;

1013 --
d°C≠acôy
;

1014 (
ch
 = *
§c
++) != 0) {

1015 i‡(
ch
 =' ' && (
j
==0 || (j>0 && 
d°
[j-1]==' '))) {

1018 i‡(
j
 >
d°C≠acôy
Ë 
FALSE
;

1019 
d°
[
j
++] = 
ch
;

1021 i‡(
j
 > 0 && 
d°
[j-1] == ' ') --j;

1022 
d°
[
j
] = 0;

1023  
TRUE
;

1024 
	}
}

1030 
	#FAIL
(
ec
Ë{ec=
U_ILLEGAL_ARGUMENT_ERROR
;  *
this
;}

	)

1032 
	gUnicodeSë
&

1033 
	gUnicodeSë
::
	$≠∂yI¡Pr›îtyVÆue
(
UPr›îty
 
¥›
, 
öt32_t
 
vÆue
, 
UEº‹Code
& 
ec
) {

1034 i‡(
	`U_FAILURE
(
ec
Ë|| 
	`isFrozí
()Ë *
this
;

1036 i‡(
¥›
 =
UCHAR_GENERAL_CATEGORY_MASK
) {

1037 
	`≠∂yFûãr
(
gíîÆC©eg‹yMaskFûãr
, &
vÆue
, 
UPROPS_SRC_CHAR
, 
ec
);

1038 } i‡(
¥›
 =
UCHAR_SCRIPT_EXTENSIONS
) {

1039 
US¸ùtCode
 
s¸ùt
 = (US¸ùtCode)
vÆue
;

1040 
	`≠∂yFûãr
(
s¸ùtExãnsi⁄sFûãr
, &
s¸ùt
, 
UPROPS_SRC_PROPSVEC
, 
ec
);

1042 
I¡Pr›îtyC⁄ãxt
 
c
 = {
¥›
, 
vÆue
};

1043 
	`≠∂yFûãr
(
ötPr›îtyFûãr
, &
c
, 
	`u¥›s_gëSour˚
(
¥›
), 
ec
);

1045  *
this
;

1046 
	}
}

1048 
	gUnicodeSë
&

1049 
	gUnicodeSë
::
	$≠∂yPr›îtyAlüs
(c⁄° 
UnicodeSåög
& 
¥›
,

1050 c⁄° 
UnicodeSåög
& 
vÆue
,

1051 
UEº‹Code
& 
ec
) {

1052 i‡(
	`U_FAILURE
(
ec
Ë|| 
	`isFrozí
()Ë *
this
;

1060 if–!
	`u¥v_isInv¨ü¡USåög
(
¥›
.
	`gëBuf„r
(),Ör›.
	`Àngth
()) ||

1061 !
	`u¥v_isInv¨ü¡USåög
(
vÆue
.
	`gëBuf„r
(), vÆue.
	`Àngth
())

1063 
	`FAIL
(
ec
);

1065 
Ch¨Såög
 
≤ame
, 
v«me
;

1066 
≤ame
.
	`≠≥ndInv¨ü¡Ch¨s
(
¥›
, 
ec
);

1067 
v«me
.
	`≠≥ndInv¨ü¡Ch¨s
(
vÆue
, 
ec
);

1068 i‡(
	`U_FAILURE
(
ec
)Ë *
this
;

1070 
UPr›îty
 
p
;

1071 
öt32_t
 
v
;

1072 
UBoﬁ
 
mu°NŸBeEm±y
 = 
FALSE
, 
övît
 = FALSE;

1074 i‡(
vÆue
.
	`Àngth
() > 0) {

1075 
p
 = 
	`u_gëPr›îtyEnum
(
≤ame
.
	`d©a
());

1076 i‡(
p
 =
UCHAR_INVALID_CODE
Ë
	`FAIL
(
ec
);

1079 i‡(
p
 =
UCHAR_GENERAL_CATEGORY
) {

1080 
p
 = 
UCHAR_GENERAL_CATEGORY_MASK
;

1083 i‡((
p
 >
UCHAR_BINARY_START
 &&Ö < 
UCHAR_BINARY_LIMIT
) ||

1084 (
p
 >
UCHAR_INT_START
 &&Ö < 
UCHAR_INT_LIMIT
) ||

1085 (
p
 >
UCHAR_MASK_START
 &&Ö < 
UCHAR_MASK_LIMIT
)) {

1086 
v
 = 
	`u_gëPr›îtyVÆueEnum
(
p
, 
v«me
.
	`d©a
());

1087 i‡(
v
 =
UCHAR_INVALID_CODE
) {

1089 i‡(
p
 =
UCHAR_CANONICAL_COMBINING_CLASS
 ||

1090 
p
 =
UCHAR_TRAIL_CANONICAL_COMBINING_CLASS
 ||

1091 
p
 =
UCHAR_LEAD_CANONICAL_COMBINING_CLASS
) {

1092 * 
íd
;

1093 
vÆue
 = 
	`u¥v_°πod
(
v«me
.
	`d©a
(), &
íd
);

1094 
v
 = (
öt32_t
Ë
vÆue
;

1095 i‡(
v
 !
vÆue
 || v < 0 || *
íd
 != 0) {

1097 
	`FAIL
(
ec
);

1101 
mu°NŸBeEm±y
 = 
TRUE
;

1103 
	`FAIL
(
ec
);

1110 
p
) {

1111 
UCHAR_NUMERIC_VALUE
:

1113 * 
íd
;

1114 
vÆue
 = 
	`u¥v_°πod
(
v«me
.
	`d©a
(), &
íd
);

1115 i‡(*
íd
 != 0) {

1116 
	`FAIL
(
ec
);

1118 
	`≠∂yFûãr
(
numîicVÆueFûãr
, &
vÆue
, 
UPROPS_SRC_CHAR
, 
ec
);

1119  *
this
;

1122 
UCHAR_NAME
:

1123 
UCHAR_UNICODE_1_NAME
:

1127 
buf
[128];

1128 i‡(!
	`mungeCh¨Name
(
buf
, 
v«me
.
	`d©a
(), (buf))Ë
	`FAIL
(
ec
);

1129 
UCh¨NameChoi˚
 
choi˚
 = (
p
 =
UCHAR_NAME
) ?

1130 
U_EXTENDED_CHAR_NAME
 : 
U_UNICODE_10_CHAR_NAME
;

1131 
UCh¨32
 
ch
 = 
	`u_ch¨FromName
(
choi˚
, 
buf
, &
ec
);

1132 i‡(
	`U_SUCCESS
(
ec
)) {

1133 
	`˛ór
();

1134 
	`add
(
ch
);

1135  *
this
;

1137 
	`FAIL
(
ec
);

1141 
UCHAR_AGE
:

1145 
buf
[128];

1146 i‡(!
	`mungeCh¨Name
(
buf
, 
v«me
.
	`d©a
(), (buf))Ë
	`FAIL
(
ec
);

1147 
UVîsi⁄Info
 
vîsi⁄
;

1148 
	`u_vîsi⁄FromSåög
(
vîsi⁄
, 
buf
);

1149 
	`≠∂yFûãr
(
vîsi⁄Fûãr
, &
vîsi⁄
, 
UPROPS_SRC_PROPSVEC
, 
ec
);

1150  *
this
;

1153 
UCHAR_SCRIPT_EXTENSIONS
:

1154 
v
 = 
	`u_gëPr›îtyVÆueEnum
(
UCHAR_SCRIPT
, 
v«me
.
	`d©a
());

1155 i‡(
v
 =
UCHAR_INVALID_CODE
) {

1156 
	`FAIL
(
ec
);

1163 
	`FAIL
(
ec
);

1171 
p
 = 
UCHAR_GENERAL_CATEGORY_MASK
;

1172 
v
 = 
	`u_gëPr›îtyVÆueEnum
(
p
, 
≤ame
.
	`d©a
());

1173 i‡(
v
 =
UCHAR_INVALID_CODE
) {

1174 
p
 = 
UCHAR_SCRIPT
;

1175 
v
 = 
	`u_gëPr›îtyVÆueEnum
(
p
, 
≤ame
.
	`d©a
());

1176 i‡(
v
 =
UCHAR_INVALID_CODE
) {

1177 
p
 = 
	`u_gëPr›îtyEnum
(
≤ame
.
	`d©a
());

1178 i‡(
p
 >
UCHAR_BINARY_START
 &&Ö < 
UCHAR_BINARY_LIMIT
) {

1179 
v
 = 1;

1180 } i‡(0 =
	`u¥v_com∑ªPr›îtyNames
(
ANY
, 
≤ame
.
	`d©a
())) {

1181 
	`£t
(
MIN_VALUE
, 
MAX_VALUE
);

1182  *
this
;

1183 } i‡(0 =
	`u¥v_com∑ªPr›îtyNames
(
ASCII
, 
≤ame
.
	`d©a
())) {

1184 
	`£t
(0, 0x7F);

1185  *
this
;

1186 } i‡(0 =
	`u¥v_com∑ªPr›îtyNames
(
ASSIGNED
, 
≤ame
.
	`d©a
())) {

1188 
p
 = 
UCHAR_GENERAL_CATEGORY_MASK
;

1189 
v
 = 
U_GC_CN_MASK
;

1190 
övît
 = 
TRUE
;

1192 
	`FAIL
(
ec
);

1198 
	`≠∂yI¡Pr›îtyVÆue
(
p
, 
v
, 
ec
);

1199 if(
övît
) {

1200 
	`com∂emít
();

1203 i‡(
	`U_SUCCESS
(
ec
Ë&& (
mu°NŸBeEm±y
 && 
	`isEm±y
())) {

1206 
ec
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1209 i‡(
	`isBogus
(Ë&& 
	`U_SUCCESS
(
ec
)) {

1211 
ec
 = 
U_MEMORY_ALLOCATION_ERROR
;

1213  *
this
;

1214 
	}
}

1224 
UBoﬁ
 
	gUnicodeSë
::
	$ª£mbÀsPr›îtyP©ã∫
(c⁄° 
UnicodeSåög
& 
∑âîn
,

1225 
öt32_t
 
pos
) {

1227 i‡((
pos
+5Ë> 
∑âîn
.
	`Àngth
()) {

1228  
FALSE
;

1232  
	`isPOSIXO≥n
(
∑âîn
, 
pos
Ë|| 
	`isPîlO≥n
’©ã∫,ÖosË|| 
	`isNameO≥n
(pattern,Öos);

1233 
	}
}

1243 
UBoﬁ
 
	gUnicodeSë
::
	$ª£mbÀsPr›îtyP©ã∫
(
RuÀCh¨a˘îIãøt‹
& 
ch¨s
,

1244 
öt32_t
 
ôîO±s
) {

1246 
UBoﬁ
 
ªsu…
 = 
FALSE
, 
lôîÆ
;

1247 
UEº‹Code
 
ec
 = 
U_ZERO_ERROR
;

1248 
ôîO±s
 &~
RuÀCh¨a˘îIãøt‹
::
PARSE_ESCAPES
;

1249 
RuÀCh¨a˘îIãøt‹
::
Pos
 
pos
;

1250 
ch¨s
.
	`gëPos
(
pos
);

1251 
UCh¨32
 
c
 = 
ch¨s
.
	`√xt
(
ôîO±s
, 
lôîÆ
, 
ec
);

1252 i‡(
c
 == 0x5B || c == 0x5C ) {

1253 
UCh¨32
 
d
 = 
ch¨s
.
	`√xt
(
ôîO±s
 & ~
RuÀCh¨a˘îIãøt‹
::
SKIP_WHITESPACE
,

1254 
lôîÆ
, 
ec
);

1255 
ªsu…
 = (
c
 =0x5B ) ? (
d
 == 0x3A ) :

1256 (
d
 == 0x4E || d == 0x70 || d == 0x50 );

1258 
ch¨s
.
	`£tPos
(
pos
);

1259  
ªsu…
 && 
	`U_SUCCESS
(
ec
);

1260 
	}
}

1265 
	gUnicodeSë
& UnicodeSë::
	$≠∂yPr›îtyP©ã∫
(c⁄° 
UnicodeSåög
& 
∑âîn
,

1266 
P¨£Posôi⁄
& 
µos
,

1267 
UEº‹Code
 &
ec
) {

1268 
öt32_t
 
pos
 = 
µos
.
	`gëIndex
();

1270 
UBoﬁ
 
posix
 = 
FALSE
;

1271 
UBoﬁ
 
isName
 = 
FALSE
;

1272 
UBoﬁ
 
övît
 = 
FALSE
;

1274 i‡(
	`U_FAILURE
(
ec
)Ë *
this
;

1277 i‡((
pos
+5Ë> 
∑âîn
.
	`Àngth
()) {

1278 
	`FAIL
(
ec
);

1283 i‡(
	`isPOSIXO≥n
(
∑âîn
, 
pos
)) {

1284 
posix
 = 
TRUE
;

1285 
pos
 += 2;

1286 
pos
 = 
ICU_Utûôy
::
	`skùWhôe•a˚
(
∑âîn
,Öos);

1287 i‡(
pos
 < 
∑âîn
.
	`Àngth
(Ë&&Ö©ã∫.
	`ch¨At
’osË=
COMPLEMENT
) {

1288 ++
pos
;

1289 
övît
 = 
TRUE
;

1291 } i‡(
	`isPîlO≥n
(
∑âîn
, 
pos
Ë|| 
	`isNameO≥n
(pattern,Öos)) {

1292 
UCh¨
 
c
 = 
∑âîn
.
	`ch¨At
(
pos
+1);

1293 
övît
 = (
c
 =
UPPER_P
);

1294 
isName
 = (
c
 =
UPPER_N
);

1295 
pos
 += 2;

1296 
pos
 = 
ICU_Utûôy
::
	`skùWhôe•a˚
(
∑âîn
,Öos);

1297 i‡(
pos
 =
∑âîn
.
	`Àngth
(Ë||Ö©ã∫.
	`ch¨At
’os++Ë!
OPEN_BRACE
) {

1299 
	`FAIL
(
ec
);

1303 
	`FAIL
(
ec
);

1307 
öt32_t
 
˛o£
 = 
∑âîn
.
	`ödexOf
(
posix
 ? 
POSIX_CLOSE
 : 
PERL_CLOSE
, 
pos
);

1308 i‡(
˛o£
 < 0) {

1310 
	`FAIL
(
ec
);

1316 
öt32_t
 
equÆs
 = 
∑âîn
.
	`ödexOf
(
EQUALS
, 
pos
);

1317 
UnicodeSåög
 
¥›Name
, 
vÆueName
;

1318 i‡(
equÆs
 >0 &&ÉquÆ†< 
˛o£
 && !
isName
) {

1320 
∑âîn
.
	`exåa˘Bëwìn
(
pos
, 
equÆs
, 
¥›Name
);

1321 
∑âîn
.
	`exåa˘Bëwìn
(
equÆs
+1, 
˛o£
, 
vÆueName
);

1326 
∑âîn
.
	`exåa˘Bëwìn
(
pos
, 
˛o£
, 
¥›Name
);

1329 i‡(
isName
) {

1335 
vÆueName
 = 
¥›Name
;

1336 
¥›Name
 = 
	`UnicodeSåög
(
NAME_PROP
, 
NAME_PROP_LENGTH
, 
US_INV
);

1340 
	`≠∂yPr›îtyAlüs
(
¥›Name
, 
vÆueName
, 
ec
);

1342 i‡(
	`U_SUCCESS
(
ec
)) {

1343 i‡(
övît
) {

1344 
	`com∂emít
();

1349 
µos
.
	`£tIndex
(
˛o£
 + (
posix
 ? 2 : 1));

1352  *
this
;

1353 
	}
}

1364 
	gUnicodeSë
::
	$≠∂yPr›îtyP©ã∫
(
RuÀCh¨a˘îIãøt‹
& 
ch¨s
,

1365 
UnicodeSåög
& 
ªbuûtP©
,

1366 
UEº‹Code
& 
ec
) {

1367 i‡(
	`U_FAILURE
(
ec
)) ;

1368 
UnicodeSåög
 
∑âîn
;

1369 
ch¨s
.
	`lookahód
(
∑âîn
);

1370 
P¨£Posôi⁄
 
	`pos
(0);

1371 
	`≠∂yPr›îtyP©ã∫
(
∑âîn
, 
pos
, 
ec
);

1372 i‡(
	`U_FAILURE
(
ec
)) ;

1373 i‡(
pos
.
	`gëIndex
() == 0) {

1375 
ec
 = 
U_MALFORMED_SET
;

1378 
ch¨s
.
	`jum∑hód
(
pos
.
	`gëIndex
());

1379 
ªbuûtP©
.
	`≠≥nd
(
∑âîn
, 0, 
pos
.
	`gëIndex
());

1380 
	}
}

1388 
ölöe
 

1389 
	$addCa£M≠pög
(
UnicodeSë
 &
£t
, 
öt32_t
 
ªsu…
, c⁄° 
UCh¨
 *
fuŒ
, 
UnicodeSåög
 &
°r
) {

1390 if(
ªsu…
 >= 0) {

1391 if(
ªsu…
 > 
UCASE_MAX_STRING_LENGTH
) {

1393 
£t
.
	`add
(
ªsu…
);

1396 
°r
.
	`£tTo
((
UBoﬁ
)
FALSE
, 
fuŒ
, 
ªsu…
);

1397 
£t
.
	`add
(
°r
);

1402 
	}
}

1404 
	gUnicodeSë
& UnicodeSë::
	$˛o£Ovî
(
öt32_t
 
©åibuã
) {

1405 i‡(
	`isFrozí
(Ë|| 
	`isBogus
()) {

1406  *
this
;

1408 i‡(
©åibuã
 & (
USET_CASE_INSENSITIVE
 | 
USET_ADD_CASE_MAPPINGS
)) {

1409 c⁄° 
UCa£Pr›s
 *
c•
 = 
	`uˇ£_gëSögÀt⁄
();

1411 
UnicodeSë
 
	`fﬁdSë
(*
this
);

1412 
UnicodeSåög
 
°r
;

1413 
USëAddî
 
ß
 = {

1414 
fﬁdSë
.
	`toUSë
(),

1415 
_£t_add
,

1416 
_£t_addR™ge
,

1417 
_£t_addSåög
,

1418 
NULL
,

1419 
NULL


1425 i‡(
©åibuã
 & 
USET_CASE_INSENSITIVE
) {

1426 
fﬁdSë
.
°rögs
->
	`ªmoveAŒEÀmíts
();

1429 
öt32_t
 
n
 = 
	`gëR™geCou¡
();

1430 
UCh¨32
 
ªsu…
;

1431 c⁄° 
UCh¨
 *
fuŒ
;

1432 
öt32_t
 
locCache
 = 0;

1434 
öt32_t
 
i
=0; i<
n
; ++i) {

1435 
UCh¨32
 
°¨t
 = 
	`gëR™geSèπ
(
i
);

1436 
UCh¨32
 
íd
 = 
	`gëR™geEnd
(
i
);

1438 i‡(
©åibuã
 & 
USET_CASE_INSENSITIVE
) {

1440 
UCh¨32
 
˝
=
°¨t
; cp<=
íd
; ++cp) {

1441 
	`uˇ£_addCa£Closuª
(
c•
, 
˝
, &
ß
);

1446 
UCh¨32
 
˝
=
°¨t
; cp<=
íd
; ++cp) {

1447 
ªsu…
 = 
	`uˇ£_toFuŒLowî
(
c•
, 
˝
, 
NULL
, NULL, &
fuŒ
, "", &
locCache
);

1448 
	`addCa£M≠pög
(
fﬁdSë
, 
ªsu…
, 
fuŒ
, 
°r
);

1450 
ªsu…
 = 
	`uˇ£_toFuŒTôÀ
(
c•
, 
˝
, 
NULL
, NULL, &
fuŒ
, "", &
locCache
);

1451 
	`addCa£M≠pög
(
fﬁdSë
, 
ªsu…
, 
fuŒ
, 
°r
);

1453 
ªsu…
 = 
	`uˇ£_toFuŒUµî
(
c•
, 
˝
, 
NULL
, NULL, &
fuŒ
, "", &
locCache
);

1454 
	`addCa£M≠pög
(
fﬁdSë
, 
ªsu…
, 
fuŒ
, 
°r
);

1456 
ªsu…
 = 
	`uˇ£_toFuŒFﬁdög
(
c•
, 
˝
, &
fuŒ
, 0);

1457 
	`addCa£M≠pög
(
fﬁdSë
, 
ªsu…
, 
fuŒ
, 
°r
);

1461 i‡(
°rögs
 !
NULL
 && såögs->
	`size
() > 0) {

1462 i‡(
©åibuã
 & 
USET_CASE_INSENSITIVE
) {

1463 
öt32_t
 
j
=0; j<
°rögs
->
	`size
(); ++j) {

1464 
°r
 = *(c⁄° 
UnicodeSåög
 *Ë
°rögs
->
	`ñemítAt
(
j
);

1465 
°r
.
	`fﬁdCa£
();

1466 if(!
	`uˇ£_addSåögCa£Closuª
(
c•
, 
°r
.
	`gëBuf„r
(), så.
	`Àngth
(), &
ß
)) {

1467 
fﬁdSë
.
	`add
(
°r
);

1471 
LoˇÀ
 
	`roŸ
("");

1472 #i‡!
UCONFIG_NO_BREAK_ITERATION


1473 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

1474 
BªakIãøt‹
 *
bi
 = BªakIãøt‹::
	`¸óãW‹dIn°™˚
(
roŸ
, 
°©us
);

1475 i‡(
	`U_SUCCESS
(
°©us
)) {

1477 c⁄° 
UnicodeSåög
 *
pSå
;

1479 
öt32_t
 
j
=0; j<
°rögs
->
	`size
(); ++j) {

1480 
pSå
 = (c⁄° 
UnicodeSåög
 *Ë
°rögs
->
	`ñemítAt
(
j
);

1481 (
°r
 = *
pSå
).
	`toLowî
(
roŸ
);

1482 
fﬁdSë
.
	`add
(
°r
);

1483 #i‡!
UCONFIG_NO_BREAK_ITERATION


1484 (
°r
 = *
pSå
).
	`toTôÀ
(
bi
, 
roŸ
);

1485 
fﬁdSë
.
	`add
(
°r
);

1487 (
°r
 = *
pSå
).
	`toUµî
(
roŸ
);

1488 
fﬁdSë
.
	`add
(
°r
);

1489 (
°r
 = *
pSå
).
	`fﬁdCa£
();

1490 
fﬁdSë
.
	`add
(
°r
);

1492 #i‡!
UCONFIG_NO_BREAK_ITERATION


1494 
dñëe
 
bi
;

1498 *
this
 = 
fﬁdSë
;

1501  *
this
;

1502 
	}
}

1504 
	gU_NAMESPACE_END


	@unisetspan.cpp

17 
	~"unicode/uty≥s.h
"

18 
	~"unicode/uni£t.h
"

19 
	~"unicode/u°rög.h
"

20 
	~"cmem‹y.h
"

21 
	~"uve˘‹.h
"

22 
	~"uni£t•™.h
"

24 
U_NAMESPACE_BEGIN


53 ˛as†
	cOff£tLi°
 {

54 
	mpublic
:

55 
	$Off£tLi°
(Ë: 
	`li°
(
°©icLi°
), 
	`ˇ∑côy
(0), 
	`Àngth
(0), 
	$°¨t
(0) {}

57 ~
	$Off£tLi°
() {

58 if(
li°
!=
°©icLi°
) {

59 
	`u¥v_‰ì
(
li°
);

61 
	}
}

64 
	$£tMaxLígth
(
öt32_t
 
maxLígth
) {

65 if(
maxLígth
<=(
öt32_t
)(
°©icLi°
)) {

66 
ˇ∑côy
=(
öt32_t
)(
°©icLi°
);

68 
UBoﬁ
 *
l
=(UBoﬁ *)
	`u¥v_mÆloc
(
maxLígth
);

69 if(
l
!=
NULL
) {

70 
li°
=
l
;

71 
ˇ∑côy
=
maxLígth
;

74 
	`u¥v_mem£t
(
li°
, 0, 
ˇ∑côy
);

75 
	}
}

77 
	$˛ór
() {

78 
	`u¥v_mem£t
(
li°
, 0, 
ˇ∑côy
);

79 
°¨t
=
Àngth
=0;

80 
	}
}

82 
UBoﬁ
 
	$isEm±y
() const {

83  (
UBoﬁ
)(
Àngth
==0);

84 
	}
}

91 
	$shi·
(
öt32_t
 
dñè
) {

92 
öt32_t
 
i
=
°¨t
+
dñè
;

93 if(
i
>=
ˇ∑côy
) {

94 
i
-=
ˇ∑côy
;

96 if(
li°
[
i
]) {

97 
li°
[
i
]=
FALSE
;

98 --
Àngth
;

100 
°¨t
=
i
;

101 
	}
}

105 
	$addOff£t
(
öt32_t
 
off£t
) {

106 
öt32_t
 
i
=
°¨t
+
off£t
;

107 if(
i
>=
ˇ∑côy
) {

108 
i
-=
ˇ∑côy
;

110 
li°
[
i
]=
TRUE
;

111 ++
Àngth
;

112 
	}
}

115 
UBoﬁ
 
	$c⁄èösOff£t
(
öt32_t
 
off£t
) const {

116 
öt32_t
 
i
=
°¨t
+
off£t
;

117 if(
i
>=
ˇ∑côy
) {

118 
i
-=
ˇ∑côy
;

120  
li°
[
i
];

121 
	}
}

126 
öt32_t
 
	$p›Möimum
() {

128 
öt32_t
 
i
=
°¨t
, 
ªsu…
;

129 ++
i
<
ˇ∑côy
) {

130 if(
li°
[
i
]) {

131 
li°
[
i
]=
FALSE
;

132 --
Àngth
;

133 
ªsu…
=
i
-
°¨t
;

134 
°¨t
=
i
;

135  
ªsu…
;

142 
ªsu…
=
ˇ∑côy
-
°¨t
;

143 
i
=0;

144 !
li°
[
i
]) {

145 ++
i
;

147 
li°
[
i
]=
FALSE
;

148 --
Àngth
;

149 
°¨t
=
i
;

150  
ªsu…
+=
i
;

151 
	}
}

153 
	g¥iv©e
:

154 
UBoﬁ
 *
li°
;

155 
öt32_t
 
	gˇ∑côy
;

156 
öt32_t
 
	gÀngth
;

157 
öt32_t
 
	g°¨t
;

159 
UBoﬁ
 
	g°©icLi°
[16];

163 
öt32_t


164 
	$gëUTF8Lígth
(c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
) {

165 
UEº‹Code
 
îr‹Code
=
U_ZERO_ERROR
;

166 
öt32_t
 
Àngth8
=0;

167 
	`u_°rToUTF8
(
NULL
, 0, &
Àngth8
, 
s
, 
Àngth
, &
îr‹Code
);

168 if(
	`U_SUCCESS
(
îr‹Code
Ë||Éº‹Code==
U_BUFFER_OVERFLOW_ERROR
) {

169  
Àngth8
;

175 
	}
}

178 
öt32_t


179 
	$≠≥ndUTF8
(c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
, 
uöt8_t
 *
t
, i¡32_à
ˇ∑côy
) {

180 
UEº‹Code
 
îr‹Code
=
U_ZERO_ERROR
;

181 
öt32_t
 
Àngth8
=0;

182 
	`u_°rToUTF8
((*)
t
, 
ˇ∑côy
, &
Àngth8
, 
s
, 
Àngth
, &
îr‹Code
);

183 if(
	`U_SUCCESS
(
îr‹Code
)) {

184  
Àngth8
;

190 
	}
}

192 
ölöe
 
uöt8_t


193 
	$makeS∑nLígthByã
(
öt32_t
 
•™Lígth
) {

195  
•™Lígth
<0x„ ? (
uöt8_t
)spanLength : (uint8_t)0xfe;

196 
	}
}

200 
	gUnicodeSëSåögS∑n
::
	$UnicodeSëSåögS∑n
(c⁄° 
UnicodeSë
 &
£t
,

201 c⁄° 
UVe˘‹
 &
£tSåögs
,

202 
uöt32_t
 
which
)

203 : 
	`•™Së
(0, 0x10ffff), 
	`pS∑nNŸSë
(
NULL
), 
	`°rögs
(
£tSåögs
),

204 
	`utf8Lígths
(
NULL
), 
	`•™Lígths
(NULL), 
	`utf8
(NULL),

205 
	`utf8Lígth
(0),

206 
	`maxLígth16
(0), 
	`maxLígth8
(0),

207 
	`Æl
((
UBoﬁ
)(
which
==
ALL
)) {

208 
•™Së
.
	`ªèöAŒ
(
£t
);

209 if(
which
&
NOT_CONTAINED
) {

212 
pS∑nNŸSë
=&
•™Së
;

222 
öt32_t
 
°rögsLígth
=
°rögs
.
	`size
();

224 
öt32_t
 
i
, 
•™Lígth
;

225 
UBoﬁ
 
someRñev™t
=
FALSE
;

226 
i
=0; i<
°rögsLígth
; ++i) {

227 c⁄° 
UnicodeSåög
 &
°rög
=*(c⁄° UnicodeSåög *)
°rögs
.
	`ñemítAt
(
i
);

228 c⁄° 
UCh¨
 *
s16
=
°rög
.
	`gëBuf„r
();

229 
öt32_t
 
Àngth16
=
°rög
.
	`Àngth
();

230 
UBoﬁ
 
thisRñev™t
;

231 
•™Lígth
=
•™Së
.
	`•™
(
s16
, 
Àngth16
, 
USET_SPAN_CONTAINED
);

232 if(
•™Lígth
<
Àngth16
) {

233 
someRñev™t
=
thisRñev™t
=
TRUE
;

235 
thisRñev™t
=
FALSE
;

237 if((
which
&
UTF16
Ë&& 
Àngth16
>
maxLígth16
) {

238 
maxLígth16
=
Àngth16
;

240 if((
which
&
UTF8
Ë&& (
thisRñev™t
 || (which&
CONTAINED
))) {

241 
öt32_t
 
Àngth8
=
	`gëUTF8Lígth
(
s16
, 
Àngth16
);

242 
utf8Lígth
+=
Àngth8
;

243 if(
Àngth8
>
maxLígth8
) {

244 
maxLígth8
=
Àngth8
;

248 if(!
someRñev™t
) {

249 
maxLígth16
=
maxLígth8
=0;

255 if(
Æl
) {

256 
•™Së
.
	`‰ìze
();

259 
uöt8_t
 *
•™BackLígths
;

260 
uöt8_t
 *
•™UTF8Lígths
;

261 
uöt8_t
 *
•™BackUTF8Lígths
;

264 
öt32_t
 
ÆlocSize
;

265 if(
Æl
) {

267 
ÆlocSize
=
°rögsLígth
*(4+1+1+1+1)+
utf8Lígth
;

269 
ÆlocSize
=
°rögsLígth
;

270 if(
which
&
UTF8
) {

272 
ÆlocSize
+=
°rögsLígth
*4+
utf8Lígth
;

275 if(
ÆlocSize
<=(
öt32_t
)(
°©icLígths
)) {

276 
utf8Lígths
=
°©icLígths
;

278 
utf8Lígths
=(
öt32_t
 *)
	`u¥v_mÆloc
(
ÆlocSize
);

279 if(
utf8Lígths
==
NULL
) {

280 
maxLígth16
=
maxLígth8
=0;

285 if(
Æl
) {

287 
•™Lígths
=(
uöt8_t
 *)(
utf8Lígths
+
°rögsLígth
);

288 
•™BackLígths
=
•™Lígths
+
°rögsLígth
;

289 
•™UTF8Lígths
=
•™BackLígths
+
°rögsLígth
;

290 
•™BackUTF8Lígths
=
•™UTF8Lígths
+
°rögsLígth
;

291 
utf8
=
•™BackUTF8Lígths
+
°rögsLígth
;

294 if(
which
&
UTF8
) {

295 
•™Lígths
=(
uöt8_t
 *)(
utf8Lígths
+
°rögsLígth
);

296 
utf8
=
•™Lígths
+
°rögsLígth
;

298 
•™Lígths
=(
uöt8_t
 *)
utf8Lígths
;

300 
•™BackLígths
=
•™UTF8Lígths
=
•™BackUTF8Lígths
=
•™Lígths
;

304 
öt32_t
 
utf8Cou¡
=0;

306 
i
=0; i<
°rögsLígth
; ++i) {

307 c⁄° 
UnicodeSåög
 &
°rög
=*(c⁄° UnicodeSåög *)
°rögs
.
	`ñemítAt
(
i
);

308 c⁄° 
UCh¨
 *
s16
=
°rög
.
	`gëBuf„r
();

309 
öt32_t
 
Àngth16
=
°rög
.
	`Àngth
();

310 
•™Lígth
=
•™Së
.
	`•™
(
s16
, 
Àngth16
, 
USET_SPAN_CONTAINED
);

311 if(
•™Lígth
<
Àngth16
) {

312 if(
which
&
UTF16
) {

313 if(
which
&
CONTAINED
) {

314 if(
which
&
FWD
) {

315 
•™Lígths
[
i
]=
	`makeS∑nLígthByã
(
•™Lígth
);

317 if(
which
&
BACK
) {

318 
•™Lígth
=
Àngth16
-
•™Së
.
	`•™Back
(
s16
,Üígth16, 
USET_SPAN_CONTAINED
);

319 
•™BackLígths
[
i
]=
	`makeS∑nLígthByã
(
•™Lígth
);

322 
•™Lígths
[
i
]=
•™BackLígths
[i]=0;

325 if(
which
&
UTF8
) {

326 
uöt8_t
 *
s8
=
utf8
+
utf8Cou¡
;

327 
öt32_t
 
Àngth8
=
	`≠≥ndUTF8
(
s16
, 
Àngth16
, 
s8
, 
utf8Lígth
-
utf8Cou¡
);

328 
utf8Cou¡
+=
utf8Lígths
[
i
]=
Àngth8
;

329 if(
Àngth8
==0) {

330 
•™UTF8Lígths
[
i
]=
•™BackUTF8Lígths
[i]=(
uöt8_t
)
ALL_CP_CONTAINED
;

332 if(
which
&
CONTAINED
) {

333 if(
which
&
FWD
) {

334 
•™Lígth
=
•™Së
.
	`•™UTF8
((c⁄° *)
s8
, 
Àngth8
, 
USET_SPAN_CONTAINED
);

335 
•™UTF8Lígths
[
i
]=
	`makeS∑nLígthByã
(
•™Lígth
);

337 if(
which
&
BACK
) {

338 
•™Lígth
=
Àngth8
-
•™Së
.
	`•™BackUTF8
((c⁄° *)
s8
,Üígth8, 
USET_SPAN_CONTAINED
);

339 
•™BackUTF8Lígths
[
i
]=
	`makeS∑nLígthByã
(
•™Lígth
);

342 
•™UTF8Lígths
[
i
]=
•™BackUTF8Lígths
[i]=0;

346 if(
which
&
NOT_CONTAINED
) {

349 
UCh¨32
 
c
;

350 if(
which
&
FWD
) {

351 
öt32_t
 
Àn
=0;

352 
	`U16_NEXT
(
s16
, 
Àn
, 
Àngth16
, 
c
);

353 
	`addToS∑nNŸSë
(
c
);

355 if(
which
&
BACK
) {

356 
öt32_t
 
Àn
=
Àngth16
;

357 
	`U16_PREV
(
s16
, 0, 
Àn
, 
c
);

358 
	`addToS∑nNŸSë
(
c
);

362 if(
which
&
UTF8
) {

363 if(
which
&
CONTAINED
) {

364 
uöt8_t
 *
s8
=
utf8
+
utf8Cou¡
;

365 
öt32_t
 
Àngth8
=
	`≠≥ndUTF8
(
s16
, 
Àngth16
, 
s8
, 
utf8Lígth
-
utf8Cou¡
);

366 
utf8Cou¡
+=
utf8Lígths
[
i
]=
Àngth8
;

368 
utf8Lígths
[
i
]=0;

371 if(
Æl
) {

372 
•™Lígths
[
i
]=
•™BackLígths
[i]=

373 
•™UTF8Lígths
[
i
]=
•™BackUTF8Lígths
[i]=

374 (
uöt8_t
)
ALL_CP_CONTAINED
;

377 
•™Lígths
[
i
]=(
uöt8_t
)
ALL_CP_CONTAINED
;

383 if(
Æl
) {

384 
pS∑nNŸSë
->
	`‰ìze
();

386 
	}
}

389 
	gUnicodeSëSåögS∑n
::
	$UnicodeSëSåögS∑n
(c⁄° 
UnicodeSëSåögS∑n
 &
ŸhîSåögS∑n
,

390 c⁄° 
UVe˘‹
 &
√wP¨ítSëSåögs
)

391 : 
	`•™Së
(
ŸhîSåögS∑n
.
•™Së
), 
	`pS∑nNŸSë
(
NULL
), 
	`°rögs
(
√wP¨ítSëSåögs
),

392 
	`utf8Lígths
(
NULL
), 
	`•™Lígths
(NULL), 
	`utf8
(NULL),

393 
	`utf8Lígth
(
ŸhîSåögS∑n
.
utf8Lígth
),

394 
	`maxLígth16
(
ŸhîSåögS∑n
.
maxLígth16
), 
	`maxLígth8
(ŸhîSåögS∑n.
maxLígth8
),

395 
	$Æl
(
TRUE
) {

396 if(
ŸhîSåögS∑n
.
pS∑nNŸSë
==&ŸhîSåögS∑n.
•™Së
) {

397 
pS∑nNŸSë
=&
•™Së
;

399 
pS∑nNŸSë
=(
UnicodeSë
 *)
ŸhîSåögS∑n
.pS∑nNŸSë->
	`˛⁄e
();

404 
öt32_t
 
°rögsLígth
=
°rögs
.
	`size
();

405 
öt32_t
 
ÆlocSize
=
°rögsLígth
*(4+1+1+1+1)+
utf8Lígth
;

406 if(
ÆlocSize
<=(
öt32_t
)(
°©icLígths
)) {

407 
utf8Lígths
=
°©icLígths
;

409 
utf8Lígths
=(
öt32_t
 *)
	`u¥v_mÆloc
(
ÆlocSize
);

410 if(
utf8Lígths
==
NULL
) {

411 
maxLígth16
=
maxLígth8
=0;

416 
•™Lígths
=(
uöt8_t
 *)(
utf8Lígths
+
°rögsLígth
);

417 
utf8
=
•™Lígths
+
°rögsLígth
*4;

418 
	`u¥v_mem˝y
(
utf8Lígths
, 
ŸhîSåögS∑n
.utf8Lígths, 
ÆlocSize
);

419 
	}
}

421 
	gUnicodeSëSåögS∑n
::~
	$UnicodeSëSåögS∑n
() {

422 if(
pS∑nNŸSë
!=
NULL
 &&ÖS∑nNŸSë!=&
•™Së
) {

423 
dñëe
 
pS∑nNŸSë
;

425 if(
utf8Lígths
!=
NULL
 && utf8Lígths!=
°©icLígths
) {

426 
	`u¥v_‰ì
(
utf8Lígths
);

428 
	}
}

430 
	gUnicodeSëSåögS∑n
::
	$addToS∑nNŸSë
(
UCh¨32
 
c
) {

431 if(
pS∑nNŸSë
==
NULL
 ||ÖS∑nNŸSë==&
•™Së
) {

432 if(
•™Së
.
	`c⁄èös
(
c
)) {

435 
UnicodeSë
 *
√wSë
=(UnicodeSë *)
•™Së
.
	`˛⁄eAsThawed
();

436 if(
√wSë
==
NULL
) {

439 
pS∑nNŸSë
=
√wSë
;

442 
pS∑nNŸSë
->
	`add
(
c
);

443 
	}
}

446 
ölöe
 
UBoﬁ


447 
	$m©ches16
(c⁄° 
UCh¨
 *
s
, c⁄° UCh¨ *
t
, 
öt32_t
 
Àngth
) {

449 if(*
s
++!=*
t
++) {

450  
FALSE
;

452 } --
Àngth
>0);

453  
TRUE
;

454 
	}
}

456 
ölöe
 
UBoﬁ


457 
	$m©ches8
(c⁄° 
uöt8_t
 *
s
, c⁄° uöt8_à*
t
, 
öt32_t
 
Àngth
) {

459 if(*
s
++!=*
t
++) {

460  
FALSE
;

462 } --
Àngth
>0);

463  
TRUE
;

464 
	}
}

469 
ölöe
 
UBoﬁ


470 
	$m©ches16CPB
(c⁄° 
UCh¨
 *
s
, 
öt32_t
 
°¨t
, i¡32_à
limô
, c⁄° UCh¨ *
t
, i¡32_à
Àngth
) {

471 
s
+=
°¨t
;

472 
limô
-=
°¨t
;

473  
	`m©ches16
(
s
, 
t
, 
Àngth
) &&

474 !(0<
°¨t
 && 
	`U16_IS_LEAD
(
s
[-1]Ë&& 
	`U16_IS_TRAIL
(s[0])) &&

475 !(
Àngth
<
limô
 && 
	`U16_IS_LEAD
(
s
[Àngth-1]Ë&& 
	`U16_IS_TRAIL
(s[length]));

476 
	}
}

480 
ölöe
 
öt32_t


481 
	$•™O√
(c⁄° 
UnicodeSë
 &
£t
, c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
) {

482 
UCh¨
 
c
=*
s
, 
c2
;

483 if(
c
>=0xd800 && c<=0xdbf‡&& 
Àngth
>=2 && 
	`U16_IS_TRAIL
(
c2
=
s
[1])) {

484  
£t
.
	`c⁄èös
(
	`U16_GET_SUPPLEMENTARY
(
c
, 
c2
)) ? 2 : -2;

486  
£t
.
	`c⁄èös
(
c
) ? 1 : -1;

487 
	}
}

489 
ölöe
 
öt32_t


490 
	$•™O√Back
(c⁄° 
UnicodeSë
 &
£t
, c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
) {

491 
UCh¨
 
c
=
s
[
Àngth
-1], 
c2
;

492 if(
c
>=0xdc00 && c<=0xdff‡&& 
Àngth
>=2 && 
	`U16_IS_LEAD
(
c2
=
s
[length-2])) {

493  
£t
.
	`c⁄èös
(
	`U16_GET_SUPPLEMENTARY
(
c2
, 
c
)) ? 2 : -2;

495  
£t
.
	`c⁄èös
(
c
) ? 1 : -1;

496 
	}
}

498 
ölöe
 
öt32_t


499 
	$•™O√UTF8
(c⁄° 
UnicodeSë
 &
£t
, c⁄° 
uöt8_t
 *
s
, 
öt32_t
 
Àngth
) {

500 
UCh¨32
 
c
=*
s
;

501 if((
öt8_t
)
c
>=0) {

502  
£t
.
	`c⁄èös
(
c
) ? 1 : -1;

505 
öt32_t
 
i
=0;

506 
	`U8_NEXT
(
s
, 
i
, 
Àngth
, 
c
);

507  
£t
.
	`c⁄èös
(
c
Ë? 
i
 : -i;

508 
	}
}

510 
ölöe
 
öt32_t


511 
	$•™O√BackUTF8
(c⁄° 
UnicodeSë
 &
£t
, c⁄° 
uöt8_t
 *
s
, 
öt32_t
 
Àngth
) {

512 
UCh¨32
 
c
=
s
[
Àngth
-1];

513 if((
öt8_t
)
c
>=0) {

514  
£t
.
	`c⁄èös
(
c
) ? 1 : -1;

516 
öt32_t
 
i
=
Àngth
-1;

517 
c
=
	`utf8_¥evCh¨Sa„Body
(
s
, 0, &
i
, c, -1);

518 
Àngth
-=
i
;

519  
£t
.
	`c⁄èös
(
c
Ë? 
Àngth
 : -length;

520 
	}
}

630 
öt32_t
 
	gUnicodeSëSåögS∑n
::
	$•™
(c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
) const {

631 if(
•™C⁄dôi⁄
==
USET_SPAN_NOT_CONTAINED
) {

632  
	`•™NŸ
(
s
, 
Àngth
);

634 
öt32_t
 
•™Lígth
=
•™Së
.
	`•™
(
s
, 
Àngth
, 
USET_SPAN_CONTAINED
);

635 if(
•™Lígth
==
Àngth
) {

636  
Àngth
;

640 
Off£tLi°
 
off£ts
;

641 if(
•™C⁄dôi⁄
==
USET_SPAN_CONTAINED
) {

643 
off£ts
.
	`£tMaxLígth
(
maxLígth16
);

645 
öt32_t
 
pos
=
•™Lígth
, 
ª°
=
Àngth
-pos;

646 
öt32_t
 
i
, 
°rögsLígth
=
°rögs
.
	`size
();

648 if(
•™C⁄dôi⁄
==
USET_SPAN_CONTAINED
) {

649 
i
=0; i<
°rögsLígth
; ++i) {

650 
öt32_t
 
ovîœp
=
•™Lígths
[
i
];

651 if(
ovîœp
==
ALL_CP_CONTAINED
) {

654 c⁄° 
UnicodeSåög
 &
°rög
=*(c⁄° UnicodeSåög *)
°rögs
.
	`ñemítAt
(
i
);

655 c⁄° 
UCh¨
 *
s16
=
°rög
.
	`gëBuf„r
();

656 
öt32_t
 
Àngth16
=
°rög
.
	`Àngth
();

659 if(
ovîœp
>=
LONG_SPAN
) {

660 
ovîœp
=
Àngth16
;

662 
	`U16_BACK_1
(
s16
, 0, 
ovîœp
);

664 if(
ovîœp
>
•™Lígth
) {

665 
ovîœp
=
•™Lígth
;

667 
öt32_t
 
öc
=
Àngth16
-
ovîœp
;

669 if(
öc
>
ª°
) {

673 if(!
off£ts
.
	`c⁄èösOff£t
(
öc
Ë&& 
	`m©ches16CPB
(
s
, 
pos
-
ovîœp
, 
Àngth
, 
s16
, 
Àngth16
)) {

674 if(
öc
==
ª°
) {

675  
Àngth
;

677 
off£ts
.
	`addOff£t
(
öc
);

679 if(
ovîœp
==0) {

682 --
ovîœp
;

683 ++
öc
;

687 
öt32_t
 
maxInc
=0, 
maxOvîœp
=0;

688 
i
=0; i<
°rögsLígth
; ++i) {

689 
öt32_t
 
ovîœp
=
•™Lígths
[
i
];

693 c⁄° 
UnicodeSåög
 &
°rög
=*(c⁄° UnicodeSåög *)
°rögs
.
	`ñemítAt
(
i
);

694 c⁄° 
UCh¨
 *
s16
=
°rög
.
	`gëBuf„r
();

695 
öt32_t
 
Àngth16
=
°rög
.
	`Àngth
();

698 if(
ovîœp
>=
LONG_SPAN
) {

699 
ovîœp
=
Àngth16
;

703 if(
ovîœp
>
•™Lígth
) {

704 
ovîœp
=
•™Lígth
;

706 
öt32_t
 
öc
=
Àngth16
-
ovîœp
;

708 if(
öc
>
ª°
 || 
ovîœp
<
maxOvîœp
) {

712 if–(
ovîœp
>
maxOvîœp
 || 
öc
>
maxInc
) &&

713 
	`m©ches16CPB
(
s
, 
pos
-
ovîœp
, 
Àngth
, 
s16
, 
Àngth16
)

715 
maxInc
=
öc
;

716 
maxOvîœp
=
ovîœp
;

719 --
ovîœp
;

720 ++
öc
;

724 if(
maxInc
!=0 || 
maxOvîœp
!=0) {

727 
pos
+=
maxInc
;

728 
ª°
-=
maxInc
;

729 if(
ª°
==0) {

730  
Àngth
;

732 
•™Lígth
=0;

738 if(
•™Lígth
!=0 || 
pos
==0) {

744 if(
off£ts
.
	`isEm±y
()) {

745  
pos
;

750 if(
off£ts
.
	`isEm±y
()) {

753 
•™Lígth
=
•™Së
.
	`•™
(
s
+
pos
, 
ª°
, 
USET_SPAN_CONTAINED
);

754 if–
•™Lígth
==
ª°
 ||

755 
•™Lígth
==0

757  
pos
+
•™Lígth
;

759 
pos
+=
•™Lígth
;

760 
ª°
-=
•™Lígth
;

766 
•™Lígth
=
	`•™O√
(
•™Së
, 
s
+
pos
, 
ª°
);

767 if(
•™Lígth
>0) {

768 if(
•™Lígth
==
ª°
) {

769  
Àngth
;

774 
pos
+=
•™Lígth
;

775 
ª°
-=
•™Lígth
;

776 
off£ts
.
	`shi·
(
•™Lígth
);

777 
•™Lígth
=0;

783 
öt32_t
 
möOff£t
=
off£ts
.
	`p›Möimum
();

784 
pos
+=
möOff£t
;

785 
ª°
-=
möOff£t
;

786 
•™Lígth
=0;

788 
	}
}

790 
öt32_t
 
	gUnicodeSëSåögS∑n
::
	$•™Back
(c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
) const {

791 if(
•™C⁄dôi⁄
==
USET_SPAN_NOT_CONTAINED
) {

792  
	`•™NŸBack
(
s
, 
Àngth
);

794 
öt32_t
 
pos
=
•™Së
.
	`•™Back
(
s
, 
Àngth
, 
USET_SPAN_CONTAINED
);

795 if(
pos
==0) {

798 
öt32_t
 
•™Lígth
=
Àngth
-
pos
;

801 
Off£tLi°
 
off£ts
;

802 if(
•™C⁄dôi⁄
==
USET_SPAN_CONTAINED
) {

804 
off£ts
.
	`£tMaxLígth
(
maxLígth16
);

806 
öt32_t
 
i
, 
°rögsLígth
=
°rögs
.
	`size
();

807 
uöt8_t
 *
•™BackLígths
=
•™Lígths
;

808 if(
Æl
) {

809 
•™BackLígths
+=
°rögsLígth
;

812 if(
•™C⁄dôi⁄
==
USET_SPAN_CONTAINED
) {

813 
i
=0; i<
°rögsLígth
; ++i) {

814 
öt32_t
 
ovîœp
=
•™BackLígths
[
i
];

815 if(
ovîœp
==
ALL_CP_CONTAINED
) {

818 c⁄° 
UnicodeSåög
 &
°rög
=*(c⁄° UnicodeSåög *)
°rögs
.
	`ñemítAt
(
i
);

819 c⁄° 
UCh¨
 *
s16
=
°rög
.
	`gëBuf„r
();

820 
öt32_t
 
Àngth16
=
°rög
.
	`Àngth
();

823 if(
ovîœp
>=
LONG_SPAN
) {

824 
ovîœp
=
Àngth16
;

826 
öt32_t
 
Àn1
=0;

827 
	`U16_FWD_1
(
s16
, 
Àn1
, 
ovîœp
);

828 
ovîœp
-=
Àn1
;

830 if(
ovîœp
>
•™Lígth
) {

831 
ovîœp
=
•™Lígth
;

833 
öt32_t
 
dec
=
Àngth16
-
ovîœp
;

835 if(
dec
>
pos
) {

839 if(!
off£ts
.
	`c⁄èösOff£t
(
dec
Ë&& 
	`m©ches16CPB
(
s
, 
pos
-dec, 
Àngth
, 
s16
, 
Àngth16
)) {

840 if(
dec
==
pos
) {

843 
off£ts
.
	`addOff£t
(
dec
);

845 if(
ovîœp
==0) {

848 --
ovîœp
;

849 ++
dec
;

853 
öt32_t
 
maxDec
=0, 
maxOvîœp
=0;

854 
i
=0; i<
°rögsLígth
; ++i) {

855 
öt32_t
 
ovîœp
=
•™BackLígths
[
i
];

859 c⁄° 
UnicodeSåög
 &
°rög
=*(c⁄° UnicodeSåög *)
°rögs
.
	`ñemítAt
(
i
);

860 c⁄° 
UCh¨
 *
s16
=
°rög
.
	`gëBuf„r
();

861 
öt32_t
 
Àngth16
=
°rög
.
	`Àngth
();

864 if(
ovîœp
>=
LONG_SPAN
) {

865 
ovîœp
=
Àngth16
;

869 if(
ovîœp
>
•™Lígth
) {

870 
ovîœp
=
•™Lígth
;

872 
öt32_t
 
dec
=
Àngth16
-
ovîœp
;

874 if(
dec
>
pos
 || 
ovîœp
<
maxOvîœp
) {

878 if–(
ovîœp
>
maxOvîœp
 || 
dec
>
maxDec
) &&

879 
	`m©ches16CPB
(
s
, 
pos
-
dec
, 
Àngth
, 
s16
, 
Àngth16
)

881 
maxDec
=
dec
;

882 
maxOvîœp
=
ovîœp
;

885 --
ovîœp
;

886 ++
dec
;

890 if(
maxDec
!=0 || 
maxOvîœp
!=0) {

893 
pos
-=
maxDec
;

894 if(
pos
==0) {

897 
•™Lígth
=0;

903 if(
•™Lígth
!=0 || 
pos
==
Àngth
) {

909 if(
off£ts
.
	`isEm±y
()) {

910  
pos
;

915 if(
off£ts
.
	`isEm±y
()) {

918 
öt32_t
 
ﬁdPos
=
pos
;

919 
pos
=
•™Së
.
	`•™Back
(
s
, 
ﬁdPos
, 
USET_SPAN_CONTAINED
);

920 
•™Lígth
=
ﬁdPos
-
pos
;

921 if–
pos
==0 ||

922 
•™Lígth
==0

924  
pos
;

931 
•™Lígth
=
	`•™O√Back
(
•™Së
, 
s
, 
pos
);

932 if(
•™Lígth
>0) {

933 if(
•™Lígth
==
pos
) {

939 
pos
-=
•™Lígth
;

940 
off£ts
.
	`shi·
(
•™Lígth
);

941 
•™Lígth
=0;

947 
pos
-=
off£ts
.
	`p›Möimum
();

948 
•™Lígth
=0;

950 
	}
}

952 
öt32_t
 
	gUnicodeSëSåögS∑n
::
	$•™UTF8
(c⁄° 
uöt8_t
 *
s
, 
öt32_t
 
Àngth
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
) const {

953 if(
•™C⁄dôi⁄
==
USET_SPAN_NOT_CONTAINED
) {

954  
	`•™NŸUTF8
(
s
, 
Àngth
);

956 
öt32_t
 
•™Lígth
=
•™Së
.
	`•™UTF8
((c⁄° *)
s
, 
Àngth
, 
USET_SPAN_CONTAINED
);

957 if(
•™Lígth
==
Àngth
) {

958  
Àngth
;

962 
Off£tLi°
 
off£ts
;

963 if(
•™C⁄dôi⁄
==
USET_SPAN_CONTAINED
) {

965 
off£ts
.
	`£tMaxLígth
(
maxLígth8
);

967 
öt32_t
 
pos
=
•™Lígth
, 
ª°
=
Àngth
-pos;

968 
öt32_t
 
i
, 
°rögsLígth
=
°rögs
.
	`size
();

969 
uöt8_t
 *
•™UTF8Lígths
=
•™Lígths
;

970 if(
Æl
) {

971 
•™UTF8Lígths
+=2*
°rögsLígth
;

974 c⁄° 
uöt8_t
 *
s8
=
utf8
;

975 
öt32_t
 
Àngth8
;

976 if(
•™C⁄dôi⁄
==
USET_SPAN_CONTAINED
) {

977 
i
=0; i<
°rögsLígth
; ++i) {

978 
Àngth8
=
utf8Lígths
[
i
];

979 if(
Àngth8
==0) {

982 
öt32_t
 
ovîœp
=
•™UTF8Lígths
[
i
];

983 if(
ovîœp
==
ALL_CP_CONTAINED
) {

984 
s8
+=
Àngth8
;

989 if(
ovîœp
>=
LONG_SPAN
) {

990 
ovîœp
=
Àngth8
;

992 
	`U8_BACK_1
(
s8
, 0, 
ovîœp
);

994 if(
ovîœp
>
•™Lígth
) {

995 
ovîœp
=
•™Lígth
;

997 
öt32_t
 
öc
=
Àngth8
-
ovîœp
;

999 if(
öc
>
ª°
) {

1005 if–!
	`U8_IS_TRAIL
(
s
[
pos
-
ovîœp
]) &&

1006 !
off£ts
.
	`c⁄èösOff£t
(
öc
) &&

1007 
	`m©ches8
(
s
+
pos
-
ovîœp
, 
s8
, 
Àngth8
)

1010 if(
öc
==
ª°
) {

1011  
Àngth
;

1013 
off£ts
.
	`addOff£t
(
öc
);

1015 if(
ovîœp
==0) {

1018 --
ovîœp
;

1019 ++
öc
;

1021 
s8
+=
Àngth8
;

1024 
öt32_t
 
maxInc
=0, 
maxOvîœp
=0;

1025 
i
=0; i<
°rögsLígth
; ++i) {

1026 
Àngth8
=
utf8Lígths
[
i
];

1027 if(
Àngth8
==0) {

1030 
öt32_t
 
ovîœp
=
•™UTF8Lígths
[
i
];

1035 if(
ovîœp
>=
LONG_SPAN
) {

1036 
ovîœp
=
Àngth8
;

1040 if(
ovîœp
>
•™Lígth
) {

1041 
ovîœp
=
•™Lígth
;

1043 
öt32_t
 
öc
=
Àngth8
-
ovîœp
;

1045 if(
öc
>
ª°
 || 
ovîœp
<
maxOvîœp
) {

1051 if–!
	`U8_IS_TRAIL
(
s
[
pos
-
ovîœp
]) &&

1052 (
ovîœp
>
maxOvîœp
 || 
öc
>
maxInc
) &&

1053 
	`m©ches8
(
s
+
pos
-
ovîœp
, 
s8
, 
Àngth8
)

1056 
maxInc
=
öc
;

1057 
maxOvîœp
=
ovîœp
;

1060 --
ovîœp
;

1061 ++
öc
;

1063 
s8
+=
Àngth8
;

1066 if(
maxInc
!=0 || 
maxOvîœp
!=0) {

1069 
pos
+=
maxInc
;

1070 
ª°
-=
maxInc
;

1071 if(
ª°
==0) {

1072  
Àngth
;

1074 
•™Lígth
=0;

1080 if(
•™Lígth
!=0 || 
pos
==0) {

1086 if(
off£ts
.
	`isEm±y
()) {

1087  
pos
;

1092 if(
off£ts
.
	`isEm±y
()) {

1095 
•™Lígth
=
•™Së
.
	`•™UTF8
((c⁄° *)
s
+
pos
, 
ª°
, 
USET_SPAN_CONTAINED
);

1096 if–
•™Lígth
==
ª°
 ||

1097 
•™Lígth
==0

1099  
pos
+
•™Lígth
;

1101 
pos
+=
•™Lígth
;

1102 
ª°
-=
•™Lígth
;

1108 
•™Lígth
=
	`•™O√UTF8
(
•™Së
, 
s
+
pos
, 
ª°
);

1109 if(
•™Lígth
>0) {

1110 if(
•™Lígth
==
ª°
) {

1111  
Àngth
;

1116 
pos
+=
•™Lígth
;

1117 
ª°
-=
•™Lígth
;

1118 
off£ts
.
	`shi·
(
•™Lígth
);

1119 
•™Lígth
=0;

1125 
öt32_t
 
möOff£t
=
off£ts
.
	`p›Möimum
();

1126 
pos
+=
möOff£t
;

1127 
ª°
-=
möOff£t
;

1128 
•™Lígth
=0;

1130 
	}
}

1132 
öt32_t
 
	gUnicodeSëSåögS∑n
::
	$•™BackUTF8
(c⁄° 
uöt8_t
 *
s
, 
öt32_t
 
Àngth
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
) const {

1133 if(
•™C⁄dôi⁄
==
USET_SPAN_NOT_CONTAINED
) {

1134  
	`•™NŸBackUTF8
(
s
, 
Àngth
);

1136 
öt32_t
 
pos
=
•™Së
.
	`•™BackUTF8
((c⁄° *)
s
, 
Àngth
, 
USET_SPAN_CONTAINED
);

1137 if(
pos
==0) {

1140 
öt32_t
 
•™Lígth
=
Àngth
-
pos
;

1143 
Off£tLi°
 
off£ts
;

1144 if(
•™C⁄dôi⁄
==
USET_SPAN_CONTAINED
) {

1146 
off£ts
.
	`£tMaxLígth
(
maxLígth8
);

1148 
öt32_t
 
i
, 
°rögsLígth
=
°rögs
.
	`size
();

1149 
uöt8_t
 *
•™BackUTF8Lígths
=
•™Lígths
;

1150 if(
Æl
) {

1151 
•™BackUTF8Lígths
+=3*
°rögsLígth
;

1154 c⁄° 
uöt8_t
 *
s8
=
utf8
;

1155 
öt32_t
 
Àngth8
;

1156 if(
•™C⁄dôi⁄
==
USET_SPAN_CONTAINED
) {

1157 
i
=0; i<
°rögsLígth
; ++i) {

1158 
Àngth8
=
utf8Lígths
[
i
];

1159 if(
Àngth8
==0) {

1162 
öt32_t
 
ovîœp
=
•™BackUTF8Lígths
[
i
];

1163 if(
ovîœp
==
ALL_CP_CONTAINED
) {

1164 
s8
+=
Àngth8
;

1169 if(
ovîœp
>=
LONG_SPAN
) {

1170 
ovîœp
=
Àngth8
;

1172 
öt32_t
 
Àn1
=0;

1173 
	`U8_FWD_1
(
s8
, 
Àn1
, 
ovîœp
);

1174 
ovîœp
-=
Àn1
;

1176 if(
ovîœp
>
•™Lígth
) {

1177 
ovîœp
=
•™Lígth
;

1179 
öt32_t
 
dec
=
Àngth8
-
ovîœp
;

1181 if(
dec
>
pos
) {

1187 if–!
	`U8_IS_TRAIL
(
s
[
pos
-
dec
]) &&

1188 !
off£ts
.
	`c⁄èösOff£t
(
dec
) &&

1189 
	`m©ches8
(
s
+
pos
-
dec
, 
s8
, 
Àngth8
)

1191 if(
dec
==
pos
) {

1194 
off£ts
.
	`addOff£t
(
dec
);

1196 if(
ovîœp
==0) {

1199 --
ovîœp
;

1200 ++
dec
;

1202 
s8
+=
Àngth8
;

1205 
öt32_t
 
maxDec
=0, 
maxOvîœp
=0;

1206 
i
=0; i<
°rögsLígth
; ++i) {

1207 
Àngth8
=
utf8Lígths
[
i
];

1208 if(
Àngth8
==0) {

1211 
öt32_t
 
ovîœp
=
•™BackUTF8Lígths
[
i
];

1216 if(
ovîœp
>=
LONG_SPAN
) {

1217 
ovîœp
=
Àngth8
;

1221 if(
ovîœp
>
•™Lígth
) {

1222 
ovîœp
=
•™Lígth
;

1224 
öt32_t
 
dec
=
Àngth8
-
ovîœp
;

1226 if(
dec
>
pos
 || 
ovîœp
<
maxOvîœp
) {

1232 if–!
	`U8_IS_TRAIL
(
s
[
pos
-
dec
]) &&

1233 (
ovîœp
>
maxOvîœp
 || 
dec
>
maxDec
) &&

1234 
	`m©ches8
(
s
+
pos
-
dec
, 
s8
, 
Àngth8
)

1236 
maxDec
=
dec
;

1237 
maxOvîœp
=
ovîœp
;

1240 --
ovîœp
;

1241 ++
dec
;

1243 
s8
+=
Àngth8
;

1246 if(
maxDec
!=0 || 
maxOvîœp
!=0) {

1249 
pos
-=
maxDec
;

1250 if(
pos
==0) {

1253 
•™Lígth
=0;

1259 if(
•™Lígth
!=0 || 
pos
==
Àngth
) {

1265 if(
off£ts
.
	`isEm±y
()) {

1266  
pos
;

1271 if(
off£ts
.
	`isEm±y
()) {

1274 
öt32_t
 
ﬁdPos
=
pos
;

1275 
pos
=
•™Së
.
	`•™BackUTF8
((c⁄° *)
s
, 
ﬁdPos
, 
USET_SPAN_CONTAINED
);

1276 
•™Lígth
=
ﬁdPos
-
pos
;

1277 if–
pos
==0 ||

1278 
•™Lígth
==0

1280  
pos
;

1287 
•™Lígth
=
	`•™O√BackUTF8
(
•™Së
, 
s
, 
pos
);

1288 if(
•™Lígth
>0) {

1289 if(
•™Lígth
==
pos
) {

1295 
pos
-=
•™Lígth
;

1296 
off£ts
.
	`shi·
(
•™Lígth
);

1297 
•™Lígth
=0;

1303 
pos
-=
off£ts
.
	`p›Möimum
();

1304 
•™Lígth
=0;

1306 
	}
}

1337 
öt32_t
 
	gUnicodeSëSåögS∑n
::
	$•™NŸ
(c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
) const {

1338 
öt32_t
 
pos
=0, 
ª°
=
Àngth
;

1339 
öt32_t
 
i
, 
°rögsLígth
=
°rögs
.
	`size
();

1343 
i
=
pS∑nNŸSë
->
	`•™
(
s
+
pos
, 
ª°
, 
USET_SPAN_NOT_CONTAINED
);

1344 if(
i
==
ª°
) {

1345  
Àngth
;

1347 
pos
+=
i
;

1348 
ª°
-=
i
;

1352 
öt32_t
 
˝Lígth
=
	`•™O√
(
•™Së
, 
s
+
pos
, 
ª°
);

1353 if(
˝Lígth
>0) {

1354  
pos
;

1358 
i
=0; i<
°rögsLígth
; ++i) {

1359 if(
•™Lígths
[
i
]==
ALL_CP_CONTAINED
) {

1362 c⁄° 
UnicodeSåög
 &
°rög
=*(c⁄° UnicodeSåög *)
°rögs
.
	`ñemítAt
(
i
);

1363 c⁄° 
UCh¨
 *
s16
=
°rög
.
	`gëBuf„r
();

1364 
öt32_t
 
Àngth16
=
°rög
.
	`Àngth
();

1365 if(
Àngth16
<=
ª°
 && 
	`m©ches16CPB
(
s
, 
pos
, 
Àngth
, 
s16
,Üength16)) {

1366  
pos
;

1373 
pos
-=
˝Lígth
;

1374 
ª°
+=
˝Lígth
;

1375 } 
ª°
!=0);

1376  
Àngth
;

1377 
	}
}

1379 
öt32_t
 
	gUnicodeSëSåögS∑n
::
	$•™NŸBack
(c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
) const {

1380 
öt32_t
 
pos
=
Àngth
;

1381 
öt32_t
 
i
, 
°rögsLígth
=
°rögs
.
	`size
();

1385 
pos
=
pS∑nNŸSë
->
	`•™Back
(
s
,Öos, 
USET_SPAN_NOT_CONTAINED
);

1386 if(
pos
==0) {

1392 
öt32_t
 
˝Lígth
=
	`•™O√Back
(
•™Së
, 
s
, 
pos
);

1393 if(
˝Lígth
>0) {

1394  
pos
;

1398 
i
=0; i<
°rögsLígth
; ++i) {

1402 if(
•™Lígths
[
i
]==
ALL_CP_CONTAINED
) {

1405 c⁄° 
UnicodeSåög
 &
°rög
=*(c⁄° UnicodeSåög *)
°rögs
.
	`ñemítAt
(
i
);

1406 c⁄° 
UCh¨
 *
s16
=
°rög
.
	`gëBuf„r
();

1407 
öt32_t
 
Àngth16
=
°rög
.
	`Àngth
();

1408 if(
Àngth16
<=
pos
 && 
	`m©ches16CPB
(
s
,Öos-Àngth16, 
Àngth
, 
s16
,Üength16)) {

1409  
pos
;

1416 
pos
+=
˝Lígth
;

1417 } 
pos
!=0);

1419 
	}
}

1421 
öt32_t
 
	gUnicodeSëSåögS∑n
::
	$•™NŸUTF8
(c⁄° 
uöt8_t
 *
s
, 
öt32_t
 
Àngth
) const {

1422 
öt32_t
 
pos
=0, 
ª°
=
Àngth
;

1423 
öt32_t
 
i
, 
°rögsLígth
=
°rögs
.
	`size
();

1424 
uöt8_t
 *
•™UTF8Lígths
=
•™Lígths
;

1425 if(
Æl
) {

1426 
•™UTF8Lígths
+=2*
°rögsLígth
;

1431 
i
=
pS∑nNŸSë
->
	`•™UTF8
((c⁄° *)
s
+
pos
, 
ª°
, 
USET_SPAN_NOT_CONTAINED
);

1432 if(
i
==
ª°
) {

1433  
Àngth
;

1435 
pos
+=
i
;

1436 
ª°
-=
i
;

1440 
öt32_t
 
˝Lígth
=
	`•™O√UTF8
(
•™Së
, 
s
+
pos
, 
ª°
);

1441 if(
˝Lígth
>0) {

1442  
pos
;

1446 c⁄° 
uöt8_t
 *
s8
=
utf8
;

1447 
öt32_t
 
Àngth8
;

1448 
i
=0; i<
°rögsLígth
; ++i) {

1449 
Àngth8
=
utf8Lígths
[
i
];

1451 if(
Àngth8
!=0 && 
•™UTF8Lígths
[
i
]!=
ALL_CP_CONTAINED
 &&Üígth8<=
ª°
 && 
	`m©ches8
(
s
+
pos
, 
s8
,Üength8)) {

1452  
pos
;

1454 
s8
+=
Àngth8
;

1460 
pos
-=
˝Lígth
;

1461 
ª°
+=
˝Lígth
;

1462 } 
ª°
!=0);

1463  
Àngth
;

1464 
	}
}

1466 
öt32_t
 
	gUnicodeSëSåögS∑n
::
	$•™NŸBackUTF8
(c⁄° 
uöt8_t
 *
s
, 
öt32_t
 
Àngth
) const {

1467 
öt32_t
 
pos
=
Àngth
;

1468 
öt32_t
 
i
, 
°rögsLígth
=
°rögs
.
	`size
();

1469 
uöt8_t
 *
•™BackUTF8Lígths
=
•™Lígths
;

1470 if(
Æl
) {

1471 
•™BackUTF8Lígths
+=3*
°rögsLígth
;

1476 
pos
=
pS∑nNŸSë
->
	`•™BackUTF8
((c⁄° *)
s
,Öos, 
USET_SPAN_NOT_CONTAINED
);

1477 if(
pos
==0) {

1483 
öt32_t
 
˝Lígth
=
	`•™O√BackUTF8
(
•™Së
, 
s
, 
pos
);

1484 if(
˝Lígth
>0) {

1485  
pos
;

1489 c⁄° 
uöt8_t
 *
s8
=
utf8
;

1490 
öt32_t
 
Àngth8
;

1491 
i
=0; i<
°rögsLígth
; ++i) {

1492 
Àngth8
=
utf8Lígths
[
i
];

1494 if(
Àngth8
!=0 && 
•™BackUTF8Lígths
[
i
]!=
ALL_CP_CONTAINED
 &&Üígth8<=
pos
 && 
	`m©ches8
(
s
+pos-Àngth8, 
s8
,Üength8)) {

1495  
pos
;

1497 
s8
+=
Àngth8
;

1503 
pos
+=
˝Lígth
;

1504 } 
pos
!=0);

1506 
	}
}

1508 
	gU_NAMESPACE_END


	@unisetspan.h

17 #i‚de‡
__UNISETSPAN_H__


18 
	#__UNISETSPAN_H__


	)

20 
	~"unicode/uty≥s.h
"

21 
	~"unicode/uni£t.h
"

23 
U_NAMESPACE_BEGIN


30 ˛as†
	cUnicodeSëSåögS∑n
 : 
public
 
UMem‹y
 {

31 
public
:

38 
FWD
 = 0x20,

39 
	mBACK
 = 0x10,

40 
	mUTF16
 = 8,

41 
	mUTF8
 = 4,

42 
	mCONTAINED
 = 2,

43 
	mNOT_CONTAINED
 = 1,

45 
	mALL
 = 0x3f,

47 
	mFWD_UTF16_CONTAINED
 = 
FWD
 | 
UTF16
 | 
CONTAINED
,

48 
	mFWD_UTF16_NOT_CONTAINED
 = 
FWD
 | 
UTF16
 | 
NOT_CONTAINED
,

49 
	mFWD_UTF8_CONTAINED
 = 
FWD
 | 
UTF8
 | 
CONTAINED
,

50 
	mFWD_UTF8_NOT_CONTAINED
 = 
FWD
 | 
UTF8
 | 
NOT_CONTAINED
,

51 
	mBACK_UTF16_CONTAINED
 = 
BACK
 | 
UTF16
 | 
CONTAINED
,

52 
	mBACK_UTF16_NOT_CONTAINED

BACK
 | 
UTF16
 | 
NOT_CONTAINED
,

53 
	mBACK_UTF8_CONTAINED
 = 
BACK
 | 
UTF8
 | 
CONTAINED
,

54 
	mBACK_UTF8_NOT_CONTAINED
 = 
BACK
 | 
UTF8
 | 
NOT_CONTAINED


57 
UnicodeSëSåögS∑n
(c⁄° 
UnicodeSë
 &
£t
, c⁄° 
UVe˘‹
 &
£tSåögs
, 
uöt32_t
 
which
);

60 
UnicodeSëSåögS∑n
(c⁄° UnicodeSëSåögS∑¿&
ŸhîSåögS∑n
, c⁄° 
UVe˘‹
 &
√wP¨ítSëSåögs
);

62 ~
UnicodeSëSåögS∑n
();

69 
ölöe
 
UBoﬁ
 
√edsSåögS∑nUTF16
();

70 
ölöe
 
UBoﬁ
 
√edsSåögS∑nUTF8
();

73 
ölöe
 
UBoﬁ
 
	$c⁄èös
(
UCh¨32
 
c
) const;

75 
öt32_t
 
	$•™
(c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
) const;

77 
öt32_t
 
	$•™Back
(c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
) const;

79 
öt32_t
 
	$•™UTF8
(c⁄° 
uöt8_t
 *
s
, 
öt32_t
 
Àngth
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
) const;

81 
öt32_t
 
	$•™BackUTF8
(c⁄° 
uöt8_t
 *
s
, 
öt32_t
 
Àngth
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
) const;

83 
¥iv©e
:

87 
LONG_SPAN
=0xfe,

89 
ALL_CP_CONTAINED
=0xff

90 
	}
};

94 
addToS∑nNŸSë
(
UCh¨32
 
c
);

96 
öt32_t
 
	$•™NŸ
(c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
) const;

97 
öt32_t
 
	$•™NŸBack
(c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
) const;

98 
öt32_t
 
	$•™NŸUTF8
(c⁄° 
uöt8_t
 *
s
, 
öt32_t
 
Àngth
) const;

99 
öt32_t
 
	$•™NŸBackUTF8
(c⁄° 
uöt8_t
 *
s
, 
öt32_t
 
Àngth
) const;

102 
UnicodeSë
 
•™Së
;

106 
UnicodeSë
 *
pS∑nNŸSë
;

109 c⁄° 
UVe˘‹
 &
°rögs
;

114 
öt32_t
 *
utf8Lígths
;

118 
uöt8_t
 *
•™Lígths
;

122 
uöt8_t
 *
utf8
;

125 
öt32_t
 
utf8Lígth
;

128 
öt32_t
 
maxLígth16
;

129 
öt32_t
 
maxLígth8
;

132 
UBoﬁ
 
Æl
;

138 
öt32_t
 
°©icLígths
[32];

139 
	}
};

141 
UBoﬁ
 
	gUnicodeSëSåögS∑n
::
	$√edsSåögS∑nUTF16
() {

142  (
UBoﬁ
)(
maxLígth16
!=0);

143 
	}
}

145 
UBoﬁ
 
	gUnicodeSëSåögS∑n
::
	$√edsSåögS∑nUTF8
() {

146  (
UBoﬁ
)(
maxLígth8
!=0);

147 
	}
}

149 
UBoﬁ
 
	gUnicodeSëSåögS∑n
::
	$c⁄èös
(
UCh¨32
 
c
) const {

150  
•™Së
.
	`c⁄èös
(
c
);

151 
	}
}

153 
	gU_NAMESPACE_END


	@unistr.cpp

21 
	~"unicode/uty≥s.h
"

22 
	~"unicode/putû.h
"

23 
	~"c°rög.h
"

24 
	~"cmem‹y.h
"

25 
	~"unicode/u°rög.h
"

26 
	~"unicode/uni°r.h
"

27 
	~"uhash.h
"

28 
	~"u°r_imp.h
"

29 
	~"umuãx.h
"

33 #i‡
U_IOSTREAM_SOURCE
 >= 199711

34 
	~<io°ªam
>

35 
usög
 
«me•a˚
 
	g°d
;

36 #ñi‡
U_IOSTREAM_SOURCE
 >= 198506

37 
	~<io°ªam.h
>

42 
	$¥öt
(c⁄° 
UnicodeSåög
& 
s
,

43 c⁄° *
«me
)

45 
UCh¨
 
c
;

46 
cout
 << 
«me
 << ":|";

47 
i
 = 0; i < 
s
.
	`Àngth
(); ++i) {

48 
c
 = 
s
[
i
];

49 if(
c
>= 0x007E || c < 0x0020)

50 
cout
 << "[0x" << 
hex
 << 
s
[
i
] << "]";

52 
cout
 << (Ë
s
[
i
];

54 
cout
 << '|' << 
ídl
;

55 
	}
}

58 
	$¥öt
(c⁄° 
UCh¨
 *
s
,

59 
öt32_t
 
Àn
,

60 c⁄° *
«me
)

62 
UCh¨
 
c
;

63 
cout
 << 
«me
 << ":|";

64 
i
 = 0; i < 
Àn
; ++i) {

65 
c
 = 
s
[
i
];

66 if(
c
>= 0x007E || c < 0x0020)

67 
cout
 << "[0x" << 
hex
 << 
s
[
i
] << "]";

69 
cout
 << (Ë
s
[
i
];

71 
cout
 << '|' << 
ídl
;

72 
	}
}

80 
ölöe
 

81 
	$us_¨øyC›y
(c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cSèπ
,

82 
UCh¨
 *
d°
, 
öt32_t
 
d°Sèπ
, i¡32_à
cou¡
)

84 if(
cou¡
>0) {

85 
	`u¥v_memmove
(
d°
+
d°Sèπ
, 
§c
+
§cSèπ
, (
size_t
)(
cou¡
*(*src)));

87 
	}
}

90 
U_CDECL_BEGIN


91 
UCh¨
 
U_CALLCONV


92 
	$UnicodeSåög_ch¨At
(
öt32_t
 
off£t
, *
c⁄ãxt
) {

93  ((
U_NAMESPACE_QUALIFIER
 
UnicodeSåög
*Ë
c⁄ãxt
)->
	`ch¨At
(
off£t
);

94 
	}
}

95 
U_CDECL_END


97 
U_NAMESPACE_BEGIN


102 
	gRïœ˚abÀ
::~
	$Rïœ˚abÀ
(Ë{
	}
}

103 
Rïœ˚abÀ
::
	$Rïœ˚abÀ
(Ë{
	}
}

104 
	$UOBJECT_DEFINE_RTTI_IMPLEMENTATION
(
UnicodeSåög
)

106 
UnicodeSåög
 
U_EXPORT2


107 
›î©‹
+ (c⁄° 
UnicodeSåög
 &
s1
, c⁄° UnicodeSåög &
s2
) {

109 
	`UnicodeSåög
(
s1
.
	`Àngth
()+
s2
.Àngth()+1, (
UCh¨32
)0, 0).

110 
	`≠≥nd
(
s1
).

111 
	`≠≥nd
(
s2
);

112 
	}
}

120 
	gUnicodeSåög
::
	$addRef
()

121 { 
	`umtx_©omic_öc
((
öt32_t
 *)
fUni⁄
.
fFõlds
.
fAºay
 - 1);
	}
}

123 
öt32_t


124 
	gUnicodeSåög
::
	$ªmoveRef
()

125 {  
	`umtx_©omic_dec
((
öt32_t
 *)
fUni⁄
.
fFõlds
.
fAºay
 - 1);
	}
}

127 
öt32_t


128 
	gUnicodeSåög
::
	$ªfCou¡
() const

130 
	`umtx_lock
(
NULL
);

133 
öt32_t
 
cou¡
 = *((öt32_à*)
fUni⁄
.
fFõlds
.
fAºay
 - 1);

134 
	`umtx_u∆ock
(
NULL
);

135  
cou¡
;

136 
	}
}

139 
	gUnicodeSåög
::
	$ªÀa£Aºay
() {

140 if((
fFœgs
 & 
kRefCou¡ed
Ë&& 
	`ªmoveRef
() == 0) {

141 
	`u¥v_‰ì
((
öt32_t
 *)
fUni⁄
.
fFõlds
.
fAºay
 - 1);

143 
	}
}

150 
	gUnicodeSåög
::
	$UnicodeSåög
()

151 : 
	`fSh‹tLígth
(0),

152 
	$fFœgs
(
kSh‹tSåög
)

153 {
	}
}

155 
	gUnicodeSåög
::
	$UnicodeSåög
(
öt32_t
 
ˇ∑côy
, 
UCh¨32
 
c
, i¡32_à
cou¡
)

156 : 
	`fSh‹tLígth
(0),

157 
	$fFœgs
(0)

159 if(
cou¡
 <0 || (
uöt32_t
)
c
 > 0x10ffff) {

161 
	`Æloˇã
(
ˇ∑côy
);

164 
öt32_t
 
unôCou¡
 = 
	`UTF_CHAR_LENGTH
(
c
), 
Àngth
 = 
cou¡
 * unitCount;

165 if(
ˇ∑côy
 < 
Àngth
) {

166 
ˇ∑côy
 = 
Àngth
;

168 if(
	`Æloˇã
(
ˇ∑côy
)) {

169 
UCh¨
 *
¨øy
 = 
	`gëAºaySèπ
();

170 
öt32_t
 
i
 = 0;

173 if(
unôCou¡
 == 1) {

175 
i
 < 
Àngth
) {

176 
¨øy
[
i
++] = (
UCh¨
)
c
;

180 
UCh¨
 
unôs
[
UTF_MAX_CHAR_LENGTH
];

181 
	`UTF_APPEND_CHAR_UNSAFE
(
unôs
, 
i
, 
c
);

184 
i
 = 0;

188 
i
 < 
Àngth
) {

189 
öt32_t
 
unôIdx
 = 0;

190 
unôIdx
 < 
unôCou¡
) {

191 
¨øy
[
i
++]=
unôs
[
unôIdx
++];

196 
	`£tLígth
(
Àngth
);

198 
	}
}

200 
	gUnicodeSåög
::
	$UnicodeSåög
(
UCh¨
 
ch
)

201 : 
	`fSh‹tLígth
(1),

202 
	$fFœgs
(
kSh‹tSåög
)

204 
fUni⁄
.
fSèckBuf„r
[0] = 
ch
;

205 
	}
}

207 
	gUnicodeSåög
::
	$UnicodeSåög
(
UCh¨32
 
ch
)

208 : 
	`fSh‹tLígth
(0),

209 
	$fFœgs
(
kSh‹tSåög
)

211 
öt32_t
 
i
 = 0;

212 
UBoﬁ
 
isEº‹
 = 
FALSE
;

213 
	`U16_APPEND
(
fUni⁄
.
fSèckBuf„r
, 
i
, 
US_STACKBUF_SIZE
, 
ch
, 
isEº‹
);

214 
fSh‹tLígth
 = (
öt8_t
)
i
;

215 
	}
}

217 
	gUnicodeSåög
::
	$UnicodeSåög
(c⁄° 
UCh¨
 *
ãxt
)

218 : 
	`fSh‹tLígth
(0),

219 
	$fFœgs
(
kSh‹tSåög
)

221 
	`doRïœ˚
(0, 0, 
ãxt
, 0, -1);

222 
	}
}

224 
	gUnicodeSåög
::
	$UnicodeSåög
(c⁄° 
UCh¨
 *
ãxt
,

225 
öt32_t
 
ãxtLígth
)

226 : 
	`fSh‹tLígth
(0),

227 
	$fFœgs
(
kSh‹tSåög
)

229 
	`doRïœ˚
(0, 0, 
ãxt
, 0, 
ãxtLígth
);

230 
	}
}

232 
	gUnicodeSåög
::
	$UnicodeSåög
(
UBoﬁ
 
isTîmö©ed
,

233 c⁄° 
UCh¨
 *
ãxt
,

234 
öt32_t
 
ãxtLígth
)

235 : 
	`fSh‹tLígth
(0),

236 
	$fFœgs
(
kRód⁄lyAlüs
)

238 if(
ãxt
 =
NULL
) {

240 
	`£tToEm±y
();

241 } if(
ãxtLígth
 < -1 ||

242 (
ãxtLígth
 =-1 && !
isTîmö©ed
) ||

243 (
ãxtLígth
 >0 && 
isTîmö©ed
 && 
ãxt
[textLength] != 0)

245 
	`£tToBogus
();

247 if(
ãxtLígth
 == -1) {

249 
ãxtLígth
 = 
	`u_°æí
(
ãxt
);

251 
	`£tAºay
((
UCh¨
 *)
ãxt
, 
ãxtLígth
, 
isTîmö©ed
 ?ÅextLength + 1 :ÅextLength);

253 
	}
}

255 
	gUnicodeSåög
::
	$UnicodeSåög
(
UCh¨
 *
buff
,

256 
öt32_t
 
buffLígth
,

257 
öt32_t
 
buffC≠acôy
)

258 : 
	`fSh‹tLígth
(0),

259 
	$fFœgs
(
kWrôabÀAlüs
)

261 if(
buff
 =
NULL
) {

263 
	`£tToEm±y
();

264 } if(
buffLígth
 < -1 || 
buffC≠acôy
 < 0 || buffLength > buffCapacity) {

265 
	`£tToBogus
();

267 if(
buffLígth
 == -1) {

269 c⁄° 
UCh¨
 *
p
 = 
buff
, *
limô
 = buf‡+ 
buffC≠acôy
;

270 
p
 !
limô
 && *p != 0) {

271 ++
p
;

273 
buffLígth
 = (
öt32_t
)(
p
 - 
buff
);

275 
	`£tAºay
(
buff
, 
buffLígth
, 
buffC≠acôy
);

277 
	}
}

279 
	gUnicodeSåög
::
	$UnicodeSåög
(c⁄° *
§c
, 
öt32_t
 
Àngth
, 
EInv¨ü¡
)

280 : 
	`fSh‹tLígth
(0),

281 
	$fFœgs
(
kSh‹tSåög
)

283 if(
§c
==
NULL
) {

286 if(
Àngth
<0) {

287 
Àngth
=(
öt32_t
)
	`u¥v_°æí
(
§c
);

289 if(
	`˛⁄eAºayIfNìded
(
Àngth
,Üígth, 
FALSE
)) {

290 
	`u_ch¨sToUCh¨s
(
§c
, 
	`gëAºaySèπ
(), 
Àngth
);

291 
	`£tLígth
(
Àngth
);

293 
	`£tToBogus
();

296 
	}
}

298 #i‡
U_CHARSET_IS_UTF8


300 
	gUnicodeSåög
::
	$UnicodeSåög
(c⁄° *
codïageD©a
)

301 : 
	`fSh‹tLígth
(0),

302 
	$fFœgs
(
kSh‹tSåög
) {

303 if(
codïageD©a
 != 0) {

304 
	`£tToUTF8
(
codïageD©a
);

306 
	}
}

308 
	gUnicodeSåög
::
	$UnicodeSåög
(c⁄° *
codïageD©a
, 
öt32_t
 
d©aLígth
)

309 : 
	`fSh‹tLígth
(0),

310 
	$fFœgs
(
kSh‹tSåög
) {

312 if(
codïageD©a
 =0 || 
d©aLígth
 == 0 || dataLength < -1) {

315 if(
d©aLígth
 == -1) {

316 
d©aLígth
 = (
öt32_t
)
	`u¥v_°æí
(
codïageD©a
);

318 
	`£tToUTF8
(
	`SåögPõ˚
(
codïageD©a
, 
d©aLígth
));

319 
	}
}

324 
	gUnicodeSåög
::
	$UnicodeSåög
(c⁄° 
UnicodeSåög
& 
th©
)

325 : 
	`Rïœ˚abÀ
(),

326 
	`fSh‹tLígth
(0),

327 
	$fFœgs
(
kSh‹tSåög
)

329 
	`c›yFrom
(
th©
);

330 
	}
}

332 
	gUnicodeSåög
::
	$UnicodeSåög
(c⁄° 
UnicodeSåög
& 
th©
,

333 
öt32_t
 
§cSèπ
)

334 : 
	`Rïœ˚abÀ
(),

335 
	`fSh‹tLígth
(0),

336 
	$fFœgs
(
kSh‹tSåög
)

338 
	`£tTo
(
th©
, 
§cSèπ
);

339 
	}
}

341 
	gUnicodeSåög
::
	$UnicodeSåög
(c⁄° 
UnicodeSåög
& 
th©
,

342 
öt32_t
 
§cSèπ
,

343 
öt32_t
 
§cLígth
)

344 : 
	`Rïœ˚abÀ
(),

345 
	`fSh‹tLígth
(0),

346 
	$fFœgs
(
kSh‹tSåög
)

348 
	`£tTo
(
th©
, 
§cSèπ
, 
§cLígth
);

349 
	}
}

352 
Rïœ˚abÀ
 *

353 
	gRïœ˚abÀ
::
	$˛⁄e
() const {

354  
NULL
;

355 
	}
}

358 
Rïœ˚abÀ
 *

359 
	gUnicodeSåög
::
	$˛⁄e
() const {

360  
√w
 
	`UnicodeSåög
(*
this
);

361 
	}
}

367 
UBoﬁ


368 
	gUnicodeSåög
::
	$Æloˇã
(
öt32_t
 
ˇ∑côy
) {

369 if(
ˇ∑côy
 <
US_STACKBUF_SIZE
) {

370 
fFœgs
 = 
kSh‹tSåög
;

376 
öt32_t
 
w‹ds
 = (öt32_t)((((öt32_tË+ (
ˇ∑côy
 + 1Ë* 
U_SIZEOF_UCHAR
 + 15) & ~15) >> 2);

377 
öt32_t
 *
¨øy
 = (öt32_t*Ë
	`u¥v_mÆloc
–(öt32_tË* 
w‹ds
 );

378 if(
¨øy
 != 0) {

380 *
¨øy
++ = 1;

383 
fUni⁄
.
fFõlds
.
fAºay
 = (
UCh¨
 *)
¨øy
;

384 
fUni⁄
.
fFõlds
.
fC≠acôy
 = (
öt32_t
)((
w‹ds
 - 1Ë* ((öt32_tË/ 
U_SIZEOF_UCHAR
));

385 
fFœgs
 = 
kL⁄gSåög
;

387 
fSh‹tLígth
 = 0;

388 
fUni⁄
.
fFõlds
.
fAºay
 = 0;

389 
fUni⁄
.
fFõlds
.
fC≠acôy
 = 0;

390 
fFœgs
 = 
kIsBogus
;

391  
FALSE
;

394  
TRUE
;

395 
	}
}

400 
	gUnicodeSåög
::~
	$UnicodeSåög
()

402 
	`ªÀa£Aºay
();

403 
	}
}

409 
UnicodeSåög
 
	gUnicodeSåög
::
	$‰omUTF8
(c⁄° 
SåögPõ˚
 &
utf8
) {

410 
UnicodeSåög
 
ªsu…
;

411 
ªsu…
.
	`£tToUTF8
(
utf8
);

412  
ªsu…
;

413 
	}
}

415 
UnicodeSåög
 
	gUnicodeSåög
::
	$‰omUTF32
(c⁄° 
UCh¨32
 *
utf32
, 
öt32_t
 
Àngth
) {

416 
UnicodeSåög
 
ªsu…
;

417 
öt32_t
 
ˇ∑côy
;

421 if(
Àngth
 <
US_STACKBUF_SIZE
) {

422 
ˇ∑côy
 = 
US_STACKBUF_SIZE
;

424 
ˇ∑côy
 = 
Àngth
 + (length >> 4) + 4;

427 
UCh¨
 *
utf16
 = 
ªsu…
.
	`gëBuf„r
(
ˇ∑côy
);

428 
öt32_t
 
Àngth16
;

429 
UEº‹Code
 
îr‹Code
 = 
U_ZERO_ERROR
;

430 
	`u_°rFromUTF32WôhSub
(
utf16
, 
ªsu…
.
	`gëC≠acôy
(), &
Àngth16
,

431 
utf32
, 
Àngth
,

433 
NULL
,

434 &
îr‹Code
);

435 
ªsu…
.
	`ªÀa£Buf„r
(
Àngth16
);

436 if(
îr‹Code
 =
U_BUFFER_OVERFLOW_ERROR
) {

437 
ˇ∑côy
 = 
Àngth16
 + 1;

439 } if(
	`U_FAILURE
(
îr‹Code
)) {

440 
ªsu…
.
	`£tToBogus
();

443 } 
TRUE
);

444  
ªsu…
;

445 
	}
}

451 
	gUnicodeSåög
 &

452 
	gUnicodeSåög
::
›î©‹
=(c⁄° 
UnicodeSåög
 &
§c
) {

453  
c›yFrom
(
§c
);

456 
	gUnicodeSåög
 &

457 
	gUnicodeSåög
::
	$Á°C›yFrom
(c⁄° 
UnicodeSåög
 &
§c
) {

458  
	`c›yFrom
(
§c
, 
TRUE
);

459 
	}
}

461 
	gUnicodeSåög
 &

462 
	gUnicodeSåög
::
	$c›yFrom
(c⁄° 
UnicodeSåög
 &
§c
, 
UBoﬁ
 
Á°C›y
) {

464 if(
this
 =0 ||Åhi†=&
§c
) {

465  *
this
;

469 if(&
§c
 =0 || src.
	`isBogus
()) {

470 
	`£tToBogus
();

471  *
this
;

475 
	`ªÀa£Aºay
();

477 if(
§c
.
	`isEm±y
()) {

479 
	`£tToEm±y
();

480  *
this
;

484 
öt32_t
 
§cLígth
 = 
§c
.
	`Àngth
();

485 
	`£tLígth
(
§cLígth
);

488 
§c
.
fFœgs
) {

489 
kSh‹tSåög
:

491 
fFœgs
 = 
kSh‹tSåög
;

492 
	`u¥v_mem˝y
(
fUni⁄
.
fSèckBuf„r
, 
§c
.fUni⁄.fSèckBuf„r, 
§cLígth
 * 
U_SIZEOF_UCHAR
);

494 
kL⁄gSåög
:

497 ((
UnicodeSåög
 &)
§c
).
	`addRef
();

499 
fUni⁄
.
fFõlds
.
fAºay
 = 
§c
.fUnion.fFields.fArray;

500 
fUni⁄
.
fFõlds
.
fC≠acôy
 = 
§c
.fUnion.fFields.fCapacity;

501 
fFœgs
 = 
§c
.fFlags;

503 
kRód⁄lyAlüs
:

504 if(
Á°C›y
) {

507 
fUni⁄
.
fFõlds
.
fAºay
 = 
§c
.fUnion.fFields.fArray;

508 
fUni⁄
.
fFõlds
.
fC≠acôy
 = 
§c
.fUnion.fFields.fCapacity;

509 
fFœgs
 = 
§c
.fFlags;

514 
kWrôabÀAlüs
:

516 if(
	`Æloˇã
(
§cLígth
)) {

517 
	`u¥v_mem˝y
(
	`gëAºaySèπ
(), 
§c
.gëAºaySèπ(), 
§cLígth
 * 
U_SIZEOF_UCHAR
);

524 
fSh‹tLígth
 = 0;

525 
fUni⁄
.
fFõlds
.
fAºay
 = 0;

526 
fUni⁄
.
fFõlds
.
fC≠acôy
 = 0;

527 
fFœgs
 = 
kIsBogus
;

531  *
this
;

532 
	}
}

538 
UnicodeSåög
 
	gUnicodeSåög
::
	$u√sˇ≥
() const {

539 
UnicodeSåög
 
	`ªsu…
(
	`Àngth
(), (
UCh¨32
)0, (
öt32_t
)0);

540 c⁄° 
UCh¨
 *
¨øy
 = 
	`gëBuf„r
();

541 
öt32_t
 
Àn
 = 
	`Àngth
();

542 
öt32_t
 
¥ev
 = 0;

543 
öt32_t
 
i
=0;;) {

544 i‡(
i
 =
Àn
) {

545 
ªsu…
.
	`≠≥nd
(
¨øy
, 
¥ev
, 
Àn
 -Örev);

548 i‡(
¨øy
[
i
++] == 0x5C ) {

549 
ªsu…
.
	`≠≥nd
(
¨øy
, 
¥ev
, (
i
 - 1) -Örev);

550 
UCh¨32
 
c
 = 
	`u√sˇ≥At
(
i
);

551 i‡(
c
 < 0) {

552 
ªsu…
.
	`ªmove
();

555 
ªsu…
.
	`≠≥nd
(
c
);

556 
¥ev
 = 
i
;

559  
ªsu…
;

560 
	}
}

562 
UCh¨32
 
	gUnicodeSåög
::
	$u√sˇ≥At
(
öt32_t
 &
off£t
) const {

563  
	`u_u√sˇ≥At
(
UnicodeSåög_ch¨At
, &
off£t
, 
	`Àngth
(), (*)
this
);

564 
	}
}

569 
öt8_t


570 
	gUnicodeSåög
::
	$doCom∑ª
–
öt32_t
 
°¨t
,

571 
öt32_t
 
Àngth
,

572 c⁄° 
UCh¨
 *
§cCh¨s
,

573 
öt32_t
 
§cSèπ
,

574 
öt32_t
 
§cLígth
) const

578 if(
	`isBogus
()) {

583 
	`pöIndi˚s
(
°¨t
, 
Àngth
);

585 if(
§cCh¨s
 =
NULL
) {

586 
§cSèπ
 = 
§cLígth
 = 0;

590 c⁄° 
UCh¨
 *
ch¨s
 = 
	`gëAºaySèπ
();

592 
ch¨s
 +
°¨t
;

593 
§cCh¨s
 +
§cSèπ
;

595 
öt32_t
 
möLígth
;

596 
öt8_t
 
ÀngthResu…
;

599 if(
§cLígth
 < 0) {

600 
§cLígth
 = 
	`u_°æí
(
§cCh¨s
 + 
§cSèπ
);

604 if(
Àngth
 !
§cLígth
) {

605 if(
Àngth
 < 
§cLígth
) {

606 
möLígth
 = 
Àngth
;

607 
ÀngthResu…
 = -1;

609 
möLígth
 = 
§cLígth
;

610 
ÀngthResu…
 = 1;

613 
möLígth
 = 
Àngth
;

614 
ÀngthResu…
 = 0;

625 if(
möLígth
 > 0 && 
ch¨s
 !
§cCh¨s
) {

626 
öt32_t
 
ªsu…
;

628 #i‡
U_IS_BIG_ENDIAN


630 
ªsu…
 = 
	`u¥v_memcmp
(
ch¨s
, 
§cCh¨s
, 
möLígth
 * (
UCh¨
));

631 if(
ªsu…
 != 0) {

632  (
öt8_t
)(
ªsu…
 >> 15 | 1);

637 
ªsu…
 = ((
öt32_t
)*(
ch¨s
++Ë- (öt32_t)*(
§cCh¨s
++));

638 if(
ªsu…
 != 0) {

639  (
öt8_t
)(
ªsu…
 >> 15 | 1);

641 } --
möLígth
 > 0);

644  
ÀngthResu…
;

645 
	}
}

648 
öt8_t


649 
	gUnicodeSåög
::
	$doCom∑ªCodePoötOrdî
(
öt32_t
 
°¨t
,

650 
öt32_t
 
Àngth
,

651 c⁄° 
UCh¨
 *
§cCh¨s
,

652 
öt32_t
 
§cSèπ
,

653 
öt32_t
 
§cLígth
) const

657 if(
	`isBogus
()) {

662 
	`pöIndi˚s
(
°¨t
, 
Àngth
);

664 if(
§cCh¨s
 =
NULL
) {

665 
§cSèπ
 = 
§cLígth
 = 0;

668 
öt32_t
 
diff
 = 
	`u¥v_°rCom∑ª
(
	`gëAºaySèπ
(Ë+ 
°¨t
, 
Àngth
, 
§cCh¨s
 + 
§cSèπ
, 
§cLígth
, 
FALSE
, 
TRUE
);

670 if(
diff
!=0) {

671  (
öt8_t
)(
diff
 >> 15 | 1);

675 
	}
}

677 
öt32_t


678 
	gUnicodeSåög
::
	$gëLígth
() const {

679  
	`Àngth
();

680 
	}
}

682 
UCh¨


683 
	gUnicodeSåög
::
	$gëCh¨At
(
öt32_t
 
off£t
) const {

684  
	`ch¨At
(
off£t
);

685 
	}
}

687 
UCh¨32


688 
	gUnicodeSåög
::
	$gëCh¨32At
(
öt32_t
 
off£t
) const {

689  
	`ch¨32At
(
off£t
);

690 
	}
}

692 
öt32_t


693 
	gUnicodeSåög
::
	$cou¡Ch¨32
(
öt32_t
 
°¨t
, i¡32_à
Àngth
) const {

694 
	`pöIndi˚s
(
°¨t
, 
Àngth
);

696  
	`u_cou¡Ch¨32
(
	`gëAºaySèπ
()+
°¨t
, 
Àngth
);

697 
	}
}

699 
UBoﬁ


700 
	gUnicodeSåög
::
	$hasM‹eCh¨32Th™
(
öt32_t
 
°¨t
, i¡32_à
Àngth
, i¡32_à
numbî
) const {

701 
	`pöIndi˚s
(
°¨t
, 
Àngth
);

703  
	`u_°rHasM‹eCh¨32Th™
(
	`gëAºaySèπ
()+
°¨t
, 
Àngth
, 
numbî
);

704 
	}
}

706 
öt32_t


707 
	gUnicodeSåög
::
	$moveIndex32
(
öt32_t
 
ödex
, i¡32_à
dñè
) const {

709 
öt32_t
 
Àn
 = 
	`Àngth
();

710 if(
ödex
<0) {

711 
ödex
=0;

712 } if(
ödex
>
Àn
) {

713 
ödex
=
Àn
;

716 c⁄° 
UCh¨
 *
¨øy
 = 
	`gëAºaySèπ
();

717 if(
dñè
>0) {

718 
	`UTF_FWD_N
(
¨øy
, 
ödex
, 
Àn
, 
dñè
);

720 
	`UTF_BACK_N
(
¨øy
, 0, 
ödex
, -
dñè
);

723  
ödex
;

724 
	}
}

727 
	gUnicodeSåög
::
	$doExåa˘
(
öt32_t
 
°¨t
,

728 
öt32_t
 
Àngth
,

729 
UCh¨
 *
d°
,

730 
öt32_t
 
d°Sèπ
) const

733 
	`pöIndi˚s
(
°¨t
, 
Àngth
);

736 c⁄° 
UCh¨
 *
¨øy
 = 
	`gëAºaySèπ
();

737 if(
¨øy
 + 
°¨t
 !
d°
 + 
d°Sèπ
) {

738 
	`us_¨øyC›y
(
¨øy
, 
°¨t
, 
d°
, 
d°Sèπ
, 
Àngth
);

740 
	}
}

742 
öt32_t


743 
	gUnicodeSåög
::
	$exåa˘
(
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

744 
UEº‹Code
 &
îr‹Code
) const {

745 
öt32_t
 
Àn
 = 
	`Àngth
();

746 if(
	`U_SUCCESS
(
îr‹Code
)) {

747 if(
	`isBogus
(Ë|| 
de°C≠acôy
<0 || (de°C≠acôy>0 && 
de°
==0)) {

748 
îr‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

750 c⁄° 
UCh¨
 *
¨øy
 = 
	`gëAºaySèπ
();

751 if(
Àn
>0 &&Üí<=
de°C≠acôy
 && 
¨øy
!=
de°
) {

752 
	`u¥v_mem˝y
(
de°
, 
¨øy
, 
Àn
*
U_SIZEOF_UCHAR
);

754  
	`u_ãrmö©eUCh¨s
(
de°
, 
de°C≠acôy
, 
Àn
, &
îr‹Code
);

758  
Àn
;

759 
	}
}

761 
öt32_t


762 
	gUnicodeSåög
::
	$exåa˘
(
öt32_t
 
°¨t
,

763 
öt32_t
 
Àngth
,

764 *
èrgë
,

765 
öt32_t
 
èrgëC≠acôy
,

766 
EInv¨ü¡
) const

769 if(
èrgëC≠acôy
 < 0 || (èrgëC≠acôy > 0 && 
èrgë
 =
NULL
)) {

774 
	`pöIndi˚s
(
°¨t
, 
Àngth
);

776 if(
Àngth
 <
èrgëC≠acôy
) {

777 
	`u_UCh¨sToCh¨s
(
	`gëAºaySèπ
(Ë+ 
°¨t
, 
èrgë
, 
Àngth
);

779 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

780  
	`u_ãrmö©eCh¨s
(
èrgë
, 
èrgëC≠acôy
, 
Àngth
, &
°©us
);

781 
	}
}

783 
UnicodeSåög


784 
	gUnicodeSåög
::
	$ãmpSubSåög
(
öt32_t
 
°¨t
, i¡32_à
Àn
) const {

785 
	`pöIndi˚s
(
°¨t
, 
Àn
);

786 c⁄° 
UCh¨
 *
¨øy
 = 
	`gëBuf„r
();

787 if(
¨øy
==
NULL
) {

788 
¨øy
=
fUni⁄
.
fSèckBuf„r
;

789 
Àn
=-2;

791  
	`UnicodeSåög
(
FALSE
, 
¨øy
 + 
°¨t
, 
Àn
);

792 
	}
}

794 
öt32_t


795 
	gUnicodeSåög
::
	$toUTF8
(
öt32_t
 
°¨t
, i¡32_à
Àn
,

796 *
èrgë
, 
öt32_t
 
ˇ∑côy
) const {

797 
	`pöIndi˚s
(
°¨t
, 
Àn
);

798 
öt32_t
 
Àngth8
;

799 
UEº‹Code
 
îr‹Code
 = 
U_ZERO_ERROR
;

800 
	`u_°rToUTF8WôhSub
(
èrgë
, 
ˇ∑côy
, &
Àngth8
,

801 
	`gëBuf„r
(Ë+ 
°¨t
, 
Àn
,

803 
NULL
,

804 &
îr‹Code
);

805  
Àngth8
;

806 
	}
}

808 #i‡
U_CHARSET_IS_UTF8


810 
öt32_t


811 
	gUnicodeSåög
::
	$exåa˘
(
öt32_t
 
°¨t
, i¡32_à
Àn
,

812 *
èrgë
, 
uöt32_t
 
d°Size
) const {

814 if–(
d°Size
 > 0 && 
èrgë
 == 0)) {

817  
	`toUTF8
(
°¨t
, 
Àn
, 
èrgë
, 
d°Size
 <0x7ffffff‡? (
öt32_t
)dstSize : 0x7fffffff);

818 
	}
}

824 
	gUnicodeSåög
::
	$exåa˘Bëwìn
(
öt32_t
 
°¨t
,

825 
öt32_t
 
limô
,

826 
UnicodeSåög
& 
èrgë
) const {

827 
	`pöIndex
(
°¨t
);

828 
	`pöIndex
(
limô
);

829 
	`doExåa˘
(
°¨t
, 
limô
 - sèπ, 
èrgë
);

830 
	}
}

837 
	gUnicodeSåög
::
	$toUTF8
(
ByãSök
 &
sök
) const {

838 
öt32_t
 
Àngth16
 = 
	`Àngth
();

839 if(
Àngth16
 != 0) {

840 
°ackBuf„r
[1024];

841 
öt32_t
 
ˇ∑côy
 = (öt32_t)(
°ackBuf„r
);

842 
UBoﬁ
 
utf8IsOw√d
 = 
FALSE
;

843 *
utf8
 = 
sök
.
	`GëAµídBuf„r
(
Àngth16
 < 
ˇ∑côy
 ?Üength16 : capacity,

844 3*
Àngth16
,

845 
°ackBuf„r
, 
ˇ∑côy
,

846 &
ˇ∑côy
);

847 
öt32_t
 
Àngth8
 = 0;

848 
UEº‹Code
 
îr‹Code
 = 
U_ZERO_ERROR
;

849 
	`u_°rToUTF8WôhSub
(
utf8
, 
ˇ∑côy
, &
Àngth8
,

850 
	`gëBuf„r
(), 
Àngth16
,

852 
NULL
,

853 &
îr‹Code
);

854 if(
îr‹Code
 =
U_BUFFER_OVERFLOW_ERROR
) {

855 
utf8
 = (*)
	`u¥v_mÆloc
(
Àngth8
);

856 if(
utf8
 !
NULL
) {

857 
utf8IsOw√d
 = 
TRUE
;

858 
îr‹Code
 = 
U_ZERO_ERROR
;

859 
	`u_°rToUTF8WôhSub
(
utf8
, 
Àngth8
, &length8,

860 
	`gëBuf„r
(), 
Àngth16
,

862 
NULL
,

863 &
îr‹Code
);

865 
îr‹Code
 = 
U_MEMORY_ALLOCATION_ERROR
;

868 if(
	`U_SUCCESS
(
îr‹Code
)) {

869 
sök
.
	`Aµíd
(
utf8
, 
Àngth8
);

870 
sök
.
	`Flush
();

872 if(
utf8IsOw√d
) {

873 
	`u¥v_‰ì
(
utf8
);

876 
	}
}

878 
öt32_t


879 
	gUnicodeSåög
::
	$toUTF32
(
UCh¨32
 *
utf32
, 
öt32_t
 
ˇ∑côy
, 
UEº‹Code
 &
îr‹Code
) const {

880 
öt32_t
 
Àngth32
=0;

881 if(
	`U_SUCCESS
(
îr‹Code
)) {

883 
	`u_°rToUTF32WôhSub
(
utf32
, 
ˇ∑côy
, &
Àngth32
,

884 
	`gëBuf„r
(), 
	`Àngth
(),

886 
NULL
,

887 &
îr‹Code
);

889  
Àngth32
;

890 
	}
}

892 
öt32_t


893 
	gUnicodeSåög
::
	$ödexOf
(c⁄° 
UCh¨
 *
§cCh¨s
,

894 
öt32_t
 
§cSèπ
,

895 
öt32_t
 
§cLígth
,

896 
öt32_t
 
°¨t
,

897 
öt32_t
 
Àngth
) const

899 if(
	`isBogus
(Ë|| 
§cCh¨s
 =0 || 
§cSèπ
 < 0 || 
§cLígth
 == 0) {

904 if(
§cLígth
 < 0 && 
§cCh¨s
[
§cSèπ
] == 0) {

909 
	`pöIndi˚s
(
°¨t
, 
Àngth
);

912 c⁄° 
UCh¨
 *
¨øy
 = 
	`gëAºaySèπ
();

913 c⁄° 
UCh¨
 *
m©ch
 = 
	`u_°rFödFú°
(
¨øy
 + 
°¨t
, 
Àngth
, 
§cCh¨s
 + 
§cSèπ
, 
§cLígth
);

914 if(
m©ch
 =
NULL
) {

917  (
öt32_t
)(
m©ch
 - 
¨øy
);

919 
	}
}

921 
öt32_t


922 
	gUnicodeSåög
::
	$doIndexOf
(
UCh¨
 
c
,

923 
öt32_t
 
°¨t
,

924 
öt32_t
 
Àngth
) const

927 
	`pöIndi˚s
(
°¨t
, 
Àngth
);

930 c⁄° 
UCh¨
 *
¨øy
 = 
	`gëAºaySèπ
();

931 c⁄° 
UCh¨
 *
m©ch
 = 
	`u_memchr
(
¨øy
 + 
°¨t
, 
c
, 
Àngth
);

932 if(
m©ch
 =
NULL
) {

935  (
öt32_t
)(
m©ch
 - 
¨øy
);

937 
	}
}

939 
öt32_t


940 
	gUnicodeSåög
::
	$doIndexOf
(
UCh¨32
 
c
,

941 
öt32_t
 
°¨t
,

942 
öt32_t
 
Àngth
) const {

944 
	`pöIndi˚s
(
°¨t
, 
Àngth
);

947 c⁄° 
UCh¨
 *
¨øy
 = 
	`gëAºaySèπ
();

948 c⁄° 
UCh¨
 *
m©ch
 = 
	`u_memchr32
(
¨øy
 + 
°¨t
, 
c
, 
Àngth
);

949 if(
m©ch
 =
NULL
) {

952  (
öt32_t
)(
m©ch
 - 
¨øy
);

954 
	}
}

956 
öt32_t


957 
	gUnicodeSåög
::
	$œ°IndexOf
(c⁄° 
UCh¨
 *
§cCh¨s
,

958 
öt32_t
 
§cSèπ
,

959 
öt32_t
 
§cLígth
,

960 
öt32_t
 
°¨t
,

961 
öt32_t
 
Àngth
) const

963 if(
	`isBogus
(Ë|| 
§cCh¨s
 =0 || 
§cSèπ
 < 0 || 
§cLígth
 == 0) {

968 if(
§cLígth
 < 0 && 
§cCh¨s
[
§cSèπ
] == 0) {

973 
	`pöIndi˚s
(
°¨t
, 
Àngth
);

976 c⁄° 
UCh¨
 *
¨øy
 = 
	`gëAºaySèπ
();

977 c⁄° 
UCh¨
 *
m©ch
 = 
	`u_°rFödLa°
(
¨øy
 + 
°¨t
, 
Àngth
, 
§cCh¨s
 + 
§cSèπ
, 
§cLígth
);

978 if(
m©ch
 =
NULL
) {

981  (
öt32_t
)(
m©ch
 - 
¨øy
);

983 
	}
}

985 
öt32_t


986 
	gUnicodeSåög
::
	$doLa°IndexOf
(
UCh¨
 
c
,

987 
öt32_t
 
°¨t
,

988 
öt32_t
 
Àngth
) const

990 if(
	`isBogus
()) {

995 
	`pöIndi˚s
(
°¨t
, 
Àngth
);

998 c⁄° 
UCh¨
 *
¨øy
 = 
	`gëAºaySèπ
();

999 c⁄° 
UCh¨
 *
m©ch
 = 
	`u_memrchr
(
¨øy
 + 
°¨t
, 
c
, 
Àngth
);

1000 if(
m©ch
 =
NULL
) {

1003  (
öt32_t
)(
m©ch
 - 
¨øy
);

1005 
	}
}

1007 
öt32_t


1008 
	gUnicodeSåög
::
	$doLa°IndexOf
(
UCh¨32
 
c
,

1009 
öt32_t
 
°¨t
,

1010 
öt32_t
 
Àngth
) const {

1012 
	`pöIndi˚s
(
°¨t
, 
Àngth
);

1015 c⁄° 
UCh¨
 *
¨øy
 = 
	`gëAºaySèπ
();

1016 c⁄° 
UCh¨
 *
m©ch
 = 
	`u_memrchr32
(
¨øy
 + 
°¨t
, 
c
, 
Àngth
);

1017 if(
m©ch
 =
NULL
) {

1020  (
öt32_t
)(
m©ch
 - 
¨øy
);

1022 
	}
}

1028 
	gUnicodeSåög
&

1029 
	gUnicodeSåög
::
	$födAndRïœ˚
(
öt32_t
 
°¨t
,

1030 
öt32_t
 
Àngth
,

1031 c⁄° 
UnicodeSåög
& 
ﬁdText
,

1032 
öt32_t
 
ﬁdSèπ
,

1033 
öt32_t
 
ﬁdLígth
,

1034 c⁄° 
UnicodeSåög
& 
√wText
,

1035 
öt32_t
 
√wSèπ
,

1036 
öt32_t
 
√wLígth
)

1038 if(
	`isBogus
(Ë|| 
ﬁdText
.isBogus(Ë|| 
√wText
.isBogus()) {

1039  *
this
;

1042 
	`pöIndi˚s
(
°¨t
, 
Àngth
);

1043 
ﬁdText
.
	`pöIndi˚s
(
ﬁdSèπ
, 
ﬁdLígth
);

1044 
√wText
.
	`pöIndi˚s
(
√wSèπ
, 
√wLígth
);

1046 if(
ﬁdLígth
 == 0) {

1047  *
this
;

1050 
Àngth
 > 0 &&Üígth >
ﬁdLígth
) {

1051 
öt32_t
 
pos
 = 
	`ödexOf
(
ﬁdText
, 
ﬁdSèπ
, 
ﬁdLígth
, 
°¨t
, 
Àngth
);

1052 if(
pos
 < 0) {

1057 
	`ª∂a˚
(
pos
, 
ﬁdLígth
, 
√wText
, 
√wSèπ
, 
√wLígth
);

1058 
Àngth
 -
pos
 + 
ﬁdLígth
 - 
°¨t
;

1059 
°¨t
 = 
pos
 + 
√wLígth
;

1063  *
this
;

1064 
	}
}

1068 
	gUnicodeSåög
::
	$£tToBogus
()

1070 
	`ªÀa£Aºay
();

1072 
fSh‹tLígth
 = 0;

1073 
fUni⁄
.
fFõlds
.
fAºay
 = 0;

1074 
fUni⁄
.
fFõlds
.
fC≠acôy
 = 0;

1075 
fFœgs
 = 
kIsBogus
;

1076 
	}
}

1080 
	gUnicodeSåög
::
	$unBogus
() {

1081 if(
fFœgs
 & 
kIsBogus
) {

1082 
	`£tToEm±y
();

1084 
	}
}

1087 
	gUnicodeSåög
 &

1088 
	gUnicodeSåög
::
	$£tTo
(
UBoﬁ
 
isTîmö©ed
,

1089 c⁄° 
UCh¨
 *
ãxt
,

1090 
öt32_t
 
ãxtLígth
)

1092 if(
fFœgs
 & 
kO≥nGëBuf„r
) {

1094  *
this
;

1097 if(
ãxt
 =
NULL
) {

1099 
	`ªÀa£Aºay
();

1100 
	`£tToEm±y
();

1101  *
this
;

1104 if–
ãxtLígth
 < -1 ||

1105 (
ãxtLígth
 =-1 && !
isTîmö©ed
) ||

1106 (
ãxtLígth
 >0 && 
isTîmö©ed
 && 
ãxt
[textLength] != 0)

1108 
	`£tToBogus
();

1109  *
this
;

1112 
	`ªÀa£Aºay
();

1114 if(
ãxtLígth
 == -1) {

1116 
ãxtLígth
 = 
	`u_°æí
(
ãxt
);

1118 
	`£tAºay
((
UCh¨
 *)
ãxt
, 
ãxtLígth
, 
isTîmö©ed
 ?ÅextLength + 1 :ÅextLength);

1120 
fFœgs
 = 
kRód⁄lyAlüs
;

1121  *
this
;

1122 
	}
}

1125 
	gUnicodeSåög
 &

1126 
	gUnicodeSåög
::
	$£tTo
(
UCh¨
 *
buf„r
,

1127 
öt32_t
 
buffLígth
,

1128 
öt32_t
 
buffC≠acôy
) {

1129 if(
fFœgs
 & 
kO≥nGëBuf„r
) {

1131  *
this
;

1134 if(
buf„r
 =
NULL
) {

1136 
	`ªÀa£Aºay
();

1137 
	`£tToEm±y
();

1138  *
this
;

1141 if(
buffLígth
 < -1 || 
buffC≠acôy
 < 0 || buffLength > buffCapacity) {

1142 
	`£tToBogus
();

1143  *
this
;

1144 } if(
buffLígth
 == -1) {

1146 c⁄° 
UCh¨
 *
p
 = 
buf„r
, *
limô
 = buf„∏+ 
buffC≠acôy
;

1147 
p
 !
limô
 && *p != 0) {

1148 ++
p
;

1150 
buffLígth
 = (
öt32_t
)(
p
 - 
buf„r
);

1153 
	`ªÀa£Aºay
();

1155 
	`£tAºay
(
buf„r
, 
buffLígth
, 
buffC≠acôy
);

1156 
fFœgs
 = 
kWrôabÀAlüs
;

1157  *
this
;

1158 
	}
}

1160 
	gUnicodeSåög
 &UnicodeSåög::
	$£tToUTF8
(c⁄° 
SåögPõ˚
 &
utf8
) {

1161 
	`unBogus
();

1162 
öt32_t
 
Àngth
 = 
utf8
.
	`Àngth
();

1163 
öt32_t
 
ˇ∑côy
;

1165 if(
Àngth
 <
US_STACKBUF_SIZE
) {

1166 
ˇ∑côy
 = 
US_STACKBUF_SIZE
;

1168 
ˇ∑côy
 = 
Àngth
 + 1;

1170 
UCh¨
 *
utf16
 = 
	`gëBuf„r
(
ˇ∑côy
);

1171 
öt32_t
 
Àngth16
;

1172 
UEº‹Code
 
îr‹Code
 = 
U_ZERO_ERROR
;

1173 
	`u_°rFromUTF8WôhSub
(
utf16
, 
	`gëC≠acôy
(), &
Àngth16
,

1174 
utf8
.
	`d©a
(), 
Àngth
,

1176 
NULL
,

1177 &
îr‹Code
);

1178 
	`ªÀa£Buf„r
(
Àngth16
);

1179 if(
	`U_FAILURE
(
îr‹Code
)) {

1180 
	`£tToBogus
();

1182  *
this
;

1183 
	}
}

1185 
	gUnicodeSåög
&

1186 
	gUnicodeSåög
::
	$£tCh¨At
(
öt32_t
 
off£t
,

1187 
UCh¨
 
c
)

1189 
öt32_t
 
Àn
 = 
	`Àngth
();

1190 if(
	`˛⁄eAºayIfNìded
(Ë&& 
Àn
 > 0) {

1191 if(
off£t
 < 0) {

1192 
off£t
 = 0;

1193 } if(
off£t
 >
Àn
) {

1194 
off£t
 = 
Àn
 - 1;

1197 
	`gëAºaySèπ
()[
off£t
] = 
c
;

1199  *
this
;

1200 
	}
}

1202 
	gUnicodeSåög
&

1203 
	gUnicodeSåög
::
	$doRïœ˚
–
öt32_t
 
°¨t
,

1204 
öt32_t
 
Àngth
,

1205 c⁄° 
UnicodeSåög
& 
§c
,

1206 
öt32_t
 
§cSèπ
,

1207 
öt32_t
 
§cLígth
)

1209 if(!
§c
.
	`isBogus
()) {

1211 
§c
.
	`pöIndi˚s
(
§cSèπ
, 
§cLígth
);

1215  
	`doRïœ˚
(
°¨t
, 
Àngth
, 
§c
.
	`gëAºaySèπ
(), 
§cSèπ
, 
§cLígth
);

1218  
	`doRïœ˚
(
°¨t
, 
Àngth
, 0, 0, 0);

1220 
	}
}

1222 
	gUnicodeSåög
&

1223 
	gUnicodeSåög
::
	$doRïœ˚
(
öt32_t
 
°¨t
,

1224 
öt32_t
 
Àngth
,

1225 c⁄° 
UCh¨
 *
§cCh¨s
,

1226 
öt32_t
 
§cSèπ
,

1227 
öt32_t
 
§cLígth
)

1229 if(!
	`isWrôabÀ
()) {

1230  *
this
;

1233 
öt32_t
 
ﬁdLígth
 = 
this
->
	`Àngth
();

1236 if((
fFœgs
&
kBuf„rIsRód⁄ly
Ë&& 
§cLígth
 == 0) {

1237 if(
°¨t
 == 0) {

1239 
	`pöIndex
(
Àngth
);

1240 
fUni⁄
.
fFõlds
.
fAºay
 +
Àngth
;

1241 
fUni⁄
.
fFõlds
.
fC≠acôy
 -
Àngth
;

1242 
	`£tLígth
(
ﬁdLígth
 - 
Àngth
);

1243  *
this
;

1245 
	`pöIndex
(
°¨t
);

1246 if(
Àngth
 >(
ﬁdLígth
 - 
°¨t
)) {

1248 
	`£tLígth
(
°¨t
);

1249 
fUni⁄
.
fFõlds
.
fC≠acôy
 = 
°¨t
;

1250  *
this
;

1255 if(
§cCh¨s
 == 0) {

1256 
§cSèπ
 = 
§cLígth
 = 0;

1257 } if(
§cLígth
 < 0) {

1259 
§cLígth
 = 
	`u_°æí
(
§cCh¨s
 + 
§cSèπ
);

1263 
öt32_t
 
√wSize
;

1266 if(
°¨t
 >
ﬁdLígth
) {

1267 
√wSize
 = 
ﬁdLígth
 + 
§cLígth
;

1268 if(
√wSize
 <
	`gëC≠acôy
(Ë&& 
	`isBuf„rWrôabÀ
()) {

1269 
	`us_¨øyC›y
(
§cCh¨s
, 
§cSèπ
, 
	`gëAºaySèπ
(), 
ﬁdLígth
, 
§cLígth
);

1270 
	`£tLígth
(
√wSize
);

1271  *
this
;

1274 
°¨t
 = 
ﬁdLígth
;

1275 
Àngth
 = 0;

1279 
	`pöIndi˚s
(
°¨t
, 
Àngth
);

1281 
√wSize
 = 
ﬁdLígth
 - 
Àngth
 + 
§cLígth
;

1286 
UCh¨
 
ﬁdSèckBuf„r
[
US_STACKBUF_SIZE
];

1287 
UCh¨
 *
ﬁdAºay
;

1288 if((
fFœgs
&
kUsögSèckBuf„r
Ë&& (
√wSize
 > 
US_STACKBUF_SIZE
)) {

1291 
	`u_mem˝y
(
ﬁdSèckBuf„r
, 
fUni⁄
.
fSèckBuf„r
, 
ﬁdLígth
);

1292 
ﬁdAºay
 = 
ﬁdSèckBuf„r
;

1294 
ﬁdAºay
 = 
	`gëAºaySèπ
();

1298 
öt32_t
 *
buf„rToDñëe
 = 0;

1299 if(!
	`˛⁄eAºayIfNìded
(
√wSize
,ÇewSizê+ (√wSizê>> 2Ë+ 
kGrowSize
,

1300 
FALSE
, &
buf„rToDñëe
)

1302  *
this
;

1307 
UCh¨
 *
√wAºay
 = 
	`gëAºaySèπ
();

1308 if(
√wAºay
 !
ﬁdAºay
) {

1310 
	`us_¨øyC›y
(
ﬁdAºay
, 0, 
√wAºay
, 0, 
°¨t
);

1311 
	`us_¨øyC›y
(
ﬁdAºay
, 
°¨t
 + 
Àngth
,

1312 
√wAºay
, 
°¨t
 + 
§cLígth
,

1313 
ﬁdLígth
 - (
°¨t
 + 
Àngth
));

1314 } if(
Àngth
 !
§cLígth
) {

1316 
	`us_¨øyC›y
(
ﬁdAºay
, 
°¨t
 + 
Àngth
,

1317 
√wAºay
, 
°¨t
 + 
§cLígth
,

1318 
ﬁdLígth
 - (
°¨t
 + 
Àngth
));

1322 
	`us_¨øyC›y
(
§cCh¨s
, 
§cSèπ
, 
√wAºay
, 
°¨t
, 
§cLígth
);

1324 
	`£tLígth
(
√wSize
);

1328 i‡(
buf„rToDñëe
) {

1329 
	`u¥v_‰ì
(
buf„rToDñëe
);

1332  *
this
;

1333 
	}
}

1339 
	gUnicodeSåög
::
	$h™dÀRïœ˚Bëwìn
(
öt32_t
 
°¨t
,

1340 
öt32_t
 
limô
,

1341 c⁄° 
UnicodeSåög
& 
ãxt
) {

1342 
	`ª∂a˚Bëwìn
(
°¨t
, 
limô
, 
ãxt
);

1343 
	}
}

1349 
	gUnicodeSåög
::
	$c›y
(
öt32_t
 
°¨t
, i¡32_à
limô
, i¡32_à
de°
) {

1350 i‡(
limô
 <
°¨t
) {

1353 
UCh¨
* 
ãxt
 = (UCh¨*Ë
	`u¥v_mÆloc
–(UCh¨Ë* (
limô
 - 
°¨t
) );

1355 i‡(
ãxt
 !
NULL
) {

1356 
	`exåa˘Bëwìn
(
°¨t
, 
limô
, 
ãxt
, 0);

1357 
	`ö£π
(
de°
, 
ãxt
, 0, 
limô
 - 
°¨t
);

1358 
	`u¥v_‰ì
(
ãxt
);

1360 
	}
}

1368 
UBoﬁ
 
	gRïœ˚abÀ
::
	$hasMëaD©a
() const {

1369  
TRUE
;

1370 
	}
}

1375 
UBoﬁ
 
	gUnicodeSåög
::
	$hasMëaD©a
() const {

1376  
FALSE
;

1377 
	}
}

1379 
	gUnicodeSåög
&

1380 
	gUnicodeSåög
::
	$doRevî£
(
öt32_t
 
°¨t
, i¡32_à
Àngth
) {

1381 if(
Àngth
 <1 || !
	`˛⁄eAºayIfNìded
()) {

1382  *
this
;

1386 
	`pöIndi˚s
(
°¨t
, 
Àngth
);

1387 if(
Àngth
 <= 1) {

1388  *
this
;

1391 
UCh¨
 *
À·
 = 
	`gëAºaySèπ
(Ë+ 
°¨t
;

1392 
UCh¨
 *
right
 = 
À·
 + 
Àngth
 - 1;

1393 
UCh¨
 
sw≠
;

1394 
UBoﬁ
 
hasSuµÀmíèry
 = 
FALSE
;

1398 
hasSuµÀmíèry
 |(
UBoﬁ
)
	`U16_IS_LEAD
(
sw≠
 = *
À·
);

1399 
hasSuµÀmíèry
 |(
UBoﬁ
)
	`U16_IS_LEAD
(*
À·
++ = *
right
);

1400 *
right
-- = 
sw≠
;

1401 } 
À·
 < 
right
);

1404 
hasSuµÀmíèry
 |(
UBoﬁ
)
	`U16_IS_LEAD
(*
À·
);

1407 if(
hasSuµÀmíèry
) {

1408 
UCh¨
 
sw≠2
;

1410 
À·
 = 
	`gëAºaySèπ
(Ë+ 
°¨t
;

1411 
right
 = 
À·
 + 
Àngth
 - 1;

1412 
À·
 < 
right
) {

1413 if(
	`U16_IS_TRAIL
(
sw≠
 = *
À·
Ë&& 
	`U16_IS_LEAD
(
sw≠2
 = *(left + 1))) {

1414 *
À·
++ = 
sw≠2
;

1415 *
À·
++ = 
sw≠
;

1417 ++
À·
;

1422  *
this
;

1423 
	}
}

1425 
UBoﬁ


1426 
	gUnicodeSåög
::
	$∑dLódög
(
öt32_t
 
èrgëLígth
,

1427 
UCh¨
 
∑dCh¨
)

1429 
öt32_t
 
ﬁdLígth
 = 
	`Àngth
();

1430 if(
ﬁdLígth
 >
èrgëLígth
 || !
	`˛⁄eAºayIfNìded
(targetLength)) {

1431  
FALSE
;

1434 
UCh¨
 *
¨øy
 = 
	`gëAºaySèπ
();

1435 
öt32_t
 
°¨t
 = 
èrgëLígth
 - 
ﬁdLígth
;

1436 
	`us_¨øyC›y
(
¨øy
, 0,áºay, 
°¨t
, 
ﬁdLígth
);

1439 --
°¨t
 >= 0) {

1440 
¨øy
[
°¨t
] = 
∑dCh¨
;

1442 
	`£tLígth
(
èrgëLígth
);

1443  
TRUE
;

1445 
	}
}

1447 
UBoﬁ


1448 
	gUnicodeSåög
::
	$∑dTøûög
(
öt32_t
 
èrgëLígth
,

1449 
UCh¨
 
∑dCh¨
)

1451 
öt32_t
 
ﬁdLígth
 = 
	`Àngth
();

1452 if(
ﬁdLígth
 >
èrgëLígth
 || !
	`˛⁄eAºayIfNìded
(targetLength)) {

1453  
FALSE
;

1456 
UCh¨
 *
¨øy
 = 
	`gëAºaySèπ
();

1457 
öt32_t
 
Àngth
 = 
èrgëLígth
;

1458 --
Àngth
 >
ﬁdLígth
) {

1459 
¨øy
[
Àngth
] = 
∑dCh¨
;

1461 
	`£tLígth
(
èrgëLígth
);

1462  
TRUE
;

1464 
	}
}

1469 
öt32_t


1470 
	gUnicodeSåög
::
	$doHashCode
() const

1474 
öt32_t
 
hashCode
 = 
	`uhash_hashUCh¨sN
(
	`gëAºaySèπ
(), 
	`Àngth
());

1475 i‡(
hashCode
 =
kInvÆidHashCode
) {

1476 
hashCode
 = 
kEm±yHashCode
;

1478  
hashCode
;

1479 
	}
}

1485 
UCh¨
 *

1486 
	gUnicodeSåög
::
	$gëBuf„r
(
öt32_t
 
möC≠acôy
) {

1487 if(
möC≠acôy
>=-1 && 
	`˛⁄eAºayIfNìded
(minCapacity)) {

1488 
fFœgs
|=
kO≥nGëBuf„r
;

1489 
fSh‹tLígth
=0;

1490  
	`gëAºaySèπ
();

1494 
	}
}

1497 
	gUnicodeSåög
::
	$ªÀa£Buf„r
(
öt32_t
 
√wLígth
) {

1498 if(
fFœgs
&
kO≥nGëBuf„r
 && 
√wLígth
>=-1) {

1500 
öt32_t
 
ˇ∑côy
=
	`gëC≠acôy
();

1501 if(
√wLígth
==-1) {

1503 c⁄° 
UCh¨
 *
¨øy
=
	`gëAºaySèπ
(), *
p
˜ºay, *
limô
˜ºay+
ˇ∑côy
;

1504 
p
<
limô
 && *p!=0) {

1505 ++
p
;

1507 
√wLígth
=(
öt32_t
)(
p
-
¨øy
);

1508 } if(
√wLígth
>
ˇ∑côy
) {

1509 
√wLígth
=
ˇ∑côy
;

1511 
	`£tLígth
(
√wLígth
);

1512 
fFœgs
&=~
kO≥nGëBuf„r
;

1514 
	}
}

1519 
UBoﬁ


1520 
	gUnicodeSåög
::
	$˛⁄eAºayIfNìded
(
öt32_t
 
√wC≠acôy
,

1521 
öt32_t
 
growC≠acôy
,

1522 
UBoﬁ
 
doC›yAºay
,

1523 
öt32_t
 **
pBuf„rToDñëe
,

1524 
UBoﬁ
 
f‹˚Cl⁄e
) {

1527 if(
√wC≠acôy
 == -1) {

1528 
√wC≠acôy
 = 
	`gëC≠acôy
();

1534 if(!
	`isWrôabÀ
()) {

1535  
FALSE
;

1545 if(
f‹˚Cl⁄e
 ||

1546 
fFœgs
 & 
kBuf„rIsRód⁄ly
 ||

1547 (
fFœgs
 & 
kRefCou¡ed
 && 
	`ªfCou¡
() > 1) ||

1548 
√wC≠acôy
 > 
	`gëC≠acôy
()

1551 if(
growC≠acôy
 == -1) {

1552 
growC≠acôy
 = 
√wC≠acôy
;

1553 } if(
√wC≠acôy
 <
US_STACKBUF_SIZE
 && 
growC≠acôy
 > US_STACKBUF_SIZE) {

1554 
growC≠acôy
 = 
US_STACKBUF_SIZE
;

1558 
UCh¨
 
ﬁdSèckBuf„r
[
US_STACKBUF_SIZE
];

1559 
UCh¨
 *
ﬁdAºay
;

1560 
uöt8_t
 
Êags
 = 
fFœgs
;

1562 if(
Êags
&
kUsögSèckBuf„r
) {

1563 if(
doC›yAºay
 && 
growC≠acôy
 > 
US_STACKBUF_SIZE
) {

1566 
	`us_¨øyC›y
(
fUni⁄
.
fSèckBuf„r
, 0, 
ﬁdSèckBuf„r
, 0, 
fSh‹tLígth
);

1567 
ﬁdAºay
 = 
ﬁdSèckBuf„r
;

1569 
ﬁdAºay
 = 0;

1572 
ﬁdAºay
 = 
fUni⁄
.
fFõlds
.
fAºay
;

1576 if(
	`Æloˇã
(
growC≠acôy
) ||

1577 (
√wC≠acôy
 < 
growC≠acôy
 && 
	`Æloˇã
(newCapacity))

1579 if(
doC›yAºay
 && 
ﬁdAºay
 != 0) {

1582 
öt32_t
 
möLígth
 = 
	`Àngth
();

1583 
√wC≠acôy
 = 
	`gëC≠acôy
();

1584 if(
√wC≠acôy
 < 
möLígth
) {

1585 
möLígth
 = 
√wC≠acôy
;

1586 
	`£tLígth
(
möLígth
);

1588 
	`us_¨øyC›y
(
ﬁdAºay
, 0, 
	`gëAºaySèπ
(), 0, 
möLígth
);

1590 
fSh‹tLígth
 = 0;

1594 if(
Êags
 & 
kRefCou¡ed
) {

1596 
öt32_t
 *
pRefCou¡
 = ((öt32_à*)
ﬁdAºay
 - 1);

1597 if(
	`umtx_©omic_dec
(
pRefCou¡
) == 0) {

1598 if(
pBuf„rToDñëe
 == 0) {

1599 
	`u¥v_‰ì
(
pRefCou¡
);

1602 *
pBuf„rToDñëe
 = 
pRefCou¡
;

1609 if(!(
Êags
&
kUsögSèckBuf„r
)) {

1610 
fUni⁄
.
fFõlds
.
fAºay
 = 
ﬁdAºay
;

1612 
fFœgs
 = 
Êags
;

1613 
	`£tToBogus
();

1614  
FALSE
;

1617  
TRUE
;

1618 
	}
}

1619 
	gU_NAMESPACE_END


1621 #ifde‡
U_STATIC_IMPLEMENTATION


1629 
	$u¥v_UnicodeSåögDummy
() {

1630 
U_NAMESPACE_USE


1631 
dñëe
 [] (
√w
 
UnicodeSåög
[2]);

1632 
	}
}

	@unistr_case.cpp

19 
	~"unicode/uty≥s.h
"

20 
	~"unicode/putû.h
"

21 
	~"unicode/locid.h
"

22 
	~"c°rög.h
"

23 
	~"cmem‹y.h
"

24 
	~"unicode/u°rög.h
"

25 
	~"unicode/uni°r.h
"

26 
	~"unicode/uch¨.h
"

27 
	~"unicode/ubrk.h
"

28 
	~"u°r_imp.h
"

29 
	~"uhash.h
"

31 
U_NAMESPACE_BEGIN


37 
öt8_t


38 
	gUnicodeSåög
::
	$doCa£Com∑ª
(
öt32_t
 
°¨t
,

39 
öt32_t
 
Àngth
,

40 c⁄° 
UCh¨
 *
§cCh¨s
,

41 
öt32_t
 
§cSèπ
,

42 
öt32_t
 
§cLígth
,

43 
uöt32_t
 
›ti⁄s
) const

47 if(
	`isBogus
()) {

52 
	`pöIndi˚s
(
°¨t
, 
Àngth
);

54 if(
§cCh¨s
 =
NULL
) {

55 
§cSèπ
 = 
§cLígth
 = 0;

59 c⁄° 
UCh¨
 *
ch¨s
 = 
	`gëAºaySèπ
();

61 
ch¨s
 +
°¨t
;

62 
§cCh¨s
 +
§cSèπ
;

64 if(
ch¨s
 !
§cCh¨s
) {

65 
UEº‹Code
 
îr‹Code
=
U_ZERO_ERROR
;

66 
öt32_t
 
ªsu…
=
	`u_°rcmpFﬁd
(
ch¨s
, 
Àngth
, 
§cCh¨s
, 
§cLígth
,

67 
›ti⁄s
|
U_COMPARE_IGNORE_CASE
, &
îr‹Code
);

68 if(
ªsu…
!=0) {

69  (
öt8_t
)(
ªsu…
 >> 24 | 1);

73 if(
§cLígth
 < 0) {

74 
§cLígth
 = 
	`u_°æí
(
§cCh¨s
 + 
§cSèπ
);

76 if(
Àngth
 !
§cLígth
) {

77  (
öt8_t
)((
Àngth
 - 
§cLígth
) >> 24 | 1);

81 
	}
}

92 
	gUnicodeSåög
 &

93 
	gUnicodeSåög
::
	$ˇ£M≠
(
BªakIãøt‹
 *
tôÀIãr
,

94 c⁄° *
loˇÀ
,

95 
uöt32_t
 
›ti⁄s
,

96 
öt32_t
 
toWhichCa£
) {

97 if(
	`isEm±y
(Ë|| !
	`isWrôabÀ
()) {

99  *
this
;

102 c⁄° 
UCa£Pr›s
 *
c•
=
	`uˇ£_gëSögÀt⁄
();

108 
UCh¨
 
ﬁdSèckBuf„r
[
US_STACKBUF_SIZE
];

109 
UCh¨
 *
ﬁdAºay
;

110 
öt32_t
 
ﬁdLígth
;

112 if(
fFœgs
&
kUsögSèckBuf„r
) {

114 
	`u_mem˝y
(
ﬁdSèckBuf„r
, 
fUni⁄
.
fSèckBuf„r
, 
fSh‹tLígth
);

115 
ﬁdAºay
 = 
ﬁdSèckBuf„r
;

116 
ﬁdLígth
 = 
fSh‹tLígth
;

118 
ﬁdAºay
 = 
	`gëAºaySèπ
();

119 
ﬁdLígth
 = 
	`Àngth
();

122 
öt32_t
 
ˇ∑côy
;

123 if(
ﬁdLígth
 <
US_STACKBUF_SIZE
) {

124 
ˇ∑côy
 = 
US_STACKBUF_SIZE
;

126 
ˇ∑côy
 = 
ﬁdLígth
 + 20;

128 
öt32_t
 *
buf„rToDñëe
 = 0;

129 if(!
	`˛⁄eAºayIfNìded
(
ˇ∑côy
, c≠acôy, 
FALSE
, &
buf„rToDñëe
, 
TRUE
)) {

130  *
this
;

134 
UEº‹Code
 
îr‹Code
;

135 
öt32_t
 
√wLígth
;

137 
îr‹Code
 = 
U_ZERO_ERROR
;

138 if(
toWhichCa£
==
TO_LOWER
) {

139 
√wLígth
 = 
	`u°r_toLowî
(
c•
, 
	`gëAºaySèπ
(), 
	`gëC≠acôy
(),

140 
ﬁdAºay
, 
ﬁdLígth
,

141 
loˇÀ
, &
îr‹Code
);

142 } if(
toWhichCa£
==
TO_UPPER
) {

143 
√wLígth
 = 
	`u°r_toUµî
(
c•
, 
	`gëAºaySèπ
(), 
	`gëC≠acôy
(),

144 
ﬁdAºay
, 
ﬁdLígth
,

145 
loˇÀ
, &
îr‹Code
);

146 } if(
toWhichCa£
==
TO_TITLE
) {

147 #i‡
UCONFIG_NO_BREAK_ITERATION


148 
îr‹Code
=
U_UNSUPPORTED_ERROR
;

150 
√wLígth
 = 
	`u°r_toTôÀ
(
c•
, 
	`gëAºaySèπ
(), 
	`gëC≠acôy
(),

151 
ﬁdAºay
, 
ﬁdLígth
,

152 (
UBªakIãøt‹
 *)
tôÀIãr
, 
loˇÀ
, 
›ti⁄s
, &
îr‹Code
);

155 
√wLígth
 = 
	`u°r_fﬁdCa£
(
c•
, 
	`gëAºaySèπ
(), 
	`gëC≠acôy
(),

156 
ﬁdAºay
, 
ﬁdLígth
,

157 
›ti⁄s
,

158 &
îr‹Code
);

160 
	`£tLígth
(
√wLígth
);

161 } 
îr‹Code
==
U_BUFFER_OVERFLOW_ERROR
 && 
	`˛⁄eAºayIfNìded
(
√wLígth
,ÇewLígth, 
FALSE
));

163 i‡(
buf„rToDñëe
) {

164 
	`u¥v_‰ì
(
buf„rToDñëe
);

166 if(
	`U_FAILURE
(
îr‹Code
)) {

167 
	`£tToBogus
();

169  *
this
;

170 
	}
}

172 
	gUnicodeSåög
 &

173 
	gUnicodeSåög
::
	$toLowî
() {

174  
	`ˇ£M≠
(0, 
LoˇÀ
::
	`gëDeÁu…
().
	`gëName
(), 0, 
TO_LOWER
);

175 
	}
}

177 
	gUnicodeSåög
 &

178 
	gUnicodeSåög
::
	$toLowî
(c⁄° 
LoˇÀ
 &
loˇÀ
) {

179  
	`ˇ£M≠
(0, 
loˇÀ
.
	`gëName
(), 0, 
TO_LOWER
);

180 
	}
}

182 
	gUnicodeSåög
 &

183 
	gUnicodeSåög
::
	$toUµî
() {

184  
	`ˇ£M≠
(0, 
LoˇÀ
::
	`gëDeÁu…
().
	`gëName
(), 0, 
TO_UPPER
);

185 
	}
}

187 
	gUnicodeSåög
 &

188 
	gUnicodeSåög
::
	$toUµî
(c⁄° 
LoˇÀ
 &
loˇÀ
) {

189  
	`ˇ£M≠
(0, 
loˇÀ
.
	`gëName
(), 0, 
TO_UPPER
);

190 
	}
}

192 #i‡!
UCONFIG_NO_BREAK_ITERATION


194 
	gUnicodeSåög
 &

195 
	gUnicodeSåög
::
	$toTôÀ
(
BªakIãøt‹
 *
tôÀIãr
) {

196  
	`ˇ£M≠
(
tôÀIãr
, 
LoˇÀ
::
	`gëDeÁu…
().
	`gëName
(), 0, 
TO_TITLE
);

197 
	}
}

199 
	gUnicodeSåög
 &

200 
	gUnicodeSåög
::
	$toTôÀ
(
BªakIãøt‹
 *
tôÀIãr
, c⁄° 
LoˇÀ
 &
loˇÀ
) {

201  
	`ˇ£M≠
(
tôÀIãr
, 
loˇÀ
.
	`gëName
(), 0, 
TO_TITLE
);

202 
	}
}

204 
	gUnicodeSåög
 &

205 
	gUnicodeSåög
::
	$toTôÀ
(
BªakIãøt‹
 *
tôÀIãr
, c⁄° 
LoˇÀ
 &
loˇÀ
, 
uöt32_t
 
›ti⁄s
) {

206  
	`ˇ£M≠
(
tôÀIãr
, 
loˇÀ
.
	`gëName
(), 
›ti⁄s
, 
TO_TITLE
);

207 
	}
}

211 
	gUnicodeSåög
 &

212 
	gUnicodeSåög
::
	$fﬁdCa£
(
uöt32_t
 
›ti⁄s
) {

214  
	`ˇ£M≠
(0, "", 
›ti⁄s
, 
FOLD_CASE
);

215 
	}
}

217 
U_NAMESPACE_END


220 
U_CAPI
 
öt32_t
 
U_EXPORT2


221 
	$uhash_hashCa£ÀssUnicodeSåög
(c⁄° 
UHashTok
 
key
) {

222 
U_NAMESPACE_USE


223 c⁄° 
UnicodeSåög
 *
°r
 = (c⁄° UnicodeSåög*Ë
key
.
poöãr
;

224 i‡(
°r
 =
NULL
) {

229 
UnicodeSåög
 
	`c›y
(*
°r
);

230  
c›y
.
	`fﬁdCa£
().
	`hashCode
();

231 
	}
}

234 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


235 
	$uhash_com∑ªCa£ÀssUnicodeSåög
(c⁄° 
UHashTok
 
key1
, c⁄° UHashTok 
key2
) {

236 
U_NAMESPACE_USE


237 c⁄° 
UnicodeSåög
 *
°r1
 = (c⁄° UnicodeSåög*Ë
key1
.
poöãr
;

238 c⁄° 
UnicodeSåög
 *
°r2
 = (c⁄° UnicodeSåög*Ë
key2
.
poöãr
;

239 i‡(
°r1
 =
°r2
) {

240  
TRUE
;

242 i‡(
°r1
 =
NULL
 || 
°r2
 == NULL) {

243  
FALSE
;

245  
°r1
->
	`ˇ£Com∑ª
(*
°r2
, 
U_FOLD_CASE_DEFAULT
) == 0;

246 
	}
}

	@unistr_cnv.cpp

19 
	~"unicode/uty≥s.h
"

21 #i‡!
UCONFIG_NO_CONVERSION


23 
	~"unicode/putû.h
"

24 
	~"c°rög.h
"

25 
	~"cmem‹y.h
"

26 
	~"unicode/u°rög.h
"

27 
	~"unicode/uni°r.h
"

28 
	~"unicode/u˙v.h
"

29 
	~"u˙v_imp.h
"

30 
	~"putûimp.h
"

31 
	~"u°r_˙v.h
"

32 
	~"u°r_imp.h
"

34 
	gU_NAMESPACE_BEGIN


40 #i‡!
U_CHARSET_IS_UTF8


42 
	gUnicodeSåög
::
	$UnicodeSåög
(c⁄° *
codïageD©a
)

43 : 
	`fSh‹tLígth
(0),

44 
	$fFœgs
(
kSh‹tSåög
)

46 if(
codïageD©a
 != 0) {

47 
	`doCodïageCª©e
(
codïageD©a
, (
öt32_t
)
	`u¥v_°æí
(codepageData), 0);

49 
	}
}

51 
	gUnicodeSåög
::
	$UnicodeSåög
(c⁄° *
codïageD©a
,

52 
öt32_t
 
d©aLígth
)

53 : 
	`fSh‹tLígth
(0),

54 
	$fFœgs
(
kSh‹tSåög
)

56 if(
codïageD©a
 != 0) {

57 
	`doCodïageCª©e
(
codïageD©a
, 
d©aLígth
, 0);

59 
	}
}

64 
	gUnicodeSåög
::
	$UnicodeSåög
(c⁄° *
codïageD©a
,

65 c⁄° *
codïage
)

66 : 
	`fSh‹tLígth
(0),

67 
	$fFœgs
(
kSh‹tSåög
)

69 if(
codïageD©a
 != 0) {

70 
	`doCodïageCª©e
(
codïageD©a
, (
öt32_t
)
	`u¥v_°æí
(codïageD©a), 
codïage
);

72 
	}
}

74 
	gUnicodeSåög
::
	$UnicodeSåög
(c⁄° *
codïageD©a
,

75 
öt32_t
 
d©aLígth
,

76 c⁄° *
codïage
)

77 : 
	`fSh‹tLígth
(0),

78 
	$fFœgs
(
kSh‹tSåög
)

80 if(
codïageD©a
 != 0) {

81 
	`doCodïageCª©e
(
codïageD©a
, 
d©aLígth
, 
codïage
);

83 
	}
}

85 
	gUnicodeSåög
::
	$UnicodeSåög
(c⁄° *
§c
, 
öt32_t
 
§cLígth
,

86 
UC⁄vîãr
 *
˙v
,

87 
UEº‹Code
 &
îr‹Code
)

88 : 
	`fSh‹tLígth
(0),

89 
	$fFœgs
(
kSh‹tSåög
)

91 if(
	`U_SUCCESS
(
îr‹Code
)) {

93 if(
§c
==
NULL
) {

95 } if(
§cLígth
<-1) {

96 
îr‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

99 if(
§cLígth
==-1) {

100 
§cLígth
=(
öt32_t
)
	`u¥v_°æí
(
§c
);

102 if(
§cLígth
>0) {

103 if(
˙v
!=0) {

105 
	`u˙v_ª£tToUnicode
(
˙v
);

106 
	`doCodïageCª©e
(
§c
, 
§cLígth
, 
˙v
, 
îr‹Code
);

109 
˙v
=
	`u_gëDeÁu…C⁄vîãr
(&
îr‹Code
);

110 
	`doCodïageCª©e
(
§c
, 
§cLígth
, 
˙v
, 
îr‹Code
);

111 
	`u_ªÀa£DeÁu…C⁄vîãr
(
˙v
);

116 if(
	`U_FAILURE
(
îr‹Code
)) {

117 
	`£tToBogus
();

120 
	}
}

126 #i‡!
U_CHARSET_IS_UTF8


128 
öt32_t


129 
	gUnicodeSåög
::
	$exåa˘
(
öt32_t
 
°¨t
,

130 
öt32_t
 
Àngth
,

131 *
èrgë
,

132 
uöt32_t
 
d°Size
) const {

133  
	`exåa˘
(
°¨t
, 
Àngth
, 
èrgë
, 
d°Size
, 0);

134 
	}
}

139 
öt32_t


140 
	gUnicodeSåög
::
	$exåa˘
(
öt32_t
 
°¨t
,

141 
öt32_t
 
Àngth
,

142 *
èrgë
,

143 
uöt32_t
 
d°Size
,

144 c⁄° *
codïage
) const

147 if–(
d°Size
 > 0 && 
èrgë
 == 0)) {

152 
	`pöIndi˚s
(
°¨t
, 
Àngth
);

159 
öt32_t
 
ˇ∑côy
;

160 if(
d°Size
 < 0x7fffffff) {

162 
ˇ∑côy
 = (
öt32_t
)
d°Size
;

165 *
èrgëLimô
 = (*)
	`U_MAX_PTR
(
èrgë
);

168 
ˇ∑côy
 = (
öt32_t
)(
èrgëLimô
 - 
èrgë
);

172 
UC⁄vîãr
 *
c⁄vîãr
;

173 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

176 if(
Àngth
 == 0) {

177  
	`u_ãrmö©eCh¨s
(
èrgë
, 
ˇ∑côy
, 0, &
°©us
);

182 i‡(
codïage
 == 0) {

183 c⁄° *
deÁu…Name
 = 
	`u˙v_gëDeÁu…Name
();

184 if(
	`UCNV_FAST_IS_UTF8
(
deÁu…Name
)) {

185  
	`toUTF8
(
°¨t
, 
Àngth
, 
èrgë
, 
ˇ∑côy
);

187 
c⁄vîãr
 = 
	`u_gëDeÁu…C⁄vîãr
(&
°©us
);

188 } i‡(*
codïage
 == 0) {

190 
öt32_t
 
de°Lígth
;

191 if(
Àngth
 <
ˇ∑côy
) {

192 
de°Lígth
 = 
Àngth
;

194 
de°Lígth
 = 
ˇ∑côy
;

196 
	`u_UCh¨sToCh¨s
(
	`gëAºaySèπ
(Ë+ 
°¨t
, 
èrgë
, 
de°Lígth
);

197  
	`u_ãrmö©eCh¨s
(
èrgë
, 
ˇ∑côy
, 
Àngth
, &
°©us
);

199 
c⁄vîãr
 = 
	`u˙v_›í
(
codïage
, &
°©us
);

202 
Àngth
 = 
	`doExåa˘
(
°¨t
,Üígth, 
èrgë
, 
ˇ∑côy
, 
c⁄vîãr
, 
°©us
);

205 i‡(
codïage
 == 0) {

206 
	`u_ªÀa£DeÁu…C⁄vîãr
(
c⁄vîãr
);

208 
	`u˙v_˛o£
(
c⁄vîãr
);

211  
Àngth
;

212 
	}
}

214 
öt32_t


215 
	gUnicodeSåög
::
	$exåa˘
(*
de°
, 
öt32_t
 
de°C≠acôy
,

216 
UC⁄vîãr
 *
˙v
,

217 
UEº‹Code
 &
îr‹Code
) const

219 if(
	`U_FAILURE
(
îr‹Code
)) {

223 if(
	`isBogus
(Ë|| 
de°C≠acôy
<0 || (de°C≠acôy>0 && 
de°
==0)) {

224 
îr‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

229 if(
	`isEm±y
()) {

230  
	`u_ãrmö©eCh¨s
(
de°
, 
de°C≠acôy
, 0, &
îr‹Code
);

234 
UBoﬁ
 
isDeÁu…C⁄vîãr
;

235 if(
˙v
==0) {

236 
isDeÁu…C⁄vîãr
=
TRUE
;

237 
˙v
=
	`u_gëDeÁu…C⁄vîãr
(&
îr‹Code
);

238 if(
	`U_FAILURE
(
îr‹Code
)) {

242 
isDeÁu…C⁄vîãr
=
FALSE
;

243 
	`u˙v_ª£tFromUnicode
(
˙v
);

247 
öt32_t
 
Àn
=
	`doExåa˘
(0, 
	`Àngth
(), 
de°
, 
de°C≠acôy
, 
˙v
, 
îr‹Code
);

250 if(
isDeÁu…C⁄vîãr
) {

251 
	`u_ªÀa£DeÁu…C⁄vîãr
(
˙v
);

254  
Àn
;

255 
	}
}

257 
öt32_t


258 
	gUnicodeSåög
::
	$doExåa˘
(
öt32_t
 
°¨t
, i¡32_à
Àngth
,

259 *
de°
, 
öt32_t
 
de°C≠acôy
,

260 
UC⁄vîãr
 *
˙v
,

261 
UEº‹Code
 &
îr‹Code
) const

263 if(
	`U_FAILURE
(
îr‹Code
)) {

264 if(
de°C≠acôy
!=0) {

265 *
de°
=0;

270 c⁄° 
UCh¨
 *
§c
=
	`gëAºaySèπ
()+
°¨t
, *
§cLimô
=§c+
Àngth
;

271 *
‹igöÆDe°
=
de°
;

272 c⁄° *
de°Limô
;

274 if(
de°C≠acôy
==0) {

275 
de°Limô
=
de°
=0;

276 } if(
de°C≠acôy
==-1) {

278 
de°Limô
=(*)
	`U_MAX_PTR
(
de°
);

280 
de°C≠acôy
=0x7fffffff;

282 
de°Limô
=
de°
+
de°C≠acôy
;

286 
	`u˙v_‰omUnicode
(
˙v
, &
de°
, 
de°Limô
, &
§c
, 
§cLimô
, 0, 
TRUE
, &
îr‹Code
);

287 
Àngth
=(
öt32_t
)(
de°
-
‹igöÆDe°
);

290 if(
îr‹Code
==
U_BUFFER_OVERFLOW_ERROR
) {

291 
buf„r
[1024];

293 
de°Limô
=
buf„r
+(buffer);

295 
de°
=
buf„r
;

296 
îr‹Code
=
U_ZERO_ERROR
;

297 
	`u˙v_‰omUnicode
(
˙v
, &
de°
, 
de°Limô
, &
§c
, 
§cLimô
, 0, 
TRUE
, &
îr‹Code
);

298 
Àngth
+=(
öt32_t
)(
de°
-
buf„r
);

299 } 
îr‹Code
==
U_BUFFER_OVERFLOW_ERROR
);

302  
	`u_ãrmö©eCh¨s
(
‹igöÆDe°
, 
de°C≠acôy
, 
Àngth
, &
îr‹Code
);

303 
	}
}

306 
	gUnicodeSåög
::
	$doCodïageCª©e
(c⁄° *
codïageD©a
,

307 
öt32_t
 
d©aLígth
,

308 c⁄° *
codïage
)

311 if(
codïageD©a
 =0 || 
d©aLígth
 == 0 || dataLength < -1) {

314 if(
d©aLígth
 == -1) {

315 
d©aLígth
 = (
öt32_t
)
	`u¥v_°æí
(
codïageD©a
);

318 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

323 
UC⁄vîãr
 *
c⁄vîãr
;

324 i‡(
codïage
 == 0) {

325 c⁄° *
deÁu…Name
 = 
	`u˙v_gëDeÁu…Name
();

326 if(
	`UCNV_FAST_IS_UTF8
(
deÁu…Name
)) {

327 
	`£tToUTF8
(
	`SåögPõ˚
(
codïageD©a
, 
d©aLígth
));

330 
c⁄vîãr
 = 
	`u_gëDeÁu…C⁄vîãr
(&
°©us
);

331 } if(*
codïage
 == 0) {

333 if(
	`˛⁄eAºayIfNìded
(
d©aLígth
, d©aLígth, 
FALSE
)) {

334 
	`u_ch¨sToUCh¨s
(
codïageD©a
, 
	`gëAºaySèπ
(), 
d©aLígth
);

335 
	`£tLígth
(
d©aLígth
);

337 
	`£tToBogus
();

341 
c⁄vîãr
 = 
	`u˙v_›í
(
codïage
, &
°©us
);

345 if(
	`U_FAILURE
(
°©us
)) {

346 
	`£tToBogus
();

351 
	`doCodïageCª©e
(
codïageD©a
, 
d©aLígth
, 
c⁄vîãr
, 
°©us
);

352 if(
	`U_FAILURE
(
°©us
)) {

353 
	`£tToBogus
();

357 if(
codïage
 == 0) {

358 
	`u_ªÀa£DeÁu…C⁄vîãr
(
c⁄vîãr
);

360 
	`u˙v_˛o£
(
c⁄vîãr
);

362 
	}
}

365 
	gUnicodeSåög
::
	$doCodïageCª©e
(c⁄° *
codïageD©a
,

366 
öt32_t
 
d©aLígth
,

367 
UC⁄vîãr
 *
c⁄vîãr
,

368 
UEº‹Code
 &
°©us
)

370 if(
	`U_FAILURE
(
°©us
)) {

375 c⁄° *
mySour˚
 = 
codïageD©a
;

376 c⁄° *
mySour˚End
 = 
mySour˚
 + 
d©aLígth
;

377 
UCh¨
 *
¨øy
, *
myT¨gë
;

380 
öt32_t
 
¨øySize
;

381 if(
d©aLígth
 <
US_STACKBUF_SIZE
) {

383 
¨øySize
 = 
US_STACKBUF_SIZE
;

386 
¨øySize
 = 
d©aLígth
 + (dataLength >> 2);

390 
UBoﬁ
 
doC›yAºay
 = 
FALSE
;

392 if(!
	`˛⁄eAºayIfNìded
(
¨øySize
,áºaySize, 
doC›yAºay
)) {

393 
	`£tToBogus
();

398 
¨øy
 = 
	`gëAºaySèπ
();

399 
myT¨gë
 = 
¨øy
 + 
	`Àngth
();

400 
	`u˙v_toUnicode
(
c⁄vîãr
, &
myT¨gë
, 
¨øy
 + 
	`gëC≠acôy
(),

401 &
mySour˚
, 
mySour˚End
, 0, 
TRUE
, &
°©us
);

404 
	`£tLígth
((
öt32_t
)(
myT¨gë
 - 
¨øy
));

407 if(
°©us
 =
U_BUFFER_OVERFLOW_ERROR
) {

409 
°©us
 = 
U_ZERO_ERROR
;

412 
doC›yAºay
 = 
TRUE
;

416 
¨øySize
 = (
öt32_t
)(
	`Àngth
(Ë+ 2 * (
mySour˚End
 - 
mySour˚
));

421 
	}
}

423 
	gU_NAMESPACE_END


	@unistr_props.cpp

19 
	~"unicode/uty≥s.h
"

20 
	~"unicode/uch¨.h
"

21 
	~"unicode/uni°r.h
"

23 
U_NAMESPACE_BEGIN


25 
	gUnicodeSåög
&

26 
	gUnicodeSåög
::
	$åim
()

28 if(
	`isBogus
()) {

29  *
this
;

32 
UCh¨
 *
¨øy
 = 
	`gëAºaySèπ
();

33 
UCh¨32
 
c
;

34 
öt32_t
 
ﬁdLígth
 = 
this
->
	`Àngth
();

35 
öt32_t
 
i
 = 
ﬁdLígth
, 
Àngth
;

39 
Àngth
 = 
i
;

40 if(
i
 <= 0) {

43 
	`U16_PREV
(
¨øy
, 0, 
i
, 
c
);

44 if(!(
c
 =0x20 || 
	`u_isWhôe•a˚
(c))) {

48 if(
Àngth
 < 
ﬁdLígth
) {

49 
	`£tLígth
(
Àngth
);

53 
öt32_t
 
°¨t
;

54 
i
 = 0;

56 
°¨t
 = 
i
;

57 if(
i
 >
Àngth
) {

60 
	`U16_NEXT
(
¨øy
, 
i
, 
Àngth
, 
c
);

61 if(!(
c
 =0x20 || 
	`u_isWhôe•a˚
(c))) {

67 if(
°¨t
 > 0) {

68 
	`doRïœ˚
(0, 
°¨t
, 0, 0, 0);

71  *
this
;

72 
	}
}

74 
	gU_NAMESPACE_END


	@unorm.cpp

26 
	~"unicode/uty≥s.h
"

28 #i‡!
UCONFIG_NO_NORMALIZATION


30 
	~"unicode/ud©a.h
"

31 
	~"unicode/u°rög.h
"

32 
	~"unicode/uôî.h
"

33 
	~"unicode/un‹m.h
"

34 
	~"unicode/un‹m2.h
"

35 
	~"n‹mÆizî2im∂.h
"

36 
	~"un‹mimp.h
"

37 
	~"u¥›s.h
"

38 
	~"u°r_imp.h
"

40 
	#LENGTHOF
(
¨øy
Ë(
öt32_t
)(◊ºay)/(◊ºay)[0]))

	)

42 
U_NAMESPACE_USE


46 
U_CAPI
 
UN‹mÆiz©i⁄CheckResu…
 
U_EXPORT2


47 
	$un‹m_quickCheck
(c⁄° 
UCh¨
 *
§c
,

48 
öt32_t
 
§cLígth
,

49 
UN‹mÆiz©i⁄Mode
 
mode
,

50 
UEº‹Code
 *
pEº‹Code
) {

51 c⁄° 
N‹mÆizî2
 *
n2
=
N‹mÆizî2Fa˘‹y
::
	`gëIn°™˚
(
mode
, *
pEº‹Code
);

52  
	`un‹m2_quickCheck
((c⁄° 
UN‹mÆizî2
 *)
n2
, 
§c
, 
§cLígth
, 
pEº‹Code
);

53 
	}
}

55 
U_CAPI
 
UN‹mÆiz©i⁄CheckResu…
 
U_EXPORT2


56 
	$un‹m_quickCheckWôhO±i⁄s
(c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

57 
UN‹mÆiz©i⁄Mode
 
mode
, 
öt32_t
 
›ti⁄s
,

58 
UEº‹Code
 *
pEº‹Code
) {

59 c⁄° 
N‹mÆizî2
 *
n2
=
N‹mÆizî2Fa˘‹y
::
	`gëIn°™˚
(
mode
, *
pEº‹Code
);

60 if(
›ti⁄s
&
UNORM_UNICODE_3_2
) {

61 
FûãªdN‹mÆizî2
 
	`‚2
(*
n2
, *
	`uni£t_gëUnicode32In°™˚
(*
pEº‹Code
));

62  
	`un‹m2_quickCheck
(

63 
ªöãΩªt_ˇ°
<c⁄° 
UN‹mÆizî2
 *>(
°©ic_ˇ°
<
N‹mÆizî2
 *>(&
‚2
)),

64 
§c
, 
§cLígth
, 
pEº‹Code
);

66  
	`un‹m2_quickCheck
((c⁄° 
UN‹mÆizî2
 *)
n2
, 
§c
, 
§cLígth
, 
pEº‹Code
);

68 
	}
}

70 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


71 
	$un‹m_isN‹mÆized
(c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

72 
UN‹mÆiz©i⁄Mode
 
mode
,

73 
UEº‹Code
 *
pEº‹Code
) {

74 c⁄° 
N‹mÆizî2
 *
n2
=
N‹mÆizî2Fa˘‹y
::
	`gëIn°™˚
(
mode
, *
pEº‹Code
);

75  
	`un‹m2_isN‹mÆized
((c⁄° 
UN‹mÆizî2
 *)
n2
, 
§c
, 
§cLígth
, 
pEº‹Code
);

76 
	}
}

78 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


79 
	$un‹m_isN‹mÆizedWôhO±i⁄s
(c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

80 
UN‹mÆiz©i⁄Mode
 
mode
, 
öt32_t
 
›ti⁄s
,

81 
UEº‹Code
 *
pEº‹Code
) {

82 c⁄° 
N‹mÆizî2
 *
n2
=
N‹mÆizî2Fa˘‹y
::
	`gëIn°™˚
(
mode
, *
pEº‹Code
);

83 if(
›ti⁄s
&
UNORM_UNICODE_3_2
) {

84 
FûãªdN‹mÆizî2
 
	`‚2
(*
n2
, *
	`uni£t_gëUnicode32In°™˚
(*
pEº‹Code
));

85  
	`un‹m2_isN‹mÆized
(

86 
ªöãΩªt_ˇ°
<c⁄° 
UN‹mÆizî2
 *>(
°©ic_ˇ°
<
N‹mÆizî2
 *>(&
‚2
)),

87 
§c
, 
§cLígth
, 
pEº‹Code
);

89  
	`un‹m2_isN‹mÆized
((c⁄° 
UN‹mÆizî2
 *)
n2
, 
§c
, 
§cLígth
, 
pEº‹Code
);

91 
	}
}

96 
U_CAPI
 
öt32_t
 
U_EXPORT2


97 
	$un‹m_n‹mÆize
(c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

98 
UN‹mÆiz©i⁄Mode
 
mode
, 
öt32_t
 
›ti⁄s
,

99 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

100 
UEº‹Code
 *
pEº‹Code
) {

101 c⁄° 
N‹mÆizî2
 *
n2
=
N‹mÆizî2Fa˘‹y
::
	`gëIn°™˚
(
mode
, *
pEº‹Code
);

102 if(
›ti⁄s
&
UNORM_UNICODE_3_2
) {

103 
FûãªdN‹mÆizî2
 
	`‚2
(*
n2
, *
	`uni£t_gëUnicode32In°™˚
(*
pEº‹Code
));

104  
	`un‹m2_n‹mÆize
(

105 
ªöãΩªt_ˇ°
<c⁄° 
UN‹mÆizî2
 *>(
°©ic_ˇ°
<
N‹mÆizî2
 *>(&
‚2
)),

106 
§c
, 
§cLígth
, 
de°
, 
de°C≠acôy
, 
pEº‹Code
);

108  
	`un‹m2_n‹mÆize
((c⁄° 
UN‹mÆizî2
 *)
n2
,

109 
§c
, 
§cLígth
, 
de°
, 
de°C≠acôy
, 
pEº‹Code
);

111 
	}
}

116 
öt32_t


117 
	$un‹m_ôî©e
(
UCh¨Iãøt‹
 *
§c
, 
UBoﬁ
 
f‹w¨d
,

118 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

119 
UN‹mÆiz©i⁄Mode
 
mode
, 
öt32_t
 
›ti⁄s
,

120 
UBoﬁ
 
doN‹mÆize
, UBoﬁ *
pNìdedToN‹mÆize
,

121 
UEº‹Code
 *
pEº‹Code
) {

122 c⁄° 
N‹mÆizî2
 *
n2
=
N‹mÆizî2Fa˘‹y
::
	`gëIn°™˚
(
mode
, *
pEº‹Code
);

123 c⁄° 
UnicodeSë
 *
uni32
;

124 if(
›ti⁄s
&
UNORM_UNICODE_3_2
) {

125 
uni32
=
	`uni£t_gëUnicode32In°™˚
(*
pEº‹Code
);

127 
uni32
=
NULL
;

129 
FûãªdN‹mÆizî2
 
	`‚2
(*
n2
, *
uni32
);

130 if(
›ti⁄s
&
UNORM_UNICODE_3_2
) {

131 
n2
=&
‚2
;

133 if(
	`U_FAILURE
(*
pEº‹Code
)) {

136 if–
de°C≠acôy
<0 || (
de°
==
NULL
 && destCapacity>0) ||

137 
§c
==
NULL


139 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

143 if(
pNìdedToN‹mÆize
!=
NULL
) {

144 *
pNìdedToN‹mÆize
=
FALSE
;

146 if(!(
f‹w¨d
 ? 
§c
->
	`hasNext
(§cË: src->
	`hasPªvious
(src))) {

147  
	`u_ãrmö©eUCh¨s
(
de°
, 
de°C≠acôy
, 0, 
pEº‹Code
);

150 
UnicodeSåög
 
buf„r
;

151 
UCh¨32
 
c
;

152 if(
f‹w¨d
) {

154 
buf„r
.
	`≠≥nd
(
	`uôî_√xt32
(
§c
));

156 (
c
=
	`uôî_√xt32
(
§c
))>=0) {

157 if(
n2
->
	`hasBound¨yBef‹e
(
c
)) {

159 
§c
->
	`move
(§c, -
	`U16_LENGTH
(
c
), 
UITER_CURRENT
);

162 
buf„r
.
	`≠≥nd
(
c
);

166 (
c
=
	`uôî_¥evious32
(
§c
))>=0) {

168 
buf„r
.
	`ö£π
(0, 
c
);

170 if(
n2
->
	`hasBound¨yBef‹e
(
c
)) {

176 
UnicodeSåög
 
	`de°Såög
(
de°
, 0, 
de°C≠acôy
);

177 if(
buf„r
.
	`Àngth
()>0 && 
doN‹mÆize
) {

178 
n2
->
	`n‹mÆize
(
buf„r
, 
de°Såög
, *
pEº‹Code
).
	`exåa˘
(
de°
, 
de°C≠acôy
, *pErrorCode);

179 if(
pNìdedToN‹mÆize
!=
NULL
 && 
	`U_SUCCESS
(*
pEº‹Code
)) {

180 *
pNìdedToN‹mÆize

de°Såög
!=
buf„r
;

182  
de°Såög
.
	`Àngth
();

185  
buf„r
.
	`exåa˘
(
de°
, 
de°C≠acôy
, *
pEº‹Code
);

187 
	}
}

189 
U_CAPI
 
öt32_t
 
U_EXPORT2


190 
	$un‹m_¥evious
(
UCh¨Iãøt‹
 *
§c
,

191 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

192 
UN‹mÆiz©i⁄Mode
 
mode
, 
öt32_t
 
›ti⁄s
,

193 
UBoﬁ
 
doN‹mÆize
, UBoﬁ *
pNìdedToN‹mÆize
,

194 
UEº‹Code
 *
pEº‹Code
) {

195  
	`un‹m_ôî©e
(
§c
, 
FALSE
,

196 
de°
, 
de°C≠acôy
,

197 
mode
, 
›ti⁄s
,

198 
doN‹mÆize
, 
pNìdedToN‹mÆize
,

199 
pEº‹Code
);

200 
	}
}

202 
U_CAPI
 
öt32_t
 
U_EXPORT2


203 
	$un‹m_√xt
(
UCh¨Iãøt‹
 *
§c
,

204 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

205 
UN‹mÆiz©i⁄Mode
 
mode
, 
öt32_t
 
›ti⁄s
,

206 
UBoﬁ
 
doN‹mÆize
, UBoﬁ *
pNìdedToN‹mÆize
,

207 
UEº‹Code
 *
pEº‹Code
) {

208  
	`un‹m_ôî©e
(
§c
, 
TRUE
,

209 
de°
, 
de°C≠acôy
,

210 
mode
, 
›ti⁄s
,

211 
doN‹mÆize
, 
pNìdedToN‹mÆize
,

212 
pEº‹Code
);

213 
	}
}

217 
U_CAPI
 
öt32_t
 
U_EXPORT2


218 
	$un‹m_c⁄ˇã«ã
(c⁄° 
UCh¨
 *
À·
, 
öt32_t
 
À·Lígth
,

219 c⁄° 
UCh¨
 *
right
, 
öt32_t
 
rightLígth
,

220 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

221 
UN‹mÆiz©i⁄Mode
 
mode
, 
öt32_t
 
›ti⁄s
,

222 
UEº‹Code
 *
pEº‹Code
) {

223 c⁄° 
N‹mÆizî2
 *
n2
=
N‹mÆizî2Fa˘‹y
::
	`gëIn°™˚
(
mode
, *
pEº‹Code
);

224 c⁄° 
UnicodeSë
 *
uni32
;

225 if(
›ti⁄s
&
UNORM_UNICODE_3_2
) {

226 
uni32
=
	`uni£t_gëUnicode32In°™˚
(*
pEº‹Code
);

228 
uni32
=
NULL
;

230 
FûãªdN‹mÆizî2
 
	`‚2
(*
n2
, *
uni32
);

231 if(
›ti⁄s
&
UNORM_UNICODE_3_2
) {

232 
n2
=&
‚2
;

234 if(
	`U_FAILURE
(*
pEº‹Code
)) {

237 if–
de°C≠acôy
<0 || (
de°
==
NULL
 && destCapacity>0) ||

238 
À·
==
NULL
 || 
À·Lígth
<-1 ||

239 
right
==
NULL
 || 
rightLígth
<-1

241 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

246 if–
de°
!=
NULL
 &&

247 ((
right
>=
de°
 &&Ñight<(de°+
de°C≠acôy
)) ||

248 (
rightLígth
>0 && 
de°
>=
right
 && dest<(right+rightLength)))

250 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

255 
UnicodeSåög
 
de°Såög
;

256 if(
À·
==
de°
) {

257 
de°Såög
.
	`£tTo
(
de°
, 
À·Lígth
, 
de°C≠acôy
);

259 
de°Såög
.
	`£tTo
(
de°
, 0, 
de°C≠acôy
);

260 
de°Såög
.
	`≠≥nd
(
À·
, 
À·Lígth
);

262  
n2
->
	`≠≥nd
(
de°Såög
, 
	`UnicodeSåög
(
rightLígth
<0, 
right
,ÑightLígth), *
pEº‹Code
).

263 
	`exåa˘
(
de°
, 
de°C≠acôy
, *
pEº‹Code
);

264 
	}
}

	@unorm_it.c

17 
	~"unicode/uty≥s.h
"

19 #i‡!
UCONFIG_NO_COLLATION
 && !
UCONFIG_NO_NORMALIZATION


21 
	~"unicode/uôî.h
"

22 
	~"unicode/un‹m.h
"

23 
	~"un‹m_ô.h
"

24 
	~"cmem‹y.h
"

29 
	mINITIAL_CAPACITY
=100

32 
	sUN‹mIãøt‹
 {

33 
UCh¨Iãøt‹
 
	m≠i
;

34 
UCh¨Iãøt‹
 *
	môî
;

43 
UCh¨
 *
	mch¨s
;

44 
uöt32_t
 *
	m°©es
;

52 
öt32_t
 
	mˇ∑côy
;

55 
uöt32_t
 
	m°©e
;

58 
UBoﬁ
 
	mhasPªvious
, 
	mhasNext
, 
	misSèckAŒoˇãd
;

60 
UN‹mÆiz©i⁄Mode
 
	mmode
;

62 
UCh¨
 
	mch¨sBuf„r
[
INITIAL_CAPACITY
];

63 
uöt32_t
 
	m°©esBuf„r
[
INITIAL_CAPACITY
+1];

67 
	$öôIndexes
(
UN‹mIãøt‹
 *
uni
, 
UCh¨Iãøt‹
 *
ôî
) {

69 
UCh¨Iãøt‹
 *
≠i
=&
uni
->api;

71 if(!
ôî
->
	`hasPªvious
(iter)) {

73 
≠i
->
°¨t
˜pi->
ödex
˜pi->
limô
=0;

74 
uni
->
hasPªvious
=
FALSE
;

75 
uni
->
hasNext
=
ôî
->
	`hasNext
(iter);

76 } if(!
ôî
->
	`hasNext
(iter)) {

78 
≠i
->
°¨t
˜pi->
ödex
˜pi->
limô
=
uni
->
ˇ∑côy
;

79 
uni
->
hasNext
=
FALSE
;

80 
uni
->
hasPªvious
=
ôî
->
	`hasPªvious
(iter);

83 
≠i
->
°¨t
˜pi->
ödex
˜pi->
limô
=
uni
->
ˇ∑côy
/2;

84 
uni
->
hasPªvious
=uni->
hasNext
=
TRUE
;

86 
	}
}

88 
UBoﬁ


89 
	$ªÆlocAºays
(
UN‹mIãøt‹
 *
uni
, 
öt32_t
 
ˇ∑côy
, 
UBoﬁ
 
addAtSèπ
) {

91 
UCh¨Iãøt‹
 *
≠i
=&
uni
->api;

93 
uöt32_t
 *
°©es
;

94 
UCh¨
 *
ch¨s
;

95 
öt32_t
 
°¨t
, 
limô
;

97 
°©es
=(
uöt32_t
 *)
	`u¥v_mÆloc
((
ˇ∑côy
+1)*4+capacity*2);

98 if(
°©es
==
NULL
) {

99  
FALSE
;

102 
ch¨s
=(
UCh¨
 *)(
°©es
+(
ˇ∑côy
+1));

103 
uni
->
ˇ∑côy
=capacity;

105 
°¨t
=
≠i
->start;

106 
limô
=
≠i
->limit;

108 if(
addAtSèπ
) {

110 
öt32_t
 
dñè
;

112 
dñè
=
ˇ∑côy
-
uni
->capacity;

113 
	`u¥v_mem˝y
(
°©es
+
dñè
+
°¨t
, 
uni
->°©es+°¨t, (
limô
-start+1)*4);

114 
	`u¥v_mem˝y
(
ch¨s
+
dñè
+
°¨t
, 
uni
->ch¨s+°¨t, (
limô
-start)*4);

116 
≠i
->
°¨t
=°¨t+
dñè
;

117 
≠i
->
ödex
+=
dñè
;

118 
≠i
->
limô
ˆimô+
dñè
;

121 
	`u¥v_mem˝y
(
°©es
+
°¨t
, 
uni
->°©es+°¨t, (
limô
-start+1)*4);

122 
	`u¥v_mem˝y
(
ch¨s
+
°¨t
, 
uni
->ch¨s+°¨t, (
limô
-start)*4);

125 
uni
->
ch¨s
=chars;

126 
uni
->
°©es
=states;

128  
TRUE
;

129 
	}
}

132 
	$moveC⁄ã¡sTow¨dSèπ
(
UCh¨Iãøt‹
 *
≠i
, 
UCh¨
 
ch¨s
[], 
uöt32_t
 
°©es
[], 
öt32_t
 
dñè
) {

134 
öt32_t
 
§cIndex
, 
de°Index
, 
limô
;

136 
limô
=
≠i
->limit;

137 
§cIndex
=
dñè
;

138 if(
§cIndex
>
≠i
->
°¨t
) {

140 
§cIndex
<
limô
 && 
°©es
[§cIndex]==
UITER_NO_STATE
) {

141 ++
§cIndex
;

146 
≠i
->
°¨t
=
de°Index
=0;

147 
§cIndex
<
limô
) {

148 
ch¨s
[
de°Index
]=ch¨s[
§cIndex
];

149 
°©es
[
de°Index
++]=°©es[
§cIndex
++];

153 
°©es
[
de°Index
]=°©es[
§cIndex
];

155 
≠i
->
limô
=
de°Index
;

156 
	}
}

159 
	$moveC⁄ã¡sTow¨dEnd
(
UCh¨Iãøt‹
 *
≠i
, 
UCh¨
 
ch¨s
[], 
uöt32_t
 
°©es
[], 
öt32_t
 
dñè
) {

161 
öt32_t
 
§cIndex
, 
de°Index
, 
°¨t
;

163 
°¨t
=
≠i
->start;

164 
de°Index
=((
UN‹mIãøt‹
 *)
≠i
)->
ˇ∑côy
;

165 
§cIndex
=
de°Index
-
dñè
;

166 if(
§cIndex
<
≠i
->
limô
) {

168 
§cIndex
>
°¨t
 && 
°©es
[§cIndex]==
UITER_NO_STATE
) {

169 --
§cIndex
;

174 
≠i
->
limô
=
de°Index
;

177 
°©es
[
de°Index
]=°©es[
§cIndex
];

179 
§cIndex
>
°¨t
) {

180 
ch¨s
[--
de°Index
]=ch¨s[--
§cIndex
];

181 
°©es
[
de°Index
]=°©es[
§cIndex
];

184 
≠i
->
°¨t
=
de°Index
;

185 
	}
}

188 
UBoﬁ


189 
	$ªadNext
(
UN‹mIãøt‹
 *
uni
, 
UCh¨Iãøt‹
 *
ôî
) {

191 
UCh¨Iãøt‹
 *
≠i
=&
uni
->api;

194 
öt32_t
 
limô
, 
ˇ∑côy
, 
room
;

195 
UEº‹Code
 
îr‹Code
;

197 
limô
=
≠i
->limit;

198 
ˇ∑côy
=
uni
->capacity;

199 
room
=
ˇ∑côy
/4;

200 if(
room
>(
ˇ∑côy
-
limô
)) {

202 
	`moveC⁄ã¡sTow¨dSèπ
(
≠i
, 
uni
->
ch¨s
, uni->
°©es
, 
room
);

203 
≠i
->
ödex
=
limô
=api->limit;

204 
uni
->
hasPªvious
=
TRUE
;

208 
îr‹Code
=
U_ZERO_ERROR
;

209 if(
uni
->
°©e
!=uni->
°©es
[
limô
]) {

210 
	`uôî_£tSèã
(
ôî
, 
uni
->
°©es
[
limô
], &
îr‹Code
);

211 if(
	`U_FAILURE
(
îr‹Code
)) {

212 
uni
->
°©e
=
UITER_NO_STATE
;

213 
uni
->
hasNext
=
FALSE
;

214  
FALSE
;

218 
room
=
	`un‹m_√xt
(
ôî
, 
uni
->
ch¨s
+
limô
, 
ˇ∑côy
-limô, uni->
mode
, 0, 
TRUE
, 
NULL
, &
îr‹Code
);

219 if(
îr‹Code
==
U_BUFFER_OVERFLOW_ERROR
) {

220 if(
room
<=
ˇ∑côy
) {

222 
uni
->
°©es
[0]=uni->°©es[
limô
];

223 
≠i
->
°¨t
˜pi->
ödex
˜pi->
limô
=limit=0;

224 
uni
->
hasPªvious
=
TRUE
;

226 
ˇ∑côy
+=
room
+100;

227 if(!
	`ªÆlocAºays
(
uni
, 
ˇ∑côy
, 
FALSE
)) {

228 
uni
->
°©e
=
UITER_NO_STATE
;

229 
uni
->
hasNext
=
FALSE
;

230  
FALSE
;

232 
limô
=
≠i
->limit;

235 
îr‹Code
=
U_ZERO_ERROR
;

236 
	`uôî_£tSèã
(
ôî
, 
uni
->
°©es
[
limô
], &
îr‹Code
);

237 
room
=
	`un‹m_√xt
(
ôî
, 
uni
->
ch¨s
+
limô
, 
ˇ∑côy
-limô, uni->
mode
, 0, 
TRUE
, 
NULL
, &
îr‹Code
);

239 if(
	`U_FAILURE
(
îr‹Code
Ë|| 
room
==0) {

240 
uni
->
°©e
=
UITER_NO_STATE
;

241 
uni
->
hasNext
=
FALSE
;

242  
FALSE
;

246 ++
limô
;

247 --
room
;Ñoom>0; --room) {

249 
uni
->
°©es
[
limô
++]=
UITER_NO_STATE
;

251 
uni
->
°©es
[
limô
]=uni->
°©e
=
	`uôî_gëSèã
(
ôî
);

252 
uni
->
hasNext
=
ôî
->
	`hasNext
(iter);

253 
≠i
->
limô
=limit;

254  
TRUE
;

255 
	}
}

258 
UBoﬁ


259 
	$ªadPªvious
(
UN‹mIãøt‹
 *
uni
, 
UCh¨Iãøt‹
 *
ôî
) {

261 
UCh¨Iãøt‹
 *
≠i
=&
uni
->api;

264 
öt32_t
 
°¨t
, 
ˇ∑côy
, 
room
;

265 
UEº‹Code
 
îr‹Code
;

267 
°¨t
=
≠i
->start;

268 
ˇ∑côy
=
uni
->capacity;

269 
room
=
ˇ∑côy
/4;

270 if(
room
>
°¨t
) {

272 
	`moveC⁄ã¡sTow¨dEnd
(
≠i
, 
uni
->
ch¨s
, uni->
°©es
, 
room
);

273 
≠i
->
ödex
=
°¨t
=api->start;

274 
uni
->
hasNext
=
TRUE
;

278 
îr‹Code
=
U_ZERO_ERROR
;

279 if(
uni
->
°©e
!=uni->
°©es
[
°¨t
]) {

280 
	`uôî_£tSèã
(
ôî
, 
uni
->
°©es
[
°¨t
], &
îr‹Code
);

281 if(
	`U_FAILURE
(
îr‹Code
)) {

282 
uni
->
°©e
=
UITER_NO_STATE
;

283 
uni
->
hasPªvious
=
FALSE
;

284  
FALSE
;

288 
room
=
	`un‹m_¥evious
(
ôî
, 
uni
->
ch¨s
, 
°¨t
, uni->
mode
, 0, 
TRUE
, 
NULL
, &
îr‹Code
);

289 if(
îr‹Code
==
U_BUFFER_OVERFLOW_ERROR
) {

290 if(
room
<=
ˇ∑côy
) {

292 
uni
->
°©es
[
ˇ∑côy
]=uni->°©es[
°¨t
];

293 
≠i
->
°¨t
˜pi->
ödex
˜pi->
limô
=°¨t=
ˇ∑côy
;

294 
uni
->
hasNext
=
TRUE
;

296 
ˇ∑côy
+=
room
+100;

297 if(!
	`ªÆlocAºays
(
uni
, 
ˇ∑côy
, 
TRUE
)) {

298 
uni
->
°©e
=
UITER_NO_STATE
;

299 
uni
->
hasPªvious
=
FALSE
;

300  
FALSE
;

302 
°¨t
=
≠i
->start;

305 
îr‹Code
=
U_ZERO_ERROR
;

306 
	`uôî_£tSèã
(
ôî
, 
uni
->
°©es
[
°¨t
], &
îr‹Code
);

307 
room
=
	`un‹m_¥evious
(
ôî
, 
uni
->
ch¨s
, 
°¨t
, uni->
mode
, 0, 
TRUE
, 
NULL
, &
îr‹Code
);

309 if(
	`U_FAILURE
(
îr‹Code
Ë|| 
room
==0) {

310 
uni
->
°©e
=
UITER_NO_STATE
;

311 
uni
->
hasPªvious
=
FALSE
;

312  
FALSE
;

318 
uni
->
ch¨s
[--
°¨t
]=uni->ch¨s[--
room
];

320 
uni
->
°©es
[
°¨t
]=
UITER_NO_STATE
;

321 } 
room
>0);

322 
uni
->
°©es
[
°¨t
]=uni->
°©e
=
	`uôî_gëSèã
(
ôî
);

323 
uni
->
hasPªvious
=
ôî
->
	`hasPªvious
(iter);

324 
≠i
->
°¨t
=start;

325  
TRUE
;

326 
	}
}

330 
öt32_t
 
U_CALLCONV


331 
	$un‹mIãøt‹GëIndex
(
UCh¨Iãøt‹
 *
≠i
, 
UCh¨Iãøt‹Origö
 
‹igö
) {

332 
‹igö
) {

333 
UITER_ZERO
:

334 
UITER_START
:

336 
UITER_CURRENT
:

337 
UITER_LIMIT
:

338 
UITER_LENGTH
:

339  
UITER_UNKNOWN_INDEX
;

345 
	}
}

347 
öt32_t
 
U_CALLCONV


348 
	$un‹mIãøt‹Move
(
UCh¨Iãøt‹
 *
≠i
, 
öt32_t
 
dñè
, 
UCh¨Iãøt‹Origö
 
‹igö
) {

349 
UN‹mIãøt‹
 *
uni
=(UN‹mIãøt‹ *)
≠i
;

350 
UCh¨Iãøt‹
 *
ôî
=
uni
->iter;

351 
öt32_t
 
pos
;

353 
‹igö
) {

354 
UITER_ZERO
:

355 
UITER_START
:

357 if(
uni
->
hasPªvious
) {

358 
ôî
->
	`move
(ôî, 0, 
UITER_START
);

359 
≠i
->
°¨t
˜pi->
ödex
˜pi->
limô
=0;

360 
uni
->
°©es
[
≠i
->
limô
]=uni->
°©e
=
	`uôî_gëSèã
(
ôî
);

361 
uni
->
hasPªvious
=
FALSE
;

362 
uni
->
hasNext
=
ôî
->
	`hasNext
(iter);

365 
≠i
->
ödex
˜pi->
°¨t
;

368 
UITER_CURRENT
:

370 
UITER_LIMIT
:

371 
UITER_LENGTH
:

373 if(
uni
->
hasNext
) {

374 
ôî
->
	`move
(ôî, 0, 
UITER_LIMIT
);

375 
≠i
->
°¨t
˜pi->
ödex
˜pi->
limô
=
uni
->
ˇ∑côy
;

376 
uni
->
°©es
[
≠i
->
limô
]=uni->
°©e
=
	`uôî_gëSèã
(
ôî
);

377 
uni
->
hasPªvious
=
ôî
->
	`hasPªvious
(iter);

378 
uni
->
hasNext
=
FALSE
;

381 
≠i
->
ödex
˜pi->
limô
;

389 if(
dñè
==0) {

391 } if(
dñè
>0) {

394 
pos
=
≠i
->
ödex
+
dñè
;

395 
dñè
=
pos
-
≠i
->
limô
;

396 if(
dñè
<=0) {

397 
≠i
->
ödex
=
pos
;

402 
≠i
->
ödex
˜pi->
limô
;

403 if(!
uni
->
hasNext
 || !
	`ªadNext
(uni, 
ôî
)) {

410 
pos
=
≠i
->
ödex
+
dñè
;

411 
dñè
=
pos
-
≠i
->
°¨t
;

412 if(
dñè
>=0) {

413 
≠i
->
ödex
=
pos
;

418 
≠i
->
ödex
˜pi->
°¨t
;

419 if(!
uni
->
hasPªvious
 || !
	`ªadPªvious
(uni, 
ôî
)) {

425 if(
≠i
->
ödex
=˜pi->
°¨t
 && !
uni
->
hasPªvious
) {

428  
UITER_UNKNOWN_INDEX
;

430 
	}
}

432 
UBoﬁ
 
U_CALLCONV


433 
	$un‹mIãøt‹HasNext
(
UCh¨Iãøt‹
 *
≠i
) {

434  
≠i
->
ödex
<≠i->
limô
 || ((
UN‹mIãøt‹
 *Ôpi)->
hasNext
;

435 
	}
}

437 
UBoﬁ
 
U_CALLCONV


438 
	$un‹mIãøt‹HasPªvious
(
UCh¨Iãøt‹
 *
≠i
) {

439  
≠i
->
ödex
>≠i->
°¨t
 || ((
UN‹mIãøt‹
 *Ôpi)->
hasPªvious
;

440 
	}
}

442 
UCh¨32
 
U_CALLCONV


443 
	$un‹mIãøt‹Cuºít
(
UCh¨Iãøt‹
 *
≠i
) {

444 
UN‹mIãøt‹
 *
uni
=(UN‹mIãøt‹ *)
≠i
;

446 if–
≠i
->
ödex
<≠i->
limô
 ||

447 (
uni
->
hasNext
 && 
	`ªadNext
(uni, uni->
ôî
))

449  
uni
->
ch¨s
[
≠i
->
ödex
];

451  
U_SENTINEL
;

453 
	}
}

455 
UCh¨32
 
U_CALLCONV


456 
	$un‹mIãøt‹Next
(
UCh¨Iãøt‹
 *
≠i
) {

457 
UN‹mIãøt‹
 *
uni
=(UN‹mIãøt‹ *)
≠i
;

459 if–
≠i
->
ödex
<≠i->
limô
 ||

460 (
uni
->
hasNext
 && 
	`ªadNext
(uni, uni->
ôî
))

462  
uni
->
ch¨s
[
≠i
->
ödex
++];

464  
U_SENTINEL
;

466 
	}
}

468 
UCh¨32
 
U_CALLCONV


469 
	$un‹mIãøt‹Pªvious
(
UCh¨Iãøt‹
 *
≠i
) {

470 
UN‹mIãøt‹
 *
uni
=(UN‹mIãøt‹ *)
≠i
;

472 if–
≠i
->
ödex
>≠i->
°¨t
 ||

473 (
uni
->
hasPªvious
 && 
	`ªadPªvious
(uni, uni->
ôî
))

475  
uni
->
ch¨s
[--
≠i
->
ödex
];

477  
U_SENTINEL
;

479 
	}
}

481 
uöt32_t
 
U_CALLCONV


482 
	$un‹mIãøt‹GëSèã
(c⁄° 
UCh¨Iãøt‹
 *
≠i
) {

484  ((
UN‹mIãøt‹
 *)
≠i
)->
°©es
[≠i->
ödex
];

485 
	}
}

487 
U_CALLCONV


488 
	$un‹mIãøt‹SëSèã
(
UCh¨Iãøt‹
 *
≠i
, 
uöt32_t
 
°©e
, 
UEº‹Code
 *
pEº‹Code
) {

489 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

491 } if(
≠i
==
NULL
) {

492 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

493 } if(
°©e
==
UITER_NO_STATE
) {

494 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

496 
UN‹mIãøt‹
 *
uni
=(UN‹mIãøt‹ *)
≠i
;

497 
UCh¨Iãøt‹
 *
ôî
=((
UN‹mIãøt‹
 *)
≠i
)->iter;

498 if(
°©e
!=
uni
->state) {

499 
uni
->
°©e
=state;

500 
	`uôî_£tSèã
(
ôî
, 
°©e
, 
pEº‹Code
);

509 if(
°©e
==
uni
->
°©es
[
≠i
->
ödex
]) {

511 } if(
°©e
==
uni
->
°©es
[
≠i
->
limô
]) {

512 
≠i
->
ödex
˜pi->
limô
;

516 
öt32_t
 
i
;

518 
i
=
≠i
->
°¨t
; i<≠i->
limô
; ++i) {

519 if(
°©e
==
uni
->
°©es
[
i
]) {

520 
≠i
->
ödex
=
i
;

527 
	`öôIndexes
((
UN‹mIãøt‹
 *)
≠i
, 
ôî
);

528 
uni
->
°©es
[
≠i
->
limô
]=
°©e
;

530 
	}
}

532 c⁄° 
UCh¨Iãøt‹
 
	gun‹mIãøt‹
={

533 
NULL
, 0, 0, 0, 0, 0,

534 
un‹mIãøt‹GëIndex
,

535 
un‹mIãøt‹Move
,

536 
un‹mIãøt‹HasNext
,

537 
un‹mIãøt‹HasPªvious
,

538 
un‹mIãøt‹Cuºít
,

539 
un‹mIãøt‹Next
,

540 
un‹mIãøt‹Pªvious
,

541 
NULL
,

542 
un‹mIãøt‹GëSèã
,

543 
un‹mIãøt‹SëSèã


548 
U_CAPI
 
UN‹mIãøt‹
 * 
U_EXPORT2


549 
	$un‹m_›íIãr
(*
°ackMem
, 
öt32_t
 
°ackMemSize
, 
UEº‹Code
 *
pEº‹Code
) {

550 
UN‹mIãøt‹
 *
uni
;

553 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

554  
NULL
;

558 
uni
=
NULL
;

559 if(
°ackMem
!=
NULL
 && 
°ackMemSize
>=(
UN‹mIãøt‹
)) {

560 if(
	`U_ALIGNMENT_OFFSET
(
°ackMem
)==0) {

562 
uni
=(
UN‹mIãøt‹
 *)
°ackMem
;

564 
öt32_t
 
Æign
=(öt32_t)
	`U_ALIGNMENT_OFFSET_UP
(
°ackMem
);

565 if((
°ackMemSize
-=
Æign
)>=(
öt32_t
)(
UN‹mIãøt‹
)) {

567 
uni
=(
UN‹mIãøt‹
 *)((*)
°ackMem
+
Æign
);

573 if(
uni
!=
NULL
) {

574 
uni
->
isSèckAŒoˇãd
=
TRUE
;

576 
uni
=(
UN‹mIãøt‹
 *)
	`u¥v_mÆloc
((UNormIterator));

577 if(
uni
==
NULL
) {

578 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

579  
NULL
;

581 
uni
->
isSèckAŒoˇãd
=
FALSE
;

588 
uni
->
ôî
=
NULL
;

589 
uni
->
ch¨s
=uni->
ch¨sBuf„r
;

590 
uni
->
°©es
=uni->
°©esBuf„r
;

591 
uni
->
ˇ∑côy
=
INITIAL_CAPACITY
;

592 
uni
->
°©e
=
UITER_NO_STATE
;

593 
uni
->
hasPªvious
=uni->
hasNext
=
FALSE
;

594 
uni
->
mode
=
UNORM_NONE
;

597 
	`uôî_£tSåög
(&
uni
->
≠i
, 
NULL
, 0);

598  
uni
;

599 
	}
}

601 
U_CAPI
 
U_EXPORT2


602 
	$un‹m_˛o£Iãr
(
UN‹mIãøt‹
 *
uni
) {

603 if(
uni
!=
NULL
) {

604 if(
uni
->
°©es
!=uni->
°©esBuf„r
) {

606 
	`u¥v_‰ì
(
uni
->
°©es
);

608 if(!
uni
->
isSèckAŒoˇãd
) {

609 
	`u¥v_‰ì
(
uni
);

612 
	}
}

614 
U_CAPI
 
UCh¨Iãøt‹
 * 
U_EXPORT2


615 
	$un‹m_£tIãr
(
UN‹mIãøt‹
 *
uni
, 
UCh¨Iãøt‹
 *
ôî
, 
UN‹mÆiz©i⁄Mode
 
mode
, 
UEº‹Code
 *
pEº‹Code
) {

617 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

618  
NULL
;

620 if(
uni
==
NULL
) {

621 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

622  
NULL
;

624 if–
ôî
==
NULL
 || iãr->
gëSèã
==NULL || iãr->
£tSèã
==NULL ||

625 
mode
<
UNORM_NONE
 || 
UNORM_MODE_COUNT
<=mode

628 
	`uôî_£tSåög
(&
uni
->
≠i
, 
NULL
, 0);

629 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

630  
NULL
;

634 
	`u¥v_mem˝y
(&
uni
->
≠i
, &
un‹mIãøt‹
, (unormIterator));

636 
uni
->
ôî
=iter;

637 
uni
->
mode
=mode;

639 
	`öôIndexes
(
uni
, 
ôî
);

640 
uni
->
°©es
[uni->
≠i
.
limô
]=uni->
°©e
=
	`uôî_gëSèã
(
ôî
);

642  &
uni
->
≠i
;

643 
	}
}

	@unorm_it.h

17 #i‚de‡
__UNORM_IT_H__


18 
	#__UNORM_IT_H__


	)

20 
	~"unicode/uty≥s.h
"

22 #i‡!
UCONFIG_NO_COLLATION
 && !
UCONFIG_NO_NORMALIZATION


24 
	~"unicode/uôî.h
"

25 
	~"unicode/un‹m.h
"

82 
	gUN‹mIãøt‹
;

83 
UN‹mIãøt‹
 
	tUN‹mIãøt‹
;

91 
	#UNORM_ITER_SIZE
 1024

	)

105 
U_CAPI
 
UN‹mIãøt‹
 * 
U_EXPORT2


106 
un‹m_›íIãr
(*
°ackMem
, 
öt32_t
 
°ackMemSize
, 
UEº‹Code
 *
pEº‹Code
);

114 
U_CAPI
 
U_EXPORT2


115 
un‹m_˛o£Iãr
(
UN‹mIãøt‹
 *
uni
);

143 
U_CAPI
 
UCh¨Iãøt‹
 * 
U_EXPORT2


144 
un‹m_£tIãr
(
UN‹mIãøt‹
 *
uni
, 
UCh¨Iãøt‹
 *
ôî
, 
UN‹mÆiz©i⁄Mode
 
mode
, 
UEº‹Code
 *
pEº‹Code
);

	@unorm_props_data.c

10 c⁄° 
UVîsi⁄Info
 
	gd©aVîsi⁄
={ 5,2,0,0 };

12 c⁄° 
öt32_t
 
	gödexes
[
_NORM_INDEX_TOP
]={

18 c⁄° 
uöt16_t
 
	gn‹mTrõ_ödex
[2532]={

180 c⁄° 
uöt32_t
 
	gn‹mTrõ_d©a32
[10260]={

825 c⁄° 
UTrõ2
 
	gn‹mTrõ
={

826 
n‹mTrõ_ödex
,

827 
NULL
,

828 
n‹mTrõ_d©a32
,

837 
NULL
, 0, 
FALSE
, FALSE, 0, NULL

841 c⁄° 
uöt16_t
 
	gexåaD©a
[16431]={

1872 c⁄° 
uöt16_t
 
	gcomböögTabÀ
[1967]={

1998 c⁄° 
uöt16_t
 
	gfcdTrõ_ödex
[6508]={

2408 c⁄° 
UTrõ2
 
	gfcdTrõ
={

2409 
fcdTrõ_ödex
,

2410 
fcdTrõ_ödex
+2368,

2411 
NULL
,

2420 
NULL
, 0, 
FALSE
, FALSE, 0, NULL

2424 c⁄° 
uöt16_t
 
	gauxTrõ_ödex
[6664]={

2844 c⁄° 
UTrõ2
 
	gauxTrõ
={

2845 
auxTrõ_ödex
,

2846 
auxTrõ_ödex
+2528,

2847 
NULL
,

2856 
NULL
, 0, 
FALSE
, FALSE, 0, NULL

2859 c⁄° 
uöt16_t
 
	gˇn⁄SèπSës
[7742]={

	@unormcmp.cpp

21 
	~"unicode/uty≥s.h
"

23 #i‡!
UCONFIG_NO_NORMALIZATION


25 
	~"unicode/un‹m.h
"

26 
	~"unicode/u°rög.h
"

27 
	~"cmem‹y.h
"

28 
	~"n‹mÆizî2im∂.h
"

29 
	~"uˇ£.h
"

30 
	~"u¥›s.h
"

31 
	~"u°r_imp.h
"

33 
	gU_NAMESPACE_USE


35 
	#LENGTHOF
(
¨øy
Ë(
öt32_t
)(◊ºay)/(◊ºay)[0]))

	)

130 
	sCmpEquivLevñ
 {

131 c⁄° 
UCh¨
 *
	m°¨t
, *
	ms
, *
	mlimô
;

133 
CmpEquivLevñ
 
	tCmpEquivLevñ
;

139 
	#_COMPARE_EQUIV
 0x80000

	)

142 
öt32_t


143 
	$un‹m_cmpEquivFﬁd
(c⁄° 
UCh¨
 *
s1
, 
öt32_t
 
Àngth1
,

144 c⁄° 
UCh¨
 *
s2
, 
öt32_t
 
Àngth2
,

145 
uöt32_t
 
›ti⁄s
,

146 
UEº‹Code
 *
pEº‹Code
) {

147 c⁄° 
N‹mÆizî2Im∂
 *
nfcIm∂
;

148 c⁄° 
UCa£Pr›s
 *
c•
;

151 c⁄° 
UCh¨
 *
°¨t1
, *
°¨t2
, *
limô1
, *
limô2
;

154 c⁄° 
UCh¨
 *
p
;

155 
öt32_t
 
Àngth
;

158 
CmpEquivLevñ
 
°ack1
[2], 
°ack2
[2];

161 
UCh¨
 
decomp1
[4], 
decomp2
[4];

164 
UCh¨
 
fﬁd1
[
UCASE_MAX_STRING_LENGTH
+1], 
fﬁd2
[UCASE_MAX_STRING_LENGTH+1];

167 
öt32_t
 
Àvñ1
, 
Àvñ2
;

170 
UCh¨32
 
c1
, 
c2
, 
˝1
, 
˝2
;

181 if((
›ti⁄s
&
_COMPARE_EQUIV
)!=0) {

182 
nfcIm∂
=
N‹mÆizî2Fa˘‹y
::
	`gëNFCIm∂
(*
pEº‹Code
);

184 
nfcIm∂
=
NULL
;

186 if((
›ti⁄s
&
U_COMPARE_IGNORE_CASE
)!=0) {

187 
c•
=
	`uˇ£_gëSögÀt⁄
();

189 
c•
=
NULL
;

191 if(
	`U_FAILURE
(*
pEº‹Code
)) {

196 
°¨t1
=
s1
;

197 if(
Àngth1
==-1) {

198 
limô1
=
NULL
;

200 
limô1
=
s1
+
Àngth1
;

203 
°¨t2
=
s2
;

204 if(
Àngth2
==-1) {

205 
limô2
=
NULL
;

207 
limô2
=
s2
+
Àngth2
;

210 
Àvñ1
=
Àvñ2
=0;

211 
c1
=
c2
=-1;

220 if(
c1
<0) {

223 if(
s1
==
limô1
 || ((
c1
=*s1)==0 && (limô1==
NULL
 || (
›ti⁄s
&
_STRNCMP_STYLE
)))) {

224 if(
Àvñ1
==0) {

225 
c1
=-1;

229 ++
s1
;

235 --
Àvñ1
;

236 
°¨t1
=
°ack1
[
Àvñ1
].
°¨t
;

237 } 
°¨t1
==
NULL
);

238 
s1
=
°ack1
[
Àvñ1
].
s
;

239 
limô1
=
°ack1
[
Àvñ1
].
limô
;

243 if(
c2
<0) {

246 if(
s2
==
limô2
 || ((
c2
=*s2)==0 && (limô2==
NULL
 || (
›ti⁄s
&
_STRNCMP_STYLE
)))) {

247 if(
Àvñ2
==0) {

248 
c2
=-1;

252 ++
s2
;

258 --
Àvñ2
;

259 
°¨t2
=
°ack2
[
Àvñ2
].
°¨t
;

260 } 
°¨t2
==
NULL
);

261 
s2
=
°ack2
[
Àvñ2
].
s
;

262 
limô2
=
°ack2
[
Àvñ2
].
limô
;

270 if(
c1
==
c2
) {

271 if(
c1
<0) {

274 
c1
=
c2
=-1;

276 } if(
c1
<0) {

278 } if(
c2
<0) {

284 
˝1
=
c1
;

285 if(
	`U_IS_SURROGATE
(
c1
)) {

286 
UCh¨
 
c
;

288 if(
	`U_IS_SURROGATE_LEAD
(
c1
)) {

289 if(
s1
!=
limô1
 && 
	`U16_IS_TRAIL
(
c
=*s1)) {

291 
˝1
=
	`U16_GET_SUPPLEMENTARY
(
c1
, 
c
);

294 if(
°¨t1
<=(
s1
-2Ë&& 
	`U16_IS_LEAD
(
c
=*(s1-2))) {

295 
˝1
=
	`U16_GET_SUPPLEMENTARY
(
c
, 
c1
);

300 
˝2
=
c2
;

301 if(
	`U_IS_SURROGATE
(
c2
)) {

302 
UCh¨
 
c
;

304 if(
	`U_IS_SURROGATE_LEAD
(
c2
)) {

305 if(
s2
!=
limô2
 && 
	`U16_IS_TRAIL
(
c
=*s2)) {

307 
˝2
=
	`U16_GET_SUPPLEMENTARY
(
c2
, 
c
);

310 if(
°¨t2
<=(
s2
-2Ë&& 
	`U16_IS_LEAD
(
c
=*(s2-2))) {

311 
˝2
=
	`U16_GET_SUPPLEMENTARY
(
c
, 
c2
);

321 if–
Àvñ1
==0 && (
›ti⁄s
&
U_COMPARE_IGNORE_CASE
) &&

322 (
Àngth
=
	`uˇ£_toFuŒFﬁdög
(
c•
, (
UCh¨32
)
˝1
, &
p
, 
›ti⁄s
))>=0

325 if(
	`U_IS_SURROGATE
(
c1
)) {

326 if(
	`U_IS_SURROGATE_LEAD
(
c1
)) {

328 ++
s1
;

337 --
s2
;

338 
c2
=*(
s2
-1);

343 
°ack1
[0].
°¨t
=
°¨t1
;

344 
°ack1
[0].
s
=
s1
;

345 
°ack1
[0].
limô
=
limô1
;

346 ++
Àvñ1
;

349 if(
Àngth
<=
UCASE_MAX_STRING_LENGTH
) {

350 
	`u_mem˝y
(
fﬁd1
, 
p
, 
Àngth
);

352 
öt32_t
 
i
=0;

353 
	`U16_APPEND_UNSAFE
(
fﬁd1
, 
i
, 
Àngth
);

354 
Àngth
=
i
;

358 
°¨t1
=
s1
=
fﬁd1
;

359 
limô1
=
fﬁd1
+
Àngth
;

362 
c1
=-1;

366 if–
Àvñ2
==0 && (
›ti⁄s
&
U_COMPARE_IGNORE_CASE
) &&

367 (
Àngth
=
	`uˇ£_toFuŒFﬁdög
(
c•
, (
UCh¨32
)
˝2
, &
p
, 
›ti⁄s
))>=0

370 if(
	`U_IS_SURROGATE
(
c2
)) {

371 if(
	`U_IS_SURROGATE_LEAD
(
c2
)) {

373 ++
s2
;

382 --
s1
;

383 
c1
=*(
s1
-1);

388 
°ack2
[0].
°¨t
=
°¨t2
;

389 
°ack2
[0].
s
=
s2
;

390 
°ack2
[0].
limô
=
limô2
;

391 ++
Àvñ2
;

394 if(
Àngth
<=
UCASE_MAX_STRING_LENGTH
) {

395 
	`u_mem˝y
(
fﬁd2
, 
p
, 
Àngth
);

397 
öt32_t
 
i
=0;

398 
	`U16_APPEND_UNSAFE
(
fﬁd2
, 
i
, 
Àngth
);

399 
Àngth
=
i
;

403 
°¨t2
=
s2
=
fﬁd2
;

404 
limô2
=
fﬁd2
+
Àngth
;

407 
c2
=-1;

411 if–
Àvñ1
<2 && (
›ti⁄s
&
_COMPARE_EQUIV
) &&

412 0!=(
p
=
nfcIm∂
->
	`gëDecomposôi⁄
((
UCh¨32
)
˝1
, 
decomp1
, 
Àngth
))

415 if(
	`U_IS_SURROGATE
(
c1
)) {

416 if(
	`U_IS_SURROGATE_LEAD
(
c1
)) {

418 ++
s1
;

427 --
s2
;

428 
c2
=*(
s2
-1);

433 
°ack1
[
Àvñ1
].
°¨t
=
°¨t1
;

434 
°ack1
[
Àvñ1
].
s
=
s1
;

435 
°ack1
[
Àvñ1
].
limô
=
limô1
;

436 ++
Àvñ1
;

439 if(
Àvñ1
<2) {

440 
°ack1
[
Àvñ1
++].
°¨t
=
NULL
;

444 
°¨t1
=
s1
=
p
;

445 
limô1
=
p
+
Àngth
;

448 
c1
=-1;

452 if–
Àvñ2
<2 && (
›ti⁄s
&
_COMPARE_EQUIV
) &&

453 0!=(
p
=
nfcIm∂
->
	`gëDecomposôi⁄
((
UCh¨32
)
˝2
, 
decomp2
, 
Àngth
))

456 if(
	`U_IS_SURROGATE
(
c2
)) {

457 if(
	`U_IS_SURROGATE_LEAD
(
c2
)) {

459 ++
s2
;

468 --
s1
;

469 
c1
=*(
s1
-1);

474 
°ack2
[
Àvñ2
].
°¨t
=
°¨t2
;

475 
°ack2
[
Àvñ2
].
s
=
s2
;

476 
°ack2
[
Àvñ2
].
limô
=
limô2
;

477 ++
Àvñ2
;

480 if(
Àvñ2
<2) {

481 
°ack2
[
Àvñ2
++].
°¨t
=
NULL
;

485 
°¨t2
=
s2
=
p
;

486 
limô2
=
p
+
Àngth
;

489 
c2
=-1;

510 if(
c1
>=0xd800 && 
c2
>=0xd800 && (
›ti⁄s
&
U_COMPARE_CODE_POINT_ORDER
)) {

513 (
c1
<=0xdbf‡&& 
s1
!=
limô1
 && 
	`U16_IS_TRAIL
(*s1)) ||

514 (
	`U16_IS_TRAIL
(
c1
Ë&& 
°¨t1
!=(
s1
-1Ë&& 
	`U16_IS_LEAD
(*(s1-2)))

519 
c1
-=0x2800;

523 (
c2
<=0xdbf‡&& 
s2
!=
limô2
 && 
	`U16_IS_TRAIL
(*s2)) ||

524 (
	`U16_IS_TRAIL
(
c2
Ë&& 
°¨t2
!=(
s2
-1Ë&& 
	`U16_IS_LEAD
(*(s2-2)))

529 
c2
-=0x2800;

533  
c1
-
c2
;

535 
	}
}

537 
U_CAPI
 
öt32_t
 
U_EXPORT2


538 
	$un‹m_com∑ª
(c⁄° 
UCh¨
 *
s1
, 
öt32_t
 
Àngth1
,

539 c⁄° 
UCh¨
 *
s2
, 
öt32_t
 
Àngth2
,

540 
uöt32_t
 
›ti⁄s
,

541 
UEº‹Code
 *
pEº‹Code
) {

543 if(
	`U_FAILURE
(*
pEº‹Code
)) {

546 if(
s1
==0 || 
Àngth1
<-1 || 
s2
==0 || 
Àngth2
<-1) {

547 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

551 
UnicodeSåög
 
fcd1
, 
fcd2
;

552 
öt32_t
 
n‹mO±i⁄s
=(öt32_t)(
›ti⁄s
>>
UNORM_COMPARE_NORM_OPTIONS_SHIFT
);

553 
›ti⁄s
|=
_COMPARE_EQUIV
;

576 if(!(
›ti⁄s
&
UNORM_INPUT_IS_FCD
Ë|| (›ti⁄s&
U_FOLD_CASE_EXCLUDE_SPECIAL_I
)) {

577 c⁄° 
N‹mÆizî2
 *
n2
;

578 if(
›ti⁄s
&
U_FOLD_CASE_EXCLUDE_SPECIAL_I
) {

579 
n2
=
N‹mÆizî2Fa˘‹y
::
	`gëNFDIn°™˚
(*
pEº‹Code
);

581 
n2
=
N‹mÆizî2Fa˘‹y
::
	`gëFCDIn°™˚
(*
pEº‹Code
);

583 i‡(
	`U_FAILURE
(*
pEº‹Code
)) {

588 c⁄° 
UnicodeSë
 *
uni32
;

589 if(
n‹mO±i⁄s
&
UNORM_UNICODE_3_2
) {

590 
uni32
=
	`uni£t_gëUnicode32In°™˚
(*
pEº‹Code
);

592 
uni32
=
NULL
;

594 
FûãªdN‹mÆizî2
 
	`‚2
(*
n2
, *
uni32
);

595 if(
n‹mO±i⁄s
&
UNORM_UNICODE_3_2
) {

596 
n2
=&
‚2
;

599 
UnicodeSåög
 
	`°r1
(
Àngth1
<0, 
s1
,Üength1);

600 
UnicodeSåög
 
	`°r2
(
Àngth2
<0, 
s2
,Üength2);

601 
öt32_t
 
•™QCYes1
=
n2
->
	`•™QuickCheckYes
(
°r1
, *
pEº‹Code
);

602 
öt32_t
 
•™QCYes2
=
n2
->
	`•™QuickCheckYes
(
°r2
, *
pEº‹Code
);

603 if(
	`U_FAILURE
(*
pEº‹Code
)) {

616 if(
•™QCYes1
<
°r1
.
	`Àngth
()) {

617 
UnicodeSåög
 
u¬‹mÆized
=
°r1
.
	`ãmpSubSåög
(
•™QCYes1
);

618 
fcd1
.
	`£tTo
(
FALSE
, 
°r1
.
	`gëBuf„r
(), 
•™QCYes1
);

619 
n2
->
	`n‹mÆizeSec⁄dAndAµíd
(
fcd1
, 
u¬‹mÆized
, *
pEº‹Code
);

620 
s1
=
fcd1
.
	`gëBuf„r
();

621 
Àngth1
=
fcd1
.
	`Àngth
();

623 if(
•™QCYes2
<
°r2
.
	`Àngth
()) {

624 
UnicodeSåög
 
u¬‹mÆized
=
°r2
.
	`ãmpSubSåög
(
•™QCYes2
);

625 
fcd2
.
	`£tTo
(
FALSE
, 
°r2
.
	`gëBuf„r
(), 
•™QCYes2
);

626 
n2
->
	`n‹mÆizeSec⁄dAndAµíd
(
fcd2
, 
u¬‹mÆized
, *
pEº‹Code
);

627 
s2
=
fcd2
.
	`gëBuf„r
();

628 
Àngth2
=
fcd2
.
	`Àngth
();

632 if(
	`U_SUCCESS
(*
pEº‹Code
)) {

633  
	`un‹m_cmpEquivFﬁd
(
s1
, 
Àngth1
, 
s2
, 
Àngth2
, 
›ti⁄s
, 
pEº‹Code
);

637 
	}
}

	@unormimp.h

17 #i‚de‡
__UNORMIMP_H__


18 
	#__UNORMIMP_H__


	)

20 
	~"unicode/uty≥s.h
"

22 #i‡!
UCONFIG_NO_NORMALIZATION


24 
	~"ud©aswp.h
"

35 
	m_NORM_QC_NFC
=0x11,

36 
	m_NORM_QC_NFKC
=0x22,

37 
	m_NORM_QC_NFD
=4,

38 
	m_NORM_QC_NFKD
=8,

40 
	m_NORM_QC_ANY_NO
=0xf,

43 
	m_NORM_QC_MAYBE
=0x10,

44 
	m_NORM_QC_ANY_MAYBE
=0x30,

46 
	m_NORM_QC_MASK
=0x3f,

48 
	m_NORM_COMBINES_FWD
=0x40,

49 
	m_NORM_COMBINES_BACK
=0x80,

50 
	m_NORM_COMBINES_ANY
=0xc0,

52 
	m_NORM_CC_SHIFT
=8,

53 
	m_NORM_CC_MASK
=0xff00,

55 
	m_NORM_EXTRA_SHIFT
=16,

56 
	m_NORM_EXTRA_INDEX_TOP
=0xfc00,

58 
	m_NORM_EXTRA_SURROGATE_MASK
=0x3ff,

59 
	m_NORM_EXTRA_SURROGATE_TOP
=0x3f0,

61 
	m_NORM_EXTRA_HANGUL
=
_NORM_EXTRA_SURROGATE_TOP
,

62 
	m_NORM_EXTRA_JAMO_L
,

63 
	m_NORM_EXTRA_JAMO_V
,

64 
	m_NORM_EXTRA_JAMO_T


68 
	#_NORM_MIN_SPECIAL
 0xfc000000

	)

69 
	#_NORM_SURROGATES_TOP
 0xfff00000

	)

70 
	#_NORM_MIN_HANGUL
 0xfff00000

	)

71 
	#_NORM_MIN_JAMO_V
 0xfff20000

	)

72 
	#_NORM_JAMO_V_TOP
 0xfff30000

	)

76 
	m_NORM_AUX_COMP_EX_SHIFT
=10,

77 
	m_NORM_AUX_UNSAFE_SHIFT
=11,

78 
	m_NORM_AUX_NFC_SKIPPABLE_F_SHIFT
=12

81 
	#_NORM_AUX_MAX_FNC
 ((
öt32_t
)1<<
_NORM_AUX_COMP_EX_SHIFT
)

	)

83 
	#_NORM_AUX_FNC_MASK
 (
uöt32_t
)(
_NORM_AUX_MAX_FNC
-1)

	)

84 
	#_NORM_AUX_COMP_EX_MASK
 ((
uöt32_t
)1<<
_NORM_AUX_COMP_EX_SHIFT
)

	)

85 
	#_NORM_AUX_UNSAFE_MASK
 ((
uöt32_t
)1<<
_NORM_AUX_UNSAFE_SHIFT
)

	)

86 
	#_NORM_AUX_NFC_SKIP_F_MASK
 ((
uöt32_t
)1<<
_NORM_AUX_NFC_SKIPPABLE_F_SHIFT
)

	)

90 
	m_NORM_SET_INDEX_CANON_SETS_LENGTH
,

91 
	m_NORM_SET_INDEX_CANON_BMP_TABLE_LENGTH
,

92 
	m_NORM_SET_INDEX_CANON_SUPP_TABLE_LENGTH
,

95 
	m_NORM_SET_INDEX_NX_CJK_COMPAT_OFFSET
,

97 
	m_NORM_SET_INDEX_NX_UNICODE32_OFFSET
,

99 
	m_NORM_SET_INDEX_NX_RESERVED_OFFSET
,

102 
	m_NORM_SET_INDEX_TOP
=32

108 
	#_NORM_MAX_CANON_SETS
 0x4000

	)

111 
	#_NORM_CANON_SET_BMP_MASK
 0xc000

	)

112 
	#_NORM_CANON_SET_BMP_IS_INDEX
 0x4000

	)

116 
	m_NORM_INDEX_TRIE_SIZE
,

117 
	m_NORM_INDEX_UCHAR_COUNT
,

119 
	m_NORM_INDEX_COMBINE_DATA_COUNT
,

120 
	m_NORM_INDEX_COMBINE_FWD_COUNT
,

121 
	m_NORM_INDEX_COMBINE_BOTH_COUNT
,

122 
	m_NORM_INDEX_COMBINE_BACK_COUNT
,

124 
	m_NORM_INDEX_MIN_NFC_NO_MAYBE
,

125 
	m_NORM_INDEX_MIN_NFKC_NO_MAYBE
,

126 
	m_NORM_INDEX_MIN_NFD_NO_MAYBE
,

127 
	m_NORM_INDEX_MIN_NFKD_NO_MAYBE
,

129 
	m_NORM_INDEX_FCD_TRIE_SIZE
,

131 
	m_NORM_INDEX_AUX_TRIE_SIZE
,

132 
	m_NORM_INDEX_CANON_SET_COUNT
,

134 
	m_NORM_INDEX_TOP
=32

139 
	m_NORM_MIN_WITH_LEAD_CC
=0x300

150 
	m_NORM_DECOMP_FLAG_LENGTH_HAS_CC
=0x80,

154 
	m_NORM_DECOMP_LENGTH_MASK
=0x7f

160 
	mUNORM_NX_HANGUL
=1,

162 
	mUNORM_NX_CJK_COMPAT
=2

169 
U_CAPI
 
öt32_t
 
U_EXPORT2


170 
un‹m_sw≠
(c⁄° 
UD©aSw≠≥r
 *
ds
,

171 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

172 
UEº‹Code
 *
pEº‹Code
);

	@uobject.cpp

17 
	~"unicode/uobje˘.h
"

18 
	~"cmem‹y.h
"

20 
	gU_NAMESPACE_BEGIN


22 #i‡
U_OVERRIDE_CXX_ALLOCATION


59 * 
U_EXPORT2
 
	gUMem‹y
::
›î©‹
 
	$√w
(
size_t
 
size
Ë
U_NO_THROW
 {

60  
	`u¥v_mÆloc
(
size
);

61 
	}
}

63 
U_EXPORT2
 
	gUMem‹y
::
›î©‹
 
	$dñëe
(*
p
Ë
U_NO_THROW
 {

64 if(
p
!=
NULL
) {

65 
	`u¥v_‰ì
(
p
);

67 
	}
}

69 * 
U_EXPORT2
 
	gUMem‹y
::
›î©‹
 
√w
[](
size_t
 
size
Ë
U_NO_THROW
 {

70  
u¥v_mÆloc
(
size
);

73 
U_EXPORT2
 
	gUMem‹y
::
›î©‹
 
dñëe
[](*
p
Ë
U_NO_THROW
 {

74 if(
p
!=
NULL
) {

75 
u¥v_‰ì
(
p
);

79 #i‡
U_HAVE_DEBUG_LOCATION_NEW


80 * 
U_EXPORT2
 
	gUMem‹y
::
›î©‹
 
	$√w
(
size_t
 
size
, c⁄° * , Ë
U_NO_THROW
 {

81  
UMem‹y
::
›î©‹
 
	`√w
(
size
);

82 
	}
}

84 
U_EXPORT2
 
	gUMem‹y
::
›î©‹
 
	$dñëe
(* 
p
, c⁄° * , Ë
U_NO_THROW
 {

85 
UMem‹y
::
›î©‹
 
	`dñëe
(
p
);

86 
	}
}

92 
	gUObje˘
::~
	$UObje˘
(Ë{
	}
}

112 
U_NAMESPACE_END


	@uprops.cpp

24 
	~"unicode/uty≥s.h
"

25 
	~"unicode/uch¨.h
"

26 
	~"unicode/un‹m2.h
"

27 
	~"unicode/us¸ùt.h
"

28 
	~"unicode/u°rög.h
"

29 
	~"c°rög.h
"

30 
	~"n‹mÆizî2im∂.h
"

31 
	~"u˛n_cmn.h
"

32 
	~"umuãx.h
"

33 
	~"ubidi_¥›s.h
"

34 
	~"u¥›s.h
"

35 
	~"uˇ£.h
"

36 
	~"u°r_imp.h
"

38 
	#LENGTHOF
(
¨øy
Ë(
öt32_t
)(◊ºay)/(◊ºay)[0]))

	)

40 
	gU_NAMESPACE_USE


42 
	#GET_BIDI_PROPS
(Ë
	`ubidi_gëSögÀt⁄
()

	)

46 
	gBö¨yPr›îty
;

48 
UBoﬁ
 
	tBö¨yPr›îtyC⁄èös
(c⁄° 
	tBö¨yPr›îty
 &
	t¥›
, 
	tUCh¨32
 
	tc
, 
	tUPr›îty
 
	twhich
);

50 
	sBö¨yPr›îty
 {

51 
öt32_t
 
	mcﬁumn
;

52 
uöt32_t
 
	mmask
;

53 
Bö¨yPr›îtyC⁄èös
 *
	mc⁄èös
;

56 
UBoﬁ
 
	$deÁu…C⁄èös
(c⁄° 
Bö¨yPr›îty
 &
¥›
, 
UCh¨32
 
c
, 
UPr›îty
 ) {

58  (
	`u_gëUnicodePr›îtõs
(
c
, 
¥›
.
cﬁumn
)&¥›.
mask
)!=0;

59 
	}
}

61 
UBoﬁ
 
	$ˇ£Bö¨yPr›îtyC⁄èös
(c⁄° 
Bö¨yPr›îty
 & , 
UCh¨32
 
c
, 
UPr›îty
 
which
) {

62  
	`uˇ£_hasBö¨yPr›îty
(
c
, 
which
);

63 
	}
}

65 
UBoﬁ
 
	$isBidiC⁄åﬁ
(c⁄° 
Bö¨yPr›îty
 & , 
UCh¨32
 
c
, 
UPr›îty
 ) {

66  
	`ubidi_isBidiC⁄åﬁ
(
	`GET_BIDI_PROPS
(), 
c
);

67 
	}
}

69 
UBoﬁ
 
	$isMúr‹ed
(c⁄° 
Bö¨yPr›îty
 & , 
UCh¨32
 
c
, 
UPr›îty
 ) {

70  
	`ubidi_isMúr‹ed
(
	`GET_BIDI_PROPS
(), 
c
);

71 
	}
}

73 
UBoﬁ
 
	$isJoöC⁄åﬁ
(c⁄° 
Bö¨yPr›îty
 & , 
UCh¨32
 
c
, 
UPr›îty
 ) {

74  
	`ubidi_isJoöC⁄åﬁ
(
	`GET_BIDI_PROPS
(), 
c
);

75 
	}
}

77 #i‡
UCONFIG_NO_NORMALIZATION


78 
UBoﬁ
 
	$hasFuŒComposôi⁄Ex˛usi⁄
(c⁄° 
Bö¨yPr›îty
 &, 
UCh¨32
, 
UPr›îty
) {

79  
FALSE
;

80 
	}
}

82 
UBoﬁ
 
	$hasFuŒComposôi⁄Ex˛usi⁄
(c⁄° 
Bö¨yPr›îty
 & , 
UCh¨32
 
c
, 
UPr›îty
 ) {

84 
UEº‹Code
 
îr‹Code
=
U_ZERO_ERROR
;

85 c⁄° 
N‹mÆizî2Im∂
 *
im∂
=
N‹mÆizî2Fa˘‹y
::
	`gëNFCIm∂
(
îr‹Code
);

86  
	`U_SUCCESS
(
îr‹Code
Ë&& 
im∂
->
	`isCompNo
(im∂->
	`gëN‹m16
(
c
));

87 
	}
}

91 #i‡
UCONFIG_NO_NORMALIZATION


92 
UBoﬁ
 
	$isN‹mI√π
(c⁄° 
Bö¨yPr›îty
 &, 
UCh¨32
, 
UPr›îty
) {

93  
FALSE
;

94 
	}
}

96 
UBoﬁ
 
	$isN‹mI√π
(c⁄° 
Bö¨yPr›îty
 & , 
UCh¨32
 
c
, 
UPr›îty
 
which
) {

97 
UEº‹Code
 
îr‹Code
=
U_ZERO_ERROR
;

98 c⁄° 
N‹mÆizî2
 *
n‹m2
=
N‹mÆizî2Fa˘‹y
::
	`gëIn°™˚
(

99 (
UN‹mÆiz©i⁄Mode
)(
which
-
UCHAR_NFD_INERT
+
UNORM_NFD
), 
îr‹Code
);

100  
	`U_SUCCESS
(
îr‹Code
Ë&& 
n‹m2
->
	`isI√π
(
c
);

101 
	}
}

104 #i‡
UCONFIG_NO_NORMALIZATION


105 
UBoﬁ
 
	$ch™gesWhíCa£fﬁded
(c⁄° 
Bö¨yPr›îty
 &, 
UCh¨32
, 
UPr›îty
) {

106  
FALSE
;

107 
	}
}

109 
UBoﬁ
 
	$ch™gesWhíCa£fﬁded
(c⁄° 
Bö¨yPr›îty
 & , 
UCh¨32
 
c
, 
UPr›îty
 ) {

110 
UnicodeSåög
 
nfd
;

111 
UEº‹Code
 
îr‹Code
=
U_ZERO_ERROR
;

112 c⁄° 
N‹mÆizî2
 *
nfcN‹m2
=
N‹mÆizî2Fa˘‹y
::
	`gëNFCIn°™˚
(
îr‹Code
);

113 if(
	`U_FAILURE
(
îr‹Code
)) {

114  
FALSE
;

116 if(
nfcN‹m2
->
	`gëDecomposôi⁄
(
c
, 
nfd
)) {

118 if(
nfd
.
	`Àngth
()==1) {

119 
c
=
nfd
[0];

120 } if(
nfd
.
	`Àngth
()<=
U16_MAX_LENGTH
 &&

121 
nfd
.
	`Àngth
()==
	`U16_LENGTH
(
c
Úfd.
	`ch¨32At
(0))

125 
c
=
U_SENTINEL
;

127 } if(
c
<0) {

128  
FALSE
;

130 if(
c
>=0) {

132 c⁄° 
UCa£Pr›s
 *
c•
=
	`uˇ£_gëSögÀt⁄
();

133 c⁄° 
UCh¨
 *
ªsu…Såög
;

134  (
UBoﬁ
)(
	`uˇ£_toFuŒFﬁdög
(
c•
, 
c
, &
ªsu…Såög
, 
U_FOLD_CASE_DEFAULT
)>=0);

137 
UCh¨
 
de°
[2*
UCASE_MAX_STRING_LENGTH
];

138 
öt32_t
 
de°Lígth
;

139 
de°Lígth
=
	`u_°rFﬁdCa£
(
de°
, 
	`LENGTHOF
(dest),

140 
nfd
.
	`gëBuf„r
(),Çfd.
	`Àngth
(),

141 
U_FOLD_CASE_DEFAULT
, &
îr‹Code
);

142  (
UBoﬁ
)(
	`U_SUCCESS
(
îr‹Code
) &&

143 0!=
	`u_°rCom∑ª
(
nfd
.
	`gëBuf„r
(),Çfd.
	`Àngth
(),

144 
de°
, 
de°Lígth
, 
FALSE
));

146 
	}
}

149 #i‡
UCONFIG_NO_NORMALIZATION


150 
UBoﬁ
 
	$ch™gesWhíNFKC_Ca£fﬁded
(c⁄° 
Bö¨yPr›îty
 &, 
UCh¨32
, 
UPr›îty
) {

151  
FALSE
;

152 
	}
}

154 
UBoﬁ
 
	$ch™gesWhíNFKC_Ca£fﬁded
(c⁄° 
Bö¨yPr›îty
 & , 
UCh¨32
 
c
, 
UPr›îty
 ) {

155 
UEº‹Code
 
îr‹Code
=
U_ZERO_ERROR
;

156 c⁄° 
N‹mÆizî2Im∂
 *
kcf
=
N‹mÆizî2Fa˘‹y
::
	`gëNFKC_CFIm∂
(
îr‹Code
);

157 if(
	`U_FAILURE
(
îr‹Code
)) {

158  
FALSE
;

160 
UnicodeSåög
 
	`§c
(
c
);

161 
UnicodeSåög
 
de°
;

165 
Re‹dîögBuf„r
 
	`buf„r
(*
kcf
, 
de°
);

167 if(
buf„r
.
	`öô
(5, 
îr‹Code
)) {

168 c⁄° 
UCh¨
 *
§cAºay
=
§c
.
	`gëBuf„r
();

169 
kcf
->
	`compo£
(
§cAºay
, srcAºay+
§c
.
	`Àngth
(), 
FALSE
,

170 
TRUE
, 
buf„r
, 
îr‹Code
);

173  
	`U_SUCCESS
(
îr‹Code
Ë&& 
de°
!=
§c
;

174 
	}
}

177 #i‡
UCONFIG_NO_NORMALIZATION


178 
UBoﬁ
 
	$isC™⁄SegmítSèπî
(c⁄° 
Bö¨yPr›îty
 &, 
UCh¨32
, 
UPr›îty
) {

179  
FALSE
;

180 
	}
}

182 
UBoﬁ
 
	$isC™⁄SegmítSèπî
(c⁄° 
Bö¨yPr›îty
 & , 
UCh¨32
 
c
, 
UPr›îty
 ) {

183 
UEº‹Code
 
îr‹Code
=
U_ZERO_ERROR
;

184 c⁄° 
N‹mÆizî2Im∂
 *
im∂
=
N‹mÆizî2Fa˘‹y
::
	`gëNFCIm∂
(
îr‹Code
);

186 
	`U_SUCCESS
(
îr‹Code
Ë&& 
im∂
->
	`ísuªC™⁄IãrD©a
(errorCode) &&

187 
im∂
->
	`isC™⁄SegmítSèπî
(
c
);

188 
	}
}

191 
UBoﬁ
 
	$isPOSIX_Ænum
(c⁄° 
Bö¨yPr›îty
 & , 
UCh¨32
 
c
, 
UPr›îty
 ) {

192  
	`u_iß umPOSIX
(
c
);

193 
	}
}

195 
UBoﬁ
 
	$isPOSIX_bœnk
(c⁄° 
Bö¨yPr›îty
 & , 
UCh¨32
 
c
, 
UPr›îty
 ) {

196  
	`u_isbœnk
(
c
);

197 
	}
}

199 
UBoﬁ
 
	$isPOSIX_gøph
(c⁄° 
Bö¨yPr›îty
 & , 
UCh¨32
 
c
, 
UPr›îty
 ) {

200  
	`u_isgøphPOSIX
(
c
);

201 
	}
}

203 
UBoﬁ
 
	$isPOSIX_¥öt
(c⁄° 
Bö¨yPr›îty
 & , 
UCh¨32
 
c
, 
UPr›îty
 ) {

204  
	`u_i•rötPOSIX
(
c
);

205 
	}
}

207 
UBoﬁ
 
	$isPOSIX_xdigô
(c⁄° 
Bö¨yPr›îty
 & , 
UCh¨32
 
c
, 
UPr›îty
 ) {

208  
	`u_isxdigô
(
c
);

209 
	}
}

211 c⁄° 
Bö¨yPr›îty
 
	gböPr›s
[
UCHAR_BINARY_LIMIT
]={

220 { 1, 
U_MASK
(
UPROPS_ALPHABETIC
), 
deÁu…C⁄èös
 },

221 { 1, 
U_MASK
(
UPROPS_ASCII_HEX_DIGIT
), 
deÁu…C⁄èös
 },

222 { 
UPROPS_SRC_BIDI
, 0, 
isBidiC⁄åﬁ
 },

223 { 
UPROPS_SRC_BIDI
, 0, 
isMúr‹ed
 },

224 { 1, 
U_MASK
(
UPROPS_DASH
), 
deÁu…C⁄èös
 },

225 { 1, 
U_MASK
(
UPROPS_DEFAULT_IGNORABLE_CODE_POINT
), 
deÁu…C⁄èös
 },

226 { 1, 
U_MASK
(
UPROPS_DEPRECATED
), 
deÁu…C⁄èös
 },

227 { 1, 
U_MASK
(
UPROPS_DIACRITIC
), 
deÁu…C⁄èös
 },

228 { 1, 
U_MASK
(
UPROPS_EXTENDER
), 
deÁu…C⁄èös
 },

229 { 
UPROPS_SRC_NFC
, 0, 
hasFuŒComposôi⁄Ex˛usi⁄
 },

230 { 1, 
U_MASK
(
UPROPS_GRAPHEME_BASE
), 
deÁu…C⁄èös
 },

231 { 1, 
U_MASK
(
UPROPS_GRAPHEME_EXTEND
), 
deÁu…C⁄èös
 },

232 { 1, 
U_MASK
(
UPROPS_GRAPHEME_LINK
), 
deÁu…C⁄èös
 },

233 { 1, 
U_MASK
(
UPROPS_HEX_DIGIT
), 
deÁu…C⁄èös
 },

234 { 1, 
U_MASK
(
UPROPS_HYPHEN
), 
deÁu…C⁄èös
 },

235 { 1, 
U_MASK
(
UPROPS_ID_CONTINUE
), 
deÁu…C⁄èös
 },

236 { 1, 
U_MASK
(
UPROPS_ID_START
), 
deÁu…C⁄èös
 },

237 { 1, 
U_MASK
(
UPROPS_IDEOGRAPHIC
), 
deÁu…C⁄èös
 },

238 { 1, 
U_MASK
(
UPROPS_IDS_BINARY_OPERATOR
), 
deÁu…C⁄èös
 },

239 { 1, 
U_MASK
(
UPROPS_IDS_TRINARY_OPERATOR
), 
deÁu…C⁄èös
 },

240 { 
UPROPS_SRC_BIDI
, 0, 
isJoöC⁄åﬁ
 },

241 { 1, 
U_MASK
(
UPROPS_LOGICAL_ORDER_EXCEPTION
), 
deÁu…C⁄èös
 },

242 { 
UPROPS_SRC_CASE
, 0, 
ˇ£Bö¨yPr›îtyC⁄èös
 },

243 { 1, 
U_MASK
(
UPROPS_MATH
), 
deÁu…C⁄èös
 },

244 { 1, 
U_MASK
(
UPROPS_NONCHARACTER_CODE_POINT
), 
deÁu…C⁄èös
 },

245 { 1, 
U_MASK
(
UPROPS_QUOTATION_MARK
), 
deÁu…C⁄èös
 },

246 { 1, 
U_MASK
(
UPROPS_RADICAL
), 
deÁu…C⁄èös
 },

247 { 
UPROPS_SRC_CASE
, 0, 
ˇ£Bö¨yPr›îtyC⁄èös
 },

248 { 1, 
U_MASK
(
UPROPS_TERMINAL_PUNCTUATION
), 
deÁu…C⁄èös
 },

249 { 1, 
U_MASK
(
UPROPS_UNIFIED_IDEOGRAPH
), 
deÁu…C⁄èös
 },

250 { 
UPROPS_SRC_CASE
, 0, 
ˇ£Bö¨yPr›îtyC⁄èös
 },

251 { 1, 
U_MASK
(
UPROPS_WHITE_SPACE
), 
deÁu…C⁄èös
 },

252 { 1, 
U_MASK
(
UPROPS_XID_CONTINUE
), 
deÁu…C⁄èös
 },

253 { 1, 
U_MASK
(
UPROPS_XID_START
), 
deÁu…C⁄èös
 },

254 { 
UPROPS_SRC_CASE
, 0, 
ˇ£Bö¨yPr›îtyC⁄èös
 },

255 { 1, 
U_MASK
(
UPROPS_S_TERM
), 
deÁu…C⁄èös
 },

256 { 1, 
U_MASK
(
UPROPS_VARIATION_SELECTOR
), 
deÁu…C⁄èös
 },

257 { 
UPROPS_SRC_NFC
, 0, 
isN‹mI√π
 },

258 { 
UPROPS_SRC_NFKC
, 0, 
isN‹mI√π
 },

259 { 
UPROPS_SRC_NFC
, 0, 
isN‹mI√π
 },

260 { 
UPROPS_SRC_NFKC
, 0, 
isN‹mI√π
 },

261 { 
UPROPS_SRC_NFC_CANON_ITER
, 0, 
isC™⁄SegmítSèπî
 },

262 { 1, 
U_MASK
(
UPROPS_PATTERN_SYNTAX
), 
deÁu…C⁄èös
 },

263 { 1, 
U_MASK
(
UPROPS_PATTERN_WHITE_SPACE
), 
deÁu…C⁄èös
 },

264 { 
UPROPS_SRC_CHAR_AND_PROPSVEC
, 0, 
isPOSIX_Ænum
 },

265 { 
UPROPS_SRC_CHAR
, 0, 
isPOSIX_bœnk
 },

266 { 
UPROPS_SRC_CHAR
, 0, 
isPOSIX_gøph
 },

267 { 
UPROPS_SRC_CHAR
, 0, 
isPOSIX_¥öt
 },

268 { 
UPROPS_SRC_CHAR
, 0, 
isPOSIX_xdigô
 },

269 { 
UPROPS_SRC_CASE
, 0, 
ˇ£Bö¨yPr›îtyC⁄èös
 },

270 { 
UPROPS_SRC_CASE
, 0, 
ˇ£Bö¨yPr›îtyC⁄èös
 },

271 { 
UPROPS_SRC_CASE
, 0, 
ˇ£Bö¨yPr›îtyC⁄èös
 },

272 { 
UPROPS_SRC_CASE
, 0, 
ˇ£Bö¨yPr›îtyC⁄èös
 },

273 { 
UPROPS_SRC_CASE
, 0, 
ˇ£Bö¨yPr›îtyC⁄èös
 },

274 { 
UPROPS_SRC_CASE_AND_NORM
, 0, 
ch™gesWhíCa£fﬁded
 },

275 { 
UPROPS_SRC_CASE
, 0, 
ˇ£Bö¨yPr›îtyC⁄èös
 },

276 { 
UPROPS_SRC_NFKC_CF
, 0, 
ch™gesWhíNFKC_Ca£fﬁded
 }

279 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


280 
	$u_hasBö¨yPr›îty
(
UCh¨32
 
c
, 
UPr›îty
 
which
) {

282 if(
which
<
UCHAR_BINARY_START
 || 
UCHAR_BINARY_LIMIT
<=which) {

284  
FALSE
;

286 c⁄° 
Bö¨yPr›îty
 &
¥›
=
böPr›s
[
which
];

287  
¥›
.
	`c⁄èös
’r›, 
c
, 
which
);

289 
	}
}

291 #i‡!
UCONFIG_NO_NORMALIZATION


293 
U_CAPI
 
uöt8_t
 
U_EXPORT2


294 
	$u_gëComböögCœss
(
UCh¨32
 
c
) {

295 
UEº‹Code
 
îr‹Code
=
U_ZERO_ERROR
;

296 c⁄° 
N‹mÆizî2Im∂
 *
im∂
=
N‹mÆizî2Fa˘‹y
::
	`gëNFCIm∂
(
îr‹Code
);

297 if(
	`U_SUCCESS
(
îr‹Code
)) {

298  
im∂
->
	`gëCC
(im∂->
	`gëN‹m16
(
c
));

302 
	}
}

304 
uöt16_t


305 
	$gëFCD16
(
UCh¨32
 
c
) {

306 
UEº‹Code
 
îr‹Code
=
U_ZERO_ERROR
;

307 c⁄° 
UTrõ2
 *
åõ
=
N‹mÆizî2Fa˘‹y
::
	`gëFCDTrõ
(
îr‹Code
);

308 if(
	`U_SUCCESS
(
îr‹Code
)) {

309  
	`UTRIE2_GET16
(
åõ
, 
c
);

313 
	}
}

317 
	gI¡Pr›îty
;

319 
öt32_t
 
	tI¡Pr›îtyGëVÆue
(c⁄° 
	tI¡Pr›îty
 &
	t¥›
, 
	tUCh¨32
 
	tc
, 
	tUPr›îty
 
	twhich
);

320 
öt32_t
 
	tI¡Pr›îtyGëMaxVÆue
(c⁄° 
	tI¡Pr›îty
 &
	t¥›
, 
	tUPr›îty
 
	twhich
);

322 
	sI¡Pr›îty
 {

323 
öt32_t
 
	mcﬁumn
;

324 
uöt32_t
 
	mmask
;

325 
öt32_t
 
	mshi·
;

326 
I¡Pr›îtyGëVÆue
 *
	mgëVÆue
;

327 
I¡Pr›îtyGëMaxVÆue
 *
	mgëMaxVÆue
;

330 
öt32_t
 
	$deÁu…GëVÆue
(c⁄° 
I¡Pr›îty
 &
¥›
, 
UCh¨32
 
c
, 
UPr›îty
 ) {

332  (
öt32_t
)(
	`u_gëUnicodePr›îtõs
(
c
, 
¥›
.
cﬁumn
)&¥›.
mask
)>>¥›.
shi·
;

333 
	}
}

335 
öt32_t
 
	$deÁu…GëMaxVÆue
(c⁄° 
I¡Pr›îty
 &
¥›
, 
UPr›îty
 ) {

336  (
	`u¥v_gëMaxVÆues
(
¥›
.
cﬁumn
)&¥›.
mask
)>>¥›.
shi·
;

337 
	}
}

339 
öt32_t
 
	$gëMaxVÆueFromShi·
(c⁄° 
I¡Pr›îty
 &
¥›
, 
UPr›îty
 ) {

340  
¥›
.
shi·
;

341 
	}
}

343 
öt32_t
 
	$gëBiDiCœss
(c⁄° 
I¡Pr›îty
 & , 
UCh¨32
 
c
, 
UPr›îty
 ) {

344  (
öt32_t
)
	`u_ch¨Dúe˘i⁄
(
c
);

345 
	}
}

347 
öt32_t
 
	$biDiGëMaxVÆue
(c⁄° 
I¡Pr›îty
 & , 
UPr›îty
 
which
) {

348  
	`ubidi_gëMaxVÆue
(
	`GET_BIDI_PROPS
(), 
which
);

349 
	}
}

351 #i‡
UCONFIG_NO_NORMALIZATION


352 
öt32_t
 
	$gëComböögCœss
(c⁄° 
I¡Pr›îty
 &, 
UCh¨32
, 
UPr›îty
) {

354 
	}
}

356 
öt32_t
 
	$gëComböögCœss
(c⁄° 
I¡Pr›îty
 & , 
UCh¨32
 
c
, 
UPr›îty
 ) {

357  
	`u_gëComböögCœss
(
c
);

358 
	}
}

361 
öt32_t
 
	$gëGíîÆC©eg‹y
(c⁄° 
I¡Pr›îty
 & , 
UCh¨32
 
c
, 
UPr›îty
 ) {

362  (
öt32_t
)
	`u_ch¨Ty≥
(
c
);

363 
	}
}

365 
öt32_t
 
	$gëJoöögGroup
(c⁄° 
I¡Pr›îty
 & , 
UCh¨32
 
c
, 
UPr›îty
 ) {

366  
	`ubidi_gëJoöögGroup
(
	`GET_BIDI_PROPS
(), 
c
);

367 
	}
}

369 
öt32_t
 
	$gëJoöögTy≥
(c⁄° 
I¡Pr›îty
 & , 
UCh¨32
 
c
, 
UPr›îty
 ) {

370  
	`ubidi_gëJoöögTy≥
(
	`GET_BIDI_PROPS
(), 
c
);

371 
	}
}

373 
öt32_t
 
	$gëNumîicTy≥
(c⁄° 
I¡Pr›îty
 & , 
UCh¨32
 
c
, 
UPr›îty
 ) {

374 
öt32_t
 
¡v
=(öt32_t)
	`GET_NUMERIC_TYPE_VALUE
(
	`u_gëUnicodePr›îtõs
(
c
, -1));

375  
	`UPROPS_NTV_GET_TYPE
(
¡v
);

376 
	}
}

378 
öt32_t
 
	$gëS¸ùt
(c⁄° 
I¡Pr›îty
 & , 
UCh¨32
 
c
, 
UPr›îty
 ) {

379 
UEº‹Code
 
îr‹Code
=
U_ZERO_ERROR
;

380  (
öt32_t
)
	`us¸ùt_gëS¸ùt
(
c
, &
îr‹Code
);

381 
	}
}

387 c⁄° 
UH™gulSyŒabÀTy≥
 
	ggcbToH°
[]={

388 
U_HST_NOT_APPLICABLE
,

389 
U_HST_NOT_APPLICABLE
,

390 
U_HST_NOT_APPLICABLE
,

391 
U_HST_NOT_APPLICABLE
,

392 
U_HST_LEADING_JAMO
,

393 
U_HST_NOT_APPLICABLE
,

394 
U_HST_LV_SYLLABLE
,

395 
U_HST_LVT_SYLLABLE
,

396 
U_HST_TRAILING_JAMO
,

397 
U_HST_VOWEL_JAMO


404 
öt32_t
 
	$gëH™gulSyŒabÀTy≥
(c⁄° 
I¡Pr›îty
 & , 
UCh¨32
 
c
, 
UPr›îty
 ) {

406 
öt32_t
 
gcb
=(öt32_t)(
	`u_gëUnicodePr›îtõs
(
c
, 2)&
UPROPS_GCB_MASK
)>>
UPROPS_GCB_SHIFT
;

407 if(
gcb
<
	`LENGTHOF
(
gcbToH°
)) {

408  
gcbToH°
[
gcb
];

410  
U_HST_NOT_APPLICABLE
;

412 
	}
}

414 #i‡
UCONFIG_NO_NORMALIZATION


415 
öt32_t
 
	$gëN‹mQuickCheck
(c⁄° 
I¡Pr›îty
 &, 
UCh¨32
, 
UPr›îty
) {

417 
	}
}

419 
öt32_t
 
	$gëN‹mQuickCheck
(c⁄° 
I¡Pr›îty
 & , 
UCh¨32
 
c
, 
UPr›îty
 
which
) {

420  (
öt32_t
)
	`un‹m_gëQuickCheck
(
c
, (
UN‹mÆiz©i⁄Mode
)(
which
-
UCHAR_NFD_QUICK_CHECK
+
UNORM_NFD
));

421 
	}
}

424 #i‡
UCONFIG_NO_NORMALIZATION


425 
öt32_t
 
	$gëLódComböögCœss
(c⁄° 
I¡Pr›îty
 &, 
UCh¨32
, 
UPr›îty
) {

427 
	}
}

429 
öt32_t
 
	$gëLódComböögCœss
(c⁄° 
I¡Pr›îty
 & , 
UCh¨32
 
c
, 
UPr›îty
 ) {

430  
	`gëFCD16
(
c
)>>8;

431 
	}
}

434 #i‡
UCONFIG_NO_NORMALIZATION


435 
öt32_t
 
	$gëTøûComböögCœss
(c⁄° 
I¡Pr›îty
 &, 
UCh¨32
, 
UPr›îty
) {

437 
	}
}

439 
öt32_t
 
	$gëTøûComböögCœss
(c⁄° 
I¡Pr›îty
 & , 
UCh¨32
 
c
, 
UPr›îty
 ) {

440  
	`gëFCD16
(
c
)&0xff;

441 
	}
}

444 c⁄° 
I¡Pr›îty
 
	götPr›s
[
UCHAR_INT_LIMIT
-
UCHAR_INT_START
]={

453 { 
UPROPS_SRC_BIDI
, 0, 0, 
gëBiDiCœss
, 
biDiGëMaxVÆue
 },

454 { 0, 
UPROPS_BLOCK_MASK
, 
UPROPS_BLOCK_SHIFT
, 
deÁu…GëVÆue
, 
deÁu…GëMaxVÆue
 },

455 { 
UPROPS_SRC_NFC
, 0, 0xff, 
gëComböögCœss
, 
gëMaxVÆueFromShi·
 },

456 { 2, 
UPROPS_DT_MASK
, 0, 
deÁu…GëVÆue
, 
deÁu…GëMaxVÆue
 },

457 { 0, 
UPROPS_EA_MASK
, 
UPROPS_EA_SHIFT
, 
deÁu…GëVÆue
, 
deÁu…GëMaxVÆue
 },

458 { 
UPROPS_SRC_CHAR
, 0, (
öt32_t
)
U_CHAR_CATEGORY_COUNT
-1,
gëGíîÆC©eg‹y
, 
gëMaxVÆueFromShi·
 },

459 { 
UPROPS_SRC_BIDI
, 0, 0, 
gëJoöögGroup
, 
biDiGëMaxVÆue
 },

460 { 
UPROPS_SRC_BIDI
, 0, 0, 
gëJoöögTy≥
, 
biDiGëMaxVÆue
 },

461 { 2, 
UPROPS_LB_MASK
, 
UPROPS_LB_SHIFT
, 
deÁu…GëVÆue
, 
deÁu…GëMaxVÆue
 },

462 { 
UPROPS_SRC_CHAR
, 0, (
öt32_t
)
U_NT_COUNT
-1, 
gëNumîicTy≥
, 
gëMaxVÆueFromShi·
 },

463 { 0, 
UPROPS_SCRIPT_MASK
, 0, 
gëS¸ùt
, 
deÁu…GëMaxVÆue
 },

464 { 
UPROPS_SRC_PROPSVEC
, 0, (
öt32_t
)
U_HST_COUNT
-1, 
gëH™gulSyŒabÀTy≥
, 
gëMaxVÆueFromShi·
 },

466 { 
UPROPS_SRC_NFC
, 0, (
öt32_t
)
UNORM_YES
, 
gëN‹mQuickCheck
, 
gëMaxVÆueFromShi·
 },

468 { 
UPROPS_SRC_NFKC
, 0, (
öt32_t
)
UNORM_YES
, 
gëN‹mQuickCheck
, 
gëMaxVÆueFromShi·
 },

470 { 
UPROPS_SRC_NFC
, 0, (
öt32_t
)
UNORM_MAYBE
, 
gëN‹mQuickCheck
, 
gëMaxVÆueFromShi·
 },

472 { 
UPROPS_SRC_NFKC
, 0, (
öt32_t
)
UNORM_MAYBE
, 
gëN‹mQuickCheck
, 
gëMaxVÆueFromShi·
 },

473 { 
UPROPS_SRC_NFC
, 0, 0xff, 
gëLódComböögCœss
, 
gëMaxVÆueFromShi·
 },

474 { 
UPROPS_SRC_NFC
, 0, 0xff, 
gëTøûComböögCœss
, 
gëMaxVÆueFromShi·
 },

475 { 2, 
UPROPS_GCB_MASK
, 
UPROPS_GCB_SHIFT
, 
deÁu…GëVÆue
, 
deÁu…GëMaxVÆue
 },

476 { 2, 
UPROPS_SB_MASK
, 
UPROPS_SB_SHIFT
, 
deÁu…GëVÆue
, 
deÁu…GëMaxVÆue
 },

477 { 2, 
UPROPS_WB_MASK
, 
UPROPS_WB_SHIFT
, 
deÁu…GëVÆue
, 
deÁu…GëMaxVÆue
 }

480 
U_CAPI
 
öt32_t
 
U_EXPORT2


481 
	$u_gëI¡Pr›îtyVÆue
(
UCh¨32
 
c
, 
UPr›îty
 
which
) {

482 if(
which
<
UCHAR_INT_START
) {

483 if(
UCHAR_BINARY_START
<=
which
 && which<
UCHAR_BINARY_LIMIT
) {

484 c⁄° 
Bö¨yPr›îty
 &
¥›
=
böPr›s
[
which
];

485  
¥›
.
	`c⁄èös
’r›, 
c
, 
which
);

487 } if(
which
<
UCHAR_INT_LIMIT
) {

488 c⁄° 
I¡Pr›îty
 &
¥›
=
ötPr›s
[
which
-
UCHAR_INT_START
];

489  
¥›
.
	`gëVÆue
’r›, 
c
, 
which
);

490 } if(
which
==
UCHAR_GENERAL_CATEGORY_MASK
) {

491  
	`U_MASK
(
	`u_ch¨Ty≥
(
c
));

494 
	}
}

496 
U_CAPI
 
öt32_t
 
U_EXPORT2


497 
	$u_gëI¡Pr›îtyMöVÆue
(
UPr›îty
 ) {

499 
	}
}

501 
U_CAPI
 
öt32_t
 
U_EXPORT2


502 
	$u_gëI¡Pr›îtyMaxVÆue
(
UPr›îty
 
which
) {

503 if(
which
<
UCHAR_INT_START
) {

504 if(
UCHAR_BINARY_START
<=
which
 && which<
UCHAR_BINARY_LIMIT
) {

507 } if(
which
<
UCHAR_INT_LIMIT
) {

508 c⁄° 
I¡Pr›îty
 &
¥›
=
ötPr›s
[
which
-
UCHAR_INT_START
];

509  
¥›
.
	`gëMaxVÆue
’r›, 
which
);

512 
	}
}

514 
U_CFUNC
 
UPr›îtySour˚
 
U_EXPORT2


515 
	$u¥›s_gëSour˚
(
UPr›îty
 
which
) {

516 if(
which
<
UCHAR_BINARY_START
) {

517  
UPROPS_SRC_NONE
;

518 } if(
which
<
UCHAR_BINARY_LIMIT
) {

519 c⁄° 
Bö¨yPr›îty
 &
¥›
=
böPr›s
[
which
];

520 if(
¥›
.
mask
!=0) {

521  
UPROPS_SRC_PROPSVEC
;

523  (
UPr›îtySour˚
)
¥›
.
cﬁumn
;

525 } if(
which
<
UCHAR_INT_START
) {

526  
UPROPS_SRC_NONE
;

527 } if(
which
<
UCHAR_INT_LIMIT
) {

528 c⁄° 
I¡Pr›îty
 &
¥›
=
ötPr›s
[
which
-
UCHAR_INT_START
];

529 if(
¥›
.
mask
!=0) {

530  
UPROPS_SRC_PROPSVEC
;

532  (
UPr›îtySour˚
)
¥›
.
cﬁumn
;

534 } if(
which
<
UCHAR_STRING_START
) {

535 
which
) {

536 
UCHAR_GENERAL_CATEGORY_MASK
:

537 
UCHAR_NUMERIC_VALUE
:

538  
UPROPS_SRC_CHAR
;

541  
UPROPS_SRC_NONE
;

543 } if(
which
<
UCHAR_STRING_LIMIT
) {

544 
which
) {

545 
UCHAR_AGE
:

546  
UPROPS_SRC_PROPSVEC
;

548 
UCHAR_BIDI_MIRRORING_GLYPH
:

549  
UPROPS_SRC_BIDI
;

551 
UCHAR_CASE_FOLDING
:

552 
UCHAR_LOWERCASE_MAPPING
:

553 
UCHAR_SIMPLE_CASE_FOLDING
:

554 
UCHAR_SIMPLE_LOWERCASE_MAPPING
:

555 
UCHAR_SIMPLE_TITLECASE_MAPPING
:

556 
UCHAR_SIMPLE_UPPERCASE_MAPPING
:

557 
UCHAR_TITLECASE_MAPPING
:

558 
UCHAR_UPPERCASE_MAPPING
:

559  
UPROPS_SRC_CASE
;

561 
UCHAR_ISO_COMMENT
:

562 
UCHAR_NAME
:

563 
UCHAR_UNICODE_1_NAME
:

564  
UPROPS_SRC_NAMES
;

567  
UPROPS_SRC_NONE
;

570 
which
) {

571 
UCHAR_SCRIPT_EXTENSIONS
:

572  
UPROPS_SRC_PROPSVEC
;

574  
UPROPS_SRC_NONE
;

577 
	}
}

579 #i‡!
UCONFIG_NO_NORMALIZATION


581 
U_CAPI
 
öt32_t
 
U_EXPORT2


582 
	$u_gëFC_NFKC_Closuª
(
UCh¨32
 
c
, 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
, 
UEº‹Code
 *
pEº‹Code
) {

583 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

586 if(
de°C≠acôy
<0 || (
de°
==
NULL
 && destCapacity>0)) {

587 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

596 c⁄° 
N‹mÆizî2
 *
nfkc
=
N‹mÆizî2Fa˘‹y
::
	`gëNFKCIn°™˚
(*
pEº‹Code
);

597 c⁄° 
UCa£Pr›s
 *
c•
=
	`uˇ£_gëSögÀt⁄
();

598 if(
	`U_FAILURE
(*
pEº‹Code
)) {

602 
UnicodeSåög
 
fﬁded1Såög
;

603 c⁄° 
UCh¨
 *
fﬁded1
;

604 
öt32_t
 
fﬁded1Lígth
=
	`uˇ£_toFuŒFﬁdög
(
c•
, 
c
, &
fﬁded1
, 
U_FOLD_CASE_DEFAULT
);

605 if(
fﬁded1Lígth
<0) {

606 c⁄° 
N‹mÆizî2Im∂
 *
nfkcIm∂
=
N‹mÆizî2Fa˘‹y
::
	`gëIm∂
(
nfkc
);

607 if(
nfkcIm∂
->
	`gëCompQuickCheck
“fkcIm∂->
	`gëN‹m16
(
c
))!=
UNORM_NO
) {

608  
	`u_ãrmö©eUCh¨s
(
de°
, 
de°C≠acôy
, 0, 
pEº‹Code
);

610 
fﬁded1Såög
.
	`£tTo
(
c
);

612 if(
fﬁded1Lígth
>
UCASE_MAX_STRING_LENGTH
) {

613 
fﬁded1Såög
.
	`£tTo
(
fﬁded1Lígth
);

615 
fﬁded1Såög
.
	`£tTo
(
FALSE
, 
fﬁded1
, 
fﬁded1Lígth
);

618 
UnicodeSåög
 
kc1
=
nfkc
->
	`n‹mÆize
(
fﬁded1Såög
, *
pEº‹Code
);

620 
UnicodeSåög
 
	`fﬁded2Såög
(
kc1
);

621 
UnicodeSåög
 
kc2
=
nfkc
->
	`n‹mÆize
(
fﬁded2Såög
.
	`fﬁdCa£
(), *
pEº‹Code
);

623 if(
	`U_FAILURE
(*
pEº‹Code
Ë|| 
kc1
==
kc2
) {

624  
	`u_ãrmö©eUCh¨s
(
de°
, 
de°C≠acôy
, 0, 
pEº‹Code
);

626  
kc2
.
	`exåa˘
(
de°
, 
de°C≠acôy
, *
pEº‹Code
);

628 
	}
}

	@uprops.h

20 #i‚de‡
__UPROPS_H__


21 
	#__UPROPS_H__


	)

23 
	~"unicode/uty≥s.h
"

24 
	~"unicode/u£t.h
"

25 
	~"u£t_imp.h
"

26 
	~"ud©aswp.h
"

30 
	mUPROPS_PROPS32_INDEX
,

31 
	mUPROPS_EXCEPTIONS_INDEX
,

32 
	mUPROPS_EXCEPTIONS_TOP_INDEX
,

34 
	mUPROPS_ADDITIONAL_TRIE_INDEX
,

35 
	mUPROPS_ADDITIONAL_VECTORS_INDEX
,

36 
	mUPROPS_ADDITIONAL_VECTORS_COLUMNS_INDEX
,

38 
	mUPROPS_SCRIPT_EXTENSIONS_INDEX
,

40 
	mUPROPS_RESERVED_INDEX_7
,

41 
	mUPROPS_RESERVED_INDEX_8
,

44 
	mUPROPS_DATA_TOP_INDEX
,

47 
	mUPROPS_MAX_VALUES_INDEX
=10,

49 
	mUPROPS_MAX_VALUES_2_INDEX
,

51 
	mUPROPS_INDEX_COUNT
=16

58 
	mUPROPS_NUMERIC_TYPE_VALUE_SHIFT
=6

61 
	#GET_CATEGORY
(
¥›s
Ë(’r›s)&0x1f)

	)

62 
	#CAT_MASK
(
¥›s
Ë
	`U_MASK
(
	`GET_CATEGORY
’r›s))

	)

64 
	#GET_NUMERIC_TYPE_VALUE
(
¥›s
Ë(’r›s)>>
UPROPS_NUMERIC_TYPE_VALUE_SHIFT
)

	)

68 
	mUPROPS_NTV_NONE
=0,

69 
	mUPROPS_NTV_DECIMAL_START
=1,

70 
	mUPROPS_NTV_DIGIT_START
=11,

71 
	mUPROPS_NTV_NUMERIC_START
=21,

72 
	mUPROPS_NTV_FRACTION_START
=0xb0,

73 
	mUPROPS_NTV_LARGE_START
=0x1e0,

74 
	mUPROPS_NTV_RESERVED_START
=0x300,

76 
	mUPROPS_NTV_MAX_SMALL_INT
=
UPROPS_NTV_FRACTION_START
-
UPROPS_NTV_NUMERIC_START
-1

79 
	#UPROPS_NTV_GET_TYPE
(
¡v
) \

80 ((
¡v
==
UPROPS_NTV_NONE
Ë? 
U_NT_NONE
 : \

81 (
¡v
<
UPROPS_NTV_DIGIT_START
Ë? 
U_NT_DECIMAL
 : \

82 (
¡v
<
UPROPS_NTV_NUMERIC_START
Ë? 
U_NT_DIGIT
 : \

83 
U_NT_NUMERIC
)

	)

86 
	#UPROPS_VECTOR_WORDS
 3

	)

104 
	#UPROPS_AGE_MASK
 0xff000000

	)

105 
	#UPROPS_AGE_SHIFT
 24

	)

108 
	#UPROPS_SCRIPT_X_MASK
 0x00c000ff

	)

109 
	#UPROPS_SCRIPT_X_SHIFT
 22

	)

111 
	#UPROPS_EA_MASK
 0x000e0000

	)

112 
	#UPROPS_EA_SHIFT
 17

	)

114 
	#UPROPS_BLOCK_MASK
 0x0001ff00

	)

115 
	#UPROPS_BLOCK_SHIFT
 8

	)

117 
	#UPROPS_SCRIPT_MASK
 0x000000ff

	)

120 
	#UPROPS_SCRIPT_X_WITH_COMMON
 0x400000

	)

121 
	#UPROPS_SCRIPT_X_WITH_INHERITED
 0x800000

	)

122 
	#UPROPS_SCRIPT_X_WITH_OTHER
 0xc00000

	)

136 
	mUPROPS_WHITE_SPACE
,

137 
	mUPROPS_DASH
,

138 
	mUPROPS_HYPHEN
,

139 
	mUPROPS_QUOTATION_MARK
,

140 
	mUPROPS_TERMINAL_PUNCTUATION
,

141 
	mUPROPS_MATH
,

142 
	mUPROPS_HEX_DIGIT
,

143 
	mUPROPS_ASCII_HEX_DIGIT
,

144 
	mUPROPS_ALPHABETIC
,

145 
	mUPROPS_IDEOGRAPHIC
,

146 
	mUPROPS_DIACRITIC
,

147 
	mUPROPS_EXTENDER
,

148 
	mUPROPS_NONCHARACTER_CODE_POINT
,

149 
	mUPROPS_GRAPHEME_EXTEND
,

150 
	mUPROPS_GRAPHEME_LINK
,

151 
	mUPROPS_IDS_BINARY_OPERATOR
,

152 
	mUPROPS_IDS_TRINARY_OPERATOR
,

153 
	mUPROPS_RADICAL
,

154 
	mUPROPS_UNIFIED_IDEOGRAPH
,

155 
	mUPROPS_DEFAULT_IGNORABLE_CODE_POINT
,

156 
	mUPROPS_DEPRECATED
,

157 
	mUPROPS_LOGICAL_ORDER_EXCEPTION
,

158 
	mUPROPS_XID_START
,

159 
	mUPROPS_XID_CONTINUE
,

160 
	mUPROPS_ID_START
,

161 
	mUPROPS_ID_CONTINUE
,

162 
	mUPROPS_GRAPHEME_BASE
,

163 
	mUPROPS_S_TERM
,

164 
	mUPROPS_VARIATION_SELECTOR
,

165 
	mUPROPS_PATTERN_SYNTAX
,

166 
	mUPROPS_PATTERN_WHITE_SPACE
,

167 
	mUPROPS_RESERVED
,

168 
	mUPROPS_BINARY_1_TOP


181 
	#UPROPS_LB_MASK
 0x03f00000

	)

182 
	#UPROPS_LB_SHIFT
 20

	)

184 
	#UPROPS_SB_MASK
 0x000f8000

	)

185 
	#UPROPS_SB_SHIFT
 15

	)

187 
	#UPROPS_WB_MASK
 0x00007c00

	)

188 
	#UPROPS_WB_SHIFT
 10

	)

190 
	#UPROPS_GCB_MASK
 0x000003e0

	)

191 
	#UPROPS_GCB_SHIFT
 5

	)

193 
	#UPROPS_DT_MASK
 0x0000001f

	)

201 
U_CFUNC
 
uöt32_t


202 
u_gëUnicodePr›îtõs
(
UCh¨32
 
c
, 
öt32_t
 
cﬁumn
);

217 
U_CFUNC
 
öt32_t


218 
u¥v_gëMaxVÆues
(
öt32_t
 
cﬁumn
);

224 
U_CFUNC
 
UBoﬁ


225 
u_iß umPOSIX
(
UCh¨32
 
c
);

234 
U_CFUNC
 
UBoﬁ


235 
u_isgøphPOSIX
(
UCh¨32
 
c
);

242 
U_CFUNC
 
UBoﬁ


243 
u_i•rötPOSIX
(
UCh¨32
 
c
);

246 
	#FLAG
(
n
Ë((
uöt32_t
)1<<“))

	)

249 
	#_Cn
 
	`FLAG
(
U_GENERAL_OTHER_TYPES
)

	)

250 
	#_Lu
 
	`FLAG
(
U_UPPERCASE_LETTER
)

	)

251 
	#_Ll
 
	`FLAG
(
U_LOWERCASE_LETTER
)

	)

252 
	#_Lt
 
	`FLAG
(
U_TITLECASE_LETTER
)

	)

253 
	#_Lm
 
	`FLAG
(
U_MODIFIER_LETTER
)

	)

255 
	#_Mn
 
	`FLAG
(
U_NON_SPACING_MARK
)

	)

256 
	#_Me
 
	`FLAG
(
U_ENCLOSING_MARK
)

	)

257 
	#_Mc
 
	`FLAG
(
U_COMBINING_SPACING_MARK
)

	)

258 
	#_Nd
 
	`FLAG
(
U_DECIMAL_DIGIT_NUMBER
)

	)

259 
	#_Nl
 
	`FLAG
(
U_LETTER_NUMBER
)

	)

260 
	#_No
 
	`FLAG
(
U_OTHER_NUMBER
)

	)

261 
	#_Zs
 
	`FLAG
(
U_SPACE_SEPARATOR
)

	)

262 
	#_Zl
 
	`FLAG
(
U_LINE_SEPARATOR
)

	)

263 
	#_Zp
 
	`FLAG
(
U_PARAGRAPH_SEPARATOR
)

	)

264 
	#_Cc
 
	`FLAG
(
U_CONTROL_CHAR
)

	)

265 
	#_Cf
 
	`FLAG
(
U_FORMAT_CHAR
)

	)

266 
	#_Co
 
	`FLAG
(
U_PRIVATE_USE_CHAR
)

	)

267 
	#_Cs
 
	`FLAG
(
U_SURROGATE
)

	)

268 
	#_Pd
 
	`FLAG
(
U_DASH_PUNCTUATION
)

	)

269 
	#_Ps
 
	`FLAG
(
U_START_PUNCTUATION
)

	)

272 
	#_Po
 
	`FLAG
(
U_OTHER_PUNCTUATION
)

	)

273 
	#_Sm
 
	`FLAG
(
U_MATH_SYMBOL
)

	)

274 
	#_Sc
 
	`FLAG
(
U_CURRENCY_SYMBOL
)

	)

275 
	#_Sk
 
	`FLAG
(
U_MODIFIER_SYMBOL
)

	)

276 
	#_So
 
	`FLAG
(
U_OTHER_SYMBOL
)

	)

277 
	#_Pi
 
	`FLAG
(
U_INITIAL_PUNCTUATION
)

	)

282 
	mTAB
 =0x0009,

283 
	mLF
 =0x000a,

284 
	mFF
 =0x000c,

285 
	mCR
 =0x000d,

286 
	mU_A
 =0x0041,

287 
	mU_F
 =0x0046,

288 
	mU_Z
 =0x005a,

289 
	mU_a
 =0x0061,

290 
	mU_f
 =0x0066,

291 
	mU_z
 =0x007a,

292 
	mDEL
 =0x007f,

293 
	mNL
 =0x0085,

294 
	mNBSP
 =0x00a0,

295 
	mCGJ
 =0x034f,

296 
	mFIGURESP
=0x2007,

297 
	mHAIRSP
 =0x200a,

298 
	mZWNJ
 =0x200c,

299 
	mZWJ
 =0x200d,

300 
	mRLM
 =0x200f,

301 
	mNNBSP
 =0x202f,

302 
	mWJ
 =0x2060,

303 
	mINHSWAP
 =0x206a,

304 
	mNOMDIG
 =0x206f,

305 
	mU_FW_A
 =0xff21,

306 
	mU_FW_F
 =0xff26,

307 
	mU_FW_Z
 =0xff3a,

308 
	mU_FW_a
 =0xff41,

309 
	mU_FW_f
 =0xff46,

310 
	mU_FW_z
 =0xff5a,

311 
	mZWNBSP
 =0xfeff

318 
U_CAPI
 
öt32_t
 
U_EXPORT2


319 
u¥v_gëMaxCh¨NameLígth
();

327 
U_CAPI
 
U_EXPORT2


328 
u¥v_gëCh¨NameCh¨a˘îs
(c⁄° 
USëAddî
 *
ß
);

335 
	eUPr›îtySour˚
 {

337 
	mUPROPS_SRC_NONE
,

339 
	mUPROPS_SRC_CHAR
,

341 
	mUPROPS_SRC_PROPSVEC
,

343 
	mUPROPS_SRC_NAMES
,

345 
	mUPROPS_SRC_CASE
,

347 
	mUPROPS_SRC_BIDI
,

349 
	mUPROPS_SRC_CHAR_AND_PROPSVEC
,

351 
	mUPROPS_SRC_CASE_AND_NORM
,

353 
	mUPROPS_SRC_NFC
,

355 
	mUPROPS_SRC_NFKC
,

357 
	mUPROPS_SRC_NFKC_CF
,

359 
	mUPROPS_SRC_NFC_CANON_ITER
,

361 
	mUPROPS_SRC_COUNT


363 
UPr›îtySour˚
 
	tUPr›îtySour˚
;

369 
U_CFUNC
 
UPr›îtySour˚
 
U_EXPORT2


370 
u¥›s_gëSour˚
(
UPr›îty
 
which
);

377 
U_CFUNC
 
U_EXPORT2


378 
uch¨_addPr›îtySèπs
(c⁄° 
USëAddî
 *
ß
, 
UEº‹Code
 *
pEº‹Code
);

385 
U_CFUNC
 
U_EXPORT2


386 
u¥›svec_addPr›îtySèπs
(c⁄° 
USëAddî
 *
ß
, 
UEº‹Code
 *
pEº‹Code
);

404 
U_CAPI
 
öt32_t
 
U_EXPORT2


405 
u¥›s_sw≠
(c⁄° 
UD©aSw≠≥r
 *
ds
,

406 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

407 
UEº‹Code
 *
pEº‹Code
);

413 
U_CAPI
 
öt32_t
 
U_EXPORT2


414 
uch¨_sw≠Names
(c⁄° 
UD©aSw≠≥r
 *
ds
,

415 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

416 
UEº‹Code
 *
pEº‹Code
);

418 #ifde‡
XP_CPLUSPLUS


420 
U_NAMESPACE_BEGIN


422 
˛ass
 
	gUnicodeSë
;

425 
U_CFUNC
 
UnicodeSë
 *

426 
uni£t_gëUnicode32In°™˚
(
UEº‹Code
 &
îr‹Code
);

428 
	gU_NAMESPACE_END


	@ures_cnv.c

19 
	~"unicode/uty≥s.h
"

20 
	~"unicode/putû.h
"

21 
	~"unicode/u°rög.h
"

22 
	~"unicode/u˙v.h
"

23 
	~"unicode/uªs.h
"

24 
	~"uövch¨.h
"

25 
	~"u°r_˙v.h
"

27 
U_CAPI
 
UResour˚BundÀ
 * 
U_EXPORT2


28 
	$uªs_›íU
(c⁄° 
UCh¨
 *
myP©h
,

29 c⁄° *
loˇÀID
,

30 
UEº‹Code
 *
°©us
)

32 
∑thBuf„r
[1024];

33 
öt32_t
 
Àngth
;

34 *
∑th
 = 
∑thBuf„r
;

36 if(
°©us
==
NULL
 || 
	`U_FAILURE
(*status)) {

37  
NULL
;

39 if(
myP©h
==
NULL
) {

40 
∑th
 = 
NULL
;

43 
Àngth
=
	`u_°æí
(
myP©h
);

44 if(
Àngth
>=(
∑thBuf„r
)) {

45 *
°©us
=
U_ILLEGAL_ARGUMENT_ERROR
;

46  
NULL
;

47 } if(
	`u¥v_isInv¨ü¡USåög
(
myP©h
, 
Àngth
)) {

52 
	`u_UCh¨sToCh¨s
(
myP©h
, 
∑th
, 
Àngth
+1);

54 #i‡!
UCONFIG_NO_CONVERSION


56 
UC⁄vîãr
 *
˙v
=
	`u_gëDeÁu…C⁄vîãr
(
°©us
);

57 
Àngth
=
	`u˙v_‰omUCh¨s
(
˙v
, 
∑th
, (
öt32_t
)(
∑thBuf„r
), 
myP©h
,Üígth, 
°©us
);

58 
	`u_ªÀa£DeÁu…C⁄vîãr
(
˙v
);

59 if(
	`U_FAILURE
(*
°©us
)) {

60  
NULL
;

62 if(
Àngth
>=(
∑thBuf„r
)) {

64 *
°©us
=
U_ILLEGAL_ARGUMENT_ERROR
;

65  
NULL
;

69 *
°©us
=
U_UNSUPPORTED_ERROR
;

70  
NULL
;

75  
	`uªs_›í
(
∑th
, 
loˇÀID
, 
°©us
);

76 
	}
}

	@uresbund.c

22 
	~"unicode/u°rög.h
"

23 
	~"unicode/u˙v.h
"

24 
	~"uªsimp.h
"

25 
	~"u°r_imp.h
"

26 
	~"cwch¨.h
"

27 
	~"u˛n_cmn.h
"

28 
	~"cmem‹y.h
"

29 
	~"c°rög.h
"

30 
	~"uhash.h
"

31 
	~"unicode/uíum.h
"

32 
	~"uíumimp.h
"

33 
	~"ulocimp.h
"

34 
	~"umuãx.h
"

35 
	~"putûimp.h
"

43 
UHashèbÀ
 *
	gˇche
 = 
NULL
;

45 
UMTX
 
	gªsbMuãx
 = 
NULL
;

48 
öt32_t
 
U_CALLCONV
 
	$hashE¡ry
(c⁄° 
UHashTok
 
∑rm
) {

49 
UResour˚D©aE¡ry
 *
b
 = (UResour˚D©aE¡ry *)
∑rm
.
poöãr
;

50 
UHashTok
 
«mekey
, 
∑thkey
;

51 
«mekey
.
poöãr
 = 
b
->
fName
;

52 
∑thkey
.
poöãr
 = 
b
->
fP©h
;

53  
	`uhash_hashCh¨s
(
«mekey
)+37*uhash_hashCh¨s(
∑thkey
);

54 
	}
}

57 
UBoﬁ
 
U_CALLCONV
 
	$com∑ªE¡rõs
(c⁄° 
UHashTok
 
p1
, c⁄° UHashTok 
p2
) {

58 
UResour˚D©aE¡ry
 *
b1
 = (UResour˚D©aE¡ry *)
p1
.
poöãr
;

59 
UResour˚D©aE¡ry
 *
b2
 = (UResour˚D©aE¡ry *)
p2
.
poöãr
;

60 
UHashTok
 
«me1
, 
«me2
, 
∑th1
, 
∑th2
;

61 
«me1
.
poöãr
 = 
b1
->
fName
;

62 
«me2
.
poöãr
 = 
b2
->
fName
;

63 
∑th1
.
poöãr
 = 
b1
->
fP©h
;

64 
∑th2
.
poöãr
 = 
b2
->
fP©h
;

65  (
UBoﬁ
)(
	`uhash_com∑ªCh¨s
(
«me1
, 
«me2
) &&

66 
	`uhash_com∑ªCh¨s
(
∑th1
, 
∑th2
));

67 
	}
}

74 
UBoﬁ
 
	$ch›LoˇÀ
(*
«me
) {

75 *
i
 = 
	`u¥v_°ºchr
(
«me
, '_');

77 if(
i
 !
NULL
) {

78 *
i
 = '\0';

79  
TRUE
;

82  
FALSE
;

83 
	}
}

88 
	$íåyIn¸ó£
(
UResour˚D©aE¡ry
 *
íåy
) {

89 
	`umtx_lock
(&
ªsbMuãx
);

90 
íåy
->
fCou¡Exi°ög
++;

91 
íåy
->
fP¨ít
 !
NULL
) {

92 
íåy
 =É¡ry->
fP¨ít
;

93 
íåy
->
fCou¡Exi°ög
++;

95 
	`umtx_u∆ock
(&
ªsbMuãx
);

96 
	}
}

102 c⁄° 
Resour˚D©a
 *
	$gëFÆlbackD©a
(c⁄° 
UResour˚BundÀ
* 
ªsBundÀ
, c⁄° * * 
ªsTag
, 
UResour˚D©aE¡ry
* *
ªÆD©a
, 
Resour˚
 *
ªs
, 
UEº‹Code
 *
°©us
) {

103 
UResour˚D©aE¡ry
 *
ªsB
 = 
ªsBundÀ
->
fD©a
;

104 
öt32_t
 
ödexR
 = -1;

105 
öt32_t
 
i
 = 0;

106 *
ªs
 = 
RES_BOGUS
;

107 if(
ªsB
 !
NULL
) {

108 if(
ªsB
->
fBogus
 =
U_ZERO_ERROR
) {

109 *
ªs
 = 
	`ªs_gëTabÀIãmByKey
(&(
ªsB
->
fD©a
),ÑesB->fD©a.
roŸRes
, &
ödexR
, 
ªsTag
);

110 
i
++;

112 if(
ªsBundÀ
->
fHasFÆlback
 =
TRUE
) {

113 *
ªs
 =
RES_BOGUS
 && 
ªsB
->
fP¨ít
 !
NULL
) {

114 
ªsB
 =ÑesB->
fP¨ít
;

115 if(
ªsB
->
fBogus
 =
U_ZERO_ERROR
) {

116 
i
++;

117 *
ªs
 = 
	`ªs_gëTabÀIãmByKey
(&(
ªsB
->
fD©a
),ÑesB->fD©a.
roŸRes
, &
ödexR
, 
ªsTag
);

122 if(*
ªs
 !
RES_BOGUS
) {

123 if(
i
>1) {

124 if(
	`u¥v_°rcmp
(
ªsB
->
fName
, 
	`uloc_gëDeÁu…
())==0 || u¥v_°rcmp‘esB->fName, 
kRoŸLoˇÀName
)==0) {

125 *
°©us
 = 
U_USING_DEFAULT_WARNING
;

127 *
°©us
 = 
U_USING_FALLBACK_WARNING
;

130 *
ªÆD©a
 = 
ªsB
;

131  (&(
ªsB
->
fD©a
));

133 *
°©us
 = 
U_MISSING_RESOURCE_ERROR
;

134  
NULL
;

137 *
°©us
 = 
U_MISSING_RESOURCE_ERROR
;

138  
NULL
;

140 
	}
}

143 
	$‰ì_íåy
(
UResour˚D©aE¡ry
 *
íåy
) {

144 
UResour˚D©aE¡ry
 *
Æüs
;

145 
	`ªs_u∆ﬂd
(&(
íåy
->
fD©a
));

146 if(
íåy
->
fName
 !
NULL
 &&É¡ry->fNamê!íåy->
fNameBuf„r
) {

147 
	`u¥v_‰ì
(
íåy
->
fName
);

149 if(
íåy
->
fP©h
 !
NULL
) {

150 
	`u¥v_‰ì
(
íåy
->
fP©h
);

152 if(
íåy
->
fPoﬁ
 !
NULL
) {

153 --
íåy
->
fPoﬁ
->
fCou¡Exi°ög
;

155 
Æüs
 = 
íåy
->
fAlüs
;

156 if(
Æüs
 !
NULL
) {

157 
Æüs
->
fAlüs
 !
NULL
) {

158 
Æüs
 =álüs->
fAlüs
;

160 --
Æüs
->
fCou¡Exi°ög
;

162 
	`u¥v_‰ì
(
íåy
);

163 
	}
}

166 
öt32_t
 
	$uªs_ÊushCache
()

168 
UResour˚D©aE¡ry
 *
ªsB
;

169 
öt32_t
 
pos
;

170 
öt32_t
 
rbDñëedNum
 = 0;

171 c⁄° 
UHashEÀmít
 *
e
;

172 
UBoﬁ
 
dñëedM‹e
;

177 
	`umtx_lock
(&
ªsbMuãx
);

178 i‡(
ˇche
 =
NULL
) {

179 
	`umtx_u∆ock
(&
ªsbMuãx
);

184 
dñëedM‹e
 = 
FALSE
;

186 
pos
 = -1;

187 (
e
 = 
	`uhash_√xtEÀmít
(
ˇche
, &
pos
)Ë!
NULL
)

189 
ªsB
 = (
UResour˚D©aE¡ry
 *Ë
e
->
vÆue
.
poöãr
;

199 i‡(
ªsB
->
fCou¡Exi°ög
 == 0) {

200 
rbDñëedNum
++;

201 
dñëedM‹e
 = 
TRUE
;

202 
	`uhash_ªmoveEÀmít
(
ˇche
, 
e
);

203 
	`‰ì_íåy
(
ªsB
);

210 } 
dñëedM‹e
);

211 
	`umtx_u∆ock
(&
ªsbMuãx
);

213  
rbDñëedNum
;

214 
	}
}

216 #ifde‡
URES_DEBUG


217 
	~<°dio.h
>

219 
U_CAPI
 
UBoﬁ
 
U_EXPORT2
 
	$uªs_dumpCacheC⁄ã¡s
() {

220 
UBoﬁ
 
ˇcheNŸEm±y
 = 
FALSE
;

221 
öt32_t
 
pos
 = -1;

222 c⁄° 
UHashEÀmít
 *
e
;

223 
UResour˚D©aE¡ry
 *
ªsB
;

225 
	`umtx_lock
(&
ªsbMuãx
);

226 i‡(
ˇche
 =
NULL
) {

227 
	`umtx_u∆ock
(&
ªsbMuãx
);

228 
	`Ârötf
(
°dîr
,"%s:%d: RB Cachêi†NULL.\n", 
__FILE__
, 
__LINE__
);

229  
FALSE
;

232 (
e
 = 
	`uhash_√xtEÀmít
(
ˇche
, &
pos
)Ë!
NULL
) {

233 
ˇcheNŸEm±y
=
TRUE
;

234 
ªsB
 = (
UResour˚D©aE¡ry
 *Ë
e
->
vÆue
.
poöãr
;

235 
	`Ârötf
(
°dîr
,"%s:%d: RB Cache: Entry @0x%p,Ñefcount %d,Çame %s:%s. Pool 0x%p,álias 0x%p,Öarent 0x%p\n",

236 
__FILE__
, 
__LINE__
,

237 (*)
ªsB
,ÑesB->
fCou¡Exi°ög
,

238 
ªsB
->
fName
?resB->fName:"NULL",

239 
ªsB
->
fP©h
?resB->fPath:"NULL",

240 (*)
ªsB
->
fPoﬁ
,

241 (*)
ªsB
->
fAlüs
,

242 (*)
ªsB
->
fP¨ít
);

245 
	`Ârötf
(
°dîr
,"%s:%d: RB Cachê°û»c⁄èö†%d iãms.\n", 
__FILE__
, 
__LINE__
, 
	`uhash_cou¡
(
ˇche
));

247 
	`umtx_u∆ock
(&
ªsbMuãx
);

249  
ˇcheNŸEm±y
;

250 
	}
}

254 
UBoﬁ
 
U_CALLCONV
 
	$uªs_˛ónup
()

256 i‡(
ˇche
 !
NULL
) {

257 
	`uªs_ÊushCache
();

258 i‡(
ˇche
 !
NULL
 && 
	`uhash_cou¡
(cache) == 0) {

259 
	`uhash_˛o£
(
ˇche
);

260 
ˇche
 = 
NULL
;

263 i‡(
ˇche
 =
NULL
 && 
ªsbMuãx
 != NULL) {

264 
	`umtx_de°roy
(&
ªsbMuãx
);

266  (
ˇche
 =
NULL
);

267 
	}
}

270 
	$öôCache
(
UEº‹Code
 *
°©us
) {

271 
UBoﬁ
 
makeCache
 = 
FALSE
;

272 
	`UMTX_CHECK
(&
ªsbMuãx
, (
ˇche
 =
NULL
), 
makeCache
);

273 if(
makeCache
) {

274 
UHashèbÀ
 *
√wCache
 = 
	`uhash_›í
(
hashE¡ry
, 
com∑ªE¡rõs
, 
NULL
, 
°©us
);

275 i‡(
	`U_FAILURE
(*
°©us
)) {

278 
	`umtx_lock
(&
ªsbMuãx
);

279 if(
ˇche
 =
NULL
) {

280 
ˇche
 = 
√wCache
;

281 
√wCache
 = 
NULL
;

282 
	`u˛n_comm⁄_ªgi°îCÀ™up
(
UCLN_COMMON_URES
, 
uªs_˛ónup
);

284 
	`umtx_u∆ock
(&
ªsbMuãx
);

285 if(
√wCache
 !
NULL
) {

286 
	`uhash_˛o£
(
√wCache
);

289 
	}
}

293 
	$£tE¡ryName
(
UResour˚D©aE¡ry
 *
ªs
, *
«me
, 
UEº‹Code
 *
°©us
) {

294 
öt32_t
 
Àn
 = (öt32_t)
	`u¥v_°æí
(
«me
);

295 if(
ªs
->
fName
 !
NULL
 &&Ñes->fNamê!ªs->
fNameBuf„r
) {

296 
	`u¥v_‰ì
(
ªs
->
fName
);

298 i‡(
Àn
 < (
öt32_t
)(
ªs
->
fNameBuf„r
)) {

299 
ªs
->
fName
 =Ñes->
fNameBuf„r
;

302 
ªs
->
fName
 = (*)
	`u¥v_mÆloc
(
Àn
+1);

304 if(
ªs
->
fName
 =
NULL
) {

305 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

307 
	`u¥v_°r˝y
(
ªs
->
fName
, 
«me
);

309 
	}
}

311 
UResour˚D©aE¡ry
 *

312 
gëPoﬁE¡ry
(c⁄° *
∑th
, 
UEº‹Code
 *
°©us
);

318 
UResour˚D©aE¡ry
 *
	$öô_íåy
(c⁄° *
loˇÀID
, c⁄° *
∑th
, 
UEº‹Code
 *
°©us
) {

319 
UResour˚D©aE¡ry
 *
r
 = 
NULL
;

320 
UResour˚D©aE¡ry
 
föd
;

322 
«me
[96];

323 
ÆüsName
[100] = { 0 };

324 
öt32_t
 
ÆüsLí
 = 0;

326 
UHashTok
 
hashkey
;

328 if(
	`U_FAILURE
(*
°©us
)) {

329  
NULL
;

333 if(
loˇÀID
 =
NULL
) {

334 
	`u¥v_°r˝y
(
«me
, 
	`uloc_gëDeÁu…
());

335 } if(*
loˇÀID
 == 0) {

336 
	`u¥v_°r˝y
(
«me
, 
kRoŸLoˇÀName
);

338 
	`u¥v_°r˝y
(
«me
, 
loˇÀID
);

341 
föd
.
fName
 = 
«me
;

342 
föd
.
fP©h
 = (*)
∑th
;

345 
hashkey
.
poöãr
 = (*)&
föd
;

349 
r
 = (
UResour˚D©aE¡ry
 *)
	`uhash_gë
(
ˇche
, &
föd
);

350 if(
r
 =
NULL
) {

352 
r
 = (
UResour˚D©aE¡ry
 *Ë
	`u¥v_mÆloc
((UResourceDataEntry));

353 if(
r
 =
NULL
) {

354 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

355  
NULL
;

358 
	`u¥v_mem£t
(
r
, 0, (
UResour˚D©aE¡ry
));

361 
	`£tE¡ryName
(
r
, 
«me
, 
°©us
);

362 i‡(
	`U_FAILURE
(*
°©us
)) {

363 
	`u¥v_‰ì
(
r
);

364  
NULL
;

367 if(
∑th
 !
NULL
) {

368 
r
->
fP©h
 = (*)
	`u¥v_°rdup
(
∑th
);

369 if(
r
->
fP©h
 =
NULL
) {

370 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

371 
	`u¥v_‰ì
(
r
);

372  
NULL
;

377 
	`ªs_lﬂd
(&(
r
->
fD©a
),Ñ->
fP©h
,Ñ->
fName
, 
°©us
);

379 i‡(
	`U_FAILURE
(*
°©us
)) {

381 *
°©us
 = 
U_USING_FALLBACK_WARNING
;

382 
r
->
fBogus
 = 
U_USING_FALLBACK_WARNING
;

384 
Resour˚
 
Æü§es
;

385 i‡(
r
->
fD©a
.
u£sPoﬁBundÀ
) {

386 
r
->
fPoﬁ
 = 
	`gëPoﬁE¡ry
‘->
fP©h
, 
°©us
);

387 i‡(
	`U_SUCCESS
(*
°©us
)) {

388 c⁄° 
öt32_t
 *
poﬁIndexes
 = 
r
->
fPoﬁ
->
fD©a
.
pRoŸ
 + 1;

389 if(
r
->
fD©a
.
pRoŸ
[1 + 
URES_INDEX_POOL_CHECKSUM
] =
poﬁIndexes
[URES_INDEX_POOL_CHECKSUM]) {

390 
r
->
fD©a
.
poﬁBundÀKeys
 = (c⁄° *)(
poﬁIndexes
 + (poﬁIndexes[
URES_INDEX_LENGTH
] & 0xff));

392 
r
->
fBogus
 = *
°©us
 = 
U_INVALID_FORMAT_ERROR
;

395 
r
->
fBogus
 = *
°©us
;

398 i‡(
	`U_SUCCESS
(*
°©us
)) {

401 
Æü§es
 = 
	`ªs_gëResour˚
(&(
r
->
fD©a
), "%%ALIAS");

402 i‡(
Æü§es
 !
RES_BOGUS
) {

403 c⁄° 
UCh¨
 *
Æüs
 = 
	`ªs_gëSåög
(&(
r
->
fD©a
), 
Æü§es
, &
ÆüsLí
);

404 if(
Æüs
 !
NULL
 && 
ÆüsLí
 > 0) {

405 
	`u_UCh¨sToCh¨s
(
Æüs
, 
ÆüsName
, 
ÆüsLí
+1);

406 
r
->
fAlüs
 = 
	`öô_íåy
(
ÆüsName
, 
∑th
, 
°©us
);

413 
UResour˚D©aE¡ry
 *
ﬁdR
 = 
NULL
;

414 if((
ﬁdR
 = (
UResour˚D©aE¡ry
 *)
	`uhash_gë
(
ˇche
, 
r
)Ë=
NULL
) {

416 
UEº‹Code
 
ˇcheSètus
 = 
U_ZERO_ERROR
;

417 
	`uhash_put
(
ˇche
, (*)
r
,Ñ, &
ˇcheSètus
);

418 i‡(
	`U_FAILURE
(
ˇcheSètus
)) {

419 *
°©us
 = 
ˇcheSètus
;

420 
	`‰ì_íåy
(
r
);

421 
r
 = 
NULL
;

426 
	`‰ì_íåy
(
r
);

427 
r
 = 
ﬁdR
;

432 if(
r
 !
NULL
) {

434 
r
->
fAlüs
 !
NULL
) {

435 
r
 =Ñ->
fAlüs
;

437 
r
->
fCou¡Exi°ög
++;

440 if(
r
->
fBogus
 !
U_ZERO_ERROR
 && 
	`U_SUCCESS
(*
°©us
)) {

441 *
°©us
 = 
r
->
fBogus
;

444  
r
;

445 
	}
}

447 
UResour˚D©aE¡ry
 *

448 
	$gëPoﬁE¡ry
(c⁄° *
∑th
, 
UEº‹Code
 *
°©us
) {

449 
UResour˚D©aE¡ry
 *
poﬁBundÀ
 = 
	`öô_íåy
(
kPoﬁBundÀName
, 
∑th
, 
°©us
);

450 if–
	`U_SUCCESS
(*
°©us
) &&

451 (
poﬁBundÀ
 =
NULL
 ||ÖoﬁBundÀ->
fBogus
 !
U_ZERO_ERROR
 || !poﬁBundÀ->
fD©a
.
isPoﬁBundÀ
)

453 *
°©us
 = 
U_INVALID_FORMAT_ERROR
;

455  
poﬁBundÀ
;

456 
	}
}

460 
UResour˚D©aE¡ry
 *
	$födFú°Exi°ög
(c⁄° * 
∑th
, * 
«me
, 
UBoﬁ
 *
isRoŸ
, UBoﬁ *
hasCh›≥d
, UBoﬁ *
isDeÁu…
, 
UEº‹Code
* 
°©us
) {

461 
UResour˚D©aE¡ry
 *
r
 = 
NULL
;

462 
UBoﬁ
 
hasRólD©a
 = 
FALSE
;

463 c⁄° *
deÁu…Loc
 = 
	`uloc_gëDeÁu…
();

464 *
hasCh›≥d
 = 
TRUE
;

466 *
hasCh›≥d
 && !
hasRólD©a
) {

467 
r
 = 
	`öô_íåy
(
«me
, 
∑th
, 
°©us
);

469 i‡(
	`U_FAILURE
(*
°©us
)) {

470  
NULL
;

472 *
isDeÁu…
 = (
UBoﬁ
)(
	`u¥v_°∫cmp
(
«me
, 
deÁu…Loc
, 
	`u¥v_°æí
(name)) == 0);

473 
hasRólD©a
 = (
UBoﬁ
)(
r
->
fBogus
 =
U_ZERO_ERROR
);

474 if(!
hasRólD©a
) {

480 
r
->
fCou¡Exi°ög
--;

482 
r
 = 
NULL
;

483 *
°©us
 = 
U_USING_FALLBACK_WARNING
;

485 
	`u¥v_°r˝y
(
«me
, 
r
->
fName
);

488 *
isRoŸ
 = (
UBoﬁ
)(
	`u¥v_°rcmp
(
«me
, 
kRoŸLoˇÀName
) == 0);

491 *
hasCh›≥d
 = 
	`ch›LoˇÀ
(
«me
);

493  
r
;

494 
	}
}

496 
	$uªs_£tIsSèckObje˘
–
UResour˚BundÀ
* 
ªsB
, 
UBoﬁ
 
°©e
) {

497 if(
°©e
) {

498 
ªsB
->
fMagic1
 = 0;

499 
ªsB
->
fMagic2
 = 0;

501 
ªsB
->
fMagic1
 = 
MAGIC1
;

502 
ªsB
->
fMagic2
 = 
MAGIC2
;

504 
	}
}

506 
UBoﬁ
 
	$uªs_isSèckObje˘
(c⁄° 
UResour˚BundÀ
* 
ªsB
) {

507 ((
ªsB
->
fMagic1
 =
MAGIC1
 &&ÑesB->
fMagic2
 =
MAGIC2
)?
FALSE
:
TRUE
);

508 
	}
}

511 
U_CFUNC
 
	$uªs_öôSèckObje˘
(
UResour˚BundÀ
* 
ªsB
) {

512 
	`u¥v_mem£t
(
ªsB
, 0, (
UResour˚BundÀ
));

513 
	`uªs_£tIsSèckObje˘
(
ªsB
, 
TRUE
);

514 
	}
}

516 
UResour˚D©aE¡ry
 *
	$íåyO≥n
(c⁄° * 
∑th
, c⁄° * 
loˇÀID
, 
UEº‹Code
* 
°©us
) {

517 
UEº‹Code
 
ötSètus
 = 
U_ZERO_ERROR
;

518 
UEº‹Code
 
∑ª¡Sètus
 = 
U_ZERO_ERROR
;

519 
UEº‹Code
 
u§Sètus
 = 
U_ZERO_ERROR
;

520 
UResour˚D©aE¡ry
 *
r
 = 
NULL
;

521 
UResour˚D©aE¡ry
 *
t1
 = 
NULL
;

522 
UResour˚D©aE¡ry
 *
t2
 = 
NULL
;

523 
UResour˚D©aE¡ry
 *
u1
 = 
NULL
;

524 
UResour˚D©aE¡ry
 *
u2
 = 
NULL
;

525 
UBoﬁ
 
isDeÁu…
 = 
FALSE
;

526 
UBoﬁ
 
isRoŸ
 = 
FALSE
;

527 
UBoﬁ
 
hasRólD©a
 = 
FALSE
;

528 
UBoﬁ
 
hasCh›≥d
 = 
TRUE
;

529 
UBoﬁ
 
usögUSRD©a
 = 
U_USE_USRDATA
 && ( 
∑th
 =
NULL
 || 
	`u¥v_°∫cmp
’©h,
U_ICUDATA_NAME
,8) == 0);

531 
«me
[96];

532 
u§D©aP©h
[96];

534 
	`öôCache
(
°©us
);

536 if(
	`U_FAILURE
(*
°©us
)) {

537  
NULL
;

540 
	`u¥v_°r˝y
(
«me
, 
loˇÀID
);

542 i‡–
usögUSRD©a
 ) {

543 i‡–
∑th
 =
NULL
 ) {

544 
	`u¥v_°r˝y
(
u§D©aP©h
,
U_USRDATA_NAME
);

546 
	`u¥v_°r˝y
(
u§D©aP©h
,
∑th
);

547 
u§D©aP©h
[0] = 'u';

548 
u§D©aP©h
[1] = 's';

549 
u§D©aP©h
[2] = 'r';

553 
	`umtx_lock
(&
ªsbMuãx
);

556 
r
 = 
	`födFú°Exi°ög
(
∑th
, 
«me
, &
isRoŸ
, &
hasCh›≥d
, &
isDeÁu…
, &
ötSètus
);

558 if(
r
 !
NULL
) {

559 
t1
 = 
r
;

560 
hasRólD©a
 = 
TRUE
;

561 i‡–
usögUSRD©a
 ) {

562 
u1
 = 
	`öô_íåy
(
t1
->
fName
, 
u§D©aP©h
, &
u§Sètus
);

563 i‡–
u1
 !
NULL
 ) {

564 if(
u1
->
fBogus
 =
U_ZERO_ERROR
) {

565 
u1
->
fP¨ít
 = 
t1
;

566 
r
 = 
u1
;

569 
u1
->
fCou¡Exi°ög
 = 0;

573 
hasCh›≥d
 && !
isRoŸ
 && 
t1
->
fP¨ít
 =
NULL
 && !t1->
fD©a
.
noFÆlback
) {

575 
t2
 = 
	`öô_íåy
(
«me
, 
t1
->
fP©h
, &
∑ª¡Sètus
);

576 i‡–
usögUSRD©a
 ) {

577 
u§Sètus
 = 
U_ZERO_ERROR
;

578 
u2
 = 
	`öô_íåy
(
«me
, 
u§D©aP©h
, &
u§Sètus
);

581 i‡(
t2
 =
NULL
 || ( 
usögUSRD©a
 && 
u2
 == NULL)) {

582 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

583 
föishU∆ock
;

586 i‡–
	`ªs_gëResour˚
(&
t1
->
fD©a
,"%%P¨ítIsRoŸ"Ë=
RES_BOGUS
) {

587 i‡–
usögUSRD©a
 && 
u2
->
fBogus
 =
U_ZERO_ERROR
 ) {

588 
t1
->
fP¨ít
 = 
u2
;

589 
u2
->
fP¨ít
 = 
t2
;

591 
t1
->
fP¨ít
 = 
t2
;

592 if(
usögUSRD©a
) {

594 
u2
->
fCou¡Exi°ög
 = 0;

597 
t1
 = 
t2
;

599 i‡(
usögUSRD©a
) {

601 
u2
->
fCou¡Exi°ög
 = 0;

606 
t2
->
fCou¡Exi°ög
--;

608 
hasCh›≥d
 = 
	`ch›LoˇÀ
(
«me
);

614 if(
r
==
NULL
 && !
isDeÁu…
 && !
isRoŸ
 ) {

616 
	`u¥v_°r˝y
(
«me
, 
	`uloc_gëDeÁu…
());

617 
r
 = 
	`födFú°Exi°ög
(
∑th
, 
«me
, &
isRoŸ
, &
hasCh›≥d
, &
isDeÁu…
, &
ötSètus
);

618 
ötSètus
 = 
U_USING_DEFAULT_WARNING
;

619 if(
r
 !
NULL
) {

620 
t1
 = 
r
;

621 
hasRólD©a
 = 
TRUE
;

622 
isDeÁu…
 = 
TRUE
;

623 
hasCh›≥d
 && 
t1
->
fP¨ít
 =
NULL
) {

625 
t2
 = 
	`öô_íåy
(
«me
, 
t1
->
fP©h
, &
∑ª¡Sètus
);

627 i‡(
t2
 =
NULL
) {

628 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

629 
föishU∆ock
;

632 i‡–
	`ªs_gëResour˚
(&
t1
->
fD©a
,"%%P¨ítIsRoŸ"Ë=
RES_BOGUS
) {

633 
t1
->
fP¨ít
 = 
t2
;

634 
t1
 = 
t2
;

636 
hasCh›≥d
 = 
	`ch›LoˇÀ
(
«me
);

643 if(
r
 =
NULL
) {

644 
	`u¥v_°r˝y
(
«me
, 
kRoŸLoˇÀName
);

645 
r
 = 
	`födFú°Exi°ög
(
∑th
, 
«me
, &
isRoŸ
, &
hasCh›≥d
, &
isDeÁu…
, &
ötSètus
);

646 if(
r
 !
NULL
) {

647 
t1
 = 
r
;

648 
ötSètus
 = 
U_USING_DEFAULT_WARNING
;

649 
hasRólD©a
 = 
TRUE
;

651 *
°©us
 = 
U_MISSING_RESOURCE_ERROR
;

652 
föishU∆ock
;

654 } if(!
isRoŸ
 && 
	`u¥v_°rcmp
(
t1
->
fName
, 
kRoŸLoˇÀName
Ë!0 &&Å1->
fP¨ít
 =
NULL
 && !
r
->
fD©a
.
noFÆlback
) {

656 
t2
 = 
	`öô_íåy
(
kRoŸLoˇÀName
, 
t1
->
fP©h
, &
∑ª¡Sètus
);

658 i‡(
t2
 =
NULL
) {

659 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

660 
föishU∆ock
;

662 if(!
hasRólD©a
) {

663 
r
->
fBogus
 = 
U_USING_DEFAULT_WARNING
;

665 
hasRólD©a
 = (
UBoﬁ
)((
t2
->
fBogus
 =
U_ZERO_ERROR
) || hasRealData);

666 
t1
->
fP¨ít
 = 
t2
;

667 
t1
 = 
t2
;

670 
r
 !
NULL
 && !
isRoŸ
 && 
t1
->
fP¨ít
 != NULL) {

671 
t1
->
fP¨ít
->
fCou¡Exi°ög
++;

672 
t1
 =Å1->
fP¨ít
;

673 
hasRólD©a
 = (
UBoﬁ
)((
t1
->
fBogus
 =
U_ZERO_ERROR
) || hasRealData);

676 
föishU∆ock
:

677 
	`umtx_u∆ock
(&
ªsbMuãx
);

679 if(
	`U_SUCCESS
(*
°©us
)) {

680 if(
	`U_SUCCESS
(
∑ª¡Sètus
)) {

681 if(
ötSètus
 !
U_ZERO_ERROR
) {

682 *
°©us
 = 
ötSètus
;

684  
r
;

686 *
°©us
 = 
∑ª¡Sètus
;

687  
NULL
;

690  
NULL
;

692 
	}
}

700 
	$íåyClo£I¡
(
UResour˚D©aE¡ry
 *
ªsB
) {

701 
UResour˚D©aE¡ry
 *
p
 = 
ªsB
;

703 
ªsB
 !
NULL
) {

704 
p
 = 
ªsB
->
fP¨ít
;

705 
ªsB
->
fCou¡Exi°ög
--;

725 
ªsB
 = 
p
;

727 
	}
}

733 
	$íåyClo£
(
UResour˚D©aE¡ry
 *
ªsB
) {

734 
	`umtx_lock
(&
ªsbMuãx
);

735 
	`íåyClo£I¡
(
ªsB
);

736 
	`umtx_u∆ock
(&
ªsbMuãx
);

737 
	}
}

756 
	$uªs_≠≥ndResP©h
(
UResour˚BundÀ
 *
ªsB
, c⁄° * 
toAdd
, 
öt32_t
 
ÀnToAdd
, 
UEº‹Code
 *
°©us
) {

757 
öt32_t
 
ªsP©hLíOrig
 = 
ªsB
->
fResP©hLí
;

758 if(
ªsB
->
fResP©h
 =
NULL
) {

759 
ªsB
->
fResP©h
 =ÑesB->
fResBuf
;

760 *(
ªsB
->
fResP©h
) = 0;

761 
ªsB
->
fResP©hLí
 = 0;

763 
ªsB
->
fResP©hLí
 +
ÀnToAdd
;

764 if(
RES_BUFSIZE
 <
ªsB
->
fResP©hLí
+1) {

765 if(
ªsB
->
fResP©h
 =ªsB->
fResBuf
) {

766 
ªsB
->
fResP©h
 = (*)
	`u¥v_mÆloc
(‘esB->
fResP©hLí
+1)*());

768 i‡(
ªsB
->
fResP©h
 =
NULL
) {

769 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

772 
	`u¥v_°r˝y
(
ªsB
->
fResP©h
,ÑesB->
fResBuf
);

774 *
ãmp
 = (*)
	`u¥v_ªÆloc
(
ªsB
->
fResP©h
, (ªsB->
fResP©hLí
+1)*());

776 i‡(
ãmp
 =
NULL
) {

777 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

780 
ªsB
->
fResP©h
 = 
ãmp
;

783 
	`u¥v_°r˝y
(
ªsB
->
fResP©h
 + 
ªsP©hLíOrig
, 
toAdd
);

784 
	}
}

786 
	$uªs_‰ìResP©h
(
UResour˚BundÀ
 *
ªsB
) {

787 i‡(
ªsB
->
fResP©h
 &&ÑesB->fResP©h !ªsB->
fResBuf
) {

788 
	`u¥v_‰ì
(
ªsB
->
fResP©h
);

790 
ªsB
->
fResP©h
 = 
NULL
;

791 
ªsB
->
fResP©hLí
 = 0;

792 
	}
}

795 
	$uªs_˛o£BundÀ
(
UResour˚BundÀ
* 
ªsB
, 
UBoﬁ
 
‰ìBundÀObj
)

797 if(
ªsB
 !
NULL
) {

798 if(
ªsB
->
fD©a
 !
NULL
) {

799 
	`íåyClo£
(
ªsB
->
fD©a
);

801 if(
ªsB
->
fVîsi⁄
 !
NULL
) {

802 
	`u¥v_‰ì
(
ªsB
->
fVîsi⁄
);

804 
	`uªs_‰ìResP©h
(
ªsB
);

806 if(
	`uªs_isSèckObje˘
(
ªsB
Ë=
FALSE
 && 
‰ìBundÀObj
) {

807 
	`u¥v_‰ì
(
ªsB
);

812 
	`u¥v_mem£t
(
ªsB
, -1, (
UResour˚BundÀ
));

816 
	}
}

818 
U_CAPI
 
U_EXPORT2


819 
	$uªs_˛o£
(
UResour˚BundÀ
* 
ªsB
)

821 
	`uªs_˛o£BundÀ
(
ªsB
, 
TRUE
);

822 
	}
}

824 
UResour˚BundÀ
 *
	$öô_ªsb_ªsu…
(c⁄° 
Resour˚D©a
 *
rd©a
, 
Resour˚
 
r
,

825 c⁄° *
key
, 
öt32_t
 
idx
, 
UResour˚D©aE¡ry
 *
ªÆD©a
,

826 c⁄° 
UResour˚BundÀ
 *
∑ª¡
, 
öt32_t
 
noAlüs
,

827 
UResour˚BundÀ
 *
ªsB
, 
UEº‹Code
 *
°©us
)

829 if(
°©us
 =
NULL
 || 
	`U_FAILURE
(*status)) {

830  
ªsB
;

832 i‡(
∑ª¡
 =
NULL
) {

833 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

834  
NULL
;

836 if(
	`RES_GET_TYPE
(
r
Ë=
URES_ALIAS
) {

837 if(
noAlüs
 < 
URES_MAX_ALIAS_LEVEL
) {

838 
öt32_t
 
Àn
 = 0;

839 c⁄° 
UCh¨
 *
Æüs
 = 
	`ªs_gëAlüs
(
rd©a
, 
r
, &
Àn
);

840 if(
Àn
 > 0) {

842 
°ackAlüs
[200];

843 *
chAlüs
 = 
NULL
, *
∑th
 = NULL, *
loˇÀ
 = NULL, *
keyP©h
 = NULL;

844 
öt32_t
 
ˇ∑côy
;

859 ++
Àn
;

860 if(
∑ª¡
->
fResP©h
 !
NULL
) {

861 
ˇ∑côy
 = (
öt32_t
)
	`u¥v_°æí
(
∑ª¡
->
fResP©h
) + 1;

863 
ˇ∑côy
 = 0;

865 if(
ˇ∑côy
 < 
Àn
) {

866 
ˇ∑côy
 = 
Àn
;

868 if(
ˇ∑côy
 <(
°ackAlüs
)) {

869 
ˇ∑côy
 = (
°ackAlüs
);

870 
chAlüs
 = 
°ackAlüs
;

872 
chAlüs
 = (*)
	`u¥v_mÆloc
(
ˇ∑côy
);

874 if(
chAlüs
 =
NULL
) {

875 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

876  
NULL
;

879 
	`u_UCh¨sToCh¨s
(
Æüs
, 
chAlüs
, 
Àn
);

881 if(*
chAlüs
 =
RES_PATH_SEPARATOR
) {

883 
loˇÀ
 = 
	`u¥v_°rchr
(
chAlüs
+1, 
RES_PATH_SEPARATOR
);

884 if(
loˇÀ
 =
NULL
) {

885 
loˇÀ
 = 
	`u¥v_°rchr
(
chAlüs
, 0);

887 *
loˇÀ
 = 0;

888 
loˇÀ
++;

890 
∑th
 = 
chAlüs
+1;

891 if(
	`u¥v_°rcmp
(
∑th
, "LOCALE") == 0) {

895 
keyP©h
 = 
loˇÀ
;

896 
loˇÀ
 = 
∑ª¡
->
fT›LevñD©a
->
fName
;

897 
∑th
 = 
ªÆD©a
->
fP©h
;

899 if(
	`u¥v_°rcmp
(
∑th
, "ICUDATA") == 0) {

900 
∑th
 = 
NULL
;

902 
keyP©h
 = 
	`u¥v_°rchr
(
loˇÀ
, 
RES_PATH_SEPARATOR
);

903 if(
keyP©h
) {

904 *
keyP©h
 = 0;

905 
keyP©h
++;

910 
loˇÀ
 = 
chAlüs
;

911 
keyP©h
 = 
	`u¥v_°rchr
(
loˇÀ
, 
RES_PATH_SEPARATOR
);

912 if(
keyP©h
) {

913 *
keyP©h
 = 0;

914 
keyP©h
++;

916 
∑th
 = 
ªÆD©a
->
fP©h
;

923 
UResour˚BundÀ
 *
ªsu…
 = 
ªsB
;

924 c⁄° * 
ãmp
 = 
NULL
;

925 
UEº‹Code
 
ötSètus
 = 
U_ZERO_ERROR
;

926 
UResour˚BundÀ
 *
maöRes
 = 
	`uªs_›íDúe˘
(
∑th
, 
loˇÀ
, &
ötSètus
);

927 if(
	`U_SUCCESS
(
ötSètus
)) {

928 if(
keyP©h
 =
NULL
) {

936 *
aKey
 = 
∑ª¡
->
fResP©h
;

937 if(
aKey
) {

938 
	`u¥v_°r˝y
(
chAlüs
, 
aKey
);

939 
aKey
 = 
chAlüs
;

940 
r
 = 
	`ªs_födResour˚
(&(
maöRes
->
fResD©a
), maöRes->
fRes
, &
aKey
, &
ãmp
);

942 
r
 = 
maöRes
->
fRes
;

944 if(
key
) {

948 
Àn
 = (
öt32_t
)(
	`u¥v_°æí
(
key
) + 1);

949 if(
Àn
 > 
ˇ∑côy
) {

950 
ˇ∑côy
 = 
Àn
;

951 if(
chAlüs
 =
°ackAlüs
) {

952 
chAlüs
 = (*)
	`u¥v_mÆloc
(
ˇ∑côy
);

954 
chAlüs
 = (*)
	`u¥v_ªÆloc
(chAlüs, 
ˇ∑côy
);

956 if(
chAlüs
 =
NULL
) {

957 
	`uªs_˛o£
(
maöRes
);

958 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

959  
NULL
;

962 
	`u¥v_mem˝y
(
chAlüs
, 
key
, 
Àn
);

963 
aKey
 = 
chAlüs
;

964 
r
 = 
	`ªs_födResour˚
(&(
maöRes
->
fResD©a
),Ñ, &
aKey
, &
ãmp
);

965 } if(
idx
 != -1) {

968 
UResTy≥
 
ty≥
 = 
	`RES_GET_TYPE
(
r
);

969 if(
	`URES_IS_TABLE
(
ty≥
)) {

970 
r
 = 
	`ªs_gëTabÀIãmByIndex
(&(
maöRes
->
fResD©a
),Ñ, 
idx
, (c⁄° **)&
aKey
);

972 
r
 = 
	`ªs_gëAºayIãm
(&(
maöRes
->
fResD©a
),Ñ, 
idx
);

975 if(
r
 !
RES_BOGUS
) {

976 
ªsu…
 = 
	`öô_ªsb_ªsu…
(&(
maöRes
->
fResD©a
), 
r
, 
ãmp
, -1, maöRes->
fD©a
, maöRes, 
noAlüs
+1, 
ªsB
, 
°©us
);

978 *
°©us
 = 
U_MISSING_RESOURCE_ERROR
;

979 
ªsu…
 = 
ªsB
;

989 
UResour˚D©aE¡ry
 *
d©aE¡ry
 = 
maöRes
->
fD©a
;

990 
°ackP©h
[
URES_MAX_BUFFER_SIZE
];

991 *
∑thBuf
 = 
°ackP©h
, *
myP©h
 =ÖathBuf;

992 if(
	`u¥v_°æí
(
keyP©h
Ë> 
URES_MAX_BUFFER_SIZE
) {

993 
∑thBuf
 = (*)
	`u¥v_mÆloc
((
	`u¥v_°æí
(
keyP©h
)+1)*());

994 if(
∑thBuf
 =
NULL
) {

995 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

996  
NULL
;

999 
	`u¥v_°r˝y
(
∑thBuf
, 
keyP©h
);

1000 
ªsu…
 = 
maöRes
;

1003 
r
 = 
d©aE¡ry
->
fD©a
.
roŸRes
;

1005 *
myP©h
 && 
	`U_SUCCESS
(*
°©us
)) {

1006 
r
 = 
	`ªs_födResour˚
(&(
d©aE¡ry
->
fD©a
),Ñ, &
myP©h
, &
ãmp
);

1007 if(
r
 !
RES_BOGUS
) {

1008 
ªsB
 = 
	`öô_ªsb_ªsu…
(&(
d©aE¡ry
->
fD©a
), 
r
, 
ãmp
, -1, d©aE¡ry, 
ªsu…
, 
noAlüs
+1,ÑesB, 
°©us
);

1009 
ªsu…
 = 
ªsB
;

1010 if(
ªsu…
) {

1011 
r
 = 
ªsu…
->
fRes
;

1012 
d©aE¡ry
 = 
ªsu…
->
fD©a
;

1018 
d©aE¡ry
 = d©aE¡ry->
fP¨ít
;

1019 
	`u¥v_°r˝y
(
∑thBuf
, 
keyP©h
);

1020 
myP©h
 = 
∑thBuf
;

1021 } 
r
 =
RES_BOGUS
 && 
d©aE¡ry
 !
NULL
);

1022 if(
r
 =
RES_BOGUS
) {

1023 *
°©us
 = 
U_MISSING_RESOURCE_ERROR
;

1024 
ªsu…
 = 
ªsB
;

1026 if(
∑thBuf
 !
°ackP©h
) {

1027 
	`u¥v_‰ì
(
∑thBuf
);

1031 *
°©us
 = 
ötSètus
;

1033 if(
chAlüs
 !
°ackAlüs
) {

1034 
	`u¥v_‰ì
(
chAlüs
);

1036 if(
maöRes
 !
ªsu…
) {

1037 
	`uªs_˛o£
(
maöRes
);

1039  
ªsu…
;

1043 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1044  
ªsB
;

1047 *
°©us
 = 
U_TOO_MANY_ALIASES_ERROR
;

1048  
ªsB
;

1051 if(
ªsB
 =
NULL
) {

1052 
ªsB
 = (
UResour˚BundÀ
 *)
	`u¥v_mÆloc
((UResourceBundle));

1054 i‡(
ªsB
 =
NULL
) {

1055 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

1056  
NULL
;

1058 
	`uªs_£tIsSèckObje˘
(
ªsB
, 
FALSE
);

1059 
ªsB
->
fResP©h
 = 
NULL
;

1060 
ªsB
->
fResP©hLí
 = 0;

1062 if(
ªsB
->
fD©a
 !
NULL
) {

1063 
	`íåyClo£
(
ªsB
->
fD©a
);

1065 if(
ªsB
->
fVîsi⁄
 !
NULL
) {

1066 
	`u¥v_‰ì
(
ªsB
->
fVîsi⁄
);

1079 if(
∑ª¡
 !
ªsB
) {

1080 
	`uªs_‰ìResP©h
(
ªsB
);

1083 
ªsB
->
fD©a
 = 
ªÆD©a
;

1084 
	`íåyIn¸ó£
(
ªsB
->
fD©a
);

1085 
ªsB
->
fHasFÆlback
 = 
FALSE
;

1086 
ªsB
->
fIsT›Levñ
 = 
FALSE
;

1087 
ªsB
->
fIndex
 = -1;

1088 
ªsB
->
fKey
 = 
key
;

1090 
ªsB
->
fT›LevñD©a
 = 
∑ª¡
->fTopLevelData;

1091 if(
∑ª¡
->
fResP©h
 &&Ö¨íà!
ªsB
) {

1092 
	`uªs_≠≥ndResP©h
(
ªsB
, 
∑ª¡
->
fResP©h
,Ö¨ít->
fResP©hLí
, 
°©us
);

1094 if(
key
 !
NULL
) {

1095 
	`uªs_≠≥ndResP©h
(
ªsB
, 
key
, (
öt32_t
)
	`u¥v_°æí
(key), 
°©us
);

1096 if(
ªsB
->
fResP©h
[ªsB->
fResP©hLí
-1] !
RES_PATH_SEPARATOR
) {

1097 
	`uªs_≠≥ndResP©h
(
ªsB
, 
RES_PATH_SEPARATOR_S
, 1, 
°©us
);

1099 } if(
idx
 >= 0) {

1100 
buf
[256];

1101 
öt32_t
 
Àn
 = 
	`T_CSåög_öãgîToSåög
(
buf
, 
idx
, 10);

1102 
	`uªs_≠≥ndResP©h
(
ªsB
, 
buf
, 
Àn
, 
°©us
);

1103 if(
ªsB
->
fResP©h
[ªsB->
fResP©hLí
-1] !
RES_PATH_SEPARATOR
) {

1104 
	`uªs_≠≥ndResP©h
(
ªsB
, 
RES_PATH_SEPARATOR_S
, 1, 
°©us
);

1109 
öt32_t
 
u£dLí
 = ((
ªsB
->
fResBuf
 =ªsB->
fResP©h
Ë?ÑesB->
fResP©hLí
 : 0);

1110 
	`u¥v_mem£t
(
ªsB
->
fResBuf
 + 
u£dLí
, 0, (resB->fResBuf) - usedLen);

1113 
ªsB
->
fVîsi⁄
 = 
NULL
;

1114 
ªsB
->
fRes
 = 
r
;

1116 
	`u¥v_memmove
(&
ªsB
->
fResD©a
, 
rd©a
, (
Resour˚D©a
));

1117 
ªsB
->
fSize
 = 
	`ªs_cou¡AºayIãms
(&‘esB->
fResD©a
),ÑesB->
fRes
);

1118  
ªsB
;

1119 
	}
}

1121 
UResour˚BundÀ
 *
	$uªs_c›yResb
(
UResour˚BundÀ
 *
r
, c⁄° UResour˚BundÀ *
‹igöÆ
, 
UEº‹Code
 *
°©us
) {

1122 
UBoﬁ
 
isSèckObje˘
;

1123 if(
	`U_FAILURE
(*
°©us
Ë|| 
r
 =
‹igöÆ
) {

1124  
r
;

1126 if(
‹igöÆ
 !
NULL
) {

1127 if(
r
 =
NULL
) {

1128 
isSèckObje˘
 = 
FALSE
;

1129 
r
 = (
UResour˚BundÀ
 *)
	`u¥v_mÆloc
((UResourceBundle));

1131 i‡(
r
 =
NULL
) {

1132 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

1133  
NULL
;

1136 
isSèckObje˘
 = 
	`uªs_isSèckObje˘
(
r
);

1137 
	`uªs_˛o£BundÀ
(
r
, 
FALSE
);

1139 
	`u¥v_mem˝y
(
r
, 
‹igöÆ
, (
UResour˚BundÀ
));

1140 
r
->
fResP©h
 = 
NULL
;

1141 
r
->
fResP©hLí
 = 0;

1142 if(
‹igöÆ
->
fResP©h
) {

1143 
	`uªs_≠≥ndResP©h
(
r
, 
‹igöÆ
->
fResP©h
, origöÆ->
fResP©hLí
, 
°©us
);

1145 
	`uªs_£tIsSèckObje˘
(
r
, 
isSèckObje˘
);

1146 if(
r
->
fD©a
 !
NULL
) {

1147 
	`íåyIn¸ó£
(
r
->
fD©a
);

1150  
r
;

1151 
	}
}

1157 
U_CAPI
 c⁄° 
UCh¨
* 
U_EXPORT2
 
	$uªs_gëSåög
(c⁄° 
UResour˚BundÀ
* 
ªsB
, 
öt32_t
* 
Àn
, 
UEº‹Code
* 
°©us
) {

1158 c⁄° 
UCh¨
 *
s
;

1159 i‡(
°©us
==
NULL
 || 
	`U_FAILURE
(*status)) {

1160  
NULL
;

1162 if(
ªsB
 =
NULL
) {

1163 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1164  
NULL
;

1166 
s
 = 
	`ªs_gëSåög
(&(
ªsB
->
fResD©a
),ÑesB->
fRes
, 
Àn
);

1167 i‡(
s
 =
NULL
) {

1168 *
°©us
 = 
U_RESOURCE_TYPE_MISMATCH
;

1170  
s
;

1171 
	}
}

1174 
	$uªs_toUTF8Såög
(c⁄° 
UCh¨
 *
s16
, 
öt32_t
 
Àngth16
,

1175 *
de°
, 
öt32_t
 *
pLígth
,

1176 
UBoﬁ
 
f‹˚C›y
,

1177 
UEº‹Code
 *
°©us
) {

1178 
öt32_t
 
ˇ∑côy
;

1180 i‡(
	`U_FAILURE
(*
°©us
)) {

1181  
NULL
;

1183 i‡(
pLígth
 !
NULL
) {

1184 
ˇ∑côy
 = *
pLígth
;

1186 
ˇ∑côy
 = 0;

1188 i‡(
ˇ∑côy
 < 0 || (ˇ∑côy > 0 && 
de°
 =
NULL
)) {

1189 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1190  
NULL
;

1193 i‡(
Àngth16
 == 0) {

1195 i‡(
pLígth
 !
NULL
) {

1196 *
pLígth
 = 0;

1198 i‡(
f‹˚C›y
) {

1199 
	`u_ãrmö©eCh¨s
(
de°
, 
ˇ∑côy
, 0, 
°©us
);

1200  
de°
;

1206 i‡(
ˇ∑côy
 < 
Àngth16
) {

1208  
	`u_°rToUTF8
(
NULL
, 0, 
pLígth
, 
s16
, 
Àngth16
, 
°©us
);

1210 i‡(!
f‹˚C›y
 && (
Àngth16
 <= 0x2aaaaaaa)) {

1225 
öt32_t
 
maxLígth
 = 3 * 
Àngth16
 + 1;

1226 i‡(
ˇ∑côy
 > 
maxLígth
) {

1227 
de°
 +
ˇ∑côy
 - 
maxLígth
;

1228 
ˇ∑côy
 = 
maxLígth
;

1231  
	`u_°rToUTF8
(
de°
, 
ˇ∑côy
, 
pLígth
, 
s16
, 
Àngth16
, 
°©us
);

1233 
	}
}

1235 
U_CAPI
 c⁄° * 
U_EXPORT2


1236 
	$uªs_gëUTF8Såög
(c⁄° 
UResour˚BundÀ
 *
ªsB
,

1237 *
de°
, 
öt32_t
 *
pLígth
,

1238 
UBoﬁ
 
f‹˚C›y
,

1239 
UEº‹Code
 *
°©us
) {

1240 
öt32_t
 
Àngth16
;

1241 c⁄° 
UCh¨
 *
s16
 = 
	`uªs_gëSåög
(
ªsB
, &
Àngth16
, 
°©us
);

1242  
	`uªs_toUTF8Såög
(
s16
, 
Àngth16
, 
de°
, 
pLígth
, 
f‹˚C›y
, 
°©us
);

1243 
	}
}

1245 
U_CAPI
 c⁄° 
uöt8_t
* 
U_EXPORT2
 
	$uªs_gëBö¨y
(c⁄° 
UResour˚BundÀ
* 
ªsB
, 
öt32_t
* 
Àn
,

1246 
UEº‹Code
* 
°©us
) {

1247 c⁄° 
uöt8_t
 *
p
;

1248 i‡(
°©us
==
NULL
 || 
	`U_FAILURE
(*status)) {

1249  
NULL
;

1251 if(
ªsB
 =
NULL
) {

1252 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1253  
NULL
;

1255 
p
 = 
	`ªs_gëBö¨y
(&(
ªsB
->
fResD©a
),ÑesB->
fRes
, 
Àn
);

1256 i‡(
p
 =
NULL
) {

1257 *
°©us
 = 
U_RESOURCE_TYPE_MISMATCH
;

1259  
p
;

1260 
	}
}

1262 
U_CAPI
 c⁄° 
öt32_t
* 
U_EXPORT2
 
	$uªs_gëI¡Ve˘‹
(c⁄° 
UResour˚BundÀ
* 
ªsB
, 
öt32_t
* 
Àn
,

1263 
UEº‹Code
* 
°©us
) {

1264 c⁄° 
öt32_t
 *
p
;

1265 i‡(
°©us
==
NULL
 || 
	`U_FAILURE
(*status)) {

1266  
NULL
;

1268 if(
ªsB
 =
NULL
) {

1269 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1270  
NULL
;

1272 
p
 = 
	`ªs_gëI¡Ve˘‹
(&(
ªsB
->
fResD©a
),ÑesB->
fRes
, 
Àn
);

1273 i‡(
p
 =
NULL
) {

1274 *
°©us
 = 
U_RESOURCE_TYPE_MISMATCH
;

1276  
p
;

1277 
	}
}

1281 
U_CAPI
 
öt32_t
 
U_EXPORT2
 
	$uªs_gëI¡
(c⁄° 
UResour˚BundÀ
* 
ªsB
, 
UEº‹Code
 *
°©us
) {

1282 i‡(
°©us
==
NULL
 || 
	`U_FAILURE
(*status)) {

1285 if(
ªsB
 =
NULL
) {

1286 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1289 if(
	`RES_GET_TYPE
(
ªsB
->
fRes
Ë!
URES_INT
) {

1290 *
°©us
 = 
U_RESOURCE_TYPE_MISMATCH
;

1293  
	`RES_GET_INT
(
ªsB
->
fRes
);

1294 
	}
}

1296 
U_CAPI
 
uöt32_t
 
U_EXPORT2
 
	$uªs_gëUI¡
(c⁄° 
UResour˚BundÀ
* 
ªsB
, 
UEº‹Code
 *
°©us
) {

1297 i‡(
°©us
==
NULL
 || 
	`U_FAILURE
(*status)) {

1300 if(
ªsB
 =
NULL
) {

1301 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1304 if(
	`RES_GET_TYPE
(
ªsB
->
fRes
Ë!
URES_INT
) {

1305 *
°©us
 = 
U_RESOURCE_TYPE_MISMATCH
;

1308  
	`RES_GET_UINT
(
ªsB
->
fRes
);

1309 
	}
}

1311 
U_CAPI
 
UResTy≥
 
U_EXPORT2
 
	$uªs_gëTy≥
(c⁄° 
UResour˚BundÀ
 *
ªsB
) {

1312 if(
ªsB
 =
NULL
) {

1313  
URES_NONE
;

1315  
	`ªs_gëPublicTy≥
(
ªsB
->
fRes
);

1316 
	}
}

1318 
U_CAPI
 c⁄° * 
U_EXPORT2
 
	$uªs_gëKey
(c⁄° 
UResour˚BundÀ
 *
ªsB
) {

1319 if(
ªsB
 =
NULL
) {

1320  
NULL
;

1323 (
ªsB
->
fKey
);

1324 
	}
}

1326 
U_CAPI
 
öt32_t
 
U_EXPORT2
 
	$uªs_gëSize
(c⁄° 
UResour˚BundÀ
 *
ªsB
) {

1327 if(
ªsB
 =
NULL
) {

1331  
ªsB
->
fSize
;

1332 
	}
}

1334 c⁄° 
UCh¨
* 
	$uªs_gëSåögWôhAlüs
(c⁄° 
UResour˚BundÀ
 *
ªsB
, 
Resour˚
 
r
, 
öt32_t
 
sIndex
, i¡32_à*
Àn
, 
UEº‹Code
 *
°©us
) {

1335 if(
	`RES_GET_TYPE
(
r
Ë=
URES_ALIAS
) {

1336 c⁄° 
UCh¨
* 
ªsu…
 = 0;

1337 
UResour˚BundÀ
 *
ãmpRes
 = 
	`uªs_gëByIndex
(
ªsB
, 
sIndex
, 
NULL
, 
°©us
);

1338 
ªsu…
 = 
	`uªs_gëSåög
(
ãmpRes
, 
Àn
, 
°©us
);

1339 
	`uªs_˛o£
(
ãmpRes
);

1340  
ªsu…
;

1342  
	`ªs_gëSåög
(&(
ªsB
->
fResD©a
), 
r
, 
Àn
);

1344 
	}
}

1346 
U_CAPI
 
U_EXPORT2
 
	$uªs_ª£tIãøt‹
(
UResour˚BundÀ
 *
ªsB
){

1347 if(
ªsB
 =
NULL
) {

1350 
ªsB
->
fIndex
 = -1;

1351 
	}
}

1353 
U_CAPI
 
UBoﬁ
 
U_EXPORT2
 
	$uªs_hasNext
(c⁄° 
UResour˚BundÀ
 *
ªsB
) {

1354 if(
ªsB
 =
NULL
) {

1355  
FALSE
;

1357  (
UBoﬁ
)(
ªsB
->
fIndex
 <ÑesB->
fSize
-1);

1358 
	}
}

1360 
U_CAPI
 c⁄° 
UCh¨
* 
U_EXPORT2
 
	$uªs_gëNextSåög
(
UResour˚BundÀ
 *
ªsB
, 
öt32_t
* 
Àn
, c⁄° ** 
key
, 
UEº‹Code
 *
°©us
) {

1361 
Resour˚
 
r
 = 
RES_BOGUS
;

1363 i‡(
°©us
==
NULL
 || 
	`U_FAILURE
(*status)) {

1364  
NULL
;

1366 if(
ªsB
 =
NULL
) {

1367 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1368  
NULL
;

1371 if(
ªsB
->
fIndex
 =ªsB->
fSize
-1) {

1372 *
°©us
 = 
U_INDEX_OUTOFBOUNDS_ERROR
;

1374 
ªsB
->
fIndex
++;

1375 
	`RES_GET_TYPE
(
ªsB
->
fRes
)) {

1376 
URES_STRING
:

1377 
URES_STRING_V2
:

1378  
	`ªs_gëSåög
(&(
ªsB
->
fResD©a
),ÑesB->
fRes
, 
Àn
);

1379 
URES_TABLE
:

1380 
URES_TABLE16
:

1381 
URES_TABLE32
:

1382 
r
 = 
	`ªs_gëTabÀIãmByIndex
(&(
ªsB
->
fResD©a
),ÑesB->
fRes
,ÑesB->
fIndex
, 
key
);

1383 if(
r
 =
RES_BOGUS
 && 
ªsB
->
fHasFÆlback
) {

1386  
	`uªs_gëSåögWôhAlüs
(
ªsB
, 
r
,ÑesB->
fIndex
, 
Àn
, 
°©us
);

1387 
URES_ARRAY
:

1388 
URES_ARRAY16
:

1389 
r
 = 
	`ªs_gëAºayIãm
(&(
ªsB
->
fResD©a
),ÑesB->
fRes
,ÑesB->
fIndex
);

1390 if(
r
 =
RES_BOGUS
 && 
ªsB
->
fHasFÆlback
) {

1393  
	`uªs_gëSåögWôhAlüs
(
ªsB
, 
r
,ÑesB->
fIndex
, 
Àn
, 
°©us
);

1394 
URES_ALIAS
:

1395  
	`uªs_gëSåögWôhAlüs
(
ªsB
,ÑesB->
fRes
,ÑesB->
fIndex
, 
Àn
, 
°©us
);

1396 
URES_INT
:

1397 
URES_BINARY
:

1398 
URES_INT_VECTOR
:

1399 *
°©us
 = 
U_RESOURCE_TYPE_MISMATCH
;

1401  
NULL
;

1405  
NULL
;

1406 
	}
}

1408 
U_CAPI
 
UResour˚BundÀ
* 
U_EXPORT2
 
	$uªs_gëNextResour˚
(
UResour˚BundÀ
 *
ªsB
, UResour˚BundÀ *
fûlIn
, 
UEº‹Code
 *
°©us
) {

1409 c⁄° *
key
 = 
NULL
;

1410 
Resour˚
 
r
 = 
RES_BOGUS
;

1412 i‡(
°©us
==
NULL
 || 
	`U_FAILURE
(*status)) {

1414  
fûlIn
;

1416 if(
ªsB
 =
NULL
) {

1417 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1419  
fûlIn
;

1422 if(
ªsB
->
fIndex
 =ªsB->
fSize
-1) {

1423 *
°©us
 = 
U_INDEX_OUTOFBOUNDS_ERROR
;

1426 
ªsB
->
fIndex
++;

1427 
	`RES_GET_TYPE
(
ªsB
->
fRes
)) {

1428 
URES_INT
:

1429 
URES_BINARY
:

1430 
URES_STRING
:

1431 
URES_STRING_V2
:

1432 
URES_INT_VECTOR
:

1433  
	`uªs_c›yResb
(
fûlIn
, 
ªsB
, 
°©us
);

1434 
URES_TABLE
:

1435 
URES_TABLE16
:

1436 
URES_TABLE32
:

1437 
r
 = 
	`ªs_gëTabÀIãmByIndex
(&(
ªsB
->
fResD©a
),ÑesB->
fRes
,ÑesB->
fIndex
, &
key
);

1438 if(
r
 =
RES_BOGUS
 && 
ªsB
->
fHasFÆlback
) {

1441  
	`öô_ªsb_ªsu…
(&(
ªsB
->
fResD©a
), 
r
, 
key
,ÑesB->
fIndex
,ÑesB->
fD©a
,ÑesB, 0, 
fûlIn
, 
°©us
);

1442 
URES_ARRAY
:

1443 
URES_ARRAY16
:

1444 
r
 = 
	`ªs_gëAºayIãm
(&(
ªsB
->
fResD©a
),ÑesB->
fRes
,ÑesB->
fIndex
);

1445 if(
r
 =
RES_BOGUS
 && 
ªsB
->
fHasFÆlback
) {

1448  
	`öô_ªsb_ªsu…
(&(
ªsB
->
fResD©a
), 
r
, 
key
,ÑesB->
fIndex
,ÑesB->
fD©a
,ÑesB, 0, 
fûlIn
, 
°©us
);

1451  
fûlIn
;

1455  
fûlIn
;

1456 
	}
}

1458 
U_CAPI
 
UResour˚BundÀ
* 
U_EXPORT2
 
	$uªs_gëByIndex
(c⁄° 
UResour˚BundÀ
 *
ªsB
, 
öt32_t
 
ödexR
, UResour˚BundÀ *
fûlIn
, 
UEº‹Code
 *
°©us
) {

1459 c⁄° * 
key
 = 
NULL
;

1460 
Resour˚
 
r
 = 
RES_BOGUS
;

1462 i‡(
°©us
==
NULL
 || 
	`U_FAILURE
(*status)) {

1464  
fûlIn
;

1466 if(
ªsB
 =
NULL
) {

1467 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1469  
fûlIn
;

1472 if(
ödexR
 >0 && 
ªsB
->
fSize
 > indexR) {

1473 
	`RES_GET_TYPE
(
ªsB
->
fRes
)) {

1474 
URES_INT
:

1475 
URES_BINARY
:

1476 
URES_STRING
:

1477 
URES_STRING_V2
:

1478 
URES_INT_VECTOR
:

1479  
	`uªs_c›yResb
(
fûlIn
, 
ªsB
, 
°©us
);

1480 
URES_TABLE
:

1481 
URES_TABLE16
:

1482 
URES_TABLE32
:

1483 
r
 = 
	`ªs_gëTabÀIãmByIndex
(&(
ªsB
->
fResD©a
),ÑesB->
fRes
, 
ödexR
, &
key
);

1484 if(
r
 =
RES_BOGUS
 && 
ªsB
->
fHasFÆlback
) {

1487  
	`öô_ªsb_ªsu…
(&(
ªsB
->
fResD©a
), 
r
, 
key
, 
ödexR
,ÑesB->
fD©a
,ÑesB, 0, 
fûlIn
, 
°©us
);

1488 
URES_ARRAY
:

1489 
URES_ARRAY16
:

1490 
r
 = 
	`ªs_gëAºayIãm
(&(
ªsB
->
fResD©a
),ÑesB->
fRes
, 
ödexR
);

1491 if(
r
 =
RES_BOGUS
 && 
ªsB
->
fHasFÆlback
) {

1494  
	`öô_ªsb_ªsu…
(&(
ªsB
->
fResD©a
), 
r
, 
key
, 
ödexR
,ÑesB->
fD©a
,ÑesB, 0, 
fûlIn
, 
°©us
);

1497  
fûlIn
;

1500 *
°©us
 = 
U_MISSING_RESOURCE_ERROR
;

1503  
fûlIn
;

1504 
	}
}

1506 
U_CAPI
 c⁄° 
UCh¨
* 
U_EXPORT2
 
	$uªs_gëSåögByIndex
(c⁄° 
UResour˚BundÀ
 *
ªsB
, 
öt32_t
 
ödexS
, i¡32_t* 
Àn
, 
UEº‹Code
 *
°©us
) {

1507 c⁄° * 
key
 = 
NULL
;

1508 
Resour˚
 
r
 = 
RES_BOGUS
;

1510 i‡(
°©us
==
NULL
 || 
	`U_FAILURE
(*status)) {

1511  
NULL
;

1513 if(
ªsB
 =
NULL
) {

1514 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1515  
NULL
;

1518 if(
ödexS
 >0 && 
ªsB
->
fSize
 > indexS) {

1519 
	`RES_GET_TYPE
(
ªsB
->
fRes
)) {

1520 
URES_STRING
:

1521 
URES_STRING_V2
:

1522  
	`ªs_gëSåög
(&(
ªsB
->
fResD©a
),ÑesB->
fRes
, 
Àn
);

1523 
URES_TABLE
:

1524 
URES_TABLE16
:

1525 
URES_TABLE32
:

1526 
r
 = 
	`ªs_gëTabÀIãmByIndex
(&(
ªsB
->
fResD©a
),ÑesB->
fRes
, 
ödexS
, &
key
);

1527 if(
r
 =
RES_BOGUS
 && 
ªsB
->
fHasFÆlback
) {

1530  
	`uªs_gëSåögWôhAlüs
(
ªsB
, 
r
, 
ödexS
, 
Àn
, 
°©us
);

1531 
URES_ARRAY
:

1532 
URES_ARRAY16
:

1533 
r
 = 
	`ªs_gëAºayIãm
(&(
ªsB
->
fResD©a
),ÑesB->
fRes
, 
ödexS
);

1534 if(
r
 =
RES_BOGUS
 && 
ªsB
->
fHasFÆlback
) {

1537  
	`uªs_gëSåögWôhAlüs
(
ªsB
, 
r
, 
ödexS
, 
Àn
, 
°©us
);

1538 
URES_ALIAS
:

1539  
	`uªs_gëSåögWôhAlüs
(
ªsB
,ÑesB->
fRes
, 
ödexS
, 
Àn
, 
°©us
);

1540 
URES_INT
:

1541 
URES_BINARY
:

1542 
URES_INT_VECTOR
:

1543 *
°©us
 = 
U_RESOURCE_TYPE_MISMATCH
;

1547 *
°©us
 = 
U_INTERNAL_PROGRAM_ERROR
;

1551 *
°©us
 = 
U_MISSING_RESOURCE_ERROR
;

1553  
NULL
;

1554 
	}
}

1556 
U_CAPI
 c⁄° * 
U_EXPORT2


1557 
	$uªs_gëUTF8SåögByIndex
(c⁄° 
UResour˚BundÀ
 *
ªsB
,

1558 
öt32_t
 
idx
,

1559 *
de°
, 
öt32_t
 *
pLígth
,

1560 
UBoﬁ
 
f‹˚C›y
,

1561 
UEº‹Code
 *
°©us
) {

1562 
öt32_t
 
Àngth16
;

1563 c⁄° 
UCh¨
 *
s16
 = 
	`uªs_gëSåögByIndex
(
ªsB
, 
idx
, &
Àngth16
, 
°©us
);

1564  
	`uªs_toUTF8Såög
(
s16
, 
Àngth16
, 
de°
, 
pLígth
, 
f‹˚C›y
, 
°©us
);

1565 
	}
}

1571 
U_CAPI
 
UResour˚BundÀ
* 
U_EXPORT2


1572 
	$uªs_födResour˚
(c⁄° * 
∑th
, 
UResour˚BundÀ
 *
fûlIn
, 
UEº‹Code
 *
°©us
)

1574 
UResour˚BundÀ
 *
fú°
 = 
NULL
;

1575 
UResour˚BundÀ
 *
ªsu…
 = 
fûlIn
;

1576 *
∑ckageName
 = 
NULL
;

1577 *
∑thToResour˚
 = 
NULL
, *
ßve
 = NULL;

1578 *
loˇÀ
 = 
NULL
, *
loˇÀEnd
 = NULL;

1579 
öt32_t
 
Àngth
;

1581 if(
°©us
 =
NULL
 || 
	`U_FAILURE
(*status)) {

1582  
ªsu…
;

1585 
Àngth
 = (
öt32_t
)(
	`u¥v_°æí
(
∑th
)+1);

1586 
ßve
 = 
∑thToResour˚
 = (*)
	`u¥v_mÆloc
(
Àngth
*());

1588 if(
∑thToResour˚
 =
NULL
) {

1589 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

1590  
ªsu…
;

1592 
	`u¥v_mem˝y
(
∑thToResour˚
, 
∑th
, 
Àngth
);

1594 
loˇÀ
 = 
∑thToResour˚
;

1595 if(*
∑thToResour˚
 =
RES_PATH_SEPARATOR
) {

1596 
∑thToResour˚
++;

1597 
∑ckageName
 = 
∑thToResour˚
;

1598 
∑thToResour˚
 = 
	`u¥v_°rchr
’©hToResour˚, 
RES_PATH_SEPARATOR
);

1599 if(
∑thToResour˚
 =
NULL
) {

1600 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1602 *
∑thToResour˚
 = 0;

1603 
loˇÀ
 = 
∑thToResour˚
+1;

1607 
loˇÀEnd
 = 
	`u¥v_°rchr
(
loˇÀ
, 
RES_PATH_SEPARATOR
);

1608 if(
loˇÀEnd
 !
NULL
) {

1609 *
loˇÀEnd
 = 0;

1612 
fú°
 = 
	`uªs_›í
(
∑ckageName
, 
loˇÀ
, 
°©us
);

1614 if(
	`U_SUCCESS
(*
°©us
)) {

1615 if(
loˇÀEnd
) {

1616 
ªsu…
 = 
	`uªs_födSubResour˚
(
fú°
, 
loˇÀEnd
+1, 
fûlIn
, 
°©us
);

1618 
ªsu…
 = 
	`uªs_c›yResb
(
fûlIn
, 
fú°
, 
°©us
);

1620 
	`uªs_˛o£
(
fú°
);

1622 
	`u¥v_‰ì
(
ßve
);

1623  
ªsu…
;

1624 
	}
}

1626 
U_CAPI
 
UResour˚BundÀ
* 
U_EXPORT2


1627 
	$uªs_födSubResour˚
(c⁄° 
UResour˚BundÀ
 *
ªsB
, * 
∑th
, UResour˚BundÀ *
fûlIn
, 
UEº‹Code
 *
°©us
)

1629 
Resour˚
 
ªs
 = 
RES_BOGUS
;

1630 
UResour˚BundÀ
 *
ªsu…
 = 
fûlIn
;

1631 c⁄° *
key
;

1633 if(
°©us
 =
NULL
 || 
	`U_FAILURE
(*status)) {

1634  
ªsu…
;

1641 
ªs
 = 
	`ªs_födResour˚
(&(
ªsB
->
fResD©a
),ÑesB->
fRes
, &
∑th
, &
key
);

1642 if(
ªs
 !
RES_BOGUS
) {

1643 
ªsu…
 = 
	`öô_ªsb_ªsu…
(&(
ªsB
->
fResD©a
), 
ªs
, 
key
, -1,ÑesB->
fD©a
,ÑesB, 0, 
fûlIn
, 
°©us
);

1644 
ªsB
 = 
ªsu…
;

1646 *
°©us
 = 
U_MISSING_RESOURCE_ERROR
;

1649 } *
∑th
);

1651  
ªsu…
;

1652 
	}
}

1653 
U_INTERNAL
 c⁄° 
UCh¨
* 
U_EXPORT2


1654 
	$uªs_gëSåögByKeyWôhFÆlback
(c⁄° 
UResour˚BundÀ
 *
ªsB
,

1655 c⁄° * 
öKey
,

1656 
öt32_t
* 
Àn
,

1657 
UEº‹Code
 *
°©us
) {

1659 
UResour˚BundÀ
 
°ack
;

1660 c⁄° 
UCh¨
* 
ªtVÆ
 = 
NULL
;

1661 
	`uªs_öôSèckObje˘
(&
°ack
);

1662 
	`uªs_gëByKeyWôhFÆlback
(
ªsB
, 
öKey
, &
°ack
, 
°©us
);

1663 
ªtVÆ
 = 
	`uªs_gëSåög
(&
°ack
, 
Àn
, 
°©us
);

1664 
	`uªs_˛o£
(&
°ack
);

1665  
ªtVÆ
;

1666 
	}
}

1668 
U_CAPI
 
UResour˚BundÀ
* 
U_EXPORT2


1669 
	$uªs_gëByKeyWôhFÆlback
(c⁄° 
UResour˚BundÀ
 *
ªsB
,

1670 c⁄° * 
öKey
,

1671 
UResour˚BundÀ
 *
fûlIn
,

1672 
UEº‹Code
 *
°©us
) {

1673 
Resour˚
 
ªs
 = 
RES_BOGUS
, 
roŸRes
 = RES_BOGUS;

1675 c⁄° *
key
 = 
öKey
;

1676 
UResour˚BundÀ
 *
hñ≥r
 = 
NULL
;

1677 
UResTy≥
 
ty≥
;

1679 i‡(
°©us
==
NULL
 || 
	`U_FAILURE
(*status)) {

1680  
fûlIn
;

1682 if(
ªsB
 =
NULL
) {

1683 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1684  
fûlIn
;

1687 
ty≥
 = 
	`RES_GET_TYPE
(
ªsB
->
fRes
);

1688 if(
	`URES_IS_TABLE
(
ty≥
)) {

1689 
öt32_t
 
t
;

1690 
ªs
 = 
	`ªs_gëTabÀIãmByKey
(&(
ªsB
->
fResD©a
),ÑesB->
fRes
, &
t
, &
key
);

1691 if(
ªs
 =
RES_BOGUS
) {

1692 
UResour˚D©aE¡ry
 *
d©aE¡ry
 = 
ªsB
->
fD©a
;

1693 
∑th
[256];

1694 * 
myP©h
 = 
∑th
;

1695 c⁄° * 
ªsP©h
 = 
ªsB
->
fResP©h
;

1696 
öt32_t
 
Àn
 = 
ªsB
->
fResP©hLí
;

1698 
ªs
 =
RES_BOGUS
 && 
d©aE¡ry
->
fP¨ít
 !
NULL
) {

1699 
d©aE¡ry
 = d©aE¡ry->
fP¨ít
;

1700 
roŸRes
 = 
d©aE¡ry
->
fD©a
.rootRes;

1702 if(
d©aE¡ry
->
fBogus
 =
U_ZERO_ERROR
) {

1703 
	`u¥v_°∫˝y
(
∑th
, 
ªsP©h
, 
Àn
);

1704 
	`u¥v_°r˝y
(
∑th
+
Àn
, 
öKey
);

1705 
myP©h
 = 
∑th
;

1706 
key
 = 
öKey
;

1708 
ªs
 = 
	`ªs_födResour˚
(&(
d©aE¡ry
->
fD©a
), 
roŸRes
, &
myP©h
, &
key
);

1709 i‡(
	`RES_GET_TYPE
(
ªs
Ë=
URES_ALIAS
 && *
myP©h
) {

1711 
hñ≥r
 = 
	`öô_ªsb_ªsu…
(&(
d©aE¡ry
->
fD©a
), 
ªs
, 
NULL
, -1, d©aE¡ry, 
ªsB
, 0, hñ≥r, 
°©us
);

1713 if(
hñ≥r
) {

1714 
d©aE¡ry
 = 
hñ≥r
->
fD©a
;

1715 
roŸRes
 = 
hñ≥r
->
fRes
;

1716 
ªsP©h
 = 
hñ≥r
->
fResP©h
;

1717 
Àn
 = 
hñ≥r
->
fResP©hLí
;

1723 } *
myP©h
);

1727 if(
ªs
 !
RES_BOGUS
) {

1729 if(
	`u¥v_°rcmp
(
d©aE¡ry
->
fName
, 
	`uloc_gëDeÁu…
())==0 || u¥v_°rcmp(d©aE¡ry->fName, 
kRoŸLoˇÀName
)==0) {

1730 *
°©us
 = 
U_USING_DEFAULT_WARNING
;

1732 *
°©us
 = 
U_USING_FALLBACK_WARNING
;

1735 
fûlIn
 = 
	`öô_ªsb_ªsu…
(&(
d©aE¡ry
->
fD©a
), 
ªs
, 
öKey
, -1, d©aE¡ry, 
ªsB
, 0, fûlIn, 
°©us
);

1737 *
°©us
 = 
U_MISSING_RESOURCE_ERROR
;

1740 
fûlIn
 = 
	`öô_ªsb_ªsu…
(&(
ªsB
->
fResD©a
), 
ªs
, 
key
, -1,ÑesB->
fD©a
,ÑesB, 0, fûlIn, 
°©us
);

1744 *
°©us
 = 
U_RESOURCE_TYPE_MISMATCH
;

1746 
	`uªs_˛o£
(
hñ≥r
);

1747  
fûlIn
;

1748 
	}
}

1751 
U_CAPI
 
UResour˚BundÀ
* 
U_EXPORT2
 
	$uªs_gëByKey
(c⁄° 
UResour˚BundÀ
 *
ªsB
, c⁄° * 
öKey
, UResour˚BundÀ *
fûlIn
, 
UEº‹Code
 *
°©us
) {

1752 
Resour˚
 
ªs
 = 
RES_BOGUS
;

1753 
UResour˚D©aE¡ry
 *
ªÆD©a
 = 
NULL
;

1754 c⁄° *
key
 = 
öKey
;

1755 
UResTy≥
 
ty≥
;

1757 i‡(
°©us
==
NULL
 || 
	`U_FAILURE
(*status)) {

1758  
fûlIn
;

1760 if(
ªsB
 =
NULL
) {

1761 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1762  
fûlIn
;

1765 
ty≥
 = 
	`RES_GET_TYPE
(
ªsB
->
fRes
);

1766 if(
	`URES_IS_TABLE
(
ty≥
)) {

1767 
öt32_t
 
t
;

1768 
ªs
 = 
	`ªs_gëTabÀIãmByKey
(&(
ªsB
->
fResD©a
),ÑesB->
fRes
, &
t
, &
key
);

1769 if(
ªs
 =
RES_BOGUS
) {

1770 
key
 = 
öKey
;

1771 if(
ªsB
->
fHasFÆlback
 =
TRUE
) {

1772 c⁄° 
Resour˚D©a
 *
rd
 = 
	`gëFÆlbackD©a
(
ªsB
, &
key
, &
ªÆD©a
, &
ªs
, 
°©us
);

1773 if(
	`U_SUCCESS
(*
°©us
)) {

1775  
	`öô_ªsb_ªsu…
(
rd
, 
ªs
, 
key
, -1, 
ªÆD©a
, 
ªsB
, 0, 
fûlIn
, 
°©us
);

1777 *
°©us
 = 
U_MISSING_RESOURCE_ERROR
;

1780 *
°©us
 = 
U_MISSING_RESOURCE_ERROR
;

1783  
	`öô_ªsb_ªsu…
(&(
ªsB
->
fResD©a
), 
ªs
, 
key
, -1,ÑesB->
fD©a
,ÑesB, 0, 
fûlIn
, 
°©us
);

1789 if(
	`RES_GET_TYPE
(
ªsB
->
fRes
Ë=
URES_ARRAY
 &&ÑesB->
fHasFÆlback
 =
TRUE
) {

1791 c⁄° 
Resour˚D©a
 *
rd
 = 
	`gëFÆlbackD©a
(
ªsB
, &
key
, &
ªÆD©a
, &
ªs
, 
°©us
);

1792 if(
	`U_SUCCESS
(*
°©us
)) {

1793  
	`öô_ªsb_ªsu…
(
rd
, 
ªs
, 
key
, 
ªÆD©a
, 
ªsB
, 
fûlIn
, 
°©us
);

1795 *
°©us
 = 
U_MISSING_RESOURCE_ERROR
;

1800 *
°©us
 = 
U_RESOURCE_TYPE_MISMATCH
;

1802  
fûlIn
;

1803 
	}
}

1805 
U_CAPI
 c⁄° 
UCh¨
* 
U_EXPORT2
 
	$uªs_gëSåögByKey
(c⁄° 
UResour˚BundÀ
 *
ªsB
, c⁄° * 
öKey
, 
öt32_t
* 
Àn
, 
UEº‹Code
 *
°©us
) {

1806 
Resour˚
 
ªs
 = 
RES_BOGUS
;

1807 
UResour˚D©aE¡ry
 *
ªÆD©a
 = 
NULL
;

1808 c⁄° * 
key
 = 
öKey
;

1809 
UResTy≥
 
ty≥
;

1811 i‡(
°©us
==
NULL
 || 
	`U_FAILURE
(*status)) {

1812  
NULL
;

1814 if(
ªsB
 =
NULL
) {

1815 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1816  
NULL
;

1819 
ty≥
 = 
	`RES_GET_TYPE
(
ªsB
->
fRes
);

1820 if(
	`URES_IS_TABLE
(
ty≥
)) {

1821 
öt32_t
 
t
=0;

1823 
ªs
 = 
	`ªs_gëTabÀIãmByKey
(&(
ªsB
->
fResD©a
),ÑesB->
fRes
, &
t
, &
key
);

1825 if(
ªs
 =
RES_BOGUS
) {

1826 
key
 = 
öKey
;

1827 if(
ªsB
->
fHasFÆlback
 =
TRUE
) {

1828 c⁄° 
Resour˚D©a
 *
rd
 = 
	`gëFÆlbackD©a
(
ªsB
, &
key
, &
ªÆD©a
, &
ªs
, 
°©us
);

1829 if(
	`U_SUCCESS
(*
°©us
)) {

1830 
	`RES_GET_TYPE
(
ªs
)) {

1831 
URES_STRING
:

1832 
URES_STRING_V2
:

1833  
	`ªs_gëSåög
(
rd
, 
ªs
, 
Àn
);

1834 
URES_ALIAS
:

1836 c⁄° 
UCh¨
* 
ªsu…
 = 0;

1837 
UResour˚BundÀ
 *
ãmpRes
 = 
	`uªs_gëByKey
(
ªsB
, 
öKey
, 
NULL
, 
°©us
);

1838 
ªsu…
 = 
	`uªs_gëSåög
(
ãmpRes
, 
Àn
, 
°©us
);

1839 
	`uªs_˛o£
(
ãmpRes
);

1840  
ªsu…
;

1843 *
°©us
 = 
U_RESOURCE_TYPE_MISMATCH
;

1846 *
°©us
 = 
U_MISSING_RESOURCE_ERROR
;

1849 *
°©us
 = 
U_MISSING_RESOURCE_ERROR
;

1852 
	`RES_GET_TYPE
(
ªs
)) {

1853 
URES_STRING
:

1854 
URES_STRING_V2
:

1855  
	`ªs_gëSåög
(&(
ªsB
->
fResD©a
), 
ªs
, 
Àn
);

1856 
URES_ALIAS
:

1858 c⁄° 
UCh¨
* 
ªsu…
 = 0;

1859 
UResour˚BundÀ
 *
ãmpRes
 = 
	`uªs_gëByKey
(
ªsB
, 
öKey
, 
NULL
, 
°©us
);

1860 
ªsu…
 = 
	`uªs_gëSåög
(
ãmpRes
, 
Àn
, 
°©us
);

1861 
	`uªs_˛o£
(
ãmpRes
);

1862  
ªsu…
;

1865 *
°©us
 = 
U_RESOURCE_TYPE_MISMATCH
;

1872 if(
	`RES_GET_TYPE
(
ªsB
->
fRes
Ë=
URES_ARRAY
 &&ÑesB->
fHasFÆlback
 =
TRUE
) {

1874 c⁄° 
Resour˚D©a
 *
rd
 = 
	`gëFÆlbackD©a
(
ªsB
, &
key
, &
ªÆD©a
, &
ªs
, 
°©us
);

1875 if(
	`U_SUCCESS
(*
°©us
)) {

1876  
	`ªs_gëSåög
(
rd
, 
ªs
, 
Àn
);

1878 *
°©us
 = 
U_MISSING_RESOURCE_ERROR
;

1883 *
°©us
 = 
U_RESOURCE_TYPE_MISMATCH
;

1885  
NULL
;

1886 
	}
}

1888 
U_CAPI
 c⁄° * 
U_EXPORT2


1889 
	$uªs_gëUTF8SåögByKey
(c⁄° 
UResour˚BundÀ
 *
ªsB
,

1890 c⁄° *
key
,

1891 *
de°
, 
öt32_t
 *
pLígth
,

1892 
UBoﬁ
 
f‹˚C›y
,

1893 
UEº‹Code
 *
°©us
) {

1894 
öt32_t
 
Àngth16
;

1895 c⁄° 
UCh¨
 *
s16
 = 
	`uªs_gëSåögByKey
(
ªsB
, 
key
, &
Àngth16
, 
°©us
);

1896  
	`uªs_toUTF8Såög
(
s16
, 
Àngth16
, 
de°
, 
pLígth
, 
f‹˚C›y
, 
°©us
);

1897 
	}
}

1905 
U_INTERNAL
 c⁄° * 
U_EXPORT2


1906 
	$uªs_gëLoˇÀI¡î«l
(c⁄° 
UResour˚BundÀ
* 
ªsour˚BundÀ
, 
UEº‹Code
* 
°©us
)

1908 i‡(
°©us
==
NULL
 || 
	`U_FAILURE
(*status)) {

1909  
NULL
;

1911 i‡(!
ªsour˚BundÀ
) {

1912 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1913  
NULL
;

1915  
ªsour˚BundÀ
->
fD©a
->
fName
;

1917 
	}
}

1919 
U_CAPI
 c⁄° * 
U_EXPORT2


1920 
	$uªs_gëLoˇÀ
(c⁄° 
UResour˚BundÀ
* 
ªsour˚BundÀ
,

1921 
UEº‹Code
* 
°©us
)

1923  
	`uªs_gëLoˇÀI¡î«l
(
ªsour˚BundÀ
, 
°©us
);

1924 
	}
}

1927 
U_CAPI
 c⁄° * 
U_EXPORT2


1928 
	$uªs_gëLoˇÀByTy≥
(c⁄° 
UResour˚BundÀ
* 
ªsour˚BundÀ
,

1929 
ULocD©aLoˇÀTy≥
 
ty≥
,

1930 
UEº‹Code
* 
°©us
) {

1931 i‡(
°©us
==
NULL
 || 
	`U_FAILURE
(*status)) {

1932  
NULL
;

1934 i‡(!
ªsour˚BundÀ
) {

1935 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1936  
NULL
;

1938 
ty≥
) {

1939 
ULOC_ACTUAL_LOCALE
:

1940  
ªsour˚BundÀ
->
fD©a
->
fName
;

1941 
ULOC_VALID_LOCALE
:

1942  
ªsour˚BundÀ
->
fT›LevñD©a
->
fName
;

1943 
ULOC_REQUESTED_LOCALE
:

1944  
NULL
;

1946 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1947  
NULL
;

1950 
	}
}

1952 
U_CFUNC
 c⁄° * 
	$uªs_gëName
(c⁄° 
UResour˚BundÀ
* 
ªsB
) {

1953 if(
ªsB
 =
NULL
) {

1954  
NULL
;

1957  
ªsB
->
fD©a
->
fName
;

1958 
	}
}

1960 #ifde‡
URES_DEBUG


1961 
U_CFUNC
 c⁄° * 
	$uªs_gëP©h
(c⁄° 
UResour˚BundÀ
* 
ªsB
) {

1962 if(
ªsB
 =
NULL
) {

1963  
NULL
;

1966  
ªsB
->
fD©a
->
fP©h
;

1967 
	}
}

1977 
U_CAPI
 
U_EXPORT2


1978 
	$uªs_›íFûlIn
(
UResour˚BundÀ
 *
r
, c⁄° * 
∑th
,

1979 c⁄° * 
loˇÀID
, 
UEº‹Code
* 
°©us
) {

1980 if(
r
 =
NULL
) {

1981 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1983 
UResour˚D©aE¡ry
 *
fú°D©a
;

1984 
UBoﬁ
 
isSèckObje˘
 = 
	`uªs_isSèckObje˘
(
r
);

1986 
	`uªs_˛o£BundÀ
(
r
, 
FALSE
);

1987 
	`u¥v_mem£t
(
r
, 0, (
UResour˚BundÀ
));

1988 
	`uªs_£tIsSèckObje˘
(
r
, 
isSèckObje˘
);

1989 
r
->
fHasFÆlback
 = 
TRUE
;

1990 
r
->
fIsT›Levñ
 = 
TRUE
;

1991 
r
->
fIndex
 = -1;

1992 
r
->
fD©a
 = 
	`íåyO≥n
(
∑th
, 
loˇÀID
, 
°©us
);

1993 if(
	`U_FAILURE
(*
°©us
)) {

1997 
fú°D©a
 = 
r
->
fD©a
;

1998 
fú°D©a
->
fBogus
 !
U_ZERO_ERROR
 && fú°D©a->
fP¨ít
 !
NULL
) {

1999 
fú°D©a
 = fú°D©a->
fP¨ít
;

2001 
	`u¥v_mem˝y
(&
r
->
fResD©a
, &
fú°D©a
->
fD©a
, (
Resour˚D©a
));

2002 
r
->
fHasFÆlback
=(
UBoﬁ
)!r->
fResD©a
.
noFÆlback
;

2003 
r
->
fRes
 =Ñ->
fResD©a
.
roŸRes
;

2004 
r
->
fSize
 = 
	`ªs_cou¡AºayIãms
(&‘->
fResD©a
),Ñ->
fRes
);

2005 
r
->
fT›LevñD©a
 =Ñ->
fD©a
;

2007 
	}
}

2009 
U_CAPI
 
UResour˚BundÀ
* 
U_EXPORT2


2010 
	$uªs_›í
(c⁄° * 
∑th
,

2011 c⁄° * 
loˇÀID
,

2012 
UEº‹Code
* 
°©us
)

2014 
ˇn⁄LoˇÀID
[100];

2015 
UResour˚D©aE¡ry
 *
hasD©a
 = 
NULL
;

2016 
UResour˚BundÀ
 *
r
;

2018 if(
°©us
 =
NULL
 || 
	`U_FAILURE
(*status)) {

2019  
NULL
;

2023 
	`uloc_gëBa£Name
(
loˇÀID
, 
ˇn⁄LoˇÀID
, (ˇn⁄LoˇÀID), 
°©us
);

2024 if(
	`U_FAILURE
(*
°©us
Ë|| *°©u†=
U_STRING_NOT_TERMINATED_WARNING
) {

2025 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

2026  
NULL
;

2029 
r
 = (
UResour˚BundÀ
 *)
	`u¥v_mÆloc
((UResourceBundle));

2030 if(
r
 =
NULL
) {

2031 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

2032  
NULL
;

2035 
	`u¥v_mem£t
(
r
, 0, (
UResour˚BundÀ
));

2036 
r
->
fHasFÆlback
 = 
TRUE
;

2037 
r
->
fIsT›Levñ
 = 
TRUE
;

2038 
	`uªs_£tIsSèckObje˘
(
r
, 
FALSE
);

2039 
r
->
fIndex
 = -1;

2040 
r
->
fD©a
 = 
	`íåyO≥n
(
∑th
, 
ˇn⁄LoˇÀID
, 
°©us
);

2041 if(
	`U_FAILURE
(*
°©us
)) {

2042 
	`u¥v_‰ì
(
r
);

2043  
NULL
;

2045 
r
->
fT›LevñD©a
 =Ñ->
fD©a
;

2047 
hasD©a
 = 
r
->
fD©a
;

2048 
hasD©a
->
fBogus
 !
U_ZERO_ERROR
) {

2049 
hasD©a
 = hasD©a->
fP¨ít
;

2050 if(
hasD©a
 =
NULL
) {

2053 
	`íåyClo£
(
r
->
fD©a
);

2054 
	`u¥v_‰ì
(
r
);

2055 *
°©us
 = 
U_MISSING_RESOURCE_ERROR
;

2056  
NULL
;

2060 
	`u¥v_mem˝y
(&
r
->
fResD©a
, &
hasD©a
->
fD©a
, (
Resour˚D©a
));

2061 
r
->
fHasFÆlback
=(
UBoﬁ
)!r->
fResD©a
.
noFÆlback
;

2062 
r
->
fRes
 =Ñ->
fResD©a
.
roŸRes
;

2063 
r
->
fSize
 = 
	`ªs_cou¡AºayIãms
(&‘->
fResD©a
),Ñ->
fRes
);

2075  
r
;

2076 
	}
}

2082 
U_CAPI
 
UResour˚BundÀ
* 
U_EXPORT2


2083 
	$uªs_›íDúe˘
(c⁄° * 
∑th
, c⁄° * 
loˇÀID
, 
UEº‹Code
* 
°©us
) {

2084 
UResour˚BundÀ
 *
r
;

2085 
UEº‹Code
 
subSètus
 = 
U_ZERO_ERROR
;

2087 if(
°©us
 =
NULL
 || 
	`U_FAILURE
(*status)) {

2088  
NULL
;

2091 
r
 = (
UResour˚BundÀ
 *)
	`u¥v_mÆloc
((UResourceBundle));

2092 if(
r
 =
NULL
) {

2093 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

2094  
NULL
;

2097 
r
->
fHasFÆlback
 = 
FALSE
;

2098 
r
->
fIsT›Levñ
 = 
TRUE
;

2099 
	`uªs_£tIsSèckObje˘
(
r
, 
FALSE
);

2100 
r
->
fIndex
 = -1;

2101 
r
->
fD©a
 = 
	`íåyO≥n
(
∑th
, 
loˇÀID
, &
subSètus
);

2102 if(
	`U_FAILURE
(
subSètus
)) {

2103 *
°©us
 = 
subSètus
;

2104 
	`u¥v_‰ì
(
r
);

2105  
NULL
;

2107 if(
subSètus
 !
U_ZERO_ERROR
 ) {

2110 
	`íåyClo£
(
r
->
fD©a
);

2111 
	`u¥v_‰ì
(
r
);

2112 *
°©us
 = 
U_MISSING_RESOURCE_ERROR
;

2113  
NULL
;

2116 
r
->
fKey
 = 
NULL
;

2117 
r
->
fVîsi⁄
 = 
NULL
;

2118 
	`u¥v_mem˝y
(&
r
->
fResD©a
, &r->
fD©a
->fD©a, (
Resour˚D©a
));

2120 
r
->
fRes
 =Ñ->
fResD©a
.
roŸRes
;

2122 
r
->
fSize
 = 
	`ªs_cou¡AºayIãms
(&‘->
fResD©a
),Ñ->
fRes
);

2123 
r
->
fResP©h
 = 
NULL
;

2124 
r
->
fResP©hLí
 = 0;

2126 
r
->
fT›LevñD©a
 =Ñ->
fD©a
;

2128  
r
;

2129 
	}
}

2135 
U_CAPI
 
öt32_t
 
U_EXPORT2


2136 
	$uªs_cou¡AºayIãms
(c⁄° 
UResour˚BundÀ
* 
ªsour˚BundÀ
,

2137 c⁄° * 
ªsour˚Key
,

2138 
UEº‹Code
* 
°©us
)

2140 
UResour˚BundÀ
 
ªsD©a
;

2141 
	`uªs_öôSèckObje˘
(&
ªsD©a
);

2142 i‡(
°©us
==
NULL
 || 
	`U_FAILURE
(*status)) {

2145 if(
ªsour˚BundÀ
 =
NULL
) {

2146 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

2149 
	`uªs_gëByKey
(
ªsour˚BundÀ
, 
ªsour˚Key
, &
ªsD©a
, 
°©us
);

2151 if(
ªsD©a
.
fResD©a
.
d©a
 !
NULL
) {

2152 
öt32_t
 
ªsu…
 = 
	`ªs_cou¡AºayIãms
(&
ªsD©a
.
fResD©a
,ÑesD©a.
fRes
);

2153 
	`uªs_˛o£
(&
ªsD©a
);

2154  
ªsu…
;

2156 *
°©us
 = 
U_MISSING_RESOURCE_ERROR
;

2157 
	`uªs_˛o£
(&
ªsD©a
);

2160 
	}
}

2172 
U_INTERNAL
 c⁄° * 
U_EXPORT2


2173 
	$uªs_gëVîsi⁄NumbîI¡î«l
(c⁄° 
UResour˚BundÀ
 *
ªsour˚BundÀ
)

2175 i‡(!
ªsour˚BundÀ
Ë 
NULL
;

2177 if(
ªsour˚BundÀ
->
fVîsi⁄
 =
NULL
) {

2181 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

2182 
öt32_t
 
mö‹_Àn
 = 0;

2183 
öt32_t
 
Àn
;

2185 c⁄° 
UCh¨
* 
mö‹_vîsi⁄
 = 
	`uªs_gëSåögByKey
(
ªsour˚BundÀ
, 
kVîsi⁄Tag
, &
mö‹_Àn
, &
°©us
);

2192 
Àn
 = (
mö‹_Àn
 > 0) ? minor_len : 1;

2198 ((
UResour˚BundÀ
 *)
ªsour˚BundÀ
)->
fVîsi⁄
 = (*)
	`u¥v_mÆloc
(1 + 
Àn
);

2200 i‡(((
UResour˚BundÀ
 *)
ªsour˚BundÀ
)->
fVîsi⁄
 =
NULL
) {

2201  
NULL
;

2204 if(
mö‹_Àn
 > 0) {

2205 
	`u_UCh¨sToCh¨s
(
mö‹_vîsi⁄
, 
ªsour˚BundÀ
->
fVîsi⁄
 , 
mö‹_Àn
);

2206 
ªsour˚BundÀ
->
fVîsi⁄
[
Àn
] = '\0';

2209 
	`u¥v_°r˝y
(
ªsour˚BundÀ
->
fVîsi⁄
, 
kDeÁu…Mö‹Vîsi⁄
);

2213  
ªsour˚BundÀ
->
fVîsi⁄
;

2214 
	}
}

2216 
U_CAPI
 c⁄° * 
U_EXPORT2


2217 
	$uªs_gëVîsi⁄Numbî
(c⁄° 
UResour˚BundÀ
* 
ªsour˚BundÀ
)

2219  
	`uªs_gëVîsi⁄NumbîI¡î«l
(
ªsour˚BundÀ
);

2220 
	}
}

2222 
U_CAPI
 
U_EXPORT2
 
	$uªs_gëVîsi⁄
(c⁄° 
UResour˚BundÀ
* 
ªsB
, 
UVîsi⁄Info
 
vîsi⁄Info
) {

2223 i‡(!
ªsB
) ;

2225 
	`u_vîsi⁄FromSåög
(
vîsi⁄Info
, 
	`uªs_gëVîsi⁄NumbîI¡î«l
(
ªsB
));

2226 
	}
}

2229 
	#INDEX_LOCALE_NAME
 "ªs_ödex"

	)

2230 
	#INDEX_TAG
 "In°ÆÀdLoˇÀs"

	)

2231 
	#DEFAULT_TAG
 "deÁu…"

	)

2233 #i‡
deföed
(
URES_TREE_DEBUG
)

2234 
	~<°dio.h
>

2237 
	sULoˇÀsC⁄ãxt
 {

2238 
UResour˚BundÀ
 
	mö°ÆÀd
;

2239 
UResour˚BundÀ
 
	mcuº
;

2240 } 
	tULoˇÀsC⁄ãxt
;

2242 
U_CALLCONV


2243 
	$uªs_loc_˛o£LoˇÀs
(
UEnumî©i⁄
 *
íumî©‹
) {

2244 
ULoˇÀsC⁄ãxt
 *
˘x
 = (ULoˇÀsC⁄ãxà*)
íumî©‹
->
c⁄ãxt
;

2245 
	`uªs_˛o£
(&
˘x
->
cuº
);

2246 
	`uªs_˛o£
(&
˘x
->
ö°ÆÀd
);

2247 
	`u¥v_‰ì
(
˘x
);

2248 
	`u¥v_‰ì
(
íumî©‹
);

2249 
	}
}

2251 
öt32_t
 
U_CALLCONV


2252 
	$uªs_loc_cou¡LoˇÀs
(
UEnumî©i⁄
 *
í
, 
UEº‹Code
 *
°©us
) {

2253 
ULoˇÀsC⁄ãxt
 *
˘x
 = (ULoˇÀsC⁄ãxà*)
í
->
c⁄ãxt
;

2254  
	`uªs_gëSize
(&
˘x
->
ö°ÆÀd
);

2255 
	}
}

2257 c⁄° * 
U_CALLCONV


2258 
	$uªs_loc_√xtLoˇÀ
(
UEnumî©i⁄
* 
í
,

2259 
öt32_t
* 
ªsu…Lígth
,

2260 
UEº‹Code
* 
°©us
) {

2261 
ULoˇÀsC⁄ãxt
 *
˘x
 = (ULoˇÀsC⁄ãxà*)
í
->
c⁄ãxt
;

2262 
UResour˚BundÀ
 *
ªs
 = &(
˘x
->
ö°ÆÀd
);

2263 
UResour˚BundÀ
 *
k
 = 
NULL
;

2264 c⁄° *
ªsu…
 = 
NULL
;

2265 
öt32_t
 
Àn
 = 0;

2266 if(
	`uªs_hasNext
(
ªs
Ë&& (
k
 = 
	`uªs_gëNextResour˚
‘es, &
˘x
->
cuº
, 
°©us
))) {

2267 
ªsu…
 = 
	`uªs_gëKey
(
k
);

2268 
Àn
 = (
öt32_t
)
	`u¥v_°æí
(
ªsu…
);

2270 i‡(
ªsu…Lígth
) {

2271 *
ªsu…Lígth
 = 
Àn
;

2273  
ªsu…
;

2274 
	}
}

2276 
U_CALLCONV


2277 
	$uªs_loc_ª£tLoˇÀs
(
UEnumî©i⁄
* 
í
,

2278 
UEº‹Code
* 
°©us
) {

2279 
UResour˚BundÀ
 *
ªs
 = &((
ULoˇÀsC⁄ãxt
 *)
í
->
c⁄ãxt
)->
ö°ÆÀd
;

2280 
	`uªs_ª£tIãøt‹
(
ªs
);

2281 
	}
}

2284 c⁄° 
UEnumî©i⁄
 
	ggLoˇÀsEnum
 = {

2285 
NULL
,

2286 
NULL
,

2287 
uªs_loc_˛o£LoˇÀs
,

2288 
uªs_loc_cou¡LoˇÀs
,

2289 
uíum_u√xtDeÁu…
,

2290 
uªs_loc_√xtLoˇÀ
,

2291 
uªs_loc_ª£tLoˇÀs


2295 
U_CAPI
 
UEnumî©i⁄
* 
U_EXPORT2


2296 
	$uªs_›íAvaûabÀLoˇÀs
(c⁄° *
∑th
, 
UEº‹Code
 *
°©us
)

2298 
UResour˚BundÀ
 *
idx
 = 
NULL
;

2299 
UEnumî©i⁄
 *
í
 = 
NULL
;

2300 
ULoˇÀsC⁄ãxt
 *
myC⁄ãxt
 = 
NULL
;

2302 if(
	`U_FAILURE
(*
°©us
)) {

2303  
NULL
;

2305 
myC⁄ãxt
 = 
	`u¥v_mÆloc
((
ULoˇÀsC⁄ãxt
));

2306 
í
 = (
UEnumî©i⁄
 *)
	`u¥v_mÆloc
((UEnumeration));

2307 if(!
í
 || !
myC⁄ãxt
) {

2308 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

2309 
	`u¥v_‰ì
(
í
);

2310 
	`u¥v_‰ì
(
myC⁄ãxt
);

2311  
NULL
;

2313 
	`u¥v_mem˝y
(
í
, &
gLoˇÀsEnum
, (
UEnumî©i⁄
));

2315 
	`uªs_öôSèckObje˘
(&
myC⁄ãxt
->
ö°ÆÀd
);

2316 
	`uªs_öôSèckObje˘
(&
myC⁄ãxt
->
cuº
);

2317 
idx
 = 
	`uªs_›íDúe˘
(
∑th
, 
INDEX_LOCALE_NAME
, 
°©us
);

2318 
	`uªs_gëByKey
(
idx
, 
INDEX_TAG
, &
myC⁄ãxt
->
ö°ÆÀd
, 
°©us
);

2319 if(
	`U_SUCCESS
(*
°©us
)) {

2320 #i‡
	`deföed
(
URES_TREE_DEBUG
)

2321 
	`Ârötf
(
°dîr
, "Got %s::%s::[%s] : %s\n",

2322 
∑th
, 
INDEX_LOCALE_NAME
, 
INDEX_TAG
, 
	`uªs_gëKey
(&
myC⁄ãxt
->
ö°ÆÀd
));

2324 
í
->
c⁄ãxt
 = 
myC⁄ãxt
;

2326 #i‡
	`deföed
(
URES_TREE_DEBUG
)

2327 
	`Ârötf
(
°dîr
, "%†›í faûed - %s\n", 
∑th
, 
	`u_îr‹Name
(*
°©us
));

2329 
	`uªs_˛o£
(&
myC⁄ãxt
->
ö°ÆÀd
);

2330 
	`u¥v_‰ì
(
myC⁄ãxt
);

2331 
	`u¥v_‰ì
(
í
);

2332 
í
 = 
NULL
;

2335 
	`uªs_˛o£
(
idx
);

2337  
í
;

2338 
	}
}

2340 
UBoﬁ
 
	$isLoˇÀInLi°
(
UEnumî©i⁄
 *
locEnum
, c⁄° *
locToSórch
, 
UEº‹Code
 *
°©us
) {

2341 c⁄° *
loc
;

2342 (
loc
 = 
	`uíum_√xt
(
locEnum
, 
NULL
, 
°©us
)) != NULL) {

2343 i‡(
	`u¥v_°rcmp
(
loc
, 
locToSórch
) == 0) {

2344  
TRUE
;

2347  
FALSE
;

2348 
	}
}

2350 
U_CAPI
 
öt32_t
 
U_EXPORT2


2351 
	$uªs_gëFun˘i⁄ÆEquivÆít
(*
ªsu…
, 
öt32_t
 
ªsu…C≠acôy
,

2352 c⁄° *
∑th
, c⁄° *
ªsName
, c⁄° *
keyw‹d
, c⁄° *
locid
,

2353 
UBoﬁ
 *
isAvaûabÀ
, UBoﬁ 
omôDeÁu…
, 
UEº‹Code
 *
°©us
)

2355 
kwVÆ
[1024] = "";

2356 
defVÆ
[1024] = "";

2357 
defLoc
[1024] = "";

2358 
ba£
[1024] = "";

2359 
found
[1024];

2360 
∑ª¡
[1024];

2361 
fuŒ
[1024] = "";

2362 
UResour˚BundÀ
 
bund1
, 
bund2
;

2363 
UResour˚BundÀ
 *
ªs
 = 
NULL
;

2364 
UEº‹Code
 
subSètus
 = 
U_ZERO_ERROR
;

2365 
öt32_t
 
Àngth
 = 0;

2366 if(
	`U_FAILURE
(*
°©us
))  0;

2367 
	`uloc_gëKeyw‹dVÆue
(
locid
, 
keyw‹d
, 
kwVÆ
, 1024-1,&
subSètus
);

2368 if(!
	`u¥v_°rcmp
(
kwVÆ
, 
DEFAULT_TAG
)) {

2369 
kwVÆ
[0]=0;

2371 
	`uloc_gëBa£Name
(
locid
, 
ba£
, 1024-1,&
subSètus
);

2372 #i‡
	`deföed
(
URES_TREE_DEBUG
)

2373 
	`Ârötf
(
°dîr
, "getFunctionalEquivalent: \"%s\" [%s=%s] in %s - %s\n",

2374 
locid
, 
keyw‹d
, 
kwVÆ
, 
ba£
, 
	`u_îr‹Name
(
subSètus
));

2376 
	`uªs_öôSèckObje˘
(&
bund1
);

2377 
	`uªs_öôSèckObje˘
(&
bund2
);

2380 
	`u¥v_°r˝y
(
∑ª¡
, 
ba£
);

2381 
	`u¥v_°r˝y
(
found
, 
ba£
);

2383 if(
isAvaûabÀ
) {

2384 
UEnumî©i⁄
 *
locEnum
 = 
	`uªs_›íAvaûabÀLoˇÀs
(
∑th
, &
subSètus
);

2385 *
isAvaûabÀ
 = 
TRUE
;

2386 i‡(
	`U_SUCCESS
(
subSètus
)) {

2387 *
isAvaûabÀ
 = 
	`isLoˇÀInLi°
(
locEnum
, 
∑ª¡
, &
subSètus
);

2389 
	`uíum_˛o£
(
locEnum
);

2392 if(
	`U_FAILURE
(
subSètus
)) {

2393 *
°©us
 = 
subSètus
;

2398 
subSètus
 = 
U_ZERO_ERROR
;

2399 
ªs
 = 
	`uªs_›í
(
∑th
, 
∑ª¡
, &
subSètus
);

2400 if(((
subSètus
 =
U_USING_FALLBACK_WARNING
) ||

2401 (
subSètus
 =
U_USING_DEFAULT_WARNING
)Ë&& 
isAvaûabÀ
)

2403 *
isAvaûabÀ
 = 
FALSE
;

2405 
isAvaûabÀ
 = 
NULL
;

2407 #i‡
	`deföed
(
URES_TREE_DEBUG
)

2408 
	`Ârötf
(
°dîr
, "%s;%†-> %†[%s]\n", 
∑th
?∑th:"ICUDATA", 
∑ª¡
, 
	`u_îr‹Name
(
subSètus
), 
	`uªs_gëLoˇÀ
(
ªs
, &subStatus));

2410 if(
	`U_FAILURE
(
subSètus
)) {

2411 *
°©us
 = 
subSètus
;

2412 } if(
subSètus
 =
U_ZERO_ERROR
) {

2413 
	`uªs_gëByKey
(
ªs
,
ªsName
,&
bund1
, &
subSètus
);

2414 if(
subSètus
 =
U_ZERO_ERROR
) {

2415 c⁄° 
UCh¨
 *
defU°r
;

2416 
öt32_t
 
defLí
;

2418 #i‡
	`deföed
(
URES_TREE_DEBUG
)

2419 
	`Ârötf
(
°dîr
, "%s;%s :Üoaded default -> %s\n",

2420 
∑th
?∑th:"ICUDATA", 
∑ª¡
, 
	`u_îr‹Name
(
subSètus
));

2422 
defU°r
 = 
	`uªs_gëSåögByKey
(&
bund1
, 
DEFAULT_TAG
, &
defLí
, &
subSètus
);

2423 if(
	`U_SUCCESS
(
subSètus
Ë&& 
defLí
) {

2424 
	`u_UCh¨sToCh¨s
(
defU°r
, 
defVÆ
, 
	`u_°æí
(defUstr));

2425 #i‡
	`deföed
(
URES_TREE_DEBUG
)

2426 
	`Ârötf
(
°dîr
, "%s;%s -> default %s=%s, %s\n",

2427 
∑th
?∑th:"ICUDATA", 
∑ª¡
, 
keyw‹d
, 
defVÆ
, 
	`u_îr‹Name
(
subSètus
));

2429 
	`u¥v_°r˝y
(
defLoc
, 
∑ª¡
);

2430 if(
kwVÆ
[0]==0) {

2431 
	`u¥v_°r˝y
(
kwVÆ
, 
defVÆ
);

2432 #i‡
	`deföed
(
URES_TREE_DEBUG
)

2433 
	`Ârötf
(
°dîr
, "%s;%s -> kwVal = %s\n",

2434 
∑th
?∑th:"ICUDATA", 
∑ª¡
, 
keyw‹d
, 
kwVÆ
);

2441 
subSètus
 = 
U_ZERO_ERROR
;

2443 i‡(
ªs
 !
NULL
) {

2444 
	`u¥v_°r˝y
(
found
, 
	`uªs_gëLoˇÀByTy≥
(
ªs
, 
ULOC_VALID_LOCALE
, &
subSètus
));

2447 
	`uloc_gëP¨ít
(
found
,
∑ª¡
,’¨ít),&
subSètus
);

2448 
	`uªs_˛o£
(
ªs
);

2449 } !
defVÆ
[0] && *
found
 && 
	`u¥v_°rcmp
(found, "roŸ"Ë!0 && 
	`U_SUCCESS
(*
°©us
));

2452 
	`u¥v_°r˝y
(
∑ª¡
, 
ba£
);

2453 
	`u¥v_°r˝y
(
found
, 
ba£
);

2456 
subSètus
 = 
U_ZERO_ERROR
;

2457 
ªs
 = 
	`uªs_›í
(
∑th
, 
∑ª¡
, &
subSètus
);

2458 if((
subSètus
 =
U_USING_FALLBACK_WARNING
Ë&& 
isAvaûabÀ
) {

2459 *
isAvaûabÀ
 = 
FALSE
;

2461 
isAvaûabÀ
 = 
NULL
;

2463 #i‡
	`deföed
(
URES_TREE_DEBUG
)

2464 
	`Ârötf
(
°dîr
, "%s;%s -> %s (looking for %s)\n",

2465 
∑th
?∑th:"ICUDATA", 
∑ª¡
, 
	`u_îr‹Name
(
subSètus
), 
kwVÆ
);

2467 if(
	`U_FAILURE
(
subSètus
)) {

2468 *
°©us
 = 
subSètus
;

2469 } if(
subSètus
 =
U_ZERO_ERROR
) {

2470 
	`uªs_gëByKey
(
ªs
,
ªsName
,&
bund1
, &
subSètus
);

2471 #i‡
	`deföed
(
URES_TREE_DEBUG
)

2472  
	`Ârötf
(
°dîr
,"@%d [%s] %s\n", 
__LINE__
, 
ªsName
, 
	`u_îr‹Name
(
subSètus
));

2474 if(
subSètus
 =
U_ZERO_ERROR
) {

2475 
	`uªs_gëByKey
(&
bund1
, 
kwVÆ
, &
bund2
, &
subSètus
);

2476 #i‡
	`deföed
(
URES_TREE_DEBUG
)

2477  
	`Ârötf
(
°dîr
,"@%d [%s] %s\n", 
__LINE__
, 
kwVÆ
, 
	`u_îr‹Name
(
subSètus
));

2479 if(
subSètus
 =
U_ZERO_ERROR
) {

2480 #i‡
	`deföed
(
URES_TREE_DEBUG
)

2481 
	`Ârötf
(
°dîr
, "%s;%s -> full0 %s=%s, %s\n",

2482 
∑th
?∑th:"ICUDATA", 
∑ª¡
, 
keyw‹d
, 
kwVÆ
, 
	`u_îr‹Name
(
subSètus
));

2484 
	`u¥v_°r˝y
(
fuŒ
, 
∑ª¡
);

2485 if(*
fuŒ
 == 0) {

2486 
	`u¥v_°r˝y
(
fuŒ
, "root");

2489 if(
	`u¥v_°æí
(
defLoc
Ë> u¥v_°æí(
fuŒ
)) {

2490 c⁄° 
UCh¨
 *
defU°r
;

2491 
öt32_t
 
defLí
;

2493 #i‡
	`deföed
(
URES_TREE_DEBUG
)

2494 
	`Ârötf
(
°dîr
, "%s;%s ->Ñecalculating Default0\n",

2495 
∑th
?∑th:"ICUDATA", 
fuŒ
);

2497 
defU°r
 = 
	`uªs_gëSåögByKey
(&
bund1
, 
DEFAULT_TAG
, &
defLí
, &
subSètus
);

2498 if(
	`U_SUCCESS
(
subSètus
Ë&& 
defLí
) {

2499 
	`u_UCh¨sToCh¨s
(
defU°r
, 
defVÆ
, 
	`u_°æí
(defUstr));

2500 #i‡
	`deföed
(
URES_TREE_DEBUG
)

2501 
	`Ârötf
(
°dîr
, "%s;%s -> default0 %s=%s, %s\n",

2502 
∑th
?∑th:"ICUDATA", 
fuŒ
, 
keyw‹d
, 
defVÆ
, 
	`u_îr‹Name
(
subSètus
));

2504 
	`u¥v_°r˝y
(
defLoc
, 
fuŒ
);

2507 #i‡
	`deföed
(
URES_TREE_DEBUG
)

2509 
	`Ârötf
(
°dîr
, "Nÿåim0, %†<%s\n", 
defLoc
, 
fuŒ
);

2513 #i‡
	`deföed
(
URES_TREE_DEBUG
)

2514 
	`Ârötf
(
°dîr
, "err=%s in %sÜooking for %s\n",

2515 
	`u_îr‹Name
(
subSètus
), 
∑ª¡
, 
kwVÆ
);

2521 
subSètus
 = 
U_ZERO_ERROR
;

2523 
	`u¥v_°r˝y
(
found
, 
∑ª¡
);

2524 
	`uloc_gëP¨ít
(
found
,
∑ª¡
,1023,&
subSètus
);

2525 
	`uªs_˛o£
(
ªs
);

2526 } !
fuŒ
[0] && *
found
 && 
	`U_SUCCESS
(*
°©us
));

2528 if((
fuŒ
[0]==0Ë&& 
	`u¥v_°rcmp
(
kwVÆ
, 
defVÆ
)) {

2529 #i‡
	`deföed
(
URES_TREE_DEBUG
)

2530 
	`Ârötf
(
°dîr
, "FaûedÅÿloˇã kw %†-Åry deÁu… %s\n", 
kwVÆ
, 
defVÆ
);

2532 
	`u¥v_°r˝y
(
kwVÆ
, 
defVÆ
);

2533 
	`u¥v_°r˝y
(
∑ª¡
, 
ba£
);

2534 
	`u¥v_°r˝y
(
found
, 
ba£
);

2537 
subSètus
 = 
U_ZERO_ERROR
;

2538 
ªs
 = 
	`uªs_›í
(
∑th
, 
∑ª¡
, &
subSètus
);

2539 if((
subSètus
 =
U_USING_FALLBACK_WARNING
Ë&& 
isAvaûabÀ
) {

2540 *
isAvaûabÀ
 = 
FALSE
;

2542 
isAvaûabÀ
 = 
NULL
;

2544 #i‡
	`deföed
(
URES_TREE_DEBUG
)

2545 
	`Ârötf
(
°dîr
, "%s;%s -> %s (looking for default %s)\n",

2546 
∑th
?∑th:"ICUDATA", 
∑ª¡
, 
	`u_îr‹Name
(
subSètus
), 
kwVÆ
);

2548 if(
	`U_FAILURE
(
subSètus
)) {

2549 *
°©us
 = 
subSètus
;

2550 } if(
subSètus
 =
U_ZERO_ERROR
) {

2551 
	`uªs_gëByKey
(
ªs
,
ªsName
,&
bund1
, &
subSètus
);

2552 if(
subSètus
 =
U_ZERO_ERROR
) {

2553 
	`uªs_gëByKey
(&
bund1
, 
kwVÆ
, &
bund2
, &
subSètus
);

2554 if(
subSètus
 =
U_ZERO_ERROR
) {

2555 #i‡
	`deföed
(
URES_TREE_DEBUG
)

2556 
	`Ârötf
(
°dîr
, "%s;%†-> fuŒ1 %s=%s, %s\n", 
∑th
?path:"ICUDATA",

2557 
∑ª¡
, 
keyw‹d
, 
kwVÆ
, 
	`u_îr‹Name
(
subSètus
));

2559 
	`u¥v_°r˝y
(
fuŒ
, 
∑ª¡
);

2560 if(*
fuŒ
 == 0) {

2561 
	`u¥v_°r˝y
(
fuŒ
, "root");

2565 if(
	`u¥v_°æí
(
defLoc
Ë> u¥v_°æí(
fuŒ
)) {

2566 c⁄° 
UCh¨
 *
defU°r
;

2567 
öt32_t
 
defLí
;

2569 #i‡
	`deföed
(
URES_TREE_DEBUG
)

2570 
	`Ârötf
(
°dîr
, "%s;%s ->Ñecalculating Default1\n",

2571 
∑th
?∑th:"ICUDATA", 
fuŒ
);

2573 
defU°r
 = 
	`uªs_gëSåögByKey
(&
bund1
, 
DEFAULT_TAG
, &
defLí
, &
subSètus
);

2574 if(
	`U_SUCCESS
(
subSètus
Ë&& 
defLí
) {

2575 
	`u_UCh¨sToCh¨s
(
defU°r
, 
defVÆ
, 
	`u_°æí
(defUstr));

2576 #i‡
	`deföed
(
URES_TREE_DEBUG
)

2577 
	`Ârötf
(
°dîr
, "%s;%s -> default %s=%s, %s\n",

2578 
∑th
?∑th:"ICUDATA", 
fuŒ
, 
keyw‹d
, 
defVÆ
, 
	`u_îr‹Name
(
subSètus
));

2580 
	`u¥v_°r˝y
(
defLoc
, 
fuŒ
);

2583 #i‡
	`deföed
(
URES_TREE_DEBUG
)

2585 
	`Ârötf
(
°dîr
, "Nÿåim1, %†<%s\n", 
defLoc
, 
fuŒ
);

2591 
subSètus
 = 
U_ZERO_ERROR
;

2593 
	`u¥v_°r˝y
(
found
, 
∑ª¡
);

2594 
	`uloc_gëP¨ít
(
found
,
∑ª¡
,1023,&
subSètus
);

2595 
	`uªs_˛o£
(
ªs
);

2596 } !
fuŒ
[0] && *
found
 && 
	`U_SUCCESS
(*
°©us
));

2599 if(
	`U_SUCCESS
(*
°©us
)) {

2600 if(!
fuŒ
[0]) {

2601 #i‡
	`deföed
(
URES_TREE_DEBUG
)

2602 
	`Ârötf
(
°dîr
, "Stû»couldÇŸÜﬂd keyw‹d %s=%s\n", 
keyw‹d
, 
kwVÆ
);

2604 *
°©us
 = 
U_MISSING_RESOURCE_ERROR
;

2605 } if(
omôDeÁu…
) {

2606 #i‡
	`deföed
(
URES_TREE_DEBUG
)

2607 
	`Ârötf
(
°dîr
,"Trim? fuŒ=%s, defLoc=%s, found=%s\n", 
fuŒ
, 
defLoc
, 
found
);

2609 if(
	`u¥v_°æí
(
defLoc
Ë<u¥v_°æí(
fuŒ
)) {

2611 if(!
	`u¥v_°rcmp
(
kwVÆ
, 
defVÆ
)) {

2613 #i‡
	`deföed
(
URES_TREE_DEBUG
)

2614 
	`Ârötf
(
°dîr
, "Removög u¬ìded v¨ %s=%s\n", 
keyw‹d
, 
kwVÆ
);

2616 
kwVÆ
[0]=0;

2620 
	`u¥v_°r˝y
(
found
, 
fuŒ
);

2621 if(
kwVÆ
[0]) {

2622 
	`u¥v_°rˇt
(
found
, "@");

2623 
	`u¥v_°rˇt
(
found
, 
keyw‹d
);

2624 
	`u¥v_°rˇt
(
found
, "=");

2625 
	`u¥v_°rˇt
(
found
, 
kwVÆ
);

2626 } if(!
omôDeÁu…
) {

2627 
	`u¥v_°rˇt
(
found
, "@");

2628 
	`u¥v_°rˇt
(
found
, 
keyw‹d
);

2629 
	`u¥v_°rˇt
(
found
, "=");

2630 
	`u¥v_°rˇt
(
found
, 
defVÆ
);

2635 
	`uªs_˛o£
(&
bund1
);

2636 
	`uªs_˛o£
(&
bund2
);

2638 
Àngth
 = (
öt32_t
)
	`u¥v_°æí
(
found
);

2640 if(
	`U_SUCCESS
(*
°©us
)) {

2641 
öt32_t
 
c›yLígth
 = 
	`u¥v_mö
(
Àngth
, 
ªsu…C≠acôy
);

2642 if(
c›yLígth
>0) {

2643 
	`u¥v_°∫˝y
(
ªsu…
, 
found
, 
c›yLígth
);

2645 if(
Àngth
 == 0) {

2646 *
°©us
 = 
U_MISSING_RESOURCE_ERROR
;

2649 
Àngth
 = 0;

2650 
ªsu…
[0]=0;

2652  
	`u_ãrmö©eCh¨s
(
ªsu…
, 
ªsu…C≠acôy
, 
Àngth
, 
°©us
);

2653 
	}
}

2655 
U_CAPI
 
UEnumî©i⁄
* 
U_EXPORT2


2656 
	$uªs_gëKeyw‹dVÆues
(c⁄° *
∑th
, c⁄° *
keyw‹d
, 
UEº‹Code
 *
°©us
)

2658 
	#VALUES_BUF_SIZE
 2048

	)

2659 
	#VALUES_LIST_SIZE
 512

	)

2661 
vÆuesBuf
[
VALUES_BUF_SIZE
];

2662 
öt32_t
 
vÆuesIndex
 = 0;

2663 c⁄° *
vÆuesLi°
[
VALUES_LIST_SIZE
];

2664 
öt32_t
 
vÆuesCou¡
 = 0;

2666 c⁄° *
loˇÀ
;

2667 
öt32_t
 
locLí
;

2669 
UEnumî©i⁄
 *
locs
 = 
NULL
;

2671 
UResour˚BundÀ
 
ôem
;

2672 
UResour˚BundÀ
 
subIãm
;

2674 
	`uªs_öôSèckObje˘
(&
ôem
);

2675 
	`uªs_öôSèckObje˘
(&
subIãm
);

2676 
locs
 = 
	`uªs_›íAvaûabÀLoˇÀs
(
∑th
, 
°©us
);

2678 if(
	`U_FAILURE
(*
°©us
)) {

2679 
	`uªs_˛o£
(&
ôem
);

2680 
	`uªs_˛o£
(&
subIãm
);

2681  
NULL
;

2684 
vÆuesBuf
[0]=0;

2685 
vÆuesBuf
[1]=0;

2687 (
loˇÀ
 = 
	`uíum_√xt
(
locs
, &
locLí
, 
°©us
))) {

2688 
UResour˚BundÀ
 *
bund
 = 
NULL
;

2689 
UResour˚BundÀ
 *
subPå
 = 
NULL
;

2690 
UEº‹Code
 
subSètus
 = 
U_ZERO_ERROR
;

2691 
bund
 = 
	`uªs_›íDúe˘
(
∑th
, 
loˇÀ
, &
subSètus
);

2693 #i‡
	`deföed
(
URES_TREE_DEBUG
)

2694 if(!
bund
 || 
	`U_FAILURE
(
subSètus
)) {

2695 
	`Ârötf
(
°dîr
, "%s-%s values: Can't open %sÜocale - skipping. (%s)\n",

2696 
∑th
?∑th:"<ICUDATA>", 
keyw‹d
, 
loˇÀ
, 
	`u_îr‹Name
(
subSètus
));

2700 
	`uªs_gëByKey
(
bund
, 
keyw‹d
, &
ôem
, &
subSètus
);

2702 if(!
bund
 || 
	`U_FAILURE
(
subSètus
)) {

2703 #i‡
	`deföed
(
URES_TREE_DEBUG
)

2704 
	`Ârötf
(
°dîr
, "%s-%s values: Can't find in %s - skipping. (%s)\n",

2705 
∑th
?∑th:"<ICUDATA>", 
keyw‹d
, 
loˇÀ
, 
	`u_îr‹Name
(
subSètus
));

2707 
	`uªs_˛o£
(
bund
);

2708 
bund
 = 
NULL
;

2712 (
subPå
 = 
	`uªs_gëNextResour˚
(&
ôem
,&
subIãm
,&
subSètus
))

2713 && 
	`U_SUCCESS
(
subSètus
)) {

2714 c⁄° *
k
;

2715 
öt32_t
 
i
;

2716 
k
 = 
	`uªs_gëKey
(
subPå
);

2718 #i‡
	`deföed
(
URES_TREE_DEBUG
)

2721 
i
=0;
k
&&i<
vÆuesCou¡
;i++) {

2722 if(!
	`u¥v_°rcmp
(
vÆuesLi°
[
i
],
k
)) {

2723 
k
 = 
NULL
;

2726 if(
k
 && *k) {

2727 
öt32_t
 
kLí
 = (öt32_t)
	`u¥v_°æí
(
k
);

2728 if(!
	`u¥v_°rcmp
(
k
,
DEFAULT_TAG
)) {

2731 if((
vÆuesCou¡
 >(
VALUES_LIST_SIZE
-1)) ||

2732 ((
vÆuesIndex
+
kLí
+1+1Ë>
VALUES_BUF_SIZE
)) {

2733 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

2735 
	`u¥v_°r˝y
(
vÆuesBuf
+
vÆuesIndex
, 
k
);

2736 
vÆuesLi°
[
vÆuesCou¡
++] = 
vÆuesBuf
+
vÆuesIndex
;

2737 
vÆuesIndex
 +
kLí
;

2738 #i‡
	`deföed
(
URES_TREE_DEBUG
)

2739 
	`Ârötf
(
°dîr
, "%s | %s | %s | [%s] (UNIQUE)\n",

2740 
∑th
?∑th:"<ICUDATA>", 
keyw‹d
, 
loˇÀ
, 
k
);

2742 
vÆuesBuf
[
vÆuesIndex
++] = 0;

2746 
	`uªs_˛o£
(
bund
);

2748 
vÆuesBuf
[
vÆuesIndex
++] = 0;

2750 
	`uªs_˛o£
(&
ôem
);

2751 
	`uªs_˛o£
(&
subIãm
);

2752 
	`uíum_˛o£
(
locs
);

2753 #i‡
	`deföed
(
URES_TREE_DEBUG
)

2754 
	`Ârötf
(
°dîr
, "%s: sizê%d, #%d\n", 
	`u_îr‹Name
(*
°©us
),

2755 
vÆuesIndex
, 
vÆuesCou¡
);

2757  
	`uloc_›íKeyw‹dLi°
(
vÆuesBuf
, 
vÆuesIndex
, 
°©us
);

2758 
	}
}

2761 
U_INTERNAL
 
UBoﬁ
 
U_EXPORT2


2762 
	$uªs_equÆ
(c⁄° 
UResour˚BundÀ
* 
ªs1
, c⁄° UResour˚BundÀ* 
ªs2
){

2763 if(
ªs1
==
NULL
 || 
ªs2
==NULL){

2764  
ªs1
==
ªs2
;

2766 if(
ªs1
->
fKey
==
NULL
|| 
ªs2
->fKey==NULL){

2767  (
ªs1
->
fKey
==
ªs2
->fKey);

2769 if(
	`u¥v_°rcmp
(
ªs1
->
fKey
, 
ªs2
->fKey)!=0){

2770  
FALSE
;

2773 if(
	`u¥v_°rcmp
(
ªs1
->
fD©a
->
fName
, 
ªs2
->fData->fName)!=0){

2774  
FALSE
;

2776 if(
ªs1
->
fD©a
->
fP©h
 =
NULL
|| 
ªs2
->fData->fPath==NULL){

2777  (
ªs1
->
fD©a
->
fP©h
 =
ªs2
->fData->fPath);

2779 if(
	`u¥v_°rcmp
(
ªs1
->
fD©a
->
fP©h
, 
ªs2
->fData->fPath)!=0){

2780  
FALSE
;

2783 if(
	`u¥v_°rcmp
(
ªs1
->
fD©a
->
fP¨ít
->
fName
, 
ªs2
->fData->fParent->fName)!=0){

2784  
FALSE
;

2786 if(
	`u¥v_°rcmp
(
ªs1
->
fD©a
->
fP¨ít
->
fP©h
, 
ªs2
->fData->fParent->fPath)!=0){

2787  
FALSE
;

2789 if(
	`u¥v_°∫cmp
(
ªs1
->
fResP©h
, 
ªs2
->fResP©h,Ñes1->
fResP©hLí
)!=0){

2790  
FALSE
;

2792 if(
ªs1
->
fRes
 !
ªs2
->fRes){

2793  
FALSE
;

2795  
TRUE
;

2796 
	}
}

2797 
U_INTERNAL
 
UResour˚BundÀ
* 
U_EXPORT2


2798 
	$uªs_˛⁄e
(c⁄° 
UResour˚BundÀ
* 
ªs
, 
UEº‹Code
* 
°©us
){

2799 
UResour˚BundÀ
* 
bundÀ
 = 
NULL
;

2800 
UResour˚BundÀ
* 
ªt
 = 
NULL
;

2801 if(
	`U_FAILURE
(*
°©us
Ë|| 
ªs
 =
NULL
){

2802  
NULL
;

2804 
bundÀ
 = 
	`uªs_›í
(
ªs
->
fD©a
->
fP©h
,Ñes->fD©a->
fName
, 
°©us
);

2805 if(
ªs
->
fResP©h
!=
NULL
){

2806 
ªt
 = 
	`uªs_födSubResour˚
(
bundÀ
, 
ªs
->
fResP©h
, 
NULL
, 
°©us
);

2807 
	`uªs_˛o£
(
bundÀ
);

2809 
ªt
 = 
bundÀ
;

2811  
ªt
;

2812 
	}
}

2813 
U_INTERNAL
 c⁄° 
UResour˚BundÀ
* 
U_EXPORT2


2814 
	$uªs_gëP¨ítBundÀ
(c⁄° 
UResour˚BundÀ
* 
ªs
){

2815 if(
ªs
==
NULL
){

2816  
NULL
;

2818  
ªs
->
fP¨ítRes
;

2819 
	}
}

2822 
U_INTERNAL
 
U_EXPORT2


2823 
	$uªs_gëVîsi⁄ByKey
(c⁄° 
UResour˚BundÀ
* 
ªs
, c⁄° *
key
, 
UVîsi⁄Info
 
vî
, 
UEº‹Code
 *
°©us
) {

2824 c⁄° 
UCh¨
 *
°r
;

2825 
öt32_t
 
Àn
;

2826 
°r
 = 
	`uªs_gëSåögByKey
(
ªs
, 
key
, &
Àn
, 
°©us
);

2827 if(
	`U_SUCCESS
(*
°©us
)) {

2828 
	`u_vîsi⁄FromUSåög
(
vî
, 
°r
);

2830 
	}
}

	@uresdata.c

22 
	~"unicode/uty≥s.h
"

23 
	~"unicode/ud©a.h
"

24 
	~"unicode/u°rög.h
"

25 
	~"cmem‹y.h
"

26 
	~"c°rög.h
"

27 
	~"u¨rs‹t.h
"

28 
	~"ud©aswp.h
"

29 
	~"ucﬁ_swp.h
"

30 
	~"uövch¨.h
"

31 
	~"uªsd©a.h
"

32 
	~"uªsimp.h
"

34 
	#LENGTHOF
(
¨øy
Ë(
öt32_t
)(◊ºay)/(◊ºay)[0]))

	)

41 
	#RES_GET_KEY16
(
pResD©a
, 
keyOff£t
) \

42 ((
keyOff£t
)<(
pResD©a
)->
loˇlKeyLimô
 ? \

43 (c⁄° *)(
pResD©a
)->
pRoŸ
+(
keyOff£t
) : \

44 (
pResD©a
)->
poﬁBundÀKeys
+(
keyOff£t
)-’ResD©a)->
loˇlKeyLimô
)

	)

46 
	#RES_GET_KEY32
(
pResD©a
, 
keyOff£t
) \

47 ((
keyOff£t
)>=0 ? \

48 (c⁄° *)(
pResD©a
)->
pRoŸ
+(
keyOff£t
) : \

49 (
pResD©a
)->
poﬁBundÀKeys
+((
keyOff£t
)&0x7fffffff))

	)

51 
	#URESDATA_ITEM_NOT_FOUND
 -1

	)

54 c⁄° 
uöt16_t
 
	ggEm±y16
=0;

55 c⁄° 
öt32_t
 
	ggEm±y32
=0;

57 
öt32_t
 
	mÀngth
;

58 
UCh¨
 
	mnul
;

59 
UCh¨
 
	m∑d
;

60 } 
	ggEm±ySåög
={ 0, 0, 0 };

67 
öt32_t


68 
	$_ªs_födTabÀIãm
(c⁄° 
Resour˚D©a
 *
pResD©a
, c⁄° 
uöt16_t
 *
keyOff£ts
, 
öt32_t
 
Àngth
,

69 c⁄° *
key
, c⁄° **
ªÆKey
) {

70 c⁄° *
èbÀKey
;

71 
öt32_t
 
mid
, 
°¨t
, 
limô
;

72 
ªsu…
;

75 
°¨t
=0;

76 
limô
=
Àngth
;

77 
°¨t
<
limô
) {

78 
mid
 = (
°¨t
 + 
limô
) / 2;

79 
èbÀKey
 = 
	`RES_GET_KEY16
(
pResD©a
, 
keyOff£ts
[
mid
]);

80 i‡(
pResD©a
->
u£N©iveSåcmp
) {

81 
ªsu…
 = 
	`u¥v_°rcmp
(
key
, 
èbÀKey
);

83 
ªsu…
 = 
	`u¥v_com∑ªInvCh¨sAsAscii
(
key
, 
èbÀKey
);

85 i‡(
ªsu…
 < 0) {

86 
limô
 = 
mid
;

87 } i‡(
ªsu…
 > 0) {

88 
°¨t
 = 
mid
 + 1;

91 *
ªÆKey
=
èbÀKey
;

92  
mid
;

95  
URESDATA_ITEM_NOT_FOUND
;

96 
	}
}

98 
öt32_t


99 
	$_ªs_födTabÀ32Iãm
(c⁄° 
Resour˚D©a
 *
pResD©a
, c⁄° 
öt32_t
 *
keyOff£ts
, i¡32_à
Àngth
,

100 c⁄° *
key
, c⁄° **
ªÆKey
) {

101 c⁄° *
èbÀKey
;

102 
öt32_t
 
mid
, 
°¨t
, 
limô
;

103 
ªsu…
;

106 
°¨t
=0;

107 
limô
=
Àngth
;

108 
°¨t
<
limô
) {

109 
mid
 = (
°¨t
 + 
limô
) / 2;

110 
èbÀKey
 = 
	`RES_GET_KEY32
(
pResD©a
, 
keyOff£ts
[
mid
]);

111 i‡(
pResD©a
->
u£N©iveSåcmp
) {

112 
ªsu…
 = 
	`u¥v_°rcmp
(
key
, 
èbÀKey
);

114 
ªsu…
 = 
	`u¥v_com∑ªInvCh¨sAsAscii
(
key
, 
èbÀKey
);

116 i‡(
ªsu…
 < 0) {

117 
limô
 = 
mid
;

118 } i‡(
ªsu…
 > 0) {

119 
°¨t
 = 
mid
 + 1;

122 *
ªÆKey
=
èbÀKey
;

123  
mid
;

126  
URESDATA_ITEM_NOT_FOUND
;

127 
	}
}

131 
UBoﬁ
 
U_CALLCONV


132 
	$isAc˚±abÀ
(*
c⁄ãxt
,

133 c⁄° *
ty≥
, c⁄° *
«me
,

134 c⁄° 
UD©aInfo
 *
pInfo
) {

135 
	`u¥v_mem˝y
(
c⁄ãxt
, 
pInfo
->
f‹m©Vîsi⁄
, 4);

136  (
UBoﬁ
)(

137 
pInfo
->
size
>=20 &&

138 
pInfo
->
isBigEndün
==
U_IS_BIG_ENDIAN
 &&

139 
pInfo
->
ch¨£tFamûy
==
U_CHARSET_FAMILY
 &&

140 
pInfo
->
sizeofUCh¨
==
U_SIZEOF_UCHAR
 &&

141 
pInfo
->
d©aF‹m©
[0]==0x52 &&

142 
pInfo
->
d©aF‹m©
[1]==0x65 &&

143 
pInfo
->
d©aF‹m©
[2]==0x73 &&

144 
pInfo
->
d©aF‹m©
[3]==0x42 &&

145 (
pInfo
->
f‹m©Vîsi⁄
[0]==1 ||ÖInfo->formatVersion[0]==2));

146 
	}
}

151 
	$ªs_öô
(
Resour˚D©a
 *
pResD©a
,

152 
UVîsi⁄Info
 
f‹m©Vîsi⁄
, c⁄° *
öByãs
, 
öt32_t
 
Àngth
,

153 
UEº‹Code
 *
îr‹Code
) {

154 
UResTy≥
 
roŸTy≥
;

157 
pResD©a
->
pRoŸ
=(c⁄° 
öt32_t
 *)
öByãs
;

158 
pResD©a
->
roŸRes
=(
Resour˚
)*pResD©a->
pRoŸ
;

159 
pResD©a
->
p16BôUnôs
=&
gEm±y16
;

162 if(
Àngth
>=0 && (Àngth/4)<((
f‹m©Vîsi⁄
[0]==1 && formatVersion[1]==0) ? 1 : 1+5)) {

163 *
îr‹Code
=
U_INVALID_FORMAT_ERROR
;

164 
	`ªs_u∆ﬂd
(
pResD©a
);

169 
roŸTy≥
=
	`RES_GET_TYPE
(
pResD©a
->
roŸRes
);

170 if(!
	`URES_IS_TABLE
(
roŸTy≥
)) {

171 *
îr‹Code
=
U_INVALID_FORMAT_ERROR
;

172 
	`ªs_u∆ﬂd
(
pResD©a
);

176 if(
f‹m©Vîsi⁄
[0]==1 && formatVersion[1]==0) {

177 
pResD©a
->
loˇlKeyLimô
=0x10000;

180 c⁄° 
öt32_t
 *
ödexes
=
pResD©a
->
pRoŸ
+1;

181 
öt32_t
 
ödexLígth
=
ödexes
[
URES_INDEX_LENGTH
]&0xff;

182 if(
ödexLígth
<=
URES_INDEX_MAX_TABLE_LENGTH
) {

183 *
îr‹Code
=
U_INVALID_FORMAT_ERROR
;

184 
	`ªs_u∆ﬂd
(
pResD©a
);

187 if–
Àngth
>=0 &&

188 (
Àngth
<((1+
ödexLígth
)<<2) ||

189 
Àngth
<(
ödexes
[
URES_INDEX_BUNDLE_TOP
]<<2))

191 *
îr‹Code
=
U_INVALID_FORMAT_ERROR
;

192 
	`ªs_u∆ﬂd
(
pResD©a
);

195 if(
ödexes
[
URES_INDEX_KEYS_TOP
]>(1+
ödexLígth
)) {

196 
pResD©a
->
loˇlKeyLimô
=
ödexes
[
URES_INDEX_KEYS_TOP
]<<2;

198 if(
ödexLígth
>
URES_INDEX_ATTRIBUTES
) {

199 
öt32_t
 
©t
=
ödexes
[
URES_INDEX_ATTRIBUTES
];

200 
pResD©a
->
noFÆlback
=(
UBoﬁ
)(
©t
&
URES_ATT_NO_FALLBACK
);

201 
pResD©a
->
isPoﬁBundÀ
=(
UBoﬁ
)((
©t
&
URES_ATT_IS_POOL_BUNDLE
)!=0);

202 
pResD©a
->
u£sPoﬁBundÀ
=(
UBoﬁ
)((
©t
&
URES_ATT_USES_POOL_BUNDLE
)!=0);

204 if((
pResD©a
->
isPoﬁBundÀ
 ||ÖResD©a->
u£sPoﬁBundÀ
Ë&& 
ödexLígth
<=
URES_INDEX_POOL_CHECKSUM
) {

205 *
îr‹Code
=
U_INVALID_FORMAT_ERROR
;

206 
	`ªs_u∆ﬂd
(
pResD©a
);

209 if–
ödexLígth
>
URES_INDEX_16BIT_TOP
 &&

210 
ödexes
[
URES_INDEX_16BIT_TOP
]>ödexes[
URES_INDEX_KEYS_TOP
]

212 
pResD©a
->
p16BôUnôs
=(c⁄° 
uöt16_t
 *)’ResD©a->
pRoŸ
+
ödexes
[
URES_INDEX_KEYS_TOP
]);

216 if(
f‹m©Vîsi⁄
[0]==1 || 
U_CHARSET_FAMILY
==
U_ASCII_FAMILY
) {

221 
pResD©a
->
u£N©iveSåcmp
=
TRUE
;

223 
	}
}

225 
U_CAPI
 
U_EXPORT2


226 
	$ªs_ªad
(
Resour˚D©a
 *
pResD©a
,

227 c⁄° 
UD©aInfo
 *
pInfo
, c⁄° *
öByãs
, 
öt32_t
 
Àngth
,

228 
UEº‹Code
 *
îr‹Code
) {

229 
UVîsi⁄Info
 
f‹m©Vîsi⁄
;

231 
	`u¥v_mem£t
(
pResD©a
, 0, (
Resour˚D©a
));

232 if(
	`U_FAILURE
(*
îr‹Code
)) {

235 if(!
	`isAc˚±abÀ
(
f‹m©Vîsi⁄
, 
NULL
, NULL, 
pInfo
)) {

236 *
îr‹Code
=
U_INVALID_FORMAT_ERROR
;

239 
	`ªs_öô
(
pResD©a
, 
f‹m©Vîsi⁄
, 
öByãs
, 
Àngth
, 
îr‹Code
);

240 
	}
}

242 
U_CFUNC
 

243 
	$ªs_lﬂd
(
Resour˚D©a
 *
pResD©a
,

244 c⁄° *
∑th
, c⁄° *
«me
, 
UEº‹Code
 *
îr‹Code
) {

245 
UVîsi⁄Info
 
f‹m©Vîsi⁄
;

247 
	`u¥v_mem£t
(
pResD©a
, 0, (
Resour˚D©a
));

250 
pResD©a
->
d©a
=
	`ud©a_›íChoi˚
(
∑th
, "ªs", 
«me
, 
isAc˚±abÀ
, 
f‹m©Vîsi⁄
, 
îr‹Code
);

251 if(
	`U_FAILURE
(*
îr‹Code
)) {

256 
	`ªs_öô
(
pResD©a
, 
f‹m©Vîsi⁄
, 
	`ud©a_gëMem‹y
’ResD©a->
d©a
), -1, 
îr‹Code
);

257 
	}
}

259 
U_CFUNC
 

260 
	$ªs_u∆ﬂd
(
Resour˚D©a
 *
pResD©a
) {

261 if(
pResD©a
->
d©a
!=
NULL
) {

262 
	`ud©a_˛o£
(
pResD©a
->
d©a
);

263 
pResD©a
->
d©a
=
NULL
;

265 
	}
}

267 c⁄° 
öt8_t
 
	ggPublicTy≥s
[
URES_LIMIT
] = {

268 
URES_STRING
,

269 
URES_BINARY
,

270 
URES_TABLE
,

271 
URES_ALIAS
,

273 
URES_TABLE
,

274 
URES_TABLE
,

275 
URES_STRING
,

276 
URES_INT
,

278 
URES_ARRAY
,

279 
URES_ARRAY
,

280 
URES_NONE
,

281 
URES_NONE
,

283 
URES_NONE
,

284 
URES_NONE
,

285 
URES_INT_VECTOR
,

286 
URES_NONE


289 
U_CAPI
 
UResTy≥
 
U_EXPORT2


290 
	$ªs_gëPublicTy≥
(
Resour˚
 
ªs
) {

291  (
UResTy≥
)
gPublicTy≥s
[
	`RES_GET_TYPE
(
ªs
)];

292 
	}
}

294 
U_CAPI
 c⁄° 
UCh¨
 * 
U_EXPORT2


295 
	$ªs_gëSåög
(c⁄° 
Resour˚D©a
 *
pResD©a
, 
Resour˚
 
ªs
, 
öt32_t
 *
pLígth
) {

296 c⁄° 
UCh¨
 *
p
;

297 
uöt32_t
 
off£t
=
	`RES_GET_OFFSET
(
ªs
);

298 
öt32_t
 
Àngth
;

299 if(
	`RES_GET_TYPE
(
ªs
)==
URES_STRING_V2
) {

300 
öt32_t
 
fú°
;

301 
p
=(c⁄° 
UCh¨
 *)(
pResD©a
->
p16BôUnôs
+
off£t
);

302 
fú°
=*
p
;

303 if(!
	`U16_IS_TRAIL
(
fú°
)) {

304 
Àngth
=
	`u_°æí
(
p
);

305 } if(
fú°
<0xdfef) {

306 
Àngth
=
fú°
&0x3ff;

307 ++
p
;

308 } if(
fú°
<0xdfff) {

309 
Àngth
=((
fú°
-0xd„f)<<16)|
p
[1];

310 
p
+=2;

312 
Àngth
=((
öt32_t
)
p
[1]<<16)|p[2];

313 
p
+=3;

315 } if(
ªs
==
off£t
) {

316 c⁄° 
öt32_t
 *
p32

ªs
==0 ? &
gEm±ySåög
.
Àngth
 : 
pResD©a
->
pRoŸ
+res;

317 
Àngth
=*
p32
++;

318 
p
=(c⁄° 
UCh¨
 *)
p32
;

320 
p
=
NULL
;

321 
Àngth
=0;

323 if(
pLígth
) {

324 *
pLígth
=
Àngth
;

326  
p
;

327 
	}
}

329 
U_CAPI
 c⁄° 
UCh¨
 * 
U_EXPORT2


330 
	$ªs_gëAlüs
(c⁄° 
Resour˚D©a
 *
pResD©a
, 
Resour˚
 
ªs
, 
öt32_t
 *
pLígth
) {

331 c⁄° 
UCh¨
 *
p
;

332 
uöt32_t
 
off£t
=
	`RES_GET_OFFSET
(
ªs
);

333 
öt32_t
 
Àngth
;

334 if(
	`RES_GET_TYPE
(
ªs
)==
URES_ALIAS
) {

335 c⁄° 
öt32_t
 *
p32

off£t
==0 ? &
gEm±ySåög
.
Àngth
 : 
pResD©a
->
pRoŸ
+offset;

336 
Àngth
=*
p32
++;

337 
p
=(c⁄° 
UCh¨
 *)
p32
;

339 
p
=
NULL
;

340 
Àngth
=0;

342 if(
pLígth
) {

343 *
pLígth
=
Àngth
;

345  
p
;

346 
	}
}

348 
U_CAPI
 c⁄° 
uöt8_t
 * 
U_EXPORT2


349 
	$ªs_gëBö¨y
(c⁄° 
Resour˚D©a
 *
pResD©a
, 
Resour˚
 
ªs
, 
öt32_t
 *
pLígth
) {

350 c⁄° 
uöt8_t
 *
p
;

351 
uöt32_t
 
off£t
=
	`RES_GET_OFFSET
(
ªs
);

352 
öt32_t
 
Àngth
;

353 if(
	`RES_GET_TYPE
(
ªs
)==
URES_BINARY
) {

354 c⁄° 
öt32_t
 *
p32

off£t
==0 ? &
gEm±y32
 : 
pResD©a
->
pRoŸ
+offset;

355 
Àngth
=*
p32
++;

356 
p
=(c⁄° 
uöt8_t
 *)
p32
;

358 
p
=
NULL
;

359 
Àngth
=0;

361 if(
pLígth
) {

362 *
pLígth
=
Àngth
;

364  
p
;

365 
	}
}

368 
U_CAPI
 c⁄° 
öt32_t
 * 
U_EXPORT2


369 
	$ªs_gëI¡Ve˘‹
(c⁄° 
Resour˚D©a
 *
pResD©a
, 
Resour˚
 
ªs
, 
öt32_t
 *
pLígth
) {

370 c⁄° 
öt32_t
 *
p
;

371 
uöt32_t
 
off£t
=
	`RES_GET_OFFSET
(
ªs
);

372 
öt32_t
 
Àngth
;

373 if(
	`RES_GET_TYPE
(
ªs
)==
URES_INT_VECTOR
) {

374 
p

off£t
==0 ? &
gEm±y32
 : 
pResD©a
->
pRoŸ
+offset;

375 
Àngth
=*
p
++;

377 
p
=
NULL
;

378 
Àngth
=0;

380 if(
pLígth
) {

381 *
pLígth
=
Àngth
;

383  
p
;

384 
	}
}

386 
U_CAPI
 
öt32_t
 
U_EXPORT2


387 
	$ªs_cou¡AºayIãms
(c⁄° 
Resour˚D©a
 *
pResD©a
, 
Resour˚
 
ªs
) {

388 
uöt32_t
 
off£t
=
	`RES_GET_OFFSET
(
ªs
);

389 
	`RES_GET_TYPE
(
ªs
)) {

390 
URES_STRING
:

391 
URES_STRING_V2
:

392 
URES_BINARY
:

393 
URES_ALIAS
:

394 
URES_INT
:

395 
URES_INT_VECTOR
:

397 
URES_ARRAY
:

398 
URES_TABLE32
:

399  
off£t
==0 ? 0 : *(
pResD©a
->
pRoŸ
+offset);

400 
URES_TABLE
:

401  
off£t
==0 ? 0 : *((c⁄° 
uöt16_t
 *)(
pResD©a
->
pRoŸ
+offset));

402 
URES_ARRAY16
:

403 
URES_TABLE16
:

404  
pResD©a
->
p16BôUnôs
[
off£t
];

408 
	}
}

410 
U_CAPI
 
Resour˚
 
U_EXPORT2


411 
	$ªs_gëTabÀIãmByKey
(c⁄° 
Resour˚D©a
 *
pResD©a
, 
Resour˚
 
èbÀ
,

412 
öt32_t
 *
ödexR
, c⁄° **
key
) {

413 
uöt32_t
 
off£t
=
	`RES_GET_OFFSET
(
èbÀ
);

414 
öt32_t
 
Àngth
;

415 
öt32_t
 
idx
;

416 if(
key
 =
NULL
 || *key == NULL) {

417  
RES_BOGUS
;

419 
	`RES_GET_TYPE
(
èbÀ
)) {

420 
URES_TABLE
: {

421 c⁄° 
uöt16_t
 *
p

off£t
==0 ? &
gEm±y16
 : (c⁄° uöt16_à*)(
pResD©a
->
pRoŸ
+offset);

422 
Àngth
=*
p
++;

423 *
ödexR
=
idx
=
	`_ªs_födTabÀIãm
(
pResD©a
, 
p
, 
Àngth
, *
key
, key);

424 if(
idx
>=0) {

425 c⁄° 
Resour˚
 *
p32
=(c⁄° Resour˚ *)(
p
+
Àngth
+(~length&1));

426  
p32
[
idx
];

430 
URES_TABLE16
: {

431 c⁄° 
uöt16_t
 *
p
=
pResD©a
->
p16BôUnôs
+
off£t
;

432 
Àngth
=*
p
++;

433 *
ödexR
=
idx
=
	`_ªs_födTabÀIãm
(
pResD©a
, 
p
, 
Àngth
, *
key
, key);

434 if(
idx
>=0) {

435  
	`URES_MAKE_RESOURCE
(
URES_STRING_V2
, 
p
[
Àngth
+
idx
]);

439 
URES_TABLE32
: {

440 c⁄° 
öt32_t
 *
p

off£t
==0 ? &
gEm±y32
 : 
pResD©a
->
pRoŸ
+offset;

441 
Àngth
=*
p
++;

442 *
ödexR
=
idx
=
	`_ªs_födTabÀ32Iãm
(
pResD©a
, 
p
, 
Àngth
, *
key
, key);

443 if(
idx
>=0) {

444  (
Resour˚
)
p
[
Àngth
+
idx
];

451  
RES_BOGUS
;

452 
	}
}

454 
U_CAPI
 
Resour˚
 
U_EXPORT2


455 
	$ªs_gëTabÀIãmByIndex
(c⁄° 
Resour˚D©a
 *
pResD©a
, 
Resour˚
 
èbÀ
,

456 
öt32_t
 
ödexR
, c⁄° **
key
) {

457 
uöt32_t
 
off£t
=
	`RES_GET_OFFSET
(
èbÀ
);

458 
öt32_t
 
Àngth
;

459 
	`RES_GET_TYPE
(
èbÀ
)) {

460 
URES_TABLE
: {

461 c⁄° 
uöt16_t
 *
p

off£t
==0 ? &
gEm±y16
 : (c⁄° uöt16_à*)(
pResD©a
->
pRoŸ
+offset);

462 
Àngth
=*
p
++;

463 if(
ödexR
<
Àngth
) {

464 c⁄° 
Resour˚
 *
p32
=(c⁄° Resour˚ *)(
p
+
Àngth
+(~length&1));

465 if(
key
!=
NULL
) {

466 *
key
=
	`RES_GET_KEY16
(
pResD©a
, 
p
[
ödexR
]);

468  
p32
[
ödexR
];

472 
URES_TABLE16
: {

473 c⁄° 
uöt16_t
 *
p
=
pResD©a
->
p16BôUnôs
+
off£t
;

474 
Àngth
=*
p
++;

475 if(
ödexR
<
Àngth
) {

476 if(
key
!=
NULL
) {

477 *
key
=
	`RES_GET_KEY16
(
pResD©a
, 
p
[
ödexR
]);

479  
	`URES_MAKE_RESOURCE
(
URES_STRING_V2
, 
p
[
Àngth
+
ödexR
]);

483 
URES_TABLE32
: {

484 c⁄° 
öt32_t
 *
p

off£t
==0 ? &
gEm±y32
 : 
pResD©a
->
pRoŸ
+offset;

485 
Àngth
=*
p
++;

486 if(
ödexR
<
Àngth
) {

487 if(
key
!=
NULL
) {

488 *
key
=
	`RES_GET_KEY32
(
pResD©a
, 
p
[
ödexR
]);

490  (
Resour˚
)
p
[
Àngth
+
ödexR
];

497  
RES_BOGUS
;

498 
	}
}

500 
U_CAPI
 
Resour˚
 
U_EXPORT2


501 
	$ªs_gëResour˚
(c⁄° 
Resour˚D©a
 *
pResD©a
, c⁄° *
key
) {

502 c⁄° *
ªÆKey
=
key
;

503 
öt32_t
 
idx
;

504  
	`ªs_gëTabÀIãmByKey
(
pResD©a
,ÖResD©a->
roŸRes
, &
idx
, &
ªÆKey
);

505 
	}
}

507 
U_CAPI
 
Resour˚
 
U_EXPORT2


508 
	$ªs_gëAºayIãm
(c⁄° 
Resour˚D©a
 *
pResD©a
, 
Resour˚
 
¨øy
, 
öt32_t
 
ödexR
) {

509 
uöt32_t
 
off£t
=
	`RES_GET_OFFSET
(
¨øy
);

510 
	`RES_GET_TYPE
(
¨øy
)) {

511 
URES_ARRAY
: {

512 c⁄° 
öt32_t
 *
p

off£t
==0 ? &
gEm±y32
 : 
pResD©a
->
pRoŸ
+offset;

513 if(
ödexR
<*
p
) {

514  (
Resour˚
)
p
[1+
ödexR
];

518 
URES_ARRAY16
: {

519 c⁄° 
uöt16_t
 *
p
=
pResD©a
->
p16BôUnôs
+
off£t
;

520 if(
ödexR
<*
p
) {

521  
	`URES_MAKE_RESOURCE
(
URES_STRING_V2
, 
p
[1+
ödexR
]);

528  
RES_BOGUS
;

529 
	}
}

531 
U_CFUNC
 
Resour˚


532 
	$ªs_födResour˚
(c⁄° 
Resour˚D©a
 *
pResD©a
, 
Resour˚
 
r
, ** 
∑th
, c⁄° ** 
key
) {

538 *
∑thP
 = *
∑th
, *
√xtSïP
 = *path;

539 *
˛o£Index
 = 
NULL
;

540 
Resour˚
 
t1
 = 
r
;

541 
Resour˚
 
t2
;

542 
öt32_t
 
ödexR
 = 0;

543 
UResTy≥
 
ty≥
 = 
	`RES_GET_TYPE
(
t1
);

546 if(!
	`u¥v_°æí
(
∑thP
)) {

547  
r
;

551 if(!
	`URES_IS_CONTAINER
(
ty≥
)) {

552  
RES_BOGUS
;

555 
√xtSïP
 && *
∑thP
 && 
t1
 !
RES_BOGUS
 && 
	`URES_IS_CONTAINER
(
ty≥
)) {

559 
√xtSïP
 = 
	`u¥v_°rchr
(
∑thP
, 
RES_PATH_SEPARATOR
);

563 if(
√xtSïP
 !
NULL
) {

564 *
√xtSïP
 = 0;

565 *
∑th
 = 
√xtSïP
+1;

567 *
∑th
 = 
	`u¥v_°rchr
(
∑thP
, 0);

572 if(
	`URES_IS_TABLE
(
ty≥
)) {

573 *
key
 = 
∑thP
;

574 
t2
 = 
	`ªs_gëTabÀIãmByKey
(
pResD©a
, 
t1
, &
ödexR
, 
key
);

575 if(
t2
 =
RES_BOGUS
) {

577 
ödexR
 = 
	`u¥v_°πﬁ
(
∑thP
, &
˛o£Index
, 10);

578 if(
˛o£Index
 !
∑thP
) {

580 
t2
 = 
	`ªs_gëTabÀIãmByIndex
(
pResD©a
, 
t1
, 
ödexR
, 
key
);

583 } if(
	`URES_IS_ARRAY
(
ty≥
)) {

584 
ödexR
 = 
	`u¥v_°πﬁ
(
∑thP
, &
˛o£Index
, 10);

585 if(
˛o£Index
 !
∑thP
) {

586 
t2
 = 
	`ªs_gëAºayIãm
(
pResD©a
, 
t1
, 
ödexR
);

588 
t2
 = 
RES_BOGUS
;

590 *
key
 = 
NULL
;

592 
t2
 = 
RES_BOGUS
;

594 
t1
 = 
t2
;

595 
ty≥
 = 
	`RES_GET_TYPE
(
t1
);

597 
∑thP
 = *
∑th
;

600  
t1
;

601 
	}
}

636 
	sRow
 {

637 
öt32_t
 
	mkeyIndex
, 
	ms‹tIndex
;

638 } 
	tRow
;

640 
öt32_t


641 
	$uªs_com∑ªRows
(c⁄° *
c⁄ãxt
, c⁄° *
À·
, c⁄° *
right
) {

642 c⁄° *
keyCh¨s
=(c⁄° *)
c⁄ãxt
;

643  (
öt32_t
)
	`u¥v_°rcmp
(
keyCh¨s
+((c⁄° 
Row
 *)
À·
)->
keyIndex
,

644 
keyCh¨s
+((c⁄° 
Row
 *)
right
)->
keyIndex
);

645 
	}
}

647 
	sTempTabÀ
 {

648 c⁄° *
	mkeyCh¨s
;

649 
Row
 *
	mrows
;

650 
öt32_t
 *
	mªs‹t
;

651 
uöt32_t
 *
	mªsFœgs
;

652 
öt32_t
 
	mloˇlKeyLimô
;

653 
uöt8_t
 
	mmaj‹F‹m©Vîsi⁄
;

654 } 
	tTempTabÀ
;

657 
	mSTACK_ROW_CAPACITY
=200

661 c⁄° *c⁄° 
	ggUnknownKey
="";

664 c⁄° 
UCh¨
 
	ggCﬁœti⁄BöKey
[]={

675 
	$uªs_sw≠Resour˚
(c⁄° 
UD©aSw≠≥r
 *
ds
,

676 c⁄° 
Resour˚
 *
öBundÀ
, Resour˚ *
outBundÀ
,

677 
Resour˚
 
ªs
,

678 c⁄° *
key
,

679 
TempTabÀ
 *
pTempTabÀ
,

680 
UEº‹Code
 *
pEº‹Code
) {

681 c⁄° 
Resour˚
 *
p
;

682 
Resour˚
 *
q
;

683 
öt32_t
 
off£t
, 
cou¡
;

685 
	`RES_GET_TYPE
(
ªs
)) {

686 
URES_TABLE16
:

687 
URES_STRING_V2
:

688 
URES_INT
:

689 
URES_ARRAY16
:

697 
off£t
=(
öt32_t
)
	`RES_GET_OFFSET
(
ªs
);

698 if(
off£t
==0) {

702 if(
pTempTabÀ
->
ªsFœgs
[
off£t
>>5]&((
uöt32_t
)1<<(offset&0x1f))) {

707 
pTempTabÀ
->
ªsFœgs
[
off£t
>>5]|=((
uöt32_t
)1<<(offset&0x1f));

710 
p
=
öBundÀ
+
off£t
;

711 
q
=
outBundÀ
+
off£t
;

713 
	`RES_GET_TYPE
(
ªs
)) {

714 
URES_ALIAS
:

716 
URES_STRING
:

717 
cou¡
=
	`ud©a_ªadI¡32
(
ds
, (
öt32_t
)*
p
);

719 
ds
->
	`sw≠Aºay32
(ds, 
p
, 4, 
q
, 
pEº‹Code
);

721 
ds
->
	`sw≠Aºay16
(ds, 
p
+1, 2*
cou¡
, 
q
+1, 
pEº‹Code
);

723 
URES_BINARY
:

724 
cou¡
=
	`ud©a_ªadI¡32
(
ds
, (
öt32_t
)*
p
);

726 
ds
->
	`sw≠Aºay32
(ds, 
p
, 4, 
q
, 
pEº‹Code
);

730 #i‡!
UCONFIG_NO_COLLATION


731 if–
key
!=
NULL
 &&

732 (
key
!=
gUnknownKey
 ?

734 0==
ds
->
	`com∑ªInvCh¨s
(ds, 
key
, -1,

735 
gCﬁœti⁄BöKey
, 
	`LENGTHOF
(gCollationBinKey)-1) :

737 
	`ucﬁ_looksLikeCﬁœti⁄Bö¨y
(
ds
, 
p
+1, 
cou¡
))

739 
	`ucﬁ_sw≠Bö¨y
(
ds
, 
p
+1, 
cou¡
, 
q
+1, 
pEº‹Code
);

743 
URES_TABLE
:

744 
URES_TABLE32
:

746 c⁄° 
uöt16_t
 *
pKey16
;

747 
uöt16_t
 *
qKey16
;

749 c⁄° 
öt32_t
 *
pKey32
;

750 
öt32_t
 *
qKey32
;

752 
Resour˚
 
ôem
;

753 
öt32_t
 
i
, 
ﬁdIndex
;

755 if(
	`RES_GET_TYPE
(
ªs
)==
URES_TABLE
) {

757 
pKey16
=(c⁄° 
uöt16_t
 *)
p
;

758 
qKey16
=(
uöt16_t
 *)
q
;

759 
cou¡
=
ds
->
	`ªadUI¡16
(*
pKey16
);

761 
pKey32
=
qKey32
=
NULL
;

764 
ds
->
	`sw≠Aºay16
(ds, 
pKey16
++, 2, 
qKey16
++, 
pEº‹Code
);

766 
off£t
+=((1+
cou¡
)+1)/2;

769 
pKey32
=(c⁄° 
öt32_t
 *)
p
;

770 
qKey32
=(
öt32_t
 *)
q
;

771 
cou¡
=
	`ud©a_ªadI¡32
(
ds
, *
pKey32
);

773 
pKey16
=
qKey16
=
NULL
;

776 
ds
->
	`sw≠Aºay32
(ds, 
pKey32
++, 4, 
qKey32
++, 
pEº‹Code
);

778 
off£t
+=1+
cou¡
;

781 if(
cou¡
==0) {

785 
p
=
öBundÀ
+
off£t
;

786 
q
=
outBundÀ
+
off£t
;

789 
i
=0; i<
cou¡
; ++i) {

790 c⁄° *
ôemKey
=
gUnknownKey
;

791 if(
pKey16
!=
NULL
) {

792 
öt32_t
 
keyOff£t
=
ds
->
	`ªadUI¡16
(
pKey16
[
i
]);

793 if(
keyOff£t
<
pTempTabÀ
->
loˇlKeyLimô
) {

794 
ôemKey
=(c⁄° *)
outBundÀ
+
keyOff£t
;

797 
öt32_t
 
keyOff£t
=
	`ud©a_ªadI¡32
(
ds
, 
pKey32
[
i
]);

798 if(
keyOff£t
>=0) {

799 
ôemKey
=(c⁄° *)
outBundÀ
+
keyOff£t
;

802 
ôem
=
ds
->
	`ªadUI¡32
(
p
[
i
]);

803 
	`uªs_sw≠Resour˚
(
ds
, 
öBundÀ
, 
outBundÀ
, 
ôem
, 
ôemKey
, 
pTempTabÀ
, 
pEº‹Code
);

804 if(
	`U_FAILURE
(*
pEº‹Code
)) {

805 
	`ud©a_¥ötEº‹
(
ds
, "ures_swapResource(tableÑes=%08x)[%d].recurse(%08x) failed\n",

806 
ªs
, 
i
, 
ôem
);

811 if(
pTempTabÀ
->
maj‹F‹m©Vîsi⁄
>1 || 
ds
->
öCh¨£t
==ds->
outCh¨£t
) {

813 if(
pKey16
!=
NULL
) {

814 
ds
->
	`sw≠Aºay16
(ds, 
pKey16
, 
cou¡
*2, 
qKey16
, 
pEº‹Code
);

815 
ds
->
	`sw≠Aºay32
(ds, 
p
, 
cou¡
*4, 
q
, 
pEº‹Code
);

818 
ds
->
	`sw≠Aºay32
(ds, 
pKey32
, 
cou¡
*2*4, 
qKey32
, 
pEº‹Code
);

831 if(
pKey16
!=
NULL
) {

832 
i
=0; i<
cou¡
; ++i) {

833 
pTempTabÀ
->
rows
[
i
].
keyIndex
=
ds
->
	`ªadUI¡16
(
pKey16
[i]);

834 
pTempTabÀ
->
rows
[
i
].
s‹tIndex
=i;

837 
i
=0; i<
cou¡
; ++i) {

838 
pTempTabÀ
->
rows
[
i
].
keyIndex
=
	`ud©a_ªadI¡32
(
ds
, 
pKey32
[i]);

839 
pTempTabÀ
->
rows
[
i
].
s‹tIndex
=i;

842 
	`u¥v_s‹tAºay
(
pTempTabÀ
->
rows
, 
cou¡
, (
Row
),

843 
uªs_com∑ªRows
, 
pTempTabÀ
->
keyCh¨s
,

844 
FALSE
, 
pEº‹Code
);

845 if(
	`U_FAILURE
(*
pEº‹Code
)) {

846 
	`ud©a_¥ötEº‹
(
ds
, "ures_swapResource(tableÑes=%08x).uprv_sortArray(%d items) failed\n",

847 
ªs
, 
cou¡
);

859 if(
pKey16
!=
NULL
) {

860 
uöt16_t
 *
rKey16
;

862 if(
pKey16
!=
qKey16
) {

863 
rKey16
=
qKey16
;

865 
rKey16
=(
uöt16_t
 *)
pTempTabÀ
->
ªs‹t
;

867 
i
=0; i<
cou¡
; ++i) {

868 
ﬁdIndex
=
pTempTabÀ
->
rows
[
i
].
s‹tIndex
;

869 
ds
->
	`sw≠Aºay16
(ds, 
pKey16
+
ﬁdIndex
, 2, 
rKey16
+
i
, 
pEº‹Code
);

871 if(
qKey16
!=
rKey16
) {

872 
	`u¥v_mem˝y
(
qKey16
, 
rKey16
, 2*
cou¡
);

875 
öt32_t
 *
rKey32
;

877 if(
pKey32
!=
qKey32
) {

878 
rKey32
=
qKey32
;

880 
rKey32
=
pTempTabÀ
->
ªs‹t
;

882 
i
=0; i<
cou¡
; ++i) {

883 
ﬁdIndex
=
pTempTabÀ
->
rows
[
i
].
s‹tIndex
;

884 
ds
->
	`sw≠Aºay32
(ds, 
pKey32
+
ﬁdIndex
, 4, 
rKey32
+
i
, 
pEº‹Code
);

886 if(
qKey32
!=
rKey32
) {

887 
	`u¥v_mem˝y
(
qKey32
, 
rKey32
, 4*
cou¡
);

893 
Resour˚
 *
r
;

896 if(
p
!=
q
) {

897 
r
=
q
;

899 
r
=(
Resour˚
 *)
pTempTabÀ
->
ªs‹t
;

901 
i
=0; i<
cou¡
; ++i) {

902 
ﬁdIndex
=
pTempTabÀ
->
rows
[
i
].
s‹tIndex
;

903 
ds
->
	`sw≠Aºay32
(ds, 
p
+
ﬁdIndex
, 4, 
r
+
i
, 
pEº‹Code
);

905 if(
q
!=
r
) {

906 
	`u¥v_mem˝y
(
q
, 
r
, 4*
cou¡
);

911 
URES_ARRAY
:

913 
Resour˚
 
ôem
;

914 
öt32_t
 
i
;

916 
cou¡
=
	`ud©a_ªadI¡32
(
ds
, (
öt32_t
)*
p
);

918 
ds
->
	`sw≠Aºay32
(ds, 
p
++, 4, 
q
++, 
pEº‹Code
);

921 
i
=0; i<
cou¡
; ++i) {

922 
ôem
=
ds
->
	`ªadUI¡32
(
p
[
i
]);

923 
	`uªs_sw≠Resour˚
(
ds
, 
öBundÀ
, 
outBundÀ
, 
ôem
, 
NULL
, 
pTempTabÀ
, 
pEº‹Code
);

924 if(
	`U_FAILURE
(*
pEº‹Code
)) {

925 
	`ud©a_¥ötEº‹
(
ds
, "ures_swapResource(arrayÑes=%08x)[%d].recurse(%08x) failed\n",

926 
ªs
, 
i
, 
ôem
);

932 
ds
->
	`sw≠Aºay32
(ds, 
p
, 4*
cou¡
, 
q
, 
pEº‹Code
);

935 
URES_INT_VECTOR
:

936 
cou¡
=
	`ud©a_ªadI¡32
(
ds
, (
öt32_t
)*
p
);

938 
ds
->
	`sw≠Aºay32
(ds, 
p
, 4*(1+
cou¡
), 
q
, 
pEº‹Code
);

942 *
pEº‹Code
=
U_UNSUPPORTED_ERROR
;

945 
	}
}

947 
U_CAPI
 
öt32_t
 
U_EXPORT2


948 
	$uªs_sw≠
(c⁄° 
UD©aSw≠≥r
 *
ds
,

949 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

950 
UEº‹Code
 *
pEº‹Code
) {

951 c⁄° 
UD©aInfo
 *
pInfo
;

952 c⁄° 
Resour˚
 *
öBundÀ
;

953 
Resour˚
 
roŸRes
;

954 
öt32_t
 
hódîSize
, 
maxTabÀLígth
;

956 
Row
 
rows
[
STACK_ROW_CAPACITY
];

957 
öt32_t
 
ªs‹t
[
STACK_ROW_CAPACITY
];

958 
TempTabÀ
 
ãmpTabÀ
;

960 c⁄° 
öt32_t
 *
öIndexes
;

963 
öt32_t
 
bundÀLígth
, 
ödexLígth
, 
keysBŸtom
, 
keysT›
, 
ªsBŸtom
, 
t›
;

966 
hódîSize
=
	`ud©a_sw≠D©aHódî
(
ds
, 
öD©a
, 
Àngth
, 
outD©a
, 
pEº‹Code
);

967 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

972 
pInfo
=(c⁄° 
UD©aInfo
 *)((c⁄° *)
öD©a
+4);

974 
pInfo
->
d©aF‹m©
[0]==0x52 &&

975 
pInfo
->
d©aF‹m©
[1]==0x65 &&

976 
pInfo
->
d©aF‹m©
[2]==0x73 &&

977 
pInfo
->
d©aF‹m©
[3]==0x42 &&

978 ((
pInfo
->
f‹m©Vîsi⁄
[0]==1 &&ÖInfo->formatVersion[1]>=1) ||

979 
pInfo
->
f‹m©Vîsi⁄
[0]==2)

981 
	`ud©a_¥ötEº‹
(
ds
, "ures_swap(): data format %02x.%02x.%02x.%02x (format version %02x.%02x) isÇotáÑesource bundle\n",

982 
pInfo
->
d©aF‹m©
[0],ÖInfo->dataFormat[1],

983 
pInfo
->
d©aF‹m©
[2],ÖInfo->dataFormat[3],

984 
pInfo
->
f‹m©Vîsi⁄
[0],ÖInfo->formatVersion[1]);

985 *
pEº‹Code
=
U_UNSUPPORTED_ERROR
;

988 
ãmpTabÀ
.
maj‹F‹m©Vîsi⁄
=
pInfo
->
f‹m©Vîsi⁄
[0];

991 if(
Àngth
<0) {

992 
bundÀLígth
=-1;

994 
bundÀLígth
=(
Àngth
-
hódîSize
)/4;

997 if(
bundÀLígth
<(1+5)) {

998 
	`ud©a_¥ötEº‹
(
ds
, "ures_swap():Åoo few bytes (%dáfter header) foráÑesource bundle\n",

999 
Àngth
-
hódîSize
);

1000 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

1005 
öBundÀ
=(c⁄° 
Resour˚
 *)((c⁄° *)
öD©a
+
hódîSize
);

1006 
roŸRes
=
ds
->
	`ªadUI¡32
(*
öBundÀ
);

1009 
öIndexes
=(c⁄° 
öt32_t
 *)(
öBundÀ
+1);

1011 
ödexLígth
=
	`ud©a_ªadI¡32
(
ds
, 
öIndexes
[
URES_INDEX_LENGTH
])&0xff;

1012 if(
ödexLígth
<=
URES_INDEX_MAX_TABLE_LENGTH
) {

1013 
	`ud©a_¥ötEº‹
(
ds
, "ures_swap():Åoo few indexes forá 1.1+Ñesource bundle\n");

1014 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

1017 
keysBŸtom
=1+
ödexLígth
;

1018 
keysT›
=
	`ud©a_ªadI¡32
(
ds
, 
öIndexes
[
URES_INDEX_KEYS_TOP
]);

1019 if(
ödexLígth
>
URES_INDEX_16BIT_TOP
) {

1020 
ªsBŸtom
=
	`ud©a_ªadI¡32
(
ds
, 
öIndexes
[
URES_INDEX_16BIT_TOP
]);

1022 
ªsBŸtom
=
keysT›
;

1024 
t›
=
	`ud©a_ªadI¡32
(
ds
, 
öIndexes
[
URES_INDEX_BUNDLE_TOP
]);

1025 
maxTabÀLígth
=
	`ud©a_ªadI¡32
(
ds
, 
öIndexes
[
URES_INDEX_MAX_TABLE_LENGTH
]);

1027 if(0<=
bundÀLígth
 && bundÀLígth<
t›
) {

1028 
	`ud©a_¥ötEº‹
(
ds
, "ures_swap():ÑesourceÅop %dÉxceeds bundleÜength %d\n",

1029 
t›
, 
bundÀLígth
);

1030 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

1033 if(
keysT›
>(1+
ödexLígth
)) {

1034 
ãmpTabÀ
.
loˇlKeyLimô
=
keysT›
<<2;

1036 
ãmpTabÀ
.
loˇlKeyLimô
=0;

1039 if(
Àngth
>=0) {

1040 
Resour˚
 *
outBundÀ
=(Resour˚ *)((*)
outD©a
+
hódîSize
);

1043 
uöt32_t
 
°ackResFœgs
[
STACK_ROW_CAPACITY
];

1044 
öt32_t
 
ªsFœgsLígth
;

1054 
ªsFœgsLígth
=(
Àngth
+31)>>5;

1055 
ªsFœgsLígth
=(resFlagsLength+3)&~3;

1056 if(
ªsFœgsLígth
<=(
°ackResFœgs
)) {

1057 
ãmpTabÀ
.
ªsFœgs
=
°ackResFœgs
;

1059 
ãmpTabÀ
.
ªsFœgs
=(
uöt32_t
 *)
	`u¥v_mÆloc
(
ªsFœgsLígth
);

1060 if(
ãmpTabÀ
.
ªsFœgs
==
NULL
) {

1061 
	`ud©a_¥ötEº‹
(
ds
, "ures_swap(): unableÅoállocate memory forÅrackingÑesources\n");

1062 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

1066 
	`u¥v_mem£t
(
ãmpTabÀ
.
ªsFœgs
, 0, 
ªsFœgsLígth
);

1069 if(
öD©a
!=
outD©a
) {

1070 
	`u¥v_mem˝y
(
outBundÀ
, 
öBundÀ
, 4*
t›
);

1074 
	`ud©a_sw≠InvSåögBlock
(
ds
, 
öBundÀ
+
keysBŸtom
, 4*(
keysT›
-keysBottom),

1075 
outBundÀ
+
keysBŸtom
, 
pEº‹Code
);

1076 if(
	`U_FAILURE
(*
pEº‹Code
)) {

1077 
	`ud©a_¥ötEº‹
(
ds
, "uªs_sw≠().ud©a_sw≠InvSåögBlock(keys[%d]ËÁûed\n", 4*(
keysT›
-
keysBŸtom
));

1082 if(
keysT›
<
ªsBŸtom
) {

1083 
ds
->
	`sw≠Aºay16
(ds, 
öBundÀ
+
keysT›
, (
ªsBŸtom
-keysT›)*4, 
outBundÀ
+keysT›, 
pEº‹Code
);

1084 if(
	`U_FAILURE
(*
pEº‹Code
)) {

1085 
	`ud©a_¥ötEº‹
(
ds
, "uªs_sw≠().sw≠Aºay16(16-bô unôs[%d]ËÁûed\n", 2*(
ªsBŸtom
-
keysT›
));

1091 
ãmpTabÀ
.
keyCh¨s
=(c⁄° *)
outBundÀ
;

1092 if(
ãmpTabÀ
.
maj‹F‹m©Vîsi⁄
>1 || 
maxTabÀLígth
<=
STACK_ROW_CAPACITY
) {

1093 
ãmpTabÀ
.
rows
=rows;

1094 
ãmpTabÀ
.
ªs‹t
=resort;

1096 
ãmpTabÀ
.
rows
=(
Row
 *)
	`u¥v_mÆloc
(
maxTabÀLígth
*(Row)+maxTableLength*4);

1097 if(
ãmpTabÀ
.
rows
==
NULL
) {

1098 
	`ud©a_¥ötEº‹
(
ds
, "ures_swap(): unableÅoállocate memory for sortingÅables (maxÜength: %d)\n",

1099 
maxTabÀLígth
);

1100 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

1101 if(
ãmpTabÀ
.
ªsFœgs
!=
°ackResFœgs
) {

1102 
	`u¥v_‰ì
(
ãmpTabÀ
.
ªsFœgs
);

1106 
ãmpTabÀ
.
ªs‹t
=(
öt32_t
 *)—empTabÀ.
rows
+
maxTabÀLígth
);

1110 
	`uªs_sw≠Resour˚
(
ds
, 
öBundÀ
, 
outBundÀ
, 
roŸRes
, 
NULL
, &
ãmpTabÀ
, 
pEº‹Code
);

1111 if(
	`U_FAILURE
(*
pEº‹Code
)) {

1112 
	`ud©a_¥ötEº‹
(
ds
, "ures_swapResource(rootÑes=%08x) failed\n",

1113 
roŸRes
);

1116 if(
ãmpTabÀ
.
rows
!=rows) {

1117 
	`u¥v_‰ì
(
ãmpTabÀ
.
rows
);

1119 if(
ãmpTabÀ
.
ªsFœgs
!=
°ackResFœgs
) {

1120 
	`u¥v_‰ì
(
ãmpTabÀ
.
ªsFœgs
);

1124 
ds
->
	`sw≠Aºay32
(ds, 
öBundÀ
, 
keysBŸtom
*4, 
outBundÀ
, 
pEº‹Code
);

1127  
hódîSize
+4*
t›
;

1128 
	}
}

	@uresdata.h

18 #i‚de‡
__RESDATA_H__


19 
	#__RESDATA_H__


	)

21 
	~"unicode/uty≥s.h
"

22 
	~"unicode/ud©a.h
"

23 
	~"unicode/uªs.h
"

24 
	~"ud©aswp.h
"

34 
	mURES_INTERNAL_NONE
=-1,

37 
	mURES_TABLE32
=4,

43 
	mURES_TABLE16
=5,

46 
	mURES_STRING_V2
=6,

52 
	mURES_ARRAY16
=9

53 } 
	tUResI¡î«lTy≥
;

60 
uöt32_t
 
	tResour˚
;

62 
	#RES_BOGUS
 0xffffffff

	)

64 
	#RES_GET_TYPE
(
ªs
Ë((
UResTy≥
)(‘es)>>28UL))

	)

65 
	#RES_GET_OFFSET
(
ªs
Ë(‘es)&0x0fffffff)

	)

66 
	#RES_GET_POINTER
(
pRoŸ
, 
ªs
Ë(’RoŸ)+
	`RES_GET_OFFSET
‘es))

	)

69 
	#RES_GET_INT
(
ªs
Ë(((
öt32_t
)(‘es)<<4L))>>4L)

	)

70 
	#RES_GET_UINT
(
ªs
Ë(‘es)&0x0fffffff)

	)

72 
	#URES_IS_ARRAY
(
ty≥
Ë(—y≥)==
URES_ARRAY
 || (ty≥)==
URES_ARRAY16
)

	)

73 
	#URES_IS_TABLE
(
ty≥
Ë(—y≥)==
URES_TABLE
 || (ty≥)==
URES_TABLE16
 || (ty≥)==
URES_TABLE32
)

	)

74 
	#URES_IS_CONTAINER
(
ty≥
Ë(
	`URES_IS_TABLE
—y≥Ë|| 
	`URES_IS_ARRAY
—y≥))

	)

76 
	#URES_MAKE_RESOURCE
(
ty≥
, 
off£t
Ë(((
Resour˚
)—y≥)<<28)|(Resour˚)(off£t))

	)

77 
	#URES_MAKE_EMPTY_RESOURCE
(
ty≥
Ë((
Resour˚
)—y≥)<<28)

	)

81 
	mURES_INDEX_LENGTH
,

87 
	mURES_INDEX_KEYS_TOP
,

89 
	mURES_INDEX_RESOURCES_TOP
,

90 
	mURES_INDEX_BUNDLE_TOP
,

92 
	mURES_INDEX_MAX_TABLE_LENGTH
,

93 
	mURES_INDEX_ATTRIBUTES
,

94 
	mURES_INDEX_16BIT_TOP
,

96 
	mURES_INDEX_POOL_CHECKSUM
,

97 
	mURES_INDEX_TOP


111 
	#URES_ATT_NO_FALLBACK
 1

	)

119 
	#URES_ATT_IS_POOL_BUNDLE
 2

	)

120 
	#URES_ATT_USES_POOL_BUNDLE
 4

	)

308 
UD©aMem‹y
 *
	md©a
;

309 c⁄° 
öt32_t
 *
	mpRoŸ
;

310 c⁄° 
uöt16_t
 *
	mp16BôUnôs
;

311 c⁄° *
	mpoﬁBundÀKeys
;

312 
Resour˚
 
	mroŸRes
;

313 
öt32_t
 
	mloˇlKeyLimô
;

314 
UBoﬁ
 
	mnoFÆlback
;

315 
UBoﬁ
 
	misPoﬁBundÀ
;

316 
UBoﬁ
 
	mu£sPoﬁBundÀ
;

317 
UBoﬁ
 
	mu£N©iveSåcmp
;

318 } 
	tResour˚D©a
;

323 
U_INTERNAL
 
U_EXPORT2


324 
ªs_ªad
(
Resour˚D©a
 *
pResD©a
,

325 c⁄° 
UD©aInfo
 *
pInfo
, c⁄° *
öByãs
, 
öt32_t
 
Àngth
,

326 
UEº‹Code
 *
îr‹Code
);

332 
U_CFUNC
 

333 
ªs_lﬂd
(
Resour˚D©a
 *
pResD©a
,

334 c⁄° *
∑th
, c⁄° *
«me
, 
UEº‹Code
 *
îr‹Code
);

340 
U_CFUNC
 

341 
ªs_u∆ﬂd
(
Resour˚D©a
 *
pResD©a
);

343 
U_INTERNAL
 
UResTy≥
 
U_EXPORT2


344 
ªs_gëPublicTy≥
(
Resour˚
 
ªs
);

351 
U_INTERNAL
 c⁄° 
UCh¨
 * 
U_EXPORT2


352 
ªs_gëSåög
(c⁄° 
Resour˚D©a
 *
pResD©a
, 
Resour˚
 
ªs
, 
öt32_t
 *
pLígth
);

354 
U_INTERNAL
 c⁄° 
UCh¨
 * 
U_EXPORT2


355 
ªs_gëAlüs
(c⁄° 
Resour˚D©a
 *
pResD©a
, 
Resour˚
 
ªs
, 
öt32_t
 *
pLígth
);

357 
U_INTERNAL
 c⁄° 
uöt8_t
 * 
U_EXPORT2


358 
ªs_gëBö¨y
(c⁄° 
Resour˚D©a
 *
pResD©a
, 
Resour˚
 
ªs
, 
öt32_t
 *
pLígth
);

360 
U_INTERNAL
 c⁄° 
öt32_t
 * 
U_EXPORT2


361 
ªs_gëI¡Ve˘‹
(c⁄° 
Resour˚D©a
 *
pResD©a
, 
Resour˚
 
ªs
, 
öt32_t
 *
pLígth
);

363 
U_INTERNAL
 
Resour˚
 
U_EXPORT2


364 
ªs_gëResour˚
(c⁄° 
Resour˚D©a
 *
pResD©a
, c⁄° *
key
);

366 
U_INTERNAL
 
öt32_t
 
U_EXPORT2


367 
ªs_cou¡AºayIãms
(c⁄° 
Resour˚D©a
 *
pResD©a
, 
Resour˚
 
ªs
);

369 
U_INTERNAL
 
Resour˚
 
U_EXPORT2


370 
ªs_gëAºayIãm
(c⁄° 
Resour˚D©a
 *
pResD©a
, 
Resour˚
 
¨øy
, 
öt32_t
 
ödexS
);

372 
U_INTERNAL
 
Resour˚
 
U_EXPORT2


373 
ªs_gëTabÀIãmByIndex
(c⁄° 
Resour˚D©a
 *
pResD©a
, 
Resour˚
 
èbÀ
, 
öt32_t
 
ödexS
, c⁄° ** 
key
);

375 
U_INTERNAL
 
Resour˚
 
U_EXPORT2


376 
ªs_gëTabÀIãmByKey
(c⁄° 
Resour˚D©a
 *
pResD©a
, 
Resour˚
 
èbÀ
, 
öt32_t
 *
ödexS
, c⁄° * * 
key
);

382 
U_CFUNC
 
Resour˚
 
ªs_födResour˚
(c⁄° 
Resour˚D©a
 *
pResD©a
, Resour˚ 
r
, ** 
∑th
, c⁄° ** 
key
);

388 
U_CAPI
 
öt32_t
 
U_EXPORT2


389 
uªs_sw≠
(c⁄° 
UD©aSw≠≥r
 *
ds
,

390 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

391 
UEº‹Code
 *
pEº‹Code
);

	@uresimp.h

8 #i‚de‡
URESIMP_H


9 
	#URESIMP_H


	)

11 
	~"unicode/uªs.h
"

13 
	~"uªsd©a.h
"

15 
	#kRoŸLoˇÀName
 "roŸ"

	)

16 
	#kPoﬁBundÀName
 "poﬁ"

	)

23 
	#kDeÁu…Mö‹Vîsi⁄
 "0"

	)

24 
	#kVîsi⁄Sï¨©‹
 "."

	)

25 
	#kVîsi⁄Tag
 "Vîsi⁄"

	)

27 
	#MAGIC1
 19700503

	)

28 
	#MAGIC2
 19641227

	)

30 
	#URES_MAX_ALIAS_LEVEL
 256

	)

31 
	#URES_MAX_BUFFER_SIZE
 256

	)

44 
	gUResour˚D©aE¡ry
;

45 
UResour˚D©aE¡ry
 
	tUResour˚D©aE¡ry
;

53 
	sUResour˚D©aE¡ry
 {

54 *
	mfName
;

55 *
	mfP©h
;

56 
UResour˚D©aE¡ry
 *
	mfP¨ít
;

57 
UResour˚D©aE¡ry
 *
	mfAlüs
;

58 
UResour˚D©aE¡ry
 *
	mfPoﬁ
;

59 
Resour˚D©a
 
	mfD©a
;

60 
	mfNameBuf„r
[3];

61 
uöt32_t
 
	mfCou¡Exi°ög
;

62 
UEº‹Code
 
	mfBogus
;

66 
	#RES_BUFSIZE
 64

	)

67 
	#RES_PATH_SEPARATOR
 '/'

	)

68 
	#RES_PATH_SEPARATOR_S
 "/"

	)

70 
	sUResour˚BundÀ
 {

71 c⁄° *
	mfKey
;

72 
UResour˚D©aE¡ry
 *
	mfD©a
;

73 *
	mfVîsi⁄
;

74 
UResour˚D©aE¡ry
 *
	mfT›LevñD©a
;

75 *
	mfResP©h
;

76 
Resour˚D©a
 
	mfResD©a
;

77 
	mfResBuf
[
RES_BUFSIZE
];

78 
öt32_t
 
	mfResP©hLí
;

79 
Resour˚
 
	mfRes
;

80 
UBoﬁ
 
	mfHasFÆlback
;

81 
UBoﬁ
 
	mfIsT›Levñ
;

82 
uöt32_t
 
	mfMagic1
;

83 
uöt32_t
 
	mfMagic2
;

84 
öt32_t
 
	mfIndex
;

85 
öt32_t
 
	mfSize
;

90 
U_CAPI
 
U_EXPORT2
 
uªs_öôSèckObje˘
(
UResour˚BundÀ
* 
ªsB
);

93 
U_CFUNC
 c⁄° * 
uªs_gëName
(c⁄° 
UResour˚BundÀ
* 
ªsB
);

94 #ifde‡
URES_DEBUG


95 
U_CFUNC
 c⁄° * 
uªs_gëP©h
(c⁄° 
UResour˚BundÀ
* 
ªsB
);

100 
U_CAPI
 
UBoﬁ
 
U_EXPORT2
 
uªs_dumpCacheC⁄ã¡s
();

107 
U_CFUNC
 
UResour˚BundÀ
 *
uªs_c›yResb
(UResour˚BundÀ *
r
, c⁄° UResour˚BundÀ *
‹igöÆ
, 
UEº‹Code
 *
°©us
);

125 
U_CAPI
 
UResour˚BundÀ
* 
U_EXPORT2


126 
uªs_födResour˚
(c⁄° * 
∑thToResour˚
,

127 
UResour˚BundÀ
 *
fûlIn
, 
UEº‹Code
 *
°©us
);

145 
U_CAPI
 
UResour˚BundÀ
* 
U_EXPORT2


146 
uªs_födSubResour˚
(c⁄° 
UResour˚BundÀ
 *
ªsB
,

147 * 
∑thToResour˚
,

148 
UResour˚BundÀ
 *
fûlIn
, 
UEº‹Code
 *
°©us
);

167 
U_INTERNAL
 
öt32_t
 
U_EXPORT2


168 
uªs_gëFun˘i⁄ÆEquivÆít
(*
ªsu…
, 
öt32_t
 
ªsu…C≠acôy
,

169 c⁄° *
∑th
, c⁄° *
ªsName
, c⁄° *
keyw‹d
, c⁄° *
locid
,

170 
UBoﬁ
 *
isAvaûabÀ
, UBoﬁ 
omôDeÁu…
, 
UEº‹Code
 *
°©us
);

180 
U_INTERNAL
 
UEnumî©i⁄
* 
U_EXPORT2


181 
uªs_gëKeyw‹dVÆues
(c⁄° *
∑th
, c⁄° *
keyw‹d
, 
UEº‹Code
 *
°©us
);

201 
U_INTERNAL
 
UResour˚BundÀ
* 
U_EXPORT2


202 
uªs_gëByKeyWôhFÆlback
(c⁄° 
UResour˚BundÀ
 *
ªsB
,

203 c⁄° * 
öKey
,

204 
UResour˚BundÀ
 *
fûlIn
,

205 
UEº‹Code
 *
°©us
);

224 
U_INTERNAL
 c⁄° 
UCh¨
* 
U_EXPORT2


225 
uªs_gëSåögByKeyWôhFÆlback
(c⁄° 
UResour˚BundÀ
 *
ªsB
,

226 c⁄° * 
öKey
,

227 
öt32_t
* 
Àn
,

228 
UEº‹Code
 *
°©us
);

238 
U_INTERNAL
 
U_EXPORT2


239 
uªs_gëVîsi⁄ByKey
(c⁄° 
UResour˚BundÀ
 *
ªsB
,

240 c⁄° *
key
,

241 
UVîsi⁄Info
 
vî
,

242 
UEº‹Code
 *
°©us
);

255 
U_INTERNAL
 c⁄° * 
U_EXPORT2


256 
uªs_gëVîsi⁄NumbîI¡î«l
(c⁄° 
UResour˚BundÀ
 *
ªsour˚BundÀ
);

270 
U_INTERNAL
 c⁄° * 
U_EXPORT2


271 
uªs_gëLoˇÀI¡î«l
(c⁄° 
UResour˚BundÀ
* 
ªsour˚BundÀ
,

272 
UEº‹Code
* 
°©us
);

	@ureslocs.h

8 #i‚de‡
__URESLOCS_H__


9 
	#__URESLOCS_H__


	)

11 
	~"unicode/uty≥s.h
"

12 
	~"unicode/ud©a.h
"

14 
	gU_CDECL_BEGIN


17 
	#U_ICUDATA_LANG
 
U_ICUDATA_NAME
 
U_TREE_SEPARATOR_STRING
 "œng"

	)

18 
	#U_ICUDATA_REGION
 
U_ICUDATA_NAME
 
U_TREE_SEPARATOR_STRING
 "ªgi⁄"

	)

19 
	#U_ICUDATA_CURR
 
U_ICUDATA_NAME
 
U_TREE_SEPARATOR_STRING
 "cuº"

	)

20 
	#U_ICUDATA_ZONE
 
U_ICUDATA_NAME
 
U_TREE_SEPARATOR_STRING
 "z⁄e"

	)

22 
	gU_CDECL_END


	@usc_impl.c

16 
	~"unicode/us¸ùt.h
"

17 
	~"usc_im∂.h
"

18 
	~"cmem‹y.h
"

20 
	#ARRAY_SIZE
(
¨øy
Ë(áºay / áºay[0])

	)

22 
	#PAREN_STACK_DEPTH
 32

	)

24 
	#MOD
(
•
Ë((•Ë% 
PAREN_STACK_DEPTH
)

	)

25 
	#LIMIT_INC
(
•
Ë(((•Ë< 
PAREN_STACK_DEPTH
)? (•Ë+ 1 : PAREN_STACK_DEPTH)

	)

26 
	#INC
(
•
,
cou¡
Ë(
	`MOD
((•Ë+ (cou¡)))

	)

27 
	#INC1
(
•
Ë(
	`INC
(•, 1))

	)

28 
	#DEC
(
•
,
cou¡
Ë(
	`MOD
((•Ë+ 
PAREN_STACK_DEPTH
 - (cou¡)))

	)

29 
	#DEC1
(
•
Ë(
	`DEC
(•, 1))

	)

30 
	#STACK_IS_EMPTY
(
s¸ùtRun
Ë((s¸ùtRun)->
pushCou¡
 <0)

	)

31 
	#STACK_IS_NOT_EMPTY
(
s¸ùtRun
Ë(! 
	`STACK_IS_EMPTY
(s¸ùtRun))

	)

32 
	#TOP
(
s¸ùtRun
Ë((s¸ùtRun)->
∑ªnSèck
[(s¸ùtRun)->
∑ªnSP
])

	)

33 
	#SYNC_FIXUP
(
s¸ùtRun
Ë((s¸ùtRun)->
fixupCou¡
 = 0)

	)

35 
	sP¨íSèckE¡ry


37 
öt32_t
 
	m∑úIndex
;

38 
US¸ùtCode
 
	ms¸ùtCode
;

41 
	sUS¸ùtRun


43 
öt32_t
 
	mãxtLígth
;

44 c⁄° 
UCh¨
 *
	mãxtAºay
;

46 
öt32_t
 
	ms¸ùtSèπ
;

47 
öt32_t
 
	ms¸ùtLimô
;

48 
US¸ùtCode
 
	ms¸ùtCode
;

50 
P¨íSèckE¡ry
 
	m∑ªnSèck
[
PAREN_STACK_DEPTH
];

51 
öt32_t
 
	m∑ªnSP
;

52 
öt32_t
 
	mpushCou¡
;

53 
öt32_t
 
	mfixupCou¡
;

56 
öt8_t
 
highBô
(
öt32_t
 
vÆue
);

58 c⁄° 
UCh¨32
 
	g∑úedCh¨s
[] = {

78 
	$push
(
US¸ùtRun
 *
s¸ùtRun
, 
öt32_t
 
∑úIndex
, 
US¸ùtCode
 
s¸ùtCode
)

80 
s¸ùtRun
->
pushCou¡
 = 
	`LIMIT_INC
(scriptRun->pushCount);

81 
s¸ùtRun
->
fixupCou¡
 = 
	`LIMIT_INC
(scriptRun->fixupCount);

83 
s¸ùtRun
->
∑ªnSP
 = 
	`INC1
(scriptRun->parenSP);

84 
s¸ùtRun
->
∑ªnSèck
[s¸ùtRun->
∑ªnSP
].
∑úIndex
 =ÖairIndex;

85 
s¸ùtRun
->
∑ªnSèck
[s¸ùtRun->
∑ªnSP
].
s¸ùtCode
 = scriptCode;

86 
	}
}

88 
	$p›
(
US¸ùtRun
 *
s¸ùtRun
)

90 i‡(
	`STACK_IS_EMPTY
(
s¸ùtRun
)) {

94 i‡(
s¸ùtRun
->
fixupCou¡
 > 0) {

95 
s¸ùtRun
->
fixupCou¡
 -= 1;

98 
s¸ùtRun
->
pushCou¡
 -= 1;

99 
s¸ùtRun
->
∑ªnSP
 = 
	`DEC1
(scriptRun->parenSP);

104 i‡(
	`STACK_IS_EMPTY
(
s¸ùtRun
)) {

105 
s¸ùtRun
->
∑ªnSP
 = -1;

107 
	}
}

109 
	$fixup
(
US¸ùtRun
 *
s¸ùtRun
, 
US¸ùtCode
 
s¸ùtCode
)

111 
öt32_t
 
fixupSP
 = 
	`DEC
(
s¸ùtRun
->
∑ªnSP
, s¸ùtRun->
fixupCou¡
);

113 
s¸ùtRun
->
fixupCou¡
-- > 0) {

114 
fixupSP
 = 
	`INC1
(fixupSP);

115 
s¸ùtRun
->
∑ªnSèck
[
fixupSP
].
s¸ùtCode
 = scriptCode;

117 
	}
}

119 
öt8_t


120 
	$highBô
(
öt32_t
 
vÆue
)

122 
öt8_t
 
bô
 = 0;

124 i‡(
vÆue
 <= 0) {

128 i‡(
vÆue
 >= 1 << 16) {

129 
vÆue
 >>= 16;

130 
bô
 += 16;

133 i‡(
vÆue
 >= 1 << 8) {

134 
vÆue
 >>= 8;

135 
bô
 += 8;

138 i‡(
vÆue
 >= 1 << 4) {

139 
vÆue
 >>= 4;

140 
bô
 += 4;

143 i‡(
vÆue
 >= 1 << 2) {

144 
vÆue
 >>= 2;

145 
bô
 += 2;

148 i‡(
vÆue
 >= 1 << 1) {

149 
vÆue
 >>= 1;

150 
bô
 += 1;

153  
bô
;

154 
	}
}

156 
öt32_t


157 
	$gëPaúIndex
(
UCh¨32
 
ch
)

159 
öt32_t
 
∑úedCh¨Cou¡
 = 
	`ARRAY_SIZE
(
∑úedCh¨s
);

160 
öt32_t
 
∑úedCh¨Powî
 = 1 << 
	`highBô
(
∑úedCh¨Cou¡
);

161 
öt32_t
 
∑úedCh¨Exåa
 = 
∑úedCh¨Cou¡
 - 
∑úedCh¨Powî
;

163 
öt32_t
 
¥obe
 = 
∑úedCh¨Powî
;

164 
öt32_t
 
∑úIndex
 = 0;

166 i‡(
ch
 >
∑úedCh¨s
[
∑úedCh¨Exåa
]) {

167 
∑úIndex
 = 
∑úedCh¨Exåa
;

170 
¥obe
 > (1 << 0)) {

171 
¥obe
 >>= 1;

173 i‡(
ch
 >
∑úedCh¨s
[
∑úIndex
 + 
¥obe
]) {

174 
∑úIndex
 +
¥obe
;

178 i‡(
∑úedCh¨s
[
∑úIndex
] !
ch
) {

179 
∑úIndex
 = -1;

182  
∑úIndex
;

183 
	}
}

185 
UBoﬁ


186 
	$ßmeS¸ùt
(
US¸ùtCode
 
s¸ùtO√
, US¸ùtCodê
s¸ùtTwo
)

188  
s¸ùtO√
 <
USCRIPT_INHERITED
 || 
s¸ùtTwo
 <= USCRIPT_INHERITED || scriptOne == scriptTwo;

189 
	}
}

191 
U_CAPI
 
US¸ùtRun
 * 
U_EXPORT2


192 
	$us¸ùt_›íRun
(c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
Àngth
, 
UEº‹Code
 *
pEº‹Code
)

194 
US¸ùtRun
 *
ªsu…
 = 
NULL
;

196 i‡(
pEº‹Code
 =
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

197  
NULL
;

200 
ªsu…
 = 
	`u¥v_mÆloc
( (
US¸ùtRun
));

202 i‡(
ªsu…
 =
NULL
) {

203 *
pEº‹Code
 = 
U_MEMORY_ALLOCATION_ERROR
;

204  
NULL
;

207 
	`us¸ùt_£tRunText
(
ªsu…
, 
§c
, 
Àngth
, 
pEº‹Code
);

210 i‡(
	`U_FAILURE
(*
pEº‹Code
)) {

211 
	`u¥v_‰ì
(
ªsu…
);

212 
ªsu…
 = 
NULL
;

215  
ªsu…
;

216 
	}
}

218 
U_CAPI
 
U_EXPORT2


219 
	$us¸ùt_˛o£Run
(
US¸ùtRun
 *
s¸ùtRun
)

221 i‡(
s¸ùtRun
 !
NULL
) {

222 
	`u¥v_‰ì
(
s¸ùtRun
);

224 
	}
}

226 
U_CAPI
 
U_EXPORT2


227 
	$us¸ùt_ª£tRun
(
US¸ùtRun
 *
s¸ùtRun
)

229 i‡(
s¸ùtRun
 !
NULL
) {

230 
s¸ùtRun
->
s¸ùtSèπ
 = 0;

231 
s¸ùtRun
->
s¸ùtLimô
 = 0;

232 
s¸ùtRun
->
s¸ùtCode
 = 
USCRIPT_INVALID_CODE
;

233 
s¸ùtRun
->
∑ªnSP
 = -1;

234 
s¸ùtRun
->
pushCou¡
 = 0;

235 
s¸ùtRun
->
fixupCou¡
 = 0;

237 
	}
}

239 
U_CAPI
 
U_EXPORT2


240 
	$us¸ùt_£tRunText
(
US¸ùtRun
 *
s¸ùtRun
, c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
Àngth
, 
UEº‹Code
 *
pEº‹Code
)

242 i‡(
pEº‹Code
 =
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

246 i‡(
s¸ùtRun
 =
NULL
 || 
Àngth
 < 0 || ((
§c
 == NULL) != (length == 0))) {

247 *
pEº‹Code
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

251 
s¸ùtRun
->
ãxtAºay
 = 
§c
;

252 
s¸ùtRun
->
ãxtLígth
 = 
Àngth
;

254 
	`us¸ùt_ª£tRun
(
s¸ùtRun
);

255 
	}
}

257 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


258 
	$us¸ùt_√xtRun
(
US¸ùtRun
 *
s¸ùtRun
, 
öt32_t
 *
pRunSèπ
, i¡32_à*
pRunLimô
, 
US¸ùtCode
 *
pRunS¸ùt
)

260 
UEº‹Code
 
îr‹
 = 
U_ZERO_ERROR
;

263 i‡(
s¸ùtRun
 =
NULL
 || s¸ùtRun->
s¸ùtLimô
 >s¸ùtRun->
ãxtLígth
) {

264  
FALSE
;

267 
	`SYNC_FIXUP
(
s¸ùtRun
);

268 
s¸ùtRun
->
s¸ùtCode
 = 
USCRIPT_COMMON
;

270 
s¸ùtRun
->
s¸ùtSèπ
 = s¸ùtRun->
s¸ùtLimô
; s¸ùtRun->s¸ùtLimô < s¸ùtRun->
ãxtLígth
; scriptRun->scriptLimit += 1) {

271 
UCh¨
 
high
 = 
s¸ùtRun
->
ãxtAºay
[s¸ùtRun->
s¸ùtLimô
];

272 
UCh¨32
 
ch
 = 
high
;

273 
US¸ùtCode
 
sc
;

274 
öt32_t
 
∑úIndex
;

280 i‡(
high
 >0xD800 && high <0xDBFF && 
s¸ùtRun
->
s¸ùtLimô
 < s¸ùtRun->
ãxtLígth
 - 1) {

281 
UCh¨
 
low
 = 
s¸ùtRun
->
ãxtAºay
[s¸ùtRun->
s¸ùtLimô
 + 1];

287 i‡(
low
 >= 0xDC00 &&Üow <= 0xDFFF) {

288 
ch
 = (
high
 - 0xD800Ë* 0x0400 + 
low
 - 0xDC00 + 0x10000;

289 
s¸ùtRun
->
s¸ùtLimô
 += 1;

293 
sc
 = 
	`us¸ùt_gëS¸ùt
(
ch
, &
îr‹
);

294 
∑úIndex
 = 
	`gëPaúIndex
(
ch
);

304 i‡(
∑úIndex
 >= 0) {

305 i‡((
∑úIndex
 & 1) == 0) {

306 
	`push
(
s¸ùtRun
, 
∑úIndex
, s¸ùtRun->
s¸ùtCode
);

308 
öt32_t
 
pi
 = 
∑úIndex
 & ~1;

310 
	`STACK_IS_NOT_EMPTY
(
s¸ùtRun
Ë&& 
	`TOP
(s¸ùtRun).
∑úIndex
 !
pi
) {

311 
	`p›
(
s¸ùtRun
);

314 i‡(
	`STACK_IS_NOT_EMPTY
(
s¸ùtRun
)) {

315 
sc
 = 
	`TOP
(
s¸ùtRun
).
s¸ùtCode
;

320 i‡(
	`ßmeS¸ùt
(
s¸ùtRun
->
s¸ùtCode
, 
sc
)) {

321 i‡(
s¸ùtRun
->
s¸ùtCode
 <
USCRIPT_INHERITED
 && 
sc
 > USCRIPT_INHERITED) {

322 
s¸ùtRun
->
s¸ùtCode
 = 
sc
;

324 
	`fixup
(
s¸ùtRun
, s¸ùtRun->
s¸ùtCode
);

331 i‡(
∑úIndex
 >= 0 && (pairIndex & 1) != 0) {

332 
	`p›
(
s¸ùtRun
);

339 i‡(
ch
 >= 0x10000) {

340 
s¸ùtRun
->
s¸ùtLimô
 -= 1;

348 i‡(
pRunSèπ
 !
NULL
) {

349 *
pRunSèπ
 = 
s¸ùtRun
->
s¸ùtSèπ
;

352 i‡(
pRunLimô
 !
NULL
) {

353 *
pRunLimô
 = 
s¸ùtRun
->
s¸ùtLimô
;

356 i‡(
pRunS¸ùt
 !
NULL
) {

357 *
pRunS¸ùt
 = 
s¸ùtRun
->
s¸ùtCode
;

360  
TRUE
;

361 
	}
}

	@usc_impl.h

16 #i‚de‡
USC_IMPL_H


17 
	#USC_IMPL_H


	)

18 
	~"unicode/uty≥s.h
"

19 
	~"unicode/us¸ùt.h
"

57 
	gUS¸ùtRun
;

59 
US¸ùtRun
 
	tUS¸ùtRun
;

82 
U_CAPI
 
US¸ùtRun
 * 
U_EXPORT2


83 
us¸ùt_›íRun
(c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
Àngth
, 
UEº‹Code
 *
pEº‹Code
);

93 
U_CAPI
 
U_EXPORT2


94 
us¸ùt_˛o£Run
(
US¸ùtRun
 *
s¸ùtRun
);

104 
U_CAPI
 
U_EXPORT2


105 
us¸ùt_ª£tRun
(
US¸ùtRun
 *
s¸ùtRun
);

124 
U_CAPI
 
U_EXPORT2


125 
us¸ùt_£tRunText
(
US¸ùtRun
 *
s¸ùtRun
, c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
Àngth
, 
UEº‹Code
 *
pEº‹Code
);

146 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


147 
us¸ùt_√xtRun
(
US¸ùtRun
 *
s¸ùtRun
, 
öt32_t
 *
pRunSèπ
, i¡32_à*
pRunLimô
, 
US¸ùtCode
 *
pRunS¸ùt
);

	@uscript.c

16 
	~"unicode/us¸ùt.h
"

17 
	~"unicode/uªs.h
"

18 
	~"unicode/uch¨.h
"

19 
	~"unicode/putû.h
"

20 
	~"u¥›s.h
"

21 
	~"cmem‹y.h
"

22 
	~"c°rög.h
"

24 c⁄° 
	gkLoˇÀS¸ùt
[] = "LocaleScript";

27 
U_CAPI
 
öt32_t
 
U_EXPORT2


28 
	$us¸ùt_gëCode
(c⁄° * 
«meOrAbbrOrLoˇÀ
,

29 
US¸ùtCode
* 
fûlIn
,

30 
öt32_t
 
ˇ∑côy
,

31 
UEº‹Code
* 
îr
){

33 
US¸ùtCode
 
code
 = 
USCRIPT_INVALID_CODE
;

34 
öt32_t
 
numFûÀd
=0;

35 
öt32_t
 
Àn
=0;

37 if(
îr
==
NULL
 ||
	`U_FAILURE
(*err)){

38  
numFûÀd
;

40 if(
«meOrAbbrOrLoˇÀ
==
NULL
 || 
fûlIn
 =NULL || 
ˇ∑côy
<0){

41 *
îr
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

42  
numFûÀd
;

45 if(
	`u¥v_°rchr
(
«meOrAbbrOrLoˇÀ
, '-')==
NULL
 && uprv_strchr(nameOrAbbrOrLocale, '_')==NULL ){

47 
code
 = (
US¸ùtCode
Ë
	`u_gëPr›îtyVÆueEnum
(
UCHAR_SCRIPT
, 
«meOrAbbrOrLoˇÀ
);

50 if(
code
==(
US¸ùtCode
)
UCHAR_INVALID_CODE
){

52 
UEº‹Code
 
loˇlEº‹Code
 = 
U_ZERO_ERROR
;

53 
UResour˚BundÀ
* 
ªsB
 = 
	`uªs_›í
(
NULL
,
«meOrAbbrOrLoˇÀ
,&
loˇlEº‹Code
);

54 if(
	`U_SUCCESS
(
loˇlEº‹Code
)&&ÜoˇlEº‹Codê!
U_USING_DEFAULT_WARNING
){

55 
UResour˚BundÀ
* 
ªsD
 = 
	`uªs_gëByKey
(
ªsB
,
kLoˇÀS¸ùt
,
NULL
,&
loˇlEº‹Code
);

56 if(
	`U_SUCCESS
(
loˇlEº‹Code
) ){

57 
Àn
 =0;

58 
	`uªs_hasNext
(
ªsD
)){

59 c⁄° 
UCh¨
* 
«me
 = 
	`uªs_gëNextSåög
(
ªsD
,&
Àn
,
NULL
,&
loˇlEº‹Code
);

60 if(
	`U_SUCCESS
(
loˇlEº‹Code
)){

61 
cName
[50] = {'\0'};

62 
	`u_UCh¨sToCh¨s
(
«me
,
cName
,
Àn
);

63 
code
 = (
US¸ùtCode
Ë
	`u_gëPr›îtyVÆueEnum
(
UCHAR_SCRIPT
, 
cName
);

65 if(
numFûÀd
<
ˇ∑côy
){

66 *(
fûlIn
)++=
code
;

67 
numFûÀd
++;

69 
	`uªs_˛o£
(
ªsD
);

70 
	`uªs_˛o£
(
ªsB
);

71 *
îr
=
U_BUFFER_OVERFLOW_ERROR
;

72  
Àn
;

77 
	`uªs_˛o£
(
ªsD
);

79 
	`uªs_˛o£
(
ªsB
);

80 
code
 = 
USCRIPT_INVALID_CODE
;

82 if(
code
==(
US¸ùtCode
)
UCHAR_INVALID_CODE
){

84 
code
 = (
US¸ùtCode
Ë
	`u_gëPr›îtyVÆueEnum
(
UCHAR_SCRIPT
, 
«meOrAbbrOrLoˇÀ
);

86 if(
code
!=(
US¸ùtCode
)
UCHAR_INVALID_CODE
){

88 if(
numFûÀd
<
ˇ∑côy
){

89 *(
fûlIn
)++=
code
;

90 
numFûÀd
++;

92 *
îr
=
U_BUFFER_OVERFLOW_ERROR
;

93  
Àn
;

96  
numFûÀd
;

97 
	}
}

99 
U_CAPI
 c⁄° * 
U_EXPORT2


100 
	$us¸ùt_gëName
(
US¸ùtCode
 
s¸ùtCode
){

101  
	`u_gëPr›îtyVÆueName
(
UCHAR_SCRIPT
, 
s¸ùtCode
,

102 
U_LONG_PROPERTY_NAME
);

103 
	}
}

105 
U_CAPI
 c⁄° * 
U_EXPORT2


106 
	$us¸ùt_gëSh‹tName
(
US¸ùtCode
 
s¸ùtCode
){

107  
	`u_gëPr›îtyVÆueName
(
UCHAR_SCRIPT
, 
s¸ùtCode
,

108 
U_SHORT_PROPERTY_NAME
);

109 
	}
}

	@uset.cpp

21 
	~"unicode/uty≥s.h
"

22 
	~"unicode/uobje˘.h
"

23 
	~"unicode/u£t.h
"

24 
	~"unicode/uni£t.h
"

25 
	~"cmem‹y.h
"

26 
	~"unicode/u°rög.h
"

27 
	~"unicode/∑r£pos.h
"

29 
U_NAMESPACE_USE


31 
U_CAPI
 
USë
* 
U_EXPORT2


32 
	$u£t_›íEm±y
() {

33  (
USë
*Ë
√w
 
	`UnicodeSë
();

34 
	}
}

36 
U_CAPI
 
USë
* 
U_EXPORT2


37 
	$u£t_›í
(
UCh¨32
 
°¨t
, UCh¨32 
íd
) {

38  (
USë
*Ë
√w
 
	`UnicodeSë
(
°¨t
, 
íd
);

39 
	}
}

41 
U_CAPI
 
U_EXPORT2


42 
	$u£t_˛o£
(
USë
* 
£t
) {

43 
	`dñëe
 (
UnicodeSë
*Ë
£t
;

44 
	}
}

46 
U_CAPI
 
USë
 * 
U_EXPORT2


47 
	$u£t_˛⁄e
(c⁄° 
USë
 *
£t
) {

48  (
USë
*Ë(((
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`˛⁄e
());

49 
	}
}

51 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


52 
	$u£t_isFrozí
(c⁄° 
USë
 *
£t
) {

53  ((
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`isFrozí
();

54 
	}
}

56 
U_CAPI
 
U_EXPORT2


57 
	$u£t_‰ìze
(
USë
 *
£t
) {

58 ((
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`‰ìze
();

59 
	}
}

61 
U_CAPI
 
USë
 * 
U_EXPORT2


62 
	$u£t_˛⁄eAsThawed
(c⁄° 
USë
 *
£t
) {

63  (
USë
*Ë(((
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`˛⁄eAsThawed
());

64 
	}
}

66 
U_CAPI
 
U_EXPORT2


67 
	$u£t_£t
(
USë
* 
£t
,

68 
UCh¨32
 
°¨t
, UCh¨32 
íd
) {

69 ((
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`£t
(
°¨t
, 
íd
);

70 
	}
}

72 
U_CAPI
 
U_EXPORT2


73 
	$u£t_addAŒ
(
USë
* 
£t
, c⁄° USë *
addôi⁄ÆSë
) {

74 ((
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`addAŒ
(*((c⁄° UnicodeSë*)
addôi⁄ÆSë
));

75 
	}
}

77 
U_CAPI
 
U_EXPORT2


78 
	$u£t_add
(
USë
* 
£t
, 
UCh¨32
 
c
) {

79 ((
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`add
(
c
);

80 
	}
}

82 
U_CAPI
 
U_EXPORT2


83 
	$u£t_addR™ge
(
USë
* 
£t
, 
UCh¨32
 
°¨t
, UCh¨32 
íd
) {

84 ((
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`add
(
°¨t
, 
íd
);

85 
	}
}

87 
U_CAPI
 
U_EXPORT2


88 
	$u£t_addSåög
(
USë
* 
£t
, c⁄° 
UCh¨
* 
°r
, 
öt32_t
 
°rLí
) {

90 
UnicodeSåög
 
	`s
(
°rLí
<0, 
°r
, strLen);

91 ((
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`add
(
s
);

92 
	}
}

94 
U_CAPI
 
U_EXPORT2


95 
	$u£t_addAŒCodePoöts
(
USë
* 
£t
, c⁄° 
UCh¨
 *
°r
, 
öt32_t
 
°rLí
) {

97 
UnicodeSåög
 
	`s
(
°r
, 
°rLí
);

98 ((
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`addAŒ
(
s
);

99 
	}
}

101 
U_CAPI
 
U_EXPORT2


102 
	$u£t_ªmove
(
USë
* 
£t
, 
UCh¨32
 
c
) {

103 ((
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`ªmove
(
c
);

104 
	}
}

106 
U_CAPI
 
U_EXPORT2


107 
	$u£t_ªmoveR™ge
(
USë
* 
£t
, 
UCh¨32
 
°¨t
, UCh¨32 
íd
) {

108 ((
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`ªmove
(
°¨t
, 
íd
);

109 
	}
}

111 
U_CAPI
 
U_EXPORT2


112 
	$u£t_ªmoveSåög
(
USë
* 
£t
, c⁄° 
UCh¨
* 
°r
, 
öt32_t
 
°rLí
) {

113 
UnicodeSåög
 
	`s
(
°rLí
==-1, 
°r
, strLen);

114 ((
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`ªmove
(
s
);

115 
	}
}

117 
U_CAPI
 
U_EXPORT2


118 
	$u£t_ªmoveAŒ
(
USë
* 
£t
, c⁄° USë* 
ªmove
) {

119 ((
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`ªmoveAŒ
(*(c⁄° UnicodeSë*)
ªmove
);

120 
	}
}

122 
U_CAPI
 
U_EXPORT2


123 
	$u£t_ªèö
(
USë
* 
£t
, 
UCh¨32
 
°¨t
, UCh¨32 
íd
) {

124 ((
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`ªèö
(
°¨t
, 
íd
);

125 
	}
}

127 
U_CAPI
 
U_EXPORT2


128 
	$u£t_ªèöAŒ
(
USë
* 
£t
, c⁄° USë* 
ªèö
) {

129 ((
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`ªèöAŒ
(*(c⁄° UnicodeSë*)
ªèö
);

130 
	}
}

132 
U_CAPI
 
U_EXPORT2


133 
	$u£t_com∑˘
(
USë
* 
£t
) {

134 ((
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`com∑˘
();

135 
	}
}

137 
U_CAPI
 
U_EXPORT2


138 
	$u£t_com∂emít
(
USë
* 
£t
) {

139 ((
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`com∂emít
();

140 
	}
}

142 
U_CAPI
 
U_EXPORT2


143 
	$u£t_com∂emítAŒ
(
USë
* 
£t
, c⁄° USë* 
com∂emít
) {

144 ((
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`com∂emítAŒ
(*(c⁄° UnicodeSë*)
com∂emít
);

145 
	}
}

147 
U_CAPI
 
U_EXPORT2


148 
	$u£t_˛ór
(
USë
* 
£t
) {

149 ((
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`˛ór
();

150 
	}
}

152 
U_CAPI
 
U_EXPORT2


153 
	$u£t_˛o£Ovî
(
USë
* 
£t
, 
öt32_t
 
©åibuãs
) {

154 ((
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`˛o£Ovî
(
©åibuãs
);

155 
	}
}

157 
U_CAPI
 
U_EXPORT2


158 
	$u£t_ªmoveAŒSåögs
(
USë
* 
£t
) {

159 ((
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`ªmoveAŒSåögs
();

160 
	}
}

162 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


163 
	$u£t_isEm±y
(c⁄° 
USë
* 
£t
) {

164  ((c⁄° 
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`isEm±y
();

165 
	}
}

167 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


168 
	$u£t_c⁄èös
(c⁄° 
USë
* 
£t
, 
UCh¨32
 
c
) {

169  ((c⁄° 
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`c⁄èös
(
c
);

170 
	}
}

172 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


173 
	$u£t_c⁄èösR™ge
(c⁄° 
USë
* 
£t
, 
UCh¨32
 
°¨t
, UCh¨32 
íd
) {

174  ((c⁄° 
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`c⁄èös
(
°¨t
, 
íd
);

175 
	}
}

177 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


178 
	$u£t_c⁄èösSåög
(c⁄° 
USë
* 
£t
, c⁄° 
UCh¨
* 
°r
, 
öt32_t
 
°rLí
) {

179 
UnicodeSåög
 
	`s
(
°rLí
==-1, 
°r
, strLen);

180  ((c⁄° 
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`c⁄èös
(
s
);

181 
	}
}

183 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


184 
	$u£t_c⁄èösAŒ
(c⁄° 
USë
* 
£t1
, c⁄° USë* 
£t2
) {

185  ((c⁄° 
UnicodeSë
*Ë
£t1
)->UnicodeSë::
	`c⁄èösAŒ
(* (c⁄° UnicodeSë*Ë
£t2
);

186 
	}
}

188 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


189 
	$u£t_c⁄èösAŒCodePoöts
(c⁄° 
USë
* 
£t
, c⁄° 
UCh¨
 *
°r
, 
öt32_t
 
°rLí
) {

191 
UnicodeSåög
 
	`s
(
°rLí
==-1, 
°r
, strLen);

192  ((c⁄° 
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`c⁄èösAŒ
(
s
);

193 
	}
}

195 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


196 
	$u£t_c⁄èösN⁄e
(c⁄° 
USë
* 
£t1
, c⁄° USë* 
£t2
) {

197  ((c⁄° 
UnicodeSë
*Ë
£t1
)->UnicodeSë::
	`c⁄èösN⁄e
(* (c⁄° UnicodeSë*Ë
£t2
);

198 
	}
}

200 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


201 
	$u£t_c⁄èösSome
(c⁄° 
USë
* 
£t1
, c⁄° USë* 
£t2
) {

202  ((c⁄° 
UnicodeSë
*Ë
£t1
)->UnicodeSë::
	`c⁄èösSome
(* (c⁄° UnicodeSë*Ë
£t2
);

203 
	}
}

205 
U_CAPI
 
öt32_t
 
U_EXPORT2


206 
	$u£t_•™
(c⁄° 
USë
 *
£t
, c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
) {

207  ((
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`•™
(
s
, 
Àngth
, 
•™C⁄dôi⁄
);

208 
	}
}

210 
U_CAPI
 
öt32_t
 
U_EXPORT2


211 
	$u£t_•™Back
(c⁄° 
USë
 *
£t
, c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
) {

212  ((
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`•™Back
(
s
, 
Àngth
, 
•™C⁄dôi⁄
);

213 
	}
}

215 
U_CAPI
 
öt32_t
 
U_EXPORT2


216 
	$u£t_•™UTF8
(c⁄° 
USë
 *
£t
, c⁄° *
s
, 
öt32_t
 
Àngth
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
) {

217  ((
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`•™UTF8
(
s
, 
Àngth
, 
•™C⁄dôi⁄
);

218 
	}
}

220 
U_CAPI
 
öt32_t
 
U_EXPORT2


221 
	$u£t_•™BackUTF8
(c⁄° 
USë
 *
£t
, c⁄° *
s
, 
öt32_t
 
Àngth
, 
USëS∑nC⁄dôi⁄
 
•™C⁄dôi⁄
) {

222  ((
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`•™BackUTF8
(
s
, 
Àngth
, 
•™C⁄dôi⁄
);

223 
	}
}

225 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


226 
	$u£t_equÆs
(c⁄° 
USë
* 
£t1
, c⁄° USë* 
£t2
) {

227  *(c⁄° 
UnicodeSë
*)
£t1
 =*(c⁄° UnicodeSë*)
£t2
;

228 
	}
}

230 
U_CAPI
 
öt32_t
 
U_EXPORT2


231 
	$u£t_ödexOf
(c⁄° 
USë
* 
£t
, 
UCh¨32
 
c
) {

232  ((
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`ödexOf
(
c
);

233 
	}
}

235 
U_CAPI
 
UCh¨32
 
U_EXPORT2


236 
	$u£t_ch¨At
(c⁄° 
USë
* 
£t
, 
öt32_t
 
ödex
) {

237  ((
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`ch¨At
(
ödex
);

238 
	}
}

240 
U_CAPI
 
öt32_t
 
U_EXPORT2


241 
	$u£t_size
(c⁄° 
USë
* 
£t
) {

242  ((c⁄° 
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`size
();

243 
	}
}

245 
U_NAMESPACE_BEGIN


251 ˛as†
	cUSëAc˚ss
 {

252 
	mpublic
:

254 
ölöe
 
öt32_t
 
	$gëSåögCou¡
(c⁄° 
UnicodeSë
& 
£t
) {

255  
£t
.
	`gëSåögCou¡
();

257 
ölöe
 c⁄° 
UnicodeSåög
* 
	$gëSåög
(c⁄° 
UnicodeSë
& 
£t
,

258 
öt32_t
 
i
) {

259  
£t
.
	`gëSåög
(
i
);

260 
	}
}

261 
	g¥iv©e
:

263 
USëAc˚ss
();

265 
U_NAMESPACE_END


267 
U_CAPI
 
öt32_t
 
U_EXPORT2


268 
	$u£t_gëIãmCou¡
(c⁄° 
USë
* 
u£t
) {

269 c⁄° 
UnicodeSë
& 
£t
 = *(c⁄° UnicodeSë*)
u£t
;

270  
£t
.
	`gëR™geCou¡
(Ë+ 
USëAc˚ss
::
	`gëSåögCou¡
(set);

271 
	}
}

273 
U_CAPI
 
öt32_t
 
U_EXPORT2


274 
	$u£t_gëIãm
(c⁄° 
USë
* 
u£t
, 
öt32_t
 
ôemIndex
,

275 
UCh¨32
* 
°¨t
, UCh¨32* 
íd
,

276 
UCh¨
* 
°r
, 
öt32_t
 
°rC≠acôy
,

277 
UEº‹Code
* 
ec
) {

278 i‡(
	`U_FAILURE
(*
ec
))  0;

279 c⁄° 
UnicodeSë
& 
£t
 = *(c⁄° UnicodeSë*)
u£t
;

280 
öt32_t
 
øngeCou¡
;

282 i‡(
ôemIndex
 < 0) {

283 *
ec
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

285 } i‡(
ôemIndex
 < (
øngeCou¡
 = 
£t
.
	`gëR™geCou¡
())) {

286 *
°¨t
 = 
£t
.
	`gëR™geSèπ
(
ôemIndex
);

287 *
íd
 = 
£t
.
	`gëR™geEnd
(
ôemIndex
);

290 
ôemIndex
 -
øngeCou¡
;

291 i‡(
ôemIndex
 < 
USëAc˚ss
::
	`gëSåögCou¡
(
£t
)) {

292 c⁄° 
UnicodeSåög
* 
s
 = 
USëAc˚ss
::
	`gëSåög
(
£t
, 
ôemIndex
);

293  
s
->
	`exåa˘
(
°r
, 
°rC≠acôy
, *
ec
);

295 *
ec
 = 
U_INDEX_OUTOFBOUNDS_ERROR
;

299 
	}
}

336 
U_CAPI
 
öt32_t
 
U_EXPORT2


337 
	$u£t_£rülize
(c⁄° 
USë
* 
£t
, 
uöt16_t
* 
de°
, 
öt32_t
 
de°C≠acôy
, 
UEº‹Code
* 
ec
) {

338 i‡(
ec
==
NULL
 || 
	`U_FAILURE
(*ec)) {

342  ((c⁄° 
UnicodeSë
*Ë
£t
)->UnicodeSë::
	`£rülize
(
de°
, 
de°C≠acôy
,* 
ec
);

343 
	}
}

345 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


346 
	$u£t_gëSîülizedSë
(
USîülizedSë
* 
fûlSë
, c⁄° 
uöt16_t
* 
§c
, 
öt32_t
 
§cLígth
) {

347 
öt32_t
 
Àngth
;

349 if(
fûlSë
==
NULL
) {

350  
FALSE
;

352 if(
§c
==
NULL
 || 
§cLígth
<=0) {

353 
fûlSë
->
Àngth
=fûlSë->
bmpLígth
=0;

354  
FALSE
;

357 
Àngth
=*
§c
++;

358 if(
Àngth
&0x8000) {

360 
Àngth
&=0x7fff;

361 if(
§cLígth
<(2+
Àngth
)) {

362 
fûlSë
->
Àngth
=fûlSë->
bmpLígth
=0;

363  
FALSE
;

365 
fûlSë
->
bmpLígth
=*
§c
++;

368 if(
§cLígth
<(1+
Àngth
)) {

369 
fûlSë
->
Àngth
=fûlSë->
bmpLígth
=0;

370  
FALSE
;

372 
fûlSë
->
bmpLígth
=
Àngth
;

374 
fûlSë
->
¨øy
=
§c
;

375 
fûlSë
->
Àngth
=length;

376  
TRUE
;

377 
	}
}

379 
U_CAPI
 
U_EXPORT2


380 
	$u£t_£tSîülizedToO√
(
USîülizedSë
* 
fûlSë
, 
UCh¨32
 
c
) {

381 if(
fûlSë
==
NULL
 || (
uöt32_t
)
c
>0x10ffff) {

385 
fûlSë
->
¨øy
=fûlSë->
°©icAºay
;

386 if(
c
<0xffff) {

387 
fûlSë
->
bmpLígth
=fûlSë->
Àngth
=2;

388 
fûlSë
->
°©icAºay
[0]=(
uöt16_t
)
c
;

389 
fûlSë
->
°©icAºay
[1]=(
uöt16_t
)
c
+1;

390 } if(
c
==0xffff) {

391 
fûlSë
->
bmpLígth
=1;

392 
fûlSë
->
Àngth
=3;

393 
fûlSë
->
°©icAºay
[0]=0xffff;

394 
fûlSë
->
°©icAºay
[1]=1;

395 
fûlSë
->
°©icAºay
[2]=0;

396 } if(
c
<0x10ffff) {

397 
fûlSë
->
bmpLígth
=0;

398 
fûlSë
->
Àngth
=4;

399 
fûlSë
->
°©icAºay
[0]=(
uöt16_t
)(
c
>>16);

400 
fûlSë
->
°©icAºay
[1]=(
uöt16_t
)
c
;

401 ++
c
;

402 
fûlSë
->
°©icAºay
[2]=(
uöt16_t
)(
c
>>16);

403 
fûlSë
->
°©icAºay
[3]=(
uöt16_t
)
c
;

405 
fûlSë
->
bmpLígth
=0;

406 
fûlSë
->
Àngth
=2;

407 
fûlSë
->
°©icAºay
[0]=0x10;

408 
fûlSë
->
°©icAºay
[1]=0xffff;

410 
	}
}

412 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


413 
	$u£t_£rülizedC⁄èös
(c⁄° 
USîülizedSë
* 
£t
, 
UCh¨32
 
c
) {

414 c⁄° 
uöt16_t
* 
¨øy
;

416 if(
£t
==
NULL
 || (
uöt32_t
)
c
>0x10ffff) {

417  
FALSE
;

420 
¨øy
=
£t
->array;

421 if(
c
<=0xffff) {

423 
öt32_t
 
lo
 = 0;

424 
öt32_t
 
hi
 = 
£t
->
bmpLígth
-1;

425 i‡(
c
 < 
¨øy
[0]) {

426 
hi
 = 0;

427 } i‡(
c
 < 
¨øy
[
hi
]) {

429 
öt32_t
 
i
 = (
lo
 + 
hi
) >> 1;

430 i‡(
i
 =
lo
) {

432 } i‡(
c
 < 
¨øy
[
i
]) {

433 
hi
 = 
i
;

435 
lo
 = 
i
;

439 
hi
 += 1;

441  (
UBoﬁ
)(
hi
&1);

444 
uöt16_t
 
high
=(uöt16_t)(
c
>>16), 
low
=(uint16_t)c;

445 
öt32_t
 
ba£
 = 
£t
->
bmpLígth
;

446 
öt32_t
 
lo
 = 0;

447 
öt32_t
 
hi
 = 
£t
->
Àngth
 - 2 - 
ba£
;

448 i‡(
high
 < 
¨øy
[
ba£
] || (high=˜ºay[ba£] && 
low
<array[base+1])) {

449 
hi
 = 0;

450 } i‡(
high
 < 
¨øy
[
ba£
+
hi
] || (high=˜ºay[ba£+hi] && 
low
<array[base+hi+1])) {

452 
öt32_t
 
i
 = ((
lo
 + 
hi
) >> 1) & ~1;

453 
öt32_t
 
übs
 = 
i
 + 
ba£
;

454 i‡(
i
 =
lo
) {

456 } i‡(
high
 < 
¨øy
[
übs
] || (high=˜ºay[übs] && 
low
<array[iabs+1])) {

457 
hi
 = 
i
;

459 
lo
 = 
i
;

463 
hi
 += 2;

466  (
UBoﬁ
)(((
hi
+(
ba£
<<1))&2)!=0);

468 
	}
}

470 
U_CAPI
 
öt32_t
 
U_EXPORT2


471 
	$u£t_gëSîülizedR™geCou¡
(c⁄° 
USîülizedSë
* 
£t
) {

472 if(
£t
==
NULL
) {

476  (
£t
->
bmpLígth
+(£t->
Àngth
-set->bmpLength)/2+1)/2;

477 
	}
}

479 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


480 
	$u£t_gëSîülizedR™ge
(c⁄° 
USîülizedSë
* 
£t
, 
öt32_t
 
øngeIndex
,

481 
UCh¨32
* 
pSèπ
, UCh¨32* 
pEnd
) {

482 c⁄° 
uöt16_t
* 
¨øy
;

483 
öt32_t
 
bmpLígth
, 
Àngth
;

485 if(
£t
==
NULL
 || 
øngeIndex
<0 || 
pSèπ
==NULL || 
pEnd
==NULL) {

486  
FALSE
;

489 
¨øy
=
£t
->array;

490 
Àngth
=
£t
->length;

491 
bmpLígth
=
£t
->bmpLength;

493 
øngeIndex
*=2;

494 if(
øngeIndex
<
bmpLígth
) {

495 *
pSèπ
=
¨øy
[
øngeIndex
++];

496 if(
øngeIndex
<
bmpLígth
) {

497 *
pEnd
=
¨øy
[
øngeIndex
]-1;

498 } if(
øngeIndex
<
Àngth
) {

499 *
pEnd
=((((
öt32_t
)
¨øy
[
øngeIndex
])<<16)|array[rangeIndex+1])-1;

501 *
pEnd
=0x10ffff;

503  
TRUE
;

505 
øngeIndex
-=
bmpLígth
;

506 
øngeIndex
*=2;

507 
Àngth
-=
bmpLígth
;

508 if(
øngeIndex
<
Àngth
) {

509 
¨øy
+=
bmpLígth
;

510 *
pSèπ
=(((
öt32_t
)
¨øy
[
øngeIndex
])<<16)|array[rangeIndex+1];

511 
øngeIndex
+=2;

512 if(
øngeIndex
<
Àngth
) {

513 *
pEnd
=((((
öt32_t
)
¨øy
[
øngeIndex
])<<16)|array[rangeIndex+1])-1;

515 *
pEnd
=0x10ffff;

517  
TRUE
;

519  
FALSE
;

522 
	}
}

	@uset_imp.h

19 #i‚de‡
__USET_IMP_H__


20 
	#__USET_IMP_H__


	)

22 
	~"unicode/uty≥s.h
"

23 
	~"unicode/u£t.h
"

25 
U_CDECL_BEGIN


27 
	tU_CALLCONV


28 
	tUSëAdd
(
	tUSë
 *
	t£t
, 
	tUCh¨32
 
	tc
);

30 
	tU_CALLCONV


31 
	tUSëAddR™ge
(
	tUSë
 *
	t£t
, 
	tUCh¨32
 
	t°¨t
, UCh¨32 
	tíd
);

33 
	tU_CALLCONV


34 
	tUSëAddSåög
(
	tUSë
 *
	t£t
, c⁄° 
	tUCh¨
 *
	t°r
, 
	töt32_t
 
	tÀngth
);

36 
	tU_CALLCONV


37 
	tUSëRemove
(
	tUSë
 *
	t£t
, 
	tUCh¨32
 
	tc
);

39 
	tU_CALLCONV


40 
	tUSëRemoveR™ge
(
	tUSë
 *
	t£t
, 
	tUCh¨32
 
	t°¨t
, UCh¨32 
	tíd
);

47 
	sUSëAddî
 {

48 
USë
 *
	m£t
;

49 
USëAdd
 *
	madd
;

50 
USëAddR™ge
 *
	maddR™ge
;

51 
USëAddSåög
 *
	maddSåög
;

52 
USëRemove
 *
	mªmove
;

53 
USëRemoveR™ge
 *
	mªmoveR™ge
;

55 
USëAddî
 
	tUSëAddî
;

57 
	gU_CDECL_END


	@uset_props.cpp

20 
	~"unicode/uty≥s.h
"

21 
	~"unicode/uobje˘.h
"

22 
	~"unicode/u£t.h
"

23 
	~"unicode/uni£t.h
"

24 
	~"cmem‹y.h
"

25 
	~"unicode/u°rög.h
"

26 
	~"unicode/∑r£pos.h
"

28 
U_NAMESPACE_USE


30 
U_CAPI
 
USë
* 
U_EXPORT2


31 
	$u£t_›íP©ã∫
(c⁄° 
UCh¨
* 
∑âîn
, 
öt32_t
 
∑âînLígth
,

32 
UEº‹Code
* 
ec
)

34 
UnicodeSåög
 
	`∑t
(
∑âînLígth
==-1, 
∑âîn
,ÖatternLength);

35 
UnicodeSë
* 
£t
 = 
√w
 
	`UnicodeSë
(
∑t
, *
ec
);

37 if(
£t
 == 0) {

38 *
ec
 = 
U_MEMORY_ALLOCATION_ERROR
;

42 i‡(
	`U_FAILURE
(*
ec
)) {

43 
dñëe
 
£t
;

44 
£t
 = 
NULL
;

46  (
USë
*Ë
£t
;

47 
	}
}

49 
U_CAPI
 
USë
* 
U_EXPORT2


50 
	$u£t_›íP©ã∫O±i⁄s
(c⁄° 
UCh¨
* 
∑âîn
, 
öt32_t
 
∑âînLígth
,

51 
uöt32_t
 
›ti⁄s
,

52 
UEº‹Code
* 
ec
)

54 
UnicodeSåög
 
	`∑t
(
∑âînLígth
==-1, 
∑âîn
,ÖatternLength);

55 
UnicodeSë
* 
£t
 = 
√w
 
	`UnicodeSë
(
∑t
, 
›ti⁄s
, 
NULL
, *
ec
);

57 if(
£t
 == 0) {

58 *
ec
 = 
U_MEMORY_ALLOCATION_ERROR
;

62 i‡(
	`U_FAILURE
(*
ec
)) {

63 
dñëe
 
£t
;

64 
£t
 = 
NULL
;

66  (
USë
*Ë
£t
;

67 
	}
}

70 
U_CAPI
 
öt32_t
 
U_EXPORT2


71 
	$u£t_≠∂yP©ã∫
(
USë
 *
£t
,

72 c⁄° 
UCh¨
 *
∑âîn
, 
öt32_t
 
∑âînLígth
,

73 
uöt32_t
 
›ti⁄s
,

74 
UEº‹Code
 *
°©us
){

78 if(
°©us
 =
NULL
 || 
	`U_FAILURE
(*status)){

85 if(
£t
 =
NULL
){

86 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

90 
UnicodeSåög
 
	`∑t
(
∑âîn
, 
∑âînLígth
);

92 
P¨£Posôi⁄
 
pos
;

94 ((
UnicodeSë
*Ë
£t
)->
	`≠∂yP©ã∫
(
∑t
, 
pos
, 
›ti⁄s
, 
NULL
, *
°©us
);

96  
pos
.
	`gëIndex
();

97 
	}
}

99 
U_CAPI
 
U_EXPORT2


100 
	$u£t_≠∂yI¡Pr›îtyVÆue
(
USë
* 
£t
,

101 
UPr›îty
 
¥›
, 
öt32_t
 
vÆue
, 
UEº‹Code
* 
ec
) {

102 ((
UnicodeSë
*Ë
£t
)->
	`≠∂yI¡Pr›îtyVÆue
(
¥›
, 
vÆue
, *
ec
);

103 
	}
}

105 
U_CAPI
 
U_EXPORT2


106 
	$u£t_≠∂yPr›îtyAlüs
(
USë
* 
£t
,

107 c⁄° 
UCh¨
 *
¥›
, 
öt32_t
 
¥›Lígth
,

108 c⁄° 
UCh¨
 *
vÆue
, 
öt32_t
 
vÆueLígth
,

109 
UEº‹Code
* 
ec
) {

111 
UnicodeSåög
 
	`p
(
¥›
, 
¥›Lígth
);

112 
UnicodeSåög
 
	`v
(
vÆue
, 
vÆueLígth
);

114 ((
UnicodeSë
*Ë
£t
)->
	`≠∂yPr›îtyAlüs
(
p
, 
v
, *
ec
);

115 
	}
}

117 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


118 
	$u£t_ª£mbÀsP©ã∫
(c⁄° 
UCh¨
 *
∑âîn
, 
öt32_t
 
∑âînLígth
,

119 
öt32_t
 
pos
) {

121 
UnicodeSåög
 
	`∑t
(
∑âîn
, 
∑âînLígth
);

123  ((
pos
+1Ë< 
∑t
.
	`Àngth
() &&

124 
∑t
.
	`ch¨At
(
pos
Ë=(
UCh¨
)91 ) ||

125 
UnicodeSë
::
	`ª£mbÀsP©ã∫
(
∑t
, 
pos
);

126 
	}
}

128 
U_CAPI
 
öt32_t
 
U_EXPORT2


129 
	$u£t_toP©ã∫
(c⁄° 
USë
* 
£t
,

130 
UCh¨
* 
ªsu…
, 
öt32_t
 
ªsu…C≠acôy
,

131 
UBoﬁ
 
esˇ≥U≈röèbÀ
,

132 
UEº‹Code
* 
ec
) {

133 
UnicodeSåög
 
∑t
;

134 ((c⁄° 
UnicodeSë
*Ë
£t
)->
	`toP©ã∫
(
∑t
, 
esˇ≥U≈röèbÀ
);

135  
∑t
.
	`exåa˘
(
ªsu…
, 
ªsu…C≠acôy
, *
ec
);

136 
	}
}

	@usetiter.cpp

7 
	~"unicode/u£tôî.h
"

8 
	~"unicode/uni£t.h
"

9 
	~"unicode/uni°r.h
"

10 
	~"uve˘‹.h
"

12 
U_NAMESPACE_BEGIN


14 
	$UOBJECT_DEFINE_RTTI_IMPLEMENTATION
(
UnicodeSëIãøt‹
)

20 
UnicodeSëIãøt‹
::
	$UnicodeSëIãøt‹
(c⁄° 
UnicodeSë
& 
uSë
) {

21 
˝Såög
 = 
NULL
;

22 
	`ª£t
(
uSë
);

23 
	}
}

28 
	gUnicodeSëIãøt‹
::
	$UnicodeSëIãøt‹
() {

29 
this
->
£t
 = 
NULL
;

30 
˝Såög
 = 
NULL
;

31 
	`ª£t
();

32 
	}
}

34 
	gUnicodeSëIãøt‹
::~
	$UnicodeSëIãøt‹
() {

35 
dñëe
 
˝Såög
;

36 
	}
}

47 
UBoﬁ
 
	gUnicodeSëIãøt‹
::
	$√xt
() {

48 i‡(
√xtEÀmít
 <
ídEÀmít
) {

49 
codïoöt
 = 
codïoötEnd
 = 
√xtEÀmít
++;

50 
°rög
 = 
NULL
;

51  
TRUE
;

53 i‡(
ønge
 < 
ídR™ge
) {

54 
	`lﬂdR™ge
(++
ønge
);

55 
codïoöt
 = 
codïoötEnd
 = 
√xtEÀmít
++;

56 
°rög
 = 
NULL
;

57  
TRUE
;

60 i‡(
√xtSåög
 >
°rögCou¡
Ë 
FALSE
;

61 
codïoöt
 = (
UCh¨32
)
IS_STRING
;

62 
°rög
 = (c⁄° 
UnicodeSåög
*Ë
£t
->
°rögs
->
	`ñemítAt
(
√xtSåög
++);

63  
TRUE
;

64 
	}
}

77 
UBoﬁ
 
	gUnicodeSëIãøt‹
::
	$√xtR™ge
() {

78 
°rög
 = 
NULL
;

79 i‡(
√xtEÀmít
 <
ídEÀmít
) {

80 
codïoötEnd
 = 
ídEÀmít
;

81 
codïoöt
 = 
√xtEÀmít
;

82 
√xtEÀmít
 = 
ídEÀmít
+1;

83  
TRUE
;

85 i‡(
ønge
 < 
ídR™ge
) {

86 
	`lﬂdR™ge
(++
ønge
);

87 
codïoötEnd
 = 
ídEÀmít
;

88 
codïoöt
 = 
√xtEÀmít
;

89 
√xtEÀmít
 = 
ídEÀmít
+1;

90  
TRUE
;

93 i‡(
√xtSåög
 >
°rögCou¡
Ë 
FALSE
;

94 
codïoöt
 = (
UCh¨32
)
IS_STRING
;

95 
°rög
 = (c⁄° 
UnicodeSåög
*Ë
£t
->
°rögs
->
	`ñemítAt
(
√xtSåög
++);

96  
TRUE
;

97 
	}
}

102 
	gUnicodeSëIãøt‹
::
	$ª£t
(c⁄° 
UnicodeSë
& 
uSë
) {

103 
this
->
£t
 = &
uSë
;

104 
	`ª£t
();

105 
	}
}

110 
	gUnicodeSëIãøt‹
::
	$ª£t
() {

111 i‡(
£t
 =
NULL
) {

113 
ídR™ge
 = -1;

114 
°rögCou¡
 = 0;

116 
ídR™ge
 = 
£t
->
	`gëR™geCou¡
() - 1;

117 
°rögCou¡
 = 
£t
->
°rögs
->
	`size
();

119 
ønge
 = 0;

120 
ídEÀmít
 = -1;

121 
√xtEÀmít
 = 0;

122 i‡(
ídR™ge
 >= 0) {

123 
	`lﬂdR™ge
(
ønge
);

125 
√xtSåög
 = 0;

126 
°rög
 = 
NULL
;

127 
	}
}

129 
	gUnicodeSëIãøt‹
::
	$lﬂdR™ge
(
öt32_t
 
iR™ge
) {

130 
√xtEÀmít
 = 
£t
->
	`gëR™geSèπ
(
iR™ge
);

131 
ídEÀmít
 = 
£t
->
	`gëR™geEnd
(
iR™ge
);

132 
	}
}

135 c⁄° 
	gUnicodeSåög
& 
	gUnicodeSëIãøt‹
::
	$gëSåög
() {

136 i‡(
°rög
==
NULL
 && 
codïoöt
!=(
UCh¨32
)
IS_STRING
) {

137 i‡(
˝Såög
 =
NULL
) {

138 
˝Såög
 = 
√w
 
	`UnicodeSåög
();

140 i‡(
˝Såög
 !
NULL
) {

141 
˝Såög
->
	`£tTo
((
UCh¨32
)
codïoöt
);

143 
°rög
 = 
˝Såög
;

145  *
°rög
;

146 
	}
}

148 
	gU_NAMESPACE_END


	@ushape.c

19 
	~"unicode/uty≥s.h
"

20 
	~"unicode/uch¨.h
"

21 
	~"unicode/u°rög.h
"

22 
	~"unicode/ush≠e.h
"

23 
	~"cmem‹y.h
"

24 
	~"putûimp.h
"

25 
	~"u°r_imp.h
"

26 
	~"ubidi_¥›s.h
"

28 #i‡
UTF_SIZE
<16

37 #îr‹ 
This
 
im∂emíèti⁄
 
assumes
 
UTF
-16 
‹
 UTF-32 (
check
 
UTF_SIZE
)

52 
	#IRRELEVANT
 4

	)

53 
	#LAMTYPE
 16

	)

54 
	#ALEFTYPE
 32

	)

55 
	#LINKR
 1

	)

56 
	#LINKL
 2

	)

57 
	#APRESENT
 8

	)

58 
	#SHADDA
 64

	)

59 
	#CSHADDA
 128

	)

60 
	#COMBINE
 (
SHADDA
+
CSHADDA
)

	)

62 
	#HAMZAFE_CHAR
 0x„80

	)

63 
	#HAMZA06_CHAR
 0x0621

	)

64 
	#YEH_HAMZA_CHAR
 0x0626

	)

65 
	#YEH_HAMZAFE_CHAR
 0xFE89

	)

66 
	#LAMALEF_SPACE_SUB
 0xFFFF

	)

67 
	#TASHKEEL_SPACE_SUB
 0xFFFE

	)

68 
	#NEW_TAIL_CHAR
 0xFE73

	)

69 
	#OLD_TAIL_CHAR
 0x200B

	)

70 
	#LAM_CHAR
 0x0644

	)

71 
	#SPACE_CHAR
 0x0020

	)

72 
	#SHADDA_CHAR
 0xFE7C

	)

73 
	#TATWEEL_CHAR
 0x0640

	)

74 
	#SHADDA_TATWEEL_CHAR
 0xFE7D

	)

76 
	#SHAPE_MODE
 0

	)

77 
	#DESHAPE_MODE
 1

	)

79 
UCh¨
 
	gèûCh¨
 = 
OLD_TAIL_CHAR
;

80 
uöt32_t
 
	guSh≠eLamÆefBegö
 = 
U_SHAPE_LAMALEF_BEGIN
;

81 
uöt32_t
 
	guSh≠eLamÆefEnd
 = 
U_SHAPE_LAMALEF_END
;

82 
uöt32_t
 
	guSh≠eTashkìlBegö
 = 
U_SHAPE_TASHKEEL_BEGIN
;

83 
uöt32_t
 
	guSh≠eTashkìlEnd
 = 
U_SHAPE_TASHKEEL_END
;

84 
	g•a˚sRñ©iveToTextBegöEnd
 = 0;

86 c⁄° 
uöt8_t
 
	gèûFamûyIsﬁ©edFöÆ
[] = {

103 c⁄° 
uöt8_t
 
	gèshkìlMedül
[] = {

122 c⁄° 
UCh¨
 
	gyehHamzaToYeh
[] =

128 c⁄° 
uöt8_t
 
	gIºñev™tPos
[] = {

134 c⁄° 
UCh¨
 
	gc⁄vîtLamAÀf
[] =

146 c⁄° 
UCh¨
 
	g¨aLök
[178]=

234 c⁄° 
uöt8_t
 
	g¥esALök
[] = {

256 c⁄° 
uöt8_t
 
	g¥esBLök
[]=

270 c⁄° 
UCh¨
 
	gc⁄vîtFBto06
[] =

286 c⁄° 
UCh¨
 
	gc⁄vîtFEto06
[] =

300 c⁄° 
uöt8_t
 
	gsh≠eTabÀ
[4][4][4]=

315 
	$_sh≠eToAøbicDigôsWôhC⁄ãxt
(
UCh¨
 *
s
, 
öt32_t
 
Àngth
,

316 
UCh¨
 
digôBa£
,

317 
UBoﬁ
 
isLogiˇl
, UBoﬁ 
œ°Så⁄gWasAL
) {

318 c⁄° 
UBiDiPr›s
 *
bdp
;

319 
öt32_t
 
i
;

320 
UCh¨
 
c
;

322 
bdp
=
	`ubidi_gëSögÀt⁄
();

323 
digôBa£
-=0x30;

326 if(
isLogiˇl
) {

327 
i
=0; i<
Àngth
; ++i) {

328 
c
=
s
[
i
];

329 
	`ubidi_gëCœss
(
bdp
, 
c
)) {

330 
U_LEFT_TO_RIGHT
:

331 
U_RIGHT_TO_LEFT
:

332 
œ°Så⁄gWasAL
=
FALSE
;

334 
U_RIGHT_TO_LEFT_ARABIC
:

335 
œ°Så⁄gWasAL
=
TRUE
;

337 
U_EUROPEAN_NUMBER
:

338 if(
œ°Så⁄gWasAL
 && (
uöt32_t
)(
c
-0x30)<10) {

339 
s
[
i
]=(
UCh¨
)(
digôBa£
+
c
);

347 
i
=
Àngth
; i>0; ) {

348 
c
=
s
[--
i
];

349 
	`ubidi_gëCœss
(
bdp
, 
c
)) {

350 
U_LEFT_TO_RIGHT
:

351 
U_RIGHT_TO_LEFT
:

352 
œ°Så⁄gWasAL
=
FALSE
;

354 
U_RIGHT_TO_LEFT_ARABIC
:

355 
œ°Så⁄gWasAL
=
TRUE
;

357 
U_EUROPEAN_NUMBER
:

358 if(
œ°Så⁄gWasAL
 && (
uöt32_t
)(
c
-0x30)<10) {

359 
s
[
i
]=(
UCh¨
)(
digôBa£
+
c
);

367 
	}
}

377 
	$övîtBuf„r
(
UCh¨
 *
buf„r
,
öt32_t
 
size
,
uöt64_t
 
›ti⁄s
,öt32_à
lowlimô
,öt32_à
highlimô
) {

379 
UCh¨
 
ãmp
;

380 
öt32_t
 
i
=0,
j
=0;

381 
i
=
lowlimô
,
j
=
size
-
highlimô
-1;i<j;i++,j--) {

382 
ãmp
 = 
buf„r
[
i
];

383 
buf„r
[
i
] = buf„r[
j
];

384 
buf„r
[
j
] = 
ãmp
;

386 
	}
}

396 
U_INLINE
 
UCh¨


397 
	$ch™geLamAÀf
(
UCh¨
 
ch
) {

398 
ch
) {

409 
	}
}

417 
UCh¨


418 
	$gëLök
(
UCh¨
 
ch
) {

419 if(
ch
 >= 0x0622 && ch <= 0x06D3) {

420 (
¨aLök
[
ch
-0x0622]);

421 } if(
ch
 == 0x200D) {

423 } if(
ch
 >= 0x206D && ch <= 0x206F) {

425 }if(
ch
 >= 0xFB50 && ch <= 0xFC62) {

426 (
¥esALök
[
ch
-0xFB50]);

427 } if(
ch
 >= 0xFE70 && ch <= 0xFEFC) {

428 (
¥esBLök
[
ch
-0xFE70]);

432 
	}
}

441 
	$cou¡S∑˚s
(
UCh¨
 *
de°
,
öt32_t
 
size
,
uöt64_t
 
›ti⁄s
,öt32_à*
•a˚sCou¡l
,öt32_à*
•a˚sCou¡r
) {

443 
öt32_t
 
i
 = 0;

444 
öt32_t
 
cou¡l
 = 0,
cou¡r
 = 0;

445 
de°
[
i
] =
SPACE_CHAR
) {

446 
cou¡l
++;

447 
i
++;

449 
de°
[
size
-1] =
SPACE_CHAR
) {

450 
cou¡r
++;

451 
size
--;

453 *
•a˚sCou¡l
 = 
cou¡l
;

454 *
•a˚sCou¡r
 = 
cou¡r
;

455 
	}
}

461 
U_INLINE
 
öt32_t


462 
	$isTashkìlCh¨
(
UCh¨
 
ch
) {

463  (
öt32_t
)–
ch
>=0x064B && ch<= 0x0652 );

464 
	}
}

470 
U_INLINE
 
öt32_t


471 
	$isTashkìlCh¨FE
(
UCh¨
 
ch
) {

472  (
öt32_t
)–
ch
>=0xFE70 && ch<= 0xFE7F );

473 
	}
}

479 
U_INLINE
 
öt32_t


480 
	$isAÀfCh¨
(
UCh¨
 
ch
) {

481  (
öt32_t
)–(
ch
==0x0622)||(ch==0x0623)||(ch==0x0625)||(ch==0x0627) );

482 
	}
}

488 
U_INLINE
 
öt32_t


489 
	$isLamAÀfCh¨
(
UCh¨
 
ch
) {

490  (
öt32_t
)((
ch
>=0xFEF5)&&(ch<=0xFEFC) );

491 
	}
}

498 
U_INLINE
 
öt32_t


499 
	$isTaûCh¨
(
UCh¨
 
ch
) {

500 if(
ch
 =
OLD_TAIL_CHAR
 || ch =
NEW_TAIL_CHAR
){

505 
	}
}

513 
U_INLINE
 
öt32_t


514 
	$isSìnTaûFamûyCh¨
(
UCh¨
 
ch
) {

515 if(
ch
 >= 0xfeb1 && ch < 0xfebf){

516  
èûFamûyIsﬁ©edFöÆ
 [
ch
 - 0xFEB1];

520 
	}
}

527 
U_INLINE
 
öt32_t


528 
	$isSìnFamûyCh¨
(
UCh¨
 
ch
){

529 if(
ch
 >= 0x633 && ch <= 0x636){

534 
	}
}

542 
U_INLINE
 
öt32_t


543 
	$isAÀfMaksouøCh¨
(
UCh¨
 
ch
) {

544  (
öt32_t
)–(
ch
 == 0xFEEF) || ( ch == 0xFEF0) || (ch == 0x0649));

545 
	}
}

552 
U_INLINE
 
öt32_t


553 
	$isYehHamzaCh¨
(
UCh¨
 
ch
) {

554 if((
ch
==0xFE89)||(ch==0xFE8A)){

559 
	}
}

568 
U_INLINE
 
öt32_t


569 
	$isTashkìlOnT©wìlCh¨
(
UCh¨
 
ch
){

570 if(
ch
 >0x„70 && ch <0x„7‡&& ch !
NEW_TAIL_CHAR
 && ch !0xFE75 && ch !
SHADDA_TATWEEL_CHAR
)

572  
èshkìlMedül
 [
ch
 - 0xFE70];

573 }if–(
ch
 >0xfcf2 && ch <0xfcf4Ë|| (ch =
SHADDA_TATWEEL_CHAR
)) {

578 
	}
}

587 
U_INLINE
 
öt32_t


588 
	$isIsﬁ©edTashkìlCh¨
(
UCh¨
 
ch
){

589 if(
ch
 >0x„70 && ch <0x„7‡&& ch !
NEW_TAIL_CHAR
 && ch != 0xFE75){

590  (1 - 
èshkìlMedül
 [
ch
 - 0xFE70]);

591 }if(
ch
 >= 0xfc5e && ch <= 0xfc63){

596 
	}
}

610 
öt32_t


611 
	$ˇlcuœãSize
(c⁄° 
UCh¨
 *
sour˚
, 
öt32_t
 
sour˚Lígth
,

612 
öt32_t
 
de°Size
,
uöt64_t
 
›ti⁄s
) {

614 
öt32_t
 
i
 = 0;

616 
œmAÀfO±i⁄
 = 0;

617 
èshkìlO±i⁄
 = 0;

619 
de°Size
 = 
sour˚Lígth
;

621 i‡(((
›ti⁄s
&
U_SHAPE_LETTERS_MASK
Ë=
U_SHAPE_LETTERS_SHAPE
 ||

622 ((
›ti⁄s
&
U_SHAPE_LETTERS_MASK
Ë=
U_SHAPE_LETTERS_SHAPE_TASHKEEL_ISOLATED
 )) &&

623 ((
›ti⁄s
&
U_SHAPE_LAMALEF_MASK
Ë=
U_SHAPE_LAMALEF_RESIZE
 )){

624 
œmAÀfO±i⁄
 = 1;

626 if((
›ti⁄s
&
U_SHAPE_LETTERS_MASK
Ë=
U_SHAPE_LETTERS_SHAPE
 &&

627 ((
›ti⁄s
&
U_SHAPE_TASHKEEL_MASK
Ë=
U_SHAPE_TASHKEEL_RESIZE
 ) ){

628 
èshkìlO±i⁄
 = 1;

631 if(
œmAÀfO±i⁄
 || 
èshkìlO±i⁄
){

632 if((
›ti⁄s
&
U_SHAPE_TEXT_DIRECTION_MASK
)==
U_SHAPE_TEXT_DIRECTION_VISUAL_LTR
) {

633 
i
=0;i<
sour˚Lígth
;i++) {

634 if–((
	`isAÀfCh¨
(
sour˚
[
i
]))&& (i<(
sour˚Lígth
-1)Ë&&(sour˚[i+1] =
LAM_CHAR
)Ë|| (
	`isTashkìlCh¨FE
(source[i])) ) {

635 
de°Size
--;

638 }if((
›ti⁄s
&
U_SHAPE_TEXT_DIRECTION_MASK
)==
U_SHAPE_TEXT_DIRECTION_LOGICAL
) {

639 
i
=0;i<
sour˚Lígth
;i++) {

640 if––(
sour˚
[
i
] =
LAM_CHAR
Ë&& (i<(
sour˚Lígth
-1)Ë&& (
	`isAÀfCh¨
(sour˚[i+1]))Ë|| (
	`isTashkìlCh¨FE
(source[i])) ) {

641 
de°Size
--;

647 i‡((
›ti⁄s
&
U_SHAPE_LETTERS_MASK
Ë=
U_SHAPE_LETTERS_UNSHAPE
){

648 i‡–(
›ti⁄s
&
U_SHAPE_LAMALEF_MASK
Ë=
U_SHAPE_LAMALEF_RESIZE
){

649 
i
=0;i<
sour˚Lígth
;i++) {

650 if(
	`isLamAÀfCh¨
(
sour˚
[
i
]))

651 
de°Size
++;

656  
de°Size
;

657 
	}
}

669 
öt32_t


670 
	$h™dÀTashkìlWôhT©wìl
(
UCh¨
 *
de°
, 
öt32_t
 
sour˚Lígth
,

671 
öt32_t
 
de°Size
,
uöt64_t
 
›ti⁄s
,

672 
UEº‹Code
 *
pEº‹Code
) {

674 
i
;

675 
i
 = 0; i < 
sour˚Lígth
; i++){

676 if((
	`isTashkìlOnT©wìlCh¨
(
de°
[
i
]) == 1)){

677 
de°
[
i
] = 
TATWEEL_CHAR
;

678 }if((
	`isTashkìlOnT©wìlCh¨
(
de°
[
i
]) == 2)){

679 
de°
[
i
] = 
SHADDA_TATWEEL_CHAR
;

680 }if(
	`isIsﬁ©edTashkìlCh¨
(
de°
[
i
]Ë&& de°[i] !
SHADDA_CHAR
){

681 
de°
[
i
] = 
SPACE_CHAR
;

684  
sour˚Lígth
;

685 
	}
}

709 
öt32_t


710 
	$h™dÀGíî©edS∑˚s
(
UCh¨
 *
de°
, 
öt32_t
 
sour˚Lígth
,

711 
öt32_t
 
de°Size
,

712 
uöt64_t
 
›ti⁄s
,

713 
UEº‹Code
 *
pEº‹Code
 ) {

716 
öt32_t
 
i
 = 0, 
j
 = 0;

717 
öt32_t
 
cou¡
 = 0;

718 
UCh¨
 *
ãmpbuf„r
=
NULL
;

720 
œmAÀfO±i⁄
 = 0;

721 
èshkìlO±i⁄
 = 0;

722 
sh≠ögMode
 = 
SHAPE_MODE
;

724 i‡(
sh≠ögMode
 == 0){

725 i‡–(
›ti⁄s
&
U_SHAPE_LAMALEF_MASK
Ë=
U_SHAPE_LAMALEF_RESIZE
 ){

726 
œmAÀfO±i⁄
 = 1;

728 i‡–(
›ti⁄s
&
U_SHAPE_TASHKEEL_MASK
Ë=
U_SHAPE_TASHKEEL_RESIZE
 ){

729 
èshkìlO±i⁄
 = 1;

733 i‡(
œmAÀfO±i⁄
 || 
èshkìlO±i⁄
){

734 
ãmpbuf„r
 = (
UCh¨
 *)
	`u¥v_mÆloc
((
sour˚Lígth
+1)*
U_SIZEOF_UCHAR
);

736 if(
ãmpbuf„r
 =
NULL
) {

737 *
pEº‹Code
 = 
U_MEMORY_ALLOCATION_ERROR
;

741 
	`u¥v_mem£t
(
ãmpbuf„r
, 0, (
sour˚Lígth
+1)*
U_SIZEOF_UCHAR
);

743 
i
 = 
j
 = 0; 
cou¡
 = 0;

744 
i
 < 
sour˚Lígth
) {

745 i‡–(
œmAÀfO±i⁄
 && 
de°
[
i
] =
LAMALEF_SPACE_SUB
) ||

746 (
èshkìlO±i⁄
 && 
de°
[
i
] =
TASHKEEL_SPACE_SUB
) ){

747 
j
--;

748 
cou¡
++;

750 
ãmpbuf„r
[
j
] = 
de°
[
i
];

752 
i
++;

753 
j
++;

756 
cou¡
 >= 0) {

757 
ãmpbuf„r
[
i
] = 0x0000;

758 
i
--;

759 
cou¡
--;

762 
	`u¥v_mem˝y
(
de°
, 
ãmpbuf„r
, 
sour˚Lígth
*
U_SIZEOF_UCHAR
);

763 
de°Size
 = 
	`u_°æí
(
de°
);

766 
œmAÀfO±i⁄
 = 0;

768 i‡(
sh≠ögMode
 == 0){

770 i‡–(
›ti⁄s
&
U_SHAPE_LAMALEF_MASK
Ë=
U_SHAPE_LAMALEF_NEAR
 &&

771 (
›ti⁄s
&
U_SHAPE_X_LAMALEF_SUB_ALTERNATE
) == 0) {

773 
œmAÀfO±i⁄
 = 1;

777 i‡(
œmAÀfO±i⁄
){

779 
i
 = 0;

780 
i
 < 
sour˚Lígth
) {

781 if(
œmAÀfO±i⁄
&&
de°
[
i
] =
LAMALEF_SPACE_SUB
){

782 
de°
[
i
] = 
SPACE_CHAR
;

784 
i
++;

786 
de°Size
 = 
sour˚Lígth
;

788 
œmAÀfO±i⁄
 = 0;

789 
èshkìlO±i⁄
 = 0;

791 i‡(
sh≠ögMode
 == 0) {

792 i‡–((
›ti⁄s
&
U_SHAPE_LAMALEF_MASK
Ë=
uSh≠eLamÆefBegö
) ||

793 (((
›ti⁄s
&
U_SHAPE_LAMALEF_MASK
Ë=
U_SHAPE_LAMALEF_AUTO
 )

794 && (
•a˚sRñ©iveToTextBegöEnd
==1)) ) {

795 
œmAÀfO±i⁄
 = 1;

797 i‡–(
›ti⁄s
&
U_SHAPE_TASHKEEL_MASK
Ë=
uSh≠eTashkìlBegö
 ) {

798 
èshkìlO±i⁄
 = 1;

802 if(
œmAÀfO±i⁄
 || 
èshkìlO±i⁄
){

803 
ãmpbuf„r
 = (
UCh¨
 *)
	`u¥v_mÆloc
((
sour˚Lígth
+1)*
U_SIZEOF_UCHAR
);

806 if(
ãmpbuf„r
 =
NULL
) {

807 *
pEº‹Code
 = 
U_MEMORY_ALLOCATION_ERROR
;

811 
	`u¥v_mem£t
(
ãmpbuf„r
, 0, (
sour˚Lígth
+1)*
U_SIZEOF_UCHAR
);

812 
i
 = 
j
 = 
sour˚Lígth
; 
cou¡
 = 0;

813 
i
 >= 0) {

814 i‡–(
œmAÀfO±i⁄
 && 
de°
[
i
] =
LAMALEF_SPACE_SUB
) ||

815 (
èshkìlO±i⁄
 && 
de°
[
i
] =
TASHKEEL_SPACE_SUB
) ){

816 
j
++;

817 
cou¡
++;

819 
ãmpbuf„r
[
j
] = 
de°
[
i
];

821 
i
--;

822 
j
--;

825 
i
=0 ;ò< 
cou¡
; i++){

826 
ãmpbuf„r
[
i
] = 
SPACE_CHAR
;

829 
	`u¥v_mem˝y
(
de°
, 
ãmpbuf„r
, 
sour˚Lígth
*
U_SIZEOF_UCHAR
);

830 
de°Size
 = 
sour˚Lígth
;

835 
œmAÀfO±i⁄
 = 0;

836 
èshkìlO±i⁄
 = 0;

838 i‡(
sh≠ögMode
 == 0) {

839 i‡–((
›ti⁄s
&
U_SHAPE_LAMALEF_MASK
Ë=
uSh≠eLamÆefEnd
) ||

840 (((
›ti⁄s
&
U_SHAPE_LAMALEF_MASK
Ë=
U_SHAPE_LAMALEF_AUTO
 )

841 && (
•a˚sRñ©iveToTextBegöEnd
==0)) ) {

842 
œmAÀfO±i⁄
 = 1;

844 i‡–(
›ti⁄s
&
U_SHAPE_TASHKEEL_MASK
Ë=
uSh≠eTashkìlEnd
 ){

845 
èshkìlO±i⁄
 = 1;

849 if(
œmAÀfO±i⁄
 || 
èshkìlO±i⁄
){

850 
ãmpbuf„r
 = (
UCh¨
 *)
	`u¥v_mÆloc
((
sour˚Lígth
+1)*
U_SIZEOF_UCHAR
);

852 if(
ãmpbuf„r
 =
NULL
) {

853 *
pEº‹Code
 = 
U_MEMORY_ALLOCATION_ERROR
;

857 
	`u¥v_mem£t
(
ãmpbuf„r
, 0, (
sour˚Lígth
+1)*
U_SIZEOF_UCHAR
);

859 
i
 = 
j
 = 0; 
cou¡
 = 0;

860 
i
 < 
sour˚Lígth
) {

861 i‡–(
œmAÀfO±i⁄
 && 
de°
[
i
] =
LAMALEF_SPACE_SUB
) ||

862 (
èshkìlO±i⁄
 && 
de°
[
i
] =
TASHKEEL_SPACE_SUB
) ){

863 
j
--;

864 
cou¡
++;

866 
ãmpbuf„r
[
j
] = 
de°
[
i
];

868 
i
++;

869 
j
++;

872 
cou¡
 >= 0) {

873 
ãmpbuf„r
[
i
] = 
SPACE_CHAR
;

874 
i
--;

875 
cou¡
--;

878 
	`u¥v_mem˝y
(
de°
,
ãmpbuf„r
, 
sour˚Lígth
*
U_SIZEOF_UCHAR
);

879 
de°Size
 = 
sour˚Lígth
;

883 if(
ãmpbuf„r
){

884 
	`u¥v_‰ì
(
ãmpbuf„r
);

887  
de°Size
;

888 
	}
}

900 
öt32_t


901 
	$ex∑ndComposôCh¨AtBegö
(
UCh¨
 *
de°
, 
öt32_t
 
sour˚Lígth
, i¡32_à
de°Size
,
UEº‹Code
 *
pEº‹Code
) {

902 
öt32_t
 
i
 = 0,
j
 = 0;

903 
öt32_t
 
cou¡l
 = 0;

904 
UCh¨
 *
ãmpbuf„r
=
NULL
;

906 
ãmpbuf„r
 = (
UCh¨
 *)
	`u¥v_mÆloc
((
sour˚Lígth
+1)*
U_SIZEOF_UCHAR
);

909 if(
ãmpbuf„r
 =
NULL
) {

910 *
pEº‹Code
 = 
U_MEMORY_ALLOCATION_ERROR
;

914 
	`u¥v_mem£t
(
ãmpbuf„r
, 0, (
sour˚Lígth
+1)*
U_SIZEOF_UCHAR
);

916 
i
 = 0;

917 
de°
[
i
] =
SPACE_CHAR
) {

918 
cou¡l
++;

919 
i
++;

922 
i
 = 
j
 = 
sour˚Lígth
-1;

924 
i
 >0 && 
j
 >= 0) {

925 if–
cou¡l
>0 && 
	`isLamAÀfCh¨
(
de°
[
i
])) {

926 
ãmpbuf„r
[
j
] = 
LAM_CHAR
;

927 
ãmpbuf„r
[
j
-1] = 
c⁄vîtLamAÀf
[ 
de°
[
i
] - 0xFEF5 ];

928 
j
--;

929 
cou¡l
--;

931 if–
cou¡l
 =0 && 
	`isLamAÀfCh¨
(
de°
[
i
]) ) {

932 *
pEº‹Code
=
U_NO_SPACE_AVAILABLE
;

934 
ãmpbuf„r
[
j
] = 
de°
[
i
];

936 
i
--;

937 
j
--;

939 
	`u¥v_mem˝y
(
de°
, 
ãmpbuf„r
, 
sour˚Lígth
*
U_SIZEOF_UCHAR
);

941 
	`u¥v_‰ì
(
ãmpbuf„r
);

943 
de°Size
 = 
sour˚Lígth
;

944  
de°Size
;

945 
	}
}

957 
öt32_t


958 
	$ex∑ndComposôCh¨AtEnd
(
UCh¨
 *
de°
, 
öt32_t
 
sour˚Lígth
, i¡32_à
de°Size
,
UEº‹Code
 *
pEº‹Code
) {

959 
öt32_t
 
i
 = 0,
j
 = 0;

961 
öt32_t
 
cou¡r
 = 0;

962 
öt32_t
 
öpsize
 = 
sour˚Lígth
;

964 
UCh¨
 *
ãmpbuf„r
=
NULL
;

965 
ãmpbuf„r
 = (
UCh¨
 *)
	`u¥v_mÆloc
((
sour˚Lígth
+1)*
U_SIZEOF_UCHAR
);

968 if(
ãmpbuf„r
 =
NULL
) {

969 *
pEº‹Code
 = 
U_MEMORY_ALLOCATION_ERROR
;

973 
	`u¥v_mem£t
(
ãmpbuf„r
, 0, (
sour˚Lígth
+1)*
U_SIZEOF_UCHAR
);

975 
de°
[
öpsize
-1] =
SPACE_CHAR
) {

976 
cou¡r
++;

977 
öpsize
--;

980 
i
 = 
sour˚Lígth
 - 
cou¡r
 - 1;

981 
j
 = 
sour˚Lígth
 - 1;

983 
i
 >0 && 
j
 >= 0) {

984 if–
cou¡r
>0 && 
	`isLamAÀfCh¨
(
de°
[
i
]) ) {

985 
ãmpbuf„r
[
j
] = 
LAM_CHAR
;

986 
ãmpbuf„r
[
j
-1] = 
c⁄vîtLamAÀf
[ 
de°
[
i
] - 0xFEF5 ];

987 
j
--;

988 
cou¡r
--;

990 i‡((
cou¡r
 =0Ë&& 
	`isLamAÀfCh¨
(
de°
[
i
]) ) {

991 *
pEº‹Code
=
U_NO_SPACE_AVAILABLE
;

993 
ãmpbuf„r
[
j
] = 
de°
[
i
];

995 
i
--;

996 
j
--;

999 if(
cou¡r
 > 0) {

1000 
	`u¥v_memmove
(
ãmpbuf„r
,Åempbuf„r+
cou¡r
, 
sour˚Lígth
*
U_SIZEOF_UCHAR
);

1001 if(
	`u_°æí
(
ãmpbuf„r
Ë< 
sour˚Lígth
) {

1002 
i
=
sour˚Lígth
-1;i>=sour˚Lígth-
cou¡r
;i--) {

1003 
ãmpbuf„r
[
i
] = 
SPACE_CHAR
;

1007 
	`u¥v_mem˝y
(
de°
, 
ãmpbuf„r
, 
sour˚Lígth
*
U_SIZEOF_UCHAR
);

1009 
	`u¥v_‰ì
(
ãmpbuf„r
);

1011 
de°Size
 = 
sour˚Lígth
;

1012  
de°Size
;

1013 
	}
}

1024 
öt32_t


1025 
	$ex∑ndComposôCh¨AtNór
(
UCh¨
 *
de°
, 
öt32_t
 
sour˚Lígth
, i¡32_à
de°Size
,
UEº‹Code
 *
pEº‹Code
,

1026 
yehHamzaO±i⁄
, 
£íTaûO±i⁄
, 
œmAÀfO±i⁄
) {

1027 
öt32_t
 
i
 = 0;

1030 
UCh¨
 
œmÆefCh¨
, 
yehhamzaCh¨
;

1032 
i
 = 0 ;i<=
sour˚Lígth
-1;i++) {

1033 i‡(
£íTaûO±i⁄
 && 
	`isSìnTaûFamûyCh¨
(
de°
[
i
])) {

1034 i‡((
i
>0Ë&& (
de°
[i-1] =
SPACE_CHAR
) ) {

1035 
de°
[
i
-1] = 
èûCh¨
;

1037 *
pEº‹Code
=
U_NO_SPACE_AVAILABLE
;

1039 }if(
yehHamzaO±i⁄
 && (
	`isYehHamzaCh¨
(
de°
[
i
])) ) {

1040 i‡((
i
>0Ë&& (
de°
[i-1] =
SPACE_CHAR
) ) {

1041 
yehhamzaCh¨
 = 
de°
[
i
];

1042 
de°
[
i
] = 
yehHamzaToYeh
[
yehhamzaCh¨
 - 
YEH_HAMZAFE_CHAR
];

1043 
de°
[
i
-1] = 
HAMZAFE_CHAR
;

1046 *
pEº‹Code
=
U_NO_SPACE_AVAILABLE
;

1048 }if(
œmAÀfO±i⁄
 && 
	`isLamAÀfCh¨
(
de°
[
i
+1])) {

1049 if(
de°
[
i
] =
SPACE_CHAR
){

1050 
œmÆefCh¨
 = 
de°
[
i
+1];

1051 
de°
[
i
+1] = 
LAM_CHAR
;

1052 
de°
[
i
] = 
c⁄vîtLamAÀf
[ 
œmÆefCh¨
 - 0xFEF5 ];

1054 *
pEº‹Code
=
U_NO_SPACE_AVAILABLE
;

1058 
de°Size
 = 
sour˚Lígth
;

1059  
de°Size
;

1060 
	}
}

1077 
öt32_t


1078 
	$ex∑ndComposôCh¨
(
UCh¨
 *
de°
, 
öt32_t
 
sour˚Lígth
,

1079 
öt32_t
 
de°Size
,
uöt64_t
 
›ti⁄s
,

1080 
UEº‹Code
 *
pEº‹Code
, 
sh≠ögMode
) {

1083 
öt32_t
 
i
 = 0,
j
 = 0;

1085 
UCh¨
 *
ãmpbuf„r
=
NULL
;

1086 
yehHamzaO±i⁄
 = 0;

1087 
£íTaûO±i⁄
 = 0;

1088 
œmAÀfO±i⁄
 = 0;

1090 i‡(
sh≠ögMode
 == 1){

1091 i‡–(
›ti⁄s
&
U_SHAPE_LAMALEF_MASK
Ë=
U_SHAPE_LAMALEF_AUTO
){

1093 if(
•a˚sRñ©iveToTextBegöEnd
 == 0) {

1094 
de°Size
 = 
	`ex∑ndComposôCh¨AtEnd
(
de°
, 
sour˚Lígth
, de°Size, 
pEº‹Code
);

1096 if(*
pEº‹Code
 =
U_NO_SPACE_AVAILABLE
) {

1097 *
pEº‹Code
 = 
U_ZERO_ERROR
;

1098 
de°Size
 = 
	`ex∑ndComposôCh¨AtBegö
(
de°
, 
sour˚Lígth
, de°Size, 
pEº‹Code
);

1101 
de°Size
 = 
	`ex∑ndComposôCh¨AtBegö
(
de°
, 
sour˚Lígth
, de°Size, 
pEº‹Code
);

1103 if(*
pEº‹Code
 =
U_NO_SPACE_AVAILABLE
) {

1104 *
pEº‹Code
 = 
U_ZERO_ERROR
;

1105 
de°Size
 = 
	`ex∑ndComposôCh¨AtEnd
(
de°
, 
sour˚Lígth
, de°Size, 
pEº‹Code
);

1109 if(*
pEº‹Code
 =
U_NO_SPACE_AVAILABLE
) {

1110 *
pEº‹Code
 = 
U_ZERO_ERROR
;

1111 
de°Size
 = 
	`ex∑ndComposôCh¨AtNór
(
de°
, 
sour˚Lígth
, de°Size, 
pEº‹Code
, 
yehHamzaO±i⁄
,

1112 
£íTaûO±i⁄
, 1);

1117 i‡(
sh≠ögMode
 == 1){

1118 i‡–(
›ti⁄s
&
U_SHAPE_LAMALEF_MASK
Ë=
uSh≠eLamÆefEnd
){

1119 
de°Size
 = 
	`ex∑ndComposôCh¨AtEnd
(
de°
, 
sour˚Lígth
, de°Size, 
pEº‹Code
);

1123 i‡(
sh≠ögMode
 == 1){

1124 i‡–(
›ti⁄s
&
U_SHAPE_LAMALEF_MASK
Ë=
uSh≠eLamÆefBegö
){

1125 
de°Size
 = 
	`ex∑ndComposôCh¨AtBegö
(
de°
, 
sour˚Lígth
, de°Size, 
pEº‹Code
);

1129 i‡(
sh≠ögMode
 == 0){

1130 i‡((
›ti⁄s
&
U_SHAPE_YEHHAMZA_MASK
Ë=
U_SHAPE_YEHHAMZA_TWOCELL_NEAR
){

1131 
yehHamzaO±i⁄
 = 1;

1133 i‡((
›ti⁄s
&
U_SHAPE_SEEN_MASK
Ë=
U_SHAPE_SEEN_TWOCELL_NEAR
){

1134 
£íTaûO±i⁄
 = 1;

1137 i‡(
sh≠ögMode
 == 1) {

1138 i‡–(
›ti⁄s
&
U_SHAPE_LAMALEF_MASK
Ë=
U_SHAPE_LAMALEF_NEAR
) {

1139 
œmAÀfO±i⁄
 = 1;

1144 i‡(
yehHamzaO±i⁄
 || 
£íTaûO±i⁄
 || 
œmAÀfO±i⁄
){

1145 
de°Size
 = 
	`ex∑ndComposôCh¨AtNór
(
de°
, 
sour˚Lígth
, de°Size, 
pEº‹Code
, 
yehHamzaO±i⁄
,

1146 
£íTaûO±i⁄
,
œmAÀfO±i⁄
);

1150 i‡(
sh≠ögMode
 == 1){

1151 i‡–(
›ti⁄s
&
U_SHAPE_LAMALEF_MASK
Ë=
U_SHAPE_LAMALEF_RESIZE
){

1152 
de°Size
 = 
	`ˇlcuœãSize
(
de°
,
sour˚Lígth
,de°Size,
›ti⁄s
);

1153 
ãmpbuf„r
 = (
UCh¨
 *)
	`u¥v_mÆloc
((
de°Size
+1)*
U_SIZEOF_UCHAR
);

1156 if(
ãmpbuf„r
 =
NULL
) {

1157 *
pEº‹Code
 = 
U_MEMORY_ALLOCATION_ERROR
;

1161 
	`u¥v_mem£t
(
ãmpbuf„r
, 0, (
de°Size
+1)*
U_SIZEOF_UCHAR
);

1163 
i
 = 
j
 = 0;

1164 
i
 < 
de°Size
 && 
j
 < destSize) {

1165 if(
	`isLamAÀfCh¨
(
de°
[
i
]) ) {

1166 
ãmpbuf„r
[
j
] = 
c⁄vîtLamAÀf
[ 
de°
[
i
] - 0xFEF5 ];

1167 
ãmpbuf„r
[
j
+1] = 
LAM_CHAR
;

1168 
j
++;

1170 
ãmpbuf„r
[
j
] = 
de°
[
i
];

1172 
i
++;

1173 
j
++;

1176 
	`u¥v_mem˝y
(
de°
, 
ãmpbuf„r
, 
de°Size
*
U_SIZEOF_UCHAR
);

1180 if(
ãmpbuf„r
) {

1181 
	`u¥v_‰ì
(
ãmpbuf„r
);

1183  
de°Size
;

1184 
	}
}

1192 
öt32_t


1193 
	$sh≠eUnicode
(
UCh¨
 *
de°
, 
öt32_t
 
sour˚Lígth
,

1194 
öt32_t
 
de°Size
,
uöt64_t
 
›ti⁄s
,

1195 
UEº‹Code
 *
pEº‹Code
,

1196 
èshkìlFœg
) {

1199 
öt32_t
 
i
, 
õnd
;

1200 
öt32_t
 
°ï
;

1201 
öt32_t
 
œ°Pos
,
Nx
, 
Nw
;

1202 
Sh≠e
;

1203 
öt32_t
 
œmÆef_found
 = 0;

1204 
öt32_t
 
£íÁmFound
 = 0, 
yehhamzaFound
 =0, 
èshkìlFound
 = 0;

1205 
UCh¨
 
¥evLök
 = 0, 
œ°Lök
 = 0, 
cuºLök
, 
√xtLök
 = 0;

1206 
UCh¨
 
wLamÆef
;

1214 i‡((
›ti⁄s
 & 
U_SHAPE_PRESERVE_PRESENTATION_MASK
Ë=
U_SHAPE_PRESERVE_PRESENTATION_NOOP
) {

1215 
i
 = 0; i < 
sour˚Lígth
; i++) {

1216 
UCh¨
 
öputCh¨
 = 
de°
[
i
];

1217 i‡–(
öputCh¨
 >= 0xFB50) && (inputChar <= 0xFBFF)) {

1218 
UCh¨
 
c
 = 
c⁄vîtFBto06
 [ (
öputCh¨
 - 0xFB50) ];

1219 i‡(
c
 != 0)

1220 
de°
[
i
] = 
c
;

1221 } i‡–(
öputCh¨
 >= 0xFE70) && (inputChar <= 0xFEFC)) {

1222 
de°
[
i
] = 
c⁄vîtFEto06
 [ (
öputCh¨
 - 0xFE70) ] ;

1224 
de°
[
i
] = 
öputCh¨
 ;

1231 
i
 = 
sour˚Lígth
 - 1;

1232 
õnd
 = -1;

1233 
°ï
 = -1;

1240 
cuºLök
 = 
	`gëLök
(
de°
[
i
]);

1242 
œ°Pos
 = 
i
;

1243 
Nx
 = -2, 
Nw
 = 0;

1245 
i
 !
õnd
) {

1247 i‡((
cuºLök
 & 0xFF00Ë> 0 || (
	`gëLök
(
de°
[
i
]Ë& 
IRRELEVANT
) != 0) {

1248 
Nw
 = 
i
 + 
°ï
;

1249 
Nx
 < 0) {

1250 if(
Nw
 =
õnd
) {

1251 
√xtLök
 = 0;

1252 
Nx
 = 3000;

1254 
√xtLök
 = 
	`gëLök
(
de°
[
Nw
]);

1255 if((
√xtLök
 & 
IRRELEVANT
) == 0) {

1256 
Nx
 = 
Nw
;

1258 
Nw
 = Nw + 
°ï
;

1263 i‡–((
cuºLök
 & 
ALEFTYPE
Ë> 0Ë&& ((
œ°Lök
 & 
LAMTYPE
) > 0) ) {

1264 
œmÆef_found
 = 1;

1265 
wLamÆef
 = 
	`ch™geLamAÀf
(
de°
[
i
]);

1266 i‡–
wLamÆef
 != 0) {

1267 
de°
[
i
] = 
LAMALEF_SPACE_SUB
;

1268 
de°
[
œ°Pos
] =
wLamÆef
;

1269 
i
=
œ°Pos
;

1271 
œ°Lök
 = 
¥evLök
;

1272 
cuºLök
 = 
	`gëLök
(
wLamÆef
);

1275 i‡((
i
 > 0Ë&& (
de°
[i-1] =
SPACE_CHAR
)){

1276 i‡–
	`isSìnFamûyCh¨
(
de°
[
i
])){

1277 
£íÁmFound
 = 1;

1278 } i‡(
de°
[
i
] =
YEH_HAMZA_CHAR
) {

1279 
yehhamzaFound
 = 1;

1282 if(
i
==0){

1283 i‡–
	`isSìnFamûyCh¨
(
de°
[
i
])){

1284 
£íÁmFound
 = 1;

1285 } i‡(
de°
[
i
] =
YEH_HAMZA_CHAR
) {

1286 
yehhamzaFound
 = 1;

1295 
Sh≠e
 = 
sh≠eTabÀ
[
√xtLök
 & (
LINKR
 + 
LINKL
)]

1296 [
œ°Lök
 & (
LINKR
 + 
LINKL
)]

1297 [
cuºLök
 & (
LINKR
 + 
LINKL
)];

1299 i‡((
cuºLök
 & (
LINKR
+
LINKL
)) == 1) {

1300 
Sh≠e
 &= 1;

1301 } if(
	`isTashkìlCh¨
(
de°
[
i
])) {

1302 if–(
œ°Lök
 & 
LINKL
Ë&& (
√xtLök
 & 
LINKR
Ë&& (
èshkìlFœg
 == 1) &&

1303 
de°
[
i
] != 0x064C && dest[i] != 0x064D )

1305 
Sh≠e
 = 1;

1306 if–(
√xtLök
&
ALEFTYPE
Ë=ALEFTYPE && (
œ°Lök
&
LAMTYPE
) == LAMTYPE ) {

1307 
Sh≠e
 = 0;

1311 
Sh≠e
 = 0;

1314 i‡((
de°
[
i
] ^ 0x0600) < 0x100) {

1315 i‡–
	`isTashkìlCh¨
(
de°
[
i
]) ){

1316 i‡(
èshkìlFœg
 == 2){

1317 
de°
[
i
] = 
TASHKEEL_SPACE_SUB
;

1318 
èshkìlFound
 = 1;

1320 
de°
[
i
] = 0xFE70 + 
Iºñev™tPos
[(de°[i] - 0x064B)] + 
Sh≠e
;

1322 }i‡((
cuºLök
 & 
APRESENT
) > 0) {

1323 
de°
[
i
] = (
UCh¨
)(0xFB50 + (
cuºLök
 >> 8Ë+ 
Sh≠e
);

1324 }i‡((
cuºLök
 >> 8Ë> 0 && (cuºLök & 
IRRELEVANT
) == 0) {

1325 
de°
[
i
] = (
UCh¨
)(0xFE70 + (
cuºLök
 >> 8Ë+ 
Sh≠e
);

1331 i‡((
cuºLök
 & 
IRRELEVANT
) == 0) {

1332 
¥evLök
 = 
œ°Lök
;

1333 
œ°Lök
 = 
cuºLök
;

1334 
œ°Pos
 = 
i
;

1337 
i
 = i + 
°ï
;

1338 i‡(
i
 =
Nx
) {

1339 
cuºLök
 = 
√xtLök
;

1340 
Nx
 = -2;

1341 } if(
i
 !
õnd
) {

1342 
cuºLök
 = 
	`gëLök
(
de°
[
i
]);

1345 
de°Size
 = 
sour˚Lígth
;

1346 i‡–(
œmÆef_found
 !0 ) || (
èshkìlFound
 != 0) ){

1347 
de°Size
 = 
	`h™dÀGíî©edS∑˚s
(
de°
,
sour˚Lígth
,de°Size,
›ti⁄s
,
pEº‹Code
);

1350 i‡–(
£íÁmFound
 !0Ë|| (
yehhamzaFound
 != 0) ) {

1351 
de°Size
 = 
	`ex∑ndComposôCh¨
(
de°
, 
sour˚Lígth
,de°Size,
›ti⁄s
,
pEº‹Code
, 
SHAPE_MODE
);

1353  
de°Size
;

1354 
	}
}

1362 
öt32_t


1363 
	$deSh≠eUnicode
(
UCh¨
 *
de°
, 
öt32_t
 
sour˚Lígth
,

1364 
öt32_t
 
de°Size
,
uöt64_t
 
›ti⁄s
,

1365 
UEº‹Code
 *
pEº‹Code
) {

1367 
öt32_t
 
i
 = 0;

1368 
öt32_t
 
œmÆef_found
 = 0;

1369 
öt32_t
 
yehHamzaCompo£E«bÀd
 = 0;

1370 
öt32_t
 
£íCompo£E«bÀd
 = 0;

1372 
yehHamzaCompo£E«bÀd
 = ((
›ti⁄s
&
U_SHAPE_YEHHAMZA_MASK
Ë=
U_SHAPE_YEHHAMZA_TWOCELL_NEAR
) ? 1 : 0;

1373 
£íCompo£E«bÀd
 = ((
›ti⁄s
&
U_SHAPE_SEEN_MASK
Ë=
U_SHAPE_SEEN_TWOCELL_NEAR
)? 1 : 0;

1380 
i
 = 0; i < 
sour˚Lígth
; i++) {

1381 
UCh¨
 
öputCh¨
 = 
de°
[
i
];

1382 i‡–(
öputCh¨
 >= 0xFB50) && (inputChar <= 0xFBFF)) {

1383 
UCh¨
 
c
 = 
c⁄vîtFBto06
 [ (
öputCh¨
 - 0xFB50) ];

1384 i‡(
c
 != 0)

1385 
de°
[
i
] = 
c
;

1386 } if–(
yehHamzaCompo£E«bÀd
 =1Ë&& ((
öputCh¨
 =
HAMZA06_CHAR
Ë|| (öputCh¨ =
HAMZAFE_CHAR
))

1387 && (
i
 < (
sour˚Lígth
 - 1)Ë&& 
	`isAÀfMaksouøCh¨
(
de°
[i+1] )) {

1388 
de°
[
i
] = 
SPACE_CHAR
;

1389 
de°
[
i
+1] = 
YEH_HAMZA_CHAR
;

1390 } i‡–(
£íCompo£E«bÀd
 =1Ë&& (
	`isTaûCh¨
(
öputCh¨
)Ë&& (
i
< (
sour˚Lígth
 - 1))

1391 && (
	`isSìnTaûFamûyCh¨
(
de°
[
i
+1])) ) {

1392 
de°
[
i
] = 
SPACE_CHAR
;

1393 } i‡(–
öputCh¨
 >= 0xFE70) && (inputChar <= 0xFEF4 )) {

1394 
de°
[
i
] = 
c⁄vîtFEto06
 [ (
öputCh¨
 - 0xFE70) ];

1396 
de°
[
i
] = 
öputCh¨
 ;

1399 if–
	`isLamAÀfCh¨
(
de°
[
i
]) )

1400 
œmÆef_found
 = 1;

1403 
de°Size
 = 
sour˚Lígth
;

1404 i‡(
œmÆef_found
 != 0){

1405 
de°Size
 = 
	`ex∑ndComposôCh¨
(
de°
,
sour˚Lígth
,de°Size,
›ti⁄s
,
pEº‹Code
,
DESHAPE_MODE
);

1407  
de°Size
;

1408 
	}
}

1417 
U_CAPI
 
öt32_t
 
U_EXPORT2


1418 
	$u_sh≠eAøbic
(c⁄° 
UCh¨
 *
sour˚
, 
öt32_t
 
sour˚Lígth
,

1419 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

1420 
uöt64_t
 
›ti⁄s
,

1421 
UEº‹Code
 *
pEº‹Code
) {

1424 
öt32_t
 
de°Lígth
;

1426 
•a˚sRñ©iveToTextBegöEnd
 = 0;

1427 
uSh≠eLamÆefBegö
 = 
U_SHAPE_LAMALEF_BEGIN
;

1428 
uSh≠eLamÆefEnd
 = 
U_SHAPE_LAMALEF_END
;

1429 
uSh≠eTashkìlBegö
 = 
U_SHAPE_TASHKEEL_BEGIN
;

1430 
uSh≠eTashkìlEnd
 = 
U_SHAPE_TASHKEEL_END
;

1433 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

1438 if–
sour˚
==
NULL
 || 
sour˚Lígth
<-1 || (
de°
==NULL && 
de°C≠acôy
!=0) || destCapacity<0 ||

1439 (((
›ti⁄s
&
U_SHAPE_TASHKEEL_MASK
) > 0) &&

1440 ((
›ti⁄s
&
U_SHAPE_LETTERS_SHAPE_TASHKEEL_ISOLATED
) == U_SHAPE_LETTERS_SHAPE_TASHKEEL_ISOLATED) ) ||

1441 (((
›ti⁄s
&
U_SHAPE_TASHKEEL_MASK
) > 0) &&

1442 ((
›ti⁄s
&
U_SHAPE_LETTERS_MASK
Ë=
U_SHAPE_LETTERS_UNSHAPE
)) ||

1443 (
›ti⁄s
&
U_SHAPE_DIGIT_TYPE_RESERVED
)==U_SHAPE_DIGIT_TYPE_RESERVED ||

1444 (
›ti⁄s
&
U_SHAPE_DIGITS_MASK
)==
U_SHAPE_DIGITS_RESERVED
 ||

1445 ((
›ti⁄s
&
U_SHAPE_LAMALEF_MASK
Ë!
U_SHAPE_LAMALEF_RESIZE
 &&

1446 (
›ti⁄s
&
U_SHAPE_AGGREGATE_TASHKEEL_MASK
) != 0) ||

1447 ((
›ti⁄s
&
U_SHAPE_AGGREGATE_TASHKEEL_MASK
Ë=
U_SHAPE_AGGREGATE_TASHKEEL
 &&

1448 (
›ti⁄s
&
U_SHAPE_LETTERS_SHAPE_TASHKEEL_ISOLATED
) != U_SHAPE_LETTERS_SHAPE_TASHKEEL_ISOLATED)

1451 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

1455 if(((
›ti⁄s
&
U_SHAPE_LAMALEF_MASK
) > 0)&&

1456 !(((
›ti⁄s
 & 
U_SHAPE_LAMALEF_MASK
)==
U_SHAPE_LAMALEF_BEGIN
) ||

1457 ((
›ti⁄s
 & 
U_SHAPE_LAMALEF_MASK
)==
U_SHAPE_LAMALEF_END
 ) ||

1458 ((
›ti⁄s
 & 
U_SHAPE_LAMALEF_MASK
)==
U_SHAPE_LAMALEF_RESIZE
 )||

1459 ((
›ti⁄s
 & 
U_SHAPE_LAMALEF_MASK
)==
U_SHAPE_LAMALEF_AUTO
) ||

1460 ((
›ti⁄s
 & 
U_SHAPE_LAMALEF_MASK
)==
U_SHAPE_LAMALEF_NEAR
)))

1462 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

1466 if(((
›ti⁄s
&
U_SHAPE_TASHKEEL_MASK
) > 0)&&

1467 !(((
›ti⁄s
 & 
U_SHAPE_TASHKEEL_MASK
)==
U_SHAPE_TASHKEEL_BEGIN
) ||

1468 ((
›ti⁄s
 & 
U_SHAPE_TASHKEEL_MASK
)==
U_SHAPE_TASHKEEL_END
 )

1469 ||((
›ti⁄s
 & 
U_SHAPE_TASHKEEL_MASK
)==
U_SHAPE_TASHKEEL_RESIZE
 )||

1470 ((
›ti⁄s
 & 
U_SHAPE_TASHKEEL_MASK
)==
U_SHAPE_TASHKEEL_REPLACE_BY_TATWEEL
)))

1472 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

1476 if(
sour˚Lígth
==-1) {

1477 
sour˚Lígth
=
	`u_°æí
(
sour˚
);

1479 if(
sour˚Lígth
<=0) {

1480  
	`u_ãrmö©eUCh¨s
(
de°
, 
de°C≠acôy
, 0, 
pEº‹Code
);

1484 if–
de°
!=
NULL
 &&

1485 ((
sour˚
<=
de°
 && de°<sour˚+
sour˚Lígth
) ||

1486 (
de°
<=
sour˚
 && sour˚<de°+
de°C≠acôy
))) {

1487 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

1492 i‡–(
›ti⁄s
&
SHAPE_TAIL_TYPE_MASK
Ë=
SHAPE_TAIL_NEW_UNICODE
){

1493 
èûCh¨
 = 
NEW_TAIL_CHAR
;

1495 
èûCh¨
 = 
OLD_TAIL_CHAR
;

1498 if((
›ti⁄s
&
U_SHAPE_LETTERS_MASK
)!=
U_SHAPE_LETTERS_NOOP
) {

1499 
UCh¨
 
buf„r
[300];

1500 
UCh¨
 *
ãmpbuf„r
, *
ãmpsour˚
 = 
NULL
;

1501 
öt32_t
 
ouçutSize
, 
•a˚sCou¡l
=0, 
•a˚sCou¡r
=0;

1503 if((
›ti⁄s
&
U_SHAPE_AGGREGATE_TASHKEEL_MASK
)>0) {

1504 
öt32_t
 
logiˇl_‹dî
 = (
›ti⁄s
&
U_SHAPE_TEXT_DIRECTION_MASK
Ë=
U_SHAPE_TEXT_DIRECTION_LOGICAL
;

1505 
öt32_t
 
aggªg©e_èshkìl
 =

1506 (
›ti⁄s
&(
U_SHAPE_AGGREGATE_TASHKEEL_MASK
+
U_SHAPE_LETTERS_SHAPE_TASHKEEL_ISOLATED
)) ==

1507 (
U_SHAPE_AGGREGATE_TASHKEEL
+
U_SHAPE_LETTERS_SHAPE_TASHKEEL_ISOLATED
);

1508 
°ï
=
logiˇl_‹dî
?1:-1;

1509 
j
=
logiˇl_‹dî
?-1:2*
sour˚Lígth
;

1510 
i
=
logiˇl_‹dî
?-1:
sour˚Lígth
;

1511 
íd
=
logiˇl_‹dî
?
sour˚Lígth
:-1;

1512 
aggªg©i⁄_possibÀ
 = 1;

1513 
UCh¨
 
¥ev
 = 0;

1514 
UCh¨
 
¥evLök
, 
cuºLök
 = 0;

1515 
√wSour˚Lígth
 = 0;

1516 
ãmpsour˚
 = (
UCh¨
 *)
	`u¥v_mÆloc
(2*
sour˚Lígth
*
U_SIZEOF_UCHAR
);

1517 if(
ãmpsour˚
 =
NULL
) {

1518 *
pEº‹Code
 = 
U_MEMORY_ALLOCATION_ERROR
;

1522 (
i
+=
°ï
Ë!
íd
) {

1523 
¥evLök
 = 
cuºLök
;

1524 
cuºLök
 = 
	`gëLök
(
sour˚
[
i
]);

1525 i‡(
aggªg©e_èshkìl
 && ((
¥evLök
|
cuºLök
)&
COMBINE
Ë=COMBINE && 
aggªg©i⁄_possibÀ
) {

1526 
aggªg©i⁄_possibÀ
 = 0;

1527 
ãmpsour˚
[
j
] = (
¥ev
<
sour˚
[
i
]?prev:source[i])-0x064C+0xFC5E;

1528 
cuºLök
 = 
	`gëLök
(
ãmpsour˚
[
j
]);

1530 
aggªg©i⁄_possibÀ
 = 1;

1531 
ãmpsour˚
[
j
+=
°ï
] = 
sour˚
[
i
];

1532 
¥ev
 = 
sour˚
[
i
];

1533 
√wSour˚Lígth
++;

1536 
sour˚
 = 
ãmpsour˚
+(
logiˇl_‹dî
?0:
j
);

1537 
sour˚Lígth
 = 
√wSour˚Lígth
;

1542 if(((
›ti⁄s
&
U_SHAPE_LAMALEF_MASK
)==
U_SHAPE_LAMALEF_RESIZE
) ||

1543 ((
›ti⁄s
&
U_SHAPE_TASHKEEL_MASK
)==
U_SHAPE_TASHKEEL_RESIZE
)) {

1544 
ouçutSize
=
	`ˇlcuœãSize
(
sour˚
,
sour˚Lígth
,
de°C≠acôy
,
›ti⁄s
);

1546 
ouçutSize
=
sour˚Lígth
;

1549 if(
ouçutSize
>
de°C≠acôy
) {

1550 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

1551 i‡(
ãmpsour˚
 !
NULL
Ë
	`u¥v_‰ì
(tempsource);

1552  
ouçutSize
;

1559 if(
sour˚Lígth
>
ouçutSize
) {

1560 
ouçutSize
=
sour˚Lígth
;

1564 if(
ouçutSize
<=(
buf„r
)/
U_SIZEOF_UCHAR
) {

1565 
ouçutSize
=(
buf„r
)/
U_SIZEOF_UCHAR
;

1566 
ãmpbuf„r
=
buf„r
;

1568 
ãmpbuf„r
 = (
UCh¨
 *)
	`u¥v_mÆloc
(
ouçutSize
*
U_SIZEOF_UCHAR
);

1571 if(
ãmpbuf„r
 =
NULL
) {

1572 *
pEº‹Code
 = 
U_MEMORY_ALLOCATION_ERROR
;

1573 i‡(
ãmpsour˚
 !
NULL
Ë
	`u¥v_‰ì
(tempsource);

1577 
	`u¥v_mem˝y
(
ãmpbuf„r
, 
sour˚
, 
sour˚Lígth
*
U_SIZEOF_UCHAR
);

1578 i‡(
ãmpsour˚
 !
NULL
){

1579 
	`u¥v_‰ì
(
ãmpsour˚
);

1582 if(
sour˚Lígth
<
ouçutSize
) {

1583 
	`u¥v_mem£t
(
ãmpbuf„r
+
sour˚Lígth
, 0, (
ouçutSize
-sour˚Lígth)*
U_SIZEOF_UCHAR
);

1586 if((
›ti⁄s
&
U_SHAPE_TEXT_DIRECTION_MASK
Ë=
U_SHAPE_TEXT_DIRECTION_LOGICAL
) {

1587 
	`cou¡S∑˚s
(
ãmpbuf„r
,
sour˚Lígth
,
›ti⁄s
,&
•a˚sCou¡l
,&
•a˚sCou¡r
);

1588 
	`övîtBuf„r
(
ãmpbuf„r
,
sour˚Lígth
,
›ti⁄s
,
•a˚sCou¡l
,
•a˚sCou¡r
);

1591 if((
›ti⁄s
&
U_SHAPE_TEXT_DIRECTION_MASK
Ë=
U_SHAPE_TEXT_DIRECTION_VISUAL_LTR
) {

1592 if((
›ti⁄s
&
U_SHAPE_SPACES_RELATIVE_TO_TEXT_MASK
Ë=
U_SHAPE_SPACES_RELATIVE_TO_TEXT_BEGIN_END
) {

1593 
•a˚sRñ©iveToTextBegöEnd
 = 1;

1594 
uSh≠eLamÆefBegö
 = 
U_SHAPE_LAMALEF_END
;

1595 
uSh≠eLamÆefEnd
 = 
U_SHAPE_LAMALEF_BEGIN
;

1597 
uSh≠eTashkìlBegö
 = 
U_SHAPE_TASHKEEL_END
;

1598 
uSh≠eTashkìlEnd
 = 
U_SHAPE_TASHKEEL_BEGIN
;

1602 
›ti⁄s
&
U_SHAPE_LETTERS_MASK
) {

1603 
U_SHAPE_LETTERS_SHAPE
 :

1604 if–(
›ti⁄s
&
U_SHAPE_TASHKEEL_MASK
)> 0

1605 && ((
›ti⁄s
&
U_SHAPE_TASHKEEL_MASK
Ë!=
U_SHAPE_TASHKEEL_REPLACE_BY_TATWEEL
)) {

1607 
de°Lígth
 = 
	`sh≠eUnicode
(
ãmpbuf„r
,
sour˚Lígth
,
de°C≠acôy
,
›ti⁄s
,
pEº‹Code
,2);

1610 
de°Lígth
 = 
	`sh≠eUnicode
(
ãmpbuf„r
,
sour˚Lígth
,
de°C≠acôy
,
›ti⁄s
,
pEº‹Code
,1);

1613 if–(
›ti⁄s
&
U_SHAPE_TASHKEEL_MASK
Ë=
U_SHAPE_TASHKEEL_REPLACE_BY_TATWEEL
){

1614 
de°Lígth
 = 
	`h™dÀTashkìlWôhT©wìl
(
ãmpbuf„r
,de°Lígth,
de°C≠acôy
,
›ti⁄s
,
pEº‹Code
);

1618 
U_SHAPE_LETTERS_SHAPE_TASHKEEL_ISOLATED
 :

1620 
de°Lígth
 = 
	`sh≠eUnicode
(
ãmpbuf„r
,
sour˚Lígth
,
de°C≠acôy
,
›ti⁄s
,
pEº‹Code
,0);

1623 
U_SHAPE_LETTERS_UNSHAPE
 :

1625 
de°Lígth
 = 
	`deSh≠eUnicode
(
ãmpbuf„r
,
sour˚Lígth
,
de°C≠acôy
,
›ti⁄s
,
pEº‹Code
);

1629 
de°Lígth
 = 0;

1640 if((
›ti⁄s
&
U_SHAPE_TEXT_DIRECTION_MASK
Ë=
U_SHAPE_TEXT_DIRECTION_LOGICAL
) {

1641 
	`cou¡S∑˚s
(
ãmpbuf„r
,
de°Lígth
,
›ti⁄s
,&
•a˚sCou¡l
,&
•a˚sCou¡r
);

1642 
	`övîtBuf„r
(
ãmpbuf„r
,
de°Lígth
,
›ti⁄s
,
•a˚sCou¡l
,
•a˚sCou¡r
);

1644 
	`u¥v_mem˝y
(
de°
, 
ãmpbuf„r
, 
	`u¥v_mö
(
de°Lígth
, 
de°C≠acôy
)*
U_SIZEOF_UCHAR
);

1646 if(
ãmpbuf„r
!=
buf„r
) {

1647 
	`u¥v_‰ì
(
ãmpbuf„r
);

1650 if(
de°Lígth
>
de°C≠acôy
) {

1651 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

1652  
de°Lígth
;

1661 if(
de°C≠acôy
<
sour˚Lígth
) {

1663 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

1664  
sour˚Lígth
;

1666 
	`u¥v_mem˝y
(
de°
, 
sour˚
, 
sour˚Lígth
*
U_SIZEOF_UCHAR
);

1667 
de°Lígth
=
sour˚Lígth
;

1676 if((
›ti⁄s
&
U_SHAPE_DIGITS_MASK
)!=
U_SHAPE_DIGITS_NOOP
) {

1677 
UCh¨
 
digôBa£
;

1678 
öt32_t
 
i
;

1681 
›ti⁄s
&
U_SHAPE_DIGIT_TYPE_MASK
) {

1682 
U_SHAPE_DIGIT_TYPE_AN
:

1683 
digôBa£
=0x660;

1685 
U_SHAPE_DIGIT_TYPE_AN_EXTENDED
:

1686 
digôBa£
=0x6f0;

1690 
digôBa£
=0;

1695 
›ti⁄s
&
U_SHAPE_DIGITS_MASK
) {

1696 
U_SHAPE_DIGITS_EN2AN
:

1698 
digôBa£
-=0x30;

1699 
i
=0; i<
de°Lígth
; ++i) {

1700 if(((
uöt32_t
)
de°
[
i
]-0x30)<10) {

1701 
de°
[
i
]+=
digôBa£
;

1705 
U_SHAPE_DIGITS_AN2EN
:

1707 
i
=0; i<
de°Lígth
; ++i) {

1708 if(((
uöt32_t
)
de°
[
i
]-(uöt32_t)
digôBa£
)<10) {

1709 
de°
[
i
]-=
digôBa£
-0x30;

1713 
U_SHAPE_DIGITS_ALEN2AN_INIT_LR
:

1714 
	`_sh≠eToAøbicDigôsWôhC⁄ãxt
(
de°
, 
de°Lígth
,

1715 
digôBa£
,

1716 (
UBoﬁ
)((
›ti⁄s
&
U_SHAPE_TEXT_DIRECTION_MASK
)==
U_SHAPE_TEXT_DIRECTION_LOGICAL
),

1717 
FALSE
);

1719 
U_SHAPE_DIGITS_ALEN2AN_INIT_AL
:

1720 
	`_sh≠eToAøbicDigôsWôhC⁄ãxt
(
de°
, 
de°Lígth
,

1721 
digôBa£
,

1722 (
UBoﬁ
)((
›ti⁄s
&
U_SHAPE_TEXT_DIRECTION_MASK
)==
U_SHAPE_TEXT_DIRECTION_LOGICAL
),

1723 
TRUE
);

1731  
	`u_ãrmö©eUCh¨s
(
de°
, 
de°C≠acôy
, 
de°Lígth
, 
pEº‹Code
);

1732 
	}
}

	@usprep.cpp

17 
	~"unicode/uty≥s.h
"

19 #i‡!
UCONFIG_NO_IDNA


21 
	~"unicode/u•ªp.h
"

23 
	~"unicode/un‹m.h
"

24 
	~"unicode/u°rög.h
"

25 
	~"unicode/uch¨.h
"

26 
	~"unicode/uvîsi⁄.h
"

27 
	~"umuãx.h
"

28 
	~"cmem‹y.h
"

29 
	~"•Ωim∂.h
"

30 
	~"u°r_imp.h
"

31 
	~"uhash.h
"

32 
	~"c°rög.h
"

33 
	~"ud©aswp.h
"

34 
	~"u˛n_cmn.h
"

35 
	~"ubidi_¥›s.h
"

37 
U_NAMESPACE_USE


39 
U_CDECL_BEGIN


44 
UHashèbÀ
 *
	gSHARED_DATA_HASHTABLE
 = 
NULL
;

46 
UMTX
 
	gu•ªpMuãx
 = 
NULL
;

49 
uöt8_t
 
	gf‹m©Vîsi⁄
[4]={ 0, 0, 0, 0 };

52 
UVîsi⁄Info
 
	gd©aVîsi⁄
={ 0, 0, 0, 0 };

55 c⁄° *
	gPROFILE_NAMES
[] = {

72 
UBoﬁ
 
U_CALLCONV


73 
	$isSPªpAc˚±abÀ
(* ,

76 c⁄° 
UD©aInfo
 *
pInfo
) {

78 
pInfo
->
size
>=20 &&

79 
pInfo
->
isBigEndün
==
U_IS_BIG_ENDIAN
 &&

80 
pInfo
->
ch¨£tFamûy
==
U_CHARSET_FAMILY
 &&

81 
pInfo
->
d©aF‹m©
[0]==0x53 &&

82 
pInfo
->
d©aF‹m©
[1]==0x50 &&

83 
pInfo
->
d©aF‹m©
[2]==0x52 &&

84 
pInfo
->
d©aF‹m©
[3]==0x50 &&

85 
pInfo
->
f‹m©Vîsi⁄
[0]==3 &&

86 
pInfo
->
f‹m©Vîsi⁄
[2]==
UTRIE_SHIFT
 &&

87 
pInfo
->
f‹m©Vîsi⁄
[3]==
UTRIE_INDEX_SHIFT


89 
	`u¥v_mem˝y
(
f‹m©Vîsi⁄
, 
pInfo
->formatVersion, 4);

90 
	`u¥v_mem˝y
(
d©aVîsi⁄
, 
pInfo
->dataVersion, 4);

91  
TRUE
;

93  
FALSE
;

95 
	}
}

97 
öt32_t
 
U_CALLCONV


98 
	$gëSPªpFﬁdögOff£t
(
uöt32_t
 
d©a
) {

100  (
öt32_t
)
d©a
;

102 
	}
}

105 
öt32_t
 
U_CALLCONV


106 
	$hashE¡ry
(c⁄° 
UHashTok
 
∑rm
) {

107 
USåögPªpKey
 *
b
 = (USåögPªpKey *)
∑rm
.
poöãr
;

108 
UHashTok
 
«mekey
, 
∑thkey
;

109 
«mekey
.
poöãr
 = 
b
->
«me
;

110 
∑thkey
.
poöãr
 = 
b
->
∑th
;

111  
	`uhash_hashCh¨s
(
«mekey
)+37*uhash_hashCh¨s(
∑thkey
);

112 
	}
}

115 
UBoﬁ
 
U_CALLCONV


116 
	$com∑ªE¡rõs
(c⁄° 
UHashTok
 
p1
, c⁄° UHashTok 
p2
) {

117 
USåögPªpKey
 *
b1
 = (USåögPªpKey *)
p1
.
poöãr
;

118 
USåögPªpKey
 *
b2
 = (USåögPªpKey *)
p2
.
poöãr
;

119 
UHashTok
 
«me1
, 
«me2
, 
∑th1
, 
∑th2
;

120 
«me1
.
poöãr
 = 
b1
->
«me
;

121 
«me2
.
poöãr
 = 
b2
->
«me
;

122 
∑th1
.
poöãr
 = 
b1
->
∑th
;

123 
∑th2
.
poöãr
 = 
b2
->
∑th
;

124  ((
UBoﬁ
)(
	`uhash_com∑ªCh¨s
(
«me1
, 
«me2
) &

125 
	`uhash_com∑ªCh¨s
(
∑th1
, 
∑th2
)));

126 
	}
}

129 
	$u•ªp_u∆ﬂd
(
USåögPªpProfûe
* 
d©a
){

130 
	`ud©a_˛o£
(
d©a
->
•ªpD©a
);

131 
	}
}

133 
öt32_t


134 
	$u•ªp_öã∫Æ_ÊushCache
(
UBoﬁ
 
noRefCou¡
){

135 
USåögPªpProfûe
 *
¥ofûe
 = 
NULL
;

136 
USåögPªpKey
 *
key
 = 
NULL
;

137 
öt32_t
 
pos
 = -1;

138 
öt32_t
 
dñëedNum
 = 0;

139 c⁄° 
UHashEÀmít
 *
e
;

145 
	`umtx_lock
(&
u•ªpMuãx
);

146 i‡(
SHARED_DATA_HASHTABLE
 =
NULL
) {

147 
	`umtx_u∆ock
(&
u•ªpMuãx
);

152 (
e
 = 
	`uhash_√xtEÀmít
(
SHARED_DATA_HASHTABLE
, &
pos
)Ë!
NULL
)

154 
¥ofûe
 = (
USåögPªpProfûe
 *Ë
e
->
vÆue
.
poöãr
;

155 
key
 = (
USåögPªpKey
 *Ë
e
->key.
poöãr
;

157 i‡((
noRefCou¡
=
FALSE
 && 
¥ofûe
->
ªfCou¡
 == 0) ||

158 
noRefCou¡
=
TRUE
) {

159 
dñëedNum
++;

160 
	`uhash_ªmoveEÀmít
(
SHARED_DATA_HASHTABLE
, 
e
);

163 
	`u•ªp_u∆ﬂd
(
¥ofûe
);

165 if(
key
->
«me
 !
NULL
) {

166 
	`u¥v_‰ì
(
key
->
«me
);

167 
key
->
«me
=
NULL
;

169 if(
key
->
∑th
 !
NULL
) {

170 
	`u¥v_‰ì
(
key
->
∑th
);

171 
key
->
∑th
=
NULL
;

173 
	`u¥v_‰ì
(
¥ofûe
);

174 
	`u¥v_‰ì
(
key
);

178 
	`umtx_u∆ock
(&
u•ªpMuãx
);

180  
dñëedNum
;

181 
	}
}

190 
UBoﬁ
 
U_CALLCONV
 
	$u•ªp_˛ónup
(){

191 i‡(
SHARED_DATA_HASHTABLE
 !
NULL
) {

192 
	`u•ªp_öã∫Æ_ÊushCache
(
TRUE
);

193 i‡(
SHARED_DATA_HASHTABLE
 !
NULL
 && 
	`uhash_cou¡
(SHARED_DATA_HASHTABLE) == 0) {

194 
	`uhash_˛o£
(
SHARED_DATA_HASHTABLE
);

195 
SHARED_DATA_HASHTABLE
 = 
NULL
;

199 
	`umtx_de°roy
(&
u•ªpMuãx
);

202  (
SHARED_DATA_HASHTABLE
 =
NULL
);

203 
	}
}

204 
U_CDECL_END


209 
	$öôCache
(
UEº‹Code
 *
°©us
) {

210 
UBoﬁ
 
makeCache
;

211 
	`UMTX_CHECK
(&
u•ªpMuãx
, (
SHARED_DATA_HASHTABLE
 =
NULL
), 
makeCache
);

212 if(
makeCache
) {

213 
UHashèbÀ
 *
√wCache
 = 
	`uhash_›í
(
hashE¡ry
, 
com∑ªE¡rõs
, 
NULL
, 
°©us
);

214 i‡(
	`U_SUCCESS
(*
°©us
)) {

215 
	`umtx_lock
(&
u•ªpMuãx
);

216 if(
SHARED_DATA_HASHTABLE
 =
NULL
) {

217 
SHARED_DATA_HASHTABLE
 = 
√wCache
;

218 
	`u˛n_comm⁄_ªgi°îCÀ™up
(
UCLN_COMMON_USPREP
, 
u•ªp_˛ónup
);

219 
√wCache
 = 
NULL
;

221 
	`umtx_u∆ock
(&
u•ªpMuãx
);

223 if(
√wCache
 !
NULL
) {

224 
	`uhash_˛o£
(
√wCache
);

227 
	}
}

229 
UBoﬁ
 
U_CALLCONV


230 
	$lﬂdD©a
(
USåögPªpProfûe
* 
¥ofûe
,

231 c⁄° * 
∑th
,

232 c⁄° * 
«me
,

233 c⁄° * 
ty≥
,

234 
UEº‹Code
* 
îr‹Code
) {

236 
UTrõ
 
_•ªpTrõ
={ 0,0,0,0,0,0,0 };

237 
UD©aMem‹y
 *
d©aMem‹y
;

238 c⁄° 
öt32_t
 *
p
=
NULL
;

239 c⁄° 
uöt8_t
 *
pb
;

240 
UVîsi⁄Info
 
n‹mUnicodeVîsi⁄
;

241 
öt32_t
 
n‹mUniVî
, 
•ªpUniVî
, 
n‹mC‹rVî
;

243 if(
îr‹Code
==
NULL
 || 
	`U_FAILURE
(*errorCode)) {

249 
d©aMem‹y
=
	`ud©a_›íChoi˚
(
∑th
, 
ty≥
, 
«me
, 
isSPªpAc˚±abÀ
, 
NULL
, 
îr‹Code
);

250 if(
	`U_FAILURE
(*
îr‹Code
)) {

251  
FALSE
;

254 
p
=(c⁄° 
öt32_t
 *)
	`ud©a_gëMem‹y
(
d©aMem‹y
);

255 
pb
=(c⁄° 
uöt8_t
 *)(
p
+
_SPREP_INDEX_TOP
);

256 
	`uåõ_un£rülize
(&
_•ªpTrõ
, 
pb
, 
p
[
_SPREP_INDEX_TRIE_SIZE
], 
îr‹Code
);

257 
_•ªpTrõ
.
gëFﬁdögOff£t
=
gëSPªpFﬁdögOff£t
;

260 if(
	`U_FAILURE
(*
îr‹Code
)) {

261 
	`ud©a_˛o£
(
d©aMem‹y
);

262  
FALSE
;

266 
	`umtx_lock
(&
u•ªpMuãx
);

267 if(
¥ofûe
->
•ªpD©a
==
NULL
) {

268 
¥ofûe
->
•ªpD©a
=
d©aMem‹y
;

269 
d©aMem‹y
=
NULL
;

270 
	`u¥v_mem˝y
(&
¥ofûe
->
ödexes
, 
p
, (profile->indexes));

271 
	`u¥v_mem˝y
(&
¥ofûe
->
•ªpTrõ
, &
_•ªpTrõ
, (
UTrõ
));

273 
p
=(c⁄° 
öt32_t
 *)
	`ud©a_gëMem‹y
(
¥ofûe
->
•ªpD©a
);

275 
	`umtx_u∆ock
(&
u•ªpMuãx
);

277 
¥ofûe
->
m≠pögD©a
=(
uöt16_t
 *)((
uöt8_t
 *)(
p
+
_SPREP_INDEX_TOP
)+¥ofûe->
ödexes
[
_SPREP_INDEX_TRIE_SIZE
]);

279 
	`u_gëUnicodeVîsi⁄
(
n‹mUnicodeVîsi⁄
);

280 
n‹mUniVî
 = (
n‹mUnicodeVîsi⁄
[0] << 24) + (normUnicodeVersion[1] << 16) +

281 (
n‹mUnicodeVîsi⁄
[2] << 8 ) + (normUnicodeVersion[3]);

282 
•ªpUniVî
 = (
d©aVîsi⁄
[0] << 24) + (dataVersion[1] << 16) +

283 (
d©aVîsi⁄
[2] << 8 ) + (dataVersion[3]);

284 
n‹mC‹rVî
 = 
¥ofûe
->
ödexes
[
_SPREP_NORM_CORRECTNS_LAST_UNI_VERSION
];

286 if(
	`U_FAILURE
(*
îr‹Code
)){

287 
	`ud©a_˛o£
(
d©aMem‹y
);

288  
FALSE
;

290 if–
n‹mUniVî
 < 
•ªpUniVî
 &&

291 
n‹mUniVî
 < 
n‹mC‹rVî
 &&

292 ((
¥ofûe
->
ödexes
[
_SPREP_OPTIONS
] & 
_SPREP_NORMALIZATION_ON
) > 0)

294 *
îr‹Code
 = 
U_INVALID_FORMAT_ERROR
;

295 
	`ud©a_˛o£
(
d©aMem‹y
);

296  
FALSE
;

298 
¥ofûe
->
isD©aLﬂded
 = 
TRUE
;

301 if(
d©aMem‹y
!=
NULL
) {

302 
	`ud©a_˛o£
(
d©aMem‹y
);

306  
¥ofûe
->
isD©aLﬂded
;

307 
	}
}

309 
USåögPªpProfûe
*

310 
	$u•ªp_gëProfûe
(c⁄° * 
∑th
,

311 c⁄° * 
«me
,

312 
UEº‹Code
 *
°©us
){

314 
USåögPªpProfûe
* 
¥ofûe
 = 
NULL
;

316 
	`öôCache
(
°©us
);

318 if(
	`U_FAILURE
(*
°©us
)){

319  
NULL
;

322 
USåögPªpKey
 
°ackKey
;

328 
°ackKey
.
«me
 = (*)Çame;

329 
°ackKey
.
∑th
 = (*)Öath;

332 
	`umtx_lock
(&
u•ªpMuãx
);

333 
¥ofûe
 = (
USåögPªpProfûe
*Ë(
	`uhash_gë
(
SHARED_DATA_HASHTABLE
,&
°ackKey
));

334 if(
¥ofûe
 !
NULL
) {

335 
¥ofûe
->
ªfCou¡
++;

337 
	`umtx_u∆ock
(&
u•ªpMuãx
);

339 if(
¥ofûe
 =
NULL
) {

341 
LoˇlMem‹y
<
USåögPªpProfûe
> 
√wProfûe
;

342 if(
√wProfûe
.
	`ÆloˇãIn°ódAndRe£t
(Ë=
NULL
) {

343 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

344  
NULL
;

348 if(!
	`lﬂdD©a
(
√wProfûe
.
	`gëAlüs
(), 
∑th
, 
«me
, 
_SPREP_DATA_TYPE
, 
°©us
Ë|| 
	`U_FAILURE
(*status) ){

349  
NULL
;

353 
√wProfûe
->
doNFKC
 = (
UBoﬁ
)(“ewProfûe->
ödexes
[
_SPREP_OPTIONS
] & 
_SPREP_NORMALIZATION_ON
) > 0);

354 
√wProfûe
->
checkBiDi
 = (
UBoﬁ
)(“ewProfûe->
ödexes
[
_SPREP_OPTIONS
] & 
_SPREP_CHECK_BIDI_ON
) > 0);

356 if(
√wProfûe
->
checkBiDi
) {

357 
√wProfûe
->
bdp
 = 
	`ubidi_gëSögÀt⁄
();

360 
LoˇlMem‹y
<
USåögPªpKey
> 
key
;

361 
LoˇlMem‹y
<> 
keyName
;

362 
LoˇlMem‹y
<> 
keyP©h
;

363 if–
key
.
	`ÆloˇãIn°ódAndRe£t
(Ë=
NULL
 ||

364 
keyName
.
	`ÆloˇãIn°ódAndC›y
(
	`u¥v_°æí
(
«me
)+1Ë=
NULL
 ||

365 (
∑th
 !
NULL
 &&

366 
keyP©h
.
	`ÆloˇãIn°ódAndC›y
(
	`u¥v_°æí
(
∑th
)+1Ë=
NULL
)

368 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

369 
	`u•ªp_u∆ﬂd
(
√wProfûe
.
	`gëAlüs
());

370  
NULL
;

373 
	`umtx_lock
(&
u•ªpMuãx
);

375 
¥ofûe
 = (
USåögPªpProfûe
*Ë(
	`uhash_gë
(
SHARED_DATA_HASHTABLE
,&
°ackKey
));

376 if(
¥ofûe
 !
NULL
) {

377 
¥ofûe
->
ªfCou¡
++;

378 
	`u•ªp_u∆ﬂd
(
√wProfûe
.
	`gëAlüs
());

382 
key
->
«me
 = 
keyName
.
	`‹ph™
();

383 
	`u¥v_°r˝y
(
key
->
«me
,Çame);

384 if(
∑th
 !
NULL
){

385 
key
->
∑th
 = 
keyP©h
.
	`‹ph™
();

386 
	`u¥v_°r˝y
(
key
->
∑th
,Öath);

388 
¥ofûe
 = 
√wProfûe
.
	`‹ph™
();

391 
¥ofûe
->
ªfCou¡
 = 1;

392 
	`uhash_put
(
SHARED_DATA_HASHTABLE
, 
key
.
	`‹ph™
(), 
¥ofûe
, 
°©us
);

394 
	`umtx_u∆ock
(&
u•ªpMuãx
);

397  
¥ofûe
;

398 
	}
}

400 
U_CAPI
 
USåögPªpProfûe
* 
U_EXPORT2


401 
	$u•ªp_›í
(c⁄° * 
∑th
,

402 c⁄° * 
«me
,

403 
UEº‹Code
* 
°©us
){

405 if(
°©us
 =
NULL
 || 
	`U_FAILURE
(*status)){

406  
NULL
;

410  
	`u•ªp_gëProfûe
(
∑th
,
«me
,
°©us
);

411 
	}
}

413 
U_CAPI
 
USåögPªpProfûe
* 
U_EXPORT2


414 
	$u•ªp_›íByTy≥
(
USåögPªpProfûeTy≥
 
ty≥
,

415 
UEº‹Code
* 
°©us
) {

416 if(
°©us
 =
NULL
 || 
	`U_FAILURE
(*status)){

417  
NULL
;

419 
öt32_t
 
ödex
 = (öt32_t)
ty≥
;

420 i‡(
ödex
 < 0 || index >(
öt32_t
)((
PROFILE_NAMES
)/(PROFILE_NAMES[0]))) {

421 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

422  
NULL
;

424  
	`u•ªp_›í
(
NULL
, 
PROFILE_NAMES
[
ödex
], 
°©us
);

425 
	}
}

427 
U_CAPI
 
U_EXPORT2


428 
	$u•ªp_˛o£
(
USåögPªpProfûe
* 
¥ofûe
){

429 if(
¥ofûe
==
NULL
){

433 
	`umtx_lock
(&
u•ªpMuãx
);

435 if(
¥ofûe
->
ªfCou¡
 > 0){

436 
¥ofûe
->
ªfCou¡
--;

438 
	`umtx_u∆ock
(&
u•ªpMuãx
);

440 
	}
}

442 
U_CFUNC
 

443 
	$u¥v_sy¡axEº‹
(c⁄° 
UCh¨
* 
ruÀs
,

444 
öt32_t
 
pos
,

445 
öt32_t
 
ruÀsLí
,

446 
UP¨£Eº‹
* 
∑r£Eº‹
){

447 if(
∑r£Eº‹
 =
NULL
){

450 
∑r£Eº‹
->
off£t
 = 
pos
;

451 
∑r£Eº‹
->
löe
 = 0 ;

454 
öt32_t
 
°¨t
 = (
pos
 < 
U_PARSE_CONTEXT_LEN
)? 0 : (pos - (U_PARSE_CONTEXT_LEN-1));

455 
öt32_t
 
limô
 = 
pos
;

457 
	`u_mem˝y
(
∑r£Eº‹
->
¥eC⁄ãxt
,
ruÀs
+
°¨t
,
limô
-start);

459 
∑r£Eº‹
->
¥eC⁄ãxt
[
limô
-
°¨t
] = 0;

462 
°¨t
 = 
pos
;

463 
limô
 = 
°¨t
 + (
U_PARSE_CONTEXT_LEN
-1);

464 i‡(
limô
 > 
ruÀsLí
) {

465 
limô
 = 
ruÀsLí
;

467 i‡(
°¨t
 < 
ruÀsLí
) {

468 
	`u_mem˝y
(
∑r£Eº‹
->
po°C⁄ãxt
,
ruÀs
+
°¨t
,
limô
-start);

471 
∑r£Eº‹
->
po°C⁄ãxt
[
limô
-
°¨t
]= 0;

472 
	}
}

475 
ölöe
 
USåögPªpTy≥


476 
	$gëVÆues
(
uöt16_t
 
åõW‹d
, 
öt16_t
& 
vÆue
, 
UBoﬁ
& 
isIndex
){

478 
USåögPªpTy≥
 
ty≥
;

479 if(
åõW‹d
 == 0){

485 
ty≥
 = 
USPREP_TYPE_LIMIT
;

486 
isIndex
 =
FALSE
;

487 
vÆue
 = 0;

488 }if(
åõW‹d
 >
_SPREP_TYPE_THRESHOLD
){

489 
ty≥
 = (
USåögPªpTy≥
Ë(
åõW‹d
 - 
_SPREP_TYPE_THRESHOLD
);

490 
isIndex
 =
FALSE
;

491 
vÆue
 = 0;

494 
ty≥
 = 
USPREP_MAP
;

496 if(
åõW‹d
 & 0x02){

497 
isIndex
 = 
TRUE
;

498 
vÆue
 = 
åõW‹d
 >> 2;

500 
isIndex
 = 
FALSE
;

501 
vÆue
 = (
öt16_t
)
åõW‹d
;

502 
vÆue
 = (value >> 2);

505 if((
åõW‹d
>>2Ë=
_SPREP_MAX_INDEX_VALUE
){

506 
ty≥
 = 
USPREP_DELETE
;

507 
isIndex
 =
FALSE
;

508 
vÆue
 = 0;

511  
ty≥
;

512 
	}
}

516 
öt32_t


517 
	$u•ªp_m≠
–c⁄° 
USåögPªpProfûe
* 
¥ofûe
,

518 c⁄° 
UCh¨
* 
§c
, 
öt32_t
 
§cLígth
,

519 
UCh¨
* 
de°
, 
öt32_t
 
de°C≠acôy
,

520 
öt32_t
 
›ti⁄s
,

521 
UP¨£Eº‹
* 
∑r£Eº‹
,

522 
UEº‹Code
* 
°©us
 ){

524 
uöt16_t
 
ªsu…
;

525 
öt32_t
 
de°Index
=0;

526 
öt32_t
 
§cIndex
;

527 
UBoﬁ
 
ÆlowU«ssig√d
 = (UBoﬁË((
›ti⁄s
 & 
USPREP_ALLOW_UNASSIGNED
)>0);

528 
USåögPªpTy≥
 
ty≥
;

529 
öt16_t
 
vÆue
;

530 
UBoﬁ
 
isIndex
;

531 c⁄° 
öt32_t
* 
ödexes
 = 
¥ofûe
->indexes;

536 
§cIndex
=0;§cIndex<
§cLígth
;){

537 
UCh¨32
 
ch
;

539 
	`U16_NEXT
(
§c
,
§cIndex
,
§cLígth
,
ch
);

541 
ªsu…
=0;

543 
	`UTRIE_GET16
(&
¥ofûe
->
•ªpTrõ
,
ch
,
ªsu…
);

545 
ty≥
 = 
	`gëVÆues
(
ªsu…
, 
vÆue
, 
isIndex
);

548 if(
ty≥
 =
USPREP_UNASSIGNED
 && 
ÆlowU«ssig√d
 =
FALSE
){

550 
	`u¥v_sy¡axEº‹
(
§c
,
§cIndex
-
	`U16_LENGTH
(
ch
), 
§cLígth
,
∑r£Eº‹
);

551 *
°©us
 = 
U_STRINGPREP_UNASSIGNED_ERROR
;

554 }if(
ty≥
 =
USPREP_MAP
){

556 
öt32_t
 
ödex
, 
Àngth
;

558 if(
isIndex
){

559 
ödex
 = 
vÆue
;

560 if(
ödex
 >
ödexes
[
_SPREP_ONE_UCHAR_MAPPING_INDEX_START
] &&

561 
ödex
 < 
ödexes
[
_SPREP_TWO_UCHARS_MAPPING_INDEX_START
]){

562 
Àngth
 = 1;

563 }if(
ödex
 >
ödexes
[
_SPREP_TWO_UCHARS_MAPPING_INDEX_START
] &&

564 
ödex
 < 
ödexes
[
_SPREP_THREE_UCHARS_MAPPING_INDEX_START
]){

565 
Àngth
 = 2;

566 }if(
ödex
 >
ödexes
[
_SPREP_THREE_UCHARS_MAPPING_INDEX_START
] &&

567 
ödex
 < 
ödexes
[
_SPREP_FOUR_UCHARS_MAPPING_INDEX_START
]){

568 
Àngth
 = 3;

570 
Àngth
 = 
¥ofûe
->
m≠pögD©a
[
ödex
++];

575 
öt32_t
 
i
=0; i< 
Àngth
; i++){

576 if(
de°Index
 < 
de°C≠acôy
 ){

577 
de°
[
de°Index
] = 
¥ofûe
->
m≠pögD©a
[
ödex
+
i
];

579 
de°Index
++;

584 
ch
 -
vÆue
;

587 }if(
ty≥
==
USPREP_DELETE
){

592 if(
ch
 <= 0xFFFF){

593 if(
de°Index
 < 
de°C≠acôy
 ){

594 
de°
[
de°Index
] = (
UCh¨
)
ch
;

596 
de°Index
++;

598 if(
de°Index
+1 < 
de°C≠acôy
 ){

599 
de°
[
de°Index
] = 
	`U16_LEAD
(
ch
);

600 
de°
[
de°Index
+1] = 
	`U16_TRAIL
(
ch
);

602 
de°Index
 +=2;

607  
	`u_ãrmö©eUCh¨s
(
de°
, 
de°C≠acôy
, 
de°Index
, 
°©us
);

608 
	}
}

611 
öt32_t


612 
	$u•ªp_n‹mÆize
–c⁄° 
UCh¨
* 
§c
, 
öt32_t
 
§cLígth
,

613 
UCh¨
* 
de°
, 
öt32_t
 
de°C≠acôy
,

614 
UEº‹Code
* 
°©us
 ){

615  
	`un‹m_n‹mÆize
(

616 
§c
, 
§cLígth
,

617 
UNORM_NFKC
, 
UNORM_UNICODE_3_2
,

618 
de°
, 
de°C≠acôy
,

619 
°©us
);

620 
	}
}

662 
	#MAX_STACK_BUFFER_SIZE
 300

	)

665 
U_CAPI
 
öt32_t
 
U_EXPORT2


666 
	$u•ªp_¥ï¨e
–c⁄° 
USåögPªpProfûe
* 
¥ofûe
,

667 c⁄° 
UCh¨
* 
§c
, 
öt32_t
 
§cLígth
,

668 
UCh¨
* 
de°
, 
öt32_t
 
de°C≠acôy
,

669 
öt32_t
 
›ti⁄s
,

670 
UP¨£Eº‹
* 
∑r£Eº‹
,

671 
UEº‹Code
* 
°©us
 ){

674 if(
°©us
 =
NULL
 || 
	`U_FAILURE
(*status)){

679 if(
¥ofûe
==
NULL
 || 
§c
==NULL || 
§cLígth
<-1 || (
de°
==NULL && 
de°C≠acôy
!=0)) {

680 *
°©us
=
U_ILLEGAL_ARGUMENT_ERROR
;

684 
UCh¨
 
b1Sèck
[
MAX_STACK_BUFFER_SIZE
], 
b2Sèck
[MAX_STACK_BUFFER_SIZE];

685 
UCh¨
 *
b1
 = 
b1Sèck
, *
b2
 = 
b2Sèck
;

686 
öt32_t
 
b1Lí
, 
b2Lí
=0,

687 
b1C≠acôy
 = 
MAX_STACK_BUFFER_SIZE
 ,

688 
b2C≠acôy
 = 
MAX_STACK_BUFFER_SIZE
;

689 
uöt16_t
 
ªsu…
;

690 
öt32_t
 
b2Index
 = 0;

691 
UCh¨Dúe˘i⁄
 
dúe˘i⁄
=
U_CHAR_DIRECTION_COUNT
, 
fú°Ch¨Dú
=U_CHAR_DIRECTION_COUNT;

692 
UBoﬁ
 
À·ToRight
=
FALSE
, 
rightToLe·
=FALSE;

693 
öt32_t
 
πlPos
 =-1, 
…rPos
 =-1;

696 if(
§cLígth
 == -1){

697 
§cLígth
 = 
	`u_°æí
(
§c
);

700 
b1Lí
 = 
	`u•ªp_m≠
(
¥ofûe
, 
§c
, 
§cLígth
, 
b1
, 
b1C≠acôy
, 
›ti⁄s
, 
∑r£Eº‹
, 
°©us
);

702 if(*
°©us
 =
U_BUFFER_OVERFLOW_ERROR
){

705 
b1
 = (
UCh¨
*Ë
	`u¥v_mÆloc
(
b1Lí
 * 
U_SIZEOF_UCHAR
);

706 if(
b1
==
NULL
){

707 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

708 
CLEANUP
;

711 *
°©us
 = 
U_ZERO_ERROR
;

713 
b1Lí
 = 
	`u•ªp_m≠
(
¥ofûe
, 
§c
, 
§cLígth
, 
b1
, b1Lí, 
›ti⁄s
, 
∑r£Eº‹
, 
°©us
);

718 if(
¥ofûe
->
doNFKC
 =
TRUE
){

719 
b2Lí
 = 
	`u•ªp_n‹mÆize
(
b1
,
b1Lí
, 
b2
,
b2C≠acôy
,
°©us
);

721 if(*
°©us
 =
U_BUFFER_OVERFLOW_ERROR
){

724 
b2
 = (
UCh¨
*Ë
	`u¥v_mÆloc
(
b2Lí
 * 
U_SIZEOF_UCHAR
);

725 if(
b2
==
NULL
){

726 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

727 
CLEANUP
;

730 *
°©us
 = 
U_ZERO_ERROR
;

732 
b2Lí
 = 
	`u•ªp_n‹mÆize
(
b1
,
b1Lí
, 
b2
,b2Lí,
°©us
);

737 
b2
 = 
b1
;

738 
b2Lí
 = 
b1Lí
;

742 if(
	`U_FAILURE
(*
°©us
)){

743 
CLEANUP
;

746 
UCh¨32
 
ch
;

747 
USåögPªpTy≥
 
ty≥
;

748 
öt16_t
 
vÆue
;

749 
UBoﬁ
 
isIndex
;

752 
b2Index
=0; b2Index<
b2Lí
;){

754 
ch
 = 0;

756 
	`U16_NEXT
(
b2
, 
b2Index
, 
b2Lí
, 
ch
);

758 
	`UTRIE_GET16
(&
¥ofûe
->
•ªpTrõ
,
ch
,
ªsu…
);

760 
ty≥
 = 
	`gëVÆues
(
ªsu…
, 
vÆue
, 
isIndex
);

762 if–
ty≥
 =
USPREP_PROHIBITED
 ||

763 ((
ªsu…
 < 
_SPREP_TYPE_THRESHOLD
) && (result & 0x01) )

765 *
°©us
 = 
U_STRINGPREP_PROHIBITED_ERROR
;

766 
	`u¥v_sy¡axEº‹
(
b1
, 
b2Index
-
	`U16_LENGTH
(
ch
), 
b2Lí
, 
∑r£Eº‹
);

767 
CLEANUP
;

770 if(
¥ofûe
->
checkBiDi
) {

771 
dúe˘i⁄
 = 
	`ubidi_gëCœss
(
¥ofûe
->
bdp
, 
ch
);

772 if(
fú°Ch¨Dú
 =
U_CHAR_DIRECTION_COUNT
){

773 
fú°Ch¨Dú
 = 
dúe˘i⁄
;

775 if(
dúe˘i⁄
 =
U_LEFT_TO_RIGHT
){

776 
À·ToRight
 = 
TRUE
;

777 
…rPos
 = 
b2Index
-1;

779 if(
dúe˘i⁄
 =
U_RIGHT_TO_LEFT
 || dúe˘i⁄ =
U_RIGHT_TO_LEFT_ARABIC
){

780 
rightToLe·
 = 
TRUE
;

781 
πlPos
 = 
b2Index
-1;

785 if(
¥ofûe
->
checkBiDi
 =
TRUE
){

787 if–
À·ToRight
 =
TRUE
 && 
rightToLe·
 == TRUE){

788 *
°©us
 = 
U_STRINGPREP_CHECK_BIDI_ERROR
;

789 
	`u¥v_sy¡axEº‹
(
b2
,(
πlPos
>
…rPos
Ë?ÑéPo†:ÜåPos, 
b2Lí
, 
∑r£Eº‹
);

790 
CLEANUP
;

794 if–
rightToLe·
 =
TRUE
 &&

795 !((
fú°Ch¨Dú
 =
U_RIGHT_TO_LEFT
 || fú°Ch¨Dú =
U_RIGHT_TO_LEFT_ARABIC
) &&

796 (
dúe˘i⁄
 =
U_RIGHT_TO_LEFT
 || dúe˘i⁄ =
U_RIGHT_TO_LEFT_ARABIC
))

798 *
°©us
 = 
U_STRINGPREP_CHECK_BIDI_ERROR
;

799 
	`u¥v_sy¡axEº‹
(
b2
, 
πlPos
, 
b2Lí
, 
∑r£Eº‹
);

800  
FALSE
;

803 if(
b2Lí
>0 && b2Lí <
de°C≠acôy
){

804 
	`u¥v_memmove
(
de°
,
b2
, 
b2Lí
*
U_SIZEOF_UCHAR
);

807 
CLEANUP
:

808 if(
b1
!=
b1Sèck
){

809 
	`u¥v_‰ì
(
b1
);

810 
b1
=
NULL
;

813 if(
b2
!=
b1Sèck
 && b2!=
b2Sèck
 && b2!=
b1
 ){

814 
	`u¥v_‰ì
(
b2
);

815 
b2
=
NULL
;

817  
	`u_ãrmö©eUCh¨s
(
de°
, 
de°C≠acôy
, 
b2Lí
, 
°©us
);

818 
	}
}

823 
U_CAPI
 
öt32_t
 
U_EXPORT2


824 
	$u•ªp_sw≠
(c⁄° 
UD©aSw≠≥r
 *
ds
,

825 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

826 
UEº‹Code
 *
pEº‹Code
) {

827 c⁄° 
UD©aInfo
 *
pInfo
;

828 
öt32_t
 
hódîSize
;

830 c⁄° 
uöt8_t
 *
öByãs
;

831 
uöt8_t
 *
outByãs
;

833 c⁄° 
öt32_t
 *
öIndexes
;

834 
öt32_t
 
ödexes
[16];

836 
öt32_t
 
i
, 
off£t
, 
cou¡
, 
size
;

839 
hódîSize
=
	`ud©a_sw≠D©aHódî
(
ds
, 
öD©a
, 
Àngth
, 
outD©a
, 
pEº‹Code
);

840 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

845 
pInfo
=(c⁄° 
UD©aInfo
 *)((c⁄° *)
öD©a
+4);

847 
pInfo
->
d©aF‹m©
[0]==0x53 &&

848 
pInfo
->
d©aF‹m©
[1]==0x50 &&

849 
pInfo
->
d©aF‹m©
[2]==0x52 &&

850 
pInfo
->
d©aF‹m©
[3]==0x50 &&

851 
pInfo
->
f‹m©Vîsi⁄
[0]==3

853 
	`ud©a_¥ötEº‹
(
ds
, "usprep_swap(): data format %02x.%02x.%02x.%02x (format version %02x) isÇotÑecognizedás StringPrep .spp data\n",

854 
pInfo
->
d©aF‹m©
[0],ÖInfo->dataFormat[1],

855 
pInfo
->
d©aF‹m©
[2],ÖInfo->dataFormat[3],

856 
pInfo
->
f‹m©Vîsi⁄
[0]);

857 *
pEº‹Code
=
U_UNSUPPORTED_ERROR
;

861 
öByãs
=(c⁄° 
uöt8_t
 *)
öD©a
+
hódîSize
;

862 
outByãs
=(
uöt8_t
 *)
outD©a
+
hódîSize
;

864 
öIndexes
=(c⁄° 
öt32_t
 *)
öByãs
;

866 if(
Àngth
>=0) {

867 
Àngth
-=
hódîSize
;

868 if(
Àngth
<16*4) {

869 
	`ud©a_¥ötEº‹
(
ds
, "usprep_swap():Åoo few bytes (%dáfter header) for StringPrep .spp data\n",

870 
Àngth
);

871 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

877 
i
=0; i<16; ++i) {

878 
ödexes
[
i
]=
	`ud©a_ªadI¡32
(
ds
, 
öIndexes
[i]);

882 
size
=

884 
ödexes
[
_SPREP_INDEX_TRIE_SIZE
]+

885 
ödexes
[
_SPREP_INDEX_MAPPING_DATA_SIZE
];

887 if(
Àngth
>=0) {

888 if(
Àngth
<
size
) {

889 
	`ud©a_¥ötEº‹
(
ds
, "usprep_swap():Åoo few bytes (%dáfter header) foráll of StringPrep .spp data\n",

890 
Àngth
);

891 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

896 if(
öByãs
!=
outByãs
) {

897 
	`u¥v_mem˝y
(
outByãs
, 
öByãs
, 
size
);

900 
off£t
=0;

903 
cou¡
=16*4;

904 
ds
->
	`sw≠Aºay32
(ds, 
öByãs
, 
cou¡
, 
outByãs
, 
pEº‹Code
);

905 
off£t
+=
cou¡
;

908 
cou¡
=
ödexes
[
_SPREP_INDEX_TRIE_SIZE
];

909 
	`uåõ_sw≠
(
ds
, 
öByãs
+
off£t
, 
cou¡
, 
outByãs
+off£t, 
pEº‹Code
);

910 
off£t
+=
cou¡
;

913 
cou¡
=
ödexes
[
_SPREP_INDEX_MAPPING_DATA_SIZE
];

914 
ds
->
	`sw≠Aºay16
(ds, 
öByãs
+
off£t
, 
cou¡
, 
outByãs
+off£t, 
pEº‹Code
);

915 
off£t
+=
cou¡
;

918  
hódîSize
+
size
;

919 
	}
}

	@ustack.cpp

8 
	~"uve˘‹.h
"

10 
U_NAMESPACE_BEGIN


12 
	$UOBJECT_DEFINE_RTTI_IMPLEMENTATION
(
USèck
)

14 
USèck
::
	$USèck
(
UEº‹Code
 &
°©us
) :

15 
	$UVe˘‹
(
°©us
)

17 
	}
}

19 
USèck
::
	$USèck
(
öt32_t
 
öôülC≠acôy
, 
UEº‹Code
 &
°©us
) :

20 
	$UVe˘‹
(
öôülC≠acôy
, 
°©us
)

22 
	}
}

24 
	gUSèck
::
	$USèck
(
UObje˘Dñëî
 *
d
, 
UKeyCom∑øt‹
 *
c
, 
UEº‹Code
 &
°©us
) :

25 
	$UVe˘‹
(
d
, 
c
, 
°©us
)

27 
	}
}

29 
	gUSèck
::
	$USèck
(
UObje˘Dñëî
 *
d
, 
UKeyCom∑øt‹
 *
c
, 
öt32_t
 
öôülC≠acôy
, 
UEº‹Code
 &
°©us
) :

30 
	$UVe˘‹
(
d
, 
c
, 
öôülC≠acôy
, 
°©us
)

32 
	}
}

34 
	gUSèck
::~
	$USèck
(Ë{
	}
}

36 * 
USèck
::
	$p›
() {

37 
öt32_t
 
n
 = 
	`size
() - 1;

38 * 
ªsu…
 = 0;

39 i‡(
n
 >= 0) {

40 
ªsu…
 = 
	`ñemítAt
(
n
);

41 
	`ªmoveEÀmítAt
(
n
);

43  
ªsu…
;

44 
	}
}

46 
öt32_t
 
	gUSèck
::
	$p›i
() {

47 
öt32_t
 
n
 = 
	`size
() - 1;

48 
öt32_t
 
ªsu…
 = 0;

49 i‡(
n
 >= 0) {

50 
ªsu…
 = 
	`ñemítAti
(
n
);

51 
	`ªmoveEÀmítAt
(
n
);

53  
ªsu…
;

54 
	}
}

56 
öt32_t
 
	gUSèck
::
	$£¨ch
(* 
obj
) const {

57 
öt32_t
 
i
 = 
	`ödexOf
(
obj
);

58  (
i
 >0Ë? 
	`size
() - i : i;

59 
	}
}

61 
	gU_NAMESPACE_END


	@ustr_cnv.c

19 
	~"unicode/uty≥s.h
"

21 #i‡!
UCONFIG_NO_CONVERSION


23 
	~"unicode/u°rög.h
"

24 
	~"unicode/u˙v.h
"

25 
	~"c°rög.h
"

26 
	~"cmem‹y.h
"

27 
	~"umuãx.h
"

28 
	~"u°r_˙v.h
"

32 
UC⁄vîãr
 *
	ggDeÁu…C⁄vîãr
 = 
NULL
;

34 
U_CAPI
 
UC⁄vîãr
* 
U_EXPORT2


35 
	$u_gëDeÁu…C⁄vîãr
(
UEº‹Code
 *
°©us
)

37 
UC⁄vîãr
 *
c⁄vîãr
 = 
NULL
;

39 i‡(
gDeÁu…C⁄vîãr
 !
NULL
) {

40 
	`umtx_lock
(
NULL
);

43 i‡(
gDeÁu…C⁄vîãr
 !
NULL
) {

44 
c⁄vîãr
 = 
gDeÁu…C⁄vîãr
;

45 
gDeÁu…C⁄vîãr
 = 
NULL
;

47 
	`umtx_u∆ock
(
NULL
);

51 if(
c⁄vîãr
 =
NULL
) {

52 
c⁄vîãr
 = 
	`u˙v_›í
(
NULL
, 
°©us
);

53 if(
	`U_FAILURE
(*
°©us
)) {

54 
	`u˙v_˛o£
(
c⁄vîãr
);

55 
c⁄vîãr
 = 
NULL
;

59  
c⁄vîãr
;

60 
	}
}

62 
U_CAPI
 
U_EXPORT2


63 
	$u_ªÀa£DeÁu…C⁄vîãr
(
UC⁄vîãr
 *
c⁄vîãr
)

65 if(
gDeÁu…C⁄vîãr
 =
NULL
) {

66 i‡(
c⁄vîãr
 !
NULL
) {

67 
	`u˙v_ª£t
(
c⁄vîãr
);

69 
	`umtx_lock
(
NULL
);

71 if(
gDeÁu…C⁄vîãr
 =
NULL
) {

72 
gDeÁu…C⁄vîãr
 = 
c⁄vîãr
;

73 
c⁄vîãr
 = 
NULL
;

75 
	`umtx_u∆ock
(
NULL
);

78 if(
c⁄vîãr
 !
NULL
) {

79 
	`u˙v_˛o£
(
c⁄vîãr
);

81 
	}
}

83 
U_CAPI
 
U_EXPORT2


84 
	$u_ÊushDeÁu…C⁄vîãr
()

86 
UC⁄vîãr
 *
c⁄vîãr
 = 
NULL
;

88 i‡(
gDeÁu…C⁄vîãr
 !
NULL
) {

89 
	`umtx_lock
(
NULL
);

92 i‡(
gDeÁu…C⁄vîãr
 !
NULL
) {

93 
c⁄vîãr
 = 
gDeÁu…C⁄vîãr
;

94 
gDeÁu…C⁄vîãr
 = 
NULL
;

96 
	`umtx_u∆ock
(
NULL
);

100 if(
c⁄vîãr
 !
NULL
) {

101 
	`u˙v_˛o£
(
c⁄vîãr
);

103 
	}
}

109 
	#MAX_STRLEN
 0x0FFFFFFF

	)

114 
öt32_t
 
	$u_a°∫Àn
(c⁄° *
s1
, 
öt32_t
 
n
)

116 
öt32_t
 
Àn
 = 0;

118 i‡(
s1
)

120 
n
-- && *(
s1
++))

122 
Àn
++;

125  
Àn
;

126 
	}
}

128 
U_CAPI
 
UCh¨
* 
U_EXPORT2


129 
	$u_ua°∫˝y
(
UCh¨
 *
ucs1
,

130 c⁄° *
s2
,

131 
öt32_t
 
n
)

133 
UCh¨
 *
èrgë
 = 
ucs1
;

134 
UEº‹Code
 
îr
 = 
U_ZERO_ERROR
;

135 
UC⁄vîãr
 *
˙v
 = 
	`u_gëDeÁu…C⁄vîãr
(&
îr
);

136 if(
	`U_SUCCESS
(
îr
Ë&& 
˙v
 !
NULL
) {

137 
	`u˙v_ª£t
(
˙v
);

138 
	`u˙v_toUnicode
(
˙v
,

139 &
èrgë
,

140 
ucs1
+
n
,

141 &
s2
,

142 
s2
+
	`u_a°∫Àn
(s2, 
n
),

143 
NULL
,

144 
TRUE
,

145 &
îr
);

146 
	`u˙v_ª£t
(
˙v
);

147 
	`u_ªÀa£DeÁu…C⁄vîãr
(
˙v
);

148 if(
	`U_FAILURE
(
îr
Ë&& (î∏!
U_BUFFER_OVERFLOW_ERROR
) ) {

149 *
ucs1
 = 0;

151 if(
èrgë
 < (
ucs1
+
n
)) {

152 *
èrgë
 = 0;

155 *
ucs1
 = 0;

157  
ucs1
;

158 
	}
}

160 
U_CAPI
 
UCh¨
* 
U_EXPORT2


161 
	$u_ua°r˝y
(
UCh¨
 *
ucs1
,

162 c⁄° *
s2
 )

164 
UEº‹Code
 
îr
 = 
U_ZERO_ERROR
;

165 
UC⁄vîãr
 *
˙v
 = 
	`u_gëDeÁu…C⁄vîãr
(&
îr
);

166 if(
	`U_SUCCESS
(
îr
Ë&& 
˙v
 !
NULL
) {

167 
	`u˙v_toUCh¨s
(
˙v
,

168 
ucs1
,

169 
MAX_STRLEN
,

170 
s2
,

171 (
öt32_t
)
	`u¥v_°æí
(
s2
),

172 &
îr
);

173 
	`u_ªÀa£DeÁu…C⁄vîãr
(
˙v
);

174 if(
	`U_FAILURE
(
îr
)) {

175 *
ucs1
 = 0;

178 *
ucs1
 = 0;

180  
ucs1
;

181 
	}
}

186 
öt32_t
 
	$u_u°∫Àn
(c⁄° 
UCh¨
 *
ucs1
, 
öt32_t
 
n
)

188 
öt32_t
 
Àn
 = 0;

190 i‡(
ucs1
)

192 
n
-- && *(
ucs1
++))

194 
Àn
++;

197  
Àn
;

198 
	}
}

200 
U_CAPI
 * 
U_EXPORT2


201 
	$u_au°∫˝y
(*
s1
,

202 c⁄° 
UCh¨
 *
ucs2
,

203 
öt32_t
 
n
)

205 *
èrgë
 = 
s1
;

206 
UEº‹Code
 
îr
 = 
U_ZERO_ERROR
;

207 
UC⁄vîãr
 *
˙v
 = 
	`u_gëDeÁu…C⁄vîãr
(&
îr
);

208 if(
	`U_SUCCESS
(
îr
Ë&& 
˙v
 !
NULL
) {

209 
	`u˙v_ª£t
(
˙v
);

210 
	`u˙v_‰omUnicode
(
˙v
,

211 &
èrgë
,

212 
s1
+
n
,

213 &
ucs2
,

214 
ucs2
+
	`u_u°∫Àn
(ucs2, 
n
),

215 
NULL
,

216 
TRUE
,

217 &
îr
);

218 
	`u˙v_ª£t
(
˙v
);

219 
	`u_ªÀa£DeÁu…C⁄vîãr
(
˙v
);

220 if(
	`U_FAILURE
(
îr
Ë&& (î∏!
U_BUFFER_OVERFLOW_ERROR
) ) {

221 *
s1
 = 0;

223 if(
èrgë
 < (
s1
+
n
)) {

224 *
èrgë
 = 0;

227 *
s1
 = 0;

229  
s1
;

230 
	}
}

232 
U_CAPI
 * 
U_EXPORT2


233 
	$u_au°r˝y
(*
s1
,

234 c⁄° 
UCh¨
 *
ucs2
 )

236 
UEº‹Code
 
îr
 = 
U_ZERO_ERROR
;

237 
UC⁄vîãr
 *
˙v
 = 
	`u_gëDeÁu…C⁄vîãr
(&
îr
);

238 if(
	`U_SUCCESS
(
îr
Ë&& 
˙v
 !
NULL
) {

239 
öt32_t
 
Àn
 = 
	`u˙v_‰omUCh¨s
(
˙v
,

240 
s1
,

241 
MAX_STRLEN
,

242 
ucs2
,

244 &
îr
);

245 
	`u_ªÀa£DeÁu…C⁄vîãr
(
˙v
);

246 
s1
[
Àn
] = 0;

248 *
s1
 = 0;

250  
s1
;

251 
	}
}

	@ustr_cnv.h

15 #i‚de‡
USTR_CNV_IMP_H


16 
	#USTR_CNV_IMP_H


	)

18 
	~"unicode/uty≥s.h
"

19 
	~"unicode/u˙v.h
"

21 #i‡!
UCONFIG_NO_CONVERSION


29 
U_CAPI
 
UC⁄vîãr
* 
U_EXPORT2


30 
u_gëDeÁu…C⁄vîãr
(
UEº‹Code
 *
°©us
);

37 
U_CAPI
 
U_EXPORT2


38 
u_ªÀa£DeÁu…C⁄vîãr
(
UC⁄vîãr
 *
c⁄vîãr
);

44 
U_CAPI
 
U_EXPORT2


45 
u_ÊushDeÁu…C⁄vîãr
();

	@ustr_imp.h

15 #i‚de‡
__USTR_IMP_H__


16 
	#__USTR_IMP_H__


	)

18 
	~"unicode/uty≥s.h
"

19 
	~"unicode/uôî.h
"

20 
	~"uˇ£.h
"

23 #i‚de‡
UBRK_TYPEDEF_UBREAK_ITERATOR


24 
	#UBRK_TYPEDEF_UBREAK_ITERATOR


	)

25 
UBªakIãøt‹
 
	tUBªakIãøt‹
;

28 #i‚de‡
U_COMPARE_IGNORE_CASE


35 
	#U_COMPARE_IGNORE_CASE
 0x10000

	)

43 
	#_STRNCMP_STYLE
 0x1000

	)

52 
U_CFUNC
 
öt32_t
 
U_EXPORT2


53 
u¥v_°rCom∑ª
(c⁄° 
UCh¨
 *
s1
, 
öt32_t
 
Àngth1
,

54 c⁄° 
UCh¨
 *
s2
, 
öt32_t
 
Àngth2
,

55 
UBoﬁ
 
°∫cmpStyÀ
, UBoﬁ 
codePoötOrdî
);

63 
U_CFUNC
 
öt32_t


64 
u_°rcmpFﬁd
(c⁄° 
UCh¨
 *
s1
, 
öt32_t
 
Àngth1
,

65 c⁄° 
UCh¨
 *
s2
, 
öt32_t
 
Àngth2
,

66 
uöt32_t
 
›ti⁄s
,

67 
UEº‹Code
 *
pEº‹Code
);

76 
U_CFUNC
 
UBoﬁ


77 
u¥v_havePr›îtõs
(
UEº‹Code
 *
pEº‹Code
);

97 
	sUCa£M≠
 {

98 c⁄° 
UCa£Pr›s
 *
	mc•
;

99 #i‡!
UCONFIG_NO_BREAK_ITERATION


100 
UBªakIãøt‹
 *
	môî
;

102 
	mloˇÀ
[32];

103 
öt32_t
 
	mlocCache
;

104 
uöt32_t
 
	m›ti⁄s
;

107 #i‚de‡
__UCASEMAP_H__


108 
UCa£M≠
 
	tUCa£M≠
;

115 
	mTO_LOWER
,

116 
	mTO_UPPER
,

117 
	mTO_TITLE
,

118 
	mFOLD_CASE


124 
U_CFUNC
 
öt32_t


125 
u°r_toLowî
(c⁄° 
UCa£Pr›s
 *
c•
,

126 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

127 c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

128 c⁄° *
loˇÀ
,

129 
UEº‹Code
 *
pEº‹Code
);

134 
U_CFUNC
 
öt32_t


135 
u°r_toUµî
(c⁄° 
UCa£Pr›s
 *
c•
,

136 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

137 c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

138 c⁄° *
loˇÀ
,

139 
UEº‹Code
 *
pEº‹Code
);

141 #i‡!
UCONFIG_NO_BREAK_ITERATION


146 
U_CFUNC
 
öt32_t


147 
u°r_toTôÀ
(c⁄° 
UCa£Pr›s
 *
c•
,

148 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

149 c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

150 
UBªakIãøt‹
 *
tôÀIãr
,

151 c⁄° *
loˇÀ
, 
uöt32_t
 
›ti⁄s
,

152 
UEº‹Code
 *
pEº‹Code
);

160 
U_CFUNC
 
öt32_t


161 
u°r_fﬁdCa£
(c⁄° 
UCa£Pr›s
 *
c•
,

162 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

163 c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

164 
uöt32_t
 
›ti⁄s
,

165 
UEº‹Code
 *
pEº‹Code
);

180 
U_CAPI
 
öt32_t
 
U_EXPORT2


181 
u_ãrmö©eUCh¨s
(
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
, i¡32_à
Àngth
, 
UEº‹Code
 *
pEº‹Code
);

187 
U_CAPI
 
öt32_t
 
U_EXPORT2


188 
u_ãrmö©eCh¨s
(*
de°
, 
öt32_t
 
de°C≠acôy
, i¡32_à
Àngth
, 
UEº‹Code
 *
pEº‹Code
);

194 
U_CAPI
 
öt32_t
 
U_EXPORT2


195 
u_ãrmö©eUCh¨32s
(
UCh¨32
 *
de°
, 
öt32_t
 
de°C≠acôy
, i¡32_à
Àngth
, 
UEº‹Code
 *
pEº‹Code
);

201 
U_CAPI
 
öt32_t
 
U_EXPORT2


202 
u_ãrmö©eWCh¨s
(
wch¨_t
 *
de°
, 
öt32_t
 
de°C≠acôy
, i¡32_à
Àngth
, 
UEº‹Code
 *
pEº‹Code
);

	@ustr_wcs.c

20 
	~"unicode/uty≥s.h
"

21 
	~"unicode/u°rög.h
"

22 
	~"c°rög.h
"

23 
	~"cwch¨.h
"

24 
	~"cmem‹y.h
"

25 
	~"u°r_imp.h
"

26 
	~"u°r_˙v.h
"

29 #ifde‡
HAVE_ANDROID_OS


31 
	#MB_CUR_MAX
 (1)

	)

35 #i‡
deföed
(
U_WCHAR_IS_UTF16
Ë|| deföed(
U_WCHAR_IS_UTF32
Ë|| !
UCONFIG_NO_CONVERSION


37 
	#_STACK_BUFFER_CAPACITY
 1000

	)

38 
	#_BUFFER_CAPACITY_MULTIPLIER
 2

	)

40 #i‡!
deföed
(
U_WCHAR_IS_UTF16
Ë&& !deföed(
U_WCHAR_IS_UTF32
)

41 
U_INLINE
 
UBoﬁ


42 
	$u_growAnyBuf„rFromSètic
(*
c⁄ãxt
,

43 **
pBuf„r
, 
öt32_t
 *
pC≠acôy
, i¡32_à
ªqC≠acôy
,

44 
öt32_t
 
Àngth
, i¡32_à
size
) {

46 *
√wBuf„r
=
	`u¥v_mÆloc
(
ªqC≠acôy
*
size
);

47 if(
√wBuf„r
!=
NULL
) {

48 if(
Àngth
>0) {

49 
	`u¥v_mem˝y
(
√wBuf„r
, *
pBuf„r
, 
Àngth
*
size
);

51 *
pC≠acôy
=
ªqC≠acôy
;

53 *
pC≠acôy
=0;

57 if(*
pBuf„r
!=(*)
c⁄ãxt
) {

58 
	`u¥v_‰ì
(*
pBuf„r
);

61 *
pBuf„r
=
√wBuf„r
;

62  (
UBoﬁ
)(
√wBuf„r
!=
NULL
);

63 
	}
}

66 
wch¨_t
*

67 
	$_°rToWCS
(
wch¨_t
 *
de°
,

68 
öt32_t
 
de°C≠acôy
,

69 
öt32_t
 *
pDe°Lígth
,

70 c⁄° 
UCh¨
 *
§c
,

71 
öt32_t
 
§cLígth
,

72 
UEº‹Code
 *
pEº‹Code
){

74 
°ackBuf„r
 [
_STACK_BUFFER_CAPACITY
];

75 * 
ãmpBuf
 = 
°ackBuf„r
;

76 
öt32_t
 
ãmpBufC≠acôy
 = 
_STACK_BUFFER_CAPACITY
;

77 * 
ãmpBufLimô
 = 
°ackBuf„r
 + 
ãmpBufC≠acôy
;

78 
UC⁄vîãr
* 
c⁄v
 = 
NULL
;

79 * 
ßveBuf
 = 
ãmpBuf
;

80 
wch¨_t
* 
ötT¨gë
=
NULL
;

81 
öt32_t
 
ötT¨gëC≠acôy
=0;

82 
cou¡
=0,
ªtVÆ
=0;

84 c⁄° 
UCh¨
 *
pSrcLimô
 =
NULL
;

85 c⁄° 
UCh¨
 *
pSrc
 = 
§c
;

87 
c⁄v
 = 
	`u_gëDeÁu…C⁄vîãr
(
pEº‹Code
);

89 if(
	`U_FAILURE
(*
pEº‹Code
)){

90  
NULL
;

93 if(
§cLígth
 == -1){

94 
§cLígth
 = 
	`u_°æí
(
pSrc
);

97 
pSrcLimô
 = 
pSrc
 + 
§cLígth
;

101 *
pEº‹Code
 = 
U_ZERO_ERROR
;

104 
	`u˙v_‰omUnicode
(
c⁄v
,&
ãmpBuf
,
ãmpBufLimô
,&
pSrc
,
pSrcLimô
,
NULL
,(
UBoﬁ
)’Src=ıSrcLimô),
pEº‹Code
);

105 
cou¡
 =(
ãmpBuf
 - 
ßveBuf
);

108 if(*
pEº‹Code
==
U_BUFFER_OVERFLOW_ERROR
){

109 
ãmpBuf
 = 
ßveBuf
;

112 if(!
	`u_growAnyBuf„rFromSètic
(
°ackBuf„r
,(**Ë&
ãmpBuf
, &
ãmpBufC≠acôy
,

113 (
_BUFFER_CAPACITY_MULTIPLIER
 * (
§cLígth
)), 
cou¡
,())){

114 
˛ónup
;

117 
ßveBuf
 = 
ãmpBuf
;

118 
ãmpBufLimô
 = 
ãmpBuf
 + 
ãmpBufC≠acôy
;

119 
ãmpBuf
 =ÅempBu‡+ 
cou¡
;

126 if(
	`U_FAILURE
(*
pEº‹Code
)){

127 
˛ónup
;

131 if(
cou¡
>=
ãmpBufC≠acôy
){

132 
ãmpBuf
 = 
ßveBuf
;

134 if(!
	`u_growAnyBuf„rFromSètic
(
°ackBuf„r
,(**Ë&
ãmpBuf
, &
ãmpBufC≠acôy
,

135 
ãmpBufC≠acôy
-
cou¡
+1, count,())){

136 
˛ónup
;

138 
ßveBuf
 = 
ãmpBuf
;

141 
ßveBuf
[
cou¡
]=0;

148 
ötT¨gëC≠acôy
 = (
cou¡
 * 
_BUFFER_CAPACITY_MULTIPLIER
 + 1) ;

149 
ötT¨gë
 = (
wch¨_t
*)
	`u¥v_mÆloc
–
ötT¨gëC≠acôy
 * (wchar_t) );

151 if(
ötT¨gë
){

153 
öt32_t
 
nulLí
 = 0;

154 
öt32_t
 
ªmaöög
 = 
ötT¨gëC≠acôy
;

155 
wch¨_t
* 
pI¡T¨gë
=
ötT¨gë
;

156 
ãmpBuf
 = 
ßveBuf
;

164 
ªtVÆ
 = 
	`u¥v_mb°owcs
(
pI¡T¨gë
,(
ãmpBuf
+
nulLí
),
ªmaöög
);

166 if(
ªtVÆ
==-1){

167 *
pEº‹Code
 = 
U_INVALID_CHAR_FOUND
;

169 }if(
ªtVÆ
=
ªmaöög
){

170 
numWrôãn
 = (
pI¡T¨gë
-
ötT¨gë
);

171 
	`u_growAnyBuf„rFromSètic
(
NULL
,(**Ë&
ötT¨gë
,

172 &
ötT¨gëC≠acôy
,

173 
ötT¨gëC≠acôy
 * 
_BUFFER_CAPACITY_MULTIPLIER
,

174 
numWrôãn
,

175 (
wch¨_t
));

176 
pI¡T¨gë
 = 
ötT¨gë
;

177 
ªmaöög
=
ötT¨gëC≠acôy
;

179 if(
nulLí
!=
cou¡
){

180 
pI¡T¨gë
+=
numWrôãn
;

181 
ªmaöög
-=
numWrôãn
;

185 
öt32_t
 
nulVÆ
;

188 
ãmpBuf
[
nulLí
++] != 0){

190 
nulVÆ
 = (
nulLí
 < 
§cLígth
) ? 1 : 0;

191 
pI¡T¨gë
 =ÖI¡T¨gë + 
ªtVÆ
+
nulVÆ
;

192 
ªmaöög
 -=(
ªtVÆ
+
nulVÆ
);

195 if(
nulLí
>=(
cou¡
)){

200 
cou¡
 = (
öt32_t
)(
pI¡T¨gë
-
ötT¨gë
);

202 if(0 < 
cou¡
 && cou¡ <
de°C≠acôy
){

203 
	`u¥v_mem˝y
(
de°
,
ötT¨gë
,
cou¡
*(
wch¨_t
));

206 if(
pDe°Lígth
){

207 *
pDe°Lígth
 = 
cou¡
;

211 
	`u¥v_‰ì
(
ötT¨gë
);

214 *
pEº‹Code
 = 
U_MEMORY_ALLOCATION_ERROR
;

216 
˛ónup
:

218 if(
°ackBuf„r
 !
ßveBuf
){

219 
	`u¥v_‰ì
(
ßveBuf
);

221 
	`u_ãrmö©eWCh¨s
(
de°
,
de°C≠acôy
,
cou¡
,
pEº‹Code
);

223 
	`u_ªÀa£DeÁu…C⁄vîãr
(
c⁄v
);

225  
de°
;

226 
	}
}

229 
U_CAPI
 
wch¨_t
* 
U_EXPORT2


230 
	$u_°rToWCS
(
wch¨_t
 *
de°
,

231 
öt32_t
 
de°C≠acôy
,

232 
öt32_t
 *
pDe°Lígth
,

233 c⁄° 
UCh¨
 *
§c
,

234 
öt32_t
 
§cLígth
,

235 
UEº‹Code
 *
pEº‹Code
){

238 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)){

239  
NULL
;

242 if–(
§c
==
NULL
 && 
§cLígth
!=0) || srcLength < -1 ||

243 (
de°C≠acôy
<0Ë|| (
de°
 =
NULL
 && destCapacity > 0)

245 *
pEº‹Code
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

246  
NULL
;

249 #ifde‡
U_WCHAR_IS_UTF16


251 if(
§cLígth
 == -1){

252 
§cLígth
 = 
	`u_°æí
(
§c
);

254 if(0 < 
§cLígth
 && srcLígth <
de°C≠acôy
){

255 
	`u¥v_mem˝y
(
de°
,
§c
,
§cLígth
*
U_SIZEOF_UCHAR
);

257 if(
pDe°Lígth
){

258 *
pDe°Lígth
 = 
§cLígth
;

261 
	`u_ãrmö©eUCh¨s
(
de°
,
de°C≠acôy
,
§cLígth
,
pEº‹Code
);

263  
de°
;

265 #ñi‡
deföed
 
U_WCHAR_IS_UTF32


267  (
wch¨_t
*)
	`u_°rToUTF32
((
UCh¨32
*)
de°
, 
de°C≠acôy
, 
pDe°Lígth
,

268 
§c
, 
§cLígth
, 
pEº‹Code
);

272  
	`_°rToWCS
(
de°
,
de°C≠acôy
,
pDe°Lígth
,
§c
,
§cLígth
, 
pEº‹Code
);

276 
	}
}

278 #i‡!
deföed
(
U_WCHAR_IS_UTF16
Ë&& !deföed(
U_WCHAR_IS_UTF32
)

280 
UCh¨
*

281 
	$_°rFromWCS
–
UCh¨
 *
de°
,

282 
öt32_t
 
de°C≠acôy
,

283 
öt32_t
 *
pDe°Lígth
,

284 c⁄° 
wch¨_t
 *
§c
,

285 
öt32_t
 
§cLígth
,

286 
UEº‹Code
 *
pEº‹Code
)

288 
öt32_t
 
ªtVÆ
 =0, 
cou¡
 =0 ;

289 
UC⁄vîãr
* 
c⁄v
 = 
NULL
;

290 
UCh¨
* 
pT¨gë
 = 
NULL
;

291 
UCh¨
* 
pT¨gëLimô
 = 
NULL
;

292 
UCh¨
* 
èrgë
 = 
NULL
;

294 
UCh¨
 
uSèck
 [
_STACK_BUFFER_CAPACITY
];

296 
wch¨_t
 
wSèck
[
_STACK_BUFFER_CAPACITY
];

297 
wch¨_t
* 
pWSèck
 = 
wSèck
;

300 
cSèck
[
_STACK_BUFFER_CAPACITY
];

301 
öt32_t
 
cSèckC≠
 = 
_STACK_BUFFER_CAPACITY
;

302 * 
pCSrc
=
cSèck
;

303 * 
pCSave
=
pCSrc
;

304 * 
pCSrcLimô
=
NULL
;

306 c⁄° 
wch¨_t
* 
pSrc
 = 
§c
;

307 c⁄° 
wch¨_t
* 
pSrcLimô
 = 
NULL
;

309 if(
§cLígth
 ==-1){

316 
ªtVÆ
 = 
	`u¥v_wc°ombs
(
pCSrc
,
§c
, 
cSèckC≠
);

318 if(
ªtVÆ
 == -1){

319 *
pEº‹Code
 = 
U_ILLEGAL_CHAR_FOUND
;

320 
˛ónup
;

321 }if(
ªtVÆ
 >(
cSèckC≠
-1)){

323 
	`u_growAnyBuf„rFromSètic
(
cSèck
,(**)&
pCSrc
,&
cSèckC≠
,

324 
cSèckC≠
 * 
_BUFFER_CAPACITY_MULTIPLIER
, 0, ());

325 
pCSave
 = 
pCSrc
;

328 
pCSrc
 =ÖCSrc+
ªtVÆ
;

338 
öt32_t
 
ªmaöög
 =
cSèckC≠
;

340 
pSrcLimô
 = 
§c
 + 
§cLígth
;

343 
öt32_t
 
nulLí
 = 0;

346 
nulLí
<
§cLígth
 && 
pSrc
[nulLen++]!=0){

349 if((
pSrc
+
nulLí
Ë< 
pSrcLimô
){

351 if(
ªmaöög
 < (
nulLí
 * 
MB_CUR_MAX
)){

353 
öt32_t
 
Àn
 = (
pCSrc
-
pCSave
);

354 
pCSrc
 = 
pCSave
;

356 
	`u_growAnyBuf„rFromSètic
(
cSèck
,(**)&
pCSrc
,&
cSèckC≠
,

357 
_BUFFER_CAPACITY_MULTIPLIER
*
cSèckC≠
+(
nulLí
*
MB_CUR_MAX
),
Àn
,());

359 
pCSave
 = 
pCSrc
;

360 
pCSrc
 = 
pCSave
+
Àn
;

361 
ªmaöög
 = 
cSèckC≠
-(
pCSrc
 - 
pCSave
);

367 
ªtVÆ
 = 
	`u¥v_wc°ombs
(
pCSrc
,
pSrc
,
ªmaöög
);

369 if(
ªtVÆ
==-1){

371 *
pEº‹Code
 = 
U_ILLEGAL_CHAR_FOUND
;

372 
˛ónup
;

375 
pCSrc
 +
ªtVÆ
+1 ;

377 
pSrc
 +
nulLí
;

378 
§cLígth
-=
nulLí
;

379 
ªmaöög
 -(
pCSrc
-
pCSave
);

387 if(
nulLí
 >
_STACK_BUFFER_CAPACITY
){

390 
pWSèck
 =(
wch¨_t
*Ë
	`u¥v_mÆloc
((wch¨_tË* (
nulLí
 + 1));

391 if(
pWSèck
==
NULL
){

392 *
pEº‹Code
 = 
U_MEMORY_ALLOCATION_ERROR
;

393 
˛ónup
;

396 if(
nulLí
>0){

398 
	`u¥v_mem˝y
(
pWSèck
,
pSrc
,
nulLí
*(
wch¨_t
));

402 
pWSèck
[
nulLí
] =0 ;

404 if(
ªmaöög
 < (
nulLí
 * 
MB_CUR_MAX
)){

406 
öt32_t
 
Àn
 = (
pCSrc
-
pCSave
);

407 
pCSrc
 = 
pCSave
;

409 
	`u_growAnyBuf„rFromSètic
(
cSèck
,(**)&
pCSrc
,&
cSèckC≠
,

410 
cSèckC≠
+(
nulLí
*
MB_CUR_MAX
),
Àn
,());

412 
pCSave
 = 
pCSrc
;

413 
pCSrc
 = 
pCSave
+
Àn
;

414 
ªmaöög
 = 
cSèckC≠
-(
pCSrc
 - 
pCSave
);

417 
ªtVÆ
 = 
	`u¥v_wc°ombs
(
pCSrc
,
pWSèck
,
ªmaöög
);

419 
pCSrc
 +
ªtVÆ
;

420 
pSrc
 +
nulLí
;

421 
§cLígth
-=
nulLí
;

430 
pCSrcLimô
 = 
pCSrc
;

431 
pCSrc
 = 
pCSave
;

432 
pT¨gë
 = 
èrgë

de°
;

433 
pT¨gëLimô
 = 
de°
 + 
de°C≠acôy
;

435 
c⁄v

	`u_gëDeÁu…C⁄vîãr
(
pEº‹Code
);

437 if(
	`U_FAILURE
(*
pEº‹Code
)|| 
c⁄v
==
NULL
){

438 
˛ónup
;

443 *
pEº‹Code
 = 
U_ZERO_ERROR
;

446 
	`u˙v_toUnicode
(
c⁄v
,&
pT¨gë
,
pT¨gëLimô
,(c⁄° **)&
pCSrc
,
pCSrcLimô
,
NULL
,(
UBoﬁ
)’CSrc=ıCSrcLimô),
pEº‹Code
);

449 
cou¡
+
pT¨gë
 - 
èrgë
;

451 if(*
pEº‹Code
==
U_BUFFER_OVERFLOW_ERROR
){

452 
èrgë
 = 
uSèck
;

453 
pT¨gë
 = 
uSèck
;

454 
pT¨gëLimô
 = 
uSèck
 + 
_STACK_BUFFER_CAPACITY
;

461 if(
pDe°Lígth
){

462 *
pDe°Lígth
 =
cou¡
;

465 
	`u_ãrmö©eUCh¨s
(
de°
,
de°C≠acôy
,
cou¡
,
pEº‹Code
);

467 
˛ónup
:

469 if(
cSèck
 !
pCSave
){

470 
	`u¥v_‰ì
(
pCSave
);

473 if(
wSèck
 !
pWSèck
){

474 
	`u¥v_‰ì
(
pWSèck
);

477 
	`u_ªÀa£DeÁu…C⁄vîãr
(
c⁄v
);

479  
de°
;

480 
	}
}

483 
U_CAPI
 
UCh¨
* 
U_EXPORT2


484 
	$u_°rFromWCS
(
UCh¨
 *
de°
,

485 
öt32_t
 
de°C≠acôy
,

486 
öt32_t
 *
pDe°Lígth
,

487 c⁄° 
wch¨_t
 *
§c
,

488 
öt32_t
 
§cLígth
,

489 
UEº‹Code
 *
pEº‹Code
)

493 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)){

494  
NULL
;

497 if–(
§c
==
NULL
 && 
§cLígth
!=0) || srcLength < -1 ||

498 (
de°C≠acôy
<0Ë|| (
de°
 =
NULL
 && destCapacity > 0)

500 *
pEº‹Code
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

501  
NULL
;

504 #ifde‡
U_WCHAR_IS_UTF16


506 if(
§cLígth
 == -1){

507 
§cLígth
 = 
	`u_°æí
(
§c
);

509 if(0 < 
§cLígth
 && srcLígth <
de°C≠acôy
){

510 
	`u¥v_mem˝y
(
de°
,
§c
,
§cLígth
*
U_SIZEOF_UCHAR
);

512 if(
pDe°Lígth
){

513 *
pDe°Lígth
 = 
§cLígth
;

516 
	`u_ãrmö©eUCh¨s
(
de°
,
de°C≠acôy
,
§cLígth
,
pEº‹Code
);

518  
de°
;

520 #ñi‡
deföed
 
U_WCHAR_IS_UTF32


522  
	`u_°rFromUTF32
(
de°
, 
de°C≠acôy
, 
pDe°Lígth
,

523 (
UCh¨32
*)
§c
, 
§cLígth
, 
pEº‹Code
);

527  
	`_°rFromWCS
(
de°
,
de°C≠acôy
,
pDe°Lígth
,
§c
,
§cLígth
,
pEº‹Code
);

531 
	}
}

	@ustrcase.c

21 
	~"unicode/uty≥s.h
"

22 
	~"unicode/uloc.h
"

23 
	~"unicode/u°rög.h
"

24 
	~"unicode/uˇ£m≠.h
"

25 
	~"unicode/ubrk.h
"

26 
	~"cmem‹y.h
"

27 
	~"uˇ£.h
"

28 
	~"u°r_imp.h
"

33 
U_INLINE
 
öt32_t


34 
	$≠≥ndResu…
(
UCh¨
 *
de°
, 
öt32_t
 
de°Index
, i¡32_à
de°C≠acôy
,

35 
öt32_t
 
ªsu…
, c⁄° 
UCh¨
 *
s
) {

36 
UCh¨32
 
c
;

37 
öt32_t
 
Àngth
;

40 if(
ªsu…
<0) {

42 
c
=~
ªsu…
;

43 
Àngth
=-1;

44 } if(
ªsu…
<=
UCASE_MAX_STRING_LENGTH
) {

45 
c
=
U_SENTINEL
;

46 
Àngth
=
ªsu…
;

48 
c
=
ªsu…
;

49 
Àngth
=-1;

52 if(
de°Index
<
de°C≠acôy
) {

54 if(
Àngth
<0) {

56 
UBoﬁ
 
isEº‹
=
FALSE
;

57 
	`U16_APPEND
(
de°
, 
de°Index
, 
de°C≠acôy
, 
c
, 
isEº‹
);

58 if(
isEº‹
) {

60 
de°Index
+=
	`U16_LENGTH
(
c
);

64 if((
de°Index
+
Àngth
)<=
de°C≠acôy
) {

65 
Àngth
>0) {

66 
de°
[
de°Index
++]=*
s
++;

67 --
Àngth
;

71 
de°Index
+=
Àngth
;

76 if(
Àngth
<0) {

77 
de°Index
+=
	`U16_LENGTH
(
c
);

79 
de°Index
+=
Àngth
;

82  
de°Index
;

83 
	}
}

85 
UCh¨32
 
U_CALLCONV


86 
	$utf16_ˇ£C⁄ãxtIãøt‹
(*
c⁄ãxt
, 
öt8_t
 
dú
) {

87 
UCa£C⁄ãxt
 *
csc
=(UCa£C⁄ãxà*)
c⁄ãxt
;

88 
UCh¨32
 
c
;

90 if(
dú
<0) {

92 
csc
->
ödex
=csc->
˝Sèπ
;

93 
csc
->
dú
=dir;

94 } if(
dú
>0) {

96 
csc
->
ödex
=csc->
˝Limô
;

97 
csc
->
dú
=dir;

100 
dú
=
csc
->dir;

103 if(
dú
<0) {

104 if(
csc
->
°¨t
<csc->
ödex
) {

105 
	`U16_PREV
((c⁄° 
UCh¨
 *)
csc
->
p
, csc->
°¨t
, csc->
ödex
, 
c
);

106  
c
;

109 if(
csc
->
ödex
<csc->
limô
) {

110 
	`U16_NEXT
((c⁄° 
UCh¨
 *)
csc
->
p
, csc->
ödex
, csc->
limô
, 
c
);

111  
c
;

114  
U_SENTINEL
;

115 
	}
}

121 
öt32_t


122 
	$_ˇ£M≠
(c⁄° 
UCa£M≠
 *
csm
, 
UCa£M≠FuŒ
 *
m≠
,

123 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

124 c⁄° 
UCh¨
 *
§c
, 
UCa£C⁄ãxt
 *
csc
,

125 
öt32_t
 
§cSèπ
, i¡32_à
§cLimô
,

126 
UEº‹Code
 *
pEº‹Code
) {

127 c⁄° 
UCh¨
 *
s
;

128 
UCh¨32
 
c
, 
c2
 = 0;

129 
öt32_t
 
§cIndex
, 
de°Index
;

130 
öt32_t
 
locCache
;

132 
locCache
=
csm
->locCache;

135 
§cIndex
=
§cSèπ
;

136 
de°Index
=0;

137 
§cIndex
<
§cLimô
) {

138 
csc
->
˝Sèπ
=
§cIndex
;

139 
	`U16_NEXT
(
§c
, 
§cIndex
, 
§cLimô
, 
c
);

140 
csc
->
˝Limô
=
§cIndex
;

141 
c
=
	`m≠
(
csm
->
c•
, c, 
utf16_ˇ£C⁄ãxtIãøt‹
, 
csc
, &
s
, csm->
loˇÀ
, &
locCache
);

142 if((
de°Index
<
de°C≠acôy
Ë&& (
c
<0 ? (
c2
=~c)<=0xfff‡: 
UCASE_MAX_STRING_LENGTH
<c && (c2=c)<=0xffff)) {

144 
de°
[
de°Index
++]=(
UCh¨
)
c2
;

146 
de°Index
=
	`≠≥ndResu…
(
de°
, de°Index, 
de°C≠acôy
, 
c
, 
s
);

150 if(
de°Index
>
de°C≠acôy
) {

151 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

153  
de°Index
;

154 
	}
}

157 
	$£tTempCa£M≠LoˇÀ
(
UCa£M≠
 *
csm
, c⁄° *
loˇÀ
, 
UEº‹Code
 *
pEº‹Code
) {

170 
i
;

171 
c
;

174 if(
loˇÀ
==
NULL
) {

175 
loˇÀ
=
	`uloc_gëDeÁu…
();

177 
i
=0; i<4 && (
c
=
loˇÀ
[i])!=0 && c!='-' && c!='_'; ++i) {

178 
csm
->
loˇÀ
[
i
]=
c
;

180 if(
i
<=3) {

181 
csm
->
loˇÀ
[
i
]=0;

183 
csm
->
loˇÀ
[0]=0;

185 
	}
}

191 
U_INLINE
 

192 
	$£tTempCa£M≠
(
UCa£M≠
 *
csm
, c⁄° *
loˇÀ
, 
UEº‹Code
 *
pEº‹Code
) {

193 if(
csm
->
c•
==
NULL
) {

194 
csm
->
c•
=
	`uˇ£_gëSögÀt⁄
();

196 if(
loˇÀ
!=
NULL
 &&Üocale[0]==0) {

197 
csm
->
loˇÀ
[0]=0;

199 
	`£tTempCa£M≠LoˇÀ
(
csm
, 
loˇÀ
, 
pEº‹Code
);

201 
	}
}

203 #i‡!
UCONFIG_NO_BREAK_ITERATION


208 
öt32_t


209 
	$_toTôÀ
(
UCa£M≠
 *
csm
,

210 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

211 c⁄° 
UCh¨
 *
§c
, 
UCa£C⁄ãxt
 *
csc
,

212 
öt32_t
 
§cLígth
,

213 
UEº‹Code
 *
pEº‹Code
) {

214 c⁄° 
UCh¨
 *
s
;

215 
UCh¨32
 
c
;

216 
öt32_t
 
¥ev
, 
tôÀSèπ
, 
tôÀLimô
, 
idx
, 
de°Index
, 
Àngth
;

217 
UBoﬁ
 
isFú°Index
;

219 if(
csm
->
ôî
!=
NULL
) {

220 
	`ubrk_£tText
(
csm
->
ôî
, 
§c
, 
§cLígth
, 
pEº‹Code
);

222 
csm
->
ôî
=
	`ubrk_›í
(
UBRK_WORD
, csm->
loˇÀ
,

223 
§c
, 
§cLígth
,

224 
pEº‹Code
);

226 if(
	`U_FAILURE
(*
pEº‹Code
)) {

231 
de°Index
=0;

232 
¥ev
=0;

233 
isFú°Index
=
TRUE
;

236 
¥ev
<
§cLígth
) {

238 if(
isFú°Index
) {

239 
isFú°Index
=
FALSE
;

240 
idx
=
	`ubrk_fú°
(
csm
->
ôî
);

242 
idx
=
	`ubrk_√xt
(
csm
->
ôî
);

244 if(
idx
==
UBRK_DONE
 || idx>
§cLígth
) {

245 
idx
=
§cLígth
;

261 if(
¥ev
<
idx
) {

263 
tôÀSèπ
=
tôÀLimô
=
¥ev
;

264 
	`U16_NEXT
(
§c
, 
tôÀLimô
, 
idx
, 
c
);

265 if((
csm
->
›ti⁄s
&
U_TITLECASE_NO_BREAK_ADJUSTMENT
)==0 && 
UCASE_NONE
==
	`uˇ£_gëTy≥
(csm->
c•
, 
c
)) {

268 
tôÀSèπ
=
tôÀLimô
;

269 if(
tôÀLimô
==
idx
) {

276 
	`U16_NEXT
(
§c
, 
tôÀLimô
, 
idx
, 
c
);

277 if(
UCASE_NONE
!=
	`uˇ£_gëTy≥
(
csm
->
c•
, 
c
)) {

281 
Àngth
=
tôÀSèπ
-
¥ev
;

282 if(
Àngth
>0) {

283 if((
de°Index
+
Àngth
)<=
de°C≠acôy
) {

284 
	`u¥v_mem˝y
(
de°
+
de°Index
, 
§c
+
¥ev
, 
Àngth
*
U_SIZEOF_UCHAR
);

286 
de°Index
+=
Àngth
;

290 if(
tôÀSèπ
<
tôÀLimô
) {

292 
csc
->
˝Sèπ
=
tôÀSèπ
;

293 
csc
->
˝Limô
=
tôÀLimô
;

294 
c
=
	`uˇ£_toFuŒTôÀ
(
csm
->
c•
, c, 
utf16_ˇ£C⁄ãxtIãøt‹
, 
csc
, &
s
, csm->
loˇÀ
, &csm->
locCache
);

295 
de°Index
=
	`≠≥ndResu…
(
de°
, de°Index, 
de°C≠acôy
, 
c
, 
s
);

298 i‡–
tôÀSèπ
+1 < 
idx
 &&

299 
	`uˇ£_gëCa£LoˇÀ
(
csm
->
loˇÀ
,&csm->
locCache
Ë=
UCASE_LOC_DUTCH
 &&

300 –
§c
[
tôÀSèπ
] =(
UCh¨32
) 0x0049 || src[titleStart] == (UChar32) 0x0069 ) &&

301 –
§c
[
tôÀSèπ
+1] =(
UCh¨32
) 0x004A || src[titleStart+1] == (UChar32) 0x006A )) {

302 
c
=(
UCh¨32
) 0x004A;

303 
de°Index
=
	`≠≥ndResu…
(
de°
, de°Index, 
de°C≠acôy
, 
c
, 
s
);

304 
tôÀLimô
++;

308 if(
tôÀLimô
<
idx
) {

309 if((
csm
->
›ti⁄s
&
U_TITLECASE_NO_LOWERCASE
)==0) {

311 
de°Index
+=

312 
	`_ˇ£M≠
(

313 
csm
, 
uˇ£_toFuŒLowî
,

314 
de°
+
de°Index
, 
de°C≠acôy
-destIndex,

315 
§c
, 
csc
,

316 
tôÀLimô
, 
idx
,

317 
pEº‹Code
);

320 
Àngth
=
idx
-
tôÀLimô
;

321 if((
de°Index
+
Àngth
)<=
de°C≠acôy
) {

322 
	`u¥v_mem˝y
(
de°
+
de°Index
, 
§c
+
tôÀLimô
, 
Àngth
*
U_SIZEOF_UCHAR
);

324 
de°Index
+=
Àngth
;

330 
¥ev
=
idx
;

333 if(
de°Index
>
de°C≠acôy
) {

334 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

336  
de°Index
;

337 
	}
}

343 
U_CFUNC
 
öt32_t


344 
	$u°r_toLowî
(c⁄° 
UCa£Pr›s
 *
c•
,

345 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

346 c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

347 c⁄° *
loˇÀ
,

348 
UEº‹Code
 *
pEº‹Code
) {

349 
UCa£M≠
 
csm
={ 
NULL
 };

350 
UCa£C⁄ãxt
 
csc
={ 
NULL
 };

352 
csm
.
c•
=csp;

353 
	`£tTempCa£M≠
(&
csm
, 
loˇÀ
, 
pEº‹Code
);

354 
csc
.
p
=(*)
§c
;

355 
csc
.
limô
=
§cLígth
;

357  
	`_ˇ£M≠
(&
csm
, 
uˇ£_toFuŒLowî
,

358 
de°
, 
de°C≠acôy
,

359 
§c
, &
csc
, 0, 
§cLígth
,

360 
pEº‹Code
);

361 
	}
}

363 
U_CFUNC
 
öt32_t


364 
	$u°r_toUµî
(c⁄° 
UCa£Pr›s
 *
c•
,

365 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

366 c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

367 c⁄° *
loˇÀ
,

368 
UEº‹Code
 *
pEº‹Code
) {

369 
UCa£M≠
 
csm
={ 
NULL
 };

370 
UCa£C⁄ãxt
 
csc
={ 
NULL
 };

372 
csm
.
c•
=csp;

373 
	`£tTempCa£M≠
(&
csm
, 
loˇÀ
, 
pEº‹Code
);

374 
csc
.
p
=(*)
§c
;

375 
csc
.
limô
=
§cLígth
;

377  
	`_ˇ£M≠
(&
csm
, 
uˇ£_toFuŒUµî
,

378 
de°
, 
de°C≠acôy
,

379 
§c
, &
csc
, 0, 
§cLígth
,

380 
pEº‹Code
);

381 
	}
}

383 #i‡!
UCONFIG_NO_BREAK_ITERATION


385 
U_CFUNC
 
öt32_t


386 
	$u°r_toTôÀ
(c⁄° 
UCa£Pr›s
 *
c•
,

387 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

388 c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

389 
UBªakIãøt‹
 *
tôÀIãr
,

390 c⁄° *
loˇÀ
, 
uöt32_t
 
›ti⁄s
,

391 
UEº‹Code
 *
pEº‹Code
) {

392 
UCa£M≠
 
csm
={ 
NULL
 };

393 
UCa£C⁄ãxt
 
csc
={ 
NULL
 };

394 
öt32_t
 
Àngth
;

396 
csm
.
c•
=csp;

397 
csm
.
ôî
=
tôÀIãr
;

398 
csm
.
›ti⁄s
=options;

399 
	`£tTempCa£M≠
(&
csm
, 
loˇÀ
, 
pEº‹Code
);

400 
csc
.
p
=(*)
§c
;

401 
csc
.
limô
=
§cLígth
;

403 
Àngth
=
	`_toTôÀ
(&
csm
,

404 
de°
, 
de°C≠acôy
,

405 
§c
, &
csc
, 
§cLígth
,

406 
pEº‹Code
);

407 if(
tôÀIãr
==
NULL
 && 
csm
.
ôî
!=NULL) {

408 
	`ubrk_˛o£
(
csm
.
ôî
);

410  
Àngth
;

411 
	}
}

415 
U_CFUNC
 
öt32_t


416 
	$u°r_fﬁdCa£
(c⁄° 
UCa£Pr›s
 *
c•
,

417 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

418 c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

419 
uöt32_t
 
›ti⁄s
,

420 
UEº‹Code
 *
pEº‹Code
) {

421 
öt32_t
 
§cIndex
, 
de°Index
;

423 c⁄° 
UCh¨
 *
s
;

424 
UCh¨32
 
c
, 
c2
 = 0;

427 
§cIndex
=
de°Index
=0;

428 
§cIndex
<
§cLígth
) {

429 
	`U16_NEXT
(
§c
, 
§cIndex
, 
§cLígth
, 
c
);

430 
c
=
	`uˇ£_toFuŒFﬁdög
(
c•
, c, &
s
, 
›ti⁄s
);

431 if((
de°Index
<
de°C≠acôy
Ë&& (
c
<0 ? (
c2
=~c)<=0xfff‡: 
UCASE_MAX_STRING_LENGTH
<c && (c2=c)<=0xffff)) {

433 
de°
[
de°Index
++]=(
UCh¨
)
c2
;

435 
de°Index
=
	`≠≥ndResu…
(
de°
, de°Index, 
de°C≠acôy
, 
c
, 
s
);

439 if(
de°Index
>
de°C≠acôy
) {

440 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

442  
de°Index
;

443 
	}
}

452 
öt32_t


453 
	$ˇ£M≠
(c⁄° 
UCa£M≠
 *
csm
,

454 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

455 c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

456 
öt32_t
 
toWhichCa£
,

457 
UEº‹Code
 *
pEº‹Code
) {

458 
UCh¨
 
buf„r
[300];

459 
UCh¨
 *
ãmp
;

461 
öt32_t
 
de°Lígth
;

464 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

467 if–
de°C≠acôy
<0 ||

468 (
de°
==
NULL
 && 
de°C≠acôy
>0) ||

469 
§c
==
NULL
 ||

470 
§cLígth
<-1

472 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

477 if(
§cLígth
==-1) {

478 
§cLígth
=
	`u_°æí
(
§c
);

482 if–
de°
!=
NULL
 &&

483 ((
§c
>=
de°
 && src<(de°+
de°C≠acôy
)) ||

484 (
de°
>=
§c
 && de°<(§c+
§cLígth
)))

487 if(
de°C≠acôy
<=((
buf„r
)/
U_SIZEOF_UCHAR
)) {

489 
ãmp
=
buf„r
;

492 
ãmp
=(
UCh¨
 *)
	`u¥v_mÆloc
(
de°C≠acôy
*
U_SIZEOF_UCHAR
);

493 if(
ãmp
==
NULL
) {

494 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

499 
ãmp
=
de°
;

502 
de°Lígth
=0;

504 if(
toWhichCa£
==
FOLD_CASE
) {

505 
de°Lígth
=
	`u°r_fﬁdCa£
(
csm
->
c•
, 
ãmp
, 
de°C≠acôy
, 
§c
, 
§cLígth
,

506 
csm
->
›ti⁄s
, 
pEº‹Code
);

508 
UCa£C⁄ãxt
 
csc
={ 
NULL
 };

510 
csc
.
p
=(*)
§c
;

511 
csc
.
limô
=
§cLígth
;

513 if(
toWhichCa£
==
TO_LOWER
) {

514 
de°Lígth
=
	`_ˇ£M≠
(
csm
, 
uˇ£_toFuŒLowî
,

515 
ãmp
, 
de°C≠acôy
,

516 
§c
, &
csc
,

517 0, 
§cLígth
,

518 
pEº‹Code
);

519 } if(
toWhichCa£
==
TO_UPPER
) {

520 
de°Lígth
=
	`_ˇ£M≠
(
csm
, 
uˇ£_toFuŒUµî
,

521 
ãmp
, 
de°C≠acôy
,

522 
§c
, &
csc
,

523 0, 
§cLígth
,

524 
pEº‹Code
);

526 #i‡
UCONFIG_NO_BREAK_ITERATION


527 *
pEº‹Code
=
U_UNSUPPORTED_ERROR
;

530 
de°Lígth
=
	`_toTôÀ
((
UCa£M≠
 *)
csm
, 
ãmp
, 
de°C≠acôy
,

531 
§c
, &
csc
, 
§cLígth
,

532 
pEº‹Code
);

536 if(
ãmp
!=
de°
) {

538 if(
de°Lígth
>0) {

539 
öt32_t
 
c›yLígth

de°Lígth
<=
de°C≠acôy
 ? destLength : destCapacity;

540 if(
c›yLígth
>0) {

541 
	`u¥v_memmove
(
de°
, 
ãmp
, 
c›yLígth
*
U_SIZEOF_UCHAR
);

544 if(
ãmp
!=
buf„r
) {

545 
	`u¥v_‰ì
(
ãmp
);

549  
	`u_ãrmö©eUCh¨s
(
de°
, 
de°C≠acôy
, 
de°Lígth
, 
pEº‹Code
);

550 
	}
}

554 
U_CAPI
 
öt32_t
 
U_EXPORT2


555 
	$u_°rToLowî
(
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

556 c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

557 c⁄° *
loˇÀ
,

558 
UEº‹Code
 *
pEº‹Code
) {

559 
UCa£M≠
 
csm
={ 
NULL
 };

560 
	`£tTempCa£M≠
(&
csm
, 
loˇÀ
, 
pEº‹Code
);

561  
	`ˇ£M≠
(&
csm
,

562 
de°
, 
de°C≠acôy
,

563 
§c
, 
§cLígth
,

564 
TO_LOWER
, 
pEº‹Code
);

565 
	}
}

567 
U_CAPI
 
öt32_t
 
U_EXPORT2


568 
	$u_°rToUµî
(
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

569 c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

570 c⁄° *
loˇÀ
,

571 
UEº‹Code
 *
pEº‹Code
) {

572 
UCa£M≠
 
csm
={ 
NULL
 };

573 
	`£tTempCa£M≠
(&
csm
, 
loˇÀ
, 
pEº‹Code
);

574  
	`ˇ£M≠
(&
csm
,

575 
de°
, 
de°C≠acôy
,

576 
§c
, 
§cLígth
,

577 
TO_UPPER
, 
pEº‹Code
);

578 
	}
}

580 #i‡!
UCONFIG_NO_BREAK_ITERATION


582 
U_CAPI
 
öt32_t
 
U_EXPORT2


583 
	$u_°rToTôÀ
(
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

584 c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

585 
UBªakIãøt‹
 *
tôÀIãr
,

586 c⁄° *
loˇÀ
,

587 
UEº‹Code
 *
pEº‹Code
) {

588 
UCa£M≠
 
csm
={ 
NULL
 };

589 
öt32_t
 
Àngth
;

591 
csm
.
ôî
=
tôÀIãr
;

592 
	`£tTempCa£M≠
(&
csm
, 
loˇÀ
, 
pEº‹Code
);

593 
Àngth
=
	`ˇ£M≠
(&
csm
,

594 
de°
, 
de°C≠acôy
,

595 
§c
, 
§cLígth
,

596 
TO_TITLE
, 
pEº‹Code
);

597 if(
tôÀIãr
==
NULL
 && 
csm
.
ôî
!=NULL) {

598 
	`ubrk_˛o£
(
csm
.
ôî
);

600  
Àngth
;

601 
	}
}

603 
U_CAPI
 
öt32_t
 
U_EXPORT2


604 
	$uˇ£m≠_toTôÀ
(
UCa£M≠
 *
csm
,

605 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

606 c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

607 
UEº‹Code
 *
pEº‹Code
) {

608  
	`ˇ£M≠
(
csm
,

609 
de°
, 
de°C≠acôy
,

610 
§c
, 
§cLígth
,

611 
TO_TITLE
, 
pEº‹Code
);

612 
	}
}

616 
U_CAPI
 
öt32_t
 
U_EXPORT2


617 
	$u_°rFﬁdCa£
(
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

618 c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
§cLígth
,

619 
uöt32_t
 
›ti⁄s
,

620 
UEº‹Code
 *
pEº‹Code
) {

621 
UCa£M≠
 
csm
={ 
NULL
 };

622 
csm
.
c•
=
	`uˇ£_gëSögÀt⁄
();

623 
csm
.
›ti⁄s
=options;

624  
	`ˇ£M≠
(&
csm
,

625 
de°
, 
de°C≠acôy
,

626 
§c
, 
§cLígth
,

627 
FOLD_CASE
, 
pEº‹Code
);

628 
	}
}

642 
	sCmpEquivLevñ
 {

643 c⁄° 
UCh¨
 *
	m°¨t
, *
	ms
, *
	mlimô
;

645 
CmpEquivLevñ
 
	tCmpEquivLevñ
;

648 
U_CFUNC
 
öt32_t


649 
	$u_°rcmpFﬁd
(c⁄° 
UCh¨
 *
s1
, 
öt32_t
 
Àngth1
,

650 c⁄° 
UCh¨
 *
s2
, 
öt32_t
 
Àngth2
,

651 
uöt32_t
 
›ti⁄s
,

652 
UEº‹Code
 *
pEº‹Code
) {

653 c⁄° 
UCa£Pr›s
 *
c•
;

656 c⁄° 
UCh¨
 *
°¨t1
, *
°¨t2
, *
limô1
, *
limô2
;

659 c⁄° 
UCh¨
 *
p
;

660 
öt32_t
 
Àngth
;

663 
CmpEquivLevñ
 
°ack1
[2], 
°ack2
[2];

666 
UCh¨
 
fﬁd1
[
UCASE_MAX_STRING_LENGTH
+1], 
fﬁd2
[UCASE_MAX_STRING_LENGTH+1];

669 
öt32_t
 
Àvñ1
, 
Àvñ2
;

672 
UCh¨32
 
c1
, 
c2
, 
˝1
, 
˝2
;

680 
c•
=
	`uˇ£_gëSögÀt⁄
();

681 if(
	`U_FAILURE
(*
pEº‹Code
)) {

686 
°¨t1
=
s1
;

687 if(
Àngth1
==-1) {

688 
limô1
=
NULL
;

690 
limô1
=
s1
+
Àngth1
;

693 
°¨t2
=
s2
;

694 if(
Àngth2
==-1) {

695 
limô2
=
NULL
;

697 
limô2
=
s2
+
Àngth2
;

700 
Àvñ1
=
Àvñ2
=0;

701 
c1
=
c2
=-1;

710 if(
c1
<0) {

713 if(
s1
==
limô1
 || ((
c1
=*s1)==0 && (limô1==
NULL
 || (
›ti⁄s
&
_STRNCMP_STYLE
)))) {

714 if(
Àvñ1
==0) {

715 
c1
=-1;

719 ++
s1
;

725 --
Àvñ1
;

726 
°¨t1
=
°ack1
[
Àvñ1
].
°¨t
;

727 } 
°¨t1
==
NULL
);

728 
s1
=
°ack1
[
Àvñ1
].
s
;

729 
limô1
=
°ack1
[
Àvñ1
].
limô
;

733 if(
c2
<0) {

736 if(
s2
==
limô2
 || ((
c2
=*s2)==0 && (limô2==
NULL
 || (
›ti⁄s
&
_STRNCMP_STYLE
)))) {

737 if(
Àvñ2
==0) {

738 
c2
=-1;

742 ++
s2
;

748 --
Àvñ2
;

749 
°¨t2
=
°ack2
[
Àvñ2
].
°¨t
;

750 } 
°¨t2
==
NULL
);

751 
s2
=
°ack2
[
Àvñ2
].
s
;

752 
limô2
=
°ack2
[
Àvñ2
].
limô
;

760 if(
c1
==
c2
) {

761 if(
c1
<0) {

764 
c1
=
c2
=-1;

766 } if(
c1
<0) {

768 } if(
c2
<0) {

774 
˝1
=
c1
;

775 if(
	`U_IS_SURROGATE
(
c1
)) {

776 
UCh¨
 
c
;

778 if(
	`U_IS_SURROGATE_LEAD
(
c1
)) {

779 if(
s1
!=
limô1
 && 
	`U16_IS_TRAIL
(
c
=*s1)) {

781 
˝1
=
	`U16_GET_SUPPLEMENTARY
(
c1
, 
c
);

784 if(
°¨t1
<=(
s1
-2Ë&& 
	`U16_IS_LEAD
(
c
=*(s1-2))) {

785 
˝1
=
	`U16_GET_SUPPLEMENTARY
(
c
, 
c1
);

790 
˝2
=
c2
;

791 if(
	`U_IS_SURROGATE
(
c2
)) {

792 
UCh¨
 
c
;

794 if(
	`U_IS_SURROGATE_LEAD
(
c2
)) {

795 if(
s2
!=
limô2
 && 
	`U16_IS_TRAIL
(
c
=*s2)) {

797 
˝2
=
	`U16_GET_SUPPLEMENTARY
(
c2
, 
c
);

800 if(
°¨t2
<=(
s2
-2Ë&& 
	`U16_IS_LEAD
(
c
=*(s2-2))) {

801 
˝2
=
	`U16_GET_SUPPLEMENTARY
(
c
, 
c2
);

811 if–
Àvñ1
==0 &&

812 (
Àngth
=
	`uˇ£_toFuŒFﬁdög
(
c•
, (
UCh¨32
)
˝1
, &
p
, 
›ti⁄s
))>=0

815 if(
	`U_IS_SURROGATE
(
c1
)) {

816 if(
	`U_IS_SURROGATE_LEAD
(
c1
)) {

818 ++
s1
;

827 --
s2
;

828 
c2
=*(
s2
-1);

833 
°ack1
[0].
°¨t
=
°¨t1
;

834 
°ack1
[0].
s
=
s1
;

835 
°ack1
[0].
limô
=
limô1
;

836 ++
Àvñ1
;

839 if(
Àngth
<=
UCASE_MAX_STRING_LENGTH
) {

840 
	`u_mem˝y
(
fﬁd1
, 
p
, 
Àngth
);

842 
öt32_t
 
i
=0;

843 
	`U16_APPEND_UNSAFE
(
fﬁd1
, 
i
, 
Àngth
);

844 
Àngth
=
i
;

848 
°¨t1
=
s1
=
fﬁd1
;

849 
limô1
=
fﬁd1
+
Àngth
;

852 
c1
=-1;

856 if–
Àvñ2
==0 &&

857 (
Àngth
=
	`uˇ£_toFuŒFﬁdög
(
c•
, (
UCh¨32
)
˝2
, &
p
, 
›ti⁄s
))>=0

860 if(
	`U_IS_SURROGATE
(
c2
)) {

861 if(
	`U_IS_SURROGATE_LEAD
(
c2
)) {

863 ++
s2
;

872 --
s1
;

873 
c1
=*(
s1
-1);

878 
°ack2
[0].
°¨t
=
°¨t2
;

879 
°ack2
[0].
s
=
s2
;

880 
°ack2
[0].
limô
=
limô2
;

881 ++
Àvñ2
;

884 if(
Àngth
<=
UCASE_MAX_STRING_LENGTH
) {

885 
	`u_mem˝y
(
fﬁd2
, 
p
, 
Àngth
);

887 
öt32_t
 
i
=0;

888 
	`U16_APPEND_UNSAFE
(
fﬁd2
, 
i
, 
Àngth
);

889 
Àngth
=
i
;

893 
°¨t2
=
s2
=
fﬁd2
;

894 
limô2
=
fﬁd2
+
Àngth
;

897 
c2
=-1;

918 if(
c1
>=0xd800 && 
c2
>=0xd800 && (
›ti⁄s
&
U_COMPARE_CODE_POINT_ORDER
)) {

921 (
c1
<=0xdbf‡&& 
s1
!=
limô1
 && 
	`U16_IS_TRAIL
(*s1)) ||

922 (
	`U16_IS_TRAIL
(
c1
Ë&& 
°¨t1
!=(
s1
-1Ë&& 
	`U16_IS_LEAD
(*(s1-2)))

927 
c1
-=0x2800;

931 (
c2
<=0xdbf‡&& 
s2
!=
limô2
 && 
	`U16_IS_TRAIL
(*s2)) ||

932 (
	`U16_IS_TRAIL
(
c2
Ë&& 
°¨t2
!=(
s2
-1Ë&& 
	`U16_IS_LEAD
(*(s2-2)))

937 
c2
-=0x2800;

941  
c1
-
c2
;

943 
	}
}

947 
U_CAPI
 
öt32_t
 
U_EXPORT2


948 
	$u_°rCa£Com∑ª
(c⁄° 
UCh¨
 *
s1
, 
öt32_t
 
Àngth1
,

949 c⁄° 
UCh¨
 *
s2
, 
öt32_t
 
Àngth2
,

950 
uöt32_t
 
›ti⁄s
,

951 
UEº‹Code
 *
pEº‹Code
) {

953 if(
pEº‹Code
==0 || 
	`U_FAILURE
(*pErrorCode)) {

956 if(
s1
==
NULL
 || 
Àngth1
<-1 || 
s2
==NULL || 
Àngth2
<-1) {

957 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

960  
	`u_°rcmpFﬁd
(
s1
, 
Àngth1
, 
s2
, 
Àngth2
,

961 
›ti⁄s
|
U_COMPARE_IGNORE_CASE
,

962 
pEº‹Code
);

963 
	}
}

965 
U_CAPI
 
öt32_t
 
U_EXPORT2


966 
	$u_°rˇ£cmp
(c⁄° 
UCh¨
 *
s1
, c⁄° UCh¨ *
s2
, 
uöt32_t
 
›ti⁄s
) {

967 
UEº‹Code
 
îr‹Code
=
U_ZERO_ERROR
;

968  
	`u_°rcmpFﬁd
(
s1
, -1, 
s2
, -1,

969 
›ti⁄s
|
U_COMPARE_IGNORE_CASE
,

970 &
îr‹Code
);

971 
	}
}

973 
U_CAPI
 
öt32_t
 
U_EXPORT2


974 
	$u_memˇ£cmp
(c⁄° 
UCh¨
 *
s1
, c⁄° UCh¨ *
s2
, 
öt32_t
 
Àngth
, 
uöt32_t
 
›ti⁄s
) {

975 
UEº‹Code
 
îr‹Code
=
U_ZERO_ERROR
;

976  
	`u_°rcmpFﬁd
(
s1
, 
Àngth
, 
s2
,Üength,

977 
›ti⁄s
|
U_COMPARE_IGNORE_CASE
,

978 &
îr‹Code
);

979 
	}
}

981 
U_CAPI
 
öt32_t
 
U_EXPORT2


982 
	$u_°∫ˇ£cmp
(c⁄° 
UCh¨
 *
s1
, c⁄° UCh¨ *
s2
, 
öt32_t
 
n
, 
uöt32_t
 
›ti⁄s
) {

983 
UEº‹Code
 
îr‹Code
=
U_ZERO_ERROR
;

984  
	`u_°rcmpFﬁd
(
s1
, 
n
, 
s2
,Ç,

985 
›ti⁄s
|(
U_COMPARE_IGNORE_CASE
|
_STRNCMP_STYLE
),

986 &
îr‹Code
);

987 
	}
}

	@ustrenum.cpp

11 
	~<ty≥öfo
>

13 
	~"unicode/u°rög.h
"

14 
	~"unicode/°ªnum.h
"

15 
	~"unicode/putû.h
"

16 
	~"uíumimp.h
"

17 
	~"u°ªnum.h
"

18 
	~"c°rög.h
"

19 
	~"cmem‹y.h
"

20 
	~"uas£π.h
"

22 
U_NAMESPACE_BEGIN


25 
	gSåögEnumî©i⁄
::
	$SåögEnumî©i⁄
()

26 : 
	`ch¨s
(
ch¨sBuf„r
), 
	`ch¨sC≠acôy
((charsBuffer)) {

27 
	}
}

29 
	gSåögEnumî©i⁄
::~
	$SåögEnumî©i⁄
() {

30 i‡(
ch¨s
 !
NULL
 && ch¨†!
ch¨sBuf„r
) {

31 
	`u¥v_‰ì
(
ch¨s
);

33 
	}
}

36 
SåögEnumî©i⁄
 *

37 
	gSåögEnumî©i⁄
::
	$˛⁄e
() const {

38  
NULL
;

39 
	}
}

42 
	gSåögEnumî©i⁄
::
	$√xt
(
öt32_t
 *
ªsu…Lígth
, 
UEº‹Code
 &
°©us
) {

43 c⁄° 
UnicodeSåög
 *
s
=
	`¢ext
(
°©us
);

44 if(
s
!=
NULL
) {

45 
uni°r
=*
s
;

46 
	`ísuªCh¨sC≠acôy
(
uni°r
.
	`Àngth
()+1, 
°©us
);

47 if(
	`U_SUCCESS
(
°©us
)) {

48 if(
ªsu…Lígth
!=
NULL
) {

49 *
ªsu…Lígth
=
uni°r
.
	`Àngth
();

51 
uni°r
.
	`exåa˘
(0, 
INT32_MAX
, 
ch¨s
, 
ch¨sC≠acôy
, 
US_INV
);

52  
ch¨s
;

56  
NULL
;

57 
	}
}

59 c⁄° 
UCh¨
 *

60 
	gSåögEnumî©i⁄
::
	$u√xt
(
öt32_t
 *
ªsu…Lígth
, 
UEº‹Code
 &
°©us
) {

61 c⁄° 
UnicodeSåög
 *
s
=
	`¢ext
(
°©us
);

62 if(
s
!=
NULL
) {

63 
uni°r
=*
s
;

64 if(
	`U_SUCCESS
(
°©us
)) {

65 if(
ªsu…Lígth
!=
NULL
) {

66 *
ªsu…Lígth
=
uni°r
.
	`Àngth
();

68  
uni°r
.
	`gëTîmö©edBuf„r
();

72  
NULL
;

73 
	}
}

76 
	gSåögEnumî©i⁄
::
	$ísuªCh¨sC≠acôy
(
öt32_t
 
ˇ∑côy
, 
UEº‹Code
 &
°©us
) {

77 if(
	`U_SUCCESS
(
°©us
Ë&& 
ˇ∑côy
>
ch¨sC≠acôy
) {

78 if(
ˇ∑côy
<(
ch¨sC≠acôy
+charsCapacity/2)) {

80 
ˇ∑côy
=
ch¨sC≠acôy
+charsCapacity/2;

82 if(
ch¨s
!=
ch¨sBuf„r
) {

83 
	`u¥v_‰ì
(
ch¨s
);

85 
ch¨s
=(*)
	`u¥v_mÆloc
(
ˇ∑côy
);

86 if(
ch¨s
==
NULL
) {

87 
ch¨s
=
ch¨sBuf„r
;

88 
ch¨sC≠acôy
=(
ch¨sBuf„r
);

89 
°©us
=
U_MEMORY_ALLOCATION_ERROR
;

91 
ch¨sC≠acôy
=
ˇ∑côy
;

94 
	}
}

96 
UnicodeSåög
 *

97 
	gSåögEnumî©i⁄
::
	$£tCh¨s
(c⁄° *
s
, 
öt32_t
 
Àngth
, 
UEº‹Code
 &
°©us
) {

98 if(
	`U_SUCCESS
(
°©us
Ë&& 
s
!=
NULL
) {

99 if(
Àngth
<0) {

100 
Àngth
=(
öt32_t
)
	`u¥v_°æí
(
s
);

103 
UCh¨
 *
buf„r
=
uni°r
.
	`gëBuf„r
(
Àngth
+1);

104 if(
buf„r
!=
NULL
) {

105 
	`u_ch¨sToUCh¨s
(
s
, 
buf„r
, 
Àngth
);

106 
buf„r
[
Àngth
]=0;

107 
uni°r
.
	`ªÀa£Buf„r
(
Àngth
);

108  &
uni°r
;

110 
°©us
=
U_MEMORY_ALLOCATION_ERROR
;

114  
NULL
;

115 
	}
}

116 
UBoﬁ


117 
	gSåögEnumî©i⁄
::
›î©‹
==(c⁄° 
SåögEnumî©i⁄
& 
th©
)const {

118  
ty≥id
(*
this
Ë=ty≥id(
th©
);

122 
UBoﬁ


123 
	gSåögEnumî©i⁄
::
›î©‹
!=(c⁄° 
SåögEnumî©i⁄
& 
th©
)const {

124  !
›î©‹
==(
th©
);

129 
	gUSåögEnumî©i⁄
::
	$USåögEnumî©i⁄
(
UEnumî©i⁄
* 
_uíum
) :

130 
	$uíum
(
_uíum
) {

131 
	`U_ASSERT
(
_uíum
 != 0);

132 
	}
}

134 
	gUSåögEnumî©i⁄
::~
	$USåögEnumî©i⁄
() {

135 
	`uíum_˛o£
(
uíum
);

136 
	}
}

138 
öt32_t
 
	gUSåögEnumî©i⁄
::
	$cou¡
(
UEº‹Code
& 
°©us
) const {

139  
	`uíum_cou¡
(
uíum
, &
°©us
);

140 
	}
}

142 c⁄° 
UnicodeSåög
* 
	gUSåögEnumî©i⁄
::
	$¢ext
(
UEº‹Code
& 
°©us
) {

143 
öt32_t
 
Àngth
;

144 c⁄° 
UCh¨
* 
°r
 = 
	`uíum_u√xt
(
uíum
, &
Àngth
, &
°©us
);

145 i‡(
°r
 =0 || 
	`U_FAILURE
(
°©us
)) {

148  &
uni°r
.
	`£tTo
(
°r
, 
Àngth
);

149 
	}
}

151 
	gUSåögEnumî©i⁄
::
	$ª£t
(
UEº‹Code
& 
°©us
) {

152 
	`uíum_ª£t
(
uíum
, &
°©us
);

153 
	}
}

155 
	$UOBJECT_DEFINE_RTTI_IMPLEMENTATION
(
USåögEnumî©i⁄
)

156 
U_NAMESPACE_END


160 
	#THIS
(
í
Ë((
U_NAMESPACE_QUALIFIER
 
SåögEnumî©i⁄
*)”n->
c⁄ãxt
))

	)

162 
U_CDECL_BEGIN


167 
U_CALLCONV


168 
	$u°ªnum_˛o£
(
UEnumî©i⁄
* 
í
) {

169 
dñëe
 
	`THIS
(
í
);

170 
	`u¥v_‰ì
(
í
);

171 
	}
}

176 
öt32_t
 
U_CALLCONV


177 
	$u°ªnum_cou¡
(
UEnumî©i⁄
* 
í
,

178 
UEº‹Code
* 
ec
)

180  
	`THIS
(
í
)->
	`cou¡
(*
ec
);

181 
	}
}

186 c⁄° 
UCh¨
* 
U_CALLCONV


187 
	$u°ªnum_u√xt
(
UEnumî©i⁄
* 
í
,

188 
öt32_t
* 
ªsu…Lígth
,

189 
UEº‹Code
* 
ec
)

191  
	`THIS
(
í
)->
	`u√xt
(
ªsu…Lígth
, *
ec
);

192 
	}
}

197 c⁄° * 
U_CALLCONV


198 
	$u°ªnum_√xt
(
UEnumî©i⁄
* 
í
,

199 
öt32_t
* 
ªsu…Lígth
,

200 
UEº‹Code
* 
ec
)

202  
	`THIS
(
í
)->
	`√xt
(
ªsu…Lígth
, *
ec
);

203 
	}
}

208 
U_CALLCONV


209 
	$u°ªnum_ª£t
(
UEnumî©i⁄
* 
í
,

210 
UEº‹Code
* 
ec
)

212 
	`THIS
(
í
)->
	`ª£t
(*
ec
);

213 
	}
}

219 c⁄° 
UEnumî©i⁄
 
	gUSTRENUM_VT
 = {

220 
NULL
,

221 
NULL
,

222 
u°ªnum_˛o£
,

223 
u°ªnum_cou¡
,

224 
u°ªnum_u√xt
,

225 
u°ªnum_√xt
,

226 
u°ªnum_ª£t


229 
U_CDECL_END


236 
U_CAPI
 
UEnumî©i⁄
* 
U_EXPORT2


237 
	$uíum_›íFromSåögEnumî©i⁄
(
U_NAMESPACE_QUALIFIER
 
SåögEnumî©i⁄
* 
ad›ãd
, 
UEº‹Code
* 
ec
) {

238 
UEnumî©i⁄
* 
ªsu…
 = 
NULL
;

239 i‡(
	`U_SUCCESS
(*
ec
Ë&& 
ad›ãd
 !
NULL
) {

240 
ªsu…
 = (
UEnumî©i⁄
*Ë
	`u¥v_mÆloc
((UEnumeration));

241 i‡(
ªsu…
 =
NULL
) {

242 *
ec
 = 
U_MEMORY_ALLOCATION_ERROR
;

244 
	`u¥v_mem˝y
(
ªsu…
, &
USTRENUM_VT
, (USTRENUM_VT));

245 
ªsu…
->
c⁄ãxt
 = 
ad›ãd
;

248 i‡(
ªsu…
 =
NULL
) {

249 
dñëe
 
ad›ãd
;

251  
ªsu…
;

252 
	}
}

256 
U_CDECL_BEGIN


258 
	sUCh¨SåögEnumî©i⁄
 {

259 
UEnumî©i⁄
 
	muíum
;

260 
öt32_t
 
	mödex
, 
	mcou¡
;

261 } 
	tUCh¨SåögEnumî©i⁄
;

263 
U_CALLCONV


264 
	$uch¨°ªnum_˛o£
(
UEnumî©i⁄
* 
í
) {

265 
	`u¥v_‰ì
(
í
);

266 
	}
}

268 
öt32_t
 
U_CALLCONV


269 
	$uch¨°ªnum_cou¡
(
UEnumî©i⁄
* 
í
,

270 
UEº‹Code
* ) {

271  ((
UCh¨SåögEnumî©i⁄
*)
í
)->
cou¡
;

272 
	}
}

274 c⁄° * 
U_CALLCONV


275 
	$uch¨°ªnum_√xt
(
UEnumî©i⁄
* 
í
,

276 
öt32_t
* 
ªsu…Lígth
,

277 
UEº‹Code
* ) {

278 
UCh¨SåögEnumî©i⁄
 *
e
 = (UCh¨SåögEnumî©i⁄*Ë
í
;

279 i‡(
e
->
ödex
 >e->
cou¡
) {

280  
NULL
;

282 c⁄° * 
ªsu…
 = ((c⁄° **)
e
->
uíum
.
c⁄ãxt
)[e->
ödex
++];

283 i‡(
ªsu…Lígth
) {

284 *
ªsu…Lígth
 = (
öt32_t
)
	`u¥v_°æí
(
ªsu…
);

286  
ªsu…
;

287 
	}
}

289 
U_CALLCONV


290 
	$uch¨°ªnum_ª£t
(
UEnumî©i⁄
* 
í
,

291 
UEº‹Code
* ) {

292 ((
UCh¨SåögEnumî©i⁄
*)
í
)->
ödex
 = 0;

293 
	}
}

295 c⁄° 
UEnumî©i⁄
 
	gUCHARSTRENUM_VT
 = {

296 
NULL
,

297 
NULL
,

298 
uch¨°ªnum_˛o£
,

299 
uch¨°ªnum_cou¡
,

300 
uíum_u√xtDeÁu…
,

301 
uch¨°ªnum_√xt
,

302 
uch¨°ªnum_ª£t


305 
U_CDECL_END


307 
U_CAPI
 
UEnumî©i⁄
* 
U_EXPORT2


308 
	$uíum_›íCh¨SåögsEnumî©i⁄
(c⁄° * c⁄°* 
°rögs
, 
öt32_t
 
cou¡
,

309 
UEº‹Code
* 
ec
) {

310 
UCh¨SåögEnumî©i⁄
* 
ªsu…
 = 
NULL
;

311 i‡(
	`U_SUCCESS
(*
ec
Ë&& 
cou¡
 >0 && (cou¡ =0 || 
°rögs
 != 0)) {

312 
ªsu…
 = (
UCh¨SåögEnumî©i⁄
*Ë
	`u¥v_mÆloc
((UCharStringEnumeration));

313 i‡(
ªsu…
 =
NULL
) {

314 *
ec
 = 
U_MEMORY_ALLOCATION_ERROR
;

316 
	`U_ASSERT
((*)
ªsu…
==(*)(&ªsu…->
uíum
));

317 
	`u¥v_mem˝y
(
ªsu…
, &
UCHARSTRENUM_VT
, (UCHARSTRENUM_VT));

318 
ªsu…
->
uíum
.
c⁄ãxt
 = (*)
°rögs
;

319 
ªsu…
->
ödex
 = 0;

320 
ªsu…
->
cou¡
 = count;

323  (
UEnumî©i⁄
*Ë
ªsu…
;

324 
	}
}

	@ustrenum.h

11 #i‚de‡
_USTRENUM_H_


12 
	#_USTRENUM_H_


	)

14 
	~"unicode/uíum.h
"

15 
	~"unicode/°ªnum.h
"

22 
U_CAPI
 
UEnumî©i⁄
* 
U_EXPORT2


23 
uíum_›íCh¨SåögsEnumî©i⁄
(c⁄° * c⁄°* 
°rögs
, 
öt32_t
 
cou¡
,

24 
UEº‹Code
* 
ec
);

27 
U_NAMESPACE_BEGIN


33 ˛as†
	cU_COMMON_API
 
	mUSåögEnumî©i⁄
 : 
public
 
SåögEnumî©i⁄
 {

35 
public
:

44 
USåögEnumî©i⁄
(
UEnumî©i⁄
* 
uíum
);

50 
	mvútuÆ
 ~
USåögEnumî©i⁄
();

57 
vútuÆ
 
öt32_t
 
	$cou¡
(
UEº‹Code
& 
°©us
) const;

65 
vútuÆ
 c⁄° 
UnicodeSåög
* 
	`¢ext
(
UEº‹Code
& 
°©us
);

71 
vútuÆ
 
	`ª£t
(
UEº‹Code
& 
°©us
);

76 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const;

81 
UCœssID
 
U_EXPORT2
 
	`gëSèticCœssID
();

83 
¥iv©e
:

84 
UEnumî©i⁄
 *
uíum
;

87 
U_NAMESPACE_END


	@ustrfmt.c

8 
	~"c°rög.h
"

9 
	~"u°rfmt.h
"

27 
U_CAPI
 
öt32_t
 
U_EXPORT2


28 
	$u¥v_ôou
 (
UCh¨
 * 
buf„r
, 
öt32_t
 
ˇ∑côy
,

29 
uöt32_t
 
i
, uöt32_à
ødix
, 
öt32_t
 
möwidth
)

31 
öt32_t
 
Àngth
 = 0;

32 
digô
;

33 
öt32_t
 
j
;

34 
UCh¨
 
ãmp
;

37 
digô
 = ()(
i
 % 
ødix
);

38 
buf„r
[
Àngth
++]=(
UCh¨
)(
digô
<=9?(0x0030+digit):(0x0030+digit+7));

39 
i
=i/
ødix
;

40 } 
i
 && 
Àngth
<
ˇ∑côy
);

42 
Àngth
 < 
möwidth
){

43 
buf„r
[
Àngth
++] = (
UCh¨
) 0x0030;

46 if(
Àngth
<
ˇ∑côy
){

47 
buf„r
[
Àngth
] = (
UCh¨
) 0x0000;

51 
j
 = 0; j < (
Àngth
 / 2); j++){

52 
ãmp
 = 
buf„r
[(
Àngth
-1Ë- 
j
];

53 
buf„r
[(
Àngth
-1Ë- 
j
] = buffer[j];

54 
buf„r
[
j
] = 
ãmp
;

56  
Àngth
;

57 
	}
}

	@ustrfmt.h

8 #i‚de‡
USTRFMT_H


9 
	#USTRFMT_H


	)

11 
	~"unicode/uty≥s.h
"

13 
U_CAPI
 
öt32_t
 
U_EXPORT2


14 
u¥v_ôou
 (
UCh¨
 * 
buf„r
, 
öt32_t
 
ˇ∑côy
, 
uöt32_t
 
i
, uöt32_à
ødix
, i¡32_à
möwidth
);

	@ustring.c

18 
	~"unicode/uty≥s.h
"

19 
	~"unicode/putû.h
"

20 
	~"unicode/u°rög.h
"

21 
	~"c°rög.h
"

22 
	~"cwch¨.h
"

23 
	~"cmem‹y.h
"

24 
	~"u°r_imp.h
"

29 
	#U_BMP_MAX
 0xffff

	)

38 
U_INLINE
 
UBoﬁ


39 
	$isM©chAtCPBound¨y
(c⁄° 
UCh¨
 *
°¨t
, c⁄° UCh¨ *
m©ch
, c⁄° UCh¨ *
m©chLimô
, c⁄° UCh¨ *
limô
) {

40 if(
	`U16_IS_TRAIL
(*
m©ch
Ë&& 
°¨t
!=m©ch && 
	`U16_IS_LEAD
(*(match-1))) {

42  
FALSE
;

44 if(
	`U16_IS_LEAD
(*(
m©chLimô
-1)Ë&& 
m©ch
!=
limô
 && 
	`U16_IS_TRAIL
(*matchLimit)) {

46  
FALSE
;

48  
TRUE
;

49 
	}
}

51 
U_CAPI
 
UCh¨
 * 
U_EXPORT2


52 
	$u_°rFödFú°
(c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
,

53 c⁄° 
UCh¨
 *
sub
, 
öt32_t
 
subLígth
) {

54 c⁄° 
UCh¨
 *
°¨t
, *
p
, *
q
, *
subLimô
;

55 
UCh¨
 
c
, 
cs
, 
cq
;

57 if(
sub
==
NULL
 || 
subLígth
<-1) {

58  (
UCh¨
 *)
s
;

60 if(
s
==
NULL
 || 
Àngth
<-1) {

61  
NULL
;

64 
°¨t
=
s
;

66 if(
Àngth
<0 && 
subLígth
<0) {

68 if((
cs
=*
sub
++)==0) {

69  (
UCh¨
 *)
s
;

71 if(*
sub
==0 && !
	`U16_IS_SURROGATE
(
cs
)) {

73  
	`u_°rchr
(
s
, 
cs
);

76 (
c
=*
s
++)!=0) {

77 if(
c
==
cs
) {

79 
p
=
s
;

80 
q
=
sub
;

82 if((
cq
=*
q
)==0) {

83 if(
	`isM©chAtCPBound¨y
(
°¨t
, 
s
-1, 
p
, 
NULL
)) {

84  (
UCh¨
 *)(
s
-1);

89 if((
c
=*
p
)==0) {

90  
NULL
;

92 if(
c
!=
cq
) {

95 ++
p
;

96 ++
q
;

102  
NULL
;

105 if(
subLígth
<0) {

106 
subLígth
=
	`u_°æí
(
sub
);

108 if(
subLígth
==0) {

109  (
UCh¨
 *)
s
;

113 
cs
=*
sub
++;

114 --
subLígth
;

115 
subLimô
=
sub
+
subLígth
;

117 if(
subLígth
==0 && !
	`U16_IS_SURROGATE
(
cs
)) {

119  
Àngth
<0 ? 
	`u_°rchr
(
s
, 
cs
Ë: 
	`u_memchr
(s, cs,Üength);

122 if(
Àngth
<0) {

124 (
c
=*
s
++)!=0) {

125 if(
c
==
cs
) {

127 
p
=
s
;

128 
q
=
sub
;

130 if(
q
==
subLimô
) {

131 if(
	`isM©chAtCPBound¨y
(
°¨t
, 
s
-1, 
p
, 
NULL
)) {

132  (
UCh¨
 *)(
s
-1);

137 if((
c
=*
p
)==0) {

138  
NULL
;

140 if(
c
!=*
q
) {

143 ++
p
;

144 ++
q
;

149 c⁄° 
UCh¨
 *
limô
, *
¥eLimô
;

152 if(
Àngth
<=
subLígth
) {

153  
NULL
;

156 
limô
=
s
+
Àngth
;

159 
¥eLimô
=
limô
-
subLígth
;

161 
s
!=
¥eLimô
) {

162 
c
=*
s
++;

163 if(
c
==
cs
) {

165 
p
=
s
;

166 
q
=
sub
;

168 if(
q
==
subLimô
) {

169 if(
	`isM©chAtCPBound¨y
(
°¨t
, 
s
-1, 
p
, 
limô
)) {

170  (
UCh¨
 *)(
s
-1);

175 if(*
p
!=*
q
) {

178 ++
p
;

179 ++
q
;

186  
NULL
;

187 
	}
}

189 
U_CAPI
 
UCh¨
 * 
U_EXPORT2


190 
	$u_°r°r
(c⁄° 
UCh¨
 *
s
, c⁄° UCh¨ *
sub°rög
) {

191  
	`u_°rFödFú°
(
s
, -1, 
sub°rög
, -1);

192 
	}
}

194 
U_CAPI
 
UCh¨
 * 
U_EXPORT2


195 
	$u_°rchr
(c⁄° 
UCh¨
 *
s
, UCh¨ 
c
) {

196 if(
	`U16_IS_SURROGATE
(
c
)) {

198  
	`u_°rFödFú°
(
s
, -1, &
c
, 1);

200 
UCh¨
 
cs
;

204 if((
cs
=*
s
)==
c
) {

205  (
UCh¨
 *)
s
;

207 if(
cs
==0) {

208  
NULL
;

210 ++
s
;

213 
	}
}

215 
U_CAPI
 
UCh¨
 * 
U_EXPORT2


216 
	$u_°rchr32
(c⁄° 
UCh¨
 *
s
, 
UCh¨32
 
c
) {

217 if((
uöt32_t
)
c
<=
U_BMP_MAX
) {

219  
	`u_°rchr
(
s
, (
UCh¨
)
c
);

220 } if((
uöt32_t
)
c
<=
UCHAR_MAX_VALUE
) {

222 
UCh¨
 
cs
, 
Àad
=
	`U16_LEAD
(
c
), 
åaû
=
	`U16_TRAIL
(c);

224 (
cs
=*
s
++)!=0) {

225 if(
cs
==
Àad
 && *
s
==
åaû
) {

226  (
UCh¨
 *)(
s
-1);

229  
NULL
;

232  
NULL
;

234 
	}
}

236 
U_CAPI
 
UCh¨
 * 
U_EXPORT2


237 
	$u_memchr
(c⁄° 
UCh¨
 *
s
, UCh¨ 
c
, 
öt32_t
 
cou¡
) {

238 if(
cou¡
<=0) {

239  
NULL
;

240 } if(
	`U16_IS_SURROGATE
(
c
)) {

242  
	`u_°rFödFú°
(
s
, 
cou¡
, &
c
, 1);

245 c⁄° 
UCh¨
 *
limô
=
s
+
cou¡
;

247 if(*
s
==
c
) {

248  (
UCh¨
 *)
s
;

250 } ++
s
!=
limô
);

251  
NULL
;

253 
	}
}

255 
U_CAPI
 
UCh¨
 * 
U_EXPORT2


256 
	$u_memchr32
(c⁄° 
UCh¨
 *
s
, 
UCh¨32
 
c
, 
öt32_t
 
cou¡
) {

257 if((
uöt32_t
)
c
<=
U_BMP_MAX
) {

259  
	`u_memchr
(
s
, (
UCh¨
)
c
, 
cou¡
);

260 } if(
cou¡
<2) {

262  
NULL
;

263 } if((
uöt32_t
)
c
<=
UCHAR_MAX_VALUE
) {

265 c⁄° 
UCh¨
 *
limô
=
s
+
cou¡
-1;

266 
UCh¨
 
Àad
=
	`U16_LEAD
(
c
), 
åaû
=
	`U16_TRAIL
(c);

269 if(*
s
==
Àad
 && *(s+1)==
åaû
) {

270  (
UCh¨
 *)
s
;

272 } ++
s
!=
limô
);

273  
NULL
;

276  
NULL
;

278 
	}
}

282 
U_CAPI
 
UCh¨
 * 
U_EXPORT2


283 
	$u_°rFödLa°
(c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
,

284 c⁄° 
UCh¨
 *
sub
, 
öt32_t
 
subLígth
) {

285 c⁄° 
UCh¨
 *
°¨t
, *
limô
, *
p
, *
q
, *
subLimô
;

286 
UCh¨
 
c
, 
cs
;

288 if(
sub
==
NULL
 || 
subLígth
<-1) {

289  (
UCh¨
 *)
s
;

291 if(
s
==
NULL
 || 
Àngth
<-1) {

292  
NULL
;

305 if(
subLígth
<0) {

306 
subLígth
=
	`u_°æí
(
sub
);

308 if(
subLígth
==0) {

309  (
UCh¨
 *)
s
;

313 
subLimô
=
sub
+
subLígth
;

314 
cs
=*(--
subLimô
);

315 --
subLígth
;

317 if(
subLígth
==0 && !
	`U16_IS_SURROGATE
(
cs
)) {

319  
Àngth
<0 ? 
	`u_°ºchr
(
s
, 
cs
Ë: 
	`u_memrchr
(s, cs,Üength);

322 if(
Àngth
<0) {

323 
Àngth
=
	`u_°æí
(
s
);

327 if(
Àngth
<=
subLígth
) {

328  
NULL
;

331 
°¨t
=
s
;

332 
limô
=
s
+
Àngth
;

335 
s
+=
subLígth
;

337 
s
!=
limô
) {

338 
c
=*(--
limô
);

339 if(
c
==
cs
) {

341 
p
=
limô
;

342 
q
=
subLimô
;

344 if(
q
==
sub
) {

345 if(
	`isM©chAtCPBound¨y
(
°¨t
, 
p
, 
limô
+1, sèπ+
Àngth
)) {

346  (
UCh¨
 *)
p
;

351 if(*(--
p
)!=*(--
q
)) {

359  
NULL
;

360 
	}
}

362 
U_CAPI
 
UCh¨
 * 
U_EXPORT2


363 
	$u_°º°r
(c⁄° 
UCh¨
 *
s
, c⁄° UCh¨ *
sub°rög
) {

364  
	`u_°rFödLa°
(
s
, -1, 
sub°rög
, -1);

365 
	}
}

367 
U_CAPI
 
UCh¨
 * 
U_EXPORT2


368 
	$u_°ºchr
(c⁄° 
UCh¨
 *
s
, UCh¨ 
c
) {

369 if(
	`U16_IS_SURROGATE
(
c
)) {

371  
	`u_°rFödLa°
(
s
, -1, &
c
, 1);

373 c⁄° 
UCh¨
 *
ªsu…
=
NULL
;

374 
UCh¨
 
cs
;

378 if((
cs
=*
s
)==
c
) {

379 
ªsu…
=
s
;

381 if(
cs
==0) {

382  (
UCh¨
 *)
ªsu…
;

384 ++
s
;

387 
	}
}

389 
U_CAPI
 
UCh¨
 * 
U_EXPORT2


390 
	$u_°ºchr32
(c⁄° 
UCh¨
 *
s
, 
UCh¨32
 
c
) {

391 if((
uöt32_t
)
c
<=
U_BMP_MAX
) {

393  
	`u_°ºchr
(
s
, (
UCh¨
)
c
);

394 } if((
uöt32_t
)
c
<=
UCHAR_MAX_VALUE
) {

396 c⁄° 
UCh¨
 *
ªsu…
=
NULL
;

397 
UCh¨
 
cs
, 
Àad
=
	`U16_LEAD
(
c
), 
åaû
=
	`U16_TRAIL
(c);

399 (
cs
=*
s
++)!=0) {

400 if(
cs
==
Àad
 && *
s
==
åaû
) {

401 
ªsu…
=
s
-1;

404  (
UCh¨
 *)
ªsu…
;

407  
NULL
;

409 
	}
}

411 
U_CAPI
 
UCh¨
 * 
U_EXPORT2


412 
	$u_memrchr
(c⁄° 
UCh¨
 *
s
, UCh¨ 
c
, 
öt32_t
 
cou¡
) {

413 if(
cou¡
<=0) {

414  
NULL
;

415 } if(
	`U16_IS_SURROGATE
(
c
)) {

417  
	`u_°rFödLa°
(
s
, 
cou¡
, &
c
, 1);

420 c⁄° 
UCh¨
 *
limô
=
s
+
cou¡
;

422 if(*(--
limô
)==
c
) {

423  (
UCh¨
 *)
limô
;

425 } 
s
!=
limô
);

426  
NULL
;

428 
	}
}

430 
U_CAPI
 
UCh¨
 * 
U_EXPORT2


431 
	$u_memrchr32
(c⁄° 
UCh¨
 *
s
, 
UCh¨32
 
c
, 
öt32_t
 
cou¡
) {

432 if((
uöt32_t
)
c
<=
U_BMP_MAX
) {

434  
	`u_memrchr
(
s
, (
UCh¨
)
c
, 
cou¡
);

435 } if(
cou¡
<2) {

437  
NULL
;

438 } if((
uöt32_t
)
c
<=
UCHAR_MAX_VALUE
) {

440 c⁄° 
UCh¨
 *
limô
=
s
+
cou¡
-1;

441 
UCh¨
 
Àad
=
	`U16_LEAD
(
c
), 
åaû
=
	`U16_TRAIL
(c);

444 if(*
limô
==
åaû
 && *÷imô-1)==
Àad
) {

445  (
UCh¨
 *)(
limô
-1);

447 } 
s
!=--
limô
);

448  
NULL
;

451  
NULL
;

453 
	}
}

463 
öt32_t


464 
	$_m©chFromSë
(c⁄° 
UCh¨
 *
°rög
, c⁄° UCh¨ *
m©chSë
, 
UBoﬁ
 
pﬁ¨ôy
) {

465 
öt32_t
 
m©chLí
, 
m©chBMPLí
, 
°rIå
, 
m©chIå
;

466 
UCh¨32
 
°rögCh
, 
m©chCh
;

467 
UCh¨
 
c
, 
c2
;

470 
m©chBMPLí
 = 0;

471 (
c
 = 
m©chSë
[
m©chBMPLí
]Ë!0 && 
	`U16_IS_SINGLE
(c)) {

472 ++
m©chBMPLí
;

476 
m©chLí
 = 
m©chBMPLí
;

477 
m©chSë
[
m©chLí
] != 0) {

478 ++
m©chLí
;

481 
°rIå
 = 0; (
c
 = 
°rög
[strItr]) != 0;) {

482 ++
°rIå
;

483 if(
	`U16_IS_SINGLE
(
c
)) {

484 if(
pﬁ¨ôy
) {

485 
m©chIå
 = 0; m©chIå < 
m©chLí
; ++matchItr) {

486 if(
c
 =
m©chSë
[
m©chIå
]) {

487  
°rIå
 - 1;

491 
m©chIå
 = 0; m©chIå < 
m©chLí
; ++matchItr) {

492 if(
c
 =
m©chSë
[
m©chIå
]) {

493 
ídlo›
;

496  
°rIå
 - 1;

503 if(
	`U16_IS_SURROGATE_LEAD
(
c
Ë&& 
	`U16_IS_TRAIL
(
c2
 = 
°rög
[
°rIå
])) {

504 ++
°rIå
;

505 
°rögCh
 = 
	`U16_GET_SUPPLEMENTARY
(
c
, 
c2
);

507 
°rögCh
 = 
c
;

510 if(
pﬁ¨ôy
) {

511 
m©chIå
 = 
m©chBMPLí
; m©chIå < 
m©chLí
;) {

512 
	`U16_NEXT
(
m©chSë
, 
m©chIå
, 
m©chLí
, 
m©chCh
);

513 if(
°rögCh
 =
m©chCh
) {

514  
°rIå
 - 
	`U16_LENGTH
(
°rögCh
);

518 
m©chIå
 = 
m©chBMPLí
; m©chIå < 
m©chLí
;) {

519 
	`U16_NEXT
(
m©chSë
, 
m©chIå
, 
m©chLí
, 
m©chCh
);

520 if(
°rögCh
 =
m©chCh
) {

521 
ídlo›
;

524  
°rIå
 - 
	`U16_LENGTH
(
°rögCh
);

527 
ídlo›
:

532  -
°rIå
-1;

533 
	}
}

536 
U_CAPI
 
UCh¨
 * 
U_EXPORT2


537 
	$u_°Ωbrk
(c⁄° 
UCh¨
 *
°rög
, c⁄° UCh¨ *
m©chSë
)

539 
öt32_t
 
idx
 = 
	`_m©chFromSë
(
°rög
, 
m©chSë
, 
TRUE
);

540 if(
idx
 >= 0) {

541  (
UCh¨
 *)
°rög
 + 
idx
;

543  
NULL
;

545 
	}
}

548 
U_CAPI
 
öt32_t
 
U_EXPORT2


549 
	$u_°rc•n
(c⁄° 
UCh¨
 *
°rög
, c⁄° UCh¨ *
m©chSë
)

551 
öt32_t
 
idx
 = 
	`_m©chFromSë
(
°rög
, 
m©chSë
, 
TRUE
);

552 if(
idx
 >= 0) {

553  
idx
;

555  -
idx
 - 1;

557 
	}
}

560 
U_CAPI
 
öt32_t
 
U_EXPORT2


561 
	$u_°r•n
(c⁄° 
UCh¨
 *
°rög
, c⁄° UCh¨ *
m©chSë
)

563 
öt32_t
 
idx
 = 
	`_m©chFromSë
(
°rög
, 
m©chSë
, 
FALSE
);

564 if(
idx
 >= 0) {

565  
idx
;

567  -
idx
 - 1;

569 
	}
}

573 
U_CAPI
 
UCh¨
* 
U_EXPORT2


574 
	$u_°πok_r
(
UCh¨
 *
§c
,

575 c⁄° 
UCh¨
 *
dñim
,

576 
UCh¨
 **
ßveSèã
)

578 
UCh¨
 *
tokSour˚
;

579 
UCh¨
 *
√xtTokí
;

580 
uöt32_t
 
n⁄DñimIdx
;

583 i‡(
§c
 !
NULL
) {

584 
tokSour˚
 = 
§c
;

585 *
ßveSèã
 = 
§c
;

587 i‡(*
ßveSèã
) {

588 
tokSour˚
 = *
ßveSèã
;

593  
NULL
;

597 
n⁄DñimIdx
 = 
	`u_°r•n
(
tokSour˚
, 
dñim
);

598 
tokSour˚
 = &tokSour˚[
n⁄DñimIdx
];

600 i‡(*
tokSour˚
) {

601 
√xtTokí
 = 
	`u_°Ωbrk
(
tokSour˚
, 
dñim
);

602 i‡(
√xtTokí
 !
NULL
) {

604 *(
√xtTokí
++) = 0;

605 *
ßveSèã
 = 
√xtTokí
;

606  
tokSour˚
;

608 i‡(*
ßveSèã
) {

610 *
ßveSèã
 = 
NULL
;

611  
tokSour˚
;

616 *
ßveSèã
 = 
NULL
;

618  
NULL
;

619 
	}
}

623 
U_CAPI
 
UCh¨
* 
U_EXPORT2


624 
	$u_°rˇt
(
UCh¨
 *
d°
,

625 c⁄° 
UCh¨
 *
§c
)

627 
UCh¨
 *
™ch‹
 = 
d°
;

629 *
d°
 != 0) {

630 ++
d°
;

632 (*(
d°
++Ë*(
§c
++)) != 0) {

635  
™ch‹
;

636 
	}
}

638 
U_CAPI
 
UCh¨
* 
U_EXPORT2


639 
	$u_°∫ˇt
(
UCh¨
 *
d°
,

640 c⁄° 
UCh¨
 *
§c
,

641 
öt32_t
 
n
 )

643 if(
n
 > 0) {

644 
UCh¨
 *
™ch‹
 = 
d°
;

646 *
d°
 != 0) {

647 ++
d°
;

649 (*
d°
 = *
§c
) != 0) {

650 ++
d°
;

651 if(--
n
 == 0) {

652 *
d°
 = 0;

655 ++
§c
;

658  
™ch‹
;

660  
d°
;

662 
	}
}

666 
U_CAPI
 
öt32_t
 
U_EXPORT2


667 
	$u_°rcmp
(c⁄° 
UCh¨
 *
s1
,

668 c⁄° 
UCh¨
 *
s2
)

670 
UCh¨
 
c1
, 
c2
;

673 
c1
=*
s1
++;

674 
c2
=*
s2
++;

675 i‡(
c1
 !
c2
 || c1 == 0) {

679  (
öt32_t
)
c1
 - (öt32_t)
c2
;

680 
	}
}

682 
U_CFUNC
 
öt32_t
 
U_EXPORT2


683 
	$u¥v_°rCom∑ª
(c⁄° 
UCh¨
 *
s1
, 
öt32_t
 
Àngth1
,

684 c⁄° 
UCh¨
 *
s2
, 
öt32_t
 
Àngth2
,

685 
UBoﬁ
 
°∫cmpStyÀ
, UBoﬁ 
codePoötOrdî
) {

686 c⁄° 
UCh¨
 *
°¨t1
, *
°¨t2
, *
limô1
, *
limô2
;

687 
UCh¨
 
c1
, 
c2
;

690 
°¨t1
=
s1
;

691 
°¨t2
=
s2
;

694 if(
Àngth1
<0 && 
Àngth2
<0) {

696 if(
s1
==
s2
) {

701 
c1
=*
s1
;

702 
c2
=*
s2
;

703 if(
c1
!=
c2
) {

706 if(
c1
==0) {

709 ++
s1
;

710 ++
s2
;

714 
limô1
=
limô2
=
NULL
;

715 } if(
°∫cmpStyÀ
) {

717 if(
s1
==
s2
) {

721 
limô1
=
°¨t1
+
Àngth1
;

725 if(
s1
==
limô1
) {

729 
c1
=*
s1
;

730 
c2
=*
s2
;

731 if(
c1
!=
c2
) {

734 if(
c1
==0) {

737 ++
s1
;

738 ++
s2
;

742 
limô2
=
°¨t2
+
Àngth1
;

745 
öt32_t
 
ÀngthResu…
;

747 if(
Àngth1
<0) {

748 
Àngth1
=
	`u_°æí
(
s1
);

750 if(
Àngth2
<0) {

751 
Àngth2
=
	`u_°æí
(
s2
);

755 if(
Àngth1
<
Àngth2
) {

756 
ÀngthResu…
=-1;

757 
limô1
=
°¨t1
+
Àngth1
;

758 } if(
Àngth1
==
Àngth2
) {

759 
ÀngthResu…
=0;

760 
limô1
=
°¨t1
+
Àngth1
;

762 
ÀngthResu…
=1;

763 
limô1
=
°¨t1
+
Àngth2
;

766 if(
s1
==
s2
) {

767  
ÀngthResu…
;

772 if(
s1
==
limô1
) {

773  
ÀngthResu…
;

776 
c1
=*
s1
;

777 
c2
=*
s2
;

778 if(
c1
!=
c2
) {

781 ++
s1
;

782 ++
s2
;

786 
limô1
=
°¨t1
+
Àngth1
;

787 
limô2
=
°¨t2
+
Àngth2
;

791 if(
c1
>=0xd800 && 
c2
>=0xd800 && 
codePoötOrdî
) {

794 (
c1
<=0xdbf‡&& (
s1
+1)!=
limô1
 && 
	`UTF_IS_TRAIL
(*(s1+1))) ||

795 (
	`UTF_IS_TRAIL
(
c1
Ë&& 
°¨t1
!=
s1
 && 
	`UTF_IS_LEAD
(*(s1-1)))

800 
c1
-=0x2800;

804 (
c2
<=0xdbf‡&& (
s2
+1)!=
limô2
 && 
	`UTF_IS_TRAIL
(*(s2+1))) ||

805 (
	`UTF_IS_TRAIL
(
c2
Ë&& 
°¨t2
!=
s2
 && 
	`UTF_IS_LEAD
(*(s2-1)))

810 
c2
-=0x2800;

815  (
öt32_t
)
c1
-(öt32_t)
c2
;

816 
	}
}

824 
U_CAPI
 
öt32_t
 
U_EXPORT2


825 
	$u_°rCom∑ªIãr
(
UCh¨Iãøt‹
 *
ôî1
, UCh¨Iãøt‹ *
ôî2
, 
UBoﬁ
 
codePoötOrdî
) {

826 
UCh¨32
 
c1
, 
c2
;

829 if(
ôî1
==
NULL
 || 
ôî2
==NULL) {

832 if(
ôî1
==
ôî2
) {

837 
ôî1
->
	`move
(ôî1, 0, 
UITER_START
);

838 
ôî2
->
	`move
(ôî2, 0, 
UITER_START
);

842 
c1
=
ôî1
->
	`√xt
(iter1);

843 
c2
=
ôî2
->
	`√xt
(iter2);

844 if(
c1
!=
c2
) {

847 if(
c1
==-1) {

853 if(
c1
>=0xd800 && 
c2
>=0xd800 && 
codePoötOrdî
) {

856 (
c1
<=0xdbf‡&& 
	`UTF_IS_TRAIL
(
ôî1
->
	`cuºít
(iter1))) ||

857 (
	`UTF_IS_TRAIL
(
c1
Ë&& (
ôî1
->
	`¥evious
(ôî1), 
	`UTF_IS_LEAD
(iter1->previous(iter1))))

862 
c1
-=0x2800;

866 (
c2
<=0xdbf‡&& 
	`UTF_IS_TRAIL
(
ôî2
->
	`cuºít
(iter2))) ||

867 (
	`UTF_IS_TRAIL
(
c2
Ë&& (
ôî2
->
	`¥evious
(ôî2), 
	`UTF_IS_LEAD
(iter2->previous(iter2))))

872 
c2
-=0x2800;

877  (
öt32_t
)
c1
-(öt32_t)
c2
;

878 
	}
}

897 
	g‰agmít
 {

899 if(
	gc1
<=0xdbff) {

900 if(!
UTF_IS_TRAIL
(
ôî1
->
cuºít
(iter1))) {

902 
c1
-=0x2800;

904 } if(
	gc1
<=0xdfff) {

905 
öt32_t
 
idx
=
ôî1
->
gëIndex
(ôî1, 
UITER_CURRENT
);

906 
	gôî1
->
¥evious
(
ôî1
);

907 if(!
UTF_IS_LEAD
(
ôî1
->
¥evious
(iter1))) {

909 
	gc1
-=0x2800;

912 
	gôî1
->
move
(
ôî1
, 
idx
, 
UITER_ZERO
);

915 
	gc1
-=0x2800;

920 
U_CAPI
 
öt32_t
 
U_EXPORT2


921 
	$u_°rCom∑ª
(c⁄° 
UCh¨
 *
s1
, 
öt32_t
 
Àngth1
,

922 c⁄° 
UCh¨
 *
s2
, 
öt32_t
 
Àngth2
,

923 
UBoﬁ
 
codePoötOrdî
) {

925 if(
s1
==
NULL
 || 
Àngth1
<-1 || 
s2
==NULL || 
Àngth2
<-1) {

928  
	`u¥v_°rCom∑ª
(
s1
, 
Àngth1
, 
s2
, 
Àngth2
, 
FALSE
, 
codePoötOrdî
);

929 
	}
}

932 
U_CAPI
 
öt32_t
 
U_EXPORT2


933 
	$u_°rcmpCodePoötOrdî
(c⁄° 
UCh¨
 *
s1
, c⁄° UCh¨ *
s2
) {

934  
	`u¥v_°rCom∑ª
(
s1
, -1, 
s2
, -1, 
FALSE
, 
TRUE
);

935 
	}
}

937 
U_CAPI
 
öt32_t
 
U_EXPORT2


938 
	$u_°∫cmp
(c⁄° 
UCh¨
 *
s1
,

939 c⁄° 
UCh¨
 *
s2
,

940 
öt32_t
 
n
)

942 if(
n
 > 0) {

943 
öt32_t
 
rc
;

945 
rc
 = (
öt32_t
)*
s1
 - (öt32_t)*
s2
;

946 if(
rc
 !0 || *
s1
 =0 || --
n
 == 0) {

947  
rc
;

949 ++
s1
;

950 ++
s2
;

955 
	}
}

957 
U_CAPI
 
öt32_t
 
U_EXPORT2


958 
	$u_°∫cmpCodePoötOrdî
(c⁄° 
UCh¨
 *
s1
, c⁄° UCh¨ *
s2
, 
öt32_t
 
n
) {

959  
	`u¥v_°rCom∑ª
(
s1
, 
n
, 
s2
,Ç, 
TRUE
, TRUE);

960 
	}
}

962 
U_CAPI
 
UCh¨
* 
U_EXPORT2


963 
	$u_°r˝y
(
UCh¨
 *
d°
,

964 c⁄° 
UCh¨
 *
§c
)

966 
UCh¨
 *
™ch‹
 = 
d°
;

968 (*(
d°
++Ë*(
§c
++)) != 0) {

971  
™ch‹
;

972 
	}
}

974 
U_CAPI
 
UCh¨
* 
U_EXPORT2


975 
	$u_°∫˝y
(
UCh¨
 *
d°
,

976 c⁄° 
UCh¨
 *
§c
,

977 
öt32_t
 
n
)

979 
UCh¨
 *
™ch‹
 = 
d°
;

982 
n
 > 0 && (*(
d°
++Ë*(
§c
++)) != 0) {

983 --
n
;

986  
™ch‹
;

987 
	}
}

989 
U_CAPI
 
öt32_t
 
U_EXPORT2


990 
	$u_°æí
(c⁄° 
UCh¨
 *
s
)

992 #i‡
U_SIZEOF_WCHAR_T
 =
U_SIZEOF_UCHAR


993  (
öt32_t
)
	`u¥v_wc¶í
(
s
);

995 c⁄° 
UCh¨
 *
t
 = 
s
;

996 *
t
 != 0) {

997 ++
t
;

999  
t
 - 
s
;

1001 
	}
}

1003 
U_CAPI
 
öt32_t
 
U_EXPORT2


1004 
	$u_cou¡Ch¨32
(c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
) {

1005 
öt32_t
 
cou¡
;

1007 if(
s
==
NULL
 || 
Àngth
<-1) {

1011 
cou¡
=0;

1012 if(
Àngth
>=0) {

1013 
Àngth
>0) {

1014 ++
cou¡
;

1015 if(
	`UTF_IS_LEAD
(*
s
Ë&& 
Àngth
>=2 && 
	`UTF_IS_TRAIL
(*(s+1))) {

1016 
s
+=2;

1017 
Àngth
-=2;

1019 ++
s
;

1020 --
Àngth
;

1024 
UCh¨
 
c
;

1027 if((
c
=*
s
++)==0) {

1030 ++
cou¡
;

1036 if(
	`UTF_IS_LEAD
(
c
Ë&& 
	`UTF_IS_TRAIL
(*
s
)) {

1037 ++
s
;

1041  
cou¡
;

1042 
	}
}

1044 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


1045 
	$u_°rHasM‹eCh¨32Th™
(c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
, i¡32_à
numbî
) {

1047 if(
numbî
<0) {

1048  
TRUE
;

1050 if(
s
==
NULL
 || 
Àngth
<-1) {

1051  
FALSE
;

1054 if(
Àngth
==-1) {

1056 
UCh¨
 
c
;

1060 if((
c
=*
s
++)==0) {

1061  
FALSE
;

1063 if(
numbî
==0) {

1064  
TRUE
;

1066 if(
	`U16_IS_LEAD
(
c
Ë&& 
	`U16_IS_TRAIL
(*
s
)) {

1067 ++
s
;

1069 --
numbî
;

1073 c⁄° 
UCh¨
 *
limô
;

1074 
öt32_t
 
maxSuµÀmíèry
;

1077 if(((
Àngth
+1)/2)>
numbî
) {

1078  
TRUE
;

1082 
maxSuµÀmíèry
=
Àngth
-
numbî
;

1083 if(
maxSuµÀmíèry
<=0) {

1084  
FALSE
;

1092 
limô
=
s
+
Àngth
;

1094 if(
s
==
limô
) {

1095  
FALSE
;

1097 if(
numbî
==0) {

1098  
TRUE
;

1100 if(
	`U16_IS_LEAD
(*
s
++Ë&& s!=
limô
 && 
	`U16_IS_TRAIL
(*s)) {

1101 ++
s
;

1102 if(--
maxSuµÀmíèry
<=0) {

1104  
FALSE
;

1107 --
numbî
;

1110 
	}
}

1112 
U_CAPI
 
UCh¨
 * 
U_EXPORT2


1113 
	$u_mem˝y
(
UCh¨
 *
de°
, c⁄° UCh¨ *
§c
, 
öt32_t
 
cou¡
) {

1114  (
UCh¨
 *)
	`u¥v_mem˝y
(
de°
, 
§c
, 
cou¡
*
U_SIZEOF_UCHAR
);

1115 
	}
}

1117 
U_CAPI
 
UCh¨
 * 
U_EXPORT2


1118 
	$u_memmove
(
UCh¨
 *
de°
, c⁄° UCh¨ *
§c
, 
öt32_t
 
cou¡
) {

1119  (
UCh¨
 *)
	`u¥v_memmove
(
de°
, 
§c
, 
cou¡
*
U_SIZEOF_UCHAR
);

1120 
	}
}

1122 
U_CAPI
 
UCh¨
 * 
U_EXPORT2


1123 
	$u_mem£t
(
UCh¨
 *
de°
, UCh¨ 
c
, 
öt32_t
 
cou¡
) {

1124 if(
cou¡
 > 0) {

1125 
UCh¨
 *
±r
 = 
de°
;

1126 
UCh¨
 *
limô
 = 
de°
 + 
cou¡
;

1128 
±r
 < 
limô
) {

1129 *(
±r
++Ë
c
;

1132  
de°
;

1133 
	}
}

1135 
U_CAPI
 
öt32_t
 
U_EXPORT2


1136 
	$u_memcmp
(c⁄° 
UCh¨
 *
buf1
, c⁄° UCh¨ *
buf2
, 
öt32_t
 
cou¡
) {

1137 if(
cou¡
 > 0) {

1138 c⁄° 
UCh¨
 *
limô
 = 
buf1
 + 
cou¡
;

1139 
öt32_t
 
ªsu…
;

1141 
buf1
 < 
limô
) {

1142 
ªsu…
 = (
öt32_t
)(
uöt16_t
)*
buf1
 - (öt32_t)(uöt16_t)*
buf2
;

1143 i‡(
ªsu…
 != 0) {

1144  
ªsu…
;

1146 
buf1
++;

1147 
buf2
++;

1151 
	}
}

1153 
U_CAPI
 
öt32_t
 
U_EXPORT2


1154 
	$u_memcmpCodePoötOrdî
(c⁄° 
UCh¨
 *
s1
, c⁄° UCh¨ *
s2
, 
öt32_t
 
cou¡
) {

1155  
	`u¥v_°rCom∑ª
(
s1
, 
cou¡
, 
s2
, cou¡, 
FALSE
, 
TRUE
);

1156 
	}
}

1161 c⁄° 
UCh¨
 
	gUNESCAPE_MAP
[] = {

1175 íum { 
	mUNESCAPE_MAP_LENGTH
 = (
UNESCAPE_MAP
) / (UNESCAPE_MAP[0]) };

1178 
öt8_t
 
	$_digô8
(
UCh¨
 
c
) {

1179 i‡(
c
 >= 0x0030 && c <= 0x0037) {

1180  (
öt8_t
)(
c
 - 0x0030);

1183 
	}
}

1186 
öt8_t
 
	$_digô16
(
UCh¨
 
c
) {

1187 i‡(
c
 >= 0x0030 && c <= 0x0039) {

1188  (
öt8_t
)(
c
 - 0x0030);

1190 i‡(
c
 >= 0x0041 && c <= 0x0046) {

1191  (
öt8_t
)(
c
 - (0x0041 - 10));

1193 i‡(
c
 >= 0x0061 && c <= 0x0066) {

1194  (
öt8_t
)(
c
 - (0x0061 - 10));

1197 
	}
}

1202 
U_CAPI
 
UCh¨32
 
U_EXPORT2


1203 
	$u_u√sˇ≥At
(
UNESCAPE_CHAR_AT
 
ch¨At
,

1204 
öt32_t
 *
off£t
,

1205 
öt32_t
 
Àngth
,

1206 *
c⁄ãxt
) {

1208 
öt32_t
 
°¨t
 = *
off£t
;

1209 
UCh¨
 
c
;

1210 
UCh¨32
 
ªsu…
 = 0;

1211 
öt8_t
 
n
 = 0;

1212 
öt8_t
 
möDig
 = 0;

1213 
öt8_t
 
maxDig
 = 0;

1214 
öt8_t
 
bôsPîDigô
 = 4;

1215 
öt8_t
 
dig
;

1216 
öt32_t
 
i
;

1217 
UBoﬁ
 
bø˚s
 = 
FALSE
;

1220 i‡(*
off£t
 < 0 || *off£à>
Àngth
) {

1221 
îr
;

1225 
c
 = 
	`ch¨At
((*
off£t
)++, 
c⁄ãxt
);

1228 
c
) {

1230 
möDig
 = 
maxDig
 = 4;

1233 
möDig
 = 
maxDig
 = 8;

1236 
möDig
 = 1;

1237 i‡(*
off£t
 < 
Àngth
 && 
	`ch¨At
(*off£t, 
c⁄ãxt
) == 0x7B ) {

1238 ++(*
off£t
);

1239 
bø˚s
 = 
TRUE
;

1240 
maxDig
 = 8;

1242 
maxDig
 = 2;

1246 
dig
 = 
	`_digô8
(
c
);

1247 i‡(
dig
 >= 0) {

1248 
möDig
 = 1;

1249 
maxDig
 = 3;

1250 
n
 = 1;

1251 
bôsPîDigô
 = 3;

1252 
ªsu…
 = 
dig
;

1256 i‡(
möDig
 != 0) {

1257 *
off£t
 < 
Àngth
 && 
n
 < 
maxDig
) {

1258 
c
 = 
	`ch¨At
(*
off£t
, 
c⁄ãxt
);

1259 
dig
 = (
öt8_t
)((
bôsPîDigô
 =3Ë? 
	`_digô8
(
c
Ë: 
	`_digô16
(c));

1260 i‡(
dig
 < 0) {

1263 
ªsu…
 = (ªsu… << 
bôsPîDigô
Ë| 
dig
;

1264 ++(*
off£t
);

1265 ++
n
;

1267 i‡(
n
 < 
möDig
) {

1268 
îr
;

1270 i‡(
bø˚s
) {

1271 i‡(
c
 != 0x7D ) {

1272 
îr
;

1274 ++(*
off£t
);

1276 i‡(
ªsu…
 < 0 ||Ñesult >= 0x110000) {

1277 
îr
;

1283 i‡(*
off£t
 < 
Àngth
 && 
	`U16_IS_LEAD
(
ªsu…
)) {

1284 
öt32_t
 
ahód
 = *
off£t
 + 1;

1285 
c
 = 
	`ch¨At
(*
off£t
, 
c⁄ãxt
);

1286 i‡(
c
 =0x5C && 
ahód
 < 
Àngth
) {

1287 
c
 = (
UCh¨
Ë
	`u_u√sˇ≥At
(
ch¨At
, &
ahód
, 
Àngth
, 
c⁄ãxt
);

1289 i‡(
	`U16_IS_TRAIL
(
c
)) {

1290 *
off£t
 = 
ahód
;

1291 
ªsu…
 = 
	`U16_GET_SUPPLEMENTARY
‘esu…, 
c
);

1294  
ªsu…
;

1298 
i
=0; i<
UNESCAPE_MAP_LENGTH
; i+=2) {

1299 i‡(
c
 =
UNESCAPE_MAP
[
i
]) {

1300  
UNESCAPE_MAP
[
i
+1];

1301 } i‡(
c
 < 
UNESCAPE_MAP
[
i
]) {

1307 i‡(
c
 =0x0063 && *
off£t
 < 
Àngth
) {

1308 
c
 = 
	`ch¨At
((*
off£t
)++, 
c⁄ãxt
);

1309 i‡(
	`UTF_IS_FIRST_SURROGATE
(
c
Ë&& *
off£t
 < 
Àngth
) {

1310 
UCh¨
 
c2
 = 
	`ch¨At
(*
off£t
, 
c⁄ãxt
);

1311 i‡(
	`UTF_IS_SECOND_SURROGATE
(
c2
)) {

1312 ++(*
off£t
);

1313 
c
 = (
UCh¨
Ë
	`UTF16_GET_PAIR_VALUE
(c, 
c2
);

1316  0x1F & 
c
;

1322 i‡(
	`UTF_IS_FIRST_SURROGATE
(
c
Ë&& *
off£t
 < 
Àngth
) {

1323 
UCh¨
 
c2
 = 
	`ch¨At
(*
off£t
, 
c⁄ãxt
);

1324 i‡(
	`UTF_IS_SECOND_SURROGATE
(
c2
)) {

1325 ++(*
off£t
);

1326  
	`UTF16_GET_PAIR_VALUE
(
c
, 
c2
);

1329  
c
;

1331 
îr
:

1333 *
off£t
 = 
°¨t
;

1334  (
UCh¨32
)0xFFFFFFFF;

1335 
	}
}

1338 
UCh¨
 
U_CALLCONV


1339 
	$_ch¨På_ch¨At
(
öt32_t
 
off£t
, *
c⁄ãxt
) {

1340 
UCh¨
 
c16
;

1343 
	`u_ch¨sToUCh¨s
(((*Ë
c⁄ãxt
Ë+ 
off£t
, &
c16
, 1);

1344  
c16
;

1345 
	}
}

1348 
	$_≠≥ndUCh¨s
(
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

1349 c⁄° *
§c
, 
öt32_t
 
§cLí
) {

1350 i‡(
de°C≠acôy
 < 0) {

1351 
de°C≠acôy
 = 0;

1353 i‡(
§cLí
 > 
de°C≠acôy
) {

1354 
§cLí
 = 
de°C≠acôy
;

1356 
	`u_ch¨sToUCh¨s
(
§c
, 
de°
, 
§cLí
);

1357 
	}
}

1360 
U_CAPI
 
öt32_t
 
U_EXPORT2


1361 
	$u_u√sˇ≥
(c⁄° *
§c
, 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
) {

1362 c⁄° *
£gmít
 = 
§c
;

1363 
öt32_t
 
i
 = 0;

1364 
c
;

1366 (
c
=*
§c
) != 0) {

1370 i‡(
c
 == '\\') {

1371 
öt32_t
 
ÀnP¨£d
 = 0;

1372 
UCh¨32
 
c32
;

1373 i‡(
§c
 !
£gmít
) {

1374 i‡(
de°
 !
NULL
) {

1375 
	`_≠≥ndUCh¨s
(
de°
 + 
i
, 
de°C≠acôy
 - i,

1376 
£gmít
, (
öt32_t
)(
§c
 - segment));

1378 
i
 +(
öt32_t
)(
§c
 - 
£gmít
);

1380 ++
§c
;

1381 
c32
 = (
UCh¨32
)
	`u_u√sˇ≥At
(
_ch¨På_ch¨At
, &
ÀnP¨£d
, (
öt32_t
)
	`u¥v_°æí
(
§c
), (*)src);

1382 i‡(
ÀnP¨£d
 == 0) {

1383 
îr
;

1385 
§c
 +
ÀnP¨£d
;

1386 i‡(
de°
 !
NULL
 && 
	`UTF_CHAR_LENGTH
(
c32
Ë<(
de°C≠acôy
 - 
i
)) {

1387 
	`UTF_APPEND_CHAR_UNSAFE
(
de°
, 
i
, 
c32
);

1389 
i
 +
	`UTF_CHAR_LENGTH
(
c32
);

1391 
£gmít
 = 
§c
;

1393 ++
§c
;

1396 i‡(
§c
 !
£gmít
) {

1397 i‡(
de°
 !
NULL
) {

1398 
	`_≠≥ndUCh¨s
(
de°
 + 
i
, 
de°C≠acôy
 - i,

1399 
£gmít
, (
öt32_t
)(
§c
 - segment));

1401 
i
 +(
öt32_t
)(
§c
 - 
£gmít
);

1403 i‡(
de°
 !
NULL
 && 
i
 < 
de°C≠acôy
) {

1404 
de°
[
i
] = 0;

1406  
i
;

1408 
îr
:

1409 i‡(
de°
 !
NULL
 && 
de°C≠acôy
 > 0) {

1410 *
de°
 = 0;

1413 
	}
}

1421 
	#__TERMINATE_STRING
(
de°
, 
de°C≠acôy
, 
Àngth
, 
pEº‹Code
) \

1422 if(
pEº‹Code
!=
NULL
 && 
	`U_SUCCESS
(*pErrorCode)) { \

1425 if(
Àngth
<0) { \

1427 } if(
Àngth
<
de°C≠acôy
) { \

1429 
de°
[
Àngth
]=0; \

1431 if(*
pEº‹Code
==
U_STRING_NOT_TERMINATED_WARNING
) { \

1432 *
pEº‹Code
=
U_ZERO_ERROR
; \

1434 } if(
Àngth
==
de°C≠acôy
) { \

1436 *
pEº‹Code
=
U_STRING_NOT_TERMINATED_WARNING
; \

1439 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
; \

1441 }

	)

1443 
U_CAPI
 
öt32_t
 
U_EXPORT2


1444 
	$u_ãrmö©eUCh¨s
(
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
, i¡32_à
Àngth
, 
UEº‹Code
 *
pEº‹Code
) {

1445 
	`__TERMINATE_STRING
(
de°
, 
de°C≠acôy
, 
Àngth
, 
pEº‹Code
);

1446  
Àngth
;

1447 
	}
}

1449 
U_CAPI
 
öt32_t
 
U_EXPORT2


1450 
	$u_ãrmö©eCh¨s
(*
de°
, 
öt32_t
 
de°C≠acôy
, i¡32_à
Àngth
, 
UEº‹Code
 *
pEº‹Code
) {

1451 
	`__TERMINATE_STRING
(
de°
, 
de°C≠acôy
, 
Àngth
, 
pEº‹Code
);

1452  
Àngth
;

1453 
	}
}

1455 
U_CAPI
 
öt32_t
 
U_EXPORT2


1456 
	$u_ãrmö©eUCh¨32s
(
UCh¨32
 *
de°
, 
öt32_t
 
de°C≠acôy
, i¡32_à
Àngth
, 
UEº‹Code
 *
pEº‹Code
) {

1457 
	`__TERMINATE_STRING
(
de°
, 
de°C≠acôy
, 
Àngth
, 
pEº‹Code
);

1458  
Àngth
;

1459 
	}
}

1461 
U_CAPI
 
öt32_t
 
U_EXPORT2


1462 
	$u_ãrmö©eWCh¨s
(
wch¨_t
 *
de°
, 
öt32_t
 
de°C≠acôy
, i¡32_à
Àngth
, 
UEº‹Code
 *
pEº‹Code
) {

1463 
	`__TERMINATE_STRING
(
de°
, 
de°C≠acôy
, 
Àngth
, 
pEº‹Code
);

1464  
Àngth
;

1465 
	}
}

	@ustrtrns.c

27 
	~"unicode/putû.h
"

28 
	~"unicode/u°rög.h
"

29 
	~"c°rög.h
"

30 
	~"cmem‹y.h
"

31 
	~"u°r_imp.h
"

33 
U_CAPI
 
UCh¨
* 
U_EXPORT2


34 
	$u_°rFromUTF32WôhSub
(
UCh¨
 *
de°
,

35 
öt32_t
 
de°C≠acôy
,

36 
öt32_t
 *
pDe°Lígth
,

37 c⁄° 
UCh¨32
 *
§c
,

38 
öt32_t
 
§cLígth
,

39 
UCh¨32
 
subch¨
, 
öt32_t
 *
pNumSub°ôuti⁄s
,

40 
UEº‹Code
 *
pEº‹Code
) {

41 c⁄° 
UCh¨32
 *
§cLimô
;

42 
UCh¨32
 
ch
;

43 
UCh¨
 *
de°Limô
;

44 
UCh¨
 *
pDe°
;

45 
öt32_t
 
ªqLígth
;

46 
öt32_t
 
numSub°ôuti⁄s
;

49 if(
	`U_FAILURE
(*
pEº‹Code
)){

50  
NULL
;

52 if–(
§c
==
NULL
 && 
§cLígth
!=0) || srcLength < -1 ||

53 (
de°C≠acôy
<0Ë|| (
de°
 =
NULL
 && destCapacity > 0) ||

54 
subch¨
 > 0x10fff‡|| 
	`U_IS_SURROGATE
(subchar)

56 *
pEº‹Code
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

57  
NULL
;

60 if(
pNumSub°ôuti⁄s
 !
NULL
) {

61 *
pNumSub°ôuti⁄s
 = 0;

64 
pDe°
 = 
de°
;

65 
de°Limô
 = 
de°
 + 
de°C≠acôy
;

66 
ªqLígth
 = 0;

67 
numSub°ôuti⁄s
 = 0;

69 if(
§cLígth
 < 0) {

71 (
ch
=*
§c
) != 0 &&

72 ((
uöt32_t
)
ch
 < 0xd800 || (0xe000 <= ch && ch <= 0xffff))) {

73 ++
§c
;

74 if(
pDe°
 < 
de°Limô
) {

75 *
pDe°
++ = (
UCh¨
)
ch
;

77 ++
ªqLígth
;

80 
§cLimô
 = 
§c
;

81 if(
ch
 != 0) {

83 *++
§cLimô
 != 0) {}

86 
§cLimô
 = 
§c
 + 
§cLígth
;

90 
§c
 < 
§cLimô
) {

91 
ch
 = *
§c
++;

94 if((
uöt32_t
)
ch
 < 0xd800 || (0xe000 <= ch && ch <= 0xffff)) {

95 if(
pDe°
 < 
de°Limô
) {

96 *
pDe°
++ = (
UCh¨
)
ch
;

98 ++
ªqLígth
;

101 } if(0x10000 <
ch
 && ch <= 0x10ffff) {

102 if((
pDe°
 + 2Ë<
de°Limô
) {

103 *
pDe°
++ = 
	`U16_LEAD
(
ch
);

104 *
pDe°
++ = 
	`U16_TRAIL
(
ch
);

106 
ªqLígth
 += 2;

109 } if((
ch
 = 
subch¨
) < 0) {

111 *
pEº‹Code
 = 
U_INVALID_CHAR_FOUND
;

112  
NULL
;

114 ++
numSub°ôuti⁄s
;

116 } 
TRUE
);

119 
ªqLígth
 +(
öt32_t
)(
pDe°
 - 
de°
);

120 if(
pDe°Lígth
) {

121 *
pDe°Lígth
 = 
ªqLígth
;

123 if(
pNumSub°ôuti⁄s
 !
NULL
) {

124 *
pNumSub°ôuti⁄s
 = 
numSub°ôuti⁄s
;

128 
	`u_ãrmö©eUCh¨s
(
de°
, 
de°C≠acôy
, 
ªqLígth
, 
pEº‹Code
);

130  
de°
;

131 
	}
}

133 
U_CAPI
 
UCh¨
* 
U_EXPORT2


134 
	$u_°rFromUTF32
(
UCh¨
 *
de°
,

135 
öt32_t
 
de°C≠acôy
,

136 
öt32_t
 *
pDe°Lígth
,

137 c⁄° 
UCh¨32
 *
§c
,

138 
öt32_t
 
§cLígth
,

139 
UEº‹Code
 *
pEº‹Code
) {

140  
	`u_°rFromUTF32WôhSub
(

141 
de°
, 
de°C≠acôy
, 
pDe°Lígth
,

142 
§c
, 
§cLígth
,

143 
U_SENTINEL
, 
NULL
,

144 
pEº‹Code
);

145 
	}
}

147 
U_CAPI
 
UCh¨32
* 
U_EXPORT2


148 
	$u_°rToUTF32WôhSub
(
UCh¨32
 *
de°
,

149 
öt32_t
 
de°C≠acôy
,

150 
öt32_t
 *
pDe°Lígth
,

151 c⁄° 
UCh¨
 *
§c
,

152 
öt32_t
 
§cLígth
,

153 
UCh¨32
 
subch¨
, 
öt32_t
 *
pNumSub°ôuti⁄s
,

154 
UEº‹Code
 *
pEº‹Code
) {

155 c⁄° 
UCh¨
 *
§cLimô
;

156 
UCh¨32
 
ch
;

157 
UCh¨
 
ch2
;

158 
UCh¨32
 *
de°Limô
;

159 
UCh¨32
 *
pDe°
;

160 
öt32_t
 
ªqLígth
;

161 
öt32_t
 
numSub°ôuti⁄s
;

164 if(
	`U_FAILURE
(*
pEº‹Code
)){

165  
NULL
;

167 if–(
§c
==
NULL
 && 
§cLígth
!=0) || srcLength < -1 ||

168 (
de°C≠acôy
<0Ë|| (
de°
 =
NULL
 && destCapacity > 0) ||

169 
subch¨
 > 0x10fff‡|| 
	`U_IS_SURROGATE
(subchar)

171 *
pEº‹Code
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

172  
NULL
;

175 if(
pNumSub°ôuti⁄s
 !
NULL
) {

176 *
pNumSub°ôuti⁄s
 = 0;

179 
pDe°
 = 
de°
;

180 
de°Limô
 = 
de°
 + 
de°C≠acôy
;

181 
ªqLígth
 = 0;

182 
numSub°ôuti⁄s
 = 0;

184 if(
§cLígth
 < 0) {

186 (
ch
=*
§c
Ë!0 && !
	`U16_IS_SURROGATE
(ch)) {

187 ++
§c
;

188 if(
pDe°
 < 
de°Limô
) {

189 *
pDe°
++ = 
ch
;

191 ++
ªqLígth
;

194 
§cLimô
 = 
§c
;

195 if(
ch
 != 0) {

197 *++
§cLimô
 != 0) {}

200 
§cLimô
 = 
§c
 + 
§cLígth
;

204 
§c
 < 
§cLimô
) {

205 
ch
 = *
§c
++;

206 if(!
	`U16_IS_SURROGATE
(
ch
)) {

208 } if(
	`U16_IS_SURROGATE_LEAD
(
ch
Ë&& 
§c
 < 
§cLimô
 && 
	`U16_IS_TRAIL
(
ch2
 = *src)) {

209 ++
§c
;

210 
ch
 = 
	`U16_GET_SUPPLEMENTARY
(ch, 
ch2
);

211 } if((
ch
 = 
subch¨
) < 0) {

213 *
pEº‹Code
 = 
U_INVALID_CHAR_FOUND
;

214  
NULL
;

216 ++
numSub°ôuti⁄s
;

218 if(
pDe°
 < 
de°Limô
) {

219 *
pDe°
++ = 
ch
;

221 ++
ªqLígth
;

225 
ªqLígth
 +(
öt32_t
)(
pDe°
 - 
de°
);

226 if(
pDe°Lígth
) {

227 *
pDe°Lígth
 = 
ªqLígth
;

229 if(
pNumSub°ôuti⁄s
 !
NULL
) {

230 *
pNumSub°ôuti⁄s
 = 
numSub°ôuti⁄s
;

234 
	`u_ãrmö©eUCh¨32s
(
de°
, 
de°C≠acôy
, 
ªqLígth
, 
pEº‹Code
);

236  
de°
;

237 
	}
}

239 
U_CAPI
 
UCh¨32
* 
U_EXPORT2


240 
	$u_°rToUTF32
(
UCh¨32
 *
de°
,

241 
öt32_t
 
de°C≠acôy
,

242 
öt32_t
 *
pDe°Lígth
,

243 c⁄° 
UCh¨
 *
§c
,

244 
öt32_t
 
§cLígth
,

245 
UEº‹Code
 *
pEº‹Code
) {

246  
	`u_°rToUTF32WôhSub
(

247 
de°
, 
de°C≠acôy
, 
pDe°Lígth
,

248 
§c
, 
§cLígth
,

249 
U_SENTINEL
, 
NULL
,

250 
pEº‹Code
);

251 
	}
}

254 c⁄° 
UCh¨32


255 
	gutf8_möLegÆ
[4]={ 0, 0x80, 0x800, 0x10000 };

267 
UCh¨32


268 
	$utf8_√xtCh¨Sa„BodyTîmö©ed
(c⁄° 
uöt8_t
 **
ps
, 
UCh¨32
 
c
) {

269 c⁄° 
uöt8_t
 *
s
=*
ps
;

270 
uöt8_t
 
åaû
, 
ûÀgÆ
=0;

271 
uöt8_t
 
cou¡
=
	`UTF8_COUNT_TRAIL_BYTES
(
c
);

272 
	`UTF8_MASK_LEAD_BYTE
((
c
), 
cou¡
);

274 
cou¡
) {

279 
ûÀgÆ
=1;

282 
åaû
=(
uöt8_t
)(*
s
++ - 0x80);

283 
c
=(c<<6)|
åaû
;

284 if(
åaû
>0x3‡|| 
c
>=0x110) {

286 
ûÀgÆ
=1;

290 
åaû
=(
uöt8_t
)(*
s
++ - 0x80);

291 if(
åaû
>0x3f) {

293 
ûÀgÆ
=1;

296 
c
=(c<<6)|
åaû
;

298 
åaû
=(
uöt8_t
)(*
s
++ - 0x80);

299 if(
åaû
>0x3f) {

301 
ûÀgÆ
=1;

303 
c
=(c<<6)|
åaû
;

306  
U_SENTINEL
;

312 if(
ûÀgÆ
 || 
c
<
utf8_möLegÆ
[
cou¡
] || 
	`UTF_IS_SURROGATE
(c)) {

315 
s
=*
ps
;

316 
cou¡
>0 && 
	`UTF8_IS_TRAIL
(*
s
)) {

317 ++
s
;

318 --
cou¡
;

320 
c
=
U_SENTINEL
;

322 *
ps
=
s
;

323  
c
;

324 
	}
}

335 
UCh¨32


336 
	$utf8_√xtCh¨Sa„BodyPoöãr
(c⁄° 
uöt8_t
 **
ps
, c⁄° uöt8_à*
limô
, 
UCh¨32
 
c
) {

337 c⁄° 
uöt8_t
 *
s
=*
ps
;

338 
uöt8_t
 
åaû
, 
ûÀgÆ
=0;

339 
uöt8_t
 
cou¡
=
	`UTF8_COUNT_TRAIL_BYTES
(
c
);

340 if((
limô
-
s
)>=
cou¡
) {

341 
	`UTF8_MASK_LEAD_BYTE
((
c
), 
cou¡
);

343 
cou¡
) {

348 
ûÀgÆ
=1;

351 
åaû
=*
s
++;

352 
c
=(c<<6)|(
åaû
&0x3f);

353 if(
c
<0x110) {

354 
ûÀgÆ
|=(
åaû
&0xc0)^0x80;

357 
ûÀgÆ
=1;

361 
åaû
=*
s
++;

362 
c
=(c<<6)|(
åaû
&0x3f);

363 
ûÀgÆ
|=(
åaû
&0xc0)^0x80;

365 
åaû
=*
s
++;

366 
c
=(c<<6)|(
åaû
&0x3f);

367 
ûÀgÆ
|=(
åaû
&0xc0)^0x80;

370  
U_SENTINEL
;

374 
ûÀgÆ
=1;

379 if(
ûÀgÆ
 || 
c
<
utf8_möLegÆ
[
cou¡
] || 
	`UTF_IS_SURROGATE
(c)) {

382 
s
=*
ps
;

383 
cou¡
>0 && 
s
<
limô
 && 
	`UTF8_IS_TRAIL
(*s)) {

384 ++
s
;

385 --
cou¡
;

387 
c
=
U_SENTINEL
;

389 *
ps
=
s
;

390  
c
;

391 
	}
}

393 
U_CAPI
 
UCh¨
* 
U_EXPORT2


394 
	$u_°rFromUTF8WôhSub
(
UCh¨
 *
de°
,

395 
öt32_t
 
de°C≠acôy
,

396 
öt32_t
 *
pDe°Lígth
,

397 c⁄° * 
§c
,

398 
öt32_t
 
§cLígth
,

399 
UCh¨32
 
subch¨
, 
öt32_t
 *
pNumSub°ôuti⁄s
,

400 
UEº‹Code
 *
pEº‹Code
){

401 
UCh¨
 *
pDe°
 = 
de°
;

402 
UCh¨
 *
pDe°Limô
 = 
de°
+
de°C≠acôy
;

403 
UCh¨32
 
ch
;

404 
öt32_t
 
ªqLígth
 = 0;

405 c⁄° 
uöt8_t
* 
pSrc
 = (c⁄° uöt8_t*Ë
§c
;

406 
uöt8_t
 
t1
, 
t2
;

407 
öt32_t
 
numSub°ôuti⁄s
;

410 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)){

411  
NULL
;

414 if–(
§c
==
NULL
 && 
§cLígth
!=0) || srcLength < -1 ||

415 (
de°C≠acôy
<0Ë|| (
de°
 =
NULL
 && destCapacity > 0) ||

416 
subch¨
 > 0x10fff‡|| 
	`U_IS_SURROGATE
(subchar)

418 *
pEº‹Code
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

419  
NULL
;

422 if(
pNumSub°ôuti⁄s
!=
NULL
) {

423 *
pNumSub°ôuti⁄s
=0;

425 
numSub°ôuti⁄s
=0;

440 if(
§cLígth
 < 0){

446 ((
ch
 = *
pSrc
Ë!0Ë&& (
pDe°
 < 
pDe°Limô
)) {

447 if(
ch
 <= 0x7f){

448 *
pDe°
++=(
UCh¨
)
ch
;

449 ++
pSrc
;

451 if(
ch
 > 0xe0) {

453 
ch
 <= 0xec &&

454 (
t1
 = (
uöt8_t
)(
pSrc
[1] - 0x80)) <= 0x3f &&

455 (
t2
 = (
uöt8_t
)(
pSrc
[2] - 0x80)) <= 0x3f

458 *
pDe°
++ = (
UCh¨
)((
ch
 << 12Ë| (
t1
 << 6Ë| 
t2
);

459 
pSrc
 += 3;

462 } if(
ch
 < 0xe0) {

464 
ch
 >= 0xc2 &&

465 (
t1
 = (
uöt8_t
)(
pSrc
[1] - 0x80)) <= 0x3f

467 *
pDe°
++ = (
UCh¨
)(((
ch
 & 0x1fË<< 6Ë| 
t1
);

468 
pSrc
 += 2;

474 ++
pSrc
;

475 
ch
=
	`utf8_√xtCh¨Sa„BodyTîmö©ed
(&
pSrc
, ch);

476 if(
ch
<0 && (++
numSub°ôuti⁄s
, ch = 
subch¨
) < 0) {

477 *
pEº‹Code
 = 
U_INVALID_CHAR_FOUND
;

478  
NULL
;

479 } if(
ch
<=0xFFFF) {

480 *(
pDe°
++)=(
UCh¨
)
ch
;

482 *(
pDe°
++)=
	`UTF16_LEAD
(
ch
);

483 if(
pDe°
<
pDe°Limô
) {

484 *(
pDe°
++)=
	`UTF16_TRAIL
(
ch
);

486 
ªqLígth
++;

494 (
ch
 = *
pSrc
) != 0) {

495 if(
ch
 <= 0x7f){

496 ++
ªqLígth
;

497 ++
pSrc
;

499 if(
ch
 > 0xe0) {

501 
ch
 <= 0xec &&

502 (
uöt8_t
)(
pSrc
[1] - 0x80) <= 0x3f &&

503 (
uöt8_t
)(
pSrc
[2] - 0x80) <= 0x3f

505 ++
ªqLígth
;

506 
pSrc
 += 3;

509 } if(
ch
 < 0xe0) {

511 
ch
 >= 0xc2 &&

512 (
uöt8_t
)(
pSrc
[1] - 0x80) <= 0x3f

514 ++
ªqLígth
;

515 
pSrc
 += 2;

521 ++
pSrc
;

522 
ch
=
	`utf8_√xtCh¨Sa„BodyTîmö©ed
(&
pSrc
, ch);

523 if(
ch
<0 && (++
numSub°ôuti⁄s
, ch = 
subch¨
) < 0) {

524 *
pEº‹Code
 = 
U_INVALID_CHAR_FOUND
;

525  
NULL
;

527 
ªqLígth
 +
	`U16_LENGTH
(
ch
);

531 c⁄° 
uöt8_t
 *
pSrcLimô
 = 
pSrc
 + 
§cLígth
;

532 
öt32_t
 
cou¡
;

542 
cou¡
 = (
öt32_t
)(
pDe°Limô
 - 
pDe°
);

543 
§cLígth
 = (
öt32_t
)((
pSrcLimô
 - 
pSrc
) / 3);

544 if(
cou¡
 > 
§cLígth
) {

545 
cou¡
 = 
§cLígth
;

547 if(
cou¡
 < 3) {

556 
ch
 = *
pSrc
;

557 if(
ch
 <= 0x7f){

558 *
pDe°
++=(
UCh¨
)
ch
;

559 ++
pSrc
;

561 if(
ch
 > 0xe0) {

563 
ch
 <= 0xec &&

564 (
t1
 = (
uöt8_t
)(
pSrc
[1] - 0x80)) <= 0x3f &&

565 (
t2
 = (
uöt8_t
)(
pSrc
[2] - 0x80)) <= 0x3f

568 *
pDe°
++ = (
UCh¨
)((
ch
 << 12Ë| (
t1
 << 6Ë| 
t2
);

569 
pSrc
 += 3;

572 } if(
ch
 < 0xe0) {

574 
ch
 >= 0xc2 &&

575 (
t1
 = (
uöt8_t
)(
pSrc
[1] - 0x80)) <= 0x3f

577 *
pDe°
++ = (
UCh¨
)(((
ch
 & 0x1fË<< 6Ë| 
t1
);

578 
pSrc
 += 2;

583 if(
ch
 >0xf0 || 
subch¨
 > 0xffff) {

589 if(--
cou¡
 == 0) {

595 ++
pSrc
;

596 
ch
=
	`utf8_√xtCh¨Sa„BodyPoöãr
(&
pSrc
, 
pSrcLimô
, ch);

597 if(
ch
<0 && (++
numSub°ôuti⁄s
, ch = 
subch¨
) < 0){

598 *
pEº‹Code
 = 
U_INVALID_CHAR_FOUND
;

599  
NULL
;

600 }if(
ch
<=0xFFFF){

601 *(
pDe°
++)=(
UCh¨
)
ch
;

603 *(
pDe°
++)=
	`UTF16_LEAD
(
ch
);

604 *(
pDe°
++)=
	`UTF16_TRAIL
(
ch
);

607 } --
cou¡
 > 0);

610 (
pSrc
<
pSrcLimô
Ë&& (
pDe°
<
pDe°Limô
)) {

611 
ch
 = *
pSrc
;

612 if(
ch
 <= 0x7f){

613 *
pDe°
++=(
UCh¨
)
ch
;

614 ++
pSrc
;

616 if(
ch
 > 0xe0) {

618 
ch
 <= 0xec &&

619 ((
pSrcLimô
 - 
pSrc
) >= 3) &&

620 (
t1
 = (
uöt8_t
)(
pSrc
[1] - 0x80)) <= 0x3f &&

621 (
t2
 = (
uöt8_t
)(
pSrc
[2] - 0x80)) <= 0x3f

624 *
pDe°
++ = (
UCh¨
)((
ch
 << 12Ë| (
t1
 << 6Ë| 
t2
);

625 
pSrc
 += 3;

628 } if(
ch
 < 0xe0) {

630 
ch
 >= 0xc2 &&

631 ((
pSrcLimô
 - 
pSrc
) >= 2) &&

632 (
t1
 = (
uöt8_t
)(
pSrc
[1] - 0x80)) <= 0x3f

634 *
pDe°
++ = (
UCh¨
)(((
ch
 & 0x1fË<< 6Ë| 
t1
);

635 
pSrc
 += 2;

641 ++
pSrc
;

642 
ch
=
	`utf8_√xtCh¨Sa„BodyPoöãr
(&
pSrc
, 
pSrcLimô
, ch);

643 if(
ch
<0 && (++
numSub°ôuti⁄s
, ch = 
subch¨
) < 0){

644 *
pEº‹Code
 = 
U_INVALID_CHAR_FOUND
;

645  
NULL
;

646 }if(
ch
<=0xFFFF){

647 *(
pDe°
++)=(
UCh¨
)
ch
;

649 *(
pDe°
++)=
	`UTF16_LEAD
(
ch
);

650 if(
pDe°
<
pDe°Limô
){

651 *(
pDe°
++)=
	`UTF16_TRAIL
(
ch
);

653 
ªqLígth
++;

660 
pSrc
 < 
pSrcLimô
){

661 
ch
 = *
pSrc
;

662 if(
ch
 <= 0x7f){

663 
ªqLígth
++;

664 ++
pSrc
;

666 if(
ch
 > 0xe0) {

668 
ch
 <= 0xec &&

669 ((
pSrcLimô
 - 
pSrc
) >= 3) &&

670 (
uöt8_t
)(
pSrc
[1] - 0x80) <= 0x3f &&

671 (
uöt8_t
)(
pSrc
[2] - 0x80) <= 0x3f

673 
ªqLígth
++;

674 
pSrc
 += 3;

677 } if(
ch
 < 0xe0) {

679 
ch
 >= 0xc2 &&

680 ((
pSrcLimô
 - 
pSrc
) >= 2) &&

681 (
uöt8_t
)(
pSrc
[1] - 0x80) <= 0x3f

683 
ªqLígth
++;

684 
pSrc
 += 2;

690 ++
pSrc
;

691 
ch
=
	`utf8_√xtCh¨Sa„BodyPoöãr
(&
pSrc
, 
pSrcLimô
, ch);

692 if(
ch
<0 && (++
numSub°ôuti⁄s
, ch = 
subch¨
) < 0){

693 *
pEº‹Code
 = 
U_INVALID_CHAR_FOUND
;

694  
NULL
;

696 
ªqLígth
+=
	`UTF_CHAR_LENGTH
(
ch
);

701 
ªqLígth
+=(
öt32_t
)(
pDe°
 - 
de°
);

703 if(
pNumSub°ôuti⁄s
!=
NULL
) {

704 *
pNumSub°ôuti⁄s
=
numSub°ôuti⁄s
;

707 if(
pDe°Lígth
){

708 *
pDe°Lígth
 = 
ªqLígth
;

712 
	`u_ãrmö©eUCh¨s
(
de°
,
de°C≠acôy
,
ªqLígth
,
pEº‹Code
);

714  
de°
;

715 
	}
}

717 
U_CAPI
 
UCh¨
* 
U_EXPORT2


718 
	$u_°rFromUTF8
(
UCh¨
 *
de°
,

719 
öt32_t
 
de°C≠acôy
,

720 
öt32_t
 *
pDe°Lígth
,

721 c⁄° * 
§c
,

722 
öt32_t
 
§cLígth
,

723 
UEº‹Code
 *
pEº‹Code
){

724  
	`u_°rFromUTF8WôhSub
(

725 
de°
, 
de°C≠acôy
, 
pDe°Lígth
,

726 
§c
, 
§cLígth
,

727 
U_SENTINEL
, 
NULL
,

728 
pEº‹Code
);

729 
	}
}

731 
U_CAPI
 
UCh¨
 * 
U_EXPORT2


732 
	$u_°rFromUTF8Líõ¡
(
UCh¨
 *
de°
,

733 
öt32_t
 
de°C≠acôy
,

734 
öt32_t
 *
pDe°Lígth
,

735 c⁄° *
§c
,

736 
öt32_t
 
§cLígth
,

737 
UEº‹Code
 *
pEº‹Code
) {

738 
UCh¨
 *
pDe°
 = 
de°
;

739 
UCh¨32
 
ch
;

740 
öt32_t
 
ªqLígth
 = 0;

741 
uöt8_t
* 
pSrc
 = (uöt8_t*Ë
§c
;

744 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)){

745  
NULL
;

748 if–(
§c
==
NULL
 && 
§cLígth
!=0) || srcLength < -1 ||

749 (
de°C≠acôy
<0Ë|| (
de°
 =
NULL
 && destCapacity > 0)

751 *
pEº‹Code
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

752  
NULL
;

755 if(
§cLígth
 < 0) {

757 
UCh¨
 *
pDe°Limô
 = 
de°
+
de°C≠acôy
;

758 
uöt8_t
 
t1
, 
t2
, 
t3
;

760 ((
ch
 = *
pSrc
Ë!0Ë&& (
pDe°
 < 
pDe°Limô
)) {

761 if(
ch
 < 0xc0) {

767 *
pDe°
++=(
UCh¨
)
ch
;

768 ++
pSrc
;

770 } if(
ch
 < 0xe0) {

771 if((
t1
 = 
pSrc
[1]) != 0) {

773 *
pDe°
++ = (
UCh¨
)((
ch
 << 6Ë+ 
t1
 - 0x3080);

774 
pSrc
 += 2;

777 } if(
ch
 < 0xf0) {

778 if((
t1
 = 
pSrc
[1]Ë!0 && (
t2
 =ÖSrc[2]) != 0) {

781 *
pDe°
++ = (
UCh¨
)((
ch
 << 12Ë+ (
t1
 << 6Ë+ 
t2
 - 0x2080);

782 
pSrc
 += 3;

786 if((
t1
 = 
pSrc
[1]Ë!0 && (
t2
 =ÖSrc[2]Ë!0 && (
t3
 =ÖSrc[3]) != 0) {

787 
pSrc
 += 4;

789 
ch
 = (ch << 18Ë+ (
t1
 << 12Ë+ (
t2
 << 6Ë+ 
t3
 - 0x3c82080;

790 *(
pDe°
++Ë
	`U16_LEAD
(
ch
);

791 if(
pDe°
 < 
pDe°Limô
) {

792 *(
pDe°
++Ë
	`U16_TRAIL
(
ch
);

794 
ªqLígth
 = 1;

802 *
pDe°
++ = 0xfffd;

803 *++
pSrc
 != 0) {}

808 (
ch
 = *
pSrc
) != 0) {

809 if(
ch
 < 0xc0) {

815 ++
ªqLígth
;

816 ++
pSrc
;

818 } if(
ch
 < 0xe0) {

819 if(
pSrc
[1] != 0) {

820 ++
ªqLígth
;

821 
pSrc
 += 2;

824 } if(
ch
 < 0xf0) {

825 if(
pSrc
[1] != 0 &&ÖSrc[2] != 0) {

826 ++
ªqLígth
;

827 
pSrc
 += 3;

831 if(
pSrc
[1] != 0 &&ÖSrc[2] != 0 &&ÖSrc[3] != 0) {

832 
ªqLígth
 += 2;

833 
pSrc
 += 4;

839 ++
ªqLígth
;

843 c⁄° 
uöt8_t
 *
pSrcLimô
 = 
pSrc
 + 
§cLígth
;

850 if(
de°C≠acôy
 < 
§cLígth
) {

851 if(
pDe°Lígth
 !
NULL
) {

852 *
pDe°Lígth
 = 
§cLígth
;

854 *
pEº‹Code
 = 
U_BUFFER_OVERFLOW_ERROR
;

855  
NULL
;

858 if((
pSrcLimô
 - 
pSrc
) >= 4) {

859 
pSrcLimô
 -= 3;

863 
ch
 = *
pSrc
++;

864 if(
ch
 < 0xc0) {

870 *
pDe°
++=(
UCh¨
)
ch
;

871 } if(
ch
 < 0xe0) {

873 *
pDe°
++ = (
UCh¨
)((
ch
 << 6Ë+ *
pSrc
++ - 0x3080);

874 } if(
ch
 < 0xf0) {

877 
ch
 = (ch << 12Ë+ (*
pSrc
++ << 6);

878 *
pDe°
++ = (
UCh¨
)(
ch
 + *
pSrc
++ - 0x2080);

881 
ch
 = (ch << 18Ë+ (*
pSrc
++ << 12);

882 
ch
 +*
pSrc
++ << 6;

883 
ch
 +*
pSrc
++ - 0x3c82080;

884 *(
pDe°
++Ë
	`U16_LEAD
(
ch
);

885 *(
pDe°
++Ë
	`U16_TRAIL
(
ch
);

887 } 
pSrc
 < 
pSrcLimô
);

889 
pSrcLimô
 += 3;

892 
pSrc
 < 
pSrcLimô
) {

893 
ch
 = *
pSrc
++;

894 if(
ch
 < 0xc0) {

900 *
pDe°
++=(
UCh¨
)
ch
;

902 } if(
ch
 < 0xe0) {

903 if(
pSrc
 < 
pSrcLimô
) {

905 *
pDe°
++ = (
UCh¨
)((
ch
 << 6Ë+ *
pSrc
++ - 0x3080);

908 } if(
ch
 < 0xf0) {

909 if((
pSrcLimô
 - 
pSrc
) >= 2) {

912 
ch
 = (ch << 12Ë+ (*
pSrc
++ << 6);

913 *
pDe°
++ = (
UCh¨
)(
ch
 + *
pSrc
++ - 0x2080);

914 
pSrc
 += 3;

918 if((
pSrcLimô
 - 
pSrc
) >= 3) {

920 
ch
 = (ch << 18Ë+ (*
pSrc
++ << 12);

921 
ch
 +*
pSrc
++ << 6;

922 
ch
 +*
pSrc
++ - 0x3c82080;

923 *(
pDe°
++Ë
	`U16_LEAD
(
ch
);

924 *(
pDe°
++Ë
	`U16_TRAIL
(
ch
);

925 
pSrc
 += 4;

931 *
pDe°
++ = 0xfffd;

936 
ªqLígth
+=(
öt32_t
)(
pDe°
 - 
de°
);

938 if(
pDe°Lígth
){

939 *
pDe°Lígth
 = 
ªqLígth
;

943 
	`u_ãrmö©eUCh¨s
(
de°
,
de°C≠acôy
,
ªqLígth
,
pEº‹Code
);

945  
de°
;

946 
	}
}

948 
U_INLINE
 
uöt8_t
 *

949 
	$_≠≥ndUTF8
(
uöt8_t
 *
pDe°
, 
UCh¨32
 
c
) {

951 if((
c
)<=0x7f) {

952 *
pDe°
++=(
uöt8_t
)
c
;

953 } if(
c
<=0x7ff) {

954 *
pDe°
++=(
uöt8_t
)((
c
>>6)|0xc0);

955 *
pDe°
++=(
uöt8_t
)((
c
&0x3f)|0x80);

956 } if(
c
<=0xffff) {

957 *
pDe°
++=(
uöt8_t
)((
c
>>12)|0xe0);

958 *
pDe°
++=(
uöt8_t
)(((
c
>>6)&0x3f)|0x80);

959 *
pDe°
++=(
uöt8_t
)(((
c
)&0x3f)|0x80);

961 *
pDe°
++=(
uöt8_t
)(((
c
)>>18)|0xf0);

962 *
pDe°
++=(
uöt8_t
)((((
c
)>>12)&0x3f)|0x80);

963 *
pDe°
++=(
uöt8_t
)((((
c
)>>6)&0x3f)|0x80);

964 *
pDe°
++=(
uöt8_t
)(((
c
)&0x3f)|0x80);

966  
pDe°
;

967 
	}
}

970 
U_CAPI
 * 
U_EXPORT2


971 
	$u_°rToUTF8WôhSub
(*
de°
,

972 
öt32_t
 
de°C≠acôy
,

973 
öt32_t
 *
pDe°Lígth
,

974 c⁄° 
UCh¨
 *
pSrc
,

975 
öt32_t
 
§cLígth
,

976 
UCh¨32
 
subch¨
, 
öt32_t
 *
pNumSub°ôuti⁄s
,

977 
UEº‹Code
 *
pEº‹Code
){

978 
öt32_t
 
ªqLígth
=0;

979 
uöt32_t
 
ch
=0,
ch2
=0;

980 
uöt8_t
 *
pDe°
 = (uöt8_à*)
de°
;

981 
uöt8_t
 *
pDe°Limô
 = 
pDe°
 + 
de°C≠acôy
;

982 
öt32_t
 
numSub°ôuti⁄s
;

985 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)){

986  
NULL
;

989 if–(
pSrc
==
NULL
 && 
§cLígth
!=0) || srcLength < -1 ||

990 (
de°C≠acôy
<0Ë|| (
de°
 =
NULL
 && destCapacity > 0) ||

991 
subch¨
 > 0x10fff‡|| 
	`U_IS_SURROGATE
(subchar)

993 *
pEº‹Code
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

994  
NULL
;

997 if(
pNumSub°ôuti⁄s
!=
NULL
) {

998 *
pNumSub°ôuti⁄s
=0;

1000 
numSub°ôuti⁄s
=0;

1002 if(
§cLígth
==-1) {

1003 (
ch
=*
pSrc
)!=0) {

1004 ++
pSrc
;

1005 if(
ch
 <= 0x7f) {

1006 if(
pDe°
<
pDe°Limô
) {

1007 *
pDe°
++ = (
uöt8_t
)
ch
;

1009 
ªqLígth
 = 1;

1012 } if(
ch
 <= 0x7ff) {

1013 if((
pDe°Limô
 - 
pDe°
) >= 2) {

1014 *
pDe°
++=(
uöt8_t
)((
ch
>>6)|0xc0);

1015 *
pDe°
++=(
uöt8_t
)((
ch
&0x3f)|0x80);

1017 
ªqLígth
 = 2;

1020 } if(
ch
 <= 0xd7ff || ch >= 0xe000) {

1021 if((
pDe°Limô
 - 
pDe°
) >= 3) {

1022 *
pDe°
++=(
uöt8_t
)((
ch
>>12)|0xe0);

1023 *
pDe°
++=(
uöt8_t
)(((
ch
>>6)&0x3f)|0x80);

1024 *
pDe°
++=(
uöt8_t
)((
ch
&0x3f)|0x80);

1026 
ªqLígth
 = 3;

1030 
öt32_t
 
Àngth
;

1033 if(
	`UTF_IS_SURROGATE_FIRST
(
ch
Ë&& 
	`UTF_IS_TRAIL
(
ch2
=*
pSrc
)) {

1034 ++
pSrc
;

1035 
ch
=
	`UTF16_GET_PAIR_VALUE
(ch, 
ch2
);

1036 } if(
subch¨
>=0) {

1037 
ch
=
subch¨
;

1038 ++
numSub°ôuti⁄s
;

1041 *
pEº‹Code
 = 
U_INVALID_CHAR_FOUND
;

1042  
NULL
;

1045 
Àngth
 = 
	`U8_LENGTH
(
ch
);

1046 if((
pDe°Limô
 - 
pDe°
Ë>
Àngth
) {

1048 
pDe°
=
	`_≠≥ndUTF8
’De°, 
ch
);

1050 
ªqLígth
 = 
Àngth
;

1055 (
ch
=*
pSrc
++)!=0) {

1056 if(
ch
<=0x7f) {

1057 ++
ªqLígth
;

1058 } if(
ch
<=0x7ff) {

1059 
ªqLígth
+=2;

1060 } if(!
	`UTF_IS_SURROGATE
(
ch
)) {

1061 
ªqLígth
+=3;

1062 } if(
	`UTF_IS_SURROGATE_FIRST
(
ch
Ë&& 
	`UTF_IS_TRAIL
(
ch2
=*
pSrc
)) {

1063 ++
pSrc
;

1064 
ªqLígth
+=4;

1065 } if(
subch¨
>=0) {

1066 
ªqLígth
+=
	`U8_LENGTH
(
subch¨
);

1067 ++
numSub°ôuti⁄s
;

1070 *
pEº‹Code
 = 
U_INVALID_CHAR_FOUND
;

1071  
NULL
;

1075 c⁄° 
UCh¨
 *
pSrcLimô
 = 
pSrc
+
§cLígth
;

1076 
öt32_t
 
cou¡
;

1086 
cou¡
 = (
öt32_t
)((
pDe°Limô
 - 
pDe°
) / 3);

1087 
§cLígth
 = (
öt32_t
)(
pSrcLimô
 - 
pSrc
);

1088 if(
cou¡
 > 
§cLígth
) {

1089 
cou¡
 = 
§cLígth
;

1091 if(
cou¡
 < 3) {

1099 
ch
=*
pSrc
++;

1100 if(
ch
 <= 0x7f) {

1101 *
pDe°
++ = (
uöt8_t
)
ch
;

1102 } if(
ch
 <= 0x7ff) {

1103 *
pDe°
++=(
uöt8_t
)((
ch
>>6)|0xc0);

1104 *
pDe°
++=(
uöt8_t
)((
ch
&0x3f)|0x80);

1105 } if(
ch
 <= 0xd7ff || ch >= 0xe000) {

1106 *
pDe°
++=(
uöt8_t
)((
ch
>>12)|0xe0);

1107 *
pDe°
++=(
uöt8_t
)(((
ch
>>6)&0x3f)|0x80);

1108 *
pDe°
++=(
uöt8_t
)((
ch
&0x3f)|0x80);

1115 if(--
cou¡
 == 0) {

1116 --
pSrc
;

1120 if(
	`UTF_IS_SURROGATE_FIRST
(
ch
Ë&& 
	`UTF_IS_TRAIL
(
ch2
=*
pSrc
)) {

1121 ++
pSrc
;

1122 
ch
=
	`UTF16_GET_PAIR_VALUE
(ch, 
ch2
);

1125 *
pDe°
++=(
uöt8_t
)((
ch
>>18)|0xf0);

1126 *
pDe°
++=(
uöt8_t
)(((
ch
>>12)&0x3f)|0x80);

1127 *
pDe°
++=(
uöt8_t
)(((
ch
>>6)&0x3f)|0x80);

1128 *
pDe°
++=(
uöt8_t
)((
ch
&0x3f)|0x80);

1131 if(
subch¨
>=0) {

1132 
ch
=
subch¨
;

1133 ++
numSub°ôuti⁄s
;

1135 *
pEº‹Code
 = 
U_INVALID_CHAR_FOUND
;

1136  
NULL
;

1140 
pDe°
=
	`_≠≥ndUTF8
’De°, 
ch
);

1143 } --
cou¡
 > 0);

1146 
pSrc
<
pSrcLimô
) {

1147 
ch
=*
pSrc
++;

1148 if(
ch
 <= 0x7f) {

1149 if(
pDe°
<
pDe°Limô
) {

1150 *
pDe°
++ = (
uöt8_t
)
ch
;

1152 
ªqLígth
 = 1;

1155 } if(
ch
 <= 0x7ff) {

1156 if((
pDe°Limô
 - 
pDe°
) >= 2) {

1157 *
pDe°
++=(
uöt8_t
)((
ch
>>6)|0xc0);

1158 *
pDe°
++=(
uöt8_t
)((
ch
&0x3f)|0x80);

1160 
ªqLígth
 = 2;

1163 } if(
ch
 <= 0xd7ff || ch >= 0xe000) {

1164 if((
pDe°Limô
 - 
pDe°
) >= 3) {

1165 *
pDe°
++=(
uöt8_t
)((
ch
>>12)|0xe0);

1166 *
pDe°
++=(
uöt8_t
)(((
ch
>>6)&0x3f)|0x80);

1167 *
pDe°
++=(
uöt8_t
)((
ch
&0x3f)|0x80);

1169 
ªqLígth
 = 3;

1173 
öt32_t
 
Àngth
;

1175 if(
	`UTF_IS_SURROGATE_FIRST
(
ch
Ë&& 
pSrc
<
pSrcLimô
 && 
	`UTF_IS_TRAIL
(
ch2
=*pSrc)) {

1176 ++
pSrc
;

1177 
ch
=
	`UTF16_GET_PAIR_VALUE
(ch, 
ch2
);

1178 } if(
subch¨
>=0) {

1179 
ch
=
subch¨
;

1180 ++
numSub°ôuti⁄s
;

1183 *
pEº‹Code
 = 
U_INVALID_CHAR_FOUND
;

1184  
NULL
;

1187 
Àngth
 = 
	`U8_LENGTH
(
ch
);

1188 if((
pDe°Limô
 - 
pDe°
Ë>
Àngth
) {

1190 
pDe°
=
	`_≠≥ndUTF8
’De°, 
ch
);

1192 
ªqLígth
 = 
Àngth
;

1197 
pSrc
<
pSrcLimô
) {

1198 
ch
=*
pSrc
++;

1199 if(
ch
<=0x7f) {

1200 ++
ªqLígth
;

1201 } if(
ch
<=0x7ff) {

1202 
ªqLígth
+=2;

1203 } if(!
	`UTF_IS_SURROGATE
(
ch
)) {

1204 
ªqLígth
+=3;

1205 } if(
	`UTF_IS_SURROGATE_FIRST
(
ch
Ë&& 
pSrc
<
pSrcLimô
 && 
	`UTF_IS_TRAIL
(
ch2
=*pSrc)) {

1206 ++
pSrc
;

1207 
ªqLígth
+=4;

1208 } if(
subch¨
>=0) {

1209 
ªqLígth
+=
	`U8_LENGTH
(
subch¨
);

1210 ++
numSub°ôuti⁄s
;

1213 *
pEº‹Code
 = 
U_INVALID_CHAR_FOUND
;

1214  
NULL
;

1219 
ªqLígth
+=(
öt32_t
)(
pDe°
 - (
uöt8_t
 *)
de°
);

1221 if(
pNumSub°ôuti⁄s
!=
NULL
) {

1222 *
pNumSub°ôuti⁄s
=
numSub°ôuti⁄s
;

1225 if(
pDe°Lígth
){

1226 *
pDe°Lígth
 = 
ªqLígth
;

1230 
	`u_ãrmö©eCh¨s
(
de°
, 
de°C≠acôy
, 
ªqLígth
, 
pEº‹Code
);

1231  
de°
;

1232 
	}
}

1234 
U_CAPI
 * 
U_EXPORT2


1235 
	$u_°rToUTF8
(*
de°
,

1236 
öt32_t
 
de°C≠acôy
,

1237 
öt32_t
 *
pDe°Lígth
,

1238 c⁄° 
UCh¨
 *
pSrc
,

1239 
öt32_t
 
§cLígth
,

1240 
UEº‹Code
 *
pEº‹Code
){

1241  
	`u_°rToUTF8WôhSub
(

1242 
de°
, 
de°C≠acôy
, 
pDe°Lígth
,

1243 
pSrc
, 
§cLígth
,

1244 
U_SENTINEL
, 
NULL
,

1245 
pEº‹Code
);

1246 
	}
}

1248 
U_CAPI
 
UCh¨
* 
U_EXPORT2


1249 
	$u_°rFromJavaModifõdUTF8WôhSub
(

1250 
UCh¨
 *
de°
,

1251 
öt32_t
 
de°C≠acôy
,

1252 
öt32_t
 *
pDe°Lígth
,

1253 c⁄° *
§c
,

1254 
öt32_t
 
§cLígth
,

1255 
UCh¨32
 
subch¨
, 
öt32_t
 *
pNumSub°ôuti⁄s
,

1256 
UEº‹Code
 *
pEº‹Code
) {

1257 
UCh¨
 *
pDe°
 = 
de°
;

1258 
UCh¨
 *
pDe°Limô
 = 
de°
+
de°C≠acôy
;

1259 
UCh¨32
 
ch
;

1260 
öt32_t
 
ªqLígth
 = 0;

1261 c⁄° 
uöt8_t
* 
pSrc
 = (c⁄° uöt8_t*Ë
§c
;

1262 c⁄° 
uöt8_t
 *
pSrcLimô
;

1263 
öt32_t
 
cou¡
;

1264 
uöt8_t
 
t1
, 
t2
;

1265 
öt32_t
 
numSub°ôuti⁄s
;

1268 if(
	`U_FAILURE
(*
pEº‹Code
)){

1269  
NULL
;

1271 if–(
§c
==
NULL
 && 
§cLígth
!=0) || srcLength < -1 ||

1272 (
de°
==
NULL
 && 
de°C≠acôy
!=0) || destCapacity<0 ||

1273 
subch¨
 > 0x10fff‡|| 
	`U_IS_SURROGATE
(subchar)

1275 *
pEº‹Code
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1276  
NULL
;

1279 if(
pNumSub°ôuti⁄s
!=
NULL
) {

1280 *
pNumSub°ôuti⁄s
=0;

1282 
numSub°ôuti⁄s
=0;

1284 if(
§cLígth
 < 0) {

1289 ((
ch
 = *
pSrc
Ë!0Ë&& ch <0x7‡&& (
pDe°
 < 
pDe°Limô
)) {

1290 *
pDe°
++=(
UCh¨
)
ch
;

1291 ++
pSrc
;

1293 if(
ch
 == 0) {

1294 
ªqLígth
=(
öt32_t
)(
pDe°
 - 
de°
);

1295 if(
pDe°Lígth
) {

1296 *
pDe°Lígth
 = 
ªqLígth
;

1300 
	`u_ãrmö©eUCh¨s
(
de°
, 
de°C≠acôy
, 
ªqLígth
, 
pEº‹Code
);

1301  
de°
;

1303 
§cLígth
 = 
	`u¥v_°æí
((c⁄° *)
pSrc
);

1307 
pSrcLimô
 = 
pSrc
 + 
§cLígth
;

1309 
cou¡
 = (
öt32_t
)(
pDe°Limô
 - 
pDe°
);

1310 
§cLígth
 = (
öt32_t
)(
pSrcLimô
 - 
pSrc
);

1311 if(
cou¡
 >
§cLígth
 && srcLígth > 0 && *
pSrc
 <= 0x7f) {

1313 c⁄° 
uöt8_t
 *
¥evSrc
 = 
pSrc
;

1314 
öt32_t
 
dñè
;

1315 
pSrc
 < 
pSrcLimô
 && (
ch
 = *pSrc) <= 0x7f) {

1316 *
pDe°
++=(
UCh¨
)
ch
;

1317 ++
pSrc
;

1319 
dñè
 = (
öt32_t
)(
pSrc
 - 
¥evSrc
);

1320 
cou¡
 -
dñè
;

1321 
§cLígth
 -
dñè
;

1327 
§cLígth
 /= 3;

1328 if(
cou¡
 > 
§cLígth
) {

1329 
cou¡
 = 
§cLígth
;

1331 if(
cou¡
 < 3) {

1339 
ch
 = *
pSrc
;

1340 if(
ch
 <= 0x7f){

1341 *
pDe°
++=(
UCh¨
)
ch
;

1342 ++
pSrc
;

1344 if(
ch
 >= 0xe0) {

1346 
ch
 <= 0xef &&

1347 (
t1
 = (
uöt8_t
)(
pSrc
[1] - 0x80)) <= 0x3f &&

1348 (
t2
 = (
uöt8_t
)(
pSrc
[2] - 0x80)) <= 0x3f

1351 *
pDe°
++ = (
UCh¨
)((
ch
 << 12Ë| (
t1
 << 6Ë| 
t2
);

1352 
pSrc
 += 3;

1357 
ch
 >= 0xc0 &&

1358 (
t1
 = (
uöt8_t
)(
pSrc
[1] - 0x80)) <= 0x3f

1360 *
pDe°
++ = (
UCh¨
)(((
ch
 & 0x1fË<< 6Ë| 
t1
);

1361 
pSrc
 += 2;

1366 if(
subch¨
 < 0) {

1367 *
pEº‹Code
 = 
U_INVALID_CHAR_FOUND
;

1368  
NULL
;

1369 } if(
subch¨
 > 0xfff‡&& --
cou¡
 == 0) {

1377 ++
pSrc
;

1378 
	`utf8_√xtCh¨Sa„BodyPoöãr
(&
pSrc
, 
pSrcLimô
, 
ch
);

1379 ++
numSub°ôuti⁄s
;

1380 if(
subch¨
<=0xFFFF) {

1381 *(
pDe°
++)=(
UCh¨
)
subch¨
;

1383 *(
pDe°
++)=
	`U16_LEAD
(
subch¨
);

1384 *(
pDe°
++)=
	`U16_TRAIL
(
subch¨
);

1388 } --
cou¡
 > 0);

1391 (
pSrc
<
pSrcLimô
Ë&& (
pDe°
<
pDe°Limô
)) {

1392 
ch
 = *
pSrc
;

1393 if(
ch
 <= 0x7f){

1394 *
pDe°
++=(
UCh¨
)
ch
;

1395 ++
pSrc
;

1397 if(
ch
 >= 0xe0) {

1399 
ch
 <= 0xef &&

1400 ((
pSrcLimô
 - 
pSrc
) >= 3) &&

1401 (
t1
 = (
uöt8_t
)(
pSrc
[1] - 0x80)) <= 0x3f &&

1402 (
t2
 = (
uöt8_t
)(
pSrc
[2] - 0x80)) <= 0x3f

1405 *
pDe°
++ = (
UCh¨
)((
ch
 << 12Ë| (
t1
 << 6Ë| 
t2
);

1406 
pSrc
 += 3;

1411 
ch
 >= 0xc0 &&

1412 ((
pSrcLimô
 - 
pSrc
) >= 2) &&

1413 (
t1
 = (
uöt8_t
)(
pSrc
[1] - 0x80)) <= 0x3f

1415 *
pDe°
++ = (
UCh¨
)(((
ch
 & 0x1fË<< 6Ë| 
t1
);

1416 
pSrc
 += 2;

1421 if(
subch¨
 < 0) {

1422 *
pEº‹Code
 = 
U_INVALID_CHAR_FOUND
;

1423  
NULL
;

1426 ++
pSrc
;

1427 
	`utf8_√xtCh¨Sa„BodyPoöãr
(&
pSrc
, 
pSrcLimô
, 
ch
);

1428 ++
numSub°ôuti⁄s
;

1429 if(
subch¨
<=0xFFFF) {

1430 *(
pDe°
++)=(
UCh¨
)
subch¨
;

1432 *(
pDe°
++)=
	`U16_LEAD
(
subch¨
);

1433 if(
pDe°
<
pDe°Limô
) {

1434 *(
pDe°
++)=
	`U16_TRAIL
(
subch¨
);

1436 
ªqLígth
++;

1445 
pSrc
 < 
pSrcLimô
){

1446 
ch
 = *
pSrc
;

1447 if(
ch
 <= 0x7f) {

1448 
ªqLígth
++;

1449 ++
pSrc
;

1451 if(
ch
 >= 0xe0) {

1453 
ch
 <= 0xef &&

1454 ((
pSrcLimô
 - 
pSrc
) >= 3) &&

1455 (
uöt8_t
)(
pSrc
[1] - 0x80) <= 0x3f &&

1456 (
uöt8_t
)(
pSrc
[2] - 0x80) <= 0x3f

1458 
ªqLígth
++;

1459 
pSrc
 += 3;

1464 
ch
 >= 0xc0 &&

1465 ((
pSrcLimô
 - 
pSrc
) >= 2) &&

1466 (
uöt8_t
)(
pSrc
[1] - 0x80) <= 0x3f

1468 
ªqLígth
++;

1469 
pSrc
 += 2;

1474 if(
subch¨
 < 0) {

1475 *
pEº‹Code
 = 
U_INVALID_CHAR_FOUND
;

1476  
NULL
;

1479 ++
pSrc
;

1480 
	`utf8_√xtCh¨Sa„BodyPoöãr
(&
pSrc
, 
pSrcLimô
, 
ch
);

1481 ++
numSub°ôuti⁄s
;

1482 
ªqLígth
+=
	`U16_LENGTH
(
ch
);

1487 if(
pNumSub°ôuti⁄s
!=
NULL
) {

1488 *
pNumSub°ôuti⁄s
=
numSub°ôuti⁄s
;

1491 
ªqLígth
+=(
öt32_t
)(
pDe°
 - 
de°
);

1492 if(
pDe°Lígth
) {

1493 *
pDe°Lígth
 = 
ªqLígth
;

1497 
	`u_ãrmö©eUCh¨s
(
de°
, 
de°C≠acôy
, 
ªqLígth
, 
pEº‹Code
);

1498  
de°
;

1499 
	}
}

1501 
U_CAPI
 * 
U_EXPORT2


1502 
	$u_°rToJavaModifõdUTF8
(

1503 *
de°
,

1504 
öt32_t
 
de°C≠acôy
,

1505 
öt32_t
 *
pDe°Lígth
,

1506 c⁄° 
UCh¨
 *
§c
,

1507 
öt32_t
 
§cLígth
,

1508 
UEº‹Code
 *
pEº‹Code
) {

1509 
öt32_t
 
ªqLígth
=0;

1510 
uöt32_t
 
ch
=0;

1511 
uöt8_t
 *
pDe°
 = (uöt8_à*)
de°
;

1512 
uöt8_t
 *
pDe°Limô
 = 
pDe°
 + 
de°C≠acôy
;

1513 c⁄° 
UCh¨
 *
pSrcLimô
;

1514 
öt32_t
 
cou¡
;

1517 if(
	`U_FAILURE
(*
pEº‹Code
)){

1518  
NULL
;

1520 if–(
§c
==
NULL
 && 
§cLígth
!=0) || srcLength < -1 ||

1521 (
de°
==
NULL
 && 
de°C≠acôy
!=0) || destCapacity<0

1523 *
pEº‹Code
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

1524  
NULL
;

1527 if(
§cLígth
==-1) {

1529 (
ch
=*
§c
)<=0x7‡&& ch !0 && 
pDe°
<
pDe°Limô
) {

1530 *
pDe°
++ = (
uöt8_t
)
ch
;

1531 ++
§c
;

1533 if(
ch
 == 0) {

1534 
ªqLígth
=(
öt32_t
)(
pDe°
 - (
uöt8_t
 *)
de°
);

1535 if(
pDe°Lígth
) {

1536 *
pDe°Lígth
 = 
ªqLígth
;

1540 
	`u_ãrmö©eCh¨s
(
de°
, 
de°C≠acôy
, 
ªqLígth
, 
pEº‹Code
);

1541  
de°
;

1543 
§cLígth
 = 
	`u_°æí
(
§c
);

1547 
pSrcLimô
 = 
§c
+
§cLígth
;

1549 
cou¡
 = (
öt32_t
)(
pDe°Limô
 - 
pDe°
);

1550 
§cLígth
 = (
öt32_t
)(
pSrcLimô
 - 
§c
);

1551 if(
cou¡
 >
§cLígth
 && srcLígth > 0 && *
§c
 <= 0x7f) {

1553 c⁄° 
UCh¨
 *
¥evSrc
 = 
§c
;

1554 
öt32_t
 
dñè
;

1555 
§c
 < 
pSrcLimô
 && (
ch
 = *src) <= 0x7f && ch != 0) {

1556 *
pDe°
++=(
uöt8_t
)
ch
;

1557 ++
§c
;

1559 
dñè
 = (
öt32_t
)(
§c
 - 
¥evSrc
);

1560 
cou¡
 -
dñè
;

1561 
§cLígth
 -
dñè
;

1567 
cou¡
 /= 3;

1568 if(
cou¡
 > 
§cLígth
) {

1569 
cou¡
 = 
§cLígth
;

1571 if(
cou¡
 < 3) {

1579 
ch
=*
§c
++;

1580 if(
ch
 <= 0x7f && ch != 0) {

1581 *
pDe°
++ = (
uöt8_t
)
ch
;

1582 } if(
ch
 <= 0x7ff) {

1583 *
pDe°
++=(
uöt8_t
)((
ch
>>6)|0xc0);

1584 *
pDe°
++=(
uöt8_t
)((
ch
&0x3f)|0x80);

1586 *
pDe°
++=(
uöt8_t
)((
ch
>>12)|0xe0);

1587 *
pDe°
++=(
uöt8_t
)(((
ch
>>6)&0x3f)|0x80);

1588 *
pDe°
++=(
uöt8_t
)((
ch
&0x3f)|0x80);

1590 } --
cou¡
 > 0);

1593 
§c
<
pSrcLimô
) {

1594 
ch
=*
§c
++;

1595 if(
ch
 <= 0x7f && ch != 0) {

1596 if(
pDe°
<
pDe°Limô
) {

1597 *
pDe°
++ = (
uöt8_t
)
ch
;

1599 
ªqLígth
 = 1;

1602 } if(
ch
 <= 0x7ff) {

1603 if((
pDe°Limô
 - 
pDe°
) >= 2) {

1604 *
pDe°
++=(
uöt8_t
)((
ch
>>6)|0xc0);

1605 *
pDe°
++=(
uöt8_t
)((
ch
&0x3f)|0x80);

1607 
ªqLígth
 = 2;

1611 if((
pDe°Limô
 - 
pDe°
) >= 3) {

1612 *
pDe°
++=(
uöt8_t
)((
ch
>>12)|0xe0);

1613 *
pDe°
++=(
uöt8_t
)(((
ch
>>6)&0x3f)|0x80);

1614 *
pDe°
++=(
uöt8_t
)((
ch
&0x3f)|0x80);

1616 
ªqLígth
 = 3;

1621 
§c
<
pSrcLimô
) {

1622 
ch
=*
§c
++;

1623 if(
ch
 <= 0x7f && ch != 0) {

1624 ++
ªqLígth
;

1625 } if(
ch
<=0x7ff) {

1626 
ªqLígth
+=2;

1628 
ªqLígth
+=3;

1632 
ªqLígth
+=(
öt32_t
)(
pDe°
 - (
uöt8_t
 *)
de°
);

1633 if(
pDe°Lígth
){

1634 *
pDe°Lígth
 = 
ªqLígth
;

1638 
	`u_ãrmö©eCh¨s
(
de°
, 
de°C≠acôy
, 
ªqLígth
, 
pEº‹Code
);

1639  
de°
;

1640 
	}
}

	@utext.cpp

17 
	~"unicode/uty≥s.h
"

18 
	~"unicode/u°rög.h
"

19 
	~"unicode/uni°r.h
"

20 
	~"unicode/ch¨ôî.h
"

21 
	~"unicode/uãxt.h
"

22 
	~"u°r_imp.h
"

23 
	~"cmem‹y.h
"

24 
	~"c°rög.h
"

25 
	~"uas£π.h
"

26 
	~"putûimp.h
"

28 
	gU_NAMESPACE_USE


30 
	#I32_FLAG
(
bôIndex
Ë((
öt32_t
)1<<(bôIndex))

	)

33 
UBoﬁ


34 
	$uãxt_ac˚ss
(
UText
 *
ut
, 
öt64_t
 
ödex
, 
UBoﬁ
 
f‹w¨d
) {

35  
ut
->
pFuncs
->
	`ac˚ss
(ut, 
ödex
, 
f‹w¨d
);

36 
	}
}

40 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


41 
	$uãxt_moveIndex32
(
UText
 *
ut
, 
öt32_t
 
dñè
) {

42 
UCh¨32
 
c
;

43 i‡(
dñè
 > 0) {

45 if(
ut
->
chunkOff£t
>=ut->
chunkLígth
 && !
	`uãxt_ac˚ss
(ut, ut->
chunkN©iveLimô
, 
TRUE
)) {

46  
FALSE
;

48 
c
 = 
ut
->
chunkC⁄ã¡s
[ut->
chunkOff£t
];

49 i‡(
	`U16_IS_SURROGATE
(
c
)) {

50 
c
 = 
	`uãxt_√xt32
(
ut
);

51 i‡(
c
 =
U_SENTINEL
) {

52  
FALSE
;

55 
ut
->
chunkOff£t
++;

57 } --
dñè
>0);

59 } i‡(
dñè
<0) {

61 if(
ut
->
chunkOff£t
<=0 && !
	`uãxt_ac˚ss
(ut, ut->
chunkN©iveSèπ
, 
FALSE
)) {

62  
FALSE
;

64 
c
 = 
ut
->
chunkC⁄ã¡s
[ut->
chunkOff£t
-1];

65 i‡(
	`U16_IS_SURROGATE
(
c
)) {

66 
c
 = 
	`uãxt_¥evious32
(
ut
);

67 i‡(
c
 =
U_SENTINEL
) {

68  
FALSE
;

71 
ut
->
chunkOff£t
--;

73 } ++
dñè
<0);

76  
TRUE
;

77 
	}
}

80 
U_CAPI
 
öt64_t
 
U_EXPORT2


81 
	$uãxt_«tiveLígth
(
UText
 *
ut
) {

82  
ut
->
pFuncs
->
	`«tiveLígth
(ut);

83 
	}
}

86 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


87 
	$uãxt_isLígthEx≥nsive
(c⁄° 
UText
 *
ut
) {

88 
UBoﬁ
 
r
 = (
ut
->
¥ovidîPr›îtõs
 & 
	`I32_FLAG
(
UTEXT_PROVIDER_LENGTH_IS_EXPENSIVE
)) != 0;

89  
r
;

90 
	}
}

93 
U_CAPI
 
öt64_t
 
U_EXPORT2


94 
	$uãxt_gëN©iveIndex
(c⁄° 
UText
 *
ut
) {

95 if(
ut
->
chunkOff£t
 <ut->
«tiveIndexögLimô
) {

96  
ut
->
chunkN©iveSèπ
+ut->
chunkOff£t
;

98  
ut
->
pFuncs
->
	`m≠Off£tToN©ive
(ut);

100 
	}
}

103 
U_CAPI
 
U_EXPORT2


104 
	$uãxt_£tN©iveIndex
(
UText
 *
ut
, 
öt64_t
 
ödex
) {

105 if(
ödex
<
ut
->
chunkN©iveSèπ
 || index>=ut->
chunkN©iveLimô
) {

110 
ut
->
pFuncs
->
	`ac˚ss
(ut, 
ödex
, 
TRUE
);

111 } if((
öt32_t
)(
ödex
 - 
ut
->
chunkN©iveSèπ
Ë<ut->
«tiveIndexögLimô
) {

113 
ut
->
chunkOff£t
=(
öt32_t
)(
ödex
-ut->
chunkN©iveSèπ
);

115 
ut
->
chunkOff£t
=ut->
pFuncs
->
	`m≠N©iveIndexToUTF16
(ut, 
ödex
);

119 i‡(
ut
->
chunkOff£t
<ut->
chunkLígth
) {

120 
UCh¨
 
c

ut
->
chunkC⁄ã¡s
[ut->
chunkOff£t
];

121 i‡(
	`UTF16_IS_TRAIL
(
c
)) {

122 i‡(
ut
->
chunkOff£t
==0) {

123 
ut
->
pFuncs
->
	`ac˚ss
(ut, ut->
chunkN©iveSèπ
, 
FALSE
);

125 i‡(
ut
->
chunkOff£t
>0) {

126 
UCh¨
 
Àad
 = 
ut
->
chunkC⁄ã¡s
[ut->
chunkOff£t
-1];

127 i‡(
	`UTF16_IS_LEAD
(
Àad
)) {

128 
ut
->
chunkOff£t
--;

133 
	}
}

137 
U_CAPI
 
öt64_t
 
U_EXPORT2


138 
	$uãxt_gëPªviousN©iveIndex
(
UText
 *
ut
) {

144 
öt32_t
 
i
 = 
ut
->
chunkOff£t
 - 1;

145 
öt64_t
 
ªsu…
;

146 i‡(
i
 >= 0) {

147 
UCh¨
 
c
 = 
ut
->
chunkC⁄ã¡s
[
i
];

148 i‡(
	`U16_IS_TRAIL
(
c
Ë=
FALSE
) {

149 i‡(
i
 <
ut
->
«tiveIndexögLimô
) {

150 
ªsu…
 = 
ut
->
chunkN©iveSèπ
 + 
i
;

152 
ut
->
chunkOff£t
 = 
i
;

153 
ªsu…
 = 
ut
->
pFuncs
->
	`m≠Off£tToN©ive
(ut);

154 
ut
->
chunkOff£t
++;

156  
ªsu…
;

161 i‡(
ut
->
chunkOff£t
==0 && ut->
chunkN©iveSèπ
==0) {

168 
	`uãxt_¥evious32
(
ut
);

169 
ªsu…
 = 
	`UTEXT_GETNATIVEINDEX
(
ut
);

170 
	`uãxt_√xt32
(
ut
);

171  
ªsu…
;

172 
	}
}

180 
U_CAPI
 
UCh¨32
 
U_EXPORT2


181 
	$uãxt_cuºít32
(
UText
 *
ut
) {

182 
UCh¨32
 
c
;

183 i‡(
ut
->
chunkOff£t
==ut->
chunkLígth
) {

185 i‡(
ut
->
pFuncs
->
	`ac˚ss
(ut, ut->
chunkN©iveLimô
, 
TRUE
Ë=
FALSE
) {

187  
U_SENTINEL
;

191 
c
 = 
ut
->
chunkC⁄ã¡s
[ut->
chunkOff£t
];

192 i‡(
	`U16_IS_LEAD
(
c
Ë=
FALSE
) {

194  
c
;

200 
UCh¨32
 
åaû
 = 0;

201 
UCh¨32
 
suµÀmíèryC
 = 
c
;

202 i‡((
ut
->
chunkOff£t
+1Ë< ut->
chunkLígth
) {

204 
åaû
 = 
ut
->
chunkC⁄ã¡s
[ut->
chunkOff£t
+1];

213 
öt64_t
 
«tivePosôi⁄
 = 
ut
->
chunkN©iveLimô
;

214 
öt32_t
 
‹igöÆOff£t
 = 
ut
->
chunkOff£t
;

215 i‡(
ut
->
pFuncs
->
	`ac˚ss
(ut, 
«tivePosôi⁄
, 
TRUE
)) {

216 
åaû
 = 
ut
->
chunkC⁄ã¡s
[ut->
chunkOff£t
];

218 
UBoﬁ
 
r
 = 
ut
->
pFuncs
->
	`ac˚ss
(ut, 
«tivePosôi⁄
, 
FALSE
);

219 
	`U_ASSERT
(
r
==
TRUE
);

220 
ut
->
chunkOff£t
 = 
‹igöÆOff£t
;

221 if(!
r
) {

222  
U_SENTINEL
;

226 i‡(
	`U16_IS_TRAIL
(
åaû
)) {

227 
suµÀmíèryC
 = 
	`U16_GET_SUPPLEMENTARY
(
c
, 
åaû
);

229  
suµÀmíèryC
;

231 
	}
}

234 
U_CAPI
 
UCh¨32
 
U_EXPORT2


235 
	$uãxt_ch¨32At
(
UText
 *
ut
, 
öt64_t
 
«tiveIndex
) {

236 
UCh¨32
 
c
 = 
U_SENTINEL
;

239 i‡(
«tiveIndex
>=
ut
->
chunkN©iveSèπ
 &&Ç©iveIndex < ut->chunkN©iveSèπ + ut->
«tiveIndexögLimô
) {

240 
ut
->
chunkOff£t
 = (
öt32_t
)(
«tiveIndex
 - ut->
chunkN©iveSèπ
);

241 
c
 = 
ut
->
chunkC⁄ã¡s
[ut->
chunkOff£t
];

242 i‡(
	`U16_IS_SURROGATE
(
c
Ë=
FALSE
) {

243  
c
;

248 
	`uãxt_£tN©iveIndex
(
ut
, 
«tiveIndex
);

249 i‡(
«tiveIndex
>=
ut
->
chunkN©iveSèπ
 && ut->
chunkOff£t
<ut->
chunkLígth
) {

250 
c
 = 
ut
->
chunkC⁄ã¡s
[ut->
chunkOff£t
];

251 i‡(
	`U16_IS_SURROGATE
(
c
)) {

254 
c
 = 
	`uãxt_cuºít32
(
ut
);

257  
c
;

258 
	}
}

261 
U_CAPI
 
UCh¨32
 
U_EXPORT2


262 
	$uãxt_√xt32
(
UText
 *
ut
) {

263 
UCh¨32
 
c
;

265 i‡(
ut
->
chunkOff£t
 >ut->
chunkLígth
) {

266 i‡(
ut
->
pFuncs
->
	`ac˚ss
(ut, ut->
chunkN©iveLimô
, 
TRUE
Ë=
FALSE
) {

267  
U_SENTINEL
;

271 
c
 = 
ut
->
chunkC⁄ã¡s
[ut->
chunkOff£t
++];

272 i‡(
	`U16_IS_LEAD
(
c
Ë=
FALSE
) {

276  
c
;

279 i‡(
ut
->
chunkOff£t
 >ut->
chunkLígth
) {

280 i‡(
ut
->
pFuncs
->
	`ac˚ss
(ut, ut->
chunkN©iveLimô
, 
TRUE
Ë=
FALSE
) {

283  
c
;

286 
UCh¨32
 
åaû
 = 
ut
->
chunkC⁄ã¡s
[ut->
chunkOff£t
];

287 i‡(
	`U16_IS_TRAIL
(
åaû
Ë=
FALSE
) {

292  
c
;

295 
UCh¨32
 
suµÀmíèry
 = 
	`U16_GET_SUPPLEMENTARY
(
c
, 
åaû
);

296 
ut
->
chunkOff£t
++;

297  
suµÀmíèry
;

298 
	}
}

301 
U_CAPI
 
UCh¨32
 
U_EXPORT2


302 
	$uãxt_¥evious32
(
UText
 *
ut
) {

303 
UCh¨32
 
c
;

305 i‡(
ut
->
chunkOff£t
 <= 0) {

306 i‡(
ut
->
pFuncs
->
	`ac˚ss
(ut, ut->
chunkN©iveSèπ
, 
FALSE
) == FALSE) {

307  
U_SENTINEL
;

310 
ut
->
chunkOff£t
--;

311 
c
 = 
ut
->
chunkC⁄ã¡s
[ut->
chunkOff£t
];

312 i‡(
	`U16_IS_TRAIL
(
c
Ë=
FALSE
) {

316  
c
;

319 i‡(
ut
->
chunkOff£t
 <= 0) {

320 i‡(
ut
->
pFuncs
->
	`ac˚ss
(ut, ut->
chunkN©iveSèπ
, 
FALSE
) == FALSE) {

323  
c
;

327 
UCh¨32
 
Àad
 = 
ut
->
chunkC⁄ã¡s
[ut->
chunkOff£t
-1];

328 i‡(
	`U16_IS_LEAD
(
Àad
Ë=
FALSE
) {

331  
c
;

334 
UCh¨32
 
suµÀmíèry
 = 
	`U16_GET_SUPPLEMENTARY
(
Àad
, 
c
);

335 
ut
->
chunkOff£t
--;

336  
suµÀmíèry
;

337 
	}
}

341 
U_CAPI
 
UCh¨32
 
U_EXPORT2


342 
	$uãxt_√xt32From
(
UText
 *
ut
, 
öt64_t
 
ödex
) {

343 
UCh¨32
 
c
 = 
U_SENTINEL
;

345 if(
ödex
<
ut
->
chunkN©iveSèπ
 || index>=ut->
chunkN©iveLimô
) {

347 if(!
ut
->
pFuncs
->
	`ac˚ss
(ut, 
ödex
, 
TRUE
)) {

349  
U_SENTINEL
;

351 } i‡(
ödex
 - 
ut
->
chunkN©iveSèπ
 <(
öt64_t
)ut->
«tiveIndexögLimô
) {

353 
ut
->
chunkOff£t
 = (
öt32_t
)(
ödex
 - ut->
chunkN©iveSèπ
);

356 
ut
->
chunkOff£t
 = ut->
pFuncs
->
	`m≠N©iveIndexToUTF16
(ut, 
ödex
);

359 
c
 = 
ut
->
chunkC⁄ã¡s
[ut->
chunkOff£t
++];

360 i‡(
	`U16_IS_SURROGATE
(
c
)) {

363 
	`uãxt_£tN©iveIndex
(
ut
, 
ödex
);

364 
c
 = 
	`uãxt_√xt32
(
ut
);

366  
c
;

367 
	}
}

370 
U_CAPI
 
UCh¨32
 
U_EXPORT2


371 
	$uãxt_¥evious32From
(
UText
 *
ut
, 
öt64_t
 
ödex
) {

376 
UCh¨32
 
cPªv
;

385 if(
ödex
<=
ut
->
chunkN©iveSèπ
 || index>ut->
chunkN©iveLimô
) {

387 if(!
ut
->
pFuncs
->
	`ac˚ss
(ut, 
ödex
, 
FALSE
)) {

389  
U_SENTINEL
;

391 } if(
ödex
 - 
ut
->
chunkN©iveSèπ
 <(
öt64_t
)ut->
«tiveIndexögLimô
) {

393 
ut
->
chunkOff£t
 = (
öt32_t
)(
ödex
 - ut->
chunkN©iveSèπ
);

395 
ut
->
chunkOff£t
=ut->
pFuncs
->
	`m≠N©iveIndexToUTF16
(ut, 
ödex
);

396 i‡(
ut
->
chunkOff£t
==0 && !ut->
pFuncs
->
	`ac˚ss
(ut, 
ödex
, 
FALSE
)) {

398  
U_SENTINEL
;

405 
ut
->
chunkOff£t
--;

406 
cPªv
 = 
ut
->
chunkC⁄ã¡s
[ut->
chunkOff£t
];

408 i‡(
	`U16_IS_SURROGATE
(
cPªv
)) {

411 
	`uãxt_£tN©iveIndex
(
ut
, 
ödex
);

412 
cPªv
 = 
	`uãxt_¥evious32
(
ut
);

414  
cPªv
;

415 
	}
}

418 
U_CAPI
 
öt32_t
 
U_EXPORT2


419 
	$uãxt_exåa˘
(
UText
 *
ut
,

420 
öt64_t
 
°¨t
, i¡64_à
limô
,

421 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

422 
UEº‹Code
 *
°©us
) {

423  
ut
->
pFuncs
->
	`exåa˘
(ut, 
°¨t
, 
limô
, 
de°
, 
de°C≠acôy
, 
°©us
);

424 
	}
}

428 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


429 
	$uãxt_equÆs
(c⁄° 
UText
 *
a
, c⁄° UTexà*
b
) {

430 i‡(
a
==
NULL
 || 
b
==NULL ||

431 
a
->
magic
 !
UTEXT_MAGIC
 ||

432 
b
->
magic
 !
UTEXT_MAGIC
) {

434  
FALSE
;

437 i‡(
a
->
pFuncs
 !
b
->pFuncs) {

439  
FALSE
;

442 i‡(
a
->
c⁄ãxt
 !
b
->context) {

444  
FALSE
;

446 i‡(
	`uãxt_gëN©iveIndex
(
a
Ë!uãxt_gëN©iveIndex(
b
)) {

448  
FALSE
;

451  
TRUE
;

452 
	}
}

454 
U_CAPI
 
öt32_t
 
U_EXPORT2


455 
	$uãxt_com∑ª
(
UText
 *
s1
, 
öt32_t
 
Àngth1
,

456 
UText
 *
s2
, 
öt32_t
 
Àngth2
) {

457 
UCh¨32
 
c1
 = 0, 
c2
 = 0;

459 if(
Àngth1
<0 && 
Àngth2
<0) {

462 
c1
 = 
	`UTEXT_NEXT32
(
s1
);

463 
c2
 = 
	`UTEXT_NEXT32
(
s2
);

464 if(
c1
 !
c2
) {

466 } if(
c1
 =
U_SENTINEL
) {

471 if(
Àngth1
 < 0) {

472 
Àngth1
 = 
INT32_MIN
;

473 } i‡(
Àngth2
 < 0) {

474 
Àngth2
 = 
INT32_MIN
;

478 (
Àngth1
 > 0 ||Üígth1 =
INT32_MIN
Ë&& (
Àngth2
 > 0 ||Üength2 == INT32_MIN)) {

479 
c1
 = 
	`UTEXT_NEXT32
(
s1
);

480 
c2
 = 
	`UTEXT_NEXT32
(
s2
);

482 if(
c1
 !
c2
) {

484 } if(
c1
 =
U_SENTINEL
) {

488 i‡(
Àngth1
 !
INT32_MIN
) {

489 
Àngth1
 -= 1;

491 i‡(
Àngth2
 !
INT32_MIN
) {

492 
Àngth2
 -= 1;

496 if(
Àngth1
 <0 &&Üígth1 !
INT32_MIN
) {

497 if(
Àngth2
 <= 0) {

502 } if(
Àngth2
 <0 &&Üígth2 !
INT32_MIN
) {

503 i‡(
Àngth1
 <= 0) {

511  (
öt32_t
)
c1
-(öt32_t)
c2
;

512 
	}
}

514 
U_CAPI
 
öt32_t
 
U_EXPORT2


515 
	$uãxt_com∑ªN©iveLimô
(
UText
 *
s1
, 
öt64_t
 
limô1
,

516 
UText
 *
s2
, 
öt64_t
 
limô2
) {

517 
UCh¨32
 
c1
, 
c2
;

519 if(
limô1
<0 && 
limô2
<0) {

522 
c1
 = 
	`UTEXT_NEXT32
(
s1
);

523 
c2
 = 
	`UTEXT_NEXT32
(
s2
);

524 if(
c1
 !
c2
) {

525  (
öt32_t
)
c1
-(öt32_t)
c2
;

526 } if(
c1
 =
U_SENTINEL
) {

532 
öt64_t
 
ödex1
 = (
limô1
 >0 ? 
	`UTEXT_GETNATIVEINDEX
(
s1
) : 0);

533 
öt64_t
 
ödex2
 = (
limô2
 >0 ? 
	`UTEXT_GETNATIVEINDEX
(
s2
) : 0);

535 (
limô1
 < 0 || 
ödex1
 <Üimô1Ë&& (
limô2
 < 0 || 
ödex2
 <Üimit2)) {

536 
c1
 = 
	`UTEXT_NEXT32
(
s1
);

537 
c2
 = 
	`UTEXT_NEXT32
(
s2
);

539 if(
c1
 !
c2
) {

540  (
öt32_t
)
c1
-(öt32_t)
c2
;

541 } if(
c1
 =
U_SENTINEL
) {

545 i‡(
limô1
 >= 0) {

546 
ödex1
 = 
	`UTEXT_GETNATIVEINDEX
(
s1
);

548 i‡(
limô2
 >= 0) {

549 
ödex2
 = 
	`UTEXT_GETNATIVEINDEX
(
s2
);

553 if(
limô1
 >0 && 
ödex1
 >=Üimit1) {

554 if(
ödex2
 >
limô2
) {

560 if(
ödex1
 >
limô1
) {

567 
	}
}

569 
U_CAPI
 
öt32_t
 
U_EXPORT2


570 
	$uãxt_ˇ£Com∑ª
(
UText
 *
s1
, 
öt32_t
 
Àngth1
,

571 
UText
 *
s2
, 
öt32_t
 
Àngth2
,

572 
uöt32_t
 
›ti⁄s
, 
UEº‹Code
 *
pEº‹Code
) {

573 c⁄° 
UCa£Pr›s
 *
c•
;

576 c⁄° 
UCh¨
 *
p
;

577 
öt32_t
 
Àngth
;

580 
UCh¨
 
fﬁd1
[
UCASE_MAX_STRING_LENGTH
+1], 
fﬁd2
[UCASE_MAX_STRING_LENGTH+1];

581 
öt32_t
 
fﬁdOff£t1
, 
fﬁdOff£t2
, 
fﬁdLígth1
, 
fﬁdLígth2
;

584 
UCh¨32
 
c1
, 
c2
;

585 
uöt8_t
 
cLígth1
, 
cLígth2
;

588 if(
	`U_FAILURE
(*
pEº‹Code
)) {

591 if(
s1
==
NULL
 || 
s2
==NULL) {

592 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

596 
c•
=
	`uˇ£_gëSögÀt⁄
();

599 if(
Àngth1
 < 0) {

600 
Àngth1
 = 
INT32_MIN
;

602 i‡(
Àngth2
 < 0) {

603 
Àngth2
 = 
INT32_MIN
;

607 
fﬁdOff£t1
 = 
fﬁdOff£t2
 = 
fﬁdLígth1
 = 
fﬁdLígth2
 = 0;

610 (
fﬁdOff£t1
 < 
fﬁdLígth1
 || 
Àngth1
 > 0 ||Üígth1 =
INT32_MIN
) &&

611 (
fﬁdOff£t2
 < 
fﬁdLígth2
 || 
Àngth2
 > 0 ||Üígth2 =
INT32_MIN
)) {

612 if(
fﬁdOff£t1
 < 
fﬁdLígth1
) {

613 
	`U16_NEXT_UNSAFE
(
fﬁd1
, 
fﬁdOff£t1
, 
c1
);

614 
cLígth1
 = 0;

616 
c1
 = 
	`UTEXT_NEXT32
(
s1
);

617 i‡(
c1
 !
U_SENTINEL
) {

618 
cLígth1
 = 
	`U16_LENGTH
(
c1
);

620 
Àngth
 = 
	`uˇ£_toFuŒFﬁdög
(
c•
, 
c1
, &
p
, 
›ti⁄s
);

621 if(
Àngth
 >= 0) {

622 if(
Àngth
 <
UCASE_MAX_STRING_LENGTH
) {

623 
	`u_mem˝y
(
fﬁd1
, 
p
, 
Àngth
);

624 
fﬁdOff£t1
 = 0;

625 
fﬁdLígth1
 = 
Àngth
;

626 
	`U16_NEXT_UNSAFE
(
fﬁd1
, 
fﬁdOff£t1
, 
c1
);

628 
c1
 = 
Àngth
;

633 if(
Àngth1
 !
INT32_MIN
) {

634 
Àngth1
 -= 1;

638 if(
fﬁdOff£t2
 < 
fﬁdLígth2
) {

639 
	`U16_NEXT_UNSAFE
(
fﬁd2
, 
fﬁdOff£t2
, 
c2
);

640 
cLígth2
 = 0;

642 
c2
 = 
	`UTEXT_NEXT32
(
s2
);

643 i‡(
c2
 !
U_SENTINEL
) {

644 
cLígth2
 = 
	`U16_LENGTH
(
c2
);

646 
Àngth
 = 
	`uˇ£_toFuŒFﬁdög
(
c•
, 
c2
, &
p
, 
›ti⁄s
);

647 if(
Àngth
 >= 0) {

648 if(
Àngth
 <
UCASE_MAX_STRING_LENGTH
) {

649 
	`u_mem˝y
(
fﬁd2
, 
p
, 
Àngth
);

650 
fﬁdOff£t2
 = 0;

651 
fﬁdLígth2
 = 
Àngth
;

652 
	`U16_NEXT_UNSAFE
(
fﬁd2
, 
fﬁdOff£t2
, 
c2
);

654 
c2
 = 
Àngth
;

657 } if(
c1
 =
U_SENTINEL
) {

661 if(
Àngth2
 !
INT32_MIN
) {

662 
Àngth2
 -= 1;

666 if(
c1
 !
c2
) {

667  (
öt32_t
)
c1
-(öt32_t)
c2
;

672 
Àngth1
 +
fﬁdLígth1
 - 
fﬁdOff£t1
;

673 
Àngth2
 +
fﬁdLígth2
 - 
fﬁdOff£t2
;

675 if(
Àngth1
 <0 &&Üígth1 !
INT32_MIN
) {

676 if(
Àngth2
 <= 0) {

682 i‡(
Àngth1
 <= 0) {

688 
	}
}

690 
U_CAPI
 
öt32_t
 
U_EXPORT2


691 
	$uãxt_ˇ£Com∑ªN©iveLimô
(
UText
 *
s1
, 
öt64_t
 
limô1
,

692 
UText
 *
s2
, 
öt64_t
 
limô2
,

693 
uöt32_t
 
›ti⁄s
, 
UEº‹Code
 *
pEº‹Code
) {

694 c⁄° 
UCa£Pr›s
 *
c•
;

697 c⁄° 
UCh¨
 *
p
;

698 
öt32_t
 
Àngth
;

701 
UCh¨
 
fﬁd1
[
UCASE_MAX_STRING_LENGTH
+1], 
fﬁd2
[UCASE_MAX_STRING_LENGTH+1];

702 
öt32_t
 
fﬁdOff£t1
, 
fﬁdOff£t2
, 
fﬁdLígth1
, 
fﬁdLígth2
;

705 
UCh¨32
 
c1
, 
c2
;

708 
öt64_t
 
ödex1
, 
ödex2
;

711 if(
	`U_FAILURE
(*
pEº‹Code
)) {

714 if(
s1
==
NULL
 || 
s2
==NULL) {

715 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

719 
c•
=
	`uˇ£_gëSögÀt⁄
();

722 
ödex1
 = (
limô1
 >0 ? 
	`UTEXT_GETNATIVEINDEX
(
s1
) : 0);

723 
ödex2
 = (
limô2
 >0 ? 
	`UTEXT_GETNATIVEINDEX
(
s2
) : 0);

725 
fﬁdOff£t1
 = 
fﬁdOff£t2
 = 
fﬁdLígth1
 = 
fﬁdLígth2
 = 0;

728 (
fﬁdOff£t1
 < 
fﬁdLígth1
 || 
limô1
 < 0 || 
ödex1
 <Üimit1) &&

729 (
fﬁdOff£t2
 < 
fﬁdLígth2
 || 
limô2
 < 0 || 
ödex2
 <Üimit2)) {

730 if(
fﬁdOff£t1
 < 
fﬁdLígth1
) {

731 
	`U16_NEXT_UNSAFE
(
fﬁd1
, 
fﬁdOff£t1
, 
c1
);

733 
c1
 = 
	`UTEXT_NEXT32
(
s1
);

734 i‡(
c1
 !
U_SENTINEL
) {

735 
Àngth
 = 
	`uˇ£_toFuŒFﬁdög
(
c•
, 
c1
, &
p
, 
›ti⁄s
);

736 if(
Àngth
 >= 0) {

737 if(
Àngth
 <
UCASE_MAX_STRING_LENGTH
) {

738 
	`u_mem˝y
(
fﬁd1
, 
p
, 
Àngth
);

739 
fﬁdOff£t1
 = 0;

740 
fﬁdLígth1
 = 
Àngth
;

741 
	`U16_NEXT_UNSAFE
(
fﬁd1
, 
fﬁdOff£t1
, 
c1
);

743 
c1
 = 
Àngth
;

748 i‡(
limô1
 >= 0) {

749 
ödex1
 = 
	`UTEXT_GETNATIVEINDEX
(
s1
);

753 if(
fﬁdOff£t2
 < 
fﬁdLígth2
) {

754 
	`U16_NEXT_UNSAFE
(
fﬁd2
, 
fﬁdOff£t2
, 
c2
);

756 
c2
 = 
	`UTEXT_NEXT32
(
s2
);

757 i‡(
c2
 !
U_SENTINEL
) {

758 
Àngth
 = 
	`uˇ£_toFuŒFﬁdög
(
c•
, 
c2
, &
p
, 
›ti⁄s
);

759 if(
Àngth
 >= 0) {

760 if(
Àngth
 <
UCASE_MAX_STRING_LENGTH
) {

761 
	`u_mem˝y
(
fﬁd2
, 
p
, 
Àngth
);

762 
fﬁdOff£t2
 = 0;

763 
fﬁdLígth2
 = 
Àngth
;

764 
	`U16_NEXT_UNSAFE
(
fﬁd2
, 
fﬁdOff£t2
, 
c2
);

766 
c2
 = 
Àngth
;

769 } if(
c1
 =
U_SENTINEL
) {

773 i‡(
limô2
 >= 0) {

774 
ödex2
 = 
	`UTEXT_GETNATIVEINDEX
(
s2
);

778 if(
c1
 !
c2
) {

779  (
öt32_t
)
c1
-(öt32_t)
c2
;

784 
ödex1
 -
fﬁdLígth1
 - 
fﬁdOff£t1
;

785 
ödex2
 -
fﬁdLígth2
 - 
fﬁdOff£t2
;

787 if(
limô1
 >0 && 
ödex1
 >=Üimit1) {

788 if(
ödex2
 >
limô2
) {

794 if(
ödex1
 >
limô1
) {

800 
	}
}

803 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


804 
	$uãxt_isWrôabÀ
(c⁄° 
UText
 *
ut
)

806 
UBoﬁ
 
b
 = (
ut
->
¥ovidîPr›îtõs
 & 
	`I32_FLAG
(
UTEXT_PROVIDER_WRITABLE
)) != 0;

807  
b
;

808 
	}
}

811 
U_CAPI
 
U_EXPORT2


812 
	$uãxt_‰ìze
(
UText
 *
ut
) {

814 
ut
->
¥ovidîPr›îtõs
 &~(
	`I32_FLAG
(
UTEXT_PROVIDER_WRITABLE
));

815 
	}
}

818 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


819 
	$uãxt_hasMëaD©a
(c⁄° 
UText
 *
ut
)

821 
UBoﬁ
 
b
 = (
ut
->
¥ovidîPr›îtõs
 & 
	`I32_FLAG
(
UTEXT_PROVIDER_HAS_META_DATA
)) != 0;

822  
b
;

823 
	}
}

827 
U_CAPI
 
öt32_t
 
U_EXPORT2


828 
	$uãxt_ª∂a˚
(
UText
 *
ut
,

829 
öt64_t
 
«tiveSèπ
, i¡64_à
«tiveLimô
,

830 c⁄° 
UCh¨
 *
ª∂a˚mítText
, 
öt32_t
 
ª∂a˚mítLígth
,

831 
UEº‹Code
 *
°©us
)

833 i‡(
	`U_FAILURE
(*
°©us
)) {

836 i‡((
ut
->
¥ovidîPr›îtõs
 & 
	`I32_FLAG
(
UTEXT_PROVIDER_WRITABLE
)) == 0) {

837 *
°©us
 = 
U_NO_WRITE_PERMISSION
;

840 
öt32_t
 
i
 = 
ut
->
pFuncs
->
	`ª∂a˚
(ut, 
«tiveSèπ
, 
«tiveLimô
, 
ª∂a˚mítText
, 
ª∂a˚mítLígth
, 
°©us
);

841  
i
;

842 
	}
}

844 
U_CAPI
 
U_EXPORT2


845 
	$uãxt_c›y
(
UText
 *
ut
,

846 
öt64_t
 
«tiveSèπ
, i¡64_à
«tiveLimô
,

847 
öt64_t
 
de°Index
,

848 
UBoﬁ
 
move
,

849 
UEº‹Code
 *
°©us
)

851 i‡(
	`U_FAILURE
(*
°©us
)) {

854 i‡((
ut
->
¥ovidîPr›îtõs
 & 
	`I32_FLAG
(
UTEXT_PROVIDER_WRITABLE
)) == 0) {

855 *
°©us
 = 
U_NO_WRITE_PERMISSION
;

858 
ut
->
pFuncs
->
	`c›y
(ut, 
«tiveSèπ
, 
«tiveLimô
, 
de°Index
, 
move
, 
°©us
);

859 
	}
}

863 
U_CAPI
 
UText
 * 
U_EXPORT2


864 
	$uãxt_˛⁄e
(
UText
 *
de°
, c⁄° UTexà*
§c
, 
UBoﬁ
 
dìp
, UBoﬁ 
ªadO∆y
, 
UEº‹Code
 *
°©us
) {

865 
UText
 *
ªsu…
;

866 
ªsu…
 = 
§c
->
pFuncs
->
	`˛⁄e
(
de°
, src, 
dìp
, 
°©us
);

867 i‡(
ªadO∆y
) {

868 
	`uãxt_‰ìze
(
ªsu…
);

870  
ªsu…
;

871 
	}
}

885 
	mUTEXT_HEAP_ALLOCATED
 = 1,

888 
	mUTEXT_EXTRA_HEAP_ALLOCATED
 = 2,

894 
	mUTEXT_OPEN
 = 4

903 
	sExãndedUText
 {

904 
UText
 
	mut
;

905 
UAlig√dMem‹y
 
	mexãnsi⁄
;

908 c⁄° 
UText
 
	gem±yText
 = 
UTEXT_INITIALIZER
;

910 
U_CAPI
 
UText
 * 
U_EXPORT2


911 
	$uãxt_£tup
(
UText
 *
ut
, 
öt32_t
 
exåaS∑˚
, 
UEº‹Code
 *
°©us
) {

912 i‡(
	`U_FAILURE
(*
°©us
)) {

913  
ut
;

916 i‡(
ut
 =
NULL
) {

918 
öt32_t
 
•a˚Requúed
 = (
UText
);

919 i‡(
exåaS∑˚
 > 0) {

920 
•a˚Requúed
 = (
ExãndedUText
Ë+ 
exåaS∑˚
 - (
UAlig√dMem‹y
);

922 
ut
 = (
UText
 *)
	`u¥v_mÆloc
(
•a˚Requúed
);

923 i‡(
ut
 =
NULL
) {

924 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

925  
NULL
;

927 *
ut
 = 
em±yText
;

928 
ut
->
Êags
 |
UTEXT_HEAP_ALLOCATED
;

929 i‡(
•a˚Requúed
>0) {

930 
ut
->
exåaSize
 = 
exåaS∑˚
;

931 
ut
->
pExåa
 = &((
ExãndedUText
 *)ut)->
exãnsi⁄
;

937 i‡(
ut
->
magic
 !
UTEXT_MAGIC
) {

938 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

939  
ut
;

943 i‡((
ut
->
Êags
 & 
UTEXT_OPEN
Ë&& ut->
pFuncs
->
˛o£
 !
NULL
) {

944 
ut
->
pFuncs
->
	`˛o£
(ut);

946 
ut
->
Êags
 &~
UTEXT_OPEN
;

950 i‡(
exåaS∑˚
 > 
ut
->
exåaSize
) {

953 i‡(
ut
->
Êags
 & 
UTEXT_EXTRA_HEAP_ALLOCATED
) {

954 
	`u¥v_‰ì
(
ut
->
pExåa
);

955 
ut
->
exåaSize
 = 0;

957 
ut
->
pExåa
 = 
	`u¥v_mÆloc
(
exåaS∑˚
);

958 i‡(
ut
->
pExåa
 =
NULL
) {

959 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

961 
ut
->
exåaSize
 = 
exåaS∑˚
;

962 
ut
->
Êags
 |
UTEXT_EXTRA_HEAP_ALLOCATED
;

966 i‡(
	`U_SUCCESS
(*
°©us
)) {

967 
ut
->
Êags
 |
UTEXT_OPEN
;

971 
ut
->
c⁄ãxt
 = 
NULL
;

972 
ut
->
chunkC⁄ã¡s
 = 
NULL
;

973 
ut
->
p
 = 
NULL
;

974 
ut
->
q
 = 
NULL
;

975 
ut
->
r
 = 
NULL
;

976 
ut
->
a
 = 0;

977 
ut
->
b
 = 0;

978 
ut
->
c
 = 0;

979 
ut
->
chunkOff£t
 = 0;

980 
ut
->
chunkLígth
 = 0;

981 
ut
->
chunkN©iveSèπ
 = 0;

982 
ut
->
chunkN©iveLimô
 = 0;

983 
ut
->
«tiveIndexögLimô
 = 0;

984 
ut
->
¥ovidîPr›îtõs
 = 0;

985 
ut
->
¥ivA
 = 0;

986 
ut
->
¥ivB
 = 0;

987 
ut
->
¥ivC
 = 0;

988 
ut
->
¥ivP
 = 
NULL
;

989 i‡(
ut
->
pExåa
!=
NULL
 && ut->
exåaSize
>0)

990 
	`u¥v_mem£t
(
ut
->
pExåa
, 0, ut->
exåaSize
);

993  
ut
;

994 
	}
}

997 
U_CAPI
 
UText
 * 
U_EXPORT2


998 
	$uãxt_˛o£
(
UText
 *
ut
) {

999 i‡(
ut
==
NULL
 ||

1000 
ut
->
magic
 !
UTEXT_MAGIC
 ||

1001 (
ut
->
Êags
 & 
UTEXT_OPEN
) == 0)

1005  
ut
;

1010 i‡(
ut
->
pFuncs
->
˛o£
 !
NULL
) {

1011 
ut
->
pFuncs
->
	`˛o£
(ut);

1013 
ut
->
Êags
 &~
UTEXT_OPEN
;

1017 i‡(
ut
->
Êags
 & 
UTEXT_EXTRA_HEAP_ALLOCATED
) {

1018 
	`u¥v_‰ì
(
ut
->
pExåa
);

1019 
ut
->
pExåa
 = 
NULL
;

1020 
ut
->
Êags
 &~
UTEXT_EXTRA_HEAP_ALLOCATED
;

1021 
ut
->
exåaSize
 = 0;

1027 
ut
->
pFuncs
 = 
NULL
;

1029 i‡(
ut
->
Êags
 & 
UTEXT_HEAP_ALLOCATED
) {

1033 
ut
->
magic
 = 0;

1034 
	`u¥v_‰ì
(
ut
);

1035 
ut
 = 
NULL
;

1037  
ut
;

1038 
	}
}

1051 
	$övÆid©eChunk
(
UText
 *
ut
) {

1052 
ut
->
chunkLígth
 = 0;

1053 
ut
->
chunkN©iveLimô
 = 0;

1054 
ut
->
chunkN©iveSèπ
 = 0;

1055 
ut
->
chunkOff£t
 = 0;

1056 
ut
->
«tiveIndexögLimô
 = 0;

1057 
	}
}

1064 
öt32_t


1065 
	$pöIndex
(
öt64_t
 &
ödex
, i¡64_à
limô
) {

1066 i‡(
ödex
<0) {

1067 
ödex
 = 0;

1068 } i‡(
ödex
 > 
limô
) {

1069 
ödex
 = 
limô
;

1071  (
öt32_t
)
ödex
;

1072 
	}
}

1075 
U_CDECL_BEGIN


1083 
	$adju°Poöãr
(
UText
 *
de°
, c⁄° **
de°På
, c⁄° UTexà*
§c
) {

1085 *
d±r
 = (*)*
de°På
;

1086 *
dUText
 = (*)
de°
;

1087 *
sUText
 = (*)
§c
;

1089 i‡(
d±r
 >(*)
§c
->
pExåa
 && d±∏< ((*)§c->pExåa)+§c->
exåaSize
) {

1092 *
de°På
 = ((*)
de°
->
pExåa
Ë+ (
d±r
 - (*)
§c
->pExtra);

1093 } i‡(
d±r
>=
sUText
 && d±∏< sUText+
§c
->
sizeOfSåu˘
) {

1096 *
de°På
 = 
dUText
 + (
d±r
-
sUText
);

1098 
	}
}

1105 
UText
 * 
U_CALLCONV


1106 
	$shÆlowTextCl⁄e
(
UText
 * 
de°
, c⁄° UTexà* 
§c
, 
UEº‹Code
 * 
°©us
) {

1107 i‡(
	`U_FAILURE
(*
°©us
)) {

1108  
NULL
;

1110 
öt32_t
 
§cExåaSize
 = 
§c
->
exåaSize
;

1115 
de°
 = 
	`uãxt_£tup
(de°, 
§cExåaSize
, 
°©us
);

1116 i‡(
	`U_FAILURE
(*
°©us
)) {

1117  
de°
;

1126 *
de°Exåa
 = 
de°
->
pExåa
;

1127 
öt32_t
 
Êags
 = 
de°
->flags;

1134 
sizeToC›y
 = 
§c
->
sizeOfSåu˘
;

1135 i‡(
sizeToC›y
 > 
de°
->
sizeOfSåu˘
) {

1136 
sizeToC›y
 = 
de°
->
sizeOfSåu˘
;

1138 
	`u¥v_mem˝y
(
de°
, 
§c
, 
sizeToC›y
);

1139 
de°
->
pExåa
 = 
de°Exåa
;

1140 
de°
->
Êags
 = flags;

1141 i‡(
§cExåaSize
 > 0) {

1142 
	`u¥v_mem˝y
(
de°
->
pExåa
, 
§c
->pExåa, 
§cExåaSize
);

1149 
	`adju°Poöãr
(
de°
, &de°->
c⁄ãxt
, 
§c
);

1150 
	`adju°Poöãr
(
de°
, &de°->
p
, 
§c
);

1151 
	`adju°Poöãr
(
de°
, &de°->
q
, 
§c
);

1152 
	`adju°Poöãr
(
de°
, &de°->
r
, 
§c
);

1153 
	`adju°Poöãr
(
de°
, (c⁄° **)&de°->
chunkC⁄ã¡s
, 
§c
);

1155  
de°
;

1156 
	}
}

1159 
U_CDECL_END


1184 íum { 
	mUTF8_TEXT_CHUNK_SIZE
=32 };

1200 
	sUTF8Buf
 {

1201 
öt32_t
 
	mbufN©iveSèπ
;

1202 
öt32_t
 
	mbufN©iveLimô
;

1203 
öt32_t
 
	mbufSèπIdx
;

1204 
öt32_t
 
	mbufLimôIdx
;

1205 
öt32_t
 
	mbufNILimô
;

1206 
öt32_t
 
	mtoUCh¨sM≠Sèπ
;

1211 
UCh¨
 
	mbuf
[
UTF8_TEXT_CHUNK_SIZE
+4];

1217 
uöt8_t
 
	mm≠ToN©ive
[
UTF8_TEXT_CHUNK_SIZE
+4];

1222 
uöt8_t
 
	mm≠ToUCh¨s
[
UTF8_TEXT_CHUNK_SIZE
*3+6];

1224 
öt32_t
 
	mÆign
;

1227 
U_CDECL_BEGIN


1235 
öt64_t
 
U_CALLCONV


1236 
	$utf8TextLígth
(
UText
 *
ut
) {

1237 i‡(
ut
->
b
 < 0) {

1240 c⁄° *
r
 = (c⁄° *)
ut
->
c⁄ãxt
 + ut->
c
;

1241 *
r
 != 0) {

1242 
r
++;

1244 i‡((
r
 - (c⁄° *)
ut
->
c⁄ãxt
) < 0x7fffffff) {

1245 
ut
->
b
 = (
öt32_t
)(
r
 - (c⁄° *)ut->
c⁄ãxt
);

1249 
ut
->
b
 = 0x7fffffff;

1251 
ut
->
¥ovidîPr›îtõs
 &~
	`I32_FLAG
(
UTEXT_PROVIDER_LENGTH_IS_EXPENSIVE
);

1253  
ut
->
b
;

1254 
	}
}

1261 
UBoﬁ
 
U_CALLCONV


1262 
	$utf8TextAc˚ss
(
UText
 *
ut
, 
öt64_t
 
ödex
, 
UBoﬁ
 
f‹w¨d
) {

1269 c⁄° 
uöt8_t
 *
s8
=(c⁄° uöt8_à*)
ut
->
c⁄ãxt
;

1270 
UTF8Buf
 *
u8b
 = 
NULL
;

1271 
öt32_t
 
Àngth
 = 
ut
->
b
;

1272 
öt32_t
 
ix
(öt32_t)
ödex
;

1273 
öt32_t
 
m≠Index
 = 0;

1274 i‡(
ödex
<0) {

1275 
ix
=0;

1276 } i‡(
ödex
 > 0x7fffffff) {

1278 
ix
 = 0x7fffffff;

1282 i‡(
ix
>
Àngth
) {

1283 i‡(
Àngth
>=0) {

1284 
ix
=
Àngth
;

1285 } i‡(
ix
>=
ut
->
c
) {

1290 
ut
->
c
<
ix
 && 
s8
[ut->c]!=0) {

1291 
ut
->
c
++;

1294 i‡(
s8
[
ut
->
c
] == 0) {

1297 
ix
 = 
ut
->
c
;

1298 
ut
->
b
 = ut->
c
;

1299 
Àngth
 = 
ut
->
c
;

1300 
ut
->
¥ovidîPr›îtõs
 &~
	`I32_FLAG
(
UTEXT_PROVIDER_LENGTH_IS_EXPENSIVE
);

1308 i‡(
f‹w¨d
) {

1309 i‡(
ix
==
ut
->
chunkN©iveLimô
) {

1311 i‡(
ix
==
Àngth
) {

1315 
ut
->
chunkOff£t
 = ut->
chunkLígth
;

1316  
FALSE
;

1320 
UTF8Buf
 *
ÆtB
 = (UTF8Bu‡*)
ut
->
q
;

1321 i‡(
ix
>=
ÆtB
->
bufN©iveSèπ
 && ix<ÆtB->
bufN©iveLimô
) {

1322 
sw≠Buf„rs
;

1332 
u8b
 = (
UTF8Buf
 *)
ut
->
q
;

1333 i‡(
ix
>=
u8b
->
bufN©iveSèπ
 && ix<u8b->
bufN©iveLimô
) {

1335 
sw≠Buf„rs
;

1337 i‡(
ix
 =
Àngth
) {

1341 i‡(
ix
 =
ut
->
chunkN©iveLimô
) {

1344 
ut
->
chunkOff£t
 = ut->
chunkLígth
;

1345  
FALSE
;

1347 i‡(
ix
 =
u8b
->
bufN©iveLimô
) {

1350 
sw≠Buf„rsAndFaû
;

1354 
makeStubBuf„r
;

1357 i‡(
ix
<
ut
->
chunkN©iveSèπ
 || ix>=ut->
chunkN©iveLimô
) {

1359 
fûlF‹w¨d
;

1363 
u8b
 = (
UTF8Buf
 *)
ut
->
p
;

1364 
m≠Index
 = 
ix
 - 
u8b
->
toUCh¨sM≠Sèπ
;

1365 
ut
->
chunkOff£t
 = 
u8b
->
m≠ToUCh¨s
[
m≠Index
] - u8b->
bufSèπIdx
;

1366  
TRUE
;

1376 i‡(
ix
==
ut
->
chunkN©iveSèπ
) {

1378 i‡(
ix
==0) {

1382 
ut
->
chunkOff£t
 = 0;

1383  
FALSE
;

1387 
UTF8Buf
 *
ÆtB
 = (UTF8Bu‡*)
ut
->
q
;

1388 i‡(
ix
>
ÆtB
->
bufN©iveSèπ
 && ix<˜…B->
bufN©iveLimô
) {

1389 
sw≠Buf„rs
;

1399 
u8b
 = (
UTF8Buf
 *)
ut
->
q
;

1400 i‡(
ix
>
u8b
->
bufN©iveSèπ
 && ix<=u8b->
bufN©iveLimô
) {

1402 
sw≠Buf„rs
;

1407 i‡(
ix
==0) {

1408 i‡(
u8b
->
bufN©iveSèπ
==0) {

1411 
sw≠Buf„rsAndFaû
;

1416 
makeStubBuf„r
;

1420 i‡(
ix
<=
ut
->
chunkN©iveSèπ
 || ix>ut->
chunkN©iveLimô
) {

1422 
fûlRevî£
;

1427 
u8b
 = (
UTF8Buf
 *)
ut
->
p
;

1428 
m≠Index
 = 
ix
 - 
u8b
->
toUCh¨sM≠Sèπ
;

1429 
ut
->
chunkOff£t
 = 
u8b
->
m≠ToUCh¨s
[
m≠Index
] - u8b->
bufSèπIdx
;

1430 i‡(
ut
->
chunkOff£t
==0) {

1436  
FALSE
;

1438  
TRUE
;

1443 
sw≠Buf„rs
:

1448 
u8b
 = (
UTF8Buf
 *)
ut
->
q
;

1449 
ut
->
q
 = ut->
p
;

1450 
ut
->
p
 = 
u8b
;

1451 
ut
->
chunkC⁄ã¡s
 = &
u8b
->
buf
[u8b->
bufSèπIdx
];

1452 
ut
->
chunkLígth
 = 
u8b
->
bufLimôIdx
 - u8b->
bufSèπIdx
;

1453 
ut
->
chunkN©iveSèπ
 = 
u8b
->
bufN©iveSèπ
;

1454 
ut
->
chunkN©iveLimô
 = 
u8b
->
bufN©iveLimô
;

1455 
ut
->
«tiveIndexögLimô
 = 
u8b
->
bufNILimô
;

1460 
	`U_ASSERT
(
ix
>=
u8b
->
bufN©iveSèπ
);

1461 
	`U_ASSERT
(
ix
<=
u8b
->
bufN©iveLimô
);

1462 
m≠Index
 = 
ix
 - 
u8b
->
toUCh¨sM≠Sèπ
;

1463 
	`U_ASSERT
(
m≠Index
>=0);

1464 
	`U_ASSERT
(
m≠Index
<(
öt32_t
)(
u8b
->
m≠ToUCh¨s
));

1465 
ut
->
chunkOff£t
 = 
u8b
->
m≠ToUCh¨s
[
m≠Index
] - u8b->
bufSèπIdx
;

1467  
TRUE
;

1471 
sw≠Buf„rsAndFaû
:

1480 
u8b
 = (
UTF8Buf
 *)
ut
->
q
;

1481 
ut
->
q
 = ut->
p
;

1482 
ut
->
p
 = 
u8b
;

1483 
ut
->
chunkC⁄ã¡s
 = &
u8b
->
buf
[u8b->
bufSèπIdx
];

1484 
ut
->
chunkLígth
 = 
u8b
->
bufLimôIdx
 - u8b->
bufSèπIdx
;

1485 
ut
->
chunkN©iveSèπ
 = 
u8b
->
bufN©iveSèπ
;

1486 
ut
->
chunkN©iveLimô
 = 
u8b
->
bufN©iveLimô
;

1487 
ut
->
«tiveIndexögLimô
 = 
u8b
->
bufNILimô
;

1492 i‡(
ix
==
u8b
->
bufN©iveLimô
) {

1493 
ut
->
chunkOff£t
 = ut->
chunkLígth
;

1495 
ut
->
chunkOff£t
 = 0;

1496 
	`U_ASSERT
(
ix
 =
u8b
->
bufN©iveSèπ
);

1498  
FALSE
;

1500 
makeStubBuf„r
:

1505 
u8b
 = (
UTF8Buf
 *)
ut
->
q
;

1506 
u8b
->
bufN©iveSèπ
 = 
ix
;

1507 
u8b
->
bufN©iveLimô
 = 
ix
;

1508 
u8b
->
bufSèπIdx
 = 0;

1509 
u8b
->
bufLimôIdx
 = 0;

1510 
u8b
->
bufNILimô
 = 0;

1511 
u8b
->
toUCh¨sM≠Sèπ
 = 
ix
;

1512 
u8b
->
m≠ToN©ive
[0] = 0;

1513 
u8b
->
m≠ToUCh¨s
[0] = 0;

1514 
sw≠Buf„rsAndFaû
;

1518 
fûlF‹w¨d
:

1521 
	`U8_SET_CP_START
(
s8
, 0, 
ix
);

1526 
UTF8Buf
 *
u8b
 = (UTF8Bu‡*)
ut
->
q
;

1527 
ut
->
q
 = ut->
p
;

1528 
ut
->
p
 = 
u8b
;

1530 
öt32_t
 
°rLí
 = 
ut
->
b
;

1531 
UBoﬁ
 
nulTîmö©ed
 = 
FALSE
;

1532 i‡(
°rLí
 < 0) {

1533 
°rLí
 = 0x7fffffff;

1534 
nulTîmö©ed
 = 
TRUE
;

1537 
UCh¨
 *
buf
 = 
u8b
->buf;

1538 
uöt8_t
 *
m≠ToN©ive
 = 
u8b
->mapToNative;

1539 
uöt8_t
 *
m≠ToUCh¨s
 = 
u8b
->mapToUChars;

1540 
öt32_t
 
de°Ix
 = 0;

1541 
öt32_t
 
§cIx
 = 
ix
;

1542 
UBoﬁ
 
£íN⁄Ascii
 = 
FALSE
;

1543 
UCh¨32
 
c
 = 0;

1546 
de°Ix
<
UTF8_TEXT_CHUNK_SIZE
) {

1547 
c
 = 
s8
[
§cIx
];

1548 i‡(
c
>0 && c<0x80) {

1551 
buf
[
de°Ix
] = (
UCh¨
)
c
;

1552 
m≠ToN©ive
[
de°Ix
] = (
uöt8_t
)(
§cIx
 - 
ix
);

1553 
m≠ToUCh¨s
[
§cIx
-
ix
] = (
uöt8_t
)
de°Ix
;

1554 
§cIx
++;

1555 
de°Ix
++;

1558 i‡(
£íN⁄Ascii
 =
FALSE
) {

1559 
£íN⁄Ascii
 = 
TRUE
;

1560 
u8b
->
bufNILimô
 = 
de°Ix
;

1563 
öt32_t
 
cIx
 = 
§cIx
;

1564 
öt32_t
 
dIx
 = 
de°Ix
;

1565 
öt32_t
 
dIxSaved
 = 
de°Ix
;

1566 
	`U8_NEXT
(
s8
, 
§cIx
, 
°rLí
, 
c
);

1567 i‡(
c
==0 && 
nulTîmö©ed
) {

1568 
§cIx
--;

1571 i‡(
c
<0) {

1573 
c
 = 0x0fffd;

1576 
	`U16_APPEND_UNSAFE
(
buf
, 
de°Ix
, 
c
);

1578 
m≠ToN©ive
[
dIx
++] = (
uöt8_t
)(
cIx
 - 
ix
);

1579 } 
dIx
 < 
de°Ix
);

1582 
m≠ToUCh¨s
[
cIx
++ - 
ix
] = (
uöt8_t
)
dIxSaved
;

1583 } 
cIx
 < 
§cIx
);

1585 i‡(
§cIx
>=
°rLí
) {

1593 
m≠ToN©ive
[
de°Ix
] = (
uöt8_t
)(
§cIx
 - 
ix
);

1594 
m≠ToUCh¨s
[
§cIx
 - 
ix
] = (
uöt8_t
)
de°Ix
;

1597 
u8b
->
bufN©iveSèπ
 = 
ix
;

1598 
u8b
->
bufN©iveLimô
 = 
§cIx
;

1599 
u8b
->
bufSèπIdx
 = 0;

1600 
u8b
->
bufLimôIdx
 = 
de°Ix
;

1601 i‡(
£íN⁄Ascii
 =
FALSE
) {

1602 
u8b
->
bufNILimô
 = 
de°Ix
;

1604 
u8b
->
toUCh¨sM≠Sèπ
 = u8b->
bufN©iveSèπ
;

1607 
ut
->
chunkC⁄ã¡s
 = 
buf
;

1608 
ut
->
chunkOff£t
 = 0;

1609 
ut
->
chunkLígth
 = 
u8b
->
bufLimôIdx
;

1610 
ut
->
chunkN©iveSèπ
 = 
u8b
->
bufN©iveSèπ
;

1611 
ut
->
chunkN©iveLimô
 = 
u8b
->
bufN©iveLimô
;

1612 
ut
->
«tiveIndexögLimô
 = 
u8b
->
bufNILimô
;

1616 i‡(
nulTîmö©ed
 && 
§cIx
>
ut
->
c
) {

1617 
ut
->
c
 = 
§cIx
;

1618 i‡(
c
==0) {

1621 
ut
->
b
 = 
§cIx
;

1622 
ut
->
¥ovidîPr›îtõs
 &~
	`I32_FLAG
(
UTEXT_PROVIDER_LENGTH_IS_EXPENSIVE
);

1625  
TRUE
;

1629 
fûlRevî£
:

1634 i‡(
ix
 !
ut
->
b
) {

1635 
	`U8_SET_CP_START
(
s8
, 0, 
ix
);

1641 
UTF8Buf
 *
u8b
 = (UTF8Bu‡*)
ut
->
q
;

1642 
ut
->
q
 = ut->
p
;

1643 
ut
->
p
 = 
u8b
;

1645 
UCh¨
 *
buf
 = 
u8b
->buf;

1646 
uöt8_t
 *
m≠ToN©ive
 = 
u8b
->mapToNative;

1647 
uöt8_t
 *
m≠ToUCh¨s
 = 
u8b
->mapToUChars;

1648 
öt32_t
 
toUCh¨sM≠Sèπ
 = 
ix
 - (
UTF8_TEXT_CHUNK_SIZE
*3 + 1);

1649 
öt32_t
 
de°Ix
 = 
UTF8_TEXT_CHUNK_SIZE
+2;

1653 
öt32_t
 
§cIx
 = 
ix
;

1654 
öt32_t
 
bufNILimô
 = 
de°Ix
;

1655 
UCh¨32
 
c
;

1660 
m≠ToN©ive
[
de°Ix
] = (
uöt8_t
)(
§cIx
 - 
toUCh¨sM≠Sèπ
);

1661 
m≠ToUCh¨s
[
§cIx
 - 
toUCh¨sM≠Sèπ
] = (
uöt8_t
)
de°Ix
;

1666 
de°Ix
>2 && (
§cIx
 - 
toUCh¨sM≠Sèπ
 > 5) && (srcIx > 0)) {

1667 
§cIx
--;

1668 
de°Ix
--;

1671 
c
 = 
s8
[
§cIx
];

1672 i‡(
c
<0x80) {

1674 
buf
[
de°Ix
] = (
UCh¨
)
c
;

1675 
m≠ToUCh¨s
[
§cIx
 - 
toUCh¨sM≠Sèπ
] = (
uöt8_t
)
de°Ix
;

1676 
m≠ToN©ive
[
de°Ix
] = (
uöt8_t
)(
§cIx
 - 
toUCh¨sM≠Sèπ
);

1680 
öt32_t
 
sIx
 = 
§cIx
;

1686 i‡(
c
<=0xbf) {

1687 
c
=
	`utf8_¥evCh¨Sa„Body
(
s8
, 0, &
§cIx
, c, -1);

1690 
c
=0x0fffd;

1694 i‡(
c
<0x10000) {

1695 
buf
[
de°Ix
] = (
UCh¨
)
c
;

1696 
m≠ToN©ive
[
de°Ix
] = (
uöt8_t
)(
§cIx
 - 
toUCh¨sM≠Sèπ
);

1698 
buf
[
de°Ix
] = 
	`U16_TRAIL
(
c
);

1699 
m≠ToN©ive
[
de°Ix
] = (
uöt8_t
)(
§cIx
 - 
toUCh¨sM≠Sèπ
);

1700 
buf
[--
de°Ix
] = 
	`U16_LEAD
(
c
);

1701 
m≠ToN©ive
[
de°Ix
] = (
uöt8_t
)(
§cIx
 - 
toUCh¨sM≠Sèπ
);

1706 
m≠ToUCh¨s
[
sIx
-- - 
toUCh¨sM≠Sèπ
] = (
uöt8_t
)
de°Ix
;

1707 } 
sIx
 >
§cIx
);

1713 
bufNILimô
 = 
de°Ix
;

1716 
u8b
->
bufN©iveSèπ
 = 
§cIx
;

1717 
u8b
->
bufN©iveLimô
 = 
ix
;

1718 
u8b
->
bufSèπIdx
 = 
de°Ix
;

1719 
u8b
->
bufLimôIdx
 = 
UTF8_TEXT_CHUNK_SIZE
+2;

1720 
u8b
->
bufNILimô
 = bufNILimô - u8b->
bufSèπIdx
;

1721 
u8b
->
toUCh¨sM≠Sèπ
 =ÅoUCharsMapStart;

1723 
ut
->
chunkC⁄ã¡s
 = &
buf
[
u8b
->
bufSèπIdx
];

1724 
ut
->
chunkLígth
 = 
u8b
->
bufLimôIdx
 - u8b->
bufSèπIdx
;

1725 
ut
->
chunkOff£t
 = ut->
chunkLígth
;

1726 
ut
->
chunkN©iveSèπ
 = 
u8b
->
bufN©iveSèπ
;

1727 
ut
->
chunkN©iveLimô
 = 
u8b
->
bufN©iveLimô
;

1728 
ut
->
«tiveIndexögLimô
 = 
u8b
->
bufNILimô
;

1729  
TRUE
;

1732 
	}
}

1741 
UCh¨
*

1742 
	$uãxt_°rFromUTF8
(
UCh¨
 *
de°
,

1743 
öt32_t
 
de°C≠acôy
,

1744 
öt32_t
 *
pDe°Lígth
,

1745 c⁄° * 
§c
,

1746 
öt32_t
 
§cLígth
,

1747 
UEº‹Code
 *
pEº‹Code


1751 
UCh¨
 *
pDe°
 = 
de°
;

1752 
UCh¨
 *
pDe°Limô
 = 
de°
+
de°C≠acôy
;

1753 
UCh¨32
 
ch
=0;

1754 
öt32_t
 
ödex
 = 0;

1755 
öt32_t
 
ªqLígth
 = 0;

1756 
uöt8_t
* 
pSrc
 = (uöt8_t*Ë
§c
;

1759 (
ödex
 < 
§cLígth
)&&(
pDe°
<
pDe°Limô
)){

1760 
ch
 = 
pSrc
[
ödex
++];

1761 if(
ch
 <=0x7f){

1762 *
pDe°
++=(
UCh¨
)
ch
;

1764 
ch
=
	`utf8_√xtCh¨Sa„Body
(
pSrc
, &
ödex
, 
§cLígth
, ch, -1);

1765 if(
ch
<0){

1766 
ch
 = 0xfffd;

1768 if(
	`U_IS_BMP
(
ch
)){

1769 *(
pDe°
++)=(
UCh¨
)
ch
;

1771 *(
pDe°
++)=
	`UTF16_LEAD
(
ch
);

1772 if(
pDe°
<
pDe°Limô
){

1773 *(
pDe°
++)=
	`UTF16_TRAIL
(
ch
);

1775 
ªqLígth
++;

1782 
ödex
 < 
§cLígth
){

1783 
ch
 = 
pSrc
[
ödex
++];

1784 if(
ch
 <= 0x7f){

1785 
ªqLígth
++;

1787 
ch
=
	`utf8_√xtCh¨Sa„Body
(
pSrc
, &
ödex
, 
§cLígth
, ch, -1);

1788 if(
ch
<0){

1789 
ch
 = 0xfffd;

1791 
ªqLígth
+=
	`U16_LENGTH
(
ch
);

1795 
ªqLígth
+=(
öt32_t
)(
pDe°
 - 
de°
);

1797 if(
pDe°Lígth
){

1798 *
pDe°Lígth
 = 
ªqLígth
;

1802 
	`u_ãrmö©eUCh¨s
(
de°
,
de°C≠acôy
,
ªqLígth
,
pEº‹Code
);

1804  
de°
;

1805 
	}
}

1809 
öt32_t
 
U_CALLCONV


1810 
	$utf8TextExåa˘
(
UText
 *
ut
,

1811 
öt64_t
 
°¨t
, i¡64_à
limô
,

1812 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

1813 
UEº‹Code
 *
pEº‹Code
) {

1814 if(
	`U_FAILURE
(*
pEº‹Code
)) {

1817 if(
de°C≠acôy
<0 || (
de°
==
NULL
 && destCapacity>0)) {

1818 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

1821 
öt32_t
 
Àngth
 = 
ut
->
b
;

1822 
öt32_t
 
°¨t32
 = 
	`pöIndex
(
°¨t
, 
Àngth
);

1823 
öt32_t
 
limô32
 = 
	`pöIndex
(
limô
, 
Àngth
);

1825 if(
°¨t32
>
limô32
) {

1826 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

1834 c⁄° 
uöt8_t
 *
buf
 = (c⁄° uöt8_à*)
ut
->
c⁄ãxt
;

1835 
i
;

1836 i‡(
°¨t32
 < 
ut
->
chunkN©iveLimô
) {

1837 
i
=0; i<3; i++) {

1838 i‡(
	`U8_IS_SINGLE
(
buf
[
°¨t32
]Ë|| 
	`U8_IS_LEAD
(buf[start32]) || start32==0) {

1841 
°¨t32
--;

1845 i‡(
limô32
 < 
ut
->
chunkN©iveLimô
) {

1846 
i
=0; i<3; i++) {

1847 i‡(
	`U8_IS_SINGLE
(
buf
[
limô32
]Ë|| 
	`U8_IS_LEAD
(buf[limit32]) ||Üimit32==0) {

1850 
limô32
--;

1855 
öt32_t
 
de°Lígth
=0;

1856 
	`uãxt_°rFromUTF8
(
de°
, 
de°C≠acôy
, &
de°Lígth
,

1857 (c⁄° *)
ut
->
c⁄ãxt
+
°¨t32
, 
limô32
-start32,

1858 
pEº‹Code
);

1859 
	`utf8TextAc˚ss
(
ut
, 
limô32
, 
TRUE
);

1860  
de°Lígth
;

1861 
	}
}

1867 
öt64_t
 
U_CALLCONV


1868 
	$utf8TextM≠Off£tToN©ive
(c⁄° 
UText
 *
ut
) {

1870 
UTF8Buf
 *
u8b
 = (UTF8Bu‡*)
ut
->
p
;

1871 
	`U_ASSERT
(
ut
->
chunkOff£t
>ut->
«tiveIndexögLimô
 && ut->chunkOff£t<=ut->
chunkLígth
);

1872 
öt32_t
 
«tiveOff£t
 = 
u8b
->
m≠ToN©ive
[
ut
->
chunkOff£t
 + u8b->
bufSèπIdx
] + u8b->
toUCh¨sM≠Sèπ
;

1873 
	`U_ASSERT
(
«tiveOff£t
 >
ut
->
chunkN©iveSèπ
 &&Ç©iveOff£à<ut->
chunkN©iveLimô
);

1874  
«tiveOff£t
;

1875 
	}
}

1880 
öt32_t
 
U_CALLCONV


1881 
	$utf8TextM≠IndexToUTF16
(c⁄° 
UText
 *
ut
, 
öt64_t
 
ödex64
) {

1882 
	`U_ASSERT
(
ödex64
 <= 0x7fffffff);

1883 
öt32_t
 
ödex
 = (öt32_t)
ödex64
;

1884 
UTF8Buf
 *
u8b
 = (UTF8Bu‡*)
ut
->
p
;

1885 
	`U_ASSERT
(
ödex
>=
ut
->
chunkN©iveSèπ
+ut->
«tiveIndexögLimô
);

1886 
	`U_ASSERT
(
ödex
<=
ut
->
chunkN©iveLimô
);

1887 
öt32_t
 
m≠Index
 = 
ödex
 - 
u8b
->
toUCh¨sM≠Sèπ
;

1888 
öt32_t
 
off£t
 = 
u8b
->
m≠ToUCh¨s
[
m≠Index
] - u8b->
bufSèπIdx
;

1889 
	`U_ASSERT
(
off£t
>=0 && off£t<=
ut
->
chunkLígth
);

1890  
off£t
;

1891 
	}
}

1893 
UText
 * 
U_CALLCONV


1894 
	$utf8TextCl⁄e
(
UText
 *
de°
, c⁄° UTexà*
§c
, 
UBoﬁ
 
dìp
, 
UEº‹Code
 *
°©us
)

1897 
de°
 = 
	`shÆlowTextCl⁄e
(de°, 
§c
, 
°©us
);

1908 i‡(
dìp
 && 
	`U_SUCCESS
(*
°©us
)) {

1909 
öt32_t
 
Àn
 = (öt32_t)
	`uãxt_«tiveLígth
((
UText
 *)
§c
);

1910 *
c›ySå
 = (*)
	`u¥v_mÆloc
(
Àn
+1);

1911 i‡(
c›ySå
 =
NULL
) {

1912 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

1914 
	`u¥v_mem˝y
(
c›ySå
, 
§c
->
c⁄ãxt
, 
Àn
+1);

1915 
de°
->
c⁄ãxt
 = 
c›ySå
;

1916 
de°
->
¥ovidîPr›îtõs
 |
	`I32_FLAG
(
UTEXT_PROVIDER_OWNS_TEXT
);

1919  
de°
;

1920 
	}
}

1923 
U_CALLCONV


1924 
	$utf8TextClo£
(
UText
 *
ut
) {

1928 i‡(
ut
->
¥ovidîPr›îtõs
 & 
	`I32_FLAG
(
UTEXT_PROVIDER_OWNS_TEXT
)) {

1929 *
s
 = (*)
ut
->
c⁄ãxt
;

1930 
	`u¥v_‰ì
(
s
);

1931 
ut
->
c⁄ãxt
 = 
NULL
;

1933 
	}
}

1935 
U_CDECL_END


1938 c⁄° 
UTextFuncs
 
	gutf8Funcs
 =

1940 (
UTextFuncs
),

1942 
utf8TextCl⁄e
,

1943 
utf8TextLígth
,

1944 
utf8TextAc˚ss
,

1945 
utf8TextExåa˘
,

1946 
NULL
,

1947 
NULL
,

1948 
utf8TextM≠Off£tToN©ive
,

1949 
utf8TextM≠IndexToUTF16
,

1950 
utf8TextClo£
,

1951 
NULL
,

1952 
NULL
,

1953 
NULL


1957 c⁄° 
	ggEm±ySåög
[] = {0};

1959 
U_CAPI
 
UText
 * 
U_EXPORT2


1960 
	$uãxt_›íUTF8
(
UText
 *
ut
, c⁄° *
s
, 
öt64_t
 
Àngth
, 
UEº‹Code
 *
°©us
) {

1961 if(
	`U_FAILURE
(*
°©us
)) {

1962  
NULL
;

1964 if(
s
==
NULL
 && 
Àngth
==0) {

1965 
s
 = 
gEm±ySåög
;

1968 if(
s
==
NULL
 || 
Àngth
<-1 ||Üígth>
INT32_MAX
) {

1969 *
°©us
=
U_ILLEGAL_ARGUMENT_ERROR
;

1970  
NULL
;

1973 
ut
 = 
	`uãxt_£tup
(ut, (
UTF8Buf
Ë* 2, 
°©us
);

1974 i‡(
	`U_FAILURE
(*
°©us
)) {

1975  
ut
;

1978 
ut
->
pFuncs
 = &
utf8Funcs
;

1979 
ut
->
c⁄ãxt
 = 
s
;

1980 
ut
->
b
 = (
öt32_t
)
Àngth
;

1981 
ut
->
c
 = (
öt32_t
)
Àngth
;

1982 i‡(
ut
->
c
 < 0) {

1983 
ut
->
c
 = 0;

1984 
ut
->
¥ovidîPr›îtõs
 |
	`I32_FLAG
(
UTEXT_PROVIDER_LENGTH_IS_EXPENSIVE
);

1986 
ut
->
p
 = ut->
pExåa
;

1987 
ut
->
q
 = (*)ut->
pExåa
 + (
UTF8Buf
);

1988  
ut
;

1990 
	}
}

2013 íum { 
	mREP_TEXT_CHUNK_SIZE
=10 };

2015 
	sRïlExåa
 {

2020 
UCh¨
 
	ms
[
REP_TEXT_CHUNK_SIZE
+1];

2024 
U_CDECL_BEGIN


2026 
UText
 * 
U_CALLCONV


2027 
	$ªpTextCl⁄e
(
UText
 *
de°
, c⁄° UTexà*
§c
, 
UBoﬁ
 
dìp
, 
UEº‹Code
 *
°©us
) {

2029 
de°
 = 
	`shÆlowTextCl⁄e
(de°, 
§c
, 
°©us
);

2036 i‡(
dìp
 && 
	`U_SUCCESS
(*
°©us
)) {

2037 c⁄° 
Rïœ˚abÀ
 *
ª∂Src
 = (c⁄° Rïœ˚abÀ *)
§c
->
c⁄ãxt
;

2038 
de°
->
c⁄ãxt
 = 
ª∂Src
->
	`˛⁄e
();

2039 
de°
->
¥ovidîPr›îtõs
 |
	`I32_FLAG
(
UTEXT_PROVIDER_OWNS_TEXT
);

2042 
de°
->
¥ovidîPr›îtõs
 |
	`I32_FLAG
(
UTEXT_PROVIDER_WRITABLE
);

2044  
de°
;

2045 
	}
}

2048 
U_CALLCONV


2049 
	$ªpTextClo£
(
UText
 *
ut
) {

2053 i‡(
ut
->
¥ovidîPr›îtõs
 & 
	`I32_FLAG
(
UTEXT_PROVIDER_OWNS_TEXT
)) {

2054 
Rïœ˚abÀ
 *
ªp
 = (Rïœ˚abÀ *)
ut
->
c⁄ãxt
;

2055 
dñëe
 
ªp
;

2056 
ut
->
c⁄ãxt
 = 
NULL
;

2058 
	}
}

2061 
öt64_t
 
U_CALLCONV


2062 
	$ªpTextLígth
(
UText
 *
ut
) {

2063 c⁄° 
Rïœ˚abÀ
 *
ª∂Src
 = (c⁄° Rïœ˚abÀ *)
ut
->
c⁄ãxt
;

2064 
öt32_t
 
Àn
 = 
ª∂Src
->
	`Àngth
();

2065  
Àn
;

2066 
	}
}

2069 
UBoﬁ
 
U_CALLCONV


2070 
	$ªpTextAc˚ss
(
UText
 *
ut
, 
öt64_t
 
ödex
, 
UBoﬁ
 
f‹w¨d
) {

2071 c⁄° 
Rïœ˚abÀ
 *
ªp
=(c⁄° Rïœ˚abÀ *)
ut
->
c⁄ãxt
;

2072 
öt32_t
 
Àngth
=
ªp
->
	`Àngth
();

2075 
öt32_t
 
ödex32
 = 
	`pöIndex
(
ödex
, 
Àngth
);

2076 
	`U_ASSERT
(
ödex
<=
INT32_MAX
);

2087 if(
f‹w¨d
) {

2089 i‡(
ödex32
>=
ut
->
chunkN©iveSèπ
 && index32<ut->
chunkN©iveLimô
) {

2091 
ut
->
chunkOff£t
 = (
öt32_t
)(
ödex
 - ut->
chunkN©iveSèπ
);

2092  
TRUE
;

2094 i‡(
ödex32
>=
Àngth
 && 
ut
->
chunkN©iveLimô
==length) {

2097 
ut
->
chunkOff£t
 = 
Àngth
 - (
öt32_t
)ut->
chunkN©iveSèπ
;

2098  
FALSE
;

2101 
ut
->
chunkN©iveLimô
 = 
ödex
 + 
REP_TEXT_CHUNK_SIZE
 - 1;

2106 if(
ut
->
chunkN©iveLimô
 > 
Àngth
) {

2107 
ut
->
chunkN©iveLimô
 = 
Àngth
;

2110 
ut
->
chunkN©iveSèπ
 = ut->
chunkN©iveLimô
 - 
REP_TEXT_CHUNK_SIZE
;

2111 if(
ut
->
chunkN©iveSèπ
 < 0) {

2112 
ut
->
chunkN©iveSèπ
 = 0;

2116 i‡(
ödex32
>
ut
->
chunkN©iveSèπ
 && index32<=ut->
chunkN©iveLimô
) {

2118 
ut
->
chunkOff£t
 = 
ödex32
 - (
öt32_t
)ut->
chunkN©iveSèπ
;

2119  
TRUE
;

2121 i‡(
ödex32
==0 && 
ut
->
chunkN©iveSèπ
==0) {

2124 
ut
->
chunkOff£t
 = 0;

2125  
FALSE
;

2134 
ut
->
chunkN©iveSèπ
 = 
ödex32
 + 1 - 
REP_TEXT_CHUNK_SIZE
;

2135 i‡(
ut
->
chunkN©iveSèπ
 < 0) {

2136 
ut
->
chunkN©iveSèπ
 = 0;

2139 
ut
->
chunkN©iveLimô
 = 
ödex32
 + 1;

2140 i‡(
ut
->
chunkN©iveLimô
 > 
Àngth
) {

2141 
ut
->
chunkN©iveLimô
 = 
Àngth
;

2146 
RïlExåa
 *
ex
 = (RïlExå®*)
ut
->
pExåa
;

2148 
UnicodeSåög
 
	`buf„r
(
ex
->
s
, 0 , 
REP_TEXT_CHUNK_SIZE
 );

2149 
ªp
->
	`exåa˘Bëwìn
((
öt32_t
)
ut
->
chunkN©iveSèπ
, (öt32_t)ut->
chunkN©iveLimô
, 
buf„r
);

2151 
ut
->
chunkC⁄ã¡s
 = 
ex
->
s
;

2152 
ut
->
chunkLígth
 = (
öt32_t
)(ut->
chunkN©iveLimô
 - ut->
chunkN©iveSèπ
);

2153 
ut
->
chunkOff£t
 = (
öt32_t
)(
ödex32
 - ut->
chunkN©iveSèπ
);

2157 i‡(
ut
->
chunkN©iveLimô
 < 
Àngth
 &&

2158 
	`U16_IS_LEAD
(
ex
->
s
[
ut
->
chunkLígth
-1])) {

2159 
ut
->
chunkLígth
--;

2160 
ut
->
chunkN©iveLimô
--;

2161 i‡(
ut
->
chunkOff£t
 > ut->
chunkLígth
) {

2162 
ut
->
chunkOff£t
 = ut->
chunkLígth
;

2168 if(
ut
->
chunkN©iveSèπ
>0 && 
	`U16_IS_TRAIL
(
ex
->
s
[0])) {

2169 ++(
ut
->
chunkC⁄ã¡s
);

2170 ++(
ut
->
chunkN©iveSèπ
);

2171 --(
ut
->
chunkLígth
);

2172 --(
ut
->
chunkOff£t
);

2176 
	`U16_SET_CP_START
(
ut
->
chunkC⁄ã¡s
, 0, ut->
chunkOff£t
);

2179 
ut
->
«tiveIndexögLimô
 = ut->
chunkLígth
;

2181  
TRUE
;

2182 
	}
}

2186 
öt32_t
 
U_CALLCONV


2187 
	$ªpTextExåa˘
(
UText
 *
ut
,

2188 
öt64_t
 
°¨t
, i¡64_à
limô
,

2189 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

2190 
UEº‹Code
 *
°©us
) {

2191 c⁄° 
Rïœ˚abÀ
 *
ªp
=(c⁄° Rïœ˚abÀ *)
ut
->
c⁄ãxt
;

2192 
öt32_t
 
Àngth
=
ªp
->
	`Àngth
();

2194 if(
	`U_FAILURE
(*
°©us
)) {

2197 if(
de°C≠acôy
<0 || (
de°
==
NULL
 && destCapacity>0)) {

2198 *
°©us
=
U_ILLEGAL_ARGUMENT_ERROR
;

2200 if(
°¨t
>
limô
) {

2201 *
°©us
=
U_INDEX_OUTOFBOUNDS_ERROR
;

2205 
öt32_t
 
°¨t32
 = 
	`pöIndex
(
°¨t
, 
Àngth
);

2206 
öt32_t
 
limô32
 = 
	`pöIndex
(
limô
, 
Àngth
);

2209 i‡(
°¨t32
<
Àngth
 && 
	`U16_IS_TRAIL
(
ªp
->
	`ch¨At
(start32)) &&

2210 
	`U_IS_SUPPLEMENTARY
(
ªp
->
	`ch¨32At
(
°¨t32
))){

2211 
°¨t32
--;

2213 i‡(
limô32
<
Àngth
 && 
	`U16_IS_TRAIL
(
ªp
->
	`ch¨At
(limit32)) &&

2214 
	`U_IS_SUPPLEMENTARY
(
ªp
->
	`ch¨32At
(
limô32
))){

2215 
limô32
--;

2218 
Àngth
=
limô32
-
°¨t32
;

2219 if(
Àngth
>
de°C≠acôy
) {

2220 
limô32
 = 
°¨t32
 + 
de°C≠acôy
;

2222 
UnicodeSåög
 
	`buf„r
(
de°
, 0, 
de°C≠acôy
);

2223 
ªp
->
	`exåa˘Bëwìn
(
°¨t32
, 
limô32
, 
buf„r
);

2224 
	`ªpTextAc˚ss
(
ut
, 
limô32
, 
TRUE
);

2226  
	`u_ãrmö©eUCh¨s
(
de°
, 
de°C≠acôy
, 
Àngth
, 
°©us
);

2227 
	}
}

2229 
öt32_t
 
U_CALLCONV


2230 
	$ªpTextRïœ˚
(
UText
 *
ut
,

2231 
öt64_t
 
°¨t
, i¡64_à
limô
,

2232 c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
Àngth
,

2233 
UEº‹Code
 *
°©us
) {

2234 
Rïœ˚abÀ
 *
ªp
=(Rïœ˚abÀ *)
ut
->
c⁄ãxt
;

2235 
öt32_t
 
ﬁdLígth
;

2237 if(
	`U_FAILURE
(*
°©us
)) {

2240 if(
§c
==
NULL
 && 
Àngth
!=0) {

2241 *
°©us
=
U_ILLEGAL_ARGUMENT_ERROR
;

2244 
ﬁdLígth
=
ªp
->
	`Àngth
();

2245 if(
°¨t
>
limô
 ) {

2246 *
°©us
=
U_INDEX_OUTOFBOUNDS_ERROR
;

2250 
öt32_t
 
°¨t32
 = 
	`pöIndex
(
°¨t
, 
ﬁdLígth
);

2251 
öt32_t
 
limô32
 = 
	`pöIndex
(
limô
, 
ﬁdLígth
);

2254 i‡(
°¨t32
<
ﬁdLígth
 && 
	`U16_IS_TRAIL
(
ªp
->
	`ch¨At
(start32)) &&

2255 
°¨t32
>0 && 
	`U16_IS_LEAD
(
ªp
->
	`ch¨At
(start32-1)))

2257 
°¨t32
--;

2259 i‡(
limô32
<
ﬁdLígth
 && 
	`U16_IS_LEAD
(
ªp
->
	`ch¨At
(limit32-1)) &&

2260 
	`U16_IS_TRAIL
(
ªp
->
	`ch¨At
(
limô32
)))

2262 
limô32
++;

2266 
UnicodeSåög
 
	`ª∂Så
((
UBoﬁ
)(
Àngth
<0), 
§c
,Üength);

2267 
ªp
->
	`h™dÀRïœ˚Bëwìn
(
°¨t32
, 
limô32
, 
ª∂Så
);

2268 
öt32_t
 
√wLígth
 = 
ªp
->
	`Àngth
();

2269 
öt32_t
 
ÀngthDñè
 = 
√wLígth
 - 
ﬁdLígth
;

2272 i‡(
ut
->
chunkN©iveLimô
 > 
°¨t32
) {

2275 
	`övÆid©eChunk
(
ut
);

2279 
öt32_t
 
√wIndexPos
 = 
limô32
 + 
ÀngthDñè
;

2280 
	`ªpTextAc˚ss
(
ut
, 
√wIndexPos
, 
TRUE
);

2282  
ÀngthDñè
;

2283 
	}
}

2286 
U_CALLCONV


2287 
	$ªpTextC›y
(
UText
 *
ut
,

2288 
öt64_t
 
°¨t
, i¡64_à
limô
,

2289 
öt64_t
 
de°Index
,

2290 
UBoﬁ
 
move
,

2291 
UEº‹Code
 *
°©us
)

2293 
Rïœ˚abÀ
 *
ªp
=(Rïœ˚abÀ *)
ut
->
c⁄ãxt
;

2294 
öt32_t
 
Àngth
=
ªp
->
	`Àngth
();

2296 if(
	`U_FAILURE
(*
°©us
)) {

2299 i‡(
°¨t
>
limô
 || (°¨t<
de°Index
 && destIndex<limit))

2301 *
°©us
=
U_INDEX_OUTOFBOUNDS_ERROR
;

2305 
öt32_t
 
°¨t32
 = 
	`pöIndex
(
°¨t
, 
Àngth
);

2306 
öt32_t
 
limô32
 = 
	`pöIndex
(
limô
, 
Àngth
);

2307 
öt32_t
 
de°Index32
 = 
	`pöIndex
(
de°Index
, 
Àngth
);

2311 if(
move
) {

2313 
öt32_t
 
£gLígth
=
limô32
-
°¨t32
;

2314 
ªp
->
	`c›y
(
°¨t32
, 
limô32
, 
de°Index32
);

2315 if(
de°Index32
<
°¨t32
) {

2316 
°¨t32
+=
£gLígth
;

2317 
limô32
+=
£gLígth
;

2319 
ªp
->
	`h™dÀRïœ˚Bëwìn
(
°¨t32
, 
limô32
, 
	`UnicodeSåög
());

2322 
ªp
->
	`c›y
(
°¨t32
, 
limô32
, 
de°Index32
);

2327 
öt32_t
 
fú°Af„˘edIndex
 = 
de°Index32
;

2328 i‡(
move
 && 
°¨t32
<
fú°Af„˘edIndex
) {

2329 
fú°Af„˘edIndex
 = 
°¨t32
;

2331 i‡(
fú°Af„˘edIndex
 < 
ut
->
chunkN©iveLimô
) {

2333 
	`övÆid©eChunk
(
ut
);

2337 
öt32_t
 
«tiveIãrIndex
 = 
de°Index32
 + 
limô32
 - 
°¨t32
;

2338 i‡(
move
 && 
de°Index32
>
°¨t32
) {

2340 
«tiveIãrIndex
 = 
de°Index32
;

2344 
	`ªpTextAc˚ss
(
ut
, 
«tiveIãrIndex
, 
TRUE
);

2345 
	}
}

2347 c⁄° 
UTextFuncs
 
	gªpFuncs
 =

2349 (
UTextFuncs
),

2351 
ªpTextCl⁄e
,

2352 
ªpTextLígth
,

2353 
ªpTextAc˚ss
,

2354 
ªpTextExåa˘
,

2355 
ªpTextRïœ˚
,

2356 
ªpTextC›y
,

2357 
NULL
,

2358 
NULL
,

2359 
ªpTextClo£
,

2360 
NULL
,

2361 
NULL
,

2362 
NULL


2366 
U_CAPI
 
UText
 * 
U_EXPORT2


2367 
	$uãxt_›íRïœ˚abÀ
(
UText
 *
ut
, 
Rïœ˚abÀ
 *
ªp
, 
UEº‹Code
 *
°©us
)

2369 if(
	`U_FAILURE
(*
°©us
)) {

2370  
NULL
;

2372 if(
ªp
==
NULL
) {

2373 *
°©us
=
U_ILLEGAL_ARGUMENT_ERROR
;

2374  
NULL
;

2376 
ut
 = 
	`uãxt_£tup
(ut, (
RïlExåa
), 
°©us
);

2378 
ut
->
¥ovidîPr›îtõs
 = 
	`I32_FLAG
(
UTEXT_PROVIDER_WRITABLE
);

2379 if(
ªp
->
	`hasMëaD©a
()) {

2380 
ut
->
¥ovidîPr›îtõs
 |=
	`I32_FLAG
(
UTEXT_PROVIDER_HAS_META_DATA
);

2383 
ut
->
pFuncs
 = &
ªpFuncs
;

2384 
ut
->
c⁄ãxt
 = 
ªp
;

2385  
ut
;

2386 
	}
}

2388 
U_CDECL_END


2410 
U_CDECL_BEGIN


2413 
UText
 * 
U_CALLCONV


2414 
	$uni°rTextCl⁄e
(
UText
 *
de°
, c⁄° UTexà*
§c
, 
UBoﬁ
 
dìp
, 
UEº‹Code
 *
°©us
) {

2416 
de°
 = 
	`shÆlowTextCl⁄e
(de°, 
§c
, 
°©us
);

2423 i‡(
dìp
 && 
	`U_SUCCESS
(*
°©us
)) {

2424 c⁄° 
UnicodeSåög
 *
§cSåög
 = (c⁄° UnicodeSåög *)
§c
->
c⁄ãxt
;

2425 
de°
->
c⁄ãxt
 = 
√w
 
	`UnicodeSåög
(*
§cSåög
);

2426 
de°
->
¥ovidîPr›îtõs
 |
	`I32_FLAG
(
UTEXT_PROVIDER_OWNS_TEXT
);

2429 
de°
->
¥ovidîPr›îtõs
 |
	`I32_FLAG
(
UTEXT_PROVIDER_WRITABLE
);

2431  
de°
;

2432 
	}
}

2434 
U_CALLCONV


2435 
	$uni°rTextClo£
(
UText
 *
ut
) {

2439 i‡(
ut
->
¥ovidîPr›îtõs
 & 
	`I32_FLAG
(
UTEXT_PROVIDER_OWNS_TEXT
)) {

2440 
UnicodeSåög
 *
°r
 = (UnicodeSåög *)
ut
->
c⁄ãxt
;

2441 
dñëe
 
°r
;

2442 
ut
->
c⁄ãxt
 = 
NULL
;

2444 
	}
}

2447 
öt64_t
 
U_CALLCONV


2448 
	$uni°rTextLígth
(
UText
 *
t
) {

2449  ((c⁄° 
UnicodeSåög
 *)
t
->
c⁄ãxt
)->
	`Àngth
();

2450 
	}
}

2453 
UBoﬁ
 
U_CALLCONV


2454 
	$uni°rTextAc˚ss
(
UText
 *
ut
, 
öt64_t
 
ödex
, 
UBoﬁ
 
f‹w¨d
) {

2455 
öt32_t
 
Àngth
 = 
ut
->
chunkLígth
;

2456 
ut
->
chunkOff£t
 = 
	`pöIndex
(
ödex
, 
Àngth
);

2459 
UBoﬁ
 
ªtVÆ
 = (
f‹w¨d
 && 
ödex
<
Àngth
) || (!forward && index>0);

2460  
ªtVÆ
;

2461 
	}
}

2465 
öt32_t
 
U_CALLCONV


2466 
	$uni°rTextExåa˘
(
UText
 *
t
,

2467 
öt64_t
 
°¨t
, i¡64_à
limô
,

2468 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

2469 
UEº‹Code
 *
pEº‹Code
) {

2470 c⁄° 
UnicodeSåög
 *
us
=(c⁄° UnicodeSåög *)
t
->
c⁄ãxt
;

2471 
öt32_t
 
Àngth
=
us
->
	`Àngth
();

2473 if(
	`U_FAILURE
(*
pEº‹Code
)) {

2476 if(
de°C≠acôy
<0 || (
de°
==
NULL
 && destCapacity>0)) {

2477 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

2479 if(
°¨t
<0 || sèπ>
limô
) {

2480 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

2484 
öt32_t
 
°¨t32
 = 
°¨t
<
Àngth
 ? 
us
->
	`gëCh¨32Sèπ
((int32_t)start) :Üength;

2485 
öt32_t
 
limô32
 = 
limô
<
Àngth
 ? 
us
->
	`gëCh¨32Sèπ
((int32_t)limit) :Üength;

2487 
Àngth
=
limô32
-
°¨t32
;

2488 i‡(
de°C≠acôy
>0 && 
de°
!=
NULL
) {

2489 
öt32_t
 
åimmedLígth
 = 
Àngth
;

2490 if(
åimmedLígth
>
de°C≠acôy
) {

2491 
åimmedLígth
=
de°C≠acôy
;

2493 
us
->
	`exåa˘
(
°¨t32
, 
åimmedLígth
, 
de°
);

2494 
t
->
chunkOff£t
 = 
°¨t32
+
åimmedLígth
;

2496 
t
->
chunkOff£t
 = 
°¨t32
;

2498 
	`u_ãrmö©eUCh¨s
(
de°
, 
de°C≠acôy
, 
Àngth
, 
pEº‹Code
);

2499  
Àngth
;

2500 
	}
}

2502 
öt32_t
 
U_CALLCONV


2503 
	$uni°rTextRïœ˚
(
UText
 *
ut
,

2504 
öt64_t
 
°¨t
, i¡64_à
limô
,

2505 c⁄° 
UCh¨
 *
§c
, 
öt32_t
 
Àngth
,

2506 
UEº‹Code
 *
pEº‹Code
) {

2507 
UnicodeSåög
 *
us
=(UnicodeSåög *)
ut
->
c⁄ãxt
;

2508 
öt32_t
 
ﬁdLígth
;

2510 if(
	`U_FAILURE
(*
pEº‹Code
)) {

2513 if(
§c
==
NULL
 && 
Àngth
!=0) {

2514 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

2516 if(
°¨t
>
limô
) {

2517 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

2520 
ﬁdLígth
=
us
->
	`Àngth
();

2521 
öt32_t
 
°¨t32
 = 
	`pöIndex
(
°¨t
, 
ﬁdLígth
);

2522 
öt32_t
 
limô32
 = 
	`pöIndex
(
limô
, 
ﬁdLígth
);

2523 i‡(
°¨t32
 < 
ﬁdLígth
) {

2524 
°¨t32
 = 
us
->
	`gëCh¨32Sèπ
(start32);

2526 i‡(
limô32
 < 
ﬁdLígth
) {

2527 
limô32
 = 
us
->
	`gëCh¨32Sèπ
(limit32);

2531 
us
->
	`ª∂a˚
(
°¨t32
, 
limô32
-°¨t32, 
§c
, 
Àngth
);

2532 
öt32_t
 
√wLígth
 = 
us
->
	`Àngth
();

2535 
ut
->
chunkC⁄ã¡s
 = 
us
->
	`gëBuf„r
();

2536 
ut
->
chunkLígth
 = 
√wLígth
;

2537 
ut
->
chunkN©iveLimô
 = 
√wLígth
;

2538 
ut
->
«tiveIndexögLimô
 = 
√wLígth
;

2541 
öt32_t
 
ÀngthDñè
 = 
√wLígth
 - 
ﬁdLígth
;

2542 
ut
->
chunkOff£t
 = 
limô32
 + 
ÀngthDñè
;

2544  
ÀngthDñè
;

2545 
	}
}

2547 
U_CALLCONV


2548 
	$uni°rTextC›y
(
UText
 *
ut
,

2549 
öt64_t
 
°¨t
, i¡64_à
limô
,

2550 
öt64_t
 
de°Index
,

2551 
UBoﬁ
 
move
,

2552 
UEº‹Code
 *
pEº‹Code
) {

2553 
UnicodeSåög
 *
us
=(UnicodeSåög *)
ut
->
c⁄ãxt
;

2554 
öt32_t
 
Àngth
=
us
->
	`Àngth
();

2556 if(
	`U_FAILURE
(*
pEº‹Code
)) {

2559 
öt32_t
 
°¨t32
 = 
	`pöIndex
(
°¨t
, 
Àngth
);

2560 
öt32_t
 
limô32
 = 
	`pöIndex
(
limô
, 
Àngth
);

2561 
öt32_t
 
de°Index32
 = 
	`pöIndex
(
de°Index
, 
Àngth
);

2563 if–
°¨t32
>
limô32
 || (°¨t32<
de°Index32
 && destIndex32<limit32)) {

2564 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

2568 if(
move
) {

2570 
öt32_t
 
£gLígth
=
limô32
-
°¨t32
;

2571 
us
->
	`c›y
(
°¨t32
, 
limô32
, 
de°Index32
);

2572 if(
de°Index32
<
°¨t32
) {

2573 
°¨t32
+=
£gLígth
;

2575 
us
->
	`ª∂a˚
(
°¨t32
, 
£gLígth
, 
NULL
, 0);

2578 
us
->
	`c›y
(
°¨t32
, 
limô32
, 
de°Index32
);

2582 
ut
->
chunkC⁄ã¡s
 = 
us
->
	`gëBuf„r
();

2583 i‡(
move
==
FALSE
) {

2585 
ut
->
chunkLígth
 +
limô32
-
°¨t32
;

2586 
ut
->
chunkN©iveLimô
 = ut->
chunkLígth
;

2587 
ut
->
«tiveIndexögLimô
 = ut->
chunkLígth
;

2591 
ut
->
chunkOff£t
 = 
de°Index32
+
limô32
-
°¨t32
;

2592 i‡(
move
 && 
de°Index32
>
°¨t32
) {

2593 
ut
->
chunkOff£t
 = 
de°Index32
;

2596 
	}
}

2598 c⁄° 
UTextFuncs
 
	guni°rFuncs
 =

2600 (
UTextFuncs
),

2602 
uni°rTextCl⁄e
,

2603 
uni°rTextLígth
,

2604 
uni°rTextAc˚ss
,

2605 
uni°rTextExåa˘
,

2606 
uni°rTextRïœ˚
,

2607 
uni°rTextC›y
,

2608 
NULL
,

2609 
NULL
,

2610 
uni°rTextClo£
,

2611 
NULL
,

2612 
NULL
,

2613 
NULL


2618 
U_CDECL_END


2621 
U_CAPI
 
UText
 * 
U_EXPORT2


2622 
	$uãxt_›íUnicodeSåög
(
UText
 *
ut
, 
UnicodeSåög
 *
s
, 
UEº‹Code
 *
°©us
) {

2625 
ut
 = 
	`uãxt_£tup
(ut, 0, 
°©us
);

2626 i‡(
	`U_SUCCESS
(*
°©us
)) {

2627 
ut
->
pFuncs
 = &
uni°rFuncs
;

2628 
ut
->
c⁄ãxt
 = 
s
;

2629 
ut
->
¥ovidîPr›îtõs
 = 
	`I32_FLAG
(
UTEXT_PROVIDER_STABLE_CHUNKS
)|

2630 
	`I32_FLAG
(
UTEXT_PROVIDER_WRITABLE
);

2632 
ut
->
chunkC⁄ã¡s
 = 
s
->
	`gëBuf„r
();

2633 
ut
->
chunkLígth
 = 
s
->
	`Àngth
();

2634 
ut
->
chunkN©iveSèπ
 = 0;

2635 
ut
->
chunkN©iveLimô
 = ut->
chunkLígth
;

2636 
ut
->
«tiveIndexögLimô
 = ut->
chunkLígth
;

2638  
ut
;

2639 
	}
}

2643 
U_CAPI
 
UText
 * 
U_EXPORT2


2644 
	$uãxt_›íC⁄°UnicodeSåög
(
UText
 *
ut
, c⁄° 
UnicodeSåög
 *
s
, 
UEº‹Code
 *
°©us
) {

2645 
ut
 = 
	`uãxt_£tup
(ut, 0, 
°©us
);

2649 i‡(
	`U_SUCCESS
(*
°©us
)) {

2650 
ut
->
pFuncs
 = &
uni°rFuncs
;

2651 
ut
->
c⁄ãxt
 = 
s
;

2652 
ut
->
¥ovidîPr›îtõs
 = 
	`I32_FLAG
(
UTEXT_PROVIDER_STABLE_CHUNKS
);

2653 
ut
->
chunkC⁄ã¡s
 = 
s
->
	`gëBuf„r
();

2654 
ut
->
chunkLígth
 = 
s
->
	`Àngth
();

2655 
ut
->
chunkN©iveSèπ
 = 0;

2656 
ut
->
chunkN©iveLimô
 = ut->
chunkLígth
;

2657 
ut
->
«tiveIndexögLimô
 = ut->
chunkLígth
;

2659  
ut
;

2660 
	}
}

2674 
U_CDECL_BEGIN


2677 
UText
 * 
U_CALLCONV


2678 
	$uc°rTextCl⁄e
(
UText
 *
de°
, c⁄° UTexà* 
§c
, 
UBoﬁ
 
dìp
, 
UEº‹Code
 * 
°©us
) {

2680 
de°
 = 
	`shÆlowTextCl⁄e
(de°, 
§c
, 
°©us
);

2687 i‡(
dìp
 && 
	`U_SUCCESS
(*
°©us
)) {

2688 
	`U_ASSERT
(
	`uãxt_«tiveLígth
(
de°
Ë< 
INT32_MAX
);

2689 
öt32_t
 
Àn
 = (öt32_t)
	`uãxt_«tiveLígth
(
de°
);

2692 c⁄° 
UCh¨
 *
§cSå
 = (c⁄° UCh¨ *)
§c
->
c⁄ãxt
;

2693 
UCh¨
 *
c›ySå
 = (UCh¨ *)
	`u¥v_mÆloc
((
Àn
+1) * (UChar));

2694 i‡(
c›ySå
 =
NULL
) {

2695 *
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

2697 
öt64_t
 
i
;

2698 
i
=0; i<
Àn
; i++) {

2699 
c›ySå
[
i
] = 
§cSå
[i];

2701 
c›ySå
[
Àn
] = 0;

2702 
de°
->
c⁄ãxt
 = 
c›ySå
;

2703 
de°
->
¥ovidîPr›îtõs
 |
	`I32_FLAG
(
UTEXT_PROVIDER_OWNS_TEXT
);

2706  
de°
;

2707 
	}
}

2710 
U_CALLCONV


2711 
	$uc°rTextClo£
(
UText
 *
ut
) {

2715 i‡(
ut
->
¥ovidîPr›îtõs
 & 
	`I32_FLAG
(
UTEXT_PROVIDER_OWNS_TEXT
)) {

2716 
UCh¨
 *
s
 = (UCh¨ *)
ut
->
c⁄ãxt
;

2717 
	`u¥v_‰ì
(
s
);

2718 
ut
->
c⁄ãxt
 = 
NULL
;

2720 
	}
}

2724 
öt64_t
 
U_CALLCONV


2725 
	$uc°rTextLígth
(
UText
 *
ut
) {

2726 i‡(
ut
->
a
 < 0) {

2730 c⁄° 
UCh¨
 *
°r
 = (c⁄° UCh¨ *)
ut
->
c⁄ãxt
;

2732 i‡(
°r
[
ut
->
chunkN©iveLimô
] == 0) {

2735 
ut
->
chunkN©iveLimô
++;

2737 
ut
->
a
 = ut->
chunkN©iveLimô
;

2738 
ut
->
chunkLígth
 = (
öt32_t
)ut->
chunkN©iveLimô
;

2739 
ut
->
«tiveIndexögLimô
 = ut->
chunkLígth
;

2740 
ut
->
¥ovidîPr›îtõs
 &~
	`I32_FLAG
(
UTEXT_PROVIDER_LENGTH_IS_EXPENSIVE
);

2742  
ut
->
a
;

2743 
	}
}

2746 
UBoﬁ
 
U_CALLCONV


2747 
	$uc°rTextAc˚ss
(
UText
 *
ut
, 
öt64_t
 
ödex
, 
UBoﬁ
 
f‹w¨d
) {

2748 c⁄° 
UCh¨
 *
°r
 = (c⁄° UCh¨ *)
ut
->
c⁄ãxt
;

2752 i‡(
ödex
<0) {

2753 
ödex
 = 0;

2754 } i‡(
ödex
 < 
ut
->
chunkN©iveLimô
) {

2757 
	`U16_SET_CP_START
(
°r
, 0, 
ödex
);

2758 } i‡(
ut
->
a
 >= 0) {

2761 
ödex
 = 
ut
->
a
;

2768 
öt32_t
 
sˇnLimô
 = (öt32_t)
ödex
 + 32;

2769 i‡((
ödex
 + 32)>
INT32_MAX
 || (index + 32)<0 ) {

2770 
sˇnLimô
 = 
INT32_MAX
;

2773 
öt32_t
 
chunkLimô
 = (öt32_t)
ut
->
chunkN©iveLimô
;

2774 ; 
chunkLimô
<
sˇnLimô
; chunkLimit++) {

2775 i‡(
°r
[
chunkLimô
] == 0) {

2778 
ut
->
a
 = 
chunkLimô
;

2779 
ut
->
chunkLígth
 = 
chunkLimô
;

2780 
ut
->
«tiveIndexögLimô
 = 
chunkLimô
;

2781 i‡(
ödex
 >
chunkLimô
) {

2782 
ödex
 = 
chunkLimô
;

2784 
	`U16_SET_CP_START
(
°r
, 0, 
ödex
);

2787 
ut
->
chunkN©iveLimô
 = 
chunkLimô
;

2788 
ut
->
¥ovidîPr›îtõs
 &~
	`I32_FLAG
(
UTEXT_PROVIDER_LENGTH_IS_EXPENSIVE
);

2789 
bªakout
;

2793 
	`U16_SET_CP_START
(
°r
, 0, 
ödex
);

2794 i‡(
chunkLimô
 =
INT32_MAX
) {

2798 
ut
->
a
 = 
chunkLimô
;

2799 
ut
->
chunkLígth
 = 
chunkLimô
;

2800 
ut
->
«tiveIndexögLimô
 = 
chunkLimô
;

2801 i‡(
ödex
 > 
chunkLimô
) {

2802 
ödex
 = 
chunkLimô
;

2804 
ut
->
chunkN©iveLimô
 = 
chunkLimô
;

2805 
ut
->
¥ovidîPr›îtõs
 &~
	`I32_FLAG
(
UTEXT_PROVIDER_LENGTH_IS_EXPENSIVE
);

2811 i‡(
	`U16_IS_LEAD
(
°r
[
chunkLimô
-1])) {

2812 --
chunkLimô
;

2818 
ut
->
chunkN©iveLimô
 = 
chunkLimô
;

2819 
ut
->
«tiveIndexögLimô
 = 
chunkLimô
;

2820 
ut
->
chunkLígth
 = 
chunkLimô
;

2824 
bªakout
:

2825 
	`U_ASSERT
(
ödex
<=
INT32_MAX
);

2826 
ut
->
chunkOff£t
 = (
öt32_t
)
ödex
;

2829 
UBoﬁ
 
ªtVÆ
 = (
f‹w¨d
 && 
ödex
<
ut
->
chunkN©iveLimô
) || (!forward && index>0);

2830  
ªtVÆ
;

2831 
	}
}

2835 
öt32_t
 
U_CALLCONV


2836 
	$uc°rTextExåa˘
(
UText
 *
ut
,

2837 
öt64_t
 
°¨t
, i¡64_à
limô
,

2838 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

2839 
UEº‹Code
 *
pEº‹Code
)

2841 if(
	`U_FAILURE
(*
pEº‹Code
)) {

2844 if(
de°C≠acôy
<0 || (
de°
==
NULL
 && de°C≠acôy>0Ë|| 
°¨t
>
limô
) {

2845 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

2849 c⁄° 
UCh¨
 *
s
=(c⁄° UCh¨ *)
ut
->
c⁄ãxt
;

2850 
öt32_t
 
si
, 
di
;

2852 
öt32_t
 
°¨t32
;

2853 
öt32_t
 
limô32
;

2858 
	`uc°rTextAc˚ss
(
ut
, 
°¨t
, 
TRUE
);

2859 
	`U_ASSERT
(
°¨t
 <
INT32_MAX
);

2860 
°¨t32
 = (
öt32_t
)
°¨t
;

2862 
öt32_t
 
°rLígth
=(öt32_t)
ut
->
a
;

2863 i‡(
°rLígth
 >= 0) {

2864 
limô32
 = 
	`pöIndex
(
limô
, 
°rLígth
);

2866 
limô32
 = 
	`pöIndex
(
limô
, 
INT32_MAX
);

2869 
di
 = 0;

2870 
si
=
°¨t32
; si<
limô32
; si++) {

2871 i‡(
°rLígth
<0 && 
s
[
si
]==0) {

2873 
ut
->
a
 = 
si
;

2874 
ut
->
chunkN©iveLimô
 = 
si
;

2875 
ut
->
chunkLígth
 = 
si
;

2876 
ut
->
«tiveIndexögLimô
 = 
si
;

2877 
°rLígth
 = 
si
;

2880 i‡(
di
<
de°C≠acôy
) {

2882 
de°
[
di
] = 
s
[
si
];

2884 i‡(
°rLígth
>=0) {

2887 
di
 = 
limô32
 - 
°¨t32
;

2888 
si
 = 
limô32
;

2892 
di
++;

2897 i‡(
si
>0 && 
	`U16_IS_LEAD
(
s
[si-1]) &&

2898 ((
si
<
°rLígth
 || såLígth<0Ë&& 
	`U16_IS_TRAIL
(
s
[si])))

2900 i‡(
di
<
de°C≠acôy
) {

2902 
de°
[
di
++] = 
s
[
si
++];

2907 
ut
->
chunkOff£t
 = 
	`u¥v_mö
(
°rLígth
, 
°¨t32
 + 
de°C≠acôy
);

2911 
	`u_ãrmö©eUCh¨s
(
de°
, 
de°C≠acôy
, 
di
, 
pEº‹Code
);

2912  
di
;

2913 
	}
}

2915 c⁄° 
UTextFuncs
 
	guc°rFuncs
 =

2917 (
UTextFuncs
),

2919 
uc°rTextCl⁄e
,

2920 
uc°rTextLígth
,

2921 
uc°rTextAc˚ss
,

2922 
uc°rTextExåa˘
,

2923 
NULL
,

2924 
NULL
,

2925 
NULL
,

2926 
NULL
,

2927 
uc°rTextClo£
,

2928 
NULL
,

2929 
NULL
,

2930 
NULL
,

2933 
U_CDECL_END


2935 c⁄° 
UCh¨
 
	ggEm±yUSåög
[] = {0};

2937 
U_CAPI
 
UText
 * 
U_EXPORT2


2938 
	$uãxt_›íUCh¨s
(
UText
 *
ut
, c⁄° 
UCh¨
 *
s
, 
öt64_t
 
Àngth
, 
UEº‹Code
 *
°©us
) {

2939 i‡(
	`U_FAILURE
(*
°©us
)) {

2940  
NULL
;

2942 if(
s
==
NULL
 && 
Àngth
==0) {

2943 
s
 = 
gEm±yUSåög
;

2945 i‡(
s
==
NULL
 || 
Àngth
 < -1 ||Üígth>
INT32_MAX
) {

2946 *
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

2947  
NULL
;

2949 
ut
 = 
	`uãxt_£tup
(ut, 0, 
°©us
);

2950 i‡(
	`U_SUCCESS
(*
°©us
)) {

2951 
ut
->
pFuncs
 = &
uc°rFuncs
;

2952 
ut
->
c⁄ãxt
 = 
s
;

2953 
ut
->
¥ovidîPr›îtõs
 = 
	`I32_FLAG
(
UTEXT_PROVIDER_STABLE_CHUNKS
);

2954 i‡(
Àngth
==-1) {

2955 
ut
->
¥ovidîPr›îtõs
 |
	`I32_FLAG
(
UTEXT_PROVIDER_LENGTH_IS_EXPENSIVE
);

2957 
ut
->
a
 = 
Àngth
;

2958 
ut
->
chunkC⁄ã¡s
 = 
s
;

2959 
ut
->
chunkN©iveSèπ
 = 0;

2960 
ut
->
chunkN©iveLimô
 = 
Àngth
>=0?Üength : 0;

2961 
ut
->
chunkLígth
 = (
öt32_t
)ut->
chunkN©iveLimô
;

2962 
ut
->
chunkOff£t
 = 0;

2963 
ut
->
«tiveIndexögLimô
 = ut->
chunkLígth
;

2965  
ut
;

2966 
	}
}

2984 
	#CIBufSize
 16

	)

2986 
U_CDECL_BEGIN


2987 
U_CALLCONV


2988 
	$ch¨IãrTextClo£
(
UText
 *
ut
) {

2992 
Ch¨a˘îIãøt‹
 *
ci
 = (Ch¨a˘îIãøt‹ *)
ut
->
r
;

2993 
dñëe
 
ci
;

2994 
ut
->
r
 = 
NULL
;

2995 
	}
}

2997 
öt64_t
 
U_CALLCONV


2998 
	$ch¨IãrTextLígth
(
UText
 *
ut
) {

2999  (
öt32_t
)
ut
->
a
;

3000 
	}
}

3002 
UBoﬁ
 
U_CALLCONV


3003 
	$ch¨IãrTextAc˚ss
(
UText
 *
ut
, 
öt64_t
 
ödex
, 
UBoﬁ
 
f‹w¨d
) {

3004 
Ch¨a˘îIãøt‹
 *
ci
 = (Ch¨a˘îIãøt‹ *)
ut
->
c⁄ãxt
;

3006 
öt32_t
 
˛ù≥dIndex
 = (öt32_t)
ödex
;

3007 i‡(
˛ù≥dIndex
<0) {

3008 
˛ù≥dIndex
=0;

3009 } i‡(
˛ù≥dIndex
>=
ut
->
a
) {

3010 
˛ù≥dIndex
=(
öt32_t
)
ut
->
a
;

3012 
öt32_t
 
√ededIndex
 = 
˛ù≥dIndex
;

3013 i‡(!
f‹w¨d
 && 
√ededIndex
>0) {

3015 
√ededIndex
--;

3016 } i‡(
f‹w¨d
 && 
√ededIndex
==
ut
->
a
 &&ÇeededIndex>0) {

3018 
√ededIndex
--;

3022 
√ededIndex
 -√ededIndex % 
CIBufSize
;

3024 
UCh¨
 *
buf
 = 
NULL
;

3025 
UBoﬁ
 
√edChunkSëup
 = 
TRUE
;

3026 
i
;

3027 i‡(
ut
->
chunkN©iveSèπ
 =
√ededIndex
) {

3029 
√edChunkSëup
 = 
FALSE
;

3030 } i‡(
ut
->
b
 =
√ededIndex
) {

3032 
buf
 = (
UCh¨
 *)
ut
->
p
;

3033 } i‡(
ut
->
c
 =
√ededIndex
) {

3035 
buf
 = (
UCh¨
 *)
ut
->
q
;

3040 
buf
 = (
UCh¨
 *)
ut
->
p
;

3041 i‡(
ut
->
p
 =ut->
chunkC⁄ã¡s
) {

3042 
buf
 = (
UCh¨
 *)
ut
->
q
;

3044 
ci
->
	`£tIndex
(
√ededIndex
);

3045 
i
=0; i<
CIBufSize
; i++) {

3046 
buf
[
i
] = 
ci
->
	`√xtPo°Inc
();

3047 i‡(
i
+
√ededIndex
 > 
ut
->
a
) {

3055 i‡(
√edChunkSëup
) {

3056 
ut
->
chunkC⁄ã¡s
 = 
buf
;

3057 
ut
->
chunkLígth
 = 
CIBufSize
;

3058 
ut
->
chunkN©iveSèπ
 = 
√ededIndex
;

3059 
ut
->
chunkN©iveLimô
 = 
√ededIndex
 + 
CIBufSize
;

3060 i‡(
ut
->
chunkN©iveLimô
 > ut->
a
) {

3061 
ut
->
chunkN©iveLimô
 = ut->
a
;

3062 
ut
->
chunkLígth
 = (
öt32_t
)(ut->
chunkN©iveLimô
)-(öt32_t)(ut->
chunkN©iveSèπ
);

3064 
ut
->
«tiveIndexögLimô
 = ut->
chunkLígth
;

3065 
	`U_ASSERT
(
ut
->
chunkOff£t
>=0 && ut->chunkOff£t<=
CIBufSize
);

3067 
ut
->
chunkOff£t
 = 
˛ù≥dIndex
 - (
öt32_t
)ut->
chunkN©iveSèπ
;

3068 
UBoﬁ
 
suc˚ss
 = (
f‹w¨d
? 
ut
->
chunkOff£t
<ut->
chunkLígth
 : ut->chunkOffset>0);

3069  
suc˚ss
;

3070 
	}
}

3072 
UText
 * 
U_CALLCONV


3073 
	$ch¨IãrTextCl⁄e
(
UText
 *
de°
, c⁄° UTexà*
§c
, 
UBoﬁ
 
dìp
, 
UEº‹Code
 * 
°©us
) {

3074 i‡(
	`U_FAILURE
(*
°©us
)) {

3075  
NULL
;

3078 i‡(
dìp
) {

3080 *
°©us
 = 
U_UNSUPPORTED_ERROR
;

3081  
NULL
;

3083 
Ch¨a˘îIãøt‹
 *
§cCI
 =(Ch¨a˘îIãøt‹ *)
§c
->
c⁄ãxt
;

3084 
§cCI
 = srcCI->
	`˛⁄e
();

3085 
de°
 = 
	`uãxt_›íCh¨a˘îIãøt‹
(de°, 
§cCI
, 
°©us
);

3088 
öt64_t
 
ix
 = 
	`uãxt_gëN©iveIndex
((
UText
 *)
§c
);

3089 
	`uãxt_£tN©iveIndex
(
de°
, 
ix
);

3090 
de°
->
r
 = 
§cCI
;

3092  
de°
;

3093 
	}
}

3095 
öt32_t
 
U_CALLCONV


3096 
	$ch¨IãrTextExåa˘
(
UText
 *
ut
,

3097 
öt64_t
 
°¨t
, i¡64_à
limô
,

3098 
UCh¨
 *
de°
, 
öt32_t
 
de°C≠acôy
,

3099 
UEº‹Code
 *
°©us
)

3101 if(
	`U_FAILURE
(*
°©us
)) {

3104 if(
de°C≠acôy
<0 || (
de°
==
NULL
 && de°C≠acôy>0Ë|| 
°¨t
>
limô
) {

3105 *
°©us
=
U_ILLEGAL_ARGUMENT_ERROR
;

3108 
öt32_t
 
Àngth
 = (öt32_t)
ut
->
a
;

3109 
öt32_t
 
°¨t32
 = 
	`pöIndex
(
°¨t
, 
Àngth
);

3110 
öt32_t
 
limô32
 = 
	`pöIndex
(
limô
, 
Àngth
);

3111 
öt32_t
 
de°i
 = 0;

3112 
öt32_t
 
§ci
;

3113 
öt32_t
 
c›yLimô
;

3115 
Ch¨a˘îIãøt‹
 *
ci
 = (Ch¨a˘îIãøt‹ *)
ut
->
c⁄ãxt
;

3116 
ci
->
	`£tIndex32
(
°¨t32
);

3117 
§ci
 = 
ci
->
	`gëIndex
();

3118 
c›yLimô
 = 
§ci
;

3119 
§ci
<
limô32
) {

3120 
UCh¨32
 
c
 = 
ci
->
	`√xt32Po°Inc
();

3121 
öt32_t
 
Àn
 = 
	`U16_LENGTH
(
c
);

3122 i‡(
de°i
+
Àn
 <
de°C≠acôy
) {

3123 
	`U16_APPEND_UNSAFE
(
de°
, 
de°i
, 
c
);

3124 
c›yLimô
 = 
§ci
+
Àn
;

3126 
de°i
 +
Àn
;

3127 *
°©us
 = 
U_BUFFER_OVERFLOW_ERROR
;

3129 
§ci
 +
Àn
;

3132 
	`ch¨IãrTextAc˚ss
(
ut
, 
c›yLimô
, 
TRUE
);

3134 
	`u_ãrmö©eUCh¨s
(
de°
, 
de°C≠acôy
, 
de°i
, 
°©us
);

3135  
de°i
;

3136 
	}
}

3138 c⁄° 
UTextFuncs
 
	gch¨IãrFuncs
 =

3140 (
UTextFuncs
),

3142 
ch¨IãrTextCl⁄e
,

3143 
ch¨IãrTextLígth
,

3144 
ch¨IãrTextAc˚ss
,

3145 
ch¨IãrTextExåa˘
,

3146 
NULL
,

3147 
NULL
,

3148 
NULL
,

3149 
NULL
,

3150 
ch¨IãrTextClo£
,

3151 
NULL
,

3152 
NULL
,

3153 
NULL


3155 
U_CDECL_END


3158 
U_CAPI
 
UText
 * 
U_EXPORT2


3159 
	$uãxt_›íCh¨a˘îIãøt‹
(
UText
 *
ut
, 
Ch¨a˘îIãøt‹
 *
ci
, 
UEº‹Code
 *
°©us
) {

3160 i‡(
	`U_FAILURE
(*
°©us
)) {

3161  
NULL
;

3164 i‡(
ci
->
	`°¨tIndex
() > 0) {

3166 *
°©us
 = 
U_UNSUPPORTED_ERROR
;

3167  
NULL
;

3171 
öt32_t
 
exåaS∑˚
 = 2 * 
CIBufSize
 * (
UCh¨
);

3172 
ut
 = 
	`uãxt_£tup
(ut, 
exåaS∑˚
, 
°©us
);

3173 i‡(
	`U_SUCCESS
(*
°©us
)) {

3174 
ut
->
pFuncs
 = &
ch¨IãrFuncs
;

3175 
ut
->
c⁄ãxt
 = 
ci
;

3176 
ut
->
¥ovidîPr›îtõs
 = 0;

3177 
ut
->
a
 = 
ci
->
	`ídIndex
();

3178 
ut
->
p
 = ut->
pExåa
;

3179 
ut
->
b
 = -1;

3180 
ut
->
q
 = (
UCh¨
*)ut->
pExåa
+
CIBufSize
;

3181 
ut
->
c
 = -1;

3189 
ut
->
chunkC⁄ã¡s
 = (
UCh¨
 *)ut->
p
;

3190 
ut
->
chunkN©iveSèπ
 = -1;

3191 
ut
->
chunkOff£t
 = 1;

3192 
ut
->
chunkN©iveLimô
 = 0;

3193 
ut
->
chunkLígth
 = 0;

3194 
ut
->
«tiveIndexögLimô
 = ut->
chunkOff£t
;

3196  
ut
;

3197 
	}
}

	@utf_impl.c

21 #i‚de‡
U_UTF8_IMPL


22 
	#U_UTF8_IMPL


	)

25 
	~"unicode/uty≥s.h
"

48 
U_EXPORT
 c⁄° 
uöt8_t


49 
	gutf8_cou¡TøûByãs
[256]={

76 c⁄° 
UCh¨32


77 
	gutf8_möLegÆ
[4]={ 0, 0x80, 0x800, 0x10000 };

79 c⁄° 
UCh¨32


80 
	gutf8_îr‹VÆue
[6]={

81 
UTF8_ERROR_VALUE_1
, 
UTF8_ERROR_VALUE_2
, 
UTF_ERROR_VALUE
, 0x10ffff,

107 
U_CAPI
 
UCh¨32
 
U_EXPORT2


108 
	$utf8_√xtCh¨Sa„Body
(c⁄° 
uöt8_t
 *
s
, 
öt32_t
 *
pi
, i¡32_à
Àngth
, 
UCh¨32
 
c
, 
UBoﬁ
 
°ri˘
) {

109 
öt32_t
 
i
=*
pi
;

110 
uöt8_t
 
cou¡
=
	`UTF8_COUNT_TRAIL_BYTES
(
c
);

111 if((
i
)+
cou¡
<=(
Àngth
)) {

112 
uöt8_t
 
åaû
, 
ûÀgÆ
=0;

114 
	`UTF8_MASK_LEAD_BYTE
((
c
), 
cou¡
);

116 
cou¡
) {

121 
ûÀgÆ
=1;

124 
åaû
=
s
[(
i
)++];

125 (
c
)=((c)<<6)|(
åaû
&0x3f);

126 if(
c
<0x110) {

127 
ûÀgÆ
|=(
åaû
&0xc0)^0x80;

130 
ûÀgÆ
=1;

134 
åaû
=
s
[(
i
)++];

135 (
c
)=((c)<<6)|(
åaû
&0x3f);

136 
ûÀgÆ
|=(
åaû
&0xc0)^0x80;

138 
åaû
=
s
[(
i
)++];

139 (
c
)=((c)<<6)|(
åaû
&0x3f);

140 
ûÀgÆ
|=(
åaû
&0xc0)^0x80;

143 if(
°ri˘
>=0) {

144  
UTF8_ERROR_VALUE_1
;

146  
U_SENTINEL
;

164 if(
ûÀgÆ
 || (
c
)<
utf8_möLegÆ
[
cou¡
] || (
	`UTF_IS_SURROGATE
(cË&& 
°ri˘
!=-2)) {

166 
uöt8_t
 
îr‹Cou¡
=
cou¡
;

168 
i
=*
pi
;

169 
cou¡
>0 && 
	`UTF8_IS_TRAIL
(
s
[
i
])) {

170 ++(
i
);

171 --
cou¡
;

173 if(
°ri˘
>=0) {

174 
c
=
utf8_îr‹VÆue
[
îr‹Cou¡
-
cou¡
];

176 
c
=
U_SENTINEL
;

178 } if((
°ri˘
)>0 && 
	`UTF_IS_UNICODE_NONCHAR
(
c
)) {

180 
c
=
utf8_îr‹VÆue
[
cou¡
];

184 
öt32_t
 
i0
=
i
;

186 (
i
)<(
Àngth
Ë&& 
	`UTF8_IS_TRAIL
(
s
[i])) {

187 ++(
i
);

189 if(
°ri˘
>=0) {

190 
c
=
utf8_îr‹VÆue
[
i
-
i0
];

192 
c
=
U_SENTINEL
;

195 *
pi
=
i
;

196  
c
;

197 
	}
}

199 
U_CAPI
 
öt32_t
 
U_EXPORT2


200 
	$utf8_≠≥ndCh¨Sa„Body
(
uöt8_t
 *
s
, 
öt32_t
 
i
, i¡32_à
Àngth
, 
UCh¨32
 
c
, 
UBoﬁ
 *
pIsEº‹
) {

201 if((
uöt32_t
)(
c
)<=0x7ff) {

202 if((
i
)+1<(
Àngth
)) {

203 (
s
)[(
i
)++]=(
uöt8_t
)(((
c
)>>6)|0xc0);

204 (
s
)[(
i
)++]=(
uöt8_t
)(((
c
)&0x3f)|0x80);

205  
i
;

207 } if((
uöt32_t
)(
c
)<=0xffff) {

209 if((
i
)+2<(
Àngth
Ë&& !
	`U_IS_SURROGATE
(
c
)) {

210 (
s
)[(
i
)++]=(
uöt8_t
)(((
c
)>>12)|0xe0);

211 (
s
)[(
i
)++]=(
uöt8_t
)((((
c
)>>6)&0x3f)|0x80);

212 (
s
)[(
i
)++]=(
uöt8_t
)(((
c
)&0x3f)|0x80);

213  
i
;

215 } if((
uöt32_t
)(
c
)<=0x10ffff) {

216 if((
i
)+3<(
Àngth
)) {

217 (
s
)[(
i
)++]=(
uöt8_t
)(((
c
)>>18)|0xf0);

218 (
s
)[(
i
)++]=(
uöt8_t
)((((
c
)>>12)&0x3f)|0x80);

219 (
s
)[(
i
)++]=(
uöt8_t
)((((
c
)>>6)&0x3f)|0x80);

220 (
s
)[(
i
)++]=(
uöt8_t
)(((
c
)&0x3f)|0x80);

221  
i
;

225 if(
pIsEº‹
!=
NULL
) {

226 *
pIsEº‹
=
TRUE
;

228 
Àngth
-=
i
;

229 if(
Àngth
>0) {

230 
öt32_t
 
off£t
;

231 if(
Àngth
>3) {

232 
Àngth
=3;

234 
s
+=
i
;

235 
off£t
=0;

236 
c
=
utf8_îr‹VÆue
[
Àngth
-1];

237 
	`UTF8_APPEND_CHAR_UNSAFE
(
s
, 
off£t
, 
c
);

238 
i
=i+
off£t
;

241  
i
;

242 
	}
}

244 
U_CAPI
 
UCh¨32
 
U_EXPORT2


245 
	$utf8_¥evCh¨Sa„Body
(c⁄° 
uöt8_t
 *
s
, 
öt32_t
 
°¨t
, i¡32_à*
pi
, 
UCh¨32
 
c
, 
UBoﬁ
 
°ri˘
) {

246 
öt32_t
 
i
=*
pi
;

247 
uöt8_t
 
b
, 
cou¡
=1, 
shi·
=6;

250 
c
&=0x3f;

253 if(
i
<=
°¨t
) {

255 if(
°ri˘
>=0) {

256  
UTF8_ERROR_VALUE_1
;

258  
U_SENTINEL
;

264 
b
=
s
[--
i
];

265 if((
uöt8_t
)(
b
-0x80)<0x7e) {

266 if(
b
&0x40) {

268 
uöt8_t
 
shouldCou¡
=
	`UTF8_COUNT_TRAIL_BYTES
(
b
);

270 if(
cou¡
==
shouldCou¡
) {

272 *
pi
=
i
;

273 
	`UTF8_MASK_LEAD_BYTE
(
b
, 
cou¡
);

274 
c
|=(
UCh¨32
)
b
<<
shi·
;

275 if(
cou¡
>=4 || 
c
>0x10fff‡|| c<
utf8_möLegÆ
[cou¡] || (
	`UTF_IS_SURROGATE
(cË&& 
°ri˘
!=-2Ë|| (°ri˘>0 && 
	`UTF_IS_UNICODE_NONCHAR
(c))) {

277 if(
cou¡
>=4) {

278 
cou¡
=3;

280 if(
°ri˘
>=0) {

281 
c
=
utf8_îr‹VÆue
[
cou¡
];

283 
c
=
U_SENTINEL
;

292 if(
cou¡
<
shouldCou¡
) {

293 *
pi
=
i
;

294 if(
°ri˘
>=0) {

295 
c
=
utf8_îr‹VÆue
[
cou¡
];

297 
c
=
U_SENTINEL
;

300 if(
°ri˘
>=0) {

301 
c
=
UTF8_ERROR_VALUE_1
;

303 
c
=
U_SENTINEL
;

308 } if(
cou¡
<5) {

310 
c
|=(
UCh¨32
)(
b
&0x3f)<<
shi·
;

311 ++
cou¡
;

312 
shi·
+=6;

315 if(
°ri˘
>=0) {

316 
c
=
UTF8_ERROR_VALUE_1
;

318 
c
=
U_SENTINEL
;

324 if(
°ri˘
>=0) {

325 
c
=
UTF8_ERROR_VALUE_1
;

327 
c
=
U_SENTINEL
;

332  
c
;

333 
	}
}

335 
U_CAPI
 
öt32_t
 
U_EXPORT2


336 
	$utf8_back1Sa„Body
(c⁄° 
uöt8_t
 *
s
, 
öt32_t
 
°¨t
, i¡32_à
i
) {

338 
öt32_t
 
I
=
i
, 
Z
;

339 
uöt8_t
 
b
;

342 if(
I
-5>
°¨t
) {

343 
Z
=
I
-5;

345 
Z
=
°¨t
;

350 
b
=
s
[
I
];

351 if((
uöt8_t
)(
b
-0x80)>=0x7e) {

353 } if(
b
>=0xc0) {

354 if(
	`UTF8_COUNT_TRAIL_BYTES
(
b
)>=(
i
-
I
)) {

355  
I
;

360 } 
Z
<=--
I
);

363  
i
;

364 
	}
}

	@util.cpp

11 
	~"utû.h
"

12 
	~"unicode/unim©ch.h
"

13 
	~"unicode/uni£t.h
"

17 c⁄° 
UCh¨
 
	gBACKSLASH
 = 0x005C;

18 c⁄° 
UCh¨
 
	gUPPER_U
 = 0x0055;

19 c⁄° 
UCh¨
 
	gLOWER_U
 = 0x0075;

20 c⁄° 
UCh¨
 
	gAPOSTROPHE
 = 0x0027;

21 c⁄° 
UCh¨
 
	gSPACE
 = 0x0020;

24 c⁄° 
UCh¨
 
	gDIGITS
[] = {

31 
U_NAMESPACE_BEGIN


33 
	gUnicodeSåög
& 
	gICU_Utûôy
::
	$≠≥ndNumbî
(
UnicodeSåög
& 
ªsu…
, 
öt32_t
 
n
,

34 
öt32_t
 
ødix
, i¡32_à
möDigôs
) {

35 i‡(
ødix
 < 2 ||Ñadix > 36) {

37  
ªsu…
.
	`≠≥nd
((
UCh¨
)63 );

40 i‡(
n
 < 0) {

41 
n
 = -n;

42 
ªsu…
.
	`≠≥nd
((
UCh¨
)45 );

45 
öt32_t
 
¬
 = 
n
;

46 
öt32_t
 
r
 = 1;

47 
¬
 >
ødix
) {

48 
¬
 /
ødix
;

49 
r
 *
ødix
;

50 --
möDigôs
;

53 --
möDigôs
 > 0) {

54 
ªsu…
.
	`≠≥nd
(
DIGITS
[0]);

56 
r
 > 0) {

57 
öt32_t
 
digô
 = 
n
 / 
r
;

58 
ªsu…
.
	`≠≥nd
(
DIGITS
[
digô
]);

59 
n
 -
digô
 * 
r
;

60 
r
 /
ødix
;

62  
ªsu…
;

63 
	}
}

68 
UBoﬁ
 
	gICU_Utûôy
::
	$isU≈röèbÀ
(
UCh¨32
 
c
) {

69  !(
c
 >= 0x20 && c <= 0x7E);

70 
	}
}

78 
UBoﬁ
 
	gICU_Utûôy
::
	$esˇ≥U≈röèbÀ
(
UnicodeSåög
& 
ªsu…
, 
UCh¨32
 
c
) {

79 i‡(
	`isU≈röèbÀ
(
c
)) {

80 
ªsu…
.
	`≠≥nd
(
BACKSLASH
);

81 i‡(
c
 & ~0xFFFF) {

82 
ªsu…
.
	`≠≥nd
(
UPPER_U
);

83 
ªsu…
.
	`≠≥nd
(
DIGITS
[0xF&(
c
>>28)]);

84 
ªsu…
.
	`≠≥nd
(
DIGITS
[0xF&(
c
>>24)]);

85 
ªsu…
.
	`≠≥nd
(
DIGITS
[0xF&(
c
>>20)]);

86 
ªsu…
.
	`≠≥nd
(
DIGITS
[0xF&(
c
>>16)]);

88 
ªsu…
.
	`≠≥nd
(
LOWER_U
);

90 
ªsu…
.
	`≠≥nd
(
DIGITS
[0xF&(
c
>>12)]);

91 
ªsu…
.
	`≠≥nd
(
DIGITS
[0xF&(
c
>>8)]);

92 
ªsu…
.
	`≠≥nd
(
DIGITS
[0xF&(
c
>>4)]);

93 
ªsu…
.
	`≠≥nd
(
DIGITS
[0xF&
c
]);

94  
TRUE
;

96  
FALSE
;

97 
	}
}

132 
öt32_t
 
	gICU_Utûôy
::
	$skùWhôe•a˚
(c⁄° 
UnicodeSåög
& 
°r
, 
öt32_t
& 
pos
,

133 
UBoﬁ
 
adv™˚
) {

134 
öt32_t
 
p
 = 
pos
;

135 
p
 < 
°r
.
	`Àngth
()) {

136 
UCh¨32
 
c
 = 
°r
.
	`ch¨32At
(
p
);

137 i‡(!
	`u¥v_isRuÀWhôeS∑˚
(
c
)) {

140 
p
 +
	`UTF_CHAR_LENGTH
(
c
);

142 i‡(
adv™˚
) {

143 
pos
 = 
p
;

145  
p
;

146 
	}
}

203 
UBoﬁ
 
	gICU_Utûôy
::
	$∑r£Ch¨
(c⁄° 
UnicodeSåög
& 
id
, 
öt32_t
& 
pos
, 
UCh¨
 
ch
) {

204 
öt32_t
 
°¨t
 = 
pos
;

205 
	`skùWhôe•a˚
(
id
, 
pos
, 
TRUE
);

206 i‡(
pos
 =
id
.
	`Àngth
() ||

207 
id
.
	`ch¨At
(
pos
Ë!
ch
) {

208 
pos
 = 
°¨t
;

209  
FALSE
;

211 ++
pos
;

212  
TRUE
;

213 
	}
}

231 
öt32_t
 
	gICU_Utûôy
::
	$∑r£P©ã∫
(c⁄° 
UnicodeSåög
& 
∑t
,

232 c⁄° 
Rïœ˚abÀ
& 
ãxt
,

233 
öt32_t
 
ödex
,

234 
öt32_t
 
limô
) {

235 
öt32_t
 
ù©
 = 0;

238 i‡(
ù©
 =
∑t
.
	`Àngth
()) {

239  
ödex
;

242 
UCh¨32
 
˝©
 = 
∑t
.
	`ch¨32At
(
ù©
);

244 
ödex
 < 
limô
) {

245 
UCh¨32
 
c
 = 
ãxt
.
	`ch¨32At
(
ödex
);

248 i‡(
˝©
 == 126 ) {

249 i‡(
	`u¥v_isRuÀWhôeS∑˚
(
c
)) {

250 
ödex
 +
	`UTF_CHAR_LENGTH
(
c
);

253 i‡(++
ù©
 =
∑t
.
	`Àngth
()) {

254  
ödex
;

261 i‡(
c
 =
˝©
) {

262 
ödex
 +
	`UTF_CHAR_LENGTH
(
c
);

263 
ù©
 +
	`UTF_CHAR_LENGTH
(
˝©
);

264 i‡(
ù©
 =
∑t
.
	`Àngth
()) {

265  
ödex
;

275 
˝©
 = 
∑t
.
	`ch¨32At
(
ù©
);

279 
	}
}

299 
	gICU_Utûôy
::
	$≠≥ndToRuÀ
(
UnicodeSåög
& 
ruÀ
,

300 
UCh¨32
 
c
,

301 
UBoﬁ
 
isLôîÆ
,

302 
UBoﬁ
 
esˇ≥U≈röèbÀ
,

303 
UnicodeSåög
& 
quŸeBuf
) {

307 i‡(
isLôîÆ
 ||

308 (
esˇ≥U≈röèbÀ
 && 
ICU_Utûôy
::
	`isU≈röèbÀ
(
c
))) {

309 i‡(
quŸeBuf
.
	`Àngth
() > 0) {

317 
quŸeBuf
.
	`Àngth
() >= 2 &&

318 
quŸeBuf
.
	`ch¨At
(0Ë=
APOSTROPHE
 &&

319 
quŸeBuf
.
	`ch¨At
(1Ë=
APOSTROPHE
) {

320 
ruÀ
.
	`≠≥nd
(
BACKSLASH
).≠≥nd(
APOSTROPHE
);

321 
quŸeBuf
.
	`ªmove
(0, 2);

325 
öt32_t
 
åaûögCou¡
 = 0;

326 
quŸeBuf
.
	`Àngth
() >= 2 &&

327 
quŸeBuf
.
	`ch¨At
(quŸeBuf.
	`Àngth
()-2Ë=
APOSTROPHE
 &&

328 
quŸeBuf
.
	`ch¨At
(quŸeBuf.
	`Àngth
()-1Ë=
APOSTROPHE
) {

329 
quŸeBuf
.
	`åunˇã
(quŸeBuf.
	`Àngth
()-2);

330 ++
åaûögCou¡
;

332 i‡(
quŸeBuf
.
	`Àngth
() > 0) {

333 
ruÀ
.
	`≠≥nd
(
APOSTROPHE
);

334 
ruÀ
.
	`≠≥nd
(
quŸeBuf
);

335 
ruÀ
.
	`≠≥nd
(
APOSTROPHE
);

336 
quŸeBuf
.
	`åunˇã
(0);

338 
åaûögCou¡
-- > 0) {

339 
ruÀ
.
	`≠≥nd
(
BACKSLASH
).≠≥nd(
APOSTROPHE
);

342 i‡(
c
 !(
UCh¨32
)-1) {

348 i‡(
c
 =
SPACE
) {

349 
öt32_t
 
Àn
 = 
ruÀ
.
	`Àngth
();

350 i‡(
Àn
 > 0 && 
ruÀ
.
	`ch¨At
÷í-1Ë!
c
) {

351 
ruÀ
.
	`≠≥nd
(
c
);

353 } i‡(!
esˇ≥U≈röèbÀ
 || !
ICU_Utûôy
::
	`esˇ≥U≈röèbÀ
(
ruÀ
, 
c
)) {

354 
ruÀ
.
	`≠≥nd
(
c
);

360 i‡(
quŸeBuf
.
	`Àngth
() == 0 &&

361 (
c
 =
APOSTROPHE
 || c =
BACKSLASH
)) {

362 
ruÀ
.
	`≠≥nd
(
BACKSLASH
);

363 
ruÀ
.
	`≠≥nd
(
c
);

369 i‡(
quŸeBuf
.
	`Àngth
() > 0 ||

370 (
c
 >= 0x0021 && c <= 0x007E &&

371 !((
c
 >= 0x0030 && c <= 0x0039 ) ||

372 (
c
 >= 0x0041 && c <= 0x005A ) ||

373 (
c
 >= 0x0061 && c <= 0x007A ))) ||

374 
	`u¥v_isRuÀWhôeS∑˚
(
c
)) {

375 
quŸeBuf
.
	`≠≥nd
(
c
);

377 i‡(
c
 =
APOSTROPHE
) {

378 
quŸeBuf
.
	`≠≥nd
(
c
);

384 
ruÀ
.
	`≠≥nd
(
c
);

386 
	}
}

388 
	gICU_Utûôy
::
	$≠≥ndToRuÀ
(
UnicodeSåög
& 
ruÀ
,

389 c⁄° 
UnicodeSåög
& 
ãxt
,

390 
UBoﬁ
 
isLôîÆ
,

391 
UBoﬁ
 
esˇ≥U≈röèbÀ
,

392 
UnicodeSåög
& 
quŸeBuf
) {

393 
öt32_t
 
i
=0; i<
ãxt
.
	`Àngth
(); ++i) {

394 
	`≠≥ndToRuÀ
(
ruÀ
, 
ãxt
[
i
], 
isLôîÆ
, 
esˇ≥U≈röèbÀ
, 
quŸeBuf
);

396 
	}
}

402 
	gICU_Utûôy
::
	$≠≥ndToRuÀ
(
UnicodeSåög
& 
ruÀ
,

403 c⁄° 
UnicodeM©chî
* 
m©chî
,

404 
UBoﬁ
 
esˇ≥U≈röèbÀ
,

405 
UnicodeSåög
& 
quŸeBuf
) {

406 i‡(
m©chî
 !
NULL
) {

407 
UnicodeSåög
 
∑t
;

408 
	`≠≥ndToRuÀ
(
ruÀ
, 
m©chî
->
	`toP©ã∫
(
∑t
, 
esˇ≥U≈röèbÀ
),

409 
TRUE
, 
esˇ≥U≈röèbÀ
, 
quŸeBuf
);

411 
	}
}

413 
U_NAMESPACE_END


415 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


416 
	$u¥v_isRuÀWhôeS∑˚
(
UCh¨32
 
c
) {

423  (
c
 >= 0x0009 && c <= 0x2029 &&

424 (
c
 <= 0x000D || c == 0x0020 || c == 0x0085 ||

425 
c
 == 0x200E || c == 0x200F || c >= 0x2028));

426 
	}
}

428 
U_CAPI
 
U_NAMESPACE_QUALIFIER
 
UnicodeSë
* 
U_EXPORT2


429 
	$u¥v_›íRuÀWhôeS∑˚Së
(
UEº‹Code
* 
ec
) {

430 if(
	`U_FAILURE
(*
ec
)) {

431  
NULL
;

435 
U_NAMESPACE_QUALIFIER
 
UnicodeSë
 *
£t
=
√w
 U_NAMESPACE_QUALIFIER 
	`UnicodeSë
(9, 0xd);

437 i‡(
£t
 =
NULL
) {

438 *
ec
 = 
U_MEMORY_ALLOCATION_ERROR
;

439  
NULL
;

441 
£t
->
UnicodeSë
::
	`add
(0x20).add(0x85).add(0x200e, 0x200f).add(0x2028, 0x2029);

442  
£t
;

443 
	}
}

	@util.h

11 #i‚de‡
ICU_UTIL_H


12 
	#ICU_UTIL_H


	)

14 
	~"unicode/uty≥s.h
"

15 
	~"unicode/uobje˘.h
"

16 
	~"unicode/uni°r.h
"

23 
U_NAMESPACE_BEGIN


25 
˛ass
 
	gUnicodeM©chî
;

26 
˛ass
 
	gUnicodeSë
;

28 ˛as†
	cU_COMMON_API
 
	mICU_Utûôy
 {

29 
	mpublic
:

44 
UnicodeSåög
& 
≠≥ndNumbî
(UnicodeSåög& 
ªsu…
, 
öt32_t
 
n
,

45 
öt32_t
 
ødix
 = 10,

46 
öt32_t
 
möDigôs
 = 1);

54 
UBoﬁ
 
isU≈röèbÀ
(
UCh¨32
 
c
);

62 
UBoﬁ
 
esˇ≥U≈röèbÀ
(
UnicodeSåög
& 
ªsu…
, 
UCh¨32
 
c
);

89 
öt32_t
 
skùWhôe•a˚
(c⁄° 
UnicodeSåög
& 
°r
, i¡32_t& 
pos
,

90 
UBoﬁ
 
adv™˚
 = 
FALSE
);

125 
UBoﬁ
 
∑r£Ch¨
(c⁄° 
UnicodeSåög
& 
id
, 
öt32_t
& 
pos
, 
UCh¨
 
ch
);

146 
öt32_t
 
∑r£P©ã∫
(c⁄° 
UnicodeSåög
& 
ruÀ
, i¡32_à
pos
, i¡32_à
limô
,

147 c⁄° 
UnicodeSåög
& 
∑âîn
, 
öt32_t
* 
∑r£dI¡s
);

165 
öt32_t
 
∑r£P©ã∫
(c⁄° 
UnicodeSåög
& 
∑t
,

166 c⁄° 
Rïœ˚abÀ
& 
ãxt
,

167 
öt32_t
 
ödex
,

168 
öt32_t
 
limô
);

178 
öt32_t
 
∑r£I¡egî
(c⁄° 
UnicodeSåög
& 
ruÀ
, i¡32_t& 
pos
, i¡32_à
limô
);

194 
UnicodeSåög
 
∑r£UnicodeIdítifõr
(c⁄° UnicodeSåög& 
°r
, 
öt32_t
& 
pos
);

212 
öt32_t
 
∑r£Numbî
(c⁄° 
UnicodeSåög
& 
ãxt
,

213 
öt32_t
& 
pos
, 
öt8_t
 
ødix
);

215 
≠≥ndToRuÀ
(
UnicodeSåög
& 
ruÀ
,

216 
UCh¨32
 
c
,

217 
UBoﬁ
 
isLôîÆ
,

218 
UBoﬁ
 
esˇ≥U≈röèbÀ
,

219 
UnicodeSåög
& 
quŸeBuf
);

221 
≠≥ndToRuÀ
(
UnicodeSåög
& 
ruÀ
,

222 c⁄° 
UnicodeSåög
& 
ãxt
,

223 
UBoﬁ
 
isLôîÆ
,

224 
UBoﬁ
 
esˇ≥U≈röèbÀ
,

225 
UnicodeSåög
& 
quŸeBuf
);

227 
≠≥ndToRuÀ
(
UnicodeSåög
& 
ruÀ
,

228 c⁄° 
UnicodeM©chî
* 
m©chî
,

229 
UBoﬁ
 
esˇ≥U≈röèbÀ
,

230 
UnicodeSåög
& 
quŸeBuf
);

232 
	m¥iv©e
:

234 
ICU_Utûôy
();

237 
U_NAMESPACE_END


247 
U_CAPI
 
U_NAMESPACE_QUALIFIER
 
UnicodeSë
* 
U_EXPORT2


248 
u¥v_›íRuÀWhôeS∑˚Së
(
UEº‹Code
* 
ec
);

257 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


258 
u¥v_isRuÀWhôeS∑˚
(
UCh¨32
 
c
);

	@util_props.cpp

11 
	~"utû.h
"

12 
	~"unicode/uch¨.h
"

14 
U_NAMESPACE_BEGIN


24 
öt32_t
 
	gICU_Utûôy
::
	$∑r£I¡egî
(c⁄° 
UnicodeSåög
& 
ruÀ
, 
öt32_t
& 
pos
, i¡32_à
limô
) {

25 
öt32_t
 
cou¡
 = 0;

26 
öt32_t
 
vÆue
 = 0;

27 
öt32_t
 
p
 = 
pos
;

28 
öt8_t
 
ødix
 = 10;

30 i‡(
p
 < 
limô
 && 
ruÀ
.
	`ch¨At
(p) == 48 ) {

31 i‡(
p
+1 < 
limô
 && (
ruÀ
.
	`ch¨At
(p+1) == 0x78 ||Ñule.charAt(p+1) == 0x58 )) {

32 
p
 += 2;

33 
ødix
 = 16;

36 
p
++;

37 
cou¡
 = 1;

38 
ødix
 = 8;

42 
p
 < 
limô
) {

43 
öt32_t
 
d
 = 
	`u_digô
(
ruÀ
.
	`ch¨At
(
p
++), 
ødix
);

44 i‡(
d
 < 0) {

45 --
p
;

48 ++
cou¡
;

49 
öt32_t
 
v
 = (
vÆue
 * 
ødix
Ë+ 
d
;

50 i‡(
v
 <
vÆue
) {

57 
vÆue
 = 
v
;

59 i‡(
cou¡
 > 0) {

60 
pos
 = 
p
;

62  
vÆue
;

63 
	}
}

84 
öt32_t
 
	gICU_Utûôy
::
	$∑r£P©ã∫
(c⁄° 
UnicodeSåög
& 
ruÀ
, 
öt32_t
 
pos
, i¡32_à
limô
,

85 c⁄° 
UnicodeSåög
& 
∑âîn
, 
öt32_t
* 
∑r£dI¡s
) {

87 
öt32_t
 
p
;

88 
öt32_t
 
ötCou¡
 = 0;

89 
öt32_t
 
i
=0; i<
∑âîn
.
	`Àngth
(); ++i) {

90 
UCh¨
 
˝©
 = 
∑âîn
.
	`ch¨At
(
i
);

91 
UCh¨
 
c
;

92 
˝©
) {

94 i‡(
pos
 >
limô
) {

97 
c
 = 
ruÀ
.
	`ch¨At
(
pos
++);

98 i‡(!
	`u¥v_isRuÀWhôeS∑˚
(
c
)) {

103 
pos
 = 
	`skùWhôe•a˚
(
ruÀ
,Öos);

106 
p
 = 
pos
;

107 
∑r£dI¡s
[
ötCou¡
++] = 
	`∑r£I¡egî
(
ruÀ
, 
p
, 
limô
);

108 i‡(
p
 =
pos
) {

112 
pos
 = 
p
;

115 i‡(
pos
 >
limô
) {

118 
c
 = (
UCh¨
Ë
	`u_tﬁowî
(
ruÀ
.
	`ch¨At
(
pos
++));

119 i‡(
c
 !
˝©
) {

125  
pos
;

126 
	}
}

142 
UnicodeSåög
 
	gICU_Utûôy
::
	$∑r£UnicodeIdítifõr
(c⁄° 
UnicodeSåög
& 
°r
, 
öt32_t
& 
pos
) {

145 
UnicodeSåög
 
buf
;

146 
p
 = 
pos
;

147 
p
 < 
°r
.
	`Àngth
()) {

148 
UCh¨32
 
ch
 = 
°r
.
	`ch¨32At
(
p
);

149 i‡(
buf
.
	`Àngth
() == 0) {

150 i‡(
	`u_isIDSèπ
(
ch
)) {

151 
buf
.
	`≠≥nd
(
ch
);

153 
buf
.
	`åunˇã
(0);

154  
buf
;

157 i‡(
	`u_isIDP¨t
(
ch
)) {

158 
buf
.
	`≠≥nd
(
ch
);

163 
p
 +
	`UTF_CHAR_LENGTH
(
ch
);

165 
pos
 = 
p
;

166  
buf
;

167 
	}
}

185 
öt32_t
 
	gICU_Utûôy
::
	$∑r£Numbî
(c⁄° 
UnicodeSåög
& 
ãxt
,

186 
öt32_t
& 
pos
, 
öt8_t
 
ødix
) {

190 
öt32_t
 
n
 = 0;

191 
öt32_t
 
p
 = 
pos
;

192 
p
 < 
ãxt
.
	`Àngth
()) {

193 
UCh¨32
 
ch
 = 
ãxt
.
	`ch¨32At
(
p
);

194 
öt32_t
 
d
 = 
	`u_digô
(
ch
, 
ødix
);

195 i‡(
d
 < 0) {

198 
n
 = 
ødix
*¿+ 
d
;

201 i‡(
n
 < 0) {

204 ++
p
;

206 i‡(
p
 =
pos
) {

209 
pos
 = 
p
;

210  
n
;

211 
	}
}

213 
	gU_NAMESPACE_END


	@utrace.c

12 
	#UTRACE_IMPL


	)

13 
	~"unicode/uåa˚.h
"

14 
	~"uåacimp.h
"

15 
	~"c°rög.h
"

16 
	~"uas£π.h
"

17 
	~"u˛n_cmn.h
"

20 
UTø˚E¡ry
 *
	gpTø˚E¡ryFunc
 = 
NULL
;

21 
UTø˚Exô
 *
	gpTø˚ExôFunc
 = 
NULL
;

22 
UTø˚D©a
 *
	gpTø˚D©aFunc
 = 
NULL
;

23 c⁄° *
	ggTø˚C⁄ãxt
 = 
NULL
;

25 
U_EXPORT
 
öt32_t


26 
	guåa˚_Àvñ
 = 
UTRACE_ERROR
;

28 
U_CAPI
 
U_EXPORT2


29 
	$uåa˚_íåy
(
öt32_t
 
‚Numbî
) {

30 i‡(
pTø˚E¡ryFunc
 !
NULL
) {

31 (*
pTø˚E¡ryFunc
)(
gTø˚C⁄ãxt
, 
‚Numbî
);

33 
	}
}

36 c⁄° 
	ggExôFmt
[] = "Returns.";

37 c⁄° 
	ggExôFmtVÆue
[] = "Returns %d.";

38 c⁄° 
	ggExôFmtSètus
[] = "Returns. Status = %d.";

39 c⁄° 
	ggExôFmtVÆueSètus
[] = "Returns %d. Status = %d.";

40 c⁄° 
	ggExôFmtPåSètus
[] = "Returns %d. Status = %p.";

42 
U_CAPI
 
U_EXPORT2


43 
	$uåa˚_exô
(
öt32_t
 
‚Numbî
, i¡32_à
ªtu∫Ty≥
, ...) {

44 i‡(
pTø˚ExôFunc
 !
NULL
) {

45 
va_li°
 
¨gs
;

46 c⁄° *
fmt
;

48 
ªtu∫Ty≥
) {

50 
fmt
 = 
gExôFmt
;

52 
UTRACE_EXITV_I32
:

53 
fmt
 = 
gExôFmtVÆue
;

55 
UTRACE_EXITV_STATUS
:

56 
fmt
 = 
gExôFmtSètus
;

58 
UTRACE_EXITV_I32
 | 
UTRACE_EXITV_STATUS
:

59 
fmt
 = 
gExôFmtVÆueSètus
;

61 
UTRACE_EXITV_PTR
 | 
UTRACE_EXITV_STATUS
:

62 
fmt
 = 
gExôFmtPåSètus
;

65 
	`U_ASSERT
(
FALSE
);

66 
fmt
 = 
gExôFmt
;

69 
	`va_°¨t
(
¨gs
, 
ªtu∫Ty≥
);

70 (*
pTø˚ExôFunc
)(
gTø˚C⁄ãxt
, 
‚Numbî
, 
fmt
, 
¨gs
);

71 
	`va_íd
(
¨gs
);

73 
	}
}

77 
U_CAPI
 
U_EXPORT2


78 
	$uåa˚_d©a
(
öt32_t
 
‚Numbî
, i¡32_à
Àvñ
, c⁄° *
fmt
, ...) {

79 i‡(
pTø˚D©aFunc
 !
NULL
) {

80 
va_li°
 
¨gs
;

81 
	`va_°¨t
(
¨gs
, 
fmt
 );

82 (*
pTø˚D©aFunc
)(
gTø˚C⁄ãxt
, 
‚Numbî
, 
Àvñ
, 
fmt
, 
¨gs
);

83 
	`va_íd
(
¨gs
);

85 
	}
}

88 
	$ouçutCh¨
(
c
, *
outBuf
, 
öt32_t
 *
outIx
, i¡32_à
ˇ∑côy
, i¡32_à
ödít
) {

89 
öt32_t
 
i
;

99 i‡(*
outIx
==0 ||

100 (
c
!='\n' && c!=0 && *
outIx
 < 
ˇ∑côy
 && 
outBuf
[(*outIx)-1]=='\n') ||

101 (
c
=='\n' && *
outIx
>=
ˇ∑côy
))

104 
i
=0; i<
ödít
; i++) {

105 i‡(*
outIx
 < 
ˇ∑côy
) {

106 
outBuf
[*
outIx
] = ' ';

108 (*
outIx
)++;

112 i‡(*
outIx
 < 
ˇ∑côy
) {

113 
outBuf
[*
outIx
] = 
c
;

115 i‡(
c
 != 0) {

119 (*
outIx
)++;

121 
	}
}

123 
	$ouçutHexByãs
(
öt64_t
 
vÆ
, 
öt32_t
 
ch¨sToOuçut
,

124 *
outBuf
, 
öt32_t
 *
outIx
, i¡32_à
ˇ∑côy
) {

125 c⁄° 
gHexCh¨s
[] = "0123456789abcdef";

126 
öt32_t
 
shi·Cou¡
;

127 
shi·Cou¡
=(
ch¨sToOuçut
-1)*4; shiftCount >= 0; shiftCount-=4) {

128 
c
 = 
gHexCh¨s
[(
vÆ
 >> 
shi·Cou¡
) & 0xf];

129 
	`ouçutCh¨
(
c
, 
outBuf
, 
outIx
, 
ˇ∑côy
, 0);

131 
	}
}

134 
	$ouçutPåByãs
(*
vÆ
, *
outBuf
, 
öt32_t
 *
outIx
, i¡32_à
ˇ∑côy
) {

135 
öt32_t
 
i
;

136 
öt32_t
 
öcVÆ
 = 1;

137 *
p
 = (*)&
vÆ
;

139 #i‡!
U_IS_BIG_ENDIAN


141 
öcVÆ
 = -1;

142 
p
 += (*) - 1;

147 
i
=0; i<(*); i++) {

148 
	`ouçutHexByãs
(*
p
, 2, 
outBuf
, 
outIx
, 
ˇ∑côy
);

149 
p
 +
öcVÆ
;

151 
	}
}

153 
	$ouçutSåög
(c⁄° *
s
, *
outBuf
, 
öt32_t
 *
outIx
, i¡32_à
ˇ∑côy
, i¡32_à
ödít
) {

154 
öt32_t
 
i
 = 0;

155 
c
;

156 i‡(
s
==
NULL
) {

157 
s
 = "*NULL*";

160 
c
 = 
s
[
i
++];

161 
	`ouçutCh¨
(
c
, 
outBuf
, 
outIx
, 
ˇ∑côy
, 
ödít
);

162 } 
c
 != 0);

163 
	}
}

167 
	$ouçutUSåög
(c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àn
,

168 *
outBuf
, 
öt32_t
 *
outIx
, i¡32_à
ˇ∑côy
, i¡32_à
ödít
) {

169 
öt32_t
 
i
 = 0;

170 
UCh¨
 
c
;

171 i‡(
s
==
NULL
) {

172 
	`ouçutSåög
(
NULL
, 
outBuf
, 
outIx
, 
ˇ∑côy
, 
ödít
);

176 
i
=0; i<
Àn
 ||Üen==-1; i++) {

177 
c
 = 
s
[
i
];

178 
	`ouçutHexByãs
(
c
, 4, 
outBuf
, 
outIx
, 
ˇ∑côy
);

179 
	`ouçutCh¨
(' ', 
outBuf
, 
outIx
, 
ˇ∑côy
, 
ödít
);

180 i‡(
Àn
 =-1 && 
c
==0) {

184 
	}
}

186 
U_CAPI
 
öt32_t
 
U_EXPORT2


187 
	$uåa˚_vf‹m©
(*
outBuf
, 
öt32_t
 
ˇ∑côy
, i¡32_à
ödít
, c⁄° *
fmt
, 
va_li°
 
¨gs
) {

188 
öt32_t
 
outIx
 = 0;

189 
öt32_t
 
fmtIx
 = 0;

190 
fmtC
;

191 
c
;

192 
öt32_t
 
ötArg
;

193 
öt64_t
 
l⁄gArg
 = 0;

194 *
±rArg
;

199 
fmtC
 = 
fmt
[
fmtIx
++];

200 i‡(
fmtC
 != '%') {

202 
	`ouçutCh¨
(
fmtC
, 
outBuf
, &
outIx
, 
ˇ∑côy
, 
ödít
);

203 i‡(
fmtC
 == 0) {

214 
fmtC
 = 
fmt
[
fmtIx
++];

216 
fmtC
) {

219 
c
 = ()
	`va_¨g
(
¨gs
, 
öt32_t
);

220 
	`ouçutCh¨
(
c
, 
outBuf
, &
outIx
, 
ˇ∑côy
, 
ödít
);

225 
±rArg
 = 
	`va_¨g
(
¨gs
, *);

226 
	`ouçutSåög
((c⁄° *)
±rArg
, 
outBuf
, &
outIx
, 
ˇ∑côy
, 
ödít
);

231 
±rArg
 = 
	`va_¨g
(
¨gs
, *);

232 
ötArg
 =(
öt32_t
)
	`va_¨g
(
¨gs
, int32_t);

233 
	`ouçutUSåög
((c⁄° 
UCh¨
 *)
±rArg
, 
ötArg
, 
outBuf
, &
outIx
, 
ˇ∑côy
, 
ödít
);

238 
ötArg
 = 
	`va_¨g
(
¨gs
, );

239 
	`ouçutHexByãs
(
ötArg
, 2, 
outBuf
, &
outIx
, 
ˇ∑côy
);

244 
ötArg
 = 
	`va_¨g
(
¨gs
, );

245 
	`ouçutHexByãs
(
ötArg
, 4, 
outBuf
, &
outIx
, 
ˇ∑côy
);

250 
ötArg
 = 
	`va_¨g
(
¨gs
, );

251 
	`ouçutHexByãs
(
ötArg
, 8, 
outBuf
, &
outIx
, 
ˇ∑côy
);

256 
l⁄gArg
 = 
	`va_¨g
(
¨gs
, 
öt64_t
);

257 
	`ouçutHexByãs
(
l⁄gArg
, 16, 
outBuf
, &
outIx
, 
ˇ∑côy
);

262 
±rArg
 = 
	`va_¨g
(
¨gs
, *);

263 
	`ouçutPåByãs
(
±rArg
, 
outBuf
, &
outIx
, 
ˇ∑côy
);

271 
	`ouçutCh¨
('%', 
outBuf
, &
outIx
, 
ˇ∑côy
, 
ödít
);

272 
fmtIx
--;

278 
ve˘‹Ty≥
;

279 
öt32_t
 
ve˘‹Lí
;

280 c⁄° *
i8På
;

281 
öt16_t
 *
i16På
;

282 
öt32_t
 *
i32På
;

283 
öt64_t
 *
i64På
;

284 **
±rPå
;

285 
öt32_t
 
ch¨sToOuçut
 = 0;

286 
öt32_t
 
i
;

288 
ve˘‹Ty≥
 = 
fmt
[
fmtIx
];

289 i‡(
ve˘‹Ty≥
 != 0) {

290 
fmtIx
++;

292 
i8På
 = (c⁄° *)
	`va_¨g
(
¨gs
, *);

293 
i16På
 = (
öt16_t
 *)
i8På
;

294 
i32På
 = (
öt32_t
 *)
i8På
;

295 
i64På
 = (
öt64_t
 *)
i8På
;

296 
±rPå
 = (**)
i8På
;

297 
ve˘‹Lí
 =(
öt32_t
)
	`va_¨g
(
¨gs
, int32_t);

298 i‡(
±rPå
 =
NULL
) {

299 
	`ouçutSåög
("*NULL* ", 
outBuf
, &
outIx
, 
ˇ∑côy
, 
ödít
);

301 
i
=0; i<
ve˘‹Lí
 || vectorLen==-1; i++) {

302 
ve˘‹Ty≥
) {

304 
ch¨sToOuçut
 = 2;

305 
l⁄gArg
 = *
i8På
++;

308 
ch¨sToOuçut
 = 4;

309 
l⁄gArg
 = *
i16På
++;

312 
ch¨sToOuçut
 = 8;

313 
l⁄gArg
 = *
i32På
++;

316 
ch¨sToOuçut
 = 16;

317 
l⁄gArg
 = *
i64På
++;

320 
ch¨sToOuçut
 = 0;

321 
	`ouçutPåByãs
(*
±rPå
, 
outBuf
, &
outIx
, 
ˇ∑côy
);

322 
l⁄gArg
 = *
±rPå
==
NULL
? 0: 1;

323 
±rPå
++;

326 
ch¨sToOuçut
 = 0;

327 
	`ouçutCh¨
(*
i8På
, 
outBuf
, &
outIx
, 
ˇ∑côy
, 
ödít
);

328 
l⁄gArg
 = *
i8På
;

329 
i8På
++;

332 
ch¨sToOuçut
 = 0;

333 
	`ouçutSåög
(*
±rPå
, 
outBuf
, &
outIx
, 
ˇ∑côy
, 
ödít
);

334 
	`ouçutCh¨
('\n', 
outBuf
, &
outIx
, 
ˇ∑côy
, 
ödít
);

335 
l⁄gArg
 = *
±rPå
==
NULL
? 0: 1;

336 
±rPå
++;

340 
ch¨sToOuçut
 = 0;

341 
	`ouçutUSåög
((c⁄° 
UCh¨
 *)*
±rPå
, -1, 
outBuf
, &
outIx
, 
ˇ∑côy
, 
ödít
);

342 
	`ouçutCh¨
('\n', 
outBuf
, &
outIx
, 
ˇ∑côy
, 
ödít
);

343 
l⁄gArg
 = *
±rPå
==
NULL
? 0: 1;

344 
±rPå
++;

349 i‡(
ch¨sToOuçut
 > 0) {

350 
	`ouçutHexByãs
(
l⁄gArg
, 
ch¨sToOuçut
, 
outBuf
, &
outIx
, 
ˇ∑côy
);

351 
	`ouçutCh¨
(' ', 
outBuf
, &
outIx
, 
ˇ∑côy
, 
ödít
);

353 i‡(
ve˘‹Lí
 =-1 && 
l⁄gArg
 == 0) {

358 
	`ouçutCh¨
('[', 
outBuf
, &
outIx
, 
ˇ∑côy
, 
ödít
);

359 
	`ouçutHexByãs
(
ve˘‹Lí
, 8, 
outBuf
, &
outIx
, 
ˇ∑côy
);

360 
	`ouçutCh¨
(']', 
outBuf
, &
outIx
, 
ˇ∑côy
, 
ödít
);

370 
	`ouçutCh¨
(
fmtC
, 
outBuf
, &
outIx
, 
ˇ∑côy
, 
ödít
);

373 
	`ouçutCh¨
(0, 
outBuf
, &
outIx
, 
ˇ∑côy
, 
ödít
);

374  
outIx
 + 1;

375 
	}
}

380 
U_CAPI
 
öt32_t
 
U_EXPORT2


381 
	$uåa˚_f‹m©
(*
outBuf
, 
öt32_t
 
ˇ∑côy
,

382 
öt32_t
 
ödít
, c⁄° *
fmt
, ...) {

383 
öt32_t
 
ªtVÆ
;

384 
va_li°
 
¨gs
;

385 
	`va_°¨t
(
¨gs
, 
fmt
 );

386 
ªtVÆ
 = 
	`uåa˚_vf‹m©
(
outBuf
, 
ˇ∑côy
, 
ödít
, 
fmt
, 
¨gs
);

387 
	`va_íd
(
¨gs
);

388  
ªtVÆ
;

389 
	}
}

392 
U_CAPI
 
U_EXPORT2


393 
	$uåa˚_£tFun˘i⁄s
(c⁄° *
c⁄ãxt
,

394 
UTø˚E¡ry
 *
e
, 
UTø˚Exô
 *
x
, 
UTø˚D©a
 *
d
) {

395 
pTø˚E¡ryFunc
 = 
e
;

396 
pTø˚ExôFunc
 = 
x
;

397 
pTø˚D©aFunc
 = 
d
;

398 
gTø˚C⁄ãxt
 = 
c⁄ãxt
;

399 
	}
}

402 
U_CAPI
 
U_EXPORT2


403 
	$uåa˚_gëFun˘i⁄s
(c⁄° **
c⁄ãxt
,

404 
UTø˚E¡ry
 **
e
, 
UTø˚Exô
 **
x
, 
UTø˚D©a
 **
d
) {

405 *
e
 = 
pTø˚E¡ryFunc
;

406 *
x
 = 
pTø˚ExôFunc
;

407 *
d
 = 
pTø˚D©aFunc
;

408 *
c⁄ãxt
 = 
gTø˚C⁄ãxt
;

409 
	}
}

411 
U_CAPI
 
U_EXPORT2


412 
	$uåa˚_£tLevñ
(
öt32_t
 
Àvñ
) {

413 i‡(
Àvñ
 < 
UTRACE_OFF
) {

414 
Àvñ
 = 
UTRACE_OFF
;

416 i‡(
Àvñ
 > 
UTRACE_VERBOSE
) {

417 
Àvñ
 = 
UTRACE_VERBOSE
;

419 
uåa˚_Àvñ
 = 
Àvñ
;

420 
	}
}

422 
U_CAPI
 
öt32_t
 
U_EXPORT2


423 
	$uåa˚_gëLevñ
() {

424  
uåa˚_Àvñ
;

425 
	}
}

428 
U_CFUNC
 
UBoﬁ


429 
	$uåa˚_˛ónup
() {

430 
pTø˚E¡ryFunc
 = 
NULL
;

431 
pTø˚ExôFunc
 = 
NULL
;

432 
pTø˚D©aFunc
 = 
NULL
;

433 
uåa˚_Àvñ
 = 
UTRACE_OFF
;

434 
gTø˚C⁄ãxt
 = 
NULL
;

435  
TRUE
;

436 
	}
}

440 
	gåFnName
[] = {

443 
NULL


448 
	gåC⁄vNames
[] = {

457 
NULL


462 
	gåCﬁlNames
[] = {

470 
NULL


474 
U_CAPI
 c⁄° * 
U_EXPORT2


475 
	$uåa˚_fun˘i⁄Name
(
öt32_t
 
‚Numbî
) {

476 if(
UTRACE_FUNCTION_START
 <
‚Numbî
 && fnNumbî < 
UTRACE_FUNCTION_LIMIT
) {

477  
åFnName
[
‚Numbî
];

478 } if(
UTRACE_CONVERSION_START
 <
‚Numbî
 && fnNumbî < 
UTRACE_CONVERSION_LIMIT
) {

479  
åC⁄vNames
[
‚Numbî
 - 
UTRACE_CONVERSION_START
];

480 } if(
UTRACE_COLLATION_START
 <
‚Numbî
 && fnNumbî < 
UTRACE_COLLATION_LIMIT
){

481  
åCﬁlNames
[
‚Numbî
 - 
UTRACE_COLLATION_START
];

485 
	}
}

	@utracimp.h

40 #i‚de‡
__UTRACIMP_H__


41 
	#__UTRACIMP_H__


	)

43 
	~"unicode/uåa˚.h
"

44 
	~<°d¨g.h
>

46 
	gU_CDECL_BEGIN


54 #ifde‡
UTRACE_IMPL


55 
U_EXPORT
 
	göt32_t


57 
U_CFUNC
 
U_COMMON_API
 
	göt32_t


59 
	guåa˚_Àvñ
;

70 
	eUTø˚ExôVÆ
 {

72 
	mUTRACE_EXITV_NONE
 = 0,

74 
	mUTRACE_EXITV_I32
 = 1,

76 
	mUTRACE_EXITV_PTR
 = 2,

78 
	mUTRACE_EXITV_BOOL
 = 3,

80 
	mUTRACE_EXITV_MASK
 = 0xf,

82 
	mUTRACE_EXITV_STATUS
 = 0x10

83 } 
	tUTø˚ExôVÆ
;

91 
U_CAPI
 
U_EXPORT2


92 
uåa˚_íåy
(
öt32_t
 
‚Numbî
);

102 
U_CAPI
 
U_EXPORT2


103 
uåa˚_exô
(
öt32_t
 
‚Numbî
, i¡32_à
ªtu∫Ty≥
, ...);

117 
U_CAPI
 
U_EXPORT2


118 
uåa˚_d©a
(
öt32_t
 
uåa˚FnNumbî
, i¡32_à
Àvñ
, c⁄° *
fmt
, ...);

120 
	gU_CDECL_END


122 #i‡
U_ENABLE_TRACING


129 
	#UTRACE_LEVEL
(
Àvñ
Ë(
	`uåa˚_gëLevñ
()>=÷evñ))

	)

141 
	#UTRACE_TRACED_ENTRY
 0x80000000

	)

157 
	#UTRACE_ENTRY
(
‚Numbî
) \

158 
öt32_t
 
uåa˚FnNumbî
=(
‚Numbî
); \

159 if(
	`uåa˚_gëLevñ
()>=
UTRACE_INFO
) { \

160 
	`uåa˚_íåy
(
‚Numbî
); \

161 
uåa˚FnNumbî
 |
UTRACE_TRACED_ENTRY
; \

162 }

	)

175 
	#UTRACE_ENTRY_OC
(
‚Numbî
) \

176 
öt32_t
 
uåa˚FnNumbî
=(
‚Numbî
); \

177 if(
	`uåa˚_gëLevñ
()>=
UTRACE_OPEN_CLOSE
) { \

178 
	`uåa˚_íåy
(
‚Numbî
); \

179 
uåa˚FnNumbî
 |
UTRACE_TRACED_ENTRY
; \

180 }

	)

194 
	#UTRACE_EXIT
() \

195 {if(
uåa˚FnNumbî
 & 
UTRACE_TRACED_ENTRY
) { \

196 
	`uåa˚_exô
(
uåa˚FnNumbî
 & ~
UTRACE_TRACED_ENTRY
, 
UTRACE_EXITV_NONE
); \

197 }}

	)

207 
	#UTRACE_EXIT_VALUE
(
vÆ
) \

208 {if(
uåa˚FnNumbî
 & 
UTRACE_TRACED_ENTRY
) { \

209 
	`uåa˚_exô
(
uåa˚FnNumbî
 & ~
UTRACE_TRACED_ENTRY
, 
UTRACE_EXITV_I32
, 
vÆ
); \

210 }}

	)

212 
	#UTRACE_EXIT_STATUS
(
°©us
) \

213 {if(
uåa˚FnNumbî
 & 
UTRACE_TRACED_ENTRY
) { \

214 
	`uåa˚_exô
(
uåa˚FnNumbî
 & ~
UTRACE_TRACED_ENTRY
, 
UTRACE_EXITV_STATUS
, 
°©us
); \

215 }}

	)

217 
	#UTRACE_EXIT_VALUE_STATUS
(
vÆ
, 
°©us
) \

218 {if(
uåa˚FnNumbî
 & 
UTRACE_TRACED_ENTRY
) { \

219 
	`uåa˚_exô
(
uåa˚FnNumbî
 & ~
UTRACE_TRACED_ENTRY
, (
UTRACE_EXITV_I32
 | 
UTRACE_EXITV_STATUS
), 
vÆ
, 
°©us
); \

220 }}

	)

222 
	#UTRACE_EXIT_PTR_STATUS
(
±r
, 
°©us
) \

223 {if(
uåa˚FnNumbî
 & 
UTRACE_TRACED_ENTRY
) { \

224 
	`uåa˚_exô
(
uåa˚FnNumbî
 & ~
UTRACE_TRACED_ENTRY
, (
UTRACE_EXITV_PTR
 | 
UTRACE_EXITV_STATUS
), 
±r
, 
°©us
); \

225 }}

	)

235 
	#UTRACE_DATA0
(
Àvñ
, 
fmt
) \

236 if(
	`UTRACE_LEVEL
(
Àvñ
)) { \

237 
	`uåa˚_d©a
(
uåa˚FnNumbî
 & ~
UTRACE_TRACED_ENTRY
, (
Àvñ
), (
fmt
)); \

238 }

	)

248 
	#UTRACE_DATA1
(
Àvñ
, 
fmt
, 
a
) \

249 if(
	`UTRACE_LEVEL
(
Àvñ
)) { \

250 
	`uåa˚_d©a
(
uåa˚FnNumbî
 & ~
UTRACE_TRACED_ENTRY
 , (
Àvñ
), (
fmt
), (
a
)); \

251 }

	)

261 
	#UTRACE_DATA2
(
Àvñ
, 
fmt
, 
a
, 
b
) \

262 if(
	`UTRACE_LEVEL
(
Àvñ
)) { \

263 
	`uåa˚_d©a
(
uåa˚FnNumbî
 & ~
UTRACE_TRACED_ENTRY
 , (
Àvñ
), (
fmt
), (
a
), (
b
)); \

264 }

	)

274 
	#UTRACE_DATA3
(
Àvñ
, 
fmt
, 
a
, 
b
, 
c
) \

275 if(
	`UTRACE_LEVEL
(
Àvñ
)) { \

276 
	`uåa˚_d©a
(
uåa˚FnNumbî
 & ~
UTRACE_TRACED_ENTRY
, (
Àvñ
), (
fmt
), (
a
), (
b
), (
c
)); \

277 }

	)

287 
	#UTRACE_DATA4
(
Àvñ
, 
fmt
, 
a
, 
b
, 
c
, 
d
) \

288 if(
	`UTRACE_LEVEL
(
Àvñ
)) { \

289 
	`uåa˚_d©a
(
uåa˚FnNumbî
 & ~
UTRACE_TRACED_ENTRY
, (
Àvñ
), (
fmt
), (
a
), (
b
), (
c
), (
d
)); \

290 }

	)

300 
	#UTRACE_DATA5
(
Àvñ
, 
fmt
, 
a
, 
b
, 
c
, 
d
, 
e
) \

301 if(
	`UTRACE_LEVEL
(
Àvñ
)) { \

302 
	`uåa˚_d©a
(
uåa˚FnNumbî
 & ~
UTRACE_TRACED_ENTRY
, (
Àvñ
), (
fmt
), (
a
), (
b
), (
c
), (
d
), (
e
)); \

303 }

	)

313 
	#UTRACE_DATA6
(
Àvñ
, 
fmt
, 
a
, 
b
, 
c
, 
d
, 
e
, 
f
) \

314 if(
	`UTRACE_LEVEL
(
Àvñ
)) { \

315 
	`uåa˚_d©a
(
uåa˚FnNumbî
 & ~
UTRACE_TRACED_ENTRY
, (
Àvñ
), (
fmt
), (
a
), (
b
), (
c
), (
d
), (
e
), (
f
)); \

316 }

	)

326 
	#UTRACE_DATA7
(
Àvñ
, 
fmt
, 
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
) \

327 if(
	`UTRACE_LEVEL
(
Àvñ
)) { \

328 
	`uåa˚_d©a
(
uåa˚FnNumbî
 & ~
UTRACE_TRACED_ENTRY
, (
Àvñ
), (
fmt
), (
a
), (
b
), (
c
), (
d
), (
e
), (
f
), (
g
)); \

329 }

	)

339 
	#UTRACE_DATA8
(
Àvñ
, 
fmt
, 
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
) \

340 if(
	`UTRACE_LEVEL
(
Àvñ
)) { \

341 
	`uåa˚_d©a
(
uåa˚FnNumbî
 & ~
UTRACE_TRACED_ENTRY
, (
Àvñ
), (
fmt
), (
a
), (
b
), (
c
), (
d
), (
e
), (
f
), (
g
), (
h
)); \

342 }

	)

352 
	#UTRACE_DATA9
(
Àvñ
, 
fmt
, 
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
) \

353 if(
	`UTRACE_LEVEL
(
Àvñ
)) { \

354 
	`uåa˚_d©a
(
uåa˚FnNumbî
 & ~
UTRACE_TRACED_ENTRY
, (
Àvñ
), (
fmt
), (
a
), (
b
), (
c
), (
d
), (
e
), (
f
), (
g
), (
h
), (
i
)); \

355 }

	)

363 
	#UTRACE_LEVEL
(
Àvñ
Ë0

	)

364 
	#UTRACE_ENTRY
(
‚Numbî
)

	)

365 
	#UTRACE_ENTRY_OC
(
‚Numbî
)

	)

366 
	#UTRACE_EXIT
()

	)

367 
	#UTRACE_EXIT_VALUE
(
vÆ
)

	)

368 
	#UTRACE_EXIT_STATUS
(
°©us
)

	)

369 
	#UTRACE_EXIT_VALUE_STATUS
(
vÆ
, 
°©us
)

	)

370 
	#UTRACE_EXIT_PTR_STATUS
(
±r
, 
°©us
)

	)

371 
	#UTRACE_DATA0
(
Àvñ
, 
fmt
)

	)

372 
	#UTRACE_DATA1
(
Àvñ
, 
fmt
, 
a
)

	)

373 
	#UTRACE_DATA2
(
Àvñ
, 
fmt
, 
a
, 
b
)

	)

374 
	#UTRACE_DATA3
(
Àvñ
, 
fmt
, 
a
, 
b
, 
c
)

	)

375 
	#UTRACE_DATA4
(
Àvñ
, 
fmt
, 
a
, 
b
, 
c
, 
d
)

	)

376 
	#UTRACE_DATA5
(
Àvñ
, 
fmt
, 
a
, 
b
, 
c
, 
d
, 
e
)

	)

377 
	#UTRACE_DATA6
(
Àvñ
, 
fmt
, 
a
, 
b
, 
c
, 
d
, 
e
, 
f
)

	)

378 
	#UTRACE_DATA7
(
Àvñ
, 
fmt
, 
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
)

	)

379 
	#UTRACE_DATA8
(
Àvñ
, 
fmt
, 
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
)

	)

380 
	#UTRACE_DATA9
(
Àvñ
, 
fmt
, 
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
)

	)

	@utrie.c

21 #ifde‡
UTRIE_DEBUG


22 
	~<°dio.h
>

25 
	~"unicode/uty≥s.h
"

26 
	~"cmem‹y.h
"

27 
	~"uåõ.h
"

31 #unde‡
ABS


32 
	#ABS
(
x
Ë((x)>=0 ? (xË: -(x))

	)

34 
U_INLINE
 
UBoﬁ


35 
	$equÆ_uöt32
(c⁄° 
uöt32_t
 *
s
, c⁄° uöt32_à*
t
, 
öt32_t
 
Àngth
) {

36 
Àngth
>0 && *
s
==*
t
) {

37 ++
s
;

38 ++
t
;

39 --
Àngth
;

41  (
UBoﬁ
)(
Àngth
==0);

42 
	}
}

46 
U_CAPI
 
UNewTrõ
 * 
U_EXPORT2


47 
	$uåõ_›í
(
UNewTrõ
 *
fûlIn
,

48 
uöt32_t
 *
ÆüsD©a
, 
öt32_t
 
maxD©aLígth
,

49 
uöt32_t
 
öôülVÆue
, uöt32_à
ÀadUnôVÆue
,

50 
UBoﬁ
 
œtö1Löór
) {

51 
UNewTrõ
 *
åõ
;

52 
öt32_t
 
i
, 
j
;

54 if–
maxD©aLígth
<
UTRIE_DATA_BLOCK_LENGTH
 ||

55 (
œtö1Löór
 && 
maxD©aLígth
<1024)

57  
NULL
;

60 if(
fûlIn
!=
NULL
) {

61 
åõ
=
fûlIn
;

63 
åõ
=(
UNewTrõ
 *)
	`u¥v_mÆloc
((UNewTrie));

64 if(
åõ
==
NULL
) {

65  
NULL
;

68 
	`u¥v_mem£t
(
åõ
, 0, (
UNewTrõ
));

69 
åõ
->
isAŒoˇãd
(
UBoﬁ
)(
fûlIn
==
NULL
);

71 if(
ÆüsD©a
!=
NULL
) {

72 
åõ
->
d©a
=
ÆüsD©a
;

73 
åõ
->
isD©aAŒoˇãd
=
FALSE
;

75 
åõ
->
d©a
=(
uöt32_t
 *)
	`u¥v_mÆloc
(
maxD©aLígth
*4);

76 if(
åõ
->
d©a
==
NULL
) {

77 
	`u¥v_‰ì
(
åõ
);

78  
NULL
;

80 
åõ
->
isD©aAŒoˇãd
=
TRUE
;

84 
j
=
UTRIE_DATA_BLOCK_LENGTH
;

86 if(
œtö1Löór
) {

91 
i
=0;

94 
åõ
->
ödex
[
i
++]=
j
;

95 
j
+=
UTRIE_DATA_BLOCK_LENGTH
;

96 } 
i
<(256>>
UTRIE_SHIFT
));

100 
åõ
->
d©aLígth
=
j
;

101 
j
>0) {

102 
åõ
->
d©a
[--
j
]=
öôülVÆue
;

105 
åõ
->
ÀadUnôVÆue
=leadUnitValue;

106 
åõ
->
ödexLígth
=
UTRIE_MAX_INDEX_LENGTH
;

107 
åõ
->
d©aC≠acôy
=
maxD©aLígth
;

108 
åõ
->
isL©ö1Löór
=
œtö1Löór
;

109 
åõ
->
isCom∑˘ed
=
FALSE
;

110  
åõ
;

111 
	}
}

113 
U_CAPI
 
UNewTrõ
 * 
U_EXPORT2


114 
	$uåõ_˛⁄e
(
UNewTrõ
 *
fûlIn
, c⁄° UNewTrõ *
Ÿhî
, 
uöt32_t
 *
ÆüsD©a
, 
öt32_t
 
ÆüsD©aC≠acôy
) {

115 
UNewTrõ
 *
åõ
;

116 
UBoﬁ
 
isD©aAŒoˇãd
;

119 if(
Ÿhî
==
NULL
 || othî->
d©a
==NULL || othî->
isCom∑˘ed
) {

120  
NULL
;

124 if(
ÆüsD©a
!=
NULL
 && 
ÆüsD©aC≠acôy
>=
Ÿhî
->
d©aC≠acôy
) {

125 
isD©aAŒoˇãd
=
FALSE
;

127 
ÆüsD©aC≠acôy
=
Ÿhî
->
d©aC≠acôy
;

128 
ÆüsD©a
=(
uöt32_t
 *)
	`u¥v_mÆloc
(
Ÿhî
->
d©aC≠acôy
*4);

129 if(
ÆüsD©a
==
NULL
) {

130  
NULL
;

132 
isD©aAŒoˇãd
=
TRUE
;

135 
åõ
=
	`uåõ_›í
(
fûlIn
, 
ÆüsD©a
, 
ÆüsD©aC≠acôy
,

136 
Ÿhî
->
d©a
[0], othî->
ÀadUnôVÆue
,

137 
Ÿhî
->
isL©ö1Löór
);

138 if(
åõ
==
NULL
) {

139 
	`u¥v_‰ì
(
ÆüsD©a
);

141 
	`u¥v_mem˝y
(
åõ
->
ödex
, 
Ÿhî
->index, (trie->index));

142 
	`u¥v_mem˝y
(
åõ
->
d©a
, 
Ÿhî
->d©a, othî->
d©aLígth
*4);

143 
åõ
->
d©aLígth
=
Ÿhî
->dataLength;

144 
åõ
->
isD©aAŒoˇãd
=isDataAllocated;

147  
åõ
;

148 
	}
}

150 
U_CAPI
 
U_EXPORT2


151 
	$uåõ_˛o£
(
UNewTrõ
 *
åõ
) {

152 if(
åõ
!=
NULL
) {

153 if(
åõ
->
isD©aAŒoˇãd
) {

154 
	`u¥v_‰ì
(
åõ
->
d©a
);

155 
åõ
->
d©a
=
NULL
;

157 if(
åõ
->
isAŒoˇãd
) {

158 
	`u¥v_‰ì
(
åõ
);

161 
	}
}

163 
U_CAPI
 
uöt32_t
 * 
U_EXPORT2


164 
	$uåõ_gëD©a
(
UNewTrõ
 *
åõ
, 
öt32_t
 *
pLígth
) {

165 if(
åõ
==
NULL
 || 
pLígth
==NULL) {

166  
NULL
;

169 *
pLígth
=
åõ
->
d©aLígth
;

170  
åõ
->
d©a
;

171 
	}
}

173 
öt32_t


174 
	$uåõ_ÆlocD©aBlock
(
UNewTrõ
 *
åõ
) {

175 
öt32_t
 
√wBlock
, 
√wT›
;

177 
√wBlock
=
åõ
->
d©aLígth
;

178 
√wT›
=
√wBlock
+
UTRIE_DATA_BLOCK_LENGTH
;

179 if(
√wT›
>
åõ
->
d©aC≠acôy
) {

183 
åõ
->
d©aLígth
=
√wT›
;

184  
√wBlock
;

185 
	}
}

193 
öt32_t


194 
	$uåõ_gëD©aBlock
(
UNewTrõ
 *
åõ
, 
UCh¨32
 
c
) {

195 
öt32_t
 
ödexVÆue
, 
√wBlock
;

197 
c
>>=
UTRIE_SHIFT
;

198 
ödexVÆue
=
åõ
->
ödex
[
c
];

199 if(
ödexVÆue
>0) {

200  
ödexVÆue
;

204 
√wBlock
=
	`uåõ_ÆlocD©aBlock
(
åõ
);

205 if(
√wBlock
<0) {

209 
åõ
->
ödex
[
c
]=
√wBlock
;

212 
	`u¥v_mem˝y
(
åõ
->
d©a
+
√wBlock
,Årõ->d©a-
ödexVÆue
, 4*
UTRIE_DATA_BLOCK_LENGTH
);

213  
√wBlock
;

214 
	}
}

219 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


220 
	$uåõ_£t32
(
UNewTrõ
 *
åõ
, 
UCh¨32
 
c
, 
uöt32_t
 
vÆue
) {

221 
öt32_t
 
block
;

224 if(
åõ
==
NULL
 ||Årõ->
isCom∑˘ed
 || (
uöt32_t
)
c
>0x10ffff) {

225  
FALSE
;

228 
block
=
	`uåõ_gëD©aBlock
(
åõ
, 
c
);

229 if(
block
<0) {

230  
FALSE
;

233 
åõ
->
d©a
[
block
+(
c
&
UTRIE_MASK
)]=
vÆue
;

234  
TRUE
;

235 
	}
}

237 
U_CAPI
 
uöt32_t
 
U_EXPORT2


238 
	$uåõ_gë32
(
UNewTrõ
 *
åõ
, 
UCh¨32
 
c
, 
UBoﬁ
 *
pInBlockZîo
) {

239 
öt32_t
 
block
;

242 if(
åõ
==
NULL
 ||Årõ->
isCom∑˘ed
 || (
uöt32_t
)
c
>0x10ffff) {

243 if(
pInBlockZîo
!=
NULL
) {

244 *
pInBlockZîo
=
TRUE
;

249 
block
=
åõ
->
ödex
[
c
>>
UTRIE_SHIFT
];

250 if(
pInBlockZîo
!=
NULL
) {

251 *
pInBlockZîo
(
UBoﬁ
)(
block
==0);

254  
åõ
->
d©a
[
	`ABS
(
block
)+(
c
&
UTRIE_MASK
)];

255 
	}
}

261 
	$uåõ_fûlBlock
(
uöt32_t
 *
block
, 
UCh¨32
 
°¨t
, UCh¨32 
limô
,

262 
uöt32_t
 
vÆue
, uöt32_à
öôülVÆue
, 
UBoﬁ
 
ovîwrôe
) {

263 
uöt32_t
 *
pLimô
;

265 
pLimô
=
block
+
limô
;

266 
block
+=
°¨t
;

267 if(
ovîwrôe
) {

268 
block
<
pLimô
) {

269 *
block
++=
vÆue
;

272 
block
<
pLimô
) {

273 if(*
block
==
öôülVÆue
) {

274 *
block
=
vÆue
;

276 ++
block
;

279 
	}
}

281 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


282 
	$uåõ_£tR™ge32
(
UNewTrõ
 *
åõ
, 
UCh¨32
 
°¨t
, UCh¨32 
limô
, 
uöt32_t
 
vÆue
, 
UBoﬁ
 
ovîwrôe
) {

288 
uöt32_t
 
öôülVÆue
;

289 
öt32_t
 
block
, 
ª°
, 
ª≥©Block
;

292 if–
åõ
==
NULL
 ||Årõ->
isCom∑˘ed
 ||

293 (
uöt32_t
)
°¨t
>0x10fff‡|| (uöt32_t)
limô
>0x110000 || start>limit

295  
FALSE
;

297 if(
°¨t
==
limô
) {

298  
TRUE
;

301 
öôülVÆue
=
åõ
->
d©a
[0];

302 if(
°¨t
&
UTRIE_MASK
) {

303 
UCh¨32
 
√xtSèπ
;

306 
block
=
	`uåõ_gëD©aBlock
(
åõ
, 
°¨t
);

307 if(
block
<0) {

308  
FALSE
;

311 
√xtSèπ
=(
°¨t
+
UTRIE_DATA_BLOCK_LENGTH
)&~
UTRIE_MASK
;

312 if(
√xtSèπ
<=
limô
) {

313 
	`uåõ_fûlBlock
(
åõ
->
d©a
+
block
, 
°¨t
&
UTRIE_MASK
, 
UTRIE_DATA_BLOCK_LENGTH
,

314 
vÆue
, 
öôülVÆue
, 
ovîwrôe
);

315 
°¨t
=
√xtSèπ
;

317 
	`uåõ_fûlBlock
(
åõ
->
d©a
+
block
, 
°¨t
&
UTRIE_MASK
, 
limô
&UTRIE_MASK,

318 
vÆue
, 
öôülVÆue
, 
ovîwrôe
);

319  
TRUE
;

324 
ª°
=
limô
&
UTRIE_MASK
;

327 
limô
&=~
UTRIE_MASK
;

330 if(
vÆue
==
öôülVÆue
) {

331 
ª≥©Block
=0;

333 
ª≥©Block
=-1;

335 
°¨t
<
limô
) {

337 
block
=
åõ
->
ödex
[
°¨t
>>
UTRIE_SHIFT
];

338 if(
block
>0) {

340 
	`uåõ_fûlBlock
(
åõ
->
d©a
+
block
, 0, 
UTRIE_DATA_BLOCK_LENGTH
, 
vÆue
, 
öôülVÆue
, 
ovîwrôe
);

341 } if(
åõ
->
d©a
[-
block
]!=
vÆue
 && (block==0 || 
ovîwrôe
)) {

343 if(
ª≥©Block
>=0) {

344 
åõ
->
ödex
[
°¨t
>>
UTRIE_SHIFT
]=-
ª≥©Block
;

347 
ª≥©Block
=
	`uåõ_gëD©aBlock
(
åõ
, 
°¨t
);

348 if(
ª≥©Block
<0) {

349  
FALSE
;

353 
åõ
->
ödex
[
°¨t
>>
UTRIE_SHIFT
]=-
ª≥©Block
;

354 
	`uåõ_fûlBlock
(
åõ
->
d©a
+
ª≥©Block
, 0, 
UTRIE_DATA_BLOCK_LENGTH
, 
vÆue
, 
öôülVÆue
, 
TRUE
);

358 
°¨t
+=
UTRIE_DATA_BLOCK_LENGTH
;

361 if(
ª°
>0) {

363 
block
=
	`uåõ_gëD©aBlock
(
åõ
, 
°¨t
);

364 if(
block
<0) {

365  
FALSE
;

368 
	`uåõ_fûlBlock
(
åõ
->
d©a
+
block
, 0, 
ª°
, 
vÆue
, 
öôülVÆue
, 
ovîwrôe
);

371  
TRUE
;

372 
	}
}

374 
öt32_t


375 
	$_födSameIndexBlock
(c⁄° 
öt32_t
 *
idx
, i¡32_à
ödexLígth
,

376 
öt32_t
 
ŸhîBlock
) {

377 
öt32_t
 
block
, 
i
;

379 
block
=
UTRIE_BMP_INDEX_LENGTH
; block<
ödexLígth
; block+=
UTRIE_SURROGATE_BLOCK_COUNT
) {

380 
i
=0; i<
UTRIE_SURROGATE_BLOCK_COUNT
; ++i) {

381 if(
idx
[
block
+
i
]!=idx[
ŸhîBlock
+i]) {

385 if(
i
==
UTRIE_SURROGATE_BLOCK_COUNT
) {

386  
block
;

389  
ödexLígth
;

390 
	}
}

403 
	$uåõ_fﬁd
(
UNewTrõ
 *
åõ
, 
UNewTrõGëFﬁdedVÆue
 *
gëFﬁdedVÆue
, 
UEº‹Code
 *
pEº‹Code
) {

404 
öt32_t
 
ÀadIndexes
[
UTRIE_SURROGATE_BLOCK_COUNT
];

405 
öt32_t
 *
idx
;

406 
uöt32_t
 
vÆue
;

407 
UCh¨32
 
c
;

408 
öt32_t
 
ödexLígth
, 
block
;

409 #ifde‡
UTRIE_DEBUG


410 
cou¡LódCUWôhD©a
=0;

413 
idx
=
åõ
->
ödex
;

416 
	`u¥v_mem˝y
(
ÀadIndexes
, 
idx
+(0xd800>>
UTRIE_SHIFT
), 4*
UTRIE_SURROGATE_BLOCK_COUNT
);

428 if(
åõ
->
ÀadUnôVÆue
=Òrõ->
d©a
[0]) {

429 
block
=0;

432 
block
=
	`uåõ_ÆlocD©aBlock
(
åõ
);

433 if(
block
<0) {

435 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

438 
	`uåõ_fûlBlock
(
åõ
->
d©a
+
block
, 0, 
UTRIE_DATA_BLOCK_LENGTH
,Årõ->
ÀadUnôVÆue
,Årõ->d©a[0], 
TRUE
);

439 
block
=-block;

441 
c
=(0xd800>>
UTRIE_SHIFT
); c<(0xdc00>>UTRIE_SHIFT); ++c) {

442 
åõ
->
ödex
[
c
]=
block
;

452 
ödexLígth
=
UTRIE_BMP_INDEX_LENGTH
;

455 
c
=0x10000; c<0x110000;) {

456 if(
idx
[
c
>>
UTRIE_SHIFT
]!=0) {

458 
c
&=~0x3ff;

460 #ifde‡
UTRIE_DEBUG


461 ++
cou¡LódCUWôhD©a
;

466 
block
=
	`_födSameIndexBlock
(
idx
, 
ödexLígth
, 
c
>>
UTRIE_SHIFT
);

473 
vÆue
=
	`gëFﬁdedVÆue
(
åõ
, 
c
, 
block
+
UTRIE_SURROGATE_BLOCK_COUNT
);

474 if(
vÆue
!=
	`uåõ_gë32
(
åõ
, 
	`U16_LEAD
(
c
), 
NULL
)) {

475 if(!
	`uåõ_£t32
(
åõ
, 
	`U16_LEAD
(
c
), 
vÆue
)) {

477 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

482 if(
block
==
ödexLígth
) {

484 
	`u¥v_memmove
(
idx
+
ödexLígth
,

485 
idx
+(
c
>>
UTRIE_SHIFT
),

486 4*
UTRIE_SURROGATE_BLOCK_COUNT
);

487 
ödexLígth
+=
UTRIE_SURROGATE_BLOCK_COUNT
;

490 
c
+=0x400;

492 
c
+=
UTRIE_DATA_BLOCK_LENGTH
;

495 #ifde‡
UTRIE_DEBUG


496 if(
cou¡LódCUWôhD©a
>0) {

497 
	`¥ötf
("suµÀmíèry d©®f‹ %dÜód suºog©es\n", 
cou¡LódCUWôhD©a
);

510 if(
ödexLígth
>=
UTRIE_MAX_INDEX_LENGTH
) {

511 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

519 
	`u¥v_memmove
(
idx
+
UTRIE_BMP_INDEX_LENGTH
+
UTRIE_SURROGATE_BLOCK_COUNT
,

520 
idx
+
UTRIE_BMP_INDEX_LENGTH
,

521 4*(
ödexLígth
-
UTRIE_BMP_INDEX_LENGTH
));

522 
	`u¥v_mem˝y
(
idx
+
UTRIE_BMP_INDEX_LENGTH
,

523 
ÀadIndexes
,

524 4*
UTRIE_SURROGATE_BLOCK_COUNT
);

525 
ödexLígth
+=
UTRIE_SURROGATE_BLOCK_COUNT
;

527 #ifde‡
UTRIE_DEBUG


528 
	`¥ötf
("trie index count: BMP %ldáll Unicode %ld folded %ld\n",

529 
UTRIE_BMP_INDEX_LENGTH
, ()
UTRIE_MAX_INDEX_LENGTH
, 
ödexLígth
);

532 
åõ
->
ödexLígth
=indexLength;

533 
	}
}

544 
	$_födUnu£dBlocks
(
UNewTrõ
 *
åõ
) {

545 
öt32_t
 
i
;

548 
	`u¥v_mem£t
(
åõ
->
m≠
, 0xff, (
UTRIE_MAX_BUILD_TIME_DATA_LENGTH
>>
UTRIE_SHIFT
)*4);

551 
i
=0; i<
åõ
->
ödexLígth
; ++i) {

552 
åõ
->
m≠
[
	`ABS
—rõ->
ödex
[
i
])>>
UTRIE_SHIFT
]=0;

556 
åõ
->
m≠
[0]=0;

557 
	}
}

559 
öt32_t


560 
	$_födSameD©aBlock
(c⁄° 
uöt32_t
 *
d©a
, 
öt32_t
 
d©aLígth
,

561 
öt32_t
 
ŸhîBlock
, i¡32_à
°ï
) {

562 
öt32_t
 
block
;

565 
d©aLígth
-=
UTRIE_DATA_BLOCK_LENGTH
;

567 
block
=0; block<=
d©aLígth
; block+=
°ï
) {

568 if(
	`equÆ_uöt32
(
d©a
+
block
, d©a+
ŸhîBlock
, 
UTRIE_DATA_BLOCK_LENGTH
)) {

569  
block
;

573 
	}
}

588 
	$uåõ_com∑˘
(
UNewTrõ
 *
åõ
, 
UBoﬁ
 
ovîœp
, 
UEº‹Code
 *
pEº‹Code
) {

589 
öt32_t
 
i
, 
°¨t
, 
√wSèπ
, 
ovîœpSèπ
;

591 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

596 if(
åõ
==
NULL
) {

597 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

600 if(
åõ
->
isCom∑˘ed
) {

607 
	`_födUnu£dBlocks
(
åõ
);

610 if(
åõ
->
isL©ö1Löór
 && 
UTRIE_SHIFT
<=8) {

611 
ovîœpSèπ
=
UTRIE_DATA_BLOCK_LENGTH
+256;

613 
ovîœpSèπ
=
UTRIE_DATA_BLOCK_LENGTH
;

616 
√wSèπ
=
UTRIE_DATA_BLOCK_LENGTH
;

617 
°¨t
=
√wSèπ
; sèπ<
åõ
->
d©aLígth
;) {

625 if(
åõ
->
m≠
[
°¨t
>>
UTRIE_SHIFT
]<0) {

627 
°¨t
+=
UTRIE_DATA_BLOCK_LENGTH
;

634 if–
°¨t
>=
ovîœpSèπ
 &&

635 (
i
=
	`_födSameD©aBlock
(
åõ
->
d©a
, 
√wSèπ
, 
°¨t
,

636 
ovîœp
 ? 
UTRIE_DATA_GRANULARITY
 : 
UTRIE_DATA_BLOCK_LENGTH
))

640 
åõ
->
m≠
[
°¨t
>>
UTRIE_SHIFT
]=
i
;

643 
°¨t
+=
UTRIE_DATA_BLOCK_LENGTH
;

650 if(
ovîœp
 && 
°¨t
>=
ovîœpSèπ
) {

652 
i
=
UTRIE_DATA_BLOCK_LENGTH
-
UTRIE_DATA_GRANULARITY
;

653 
i
>0 && !
	`equÆ_uöt32
(
åõ
->
d©a
+(
√wSèπ
-i),Årõ->d©a+
°¨t
, i);

654 
i
-=
UTRIE_DATA_GRANULARITY
) {}

656 
i
=0;

659 if(
i
>0) {

661 
åõ
->
m≠
[
°¨t
>>
UTRIE_SHIFT
]=
√wSèπ
-
i
;

664 
°¨t
+=
i
;

665 
i
=
UTRIE_DATA_BLOCK_LENGTH
-i; i>0; --i) {

666 
åõ
->
d©a
[
√wSèπ
++]Òrõ->d©a[
°¨t
++];

668 } if(
√wSèπ
<
°¨t
) {

670 
åõ
->
m≠
[
°¨t
>>
UTRIE_SHIFT
]=
√wSèπ
;

671 
i
=
UTRIE_DATA_BLOCK_LENGTH
; i>0; --i) {

672 
åõ
->
d©a
[
√wSèπ
++]Òrõ->d©a[
°¨t
++];

675 
åõ
->
m≠
[
°¨t
>>
UTRIE_SHIFT
]=start;

676 
√wSèπ
+=
UTRIE_DATA_BLOCK_LENGTH
;

677 
°¨t
=
√wSèπ
;

682 
i
=0; i<
åõ
->
ödexLígth
; ++i) {

683 
åõ
->
ödex
[
i
]Òrõ->
m≠
[
	`ABS
—rõ->ödex[i])>>
UTRIE_SHIFT
];

686 #ifde‡
UTRIE_DEBUG


688 
	`¥ötf
("compactingÅrie: count of 32-bit words %lu->%lu\n",

689 ()
åõ
->
d©aLígth
, ()
√wSèπ
);

692 
åõ
->
d©aLígth
=
√wSèπ
;

693 
	}
}

718 
uöt32_t
 
U_CALLCONV


719 
	$deÁu…GëFﬁdedVÆue
(
UNewTrõ
 *
åõ
, 
UCh¨32
 
°¨t
, 
öt32_t
 
off£t
) {

720 
uöt32_t
 
vÆue
, 
öôülVÆue
;

721 
UCh¨32
 
limô
;

722 
UBoﬁ
 
öBlockZîo
;

724 
öôülVÆue
=
åõ
->
d©a
[0];

725 
limô
=
°¨t
+0x400;

726 
°¨t
<
limô
) {

727 
vÆue
=
	`uåõ_gë32
(
åõ
, 
°¨t
, &
öBlockZîo
);

728 if(
öBlockZîo
) {

729 
°¨t
+=
UTRIE_DATA_BLOCK_LENGTH
;

730 } if(
vÆue
!=
öôülVÆue
) {

731  (
uöt32_t
)
off£t
;

733 ++
°¨t
;

737 
	}
}

739 
U_CAPI
 
öt32_t
 
U_EXPORT2


740 
	$uåõ_£rülize
(
UNewTrõ
 *
åõ
, *
dt
, 
öt32_t
 
ˇ∑côy
,

741 
UNewTrõGëFﬁdedVÆue
 *
gëFﬁdedVÆue
,

742 
UBoﬁ
 
ªdu˚To16Bôs
,

743 
UEº‹Code
 *
pEº‹Code
) {

744 
UTrõHódî
 *
hódî
;

745 
uöt32_t
 *
p
;

746 
uöt16_t
 *
de°16
;

747 
öt32_t
 
i
, 
Àngth
;

748 
uöt8_t
* 
d©a
 = 
NULL
;

751 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

755 if(
åõ
==
NULL
 || 
ˇ∑côy
<0 || (ˇ∑côy>0 && 
dt
==NULL)) {

756 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

759 if(
gëFﬁdedVÆue
==
NULL
) {

760 
gëFﬁdedVÆue
=
deÁu…GëFﬁdedVÆue
;

763 
d©a
 = (
uöt8_t
*)
dt
;

765 if(!
åõ
->
isCom∑˘ed
) {

767 
	`uåõ_com∑˘
(
åõ
, 
FALSE
, 
pEº‹Code
);

770 
	`uåõ_fﬁd
(
åõ
, 
gëFﬁdedVÆue
, 
pEº‹Code
);

773 
	`uåõ_com∑˘
(
åõ
, 
TRUE
, 
pEº‹Code
);

775 
åõ
->
isCom∑˘ed
=
TRUE
;

776 if(
	`U_FAILURE
(*
pEº‹Code
)) {

782 if–(
ªdu˚To16Bôs
 ? (
åõ
->
d©aLígth
+åõ->
ödexLígth
Ë:Årõ->d©aLígthË>
UTRIE_MAX_DATA_LENGTH
) {

783 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

786 
Àngth
=(
UTrõHódî
)+2*
åõ
->
ödexLígth
;

787 if(
ªdu˚To16Bôs
) {

788 
Àngth
+=2*
åõ
->
d©aLígth
;

790 
Àngth
+=4*
åõ
->
d©aLígth
;

793 if(
Àngth
>
ˇ∑côy
) {

794  
Àngth
;

797 #ifde‡
UTRIE_DEBUG


798 
	`¥ötf
("**UTrieLengths(serialize)** index:%6ld data:%6ld serialized:%6ld\n",

799 ()
åõ
->
ödexLígth
, (Èrõ->
d©aLígth
, ()
Àngth
);

803 
hódî
=(
UTrõHódî
 *)
d©a
;

804 
d©a
+=(
UTrõHódî
);

806 
hódî
->
sig«tuª
=0x54726965;

807 
hódî
->
›ti⁄s
=
UTRIE_SHIFT
 | (
UTRIE_INDEX_SHIFT
<<
UTRIE_OPTIONS_INDEX_SHIFT
);

809 if(!
ªdu˚To16Bôs
) {

810 
hódî
->
›ti⁄s
|=
UTRIE_OPTIONS_DATA_IS_32_BIT
;

812 if(
åõ
->
isL©ö1Löór
) {

813 
hódî
->
›ti⁄s
|=
UTRIE_OPTIONS_LATIN1_IS_LINEAR
;

816 
hódî
->
ödexLígth
=
åõ
->indexLength;

817 
hódî
->
d©aLígth
=
åõ
->dataLength;

820 if(
ªdu˚To16Bôs
) {

822 
p
=(
uöt32_t
 *)
åõ
->
ödex
;

823 
de°16
=(
uöt16_t
 *)
d©a
;

824 
i
=
åõ
->
ödexLígth
; i>0; --i) {

825 *
de°16
++=(
uöt16_t
)((*
p
++ + 
åõ
->
ödexLígth
)>>
UTRIE_INDEX_SHIFT
);

829 
p
=
åõ
->
d©a
;

830 
i
=
åõ
->
d©aLígth
; i>0; --i) {

831 *
de°16
++=(
uöt16_t
)*
p
++;

835 
p
=(
uöt32_t
 *)
åõ
->
ödex
;

836 
de°16
=(
uöt16_t
 *)
d©a
;

837 
i
=
åõ
->
ödexLígth
; i>0; --i) {

838 *
de°16
++=(
uöt16_t
)(*
p
++ >> 
UTRIE_INDEX_SHIFT
);

842 
	`u¥v_mem˝y
(
de°16
, 
åõ
->
d©a
, 4*åõ->
d©aLígth
);

845  
Àngth
;

846 
	}
}

849 
U_CAPI
 
öt32_t
 
U_EXPORT2


850 
	$uåõ_deÁu…GëFﬁdögOff£t
(
uöt32_t
 
d©a
) {

851  (
öt32_t
)
d©a
;

852 
	}
}

854 
U_CAPI
 
öt32_t
 
U_EXPORT2


855 
	$uåõ_un£rülize
(
UTrõ
 *
åõ
, c⁄° *
d©a
, 
öt32_t
 
Àngth
, 
UEº‹Code
 *
pEº‹Code
) {

856 c⁄° 
UTrõHódî
 *
hódî
;

857 c⁄° 
uöt16_t
 *
p16
;

858 
uöt32_t
 
›ti⁄s
;

860 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

865 if(
Àngth
<(
UTrõHódî
)) {

866 *
pEº‹Code
=
U_INVALID_FORMAT_ERROR
;

871 
hódî
=(c⁄° 
UTrõHódî
 *)
d©a
;

872 if(
hódî
->
sig«tuª
!=0x54726965) {

873 *
pEº‹Code
=
U_INVALID_FORMAT_ERROR
;

878 
›ti⁄s
=
hódî
->options;

879 if–(
›ti⁄s
&
UTRIE_OPTIONS_SHIFT_MASK
)!=
UTRIE_SHIFT
 ||

880 ((
›ti⁄s
>>
UTRIE_OPTIONS_INDEX_SHIFT
)&
UTRIE_OPTIONS_SHIFT_MASK
)!=
UTRIE_INDEX_SHIFT


882 *
pEº‹Code
=
U_INVALID_FORMAT_ERROR
;

885 
åõ
->
isL©ö1Löór
(
UBoﬁ
)((
›ti⁄s
&
UTRIE_OPTIONS_LATIN1_IS_LINEAR
)!=0);

888 
åõ
->
ödexLígth
=
hódî
->indexLength;

889 
åõ
->
d©aLígth
=
hódî
->dataLength;

891 
Àngth
-=(
öt32_t
)(
UTrõHódî
);

894 if(
Àngth
<2*
åõ
->
ödexLígth
) {

895 *
pEº‹Code
=
U_INVALID_FORMAT_ERROR
;

898 
p16
=(c⁄° 
uöt16_t
 *)(
hódî
+1);

899 
åõ
->
ödex
=
p16
;

900 
p16
+=
åõ
->
ödexLígth
;

901 
Àngth
-=2*
åõ
->
ödexLígth
;

904 if(
›ti⁄s
&
UTRIE_OPTIONS_DATA_IS_32_BIT
) {

905 if(
Àngth
<4*
åõ
->
d©aLígth
) {

906 *
pEº‹Code
=
U_INVALID_FORMAT_ERROR
;

909 
åõ
->
d©a32
=(c⁄° 
uöt32_t
 *)
p16
;

910 
åõ
->
öôülVÆue
Òrõ->
d©a32
[0];

911 
Àngth
=(
öt32_t
)(
UTrõHódî
)+2*
åõ
->
ödexLígth
+4*åõ->
d©aLígth
;

913 if(
Àngth
<2*
åõ
->
d©aLígth
) {

914 *
pEº‹Code
=
U_INVALID_FORMAT_ERROR
;

919 
åõ
->
d©a32
=
NULL
;

920 
åõ
->
öôülVÆue
Òrõ->
ödex
[åõ->
ödexLígth
];

921 
Àngth
=(
öt32_t
)(
UTrõHódî
)+2*
åõ
->
ödexLígth
+2*åõ->
d©aLígth
;

924 
åõ
->
gëFﬁdögOff£t
=
uåõ_deÁu…GëFﬁdögOff£t
;

926  
Àngth
;

927 
	}
}

929 
U_CAPI
 
öt32_t
 
U_EXPORT2


930 
	$uåõ_un£rülizeDummy
(
UTrõ
 *
åõ
,

931 *
d©a
, 
öt32_t
 
Àngth
,

932 
uöt32_t
 
öôülVÆue
, uöt32_à
ÀadUnôVÆue
,

933 
UBoﬁ
 
make16BôTrõ
,

934 
UEº‹Code
 *
pEº‹Code
) {

935 
uöt16_t
 *
p16
;

936 
öt32_t
 
a˘uÆLígth
, 
œtö1Lígth
, 
i
, 
limô
;

937 
uöt16_t
 
block
;

939 if(
pEº‹Code
==
NULL
 || 
	`U_FAILURE
(*pErrorCode)) {

946 
œtö1Lígth

UTRIE_SHIFT
<=8 ? 256 : 
UTRIE_DATA_BLOCK_LENGTH
;

948 
åõ
->
ödexLígth
=
UTRIE_BMP_INDEX_LENGTH
+
UTRIE_SURROGATE_BLOCK_COUNT
;

949 
åõ
->
d©aLígth
=
œtö1Lígth
;

950 if(
ÀadUnôVÆue
!=
öôülVÆue
) {

951 
åõ
->
d©aLígth
+=
UTRIE_DATA_BLOCK_LENGTH
;

954 
a˘uÆLígth
=
åõ
->
ödexLígth
*2;

955 if(
make16BôTrõ
) {

956 
a˘uÆLígth
+=
åõ
->
d©aLígth
*2;

958 
a˘uÆLígth
+=
åõ
->
d©aLígth
*4;

962 if(
Àngth
<
a˘uÆLígth
) {

963 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

964  
a˘uÆLígth
;

967 
åõ
->
isL©ö1Löór
=
TRUE
;

968 
åõ
->
öôülVÆue
=initialValue;

971 
p16
=(
uöt16_t
 *)
d©a
;

972 
åõ
->
ödex
=
p16
;

974 if(
make16BôTrõ
) {

976 
block
=(
uöt16_t
)(
åõ
->
ödexLígth
>>
UTRIE_INDEX_SHIFT
);

977 
limô
=
åõ
->
ödexLígth
;

978 
i
=0; i<
limô
; ++i) {

979 
p16
[
i
]=
block
;

982 if(
ÀadUnôVÆue
!=
öôülVÆue
) {

984 
block
+=(
uöt16_t
)(
œtö1Lígth
>>
UTRIE_INDEX_SHIFT
);

985 
i
=0xd800>>
UTRIE_SHIFT
;

986 
limô
=0xdc00>>
UTRIE_SHIFT
;

987 ; 
i
<
limô
; ++i) {

988 
p16
[
i
]=
block
;

992 
åõ
->
d©a32
=
NULL
;

995 
p16
+=
åõ
->
ödexLígth
;

996 
i
=0; i<
œtö1Lígth
; ++i) {

997 
p16
[
i
]=(
uöt16_t
)
öôülVÆue
;

1001 if(
ÀadUnôVÆue
!=
öôülVÆue
) {

1002 
limô
=
œtö1Lígth
+
UTRIE_DATA_BLOCK_LENGTH
;

1003  ; 
i
<
limô
; ++i) {

1004 
p16
[
i
]=(
uöt16_t
)
ÀadUnôVÆue
;

1008 
uöt32_t
 *
p32
;

1011 
	`u¥v_mem£t
(
p16
, 0, 
åõ
->
ödexLígth
*2);

1013 if(
ÀadUnôVÆue
!=
öôülVÆue
) {

1015 
block
=(
uöt16_t
)(
œtö1Lígth
>>
UTRIE_INDEX_SHIFT
);

1016 
i
=0xd800>>
UTRIE_SHIFT
;

1017 
limô
=0xdc00>>
UTRIE_SHIFT
;

1018 ; 
i
<
limô
; ++i) {

1019 
p16
[
i
]=
block
;

1023 
åõ
->
d©a32
=
p32
=(
uöt32_t
 *)(
p16
+åõ->
ödexLígth
);

1026 
i
=0; i<
œtö1Lígth
; ++i) {

1027 
p32
[
i
]=
öôülVÆue
;

1031 if(
ÀadUnôVÆue
!=
öôülVÆue
) {

1032 
limô
=
œtö1Lígth
+
UTRIE_DATA_BLOCK_LENGTH
;

1033  ; 
i
<
limô
; ++i) {

1034 
p32
[
i
]=
ÀadUnôVÆue
;

1039 
åõ
->
gëFﬁdögOff£t
=
uåõ_deÁu…GëFﬁdögOff£t
;

1041  
a˘uÆLígth
;

1042 
	}
}

1047 
uöt32_t
 
U_CALLCONV


1048 
	$íumSameVÆue
(c⁄° *
c⁄ãxt
, 
uöt32_t
 
vÆue
) {

1049  
vÆue
;

1050 
	}
}

1056 
U_CAPI
 
U_EXPORT2


1057 
	$uåõ_íum
(c⁄° 
UTrõ
 *
åõ
,

1058 
UTrõEnumVÆue
 *
íumVÆue
, 
UTrõEnumR™ge
 *
íumR™ge
, c⁄° *
c⁄ãxt
) {

1059 c⁄° 
uöt32_t
 *
d©a32
;

1060 c⁄° 
uöt16_t
 *
idx
;

1062 
uöt32_t
 
vÆue
, 
¥evVÆue
, 
öôülVÆue
;

1063 
UCh¨32
 
c
, 
¥ev
;

1064 
öt32_t
 
l
, 
i
, 
j
, 
block
, 
¥evBlock
, 
nuŒBlock
, 
off£t
;

1067 if(
åõ
==
NULL
 ||Årõ->
ödex
==NULL || 
íumR™ge
==NULL) {

1070 if(
íumVÆue
==
NULL
) {

1071 
íumVÆue
=
íumSameVÆue
;

1074 
idx
=
åõ
->
ödex
;

1075 
d©a32
=
åõ
->data32;

1078 
öôülVÆue
=
	`íumVÆue
(
c⁄ãxt
, 
åõ
->initialValue);

1080 if(
d©a32
==
NULL
) {

1081 
nuŒBlock
=
åõ
->
ödexLígth
;

1083 
nuŒBlock
=0;

1087 
¥evBlock
=
nuŒBlock
;

1088 
¥ev
=0;

1089 
¥evVÆue
=
öôülVÆue
;

1092 
i
=0, 
c
=0; c<=0xffff; ++i) {

1093 if(
c
==0xd800) {

1095 
i
=
UTRIE_BMP_INDEX_LENGTH
;

1096 } if(
c
==0xdc00) {

1098 
i
=
c
>>
UTRIE_SHIFT
;

1101 
block
=
idx
[
i
]<<
UTRIE_INDEX_SHIFT
;

1102 if(
block
==
¥evBlock
) {

1104 
c
+=
UTRIE_DATA_BLOCK_LENGTH
;

1105 } if(
block
==
nuŒBlock
) {

1107 if(
¥evVÆue
!=
öôülVÆue
) {

1108 if(
¥ev
<
c
) {

1109 if(!
	`íumR™ge
(
c⁄ãxt
, 
¥ev
, 
c
, 
¥evVÆue
)) {

1113 
¥evBlock
=
nuŒBlock
;

1114 
¥ev
=
c
;

1115 
¥evVÆue
=
öôülVÆue
;

1117 
c
+=
UTRIE_DATA_BLOCK_LENGTH
;

1119 
¥evBlock
=
block
;

1120 
j
=0; j<
UTRIE_DATA_BLOCK_LENGTH
; ++j) {

1121 
vÆue
=
	`íumVÆue
(
c⁄ãxt
, 
d©a32
!=
NULL
 ? d©a32[
block
+
j
] : 
idx
[block+j]);

1122 if(
vÆue
!=
¥evVÆue
) {

1123 if(
¥ev
<
c
) {

1124 if(!
	`íumR™ge
(
c⁄ãxt
, 
¥ev
, 
c
, 
¥evVÆue
)) {

1128 if(
j
>0) {

1130 
¥evBlock
=-1;

1132 
¥ev
=
c
;

1133 
¥evVÆue
=
vÆue
;

1135 ++
c
;

1141 
l
=0xd800;Ü<0xdc00;) {

1143 
off£t
=
idx
[
l
>>
UTRIE_SHIFT
]<<
UTRIE_INDEX_SHIFT
;

1144 if(
off£t
==
nuŒBlock
) {

1146 if(
¥evVÆue
!=
öôülVÆue
) {

1147 if(
¥ev
<
c
) {

1148 if(!
	`íumR™ge
(
c⁄ãxt
, 
¥ev
, 
c
, 
¥evVÆue
)) {

1152 
¥evBlock
=
nuŒBlock
;

1153 
¥ev
=
c
;

1154 
¥evVÆue
=
öôülVÆue
;

1157 
l
+=
UTRIE_DATA_BLOCK_LENGTH
;

1158 
c
+=
UTRIE_DATA_BLOCK_LENGTH
<<10;

1162 
vÆue

d©a32
!=
NULL
 ? d©a32[
off£t
+(
l
&
UTRIE_MASK
)] : 
idx
[offset+(l&UTRIE_MASK)];

1165 
off£t
=
åõ
->
	`gëFﬁdögOff£t
(
vÆue
);

1166 if(
off£t
<=0) {

1168 if(
¥evVÆue
!=
öôülVÆue
) {

1169 if(
¥ev
<
c
) {

1170 if(!
	`íumR™ge
(
c⁄ãxt
, 
¥ev
, 
c
, 
¥evVÆue
)) {

1174 
¥evBlock
=
nuŒBlock
;

1175 
¥ev
=
c
;

1176 
¥evVÆue
=
öôülVÆue
;

1180 
c
+=0x400;

1183 
i
=
off£t
;

1184 
off£t
+=
UTRIE_SURROGATE_BLOCK_COUNT
;

1187 
block
=
idx
[
i
]<<
UTRIE_INDEX_SHIFT
;

1188 if(
block
==
¥evBlock
) {

1190 
c
+=
UTRIE_DATA_BLOCK_LENGTH
;

1191 } if(
block
==
nuŒBlock
) {

1193 if(
¥evVÆue
!=
öôülVÆue
) {

1194 if(
¥ev
<
c
) {

1195 if(!
	`íumR™ge
(
c⁄ãxt
, 
¥ev
, 
c
, 
¥evVÆue
)) {

1199 
¥evBlock
=
nuŒBlock
;

1200 
¥ev
=
c
;

1201 
¥evVÆue
=
öôülVÆue
;

1203 
c
+=
UTRIE_DATA_BLOCK_LENGTH
;

1205 
¥evBlock
=
block
;

1206 
j
=0; j<
UTRIE_DATA_BLOCK_LENGTH
; ++j) {

1207 
vÆue
=
	`íumVÆue
(
c⁄ãxt
, 
d©a32
!=
NULL
 ? d©a32[
block
+
j
] : 
idx
[block+j]);

1208 if(
vÆue
!=
¥evVÆue
) {

1209 if(
¥ev
<
c
) {

1210 if(!
	`íumR™ge
(
c⁄ãxt
, 
¥ev
, 
c
, 
¥evVÆue
)) {

1214 if(
j
>0) {

1216 
¥evBlock
=-1;

1218 
¥ev
=
c
;

1219 
¥evVÆue
=
vÆue
;

1221 ++
c
;

1224 } ++
i
<
off£t
);

1227 ++
l
;

1231 
	`íumR™ge
(
c⁄ãxt
, 
¥ev
, 
c
, 
¥evVÆue
);

1232 
	}
}

	@utrie.h

17 #i‚de‡
__UTRIE_H__


18 
	#__UTRIE_H__


	)

20 
	~"unicode/uty≥s.h
"

21 
	~"ud©aswp.h
"

23 
U_CDECL_BEGIN


53 
	mUTRIE_SHIFT
=5,

56 
	mUTRIE_DATA_BLOCK_LENGTH
=1<<
UTRIE_SHIFT
,

59 
	mUTRIE_MASK
=
UTRIE_DATA_BLOCK_LENGTH
-1,

65 
	mUTRIE_LEAD_INDEX_DISP
=0x2800>>
UTRIE_SHIFT
,

74 
	mUTRIE_INDEX_SHIFT
=2,

77 
	mUTRIE_DATA_GRANULARITY
=1<<
UTRIE_INDEX_SHIFT
,

80 
	mUTRIE_SURROGATE_BLOCK_BITS
=10-
UTRIE_SHIFT
,

87 
	mUTRIE_SURROGATE_BLOCK_COUNT
=(1<<
UTRIE_SURROGATE_BLOCK_BITS
),

90 
	mUTRIE_BMP_INDEX_LENGTH
=0x10000>>
UTRIE_SHIFT


97 
	#UTRIE_MAX_INDEX_LENGTH
 (0x110000>>
UTRIE_SHIFT
)

	)

103 
	#UTRIE_MAX_DATA_LENGTH
 (0x10000<<
UTRIE_INDEX_SHIFT
)

	)

111 
	#UTRIE_MAX_BUILD_TIME_DATA_LENGTH
 (0x110000+
UTRIE_DATA_BLOCK_LENGTH
+0x400)

	)

128 
	#UTRIE_DUMMY_SIZE
 ((
UTRIE_BMP_INDEX_LENGTH
+
UTRIE_SURROGATE_BLOCK_COUNT
)*2+(
UTRIE_SHIFT
<=8?256:
UTRIE_DATA_BLOCK_LENGTH
)*4+UTRIE_DATA_BLOCK_LENGTH*4)

	)

138 
öt32_t
 
	tU_CALLCONV


139 
	tUTrõGëFﬁdögOff£t
(
	tuöt32_t
 
	td©a
);

150 
	sUTrõ
 {

151 c⁄° 
uöt16_t
 *
	mödex
;

152 c⁄° 
uöt32_t
 *
	md©a32
;

164 
UTrõGëFﬁdögOff£t
 *
	mgëFﬁdögOff£t
;

166 
öt32_t
 
	mödexLígth
, 
	md©aLígth
;

167 
uöt32_t
 
	möôülVÆue
;

168 
UBoﬁ
 
	misL©ö1Löór
;

171 #i‚de‡
__UTRIE2_H__


172 
UTrõ
 
	tUTrõ
;

176 
	#_UTRIE_GET_RAW
(
åõ
, 
d©a
, 
off£t
, 
c16
) \

177 (
åõ
)->
d©a
[ \

178 ((
öt32_t
)((
åõ
)->
ödex
[(
off£t
)+((
c16
)>>
UTRIE_SHIFT
)])<<
UTRIE_INDEX_SHIFT
)+ \

179 ((
c16
)&
UTRIE_MASK
) \

180 ]

	)

183 
	#_UTRIE_GET_FROM_PAIR
(
åõ
, 
d©a
, 
c
, 
c2
, 
ªsu…
, 
ªsu…Ty≥
) { \

184 
öt32_t
 
__off£t
; \

187 (
ªsu…
)=
	`_UTRIE_GET_RAW
((
åõ
), 
d©a
, 0, (
c
)); \

188 
__off£t
=(
åõ
)->
	`gëFﬁdögOff£t
(
ªsu…
); \

191 if(
__off£t
>0) { \

192 (
ªsu…
)=
	`_UTRIE_GET_RAW
((
åõ
), 
d©a
, 
__off£t
, (
c2
)&0x3ff); \

194 (
ªsu…
)=(
ªsu…Ty≥
)((
åõ
)->
öôülVÆue
); \

196 }

	)

199 
	#_UTRIE_GET_FROM_BMP
(
åõ
, 
d©a
, 
c16
) \

200 
	`_UTRIE_GET_RAW
(
åõ
, 
d©a
, 0xd800<=(
c16
Ë&& (c16)<=0xdbf‡? 
UTRIE_LEAD_INDEX_DISP
 : 0, c16);

	)

207 
	#_UTRIE_GET
(
åõ
, 
d©a
, 
c32
, 
ªsu…
, 
ªsu…Ty≥
) \

208 if((
uöt32_t
)(
c32
)<=0xffff) { \

210 (
ªsu…
)=
	`_UTRIE_GET_FROM_BMP
(
åõ
, 
d©a
, 
c32
); \

211 } if((
uöt32_t
)(
c32
)<=0x10ffff) { \

213 
UCh¨
 
__Àad16
=
	`UTF16_LEAD
(
c32
); \

214 
	`_UTRIE_GET_FROM_PAIR
(
åõ
, 
d©a
, 
__Àad16
, 
c32
, 
ªsu…
, 
ªsu…Ty≥
); \

217 (
ªsu…
)=(
ªsu…Ty≥
)((
åõ
)->
öôülVÆue
); \

218 }

	)

221 
	#_UTRIE_NEXT
(
åõ
, 
d©a
, 
§c
, 
limô
, 
c
, 
c2
, 
ªsu…
, 
ªsu…Ty≥
) { \

222 (
c
)=*(
§c
)++; \

223 if(!
	`UTF_IS_LEAD
(
c
)) { \

224 (
c2
)=0; \

225 (
ªsu…
)=
	`_UTRIE_GET_RAW
((
åõ
), 
d©a
, 0, (
c
)); \

226 } if((
§c
)!=(
limô
Ë&& 
	`UTF_IS_TRAIL
((
c2
)=*(src))) { \

227 ++(
§c
); \

228 
	`_UTRIE_GET_FROM_PAIR
((
åõ
), 
d©a
, (
c
), (
c2
), (
ªsu…
), 
ªsu…Ty≥
); \

231 (
c2
)=0; \

232 (
ªsu…
)=
	`_UTRIE_GET_RAW
((
åõ
), 
d©a
, 
UTRIE_LEAD_INDEX_DISP
, (
c
)); \

234 }

	)

237 
	#_UTRIE_PREVIOUS
(
åõ
, 
d©a
, 
°¨t
, 
§c
, 
c
, 
c2
, 
ªsu…
, 
ªsu…Ty≥
) { \

238 (
c
)=*--(
§c
); \

239 if(!
	`UTF_IS_SURROGATE
(
c
)) { \

240 (
c2
)=0; \

241 (
ªsu…
)=
	`_UTRIE_GET_RAW
((
åõ
), 
d©a
, 0, (
c
)); \

242 } if(!
	`UTF_IS_SURROGATE_FIRST
(
c
)) { \

244 if((
°¨t
)!=(
§c
Ë&& 
	`UTF_IS_LEAD
((
c2
)=*((src)-1))) { \

245 --(
§c
); \

246 (
ªsu…
)=(
c
); (c)=(
c2
); (c2)=(
UCh¨
)(result); \

247 
	`_UTRIE_GET_FROM_PAIR
((
åõ
), 
d©a
, (
c
), (
c2
), (
ªsu…
), 
ªsu…Ty≥
); \

250 (
c2
)=0; \

251 (
ªsu…
)=
	`_UTRIE_GET_RAW
((
åõ
), 
d©a
, 0, (
c
)); \

255 (
c2
)=0; \

256 (
ªsu…
)=
	`_UTRIE_GET_RAW
((
åõ
), 
d©a
, 
UTRIE_LEAD_INDEX_DISP
, (
c
)); \

258 }

	)

271 
	#UTRIE_GET16_LATIN1
(
åõ
Ë(—rõ)->
ödex
+—rõ)->
ödexLígth
+
UTRIE_DATA_BLOCK_LENGTH
)

	)

282 
	#UTRIE_GET32_LATIN1
(
åõ
Ë(—rõ)->
d©a32
+
UTRIE_DATA_BLOCK_LENGTH
)

	)

292 
	#UTRIE_GET16_FROM_LEAD
(
åõ
, 
c16
Ë
	`_UTRIE_GET_RAW
—rõ, 
ödex
, 0, c16)

	)

302 
	#UTRIE_GET32_FROM_LEAD
(
åõ
, 
c16
Ë
	`_UTRIE_GET_RAW
—rõ, 
d©a32
, 0, c16)

	)

313 
	#UTRIE_GET16_FROM_BMP
(
åõ
, 
c16
Ë
	`_UTRIE_GET_FROM_BMP
—rõ, 
ödex
, c16)

	)

324 
	#UTRIE_GET32_FROM_BMP
(
åõ
, 
c16
Ë
	`_UTRIE_GET_FROM_BMP
—rõ, 
d©a32
, c16)

	)

335 
	#UTRIE_GET16
(
åõ
, 
c32
, 
ªsu…
Ë
	`_UTRIE_GET
—rõ, 
ödex
, c32,Ñesu…, 
uöt16_t
)

	)

346 
	#UTRIE_GET32
(
åõ
, 
c32
, 
ªsu…
Ë
	`_UTRIE_GET
—rõ, 
d©a32
, c32,Ñesu…, 
uöt32_t
)

	)

359 
	#UTRIE_NEXT16
(
åõ
, 
§c
, 
limô
, 
c
, 
c2
, 
ªsu…
Ë
	`_UTRIE_NEXT
—rõ, 
ödex
, src,Üimô, c, c2,Ñesu…, 
uöt16_t
)

	)

372 
	#UTRIE_NEXT32
(
åõ
, 
§c
, 
limô
, 
c
, 
c2
, 
ªsu…
Ë
	`_UTRIE_NEXT
—rõ, 
d©a32
, src,Üimô, c, c2,Ñesu…, 
uöt32_t
)

	)

385 
	#UTRIE_PREVIOUS16
(
åõ
, 
°¨t
, 
§c
, 
c
, 
c2
, 
ªsu…
Ë
	`_UTRIE_PREVIOUS
—rõ, 
ödex
, sèπ, src, c, c2,Ñesu…, 
uöt16_t
)

	)

398 
	#UTRIE_PREVIOUS32
(
åõ
, 
°¨t
, 
§c
, 
c
, 
c2
, 
ªsu…
Ë
	`_UTRIE_PREVIOUS
—rõ, 
d©a32
, sèπ, src, c, c2,Ñesu…, 
uöt32_t
)

	)

408 
	#UTRIE_GET16_FROM_PAIR
(
åõ
, 
c
, 
c2
, 
ªsu…
Ë
	`_UTRIE_GET_FROM_PAIR
—rõ, 
ödex
, c, c2,Ñesu…, 
uöt16_t
)

	)

418 
	#UTRIE_GET32_FROM_PAIR
(
åõ
, 
c
, 
c2
, 
ªsu…
Ë
	`_UTRIE_GET_FROM_PAIR
—rõ, 
d©a32
, c, c2,Ñesu…, 
uöt32_t
)

	)

429 
	#UTRIE_GET16_FROM_OFFSET_TRAIL
(
åõ
, 
off£t
, 
c2
Ë
	`_UTRIE_GET_RAW
—rõ, 
ödex
, off£t, (c2)&0x3ff)

	)

440 
	#UTRIE_GET32_FROM_OFFSET_TRAIL
(
åõ
, 
off£t
, 
c2
Ë
	`_UTRIE_GET_RAW
—rõ, 
d©a32
, off£t, (c2)&0x3ff)

	)

452 
uöt32_t
 
	tU_CALLCONV


453 
	tUTrõEnumVÆue
(c⁄° *
	tc⁄ãxt
, 
	tuöt32_t
 
	tvÆue
);

468 
UBoﬁ
 
	tU_CALLCONV


469 
	tUTrõEnumR™ge
(c⁄° *
	tc⁄ãxt
, 
	tUCh¨32
 
	t°¨t
, UCh¨32 
	tlimô
, 
	tuöt32_t
 
	tvÆue
);

487 
U_CAPI
 
U_EXPORT2


488 
uåõ_íum
(c⁄° 
UTrõ
 *
åõ
,

489 
UTrõEnumVÆue
 *
íumVÆue
, 
UTrõEnumR™ge
 *
íumR™ge
, c⁄° *
c⁄ãxt
);

502 
U_CAPI
 
öt32_t
 
U_EXPORT2


503 
uåõ_un£rülize
(
UTrõ
 *
åõ
, c⁄° *
d©a
, 
öt32_t
 
Àngth
, 
UEº‹Code
 *
pEº‹Code
);

525 
U_CAPI
 
öt32_t
 
U_EXPORT2


526 
uåõ_un£rülizeDummy
(
UTrõ
 *
åõ
,

527 *
d©a
, 
öt32_t
 
Àngth
,

528 
uöt32_t
 
öôülVÆue
, uöt32_à
ÀadUnôVÆue
,

529 
UBoﬁ
 
make16BôTrõ
,

530 
UEº‹Code
 *
pEº‹Code
);

541 
U_CAPI
 
öt32_t
 
U_EXPORT2


542 
uåõ_deÁu…GëFﬁdögOff£t
(
uöt32_t
 
d©a
);

551 
	sUNewTrõ
 {

556 
öt32_t
 
	mödex
[
UTRIE_MAX_INDEX_LENGTH
];

557 
uöt32_t
 *
	md©a
;

559 
uöt32_t
 
	mÀadUnôVÆue
;

560 
öt32_t
 
	mödexLígth
, 
	md©aC≠acôy
, 
	md©aLígth
;

561 
UBoﬁ
 
	misAŒoˇãd
, 
	misD©aAŒoˇãd
;

562 
UBoﬁ
 
	misL©ö1Löór
, 
	misCom∑˘ed
;

568 
öt32_t
 
	mm≠
[
UTRIE_MAX_BUILD_TIME_DATA_LENGTH
>>
UTRIE_SHIFT
];

571 
UNewTrõ
 
	tUNewTrõ
;

591 
uöt32_t
 
	tU_CALLCONV


592 
	tUNewTrõGëFﬁdedVÆue
(
	tUNewTrõ
 *
	tåõ
, 
	tUCh¨32
 
	t°¨t
, 
	töt32_t
 
	toff£t
);

620 
U_CAPI
 
UNewTrõ
 * 
U_EXPORT2


621 
uåõ_›í
(
UNewTrõ
 *
fûlIn
,

622 
uöt32_t
 *
ÆüsD©a
, 
öt32_t
 
maxD©aLígth
,

623 
uöt32_t
 
öôülVÆue
, uöt32_à
ÀadUnôVÆue
,

624 
UBoﬁ
 
œtö1Löór
);

636 
U_CAPI
 
UNewTrõ
 * 
U_EXPORT2


637 
uåõ_˛⁄e
(
UNewTrõ
 *
fûlIn
, c⁄° UNewTrõ *
Ÿhî
, 
uöt32_t
 *
ÆüsD©a
, 
öt32_t
 
ÆüsD©aLígth
);

645 
U_CAPI
 
U_EXPORT2


646 
uåõ_˛o£
(
UNewTrõ
 *
åõ
);

658 
U_CAPI
 
uöt32_t
 * 
U_EXPORT2


659 
uåõ_gëD©a
(
UNewTrõ
 *
åõ
, 
öt32_t
 *
pLígth
);

669 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


670 
uåõ_£t32
(
UNewTrõ
 *
åõ
, 
UCh¨32
 
c
, 
uöt32_t
 
vÆue
);

682 
U_CAPI
 
uöt32_t
 
U_EXPORT2


683 
uåõ_gë32
(
UNewTrõ
 *
åõ
, 
UCh¨32
 
c
, 
UBoﬁ
 *
pInBlockZîo
);

697 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


698 
uåõ_£tR™ge32
(
UNewTrõ
 *
åõ
, 
UCh¨32
 
°¨t
, UCh¨32 
limô
, 
uöt32_t
 
vÆue
, 
UBoﬁ
 
ovîwrôe
);

726 
U_CAPI
 
öt32_t
 
U_EXPORT2


727 
uåõ_£rülize
(
UNewTrõ
 *
åõ
, *
d©a
, 
öt32_t
 
ˇ∑côy
,

728 
UNewTrõGëFﬁdedVÆue
 *
gëFﬁdedVÆue
,

729 
UBoﬁ
 
ªdu˚To16Bôs
,

730 
UEº‹Code
 *
pEº‹Code
);

736 
U_CAPI
 
öt32_t
 
U_EXPORT2


737 
uåõ_sw≠
(c⁄° 
UD©aSw≠≥r
 *
ds
,

738 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

739 
UEº‹Code
 *
pEº‹Code
);

751 
	sUTrõHódî
 {

753 
uöt32_t
 
	msig«tuª
;

762 
uöt32_t
 
	m›ti⁄s
;

765 
öt32_t
 
	mödexLígth
;

768 
öt32_t
 
	md©aLígth
;

769 } 
	tUTrõHódî
;

777 
	mUTRIE_OPTIONS_SHIFT_MASK
=0xf,

780 
	mUTRIE_OPTIONS_INDEX_SHIFT
=4,

783 
	mUTRIE_OPTIONS_DATA_IS_32_BIT
=0x100,

789 
	mUTRIE_OPTIONS_LATIN1_IS_LINEAR
=0x200

792 
	gU_CDECL_END


	@utrie2.cpp

25 #ifde‡
UTRIE2_DEBUG


26 
	~<°dio.h
>

29 
	~"unicode/uty≥s.h
"

30 
	~"cmem‹y.h
"

31 
	~"uåõ2.h
"

32 
	~"uåõ2_im∂.h
"

36 
uöt32_t


37 
	$gë32
(c⁄° 
UNewTrõ2
 *
åõ
, 
UCh¨32
 
c
, 
UBoﬁ
 
‰omLSCP
) {

38 
öt32_t
 
i2
, 
block
;

40 if(
c
>=
åõ
->
highSèπ
 && (!
	`U_IS_LEAD
(cË|| 
‰omLSCP
)) {

41  
åõ
->
d©a
[åõ->
d©aLígth
-
UTRIE2_DATA_GRANULARITY
];

44 if(
	`U_IS_LEAD
(
c
Ë&& 
‰omLSCP
) {

45 
i2
=(
UTRIE2_LSCP_INDEX_2_OFFSET
-(0xd800>>
UTRIE2_SHIFT_2
))+

46 (
c
>>
UTRIE2_SHIFT_2
);

48 
i2
=
åõ
->
ödex1
[
c
>>
UTRIE2_SHIFT_1
]+

49 ((
c
>>
UTRIE2_SHIFT_2
)&
UTRIE2_INDEX_2_MASK
);

51 
block
=
åõ
->
ödex2
[
i2
];

52  
åõ
->
d©a
[
block
+(
c
&
UTRIE2_DATA_MASK
)];

53 
	}
}

55 
U_CAPI
 
uöt32_t
 
U_EXPORT2


56 
	$uåõ2_gë32
(c⁄° 
UTrõ2
 *
åõ
, 
UCh¨32
 
c
) {

57 if(
åõ
->
d©a16
!=
NULL
) {

58  
	`UTRIE2_GET16
(
åõ
, 
c
);

59 } if(
åõ
->
d©a32
!=
NULL
) {

60  
	`UTRIE2_GET32
(
åõ
, 
c
);

61 } if((
uöt32_t
)
c
>0x10ffff) {

62  
åõ
->
îr‹VÆue
;

64  
	`gë32
(
åõ
->
√wTrõ
, 
c
, 
TRUE
);

66 
	}
}

68 
U_CAPI
 
uöt32_t
 
U_EXPORT2


69 
	$uåõ2_gë32FromLódSuºog©eCodeUnô
(c⁄° 
UTrõ2
 *
åõ
, 
UCh¨32
 
c
) {

70 if(!
	`U_IS_LEAD
(
c
)) {

71  
åõ
->
îr‹VÆue
;

73 if(
åõ
->
d©a16
!=
NULL
) {

74  
	`UTRIE2_GET16_FROM_U16_SINGLE_LEAD
(
åõ
, 
c
);

75 } if(
åõ
->
d©a32
!=
NULL
) {

76  
	`UTRIE2_GET32_FROM_U16_SINGLE_LEAD
(
åõ
, 
c
);

78  
	`gë32
(
åõ
->
√wTrõ
, 
c
, 
FALSE
);

80 
	}
}

82 
U_INLINE
 
öt32_t


83 
	$u8Index
(c⁄° 
UTrõ2
 *
åõ
, 
UCh¨32
 
c
, 
öt32_t
 
i
) {

84 
öt32_t
 
idx
=

85 
	`_UTRIE2_INDEX_FROM_CP
(

86 
åõ
,

87 
åõ
->
d©a32
==
NULL
 ?Årõ->
ödexLígth
 : 0,

88 
c
);

89  (
idx
<<3)|
i
;

90 
	}
}

92 
U_CAPI
 
öt32_t
 
U_EXPORT2


93 
	$uåõ2_öã∫ÆU8NextIndex
(c⁄° 
UTrõ2
 *
åõ
, 
UCh¨32
 
c
,

94 c⁄° 
uöt8_t
 *
§c
, c⁄° uöt8_à*
limô
) {

95 
öt32_t
 
i
, 
Àngth
;

96 
i
=0;

98 if((
limô
-
§c
)<=7) {

99 
Àngth
=(
öt32_t
)(
limô
-
§c
);

101 
Àngth
=7;

103 
c
=
	`utf8_√xtCh¨Sa„Body
(
§c
, &
i
, 
Àngth
, c, -1);

104  
	`u8Index
(
åõ
, 
c
, 
i
);

105 
	}
}

107 
U_CAPI
 
öt32_t
 
U_EXPORT2


108 
	$uåõ2_öã∫ÆU8PªvIndex
(c⁄° 
UTrõ2
 *
åõ
, 
UCh¨32
 
c
,

109 c⁄° 
uöt8_t
 *
°¨t
, c⁄° uöt8_à*
§c
) {

110 
öt32_t
 
i
, 
Àngth
;

112 if((
§c
-
°¨t
)<=7) {

113 
i
=
Àngth
=(
öt32_t
)(
§c
-
°¨t
);

115 
i
=
Àngth
=7;

116 
°¨t
=
§c
-7;

118 
c
=
	`utf8_¥evCh¨Sa„Body
(
°¨t
, 0, &
i
, c, -1);

119 
i
=
Àngth
-i;

120  
	`u8Index
(
åõ
, 
c
, 
i
);

121 
	}
}

123 
U_CAPI
 
UTrõ2
 * 
U_EXPORT2


124 
	$uåõ2_›íFromSîülized
(
UTrõ2VÆueBôs
 
vÆueBôs
,

125 c⁄° *
d©a
, 
öt32_t
 
Àngth
, i¡32_à*
pA˘uÆLígth
,

126 
UEº‹Code
 *
pEº‹Code
) {

127 c⁄° 
UTrõ2Hódî
 *
hódî
;

128 c⁄° 
uöt16_t
 *
p16
;

129 
öt32_t
 
a˘uÆLígth
;

131 
UTrõ2
 
ãmpTrõ
;

132 
UTrõ2
 *
åõ
;

134 if(
	`U_FAILURE
(*
pEº‹Code
)) {

138 if–
Àngth
<=0 || (
	`U_POINTER_MASK_LSB
(
d©a
, 3)!=0) ||

139 
vÆueBôs
<0 || 
UTRIE2_COUNT_VALUE_BITS
<=valueBits

141 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

146 if(
Àngth
<(
öt32_t
)(
UTrõ2Hódî
)) {

147 *
pEº‹Code
=
U_INVALID_FORMAT_ERROR
;

152 
hódî
=(c⁄° 
UTrõ2Hódî
 *)
d©a
;

153 if(
hódî
->
sig«tuª
!=
UTRIE2_SIG
) {

154 *
pEº‹Code
=
U_INVALID_FORMAT_ERROR
;

159 if(
vÆueBôs
!=(
UTrõ2VÆueBôs
)(
hódî
->
›ti⁄s
&
UTRIE2_OPTIONS_VALUE_BITS_MASK
)) {

160 *
pEº‹Code
=
U_INVALID_FORMAT_ERROR
;

165 
	`u¥v_mem£t
(&
ãmpTrõ
, 0, (tempTrie));

166 
ãmpTrõ
.
ödexLígth
=
hódî
->indexLength;

167 
ãmpTrõ
.
d©aLígth
=
hódî
->
shi·edD©aLígth
<<
UTRIE2_INDEX_SHIFT
;

168 
ãmpTrõ
.
ödex2NuŒOff£t
=
hódî
->index2NullOffset;

169 
ãmpTrõ
.
d©aNuŒOff£t
=
hódî
->dataNullOffset;

171 
ãmpTrõ
.
highSèπ
=
hódî
->
shi·edHighSèπ
<<
UTRIE2_SHIFT_1
;

172 
ãmpTrõ
.
highVÆueIndex
ÒempTrõ.
d©aLígth
-
UTRIE2_DATA_GRANULARITY
;

173 if(
vÆueBôs
==
UTRIE2_16_VALUE_BITS
) {

174 
ãmpTrõ
.
highVÆueIndex
+ÒempTrõ.
ödexLígth
;

178 
a˘uÆLígth
=(
öt32_t
)(
UTrõ2Hódî
)+
ãmpTrõ
.
ödexLígth
*2;

179 if(
vÆueBôs
==
UTRIE2_16_VALUE_BITS
) {

180 
a˘uÆLígth
+=
ãmpTrõ
.
d©aLígth
*2;

182 
a˘uÆLígth
+=
ãmpTrõ
.
d©aLígth
*4;

184 if(
Àngth
<
a˘uÆLígth
) {

185 *
pEº‹Code
=
U_INVALID_FORMAT_ERROR
;

190 
åõ
=(
UTrõ2
 *)
	`u¥v_mÆloc
((UTrie2));

191 if(
åõ
==
NULL
) {

192 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

195 
	`u¥v_mem˝y
(
åõ
, &
ãmpTrõ
, (tempTrie));

196 
åõ
->
mem‹y
=(
uöt32_t
 *)
d©a
;

197 
åõ
->
Àngth
=
a˘uÆLígth
;

198 
åõ
->
isMem‹yOw√d
=
FALSE
;

201 
p16
=(c⁄° 
uöt16_t
 *)(
hódî
+1);

202 
åõ
->
ödex
=
p16
;

203 
p16
+=
åõ
->
ödexLígth
;

206 
vÆueBôs
) {

207 
UTRIE2_16_VALUE_BITS
:

208 
åõ
->
d©a16
=
p16
;

209 
åõ
->
d©a32
=
NULL
;

210 
åõ
->
öôülVÆue
Òrõ->
ödex
[åõ->
d©aNuŒOff£t
];

211 
åõ
->
îr‹VÆue
Òrõ->
d©a16
[
UTRIE2_BAD_UTF8_DATA_OFFSET
];

213 
UTRIE2_32_VALUE_BITS
:

214 
åõ
->
d©a16
=
NULL
;

215 
åõ
->
d©a32
=(c⁄° 
uöt32_t
 *)
p16
;

216 
åõ
->
öôülVÆue
Òrõ->
d©a32
[åõ->
d©aNuŒOff£t
];

217 
åõ
->
îr‹VÆue
Òrõ->
d©a32
[
UTRIE2_BAD_UTF8_DATA_OFFSET
];

220 *
pEº‹Code
=
U_INVALID_FORMAT_ERROR
;

224 if(
pA˘uÆLígth
!=
NULL
) {

225 *
pA˘uÆLígth
=
a˘uÆLígth
;

227  
åõ
;

228 
	}
}

230 
U_CAPI
 
UTrõ2
 * 
U_EXPORT2


231 
	$uåõ2_›íDummy
(
UTrõ2VÆueBôs
 
vÆueBôs
,

232 
uöt32_t
 
öôülVÆue
, uöt32_à
îr‹VÆue
,

233 
UEº‹Code
 *
pEº‹Code
) {

234 
UTrõ2
 *
åõ
;

235 
UTrõ2Hódî
 *
hódî
;

236 
uöt32_t
 *
p
;

237 
uöt16_t
 *
de°16
;

238 
öt32_t
 
ödexLígth
, 
d©aLígth
, 
Àngth
, 
i
;

239 
öt32_t
 
d©aMove
;

241 if(
	`U_FAILURE
(*
pEº‹Code
)) {

245 if(
vÆueBôs
<0 || 
UTRIE2_COUNT_VALUE_BITS
<=valueBits) {

246 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

251 
ödexLígth
=
UTRIE2_INDEX_1_OFFSET
;

252 
d©aLígth
=
UTRIE2_DATA_START_OFFSET
+
UTRIE2_DATA_GRANULARITY
;

253 
Àngth
=(
öt32_t
)(
UTrõ2Hódî
)+
ödexLígth
*2;

254 if(
vÆueBôs
==
UTRIE2_16_VALUE_BITS
) {

255 
Àngth
+=
d©aLígth
*2;

257 
Àngth
+=
d©aLígth
*4;

261 
åõ
=(
UTrõ2
 *)
	`u¥v_mÆloc
((UTrie2));

262 if(
åõ
==
NULL
) {

263 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

266 
	`u¥v_mem£t
(
åõ
, 0, (
UTrõ2
));

267 
åõ
->
mem‹y
=
	`u¥v_mÆloc
(
Àngth
);

268 if(
åõ
->
mem‹y
==
NULL
) {

269 
	`u¥v_‰ì
(
åõ
);

270 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

273 
åõ
->
Àngth
=length;

274 
åõ
->
isMem‹yOw√d
=
TRUE
;

277 if(
vÆueBôs
==
UTRIE2_16_VALUE_BITS
) {

278 
d©aMove
=
ödexLígth
;

280 
d©aMove
=0;

283 
åõ
->
ödexLígth
=indexLength;

284 
åõ
->
d©aLígth
=dataLength;

285 
åõ
->
ödex2NuŒOff£t
=
UTRIE2_INDEX_2_OFFSET
;

286 
åõ
->
d©aNuŒOff£t
=(
uöt16_t
)
d©aMove
;

287 
åõ
->
öôülVÆue
=initialValue;

288 
åõ
->
îr‹VÆue
=errorValue;

289 
åõ
->
highSèπ
=0;

290 
åõ
->
highVÆueIndex
=
d©aMove
+
UTRIE2_DATA_START_OFFSET
;

293 
hódî
=(
UTrõ2Hódî
 *)
åõ
->
mem‹y
;

295 
hódî
->
sig«tuª
=
UTRIE2_SIG
;

296 
hódî
->
›ti⁄s
=(
uöt16_t
)
vÆueBôs
;

298 
hódî
->
ödexLígth
=(
uöt16_t
)indexLength;

299 
hódî
->
shi·edD©aLígth
=(
uöt16_t
)(
d©aLígth
>>
UTRIE2_INDEX_SHIFT
);

300 
hódî
->
ödex2NuŒOff£t
=(
uöt16_t
)
UTRIE2_INDEX_2_OFFSET
;

301 
hódî
->
d©aNuŒOff£t
=(
uöt16_t
)
d©aMove
;

302 
hódî
->
shi·edHighSèπ
=0;

305 
de°16
=(
uöt16_t
 *)(
hódî
+1);

306 
åõ
->
ödex
=
de°16
;

309 
i
=0; i<
UTRIE2_INDEX_2_BMP_LENGTH
; ++i) {

310 *
de°16
++=(
uöt16_t
)(
d©aMove
>>
UTRIE2_INDEX_SHIFT
);

314 
i
=0; i<(0xc2-0xc0); ++i) {

315 *
de°16
++=(
uöt16_t
)(
d©aMove
+
UTRIE2_BAD_UTF8_DATA_OFFSET
);

317 ; 
i
<(0xe0-0xc0); ++i) {

318 *
de°16
++=(
uöt16_t
)
d©aMove
;

322 
vÆueBôs
) {

323 
UTRIE2_16_VALUE_BITS
:

325 
åõ
->
d©a16
=
de°16
;

326 
åõ
->
d©a32
=
NULL
;

327 
i
=0; i<0x80; ++i) {

328 *
de°16
++=(
uöt16_t
)
öôülVÆue
;

330 ; 
i
<0xc0; ++i) {

331 *
de°16
++=(
uöt16_t
)
îr‹VÆue
;

334 
i
=0; i<
UTRIE2_DATA_GRANULARITY
; ++i) {

335 *
de°16
++=(
uöt16_t
)
öôülVÆue
;

338 
UTRIE2_32_VALUE_BITS
:

340 
p
=(
uöt32_t
 *)
de°16
;

341 
åõ
->
d©a16
=
NULL
;

342 
åõ
->
d©a32
=
p
;

343 
i
=0; i<0x80; ++i) {

344 *
p
++=
öôülVÆue
;

346 ; 
i
<0xc0; ++i) {

347 *
p
++=
îr‹VÆue
;

350 
i
=0; i<
UTRIE2_DATA_GRANULARITY
; ++i) {

351 *
p
++=
öôülVÆue
;

355 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

359  
åõ
;

360 
	}
}

362 
U_CAPI
 
U_EXPORT2


363 
	$uåõ2_˛o£
(
UTrõ2
 *
åõ
) {

364 if(
åõ
!=
NULL
) {

365 if(
åõ
->
isMem‹yOw√d
) {

366 
	`u¥v_‰ì
(
åõ
->
mem‹y
);

368 if(
åõ
->
√wTrõ
!=
NULL
) {

369 
	`u¥v_‰ì
(
åõ
->
√wTrõ
->
d©a
);

370 
	`u¥v_‰ì
(
åõ
->
√wTrõ
);

372 
	`u¥v_‰ì
(
åõ
);

374 
	}
}

376 
U_CAPI
 
öt32_t
 
U_EXPORT2


377 
	$uåõ2_gëVîsi⁄
(c⁄° *
d©a
, 
öt32_t
 
Àngth
, 
UBoﬁ
 
™yEndünOk
) {

378 
uöt32_t
 
sig«tuª
;

379 if(
Àngth
<16 || 
d©a
==
NULL
 || (
	`U_POINTER_MASK_LSB
(data, 3)!=0)) {

382 
sig«tuª
=*(c⁄° 
uöt32_t
 *)
d©a
;

383 if(
sig«tuª
==
UTRIE2_SIG
) {

386 if(
™yEndünOk
 && 
sig«tuª
==
UTRIE2_OE_SIG
) {

389 if(
sig«tuª
==
UTRIE_SIG
) {

392 if(
™yEndünOk
 && 
sig«tuª
==
UTRIE_OE_SIG
) {

396 
	}
}

398 
U_CAPI
 
öt32_t
 
U_EXPORT2


399 
	$uåõ2_sw≠
(c⁄° 
UD©aSw≠≥r
 *
ds
,

400 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

401 
UEº‹Code
 *
pEº‹Code
) {

402 c⁄° 
UTrõ2Hódî
 *
öTrõ
;

403 
UTrõ2Hódî
 
åõ
;

404 
öt32_t
 
d©aLígth
, 
size
;

405 
UTrõ2VÆueBôs
 
vÆueBôs
;

407 if(
	`U_FAILURE
(*
pEº‹Code
)) {

410 if(
ds
==
NULL
 || 
öD©a
==NULL || (
Àngth
>=0 && 
outD©a
==NULL)) {

411 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

416 if(
Àngth
>=0 &&Üígth<(
öt32_t
)(
UTrõ2Hódî
)) {

417 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

421 
öTrõ
=(c⁄° 
UTrõ2Hódî
 *)
öD©a
;

422 
åõ
.
sig«tuª
=
ds
->
	`ªadUI¡32
(
öTrõ
->signature);

423 
åõ
.
›ti⁄s
=
ds
->
	`ªadUI¡16
(
öTrõ
->options);

424 
åõ
.
ödexLígth
=
ds
->
	`ªadUI¡16
(
öTrõ
->indexLength);

425 
åõ
.
shi·edD©aLígth
=
ds
->
	`ªadUI¡16
(
öTrõ
->shiftedDataLength);

427 
vÆueBôs
=(
UTrõ2VÆueBôs
)(
åõ
.
›ti⁄s
&
UTRIE2_OPTIONS_VALUE_BITS_MASK
);

428 
d©aLígth
=(
öt32_t
)
åõ
.
shi·edD©aLígth
<<
UTRIE2_INDEX_SHIFT
;

430 if–
åõ
.
sig«tuª
!=
UTRIE2_SIG
 ||

431 
vÆueBôs
<0 || 
UTRIE2_COUNT_VALUE_BITS
<=valueBits ||

432 
åõ
.
ödexLígth
<
UTRIE2_INDEX_1_OFFSET
 ||

433 
d©aLígth
<
UTRIE2_DATA_START_OFFSET


435 *
pEº‹Code
=
U_INVALID_FORMAT_ERROR
;

439 
size
=(
UTrõ2Hódî
)+
åõ
.
ödexLígth
*2;

440 
vÆueBôs
) {

441 
UTRIE2_16_VALUE_BITS
:

442 
size
+=
d©aLígth
*2;

444 
UTRIE2_32_VALUE_BITS
:

445 
size
+=
d©aLígth
*4;

448 *
pEº‹Code
=
U_INVALID_FORMAT_ERROR
;

452 if(
Àngth
>=0) {

453 
UTrõ2Hódî
 *
outTrõ
;

455 if(
Àngth
<
size
) {

456 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

460 
outTrõ
=(
UTrõ2Hódî
 *)
outD©a
;

463 
ds
->
	`sw≠Aºay32
(ds, &
öTrõ
->
sig«tuª
, 4, &
outTrõ
->sig«tuª, 
pEº‹Code
);

464 
ds
->
	`sw≠Aºay16
(ds, &
öTrõ
->
›ti⁄s
, 12, &
outTrõ
->›ti⁄s, 
pEº‹Code
);

467 
vÆueBôs
) {

468 
UTRIE2_16_VALUE_BITS
:

469 
ds
->
	`sw≠Aºay16
(ds, 
öTrõ
+1, (
åõ
.
ödexLígth
+
d©aLígth
)*2, 
outTrõ
+1, 
pEº‹Code
);

471 
UTRIE2_32_VALUE_BITS
:

472 
ds
->
	`sw≠Aºay16
(ds, 
öTrõ
+1, 
åõ
.
ödexLígth
*2, 
outTrõ
+1, 
pEº‹Code
);

473 
ds
->
	`sw≠Aºay32
(ds, (c⁄° 
uöt16_t
 *)(
öTrõ
+1)+
åõ
.
ödexLígth
, 
d©aLígth
*4,

474 (
uöt16_t
 *)(
outTrõ
+1)+
åõ
.
ödexLígth
, 
pEº‹Code
);

477 *
pEº‹Code
=
U_INVALID_FORMAT_ERROR
;

482  
size
;

483 
	}
}

490 
	#MIN_VALUE
(
a
, 
b
Ë(◊)<(bË? (aË: (b))

	)

493 
uöt32_t
 
U_CALLCONV


494 
	$íumSameVÆue
(c⁄° * , 
uöt32_t
 
vÆue
) {

495  
vÆue
;

496 
	}
}

512 
	$íumEôhîTrõ
(c⁄° 
UTrõ2
 *
åõ
,

513 
UCh¨32
 
°¨t
, UCh¨32 
limô
,

514 
UTrõ2EnumVÆue
 *
íumVÆue
, 
UTrõ2EnumR™ge
 *
íumR™ge
, c⁄° *
c⁄ãxt
) {

515 c⁄° 
uöt32_t
 *
d©a32
;

516 c⁄° 
uöt16_t
 *
idx
;

518 
uöt32_t
 
vÆue
, 
¥evVÆue
, 
öôülVÆue
;

519 
UCh¨32
 
c
, 
¥ev
, 
highSèπ
;

520 
öt32_t
 
j
, 
i2Block
, 
¥evI2Block
, 
ödex2NuŒOff£t
, 
block
, 
¥evBlock
, 
nuŒBlock
;

522 if(
íumR™ge
==
NULL
) {

525 if(
íumVÆue
==
NULL
) {

526 
íumVÆue
=
íumSameVÆue
;

529 if(
åõ
->
√wTrõ
==
NULL
) {

531 
idx
=
åõ
->
ödex
;

532 
d©a32
=
åõ
->data32;

534 
ödex2NuŒOff£t
=
åõ
->index2NullOffset;

535 
nuŒBlock
=
åõ
->
d©aNuŒOff£t
;

538 
idx
=
NULL
;

539 
d©a32
=
åõ
->
√wTrõ
->
d©a
;

541 
ödex2NuŒOff£t
=
åõ
->
√wTrõ
->index2NullOffset;

542 
nuŒBlock
=
åõ
->
√wTrõ
->
d©aNuŒOff£t
;

545 
highSèπ
=
åõ
->highStart;

548 
öôülVÆue
=
	`íumVÆue
(
c⁄ãxt
, 
åõ
->initialValue);

551 
¥evI2Block
=-1;

552 
¥evBlock
=-1;

553 
¥ev
=
°¨t
;

554 
¥evVÆue
=0;

557 
c
=
°¨t
; c<
limô
 && c<
highSèπ
;) {

559 
UCh¨32
 
ãmpLimô
=
c
+
UTRIE2_CP_PER_INDEX_1_ENTRY
;

560 if(
limô
<
ãmpLimô
) {

561 
ãmpLimô
=
limô
;

563 if(
c
<=0xffff) {

564 if(!
	`U_IS_SURROGATE
(
c
)) {

565 
i2Block
=
c
>>
UTRIE2_SHIFT_2
;

566 } if(
	`U_IS_SURROGATE_LEAD
(
c
)) {

571 
i2Block
=
UTRIE2_LSCP_INDEX_2_OFFSET
;

572 
ãmpLimô
=
	`MIN_VALUE
(0xdc00, 
limô
);

578 
i2Block
=0xd800>>
UTRIE2_SHIFT_2
;

579 
ãmpLimô
=
	`MIN_VALUE
(0xe000, 
limô
);

583 if(
idx
!=
NULL
) {

584 
i2Block
=
idx
[(
UTRIE2_INDEX_1_OFFSET
-
UTRIE2_OMITTED_BMP_INDEX_1_LENGTH
)+

585 (
c
>>
UTRIE2_SHIFT_1
)];

587 
i2Block
=
åõ
->
√wTrõ
->
ödex1
[
c
>>
UTRIE2_SHIFT_1
];

589 if(
i2Block
==
¥evI2Block
 && (
c
-
¥ev
)>=
UTRIE2_CP_PER_INDEX_1_ENTRY
) {

595 
c
+=
UTRIE2_CP_PER_INDEX_1_ENTRY
;

599 
¥evI2Block
=
i2Block
;

600 if(
i2Block
==
ödex2NuŒOff£t
) {

602 if(
¥evVÆue
!=
öôülVÆue
) {

603 if(
¥ev
<
c
 && !
	`íumR™ge
(
c⁄ãxt
,Öªv, c-1, 
¥evVÆue
)) {

606 
¥evBlock
=
nuŒBlock
;

607 
¥ev
=
c
;

608 
¥evVÆue
=
öôülVÆue
;

610 
c
+=
UTRIE2_CP_PER_INDEX_1_ENTRY
;

613 
öt32_t
 
i2
, 
i2Limô
;

614 
i2
=(
c
>>
UTRIE2_SHIFT_2
)&
UTRIE2_INDEX_2_MASK
;

615 if((
c
>>
UTRIE2_SHIFT_1
)==(
ãmpLimô
>>UTRIE2_SHIFT_1)) {

616 
i2Limô
=(
ãmpLimô
>>
UTRIE2_SHIFT_2
)&
UTRIE2_INDEX_2_MASK
;

618 
i2Limô
=
UTRIE2_INDEX_2_BLOCK_LENGTH
;

620 ; 
i2
<
i2Limô
; ++i2) {

621 if(
idx
!=
NULL
) {

622 
block
=(
öt32_t
)
idx
[
i2Block
+
i2
]<<
UTRIE2_INDEX_SHIFT
;

624 
block
=
åõ
->
√wTrõ
->
ödex2
[
i2Block
+
i2
];

626 if(
block
==
¥evBlock
 && (
c
-
¥ev
)>=
UTRIE2_DATA_BLOCK_LENGTH
) {

628 
c
+=
UTRIE2_DATA_BLOCK_LENGTH
;

631 
¥evBlock
=
block
;

632 if(
block
==
nuŒBlock
) {

634 if(
¥evVÆue
!=
öôülVÆue
) {

635 if(
¥ev
<
c
 && !
	`íumR™ge
(
c⁄ãxt
,Öªv, c-1, 
¥evVÆue
)) {

638 
¥ev
=
c
;

639 
¥evVÆue
=
öôülVÆue
;

641 
c
+=
UTRIE2_DATA_BLOCK_LENGTH
;

643 
j
=0; j<
UTRIE2_DATA_BLOCK_LENGTH
; ++j) {

644 
vÆue
=
	`íumVÆue
(
c⁄ãxt
, 
d©a32
!=
NULL
 ? d©a32[
block
+
j
] : 
idx
[block+j]);

645 if(
vÆue
!=
¥evVÆue
) {

646 if(
¥ev
<
c
 && !
	`íumR™ge
(
c⁄ãxt
,Öªv, c-1, 
¥evVÆue
)) {

649 
¥ev
=
c
;

650 
¥evVÆue
=
vÆue
;

652 ++
c
;

659 if(
c
>
limô
) {

660 
c
=
limô
;

661 } if(
c
<
limô
) {

663 
uöt32_t
 
highVÆue
;

664 if(
idx
!=
NULL
) {

665 
highVÆue
=

666 
d©a32
!=
NULL
 ?

667 
d©a32
[
åõ
->
highVÆueIndex
] :

668 
idx
[
åõ
->
highVÆueIndex
];

670 
highVÆue
=
åõ
->
√wTrõ
->
d©a
[åõ->√wTrõ->
d©aLígth
-
UTRIE2_DATA_GRANULARITY
];

672 
vÆue
=
	`íumVÆue
(
c⁄ãxt
, 
highVÆue
);

673 if(
vÆue
!=
¥evVÆue
) {

674 if(
¥ev
<
c
 && !
	`íumR™ge
(
c⁄ãxt
,Öªv, c-1, 
¥evVÆue
)) {

677 
¥ev
=
c
;

678 
¥evVÆue
=
vÆue
;

680 
c
=
limô
;

684 
	`íumR™ge
(
c⁄ãxt
, 
¥ev
, 
c
-1, 
¥evVÆue
);

685 
	}
}

687 
U_CAPI
 
U_EXPORT2


688 
	$uåõ2_íum
(c⁄° 
UTrõ2
 *
åõ
,

689 
UTrõ2EnumVÆue
 *
íumVÆue
, 
UTrõ2EnumR™ge
 *
íumR™ge
, c⁄° *
c⁄ãxt
) {

690 
	`íumEôhîTrõ
(
åõ
, 0, 0x110000, 
íumVÆue
, 
íumR™ge
, 
c⁄ãxt
);

691 
	}
}

693 
U_CAPI
 
U_EXPORT2


694 
	$uåõ2_íumF‹LódSuºog©e
(c⁄° 
UTrõ2
 *
åõ
, 
UCh¨32
 
Àad
,

695 
UTrõ2EnumVÆue
 *
íumVÆue
, 
UTrõ2EnumR™ge
 *
íumR™ge
,

696 c⁄° *
c⁄ãxt
) {

697 if(!
	`U16_IS_LEAD
(
Àad
)) {

700 
Àad
=(lead-0xd7c0)<<10;

701 
	`íumEôhîTrõ
(
åõ
, 
Àad
,Üód+0x400, 
íumVÆue
, 
íumR™ge
, 
c⁄ãxt
);

702 
	}
}

706 
U_NAMESPACE_BEGIN


708 
uöt16_t
 
	gBackw¨dUTrõ2SåögIãøt‹
::
	$¥evious16
() {

709 
codePoötLimô
=
codePoötSèπ
;

710 if(
°¨t
>=
codePoötSèπ
) {

711 
codePoöt
=
U_SENTINEL
;

714 
uöt16_t
 
ªsu…
;

715 
	`UTRIE2_U16_PREV16
(
åõ
, 
°¨t
, 
codePoötSèπ
, 
codePoöt
, 
ªsu…
);

716  
ªsu…
;

717 
	}
}

719 
uöt16_t
 
	gF‹w¨dUTrõ2SåögIãøt‹
::
	$√xt16
() {

720 
codePoötSèπ
=
codePoötLimô
;

721 if(
codePoötLimô
==
limô
) {

722 
codePoöt
=
U_SENTINEL
;

725 
uöt16_t
 
ªsu…
;

726 
	`UTRIE2_U16_NEXT16
(
åõ
, 
codePoötLimô
, 
limô
, 
codePoöt
, 
ªsu…
);

727  
ªsu…
;

728 
	}
}

730 
UTrõ2
 *
	gUTrõ2SögÀt⁄
::
	$gëIn°™˚
(
In°™tüt‹Fn
 *
ö°™tüt‹
, c⁄° *
c⁄ãxt
,

731 
UEº‹Code
 &
îr‹Code
) {

732 *
du∂iˇã
;

733 
UTrõ2
 *
ö°™˚
=(UTrõ2 *)
sögÀt⁄
.
	`gëIn°™˚
(
ö°™tüt‹
, 
c⁄ãxt
, 
du∂iˇã
, 
îr‹Code
);

734 
	`uåõ2_˛o£
((
UTrõ2
 *)
du∂iˇã
);

735  
ö°™˚
;

736 
	}
}

738 
	gU_NAMESPACE_END


	@utrie2.h

17 #i‚de‡
__UTRIE2_H__


18 
	#__UTRIE2_H__


	)

20 
	~"unicode/uty≥s.h
"

21 
	~"ud©aswp.h
"

23 
U_CDECL_BEGIN


25 
	gUTrõ
;

26 #i‚de‡
__UTRIE_H__


27 
UTrõ
 
	tUTrõ
;

60 
	gUTrõ2
;

61 
UTrõ2
 
	tUTrõ2
;

68 
	eUTrõ2VÆueBôs
 {

70 
	mUTRIE2_16_VALUE_BITS
,

72 
	mUTRIE2_32_VALUE_BITS
,

74 
	mUTRIE2_COUNT_VALUE_BITS


76 
UTrõ2VÆueBôs
 
	tUTrõ2VÆueBôs
;

97 
U_CAPI
 
UTrõ2
 * 
U_EXPORT2


98 
uåõ2_›íFromSîülized
(
UTrõ2VÆueBôs
 
vÆueBôs
,

99 c⁄° *
d©a
, 
öt32_t
 
Àngth
, i¡32_à*
pA˘uÆLígth
,

100 
UEº‹Code
 *
pEº‹Code
);

123 
U_CAPI
 
UTrõ2
 * 
U_EXPORT2


124 
uåõ2_›íDummy
(
UTrõ2VÆueBôs
 
vÆueBôs
,

125 
uöt32_t
 
öôülVÆue
, uöt32_à
îr‹VÆue
,

126 
UEº‹Code
 *
pEº‹Code
);

138 
U_CAPI
 
uöt32_t
 
U_EXPORT2


139 
uåõ2_gë32
(c⁄° 
UTrõ2
 *
åõ
, 
UCh¨32
 
c
);

151 
uöt32_t
 
	tU_CALLCONV


152 
	tUTrõ2EnumVÆue
(c⁄° *
	tc⁄ãxt
, 
	tuöt32_t
 
	tvÆue
);

167 
UBoﬁ
 
	tU_CALLCONV


168 
	tUTrõ2EnumR™ge
(c⁄° *
	tc⁄ãxt
, 
	tUCh¨32
 
	t°¨t
, UCh¨32 
	tíd
, 
	tuöt32_t
 
	tvÆue
);

188 
U_CAPI
 
U_EXPORT2


189 
uåõ2_íum
(c⁄° 
UTrõ2
 *
åõ
,

190 
UTrõ2EnumVÆue
 *
íumVÆue
, 
UTrõ2EnumR™ge
 *
íumR™ge
, c⁄° *
c⁄ãxt
);

205 
U_CAPI
 
UTrõ2
 * 
U_EXPORT2


206 
uåõ2_›í
(
uöt32_t
 
öôülVÆue
, uöt32_à
îr‹VÆue
, 
UEº‹Code
 *
pEº‹Code
);

216 
U_CAPI
 
UTrõ2
 * 
U_EXPORT2


217 
uåõ2_˛⁄e
(c⁄° 
UTrõ2
 *
Ÿhî
, 
UEº‹Code
 *
pEº‹Code
);

228 
U_CAPI
 
UTrõ2
 * 
U_EXPORT2


229 
uåõ2_˛⁄eAsThawed
(c⁄° 
UTrõ2
 *
Ÿhî
, 
UEº‹Code
 *
pEº‹Code
);

236 
U_CAPI
 
U_EXPORT2


237 
uåõ2_˛o£
(
UTrõ2
 *
åõ
);

248 
U_CAPI
 
U_EXPORT2


249 
uåõ2_£t32
(
UTrõ2
 *
åõ
, 
UCh¨32
 
c
, 
uöt32_t
 
vÆue
, 
UEº‹Code
 *
pEº‹Code
);

264 
U_CAPI
 
U_EXPORT2


265 
uåõ2_£tR™ge32
(
UTrõ2
 *
åõ
,

266 
UCh¨32
 
°¨t
, UCh¨32 
íd
,

267 
uöt32_t
 
vÆue
, 
UBoﬁ
 
ovîwrôe
,

268 
UEº‹Code
 *
pEº‹Code
);

289 
U_CAPI
 
U_EXPORT2


290 
uåõ2_‰ìze
(
UTrõ2
 *
åõ
, 
UTrõ2VÆueBôs
 
vÆueBôs
, 
UEº‹Code
 *
pEº‹Code
);

299 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


300 
uåõ2_isFrozí
(c⁄° 
UTrõ2
 *
åõ
);

320 
U_CAPI
 
öt32_t
 
U_EXPORT2


321 
uåõ2_£rülize
(
UTrõ2
 *
åõ
,

322 *
d©a
, 
öt32_t
 
ˇ∑côy
,

323 
UEº‹Code
 *
pEº‹Code
);

340 
U_CAPI
 
öt32_t
 
U_EXPORT2


341 
uåõ2_gëVîsi⁄
(c⁄° *
d©a
, 
öt32_t
 
Àngth
, 
UBoﬁ
 
™yEndünOk
);

347 
U_CAPI
 
öt32_t
 
U_EXPORT2


348 
uåõ2_sw≠
(c⁄° 
UD©aSw≠≥r
 *
ds
,

349 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

350 
UEº‹Code
 *
pEº‹Code
);

356 
U_CAPI
 
öt32_t
 
U_EXPORT2


357 
uåõ2_sw≠AnyVîsi⁄
(c⁄° 
UD©aSw≠≥r
 *
ds
,

358 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

359 
UEº‹Code
 *
pEº‹Code
);

371 
U_CAPI
 
UTrõ2
 * 
U_EXPORT2


372 
uåõ2_‰omUTrõ
(c⁄° 
UTrõ
 *
åõ1
, 
uöt32_t
 
îr‹VÆue
, 
UEº‹Code
 *
pEº‹Code
);

389 
	#UTRIE2_GET16
(
åõ
, 
c
Ë
	`_UTRIE2_GET
(—rõ), 
ödex
, (åõ)->
ödexLígth
, (c))

	)

399 
	#UTRIE2_GET32
(
åõ
, 
c
Ë
	`_UTRIE2_GET
(—rõ), 
d©a32
, 0, (c))

	)

411 
	#UTRIE2_U16_NEXT16
(
åõ
, 
§c
, 
limô
, 
c
, 
ªsu…
Ë
	`_UTRIE2_U16_NEXT
—rõ, 
ödex
, src,Üimô, c,Ñesu…)

	)

423 
	#UTRIE2_U16_NEXT32
(
åõ
, 
§c
, 
limô
, 
c
, 
ªsu…
Ë
	`_UTRIE2_U16_NEXT
—rõ, 
d©a32
, src,Üimô, c,Ñesu…)

	)

435 
	#UTRIE2_U16_PREV16
(
åõ
, 
°¨t
, 
§c
, 
c
, 
ªsu…
Ë
	`_UTRIE2_U16_PREV
—rõ, 
ödex
, sèπ, src, c,Ñesu…)

	)

447 
	#UTRIE2_U16_PREV32
(
åõ
, 
°¨t
, 
§c
, 
c
, 
ªsu…
Ë
	`_UTRIE2_U16_PREV
—rõ, 
d©a32
, sèπ, src, c,Ñesu…)

	)

457 
	#UTRIE2_U8_NEXT16
(
åõ
, 
§c
, 
limô
, 
ªsu…
)\

458 
	`_UTRIE2_U8_NEXT
(
åõ
, 
d©a16
, 
ödex
, 
§c
, 
limô
, 
ªsu…
)

	)

468 
	#UTRIE2_U8_NEXT32
(
åõ
, 
§c
, 
limô
, 
ªsu…
) \

469 
	`_UTRIE2_U8_NEXT
(
åõ
, 
d©a32
, d©a32, 
§c
, 
limô
, 
ªsu…
)

	)

479 
	#UTRIE2_U8_PREV16
(
åõ
, 
°¨t
, 
§c
, 
ªsu…
) \

480 
	`_UTRIE2_U8_PREV
(
åõ
, 
d©a16
, 
ödex
, 
°¨t
, 
§c
, 
ªsu…
)

	)

490 
	#UTRIE2_U8_PREV32
(
åõ
, 
°¨t
, 
§c
, 
ªsu…
) \

491 
	`_UTRIE2_U8_PREV
(
åõ
, 
d©a32
, d©a32, 
°¨t
, 
§c
, 
ªsu…
)

	)

530 
U_CAPI
 
uöt32_t
 
U_EXPORT2


531 
uåõ2_gë32FromLódSuºog©eCodeUnô
(c⁄° 
UTrõ2
 *
åõ
, 
UCh¨32
 
c
);

558 
U_CAPI
 
U_EXPORT2


559 
uåõ2_íumF‹LódSuºog©e
(c⁄° 
UTrõ2
 *
åõ
, 
UCh¨32
 
Àad
,

560 
UTrõ2EnumVÆue
 *
íumVÆue
, 
UTrõ2EnumR™ge
 *
íumR™ge
,

561 c⁄° *
c⁄ãxt
);

572 
U_CAPI
 
U_EXPORT2


573 
uåõ2_£t32F‹LódSuºog©eCodeUnô
(
UTrõ2
 *
åõ
,

574 
UCh¨32
 
Àad
, 
uöt32_t
 
vÆue
,

575 
UEº‹Code
 *
pEº‹Code
);

586 
	#UTRIE2_GET16_FROM_U16_SINGLE_LEAD
(
åõ
, 
c
Ë
	`_UTRIE2_GET_FROM_U16_SINGLE_LEAD
(—rõ), 
ödex
, c)

	)

597 
	#UTRIE2_GET32_FROM_U16_SINGLE_LEAD
(
åõ
, 
c
Ë
	`_UTRIE2_GET_FROM_U16_SINGLE_LEAD
(—rõ), 
d©a32
, c)

	)

606 
	#UTRIE2_GET16_FROM_SUPP
(
åõ
, 
c
Ë
	`_UTRIE2_GET_FROM_SUPP
(—rõ), 
ödex
, c)

	)

615 
	#UTRIE2_GET32_FROM_SUPP
(
åõ
, 
c
Ë
	`_UTRIE2_GET_FROM_SUPP
(—rõ), 
d©a32
, c)

	)

617 
	gU_CDECL_END


621 #ifde‡
XP_CPLUSPLUS


623 
	~"muãx.h
"

625 
U_NAMESPACE_BEGIN


628 ˛as†
	cUTrõ2SåögIãøt‹
 : 
public
 
UMem‹y
 {

629 
public
:

630 
	$UTrõ2SåögIãøt‹
(c⁄° 
UTrõ2
 *
t
, c⁄° 
UCh¨
 *
p
) :

631 
	`åõ
(
t
), 
	`codePoötSèπ
(
p
), 
	`codePoötLimô
’), 
	$codePoöt
(
U_SENTINEL
) {}

633 c⁄° 
UTrõ2
 *
åõ
;

634 c⁄° 
UCh¨
 *
codePoötSèπ
, *
codePoötLimô
;

635 
UCh¨32
 
codePoöt
;

636 
	}
};

638 ˛as†
	cBackw¨dUTrõ2SåögIãøt‹
 : 
public
 
UTrõ2SåögIãøt‹
 {

639 
public
:

640 
	$Backw¨dUTrõ2SåögIãøt‹
(c⁄° 
UTrõ2
 *
t
, c⁄° 
UCh¨
 *
s
, c⁄° UCh¨ *
p
) :

641 
	`UTrõ2SåögIãøt‹
(
t
, 
p
), 
	$°¨t
(
s
) {}

643 
uöt16_t
 
	`¥evious16
();

645 c⁄° 
UCh¨
 *
°¨t
;

646 
	}
};

648 ˛as†
	cF‹w¨dUTrõ2SåögIãøt‹
 : 
public
 
UTrõ2SåögIãøt‹
 {

649 
public
:

652 
	$F‹w¨dUTrõ2SåögIãøt‹
(c⁄° 
UTrõ2
 *
t
, c⁄° 
UCh¨
 *
p
, c⁄° UCh¨ *
l
) :

653 
	`UTrõ2SåögIãøt‹
(
t
, 
p
), 
	$limô
(
l
) {}

655 
uöt16_t
 
	`√xt16
();

657 c⁄° 
UCh¨
 *
limô
;

658 
	}
};

660 ˛as†
	cUTrõ2SögÀt⁄
 {

661 
	mpublic
:

662 
	$UTrõ2SögÀt⁄
(
Sim∂eSögÀt⁄
 &
s
Ë: 
	$sögÀt⁄
(
s
) {}

663 
	$dñëeIn°™˚
() {

664 
	`uåõ2_˛o£
((
UTrõ2
 *)
sögÀt⁄
.
fIn°™˚
);

665 
sögÀt⁄
.
	`ª£t
();

666 
	}
}

667 
UTrõ2
 *
gëIn°™˚
(
In°™tüt‹Fn
 *
ö°™tüt‹
, c⁄° *
c⁄ãxt
,

668 
UEº‹Code
 &
îr‹Code
);

669 
	g¥iv©e
:

670 
Sim∂eSögÀt⁄
 &
sögÀt⁄
;

673 
	gU_NAMESPACE_END


679 
U_CDECL_BEGIN


682 
	gUNewTrõ2
;

683 
UNewTrõ2
 
	tUNewTrõ2
;

694 
	sUTrõ2
 {

696 c⁄° 
uöt16_t
 *
	mödex
;

697 c⁄° 
uöt16_t
 *
	md©a16
;

698 c⁄° 
uöt32_t
 *
	md©a32
;

700 
öt32_t
 
	mödexLígth
, 
	md©aLígth
;

701 
uöt16_t
 
	mödex2NuŒOff£t
;

702 
uöt16_t
 
	md©aNuŒOff£t
;

703 
uöt32_t
 
	möôülVÆue
;

705 
uöt32_t
 
	mîr‹VÆue
;

708 
UCh¨32
 
	mhighSèπ
;

709 
öt32_t
 
	mhighVÆueIndex
;

712 *
	mmem‹y
;

713 
öt32_t
 
	mÀngth
;

714 
UBoﬁ
 
	misMem‹yOw√d
;

715 
UBoﬁ
 
	m∑ddög1
;

716 
öt16_t
 
	m∑ddög2
;

717 
UNewTrõ2
 *
	m√wTrõ
;

728 
	mUTRIE2_SHIFT_1
=6+5,

731 
	mUTRIE2_SHIFT_2
=5,

737 
	mUTRIE2_SHIFT_1_2
=
UTRIE2_SHIFT_1
-
UTRIE2_SHIFT_2
,

743 
	mUTRIE2_OMITTED_BMP_INDEX_1_LENGTH
=0x10000>>
UTRIE2_SHIFT_1
,

746 
	mUTRIE2_CP_PER_INDEX_1_ENTRY
=1<<
UTRIE2_SHIFT_1
,

749 
	mUTRIE2_INDEX_2_BLOCK_LENGTH
=1<<
UTRIE2_SHIFT_1_2
,

752 
	mUTRIE2_INDEX_2_MASK
=
UTRIE2_INDEX_2_BLOCK_LENGTH
-1,

755 
	mUTRIE2_DATA_BLOCK_LENGTH
=1<<
UTRIE2_SHIFT_2
,

758 
	mUTRIE2_DATA_MASK
=
UTRIE2_DATA_BLOCK_LENGTH
-1,

766 
	mUTRIE2_INDEX_SHIFT
=2,

769 
	mUTRIE2_DATA_GRANULARITY
=1<<
UTRIE2_INDEX_SHIFT
,

777 
	mUTRIE2_INDEX_2_OFFSET
=0,

785 
	mUTRIE2_LSCP_INDEX_2_OFFSET
=0x10000>>
UTRIE2_SHIFT_2
,

786 
	mUTRIE2_LSCP_INDEX_2_LENGTH
=0x400>>
UTRIE2_SHIFT_2
,

789 
	mUTRIE2_INDEX_2_BMP_LENGTH
=
UTRIE2_LSCP_INDEX_2_OFFSET
+
UTRIE2_LSCP_INDEX_2_LENGTH
,

795 
	mUTRIE2_UTF8_2B_INDEX_2_OFFSET
=
UTRIE2_INDEX_2_BMP_LENGTH
,

796 
	mUTRIE2_UTF8_2B_INDEX_2_LENGTH
=0x800>>6,

810 
	mUTRIE2_INDEX_1_OFFSET
=
UTRIE2_UTF8_2B_INDEX_2_OFFSET
+
UTRIE2_UTF8_2B_INDEX_2_LENGTH
,

811 
	mUTRIE2_MAX_INDEX_1_LENGTH
=0x100000>>
UTRIE2_SHIFT_1
,

823 
	mUTRIE2_BAD_UTF8_DATA_OFFSET
=0x80,

826 
	mUTRIE2_DATA_START_OFFSET
=0xc0

836 
U_INTERNAL
 
öt32_t
 
U_EXPORT2


837 
uåõ2_öã∫ÆU8NextIndex
(c⁄° 
UTrõ2
 *
åõ
, 
UCh¨32
 
c
,

838 c⁄° 
uöt8_t
 *
§c
, c⁄° uöt8_à*
limô
);

845 
U_INTERNAL
 
öt32_t
 
U_EXPORT2


846 
uåõ2_öã∫ÆU8PªvIndex
(c⁄° 
UTrõ2
 *
åõ
, 
UCh¨32
 
c
,

847 c⁄° 
uöt8_t
 *
°¨t
, c⁄° uöt8_à*
§c
);

851 
	#_UTRIE2_INDEX_RAW
(
off£t
, 
åõIndex
, 
c
) \

852 (((
öt32_t
)((
åõIndex
)[(
off£t
)+((
c
)>>
UTRIE2_SHIFT_2
)]) \

853 <<
UTRIE2_INDEX_SHIFT
)+ \

854 ((
c
)&
UTRIE2_DATA_MASK
))

	)

857 
	#_UTRIE2_INDEX_FROM_U16_SINGLE_LEAD
(
åõIndex
, 
c
Ë
	`_UTRIE2_INDEX_RAW
(0,ÅrõIndex, c)

	)

860 
	#_UTRIE2_INDEX_FROM_LSCP
(
åõIndex
, 
c
) \

861 
	`_UTRIE2_INDEX_RAW
(
UTRIE2_LSCP_INDEX_2_OFFSET
-(0xd800>>
UTRIE2_SHIFT_2
), 
åõIndex
, 
c
)

	)

864 
	#_UTRIE2_INDEX_FROM_BMP
(
åõIndex
, 
c
) \

865 
	`_UTRIE2_INDEX_RAW
(
	`U_IS_LEAD
(
c
Ë? 
UTRIE2_LSCP_INDEX_2_OFFSET
-(0xd800>>
UTRIE2_SHIFT_2
) : 0, \

866 
åõIndex
, 
c
)

	)

869 
	#_UTRIE2_INDEX_FROM_SUPP
(
åõIndex
, 
c
) \

870 (((
öt32_t
)((
åõIndex
)[ \

871 (
åõIndex
)[(
UTRIE2_INDEX_1_OFFSET
-
UTRIE2_OMITTED_BMP_INDEX_1_LENGTH
)+ \

872 ((
c
)>>
UTRIE2_SHIFT_1
)]+ \

873 (((
c
)>>
UTRIE2_SHIFT_2
)&
UTRIE2_INDEX_2_MASK
)]) \

874 <<
UTRIE2_INDEX_SHIFT
)+ \

875 ((
c
)&
UTRIE2_DATA_MASK
))

	)

881 
	#_UTRIE2_INDEX_FROM_CP
(
åõ
, 
asciiOff£t
, 
c
) \

882 ((
uöt32_t
)(
c
)<0xd800 ? \

883 
	`_UTRIE2_INDEX_RAW
(0, (
åõ
)->
ödex
, 
c
) : \

884 (
uöt32_t
)(
c
)<=0xffff ? \

885 
	`_UTRIE2_INDEX_RAW
( \

886 (
c
)<=0xdbf‡? 
UTRIE2_LSCP_INDEX_2_OFFSET
-(0xd800>>
UTRIE2_SHIFT_2
) : 0, \

887 (
åõ
)->
ödex
, 
c
) : \

888 (
uöt32_t
)(
c
)>0x10ffff ? \

889 (
asciiOff£t
)+
UTRIE2_BAD_UTF8_DATA_OFFSET
 : \

890 (
c
)>=(
åõ
)->
highSèπ
 ? \

891 (
åõ
)->
highVÆueIndex
 : \

892 
	`_UTRIE2_INDEX_FROM_SUPP
((
åõ
)->
ödex
, 
c
))

	)

895 
	#_UTRIE2_GET_FROM_U16_SINGLE_LEAD
(
åõ
, 
d©a
, 
c
) \

896 (
åõ
)->
d©a
[
	`_UTRIE2_INDEX_FROM_U16_SINGLE_LEAD
(—rõ)->
ödex
, 
c
)]

	)

899 
	#_UTRIE2_GET_FROM_SUPP
(
åõ
, 
d©a
, 
c
) \

900 (
åõ
)->
d©a
[(
c
)>=—rõ)->
highSèπ
 ? (åõ)->
highVÆueIndex
 : \

901 
	`_UTRIE2_INDEX_FROM_SUPP
((
åõ
)->
ödex
, 
c
)]

	)

907 
	#_UTRIE2_GET
(
åõ
, 
d©a
, 
asciiOff£t
, 
c
) \

908 (
åõ
)->
d©a
[
	`_UTRIE2_INDEX_FROM_CP
—rõ, 
asciiOff£t
, 
c
)]

	)

911 
	#_UTRIE2_U16_NEXT
(
åõ
, 
d©a
, 
§c
, 
limô
, 
c
, 
ªsu…
) { \

913 
uöt16_t
 
__c2
; \

914 (
c
)=*(
§c
)++; \

915 if(!
	`U16_IS_LEAD
(
c
)) { \

916 (
ªsu…
)=
	`_UTRIE2_GET_FROM_U16_SINGLE_LEAD
(
åõ
, 
d©a
, 
c
); \

917 } if((
§c
)==(
limô
Ë|| !
	`U16_IS_TRAIL
(
__c2
=*(src))) { \

918 (
ªsu…
)=(
åõ
)->
d©a
[
	`_UTRIE2_INDEX_FROM_LSCP
(—rõ)->
ödex
, 
c
)]; \

920 ++(
§c
); \

921 (
c
)=
	`U16_GET_SUPPLEMENTARY
((c), 
__c2
); \

922 (
ªsu…
)=
	`_UTRIE2_GET_FROM_SUPP
((
åõ
), 
d©a
, (
c
)); \

925 }

	)

928 
	#_UTRIE2_U16_PREV
(
åõ
, 
d©a
, 
°¨t
, 
§c
, 
c
, 
ªsu…
) { \

930 
uöt16_t
 
__c2
; \

931 (
c
)=*--(
§c
); \

932 if(!
	`U16_IS_TRAIL
(
c
Ë|| (
§c
)==(
°¨t
Ë|| !
	`U16_IS_LEAD
(
__c2
=*((src)-1))) { \

933 (
ªsu…
)=(
åõ
)->
d©a
[
	`_UTRIE2_INDEX_FROM_BMP
(—rõ)->
ödex
, 
c
)]; \

935 --(
§c
); \

936 (
c
)=
	`U16_GET_SUPPLEMENTARY
(
__c2
, (c)); \

937 (
ªsu…
)=
	`_UTRIE2_GET_FROM_SUPP
((
åõ
), 
d©a
, (
c
)); \

940 }

	)

943 
	#_UTRIE2_U8_NEXT
(
åõ
, 
ascii
, 
d©a
, 
§c
, 
limô
, 
ªsu…
) { \

944 
uöt8_t
 
__Àad
=(uöt8_t)*(
§c
)++; \

945 if(
__Àad
<0xc0) { \

946 (
ªsu…
)=(
åõ
)->
ascii
[
__Àad
]; \

948 
uöt8_t
 
__t1
, 
__t2
; \

950 
__Àad
<0xe0 && (
§c
)<(
limô
) && \

951 (
__t1
=(
uöt8_t
)(*(
§c
)-0x80))<=0x3f \

953 ++(
§c
); \

954 (
ªsu…
)=(
åõ
)->
d©a
[ \

955 (
åõ
)->
ödex
[(
UTRIE2_UTF8_2B_INDEX_2_OFFSET
-0xc0)+
__Àad
]+ \

956 
__t1
]; \

958 
__Àad
<0xed && ((
§c
)+1)<(
limô
) && \

959 (
__t1
=(
uöt8_t
)(*(
§c
)-0x80))<=0x3‡&& (
__Àad
>0xe0 || __t1>=0x20) && \

960 (
__t2
=(
uöt8_t
)(*((
§c
)+1)-0x80))<= 0x3f \

962 (
§c
)+=2; \

963 (
ªsu…
)=(
åõ
)->
d©a
[ \

964 ((
öt32_t
)((
åõ
)->
ödex
[((
__Àad
-0xe0)<<(12-
UTRIE2_SHIFT_2
))+ \

965 (
__t1
<<(6-
UTRIE2_SHIFT_2
))+(
__t2
>>UTRIE2_SHIFT_2)]) \

966 <<
UTRIE2_INDEX_SHIFT
)+ \

967 (
__t2
&
UTRIE2_DATA_MASK
)]; \

969 
öt32_t
 
__ödex
=
	`uåõ2_öã∫ÆU8NextIndex
((
åõ
), 
__Àad
, (c⁄° 
uöt8_t
 *)(
§c
), \

970 (c⁄° 
uöt8_t
 *)(
limô
)); \

971 (
§c
)+=
__ödex
&7; \

972 (
ªsu…
)=(
åõ
)->
d©a
[
__ödex
>>3]; \

975 }

	)

978 
	#_UTRIE2_U8_PREV
(
åõ
, 
ascii
, 
d©a
, 
°¨t
, 
§c
, 
ªsu…
) { \

979 
uöt8_t
 
__b
=(uöt8_t)*--(
§c
); \

980 if(
__b
<0x80) { \

981 (
ªsu…
)=(
åõ
)->
ascii
[
__b
]; \

983 
öt32_t
 
__ödex
=
	`uåõ2_öã∫ÆU8PªvIndex
((
åõ
), 
__b
, (c⁄° 
uöt8_t
 *)(
°¨t
), \

984 (c⁄° 
uöt8_t
 *)(
§c
)); \

985 (
§c
)-=
__ödex
&7; \

986 (
ªsu…
)=(
åõ
)->
d©a
[
__ödex
>>3]; \

988 }

	)

990 
	gU_CDECL_END


995 #i‡
deföed
 (
U_HAVE_MSVC_2003_OR_EARLIER
)

996 #¥agm®
›timize
("", 
off
)

	@utrie2_builder.c

25 #ifde‡
UTRIE2_DEBUG


26 
	~<°dio.h
>

29 
	~"unicode/uty≥s.h
"

30 
	~"cmem‹y.h
"

31 
	~"uåõ2.h
"

32 
	~"uåõ2_im∂.h
"

34 
	~"uåõ.h
"

36 
	#LENGTHOF
(
¨øy
Ë(
öt32_t
)(◊ºay)/(◊ºay)[0]))

	)

75 
	mUNEWTRIE2_INDEX_2_NULL_OFFSET
=
UNEWTRIE2_INDEX_GAP_OFFSET
+
UNEWTRIE2_INDEX_GAP_LENGTH
,

78 
	mUNEWTRIE2_INDEX_2_START_OFFSET
=
UNEWTRIE2_INDEX_2_NULL_OFFSET
+
UTRIE2_INDEX_2_BLOCK_LENGTH
,

85 
	mUNEWTRIE2_DATA_NULL_OFFSET
=
UTRIE2_DATA_START_OFFSET
,

88 
	mUNEWTRIE2_DATA_START_OFFSET
=
UNEWTRIE2_DATA_NULL_OFFSET
+0x40,

96 
	mUNEWTRIE2_DATA_0800_OFFSET
=
UNEWTRIE2_DATA_START_OFFSET
+0x780

100 
	#UNEWTRIE2_INITIAL_DATA_LENGTH
 ((
öt32_t
)1<<14)

	)

103 
	#UNEWTRIE2_MEDIUM_DATA_LENGTH
 ((
öt32_t
)1<<17)

	)

105 
öt32_t


106 
ÆlocIndex2Block
(
UNewTrõ2
 *
åõ
);

108 
U_CAPI
 
UTrõ2
 * 
U_EXPORT2


109 
	$uåõ2_›í
(
uöt32_t
 
öôülVÆue
, uöt32_à
îr‹VÆue
, 
UEº‹Code
 *
pEº‹Code
) {

110 
UTrõ2
 *
åõ
;

111 
UNewTrõ2
 *
√wTrõ
;

112 
uöt32_t
 *
d©a
;

113 
öt32_t
 
i
, 
j
;

115 if(
	`U_FAILURE
(*
pEº‹Code
)) {

116  
NULL
;

119 
åõ
=(
UTrõ2
 *)
	`u¥v_mÆloc
((UTrie2));

120 
√wTrõ
=(
UNewTrõ2
 *)
	`u¥v_mÆloc
((UNewTrie2));

121 
d©a
=(
uöt32_t
 *)
	`u¥v_mÆloc
(
UNEWTRIE2_INITIAL_DATA_LENGTH
*4);

122 if(
åõ
==
NULL
 || 
√wTrõ
==NULL || 
d©a
==NULL) {

123 
	`u¥v_‰ì
(
åõ
);

124 
	`u¥v_‰ì
(
√wTrõ
);

125 
	`u¥v_‰ì
(
d©a
);

126 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

130 
	`u¥v_mem£t
(
åõ
, 0, (
UTrõ2
));

131 
åõ
->
öôülVÆue
=initialValue;

132 
åõ
->
îr‹VÆue
=errorValue;

133 
åõ
->
highSèπ
=0x110000;

134 
åõ
->
√wTrõ
=newTrie;

136 
√wTrõ
->
d©a
=data;

137 
√wTrõ
->
d©aC≠acôy
=
UNEWTRIE2_INITIAL_DATA_LENGTH
;

138 
√wTrõ
->
öôülVÆue
=initialValue;

139 
√wTrõ
->
îr‹VÆue
=errorValue;

140 
√wTrõ
->
highSèπ
=0x110000;

141 
√wTrõ
->
fú°FªeBlock
=0;

142 
√wTrõ
->
isCom∑˘ed
=
FALSE
;

150 
i
=0; i<0x80; ++i) {

151 
√wTrõ
->
d©a
[
i
]=
öôülVÆue
;

153 ; 
i
<0xc0; ++i) {

154 
√wTrõ
->
d©a
[
i
]=
îr‹VÆue
;

156 
i
=
UNEWTRIE2_DATA_NULL_OFFSET
; i<
UNEWTRIE2_DATA_START_OFFSET
; ++i) {

157 
√wTrõ
->
d©a
[
i
]=
öôülVÆue
;

159 
√wTrõ
->
d©aNuŒOff£t
=
UNEWTRIE2_DATA_NULL_OFFSET
;

160 
√wTrõ
->
d©aLígth
=
UNEWTRIE2_DATA_START_OFFSET
;

163 
i
=0, 
j
=0; j<0x80; ++i, j+=
UTRIE2_DATA_BLOCK_LENGTH
) {

164 
√wTrõ
->
ödex2
[
i
]=
j
;

165 
√wTrõ
->
m≠
[
i
]=1;

168 ; 
j
<0xc0; ++
i
, j+=
UTRIE2_DATA_BLOCK_LENGTH
) {

169 
√wTrõ
->
m≠
[
i
]=0;

177 
√wTrõ
->
m≠
[
i
++]=

178 (0x110000>>
UTRIE2_SHIFT_2
)-

179 (0x80>>
UTRIE2_SHIFT_2
)+

181 
UTRIE2_LSCP_INDEX_2_LENGTH
;

182 
j
+=
UTRIE2_DATA_BLOCK_LENGTH
;

183 ; 
j
<
UNEWTRIE2_DATA_START_OFFSET
; ++
i
, j+=
UTRIE2_DATA_BLOCK_LENGTH
) {

184 
√wTrõ
->
m≠
[
i
]=0;

191 
i
=0x80>>
UTRIE2_SHIFT_2
; i<
UTRIE2_INDEX_2_BMP_LENGTH
; ++i) {

192 
√wTrõ
->
ödex2
[
i
]=
UNEWTRIE2_DATA_NULL_OFFSET
;

199 
i
=0; i<
UNEWTRIE2_INDEX_GAP_LENGTH
; ++i) {

200 
√wTrõ
->
ödex2
[
UNEWTRIE2_INDEX_GAP_OFFSET
+
i
]=-1;

204 
i
=0; i<
UTRIE2_INDEX_2_BLOCK_LENGTH
; ++i) {

205 
√wTrõ
->
ödex2
[
UNEWTRIE2_INDEX_2_NULL_OFFSET
+
i
]=
UNEWTRIE2_DATA_NULL_OFFSET
;

207 
√wTrõ
->
ödex2NuŒOff£t
=
UNEWTRIE2_INDEX_2_NULL_OFFSET
;

208 
√wTrõ
->
ödex2Lígth
=
UNEWTRIE2_INDEX_2_START_OFFSET
;

211 
i
=0, 
j
=0;

212 
i
<
UTRIE2_OMITTED_BMP_INDEX_1_LENGTH
;

213 ++
i
, 
j
+=
UTRIE2_INDEX_2_BLOCK_LENGTH


215 
√wTrõ
->
ödex1
[
i
]=
j
;

219 ; 
i
<
UNEWTRIE2_INDEX_1_LENGTH
; ++i) {

220 
√wTrõ
->
ödex1
[
i
]=
UNEWTRIE2_INDEX_2_NULL_OFFSET
;

228 
i
=0x80; i<0x800; i+=
UTRIE2_DATA_BLOCK_LENGTH
) {

229 
	`uåõ2_£t32
(
åõ
, 
i
, 
öôülVÆue
, 
pEº‹Code
);

232  
åõ
;

233 
	}
}

235 
UNewTrõ2
 *

236 
	$˛⁄eBuûdî
(c⁄° 
UNewTrõ2
 *
Ÿhî
) {

237 
UNewTrõ2
 *
åõ
;

239 
åõ
=(
UNewTrõ2
 *)
	`u¥v_mÆloc
((UNewTrie2));

240 if(
åõ
==
NULL
) {

241  
NULL
;

244 
åõ
->
d©a
=(
uöt32_t
 *)
	`u¥v_mÆloc
(
Ÿhî
->
d©aC≠acôy
*4);

245 if(
åõ
->
d©a
==
NULL
) {

246 
	`u¥v_‰ì
(
åõ
);

247  
NULL
;

249 
åõ
->
d©aC≠acôy
=
Ÿhî
->dataCapacity;

252 
	`u¥v_mem˝y
(
åõ
->
ödex1
, 
Ÿhî
->index1, (trie->index1));

253 
	`u¥v_mem˝y
(
åõ
->
ödex2
, 
Ÿhî
->ödex2, othî->
ödex2Lígth
*4);

254 
åõ
->
ödex2NuŒOff£t
=
Ÿhî
->index2NullOffset;

255 
åõ
->
ödex2Lígth
=
Ÿhî
->index2Length;

257 
	`u¥v_mem˝y
(
åõ
->
d©a
, 
Ÿhî
->d©a, othî->
d©aLígth
*4);

258 
åõ
->
d©aNuŒOff£t
=
Ÿhî
->dataNullOffset;

259 
åõ
->
d©aLígth
=
Ÿhî
->dataLength;

262 if(
Ÿhî
->
isCom∑˘ed
) {

263 
åõ
->
fú°FªeBlock
=0;

265 
	`u¥v_mem˝y
(
åõ
->
m≠
, 
Ÿhî
->m≠, (Ÿhî->
d©aLígth
>>
UTRIE2_SHIFT_2
)*4);

266 
åõ
->
fú°FªeBlock
=
Ÿhî
->firstFreeBlock;

269 
åõ
->
öôülVÆue
=
Ÿhî
->initialValue;

270 
åõ
->
îr‹VÆue
=
Ÿhî
->errorValue;

271 
åõ
->
highSèπ
=
Ÿhî
->highStart;

272 
åõ
->
isCom∑˘ed
=
Ÿhî
->isCompacted;

274  
åõ
;

275 
	}
}

277 
U_CAPI
 
UTrõ2
 * 
U_EXPORT2


278 
	$uåõ2_˛⁄e
(c⁄° 
UTrõ2
 *
Ÿhî
, 
UEº‹Code
 *
pEº‹Code
) {

279 
UTrõ2
 *
åõ
;

281 if(
	`U_FAILURE
(*
pEº‹Code
)) {

282  
NULL
;

284 if(
Ÿhî
==
NULL
 || (Ÿhî->
mem‹y
==NULL && othî->
√wTrõ
==NULL)) {

285 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

286  
NULL
;

289 
åõ
=(
UTrõ2
 *)
	`u¥v_mÆloc
((UTrie2));

290 if(
åõ
==
NULL
) {

291  
NULL
;

293 
	`u¥v_mem˝y
(
åõ
, 
Ÿhî
, (
UTrõ2
));

295 if(
Ÿhî
->
mem‹y
!=
NULL
) {

296 
åõ
->
mem‹y
=
	`u¥v_mÆloc
(
Ÿhî
->
Àngth
);

297 if(
åõ
->
mem‹y
!=
NULL
) {

298 
åõ
->
isMem‹yOw√d
=
TRUE
;

299 
	`u¥v_mem˝y
(
åõ
->
mem‹y
, 
Ÿhî
->mem‹y, othî->
Àngth
);

302 
åõ
->
ödex
=(
uöt16_t
 *Èrõ->
mem‹y
+(
Ÿhî
->index-(uint16_t *)other->memory);

303 if(
Ÿhî
->
d©a16
!=
NULL
) {

304 
åõ
->
d©a16
=(
uöt16_t
 *Èrõ->
mem‹y
+(
Ÿhî
->data16-(uint16_t *)other->memory);

306 if(
Ÿhî
->
d©a32
!=
NULL
) {

307 
åõ
->
d©a32
=(
uöt32_t
 *Èrõ->
mem‹y
+(
Ÿhî
->data32-(uint32_t *)other->memory);

311 
åõ
->
√wTrõ
=
	`˛⁄eBuûdî
(
Ÿhî
->newTrie);

314 if(
åõ
->
mem‹y
==
NULL
 &&Årõ->
√wTrõ
==NULL) {

315 
	`u¥v_‰ì
(
åõ
);

316 
åõ
=
NULL
;

318  
åõ
;

319 
	}
}

321 
	sNewTrõAndSètus
 {

322 
UTrõ2
 *
	måõ
;

323 
UEº‹Code
 
	mîr‹Code
;

324 
UBoﬁ
 
	mex˛usiveLimô
;

325 } 
	tNewTrõAndSètus
;

327 
UBoﬁ
 
U_CALLCONV


328 
	$c›yEnumR™ge
(c⁄° *
c⁄ãxt
, 
UCh¨32
 
°¨t
, UCh¨32 
íd
, 
uöt32_t
 
vÆue
) {

329 
NewTrõAndSètus
 *
¡
=(NewTrõAndSètu†*)
c⁄ãxt
;

330 if(
vÆue
!=
¡
->
åõ
->
öôülVÆue
) {

331 if(
¡
->
ex˛usiveLimô
) {

332 --
íd
;

334 if(
°¨t
==
íd
) {

335 
	`uåõ2_£t32
(
¡
->
åõ
, 
°¨t
, 
vÆue
, &¡->
îr‹Code
);

337 
	`uåõ2_£tR™ge32
(
¡
->
åõ
, 
°¨t
, 
íd
, 
vÆue
, 
TRUE
, &¡->
îr‹Code
);

339  
	`U_SUCCESS
(
¡
->
îr‹Code
);

341  
TRUE
;

343 
	}
}

345 #ifde‡
UTRIE2_DEBUG


347 
	$uåõ_¥ötLígths
(c⁄° 
UTrõ
 *
åõ
) {

348 
ödexLígth
=
åõ
->indexLength;

349 
d©aLígth
=()
åõ
->dataLength;

350 
tŸÆLígth
=()(
UTrõHódî
)+
ödexLígth
*2+
d©aLígth
*(
åõ
->
d©a32
!=
NULL
 ? 4 : 2);

351 
	`¥ötf
("**UTrieLengths** index:%6ld data:%6ld serialized:%6ld\n",

352 
ödexLígth
, 
d©aLígth
, 
tŸÆLígth
);

353 
	}
}

356 
	$uåõ2_¥ötLígths
(c⁄° 
UTrõ2
 *
åõ
, c⁄° *
which
) {

357 
ödexLígth
=
åõ
->indexLength;

358 
d©aLígth
=()
åõ
->dataLength;

359 
tŸÆLígth
=()(
UTrõ2Hódî
)+
ödexLígth
*2+
d©aLígth
*(
åõ
->
d©a32
!=
NULL
 ? 4 : 2);

360 
	`¥ötf
("**UTrie2Lengths(%s)** index:%6ld data:%6ld serialized:%6ld\n",

361 
which
, 
ödexLígth
, 
d©aLígth
, 
tŸÆLígth
);

362 
	}
}

365 
U_CAPI
 
UTrõ2
 * 
U_EXPORT2


366 
	$uåõ2_˛⁄eAsThawed
(c⁄° 
UTrõ2
 *
Ÿhî
, 
UEº‹Code
 *
pEº‹Code
) {

367 
NewTrõAndSètus
 
c⁄ãxt
;

368 
UCh¨
 
Àad
;

370 if(
	`U_FAILURE
(*
pEº‹Code
)) {

371  
NULL
;

373 if(
Ÿhî
==
NULL
 || (Ÿhî->
mem‹y
==NULL && othî->
√wTrõ
==NULL)) {

374 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

375  
NULL
;

377 if(
Ÿhî
->
√wTrõ
!=
NULL
 && !Ÿhî->√wTrõ->
isCom∑˘ed
) {

378  
	`uåõ2_˛⁄e
(
Ÿhî
, 
pEº‹Code
);

382 
c⁄ãxt
.
åõ
=
	`uåõ2_›í
(
Ÿhî
->
öôülVÆue
, othî->
îr‹VÆue
, 
pEº‹Code
);

383 if(
	`U_FAILURE
(*
pEº‹Code
)) {

384  
NULL
;

386 
c⁄ãxt
.
ex˛usiveLimô
=
FALSE
;

387 
c⁄ãxt
.
îr‹Code
=*
pEº‹Code
;

388 
	`uåõ2_íum
(
Ÿhî
, 
NULL
, 
c›yEnumR™ge
, &
c⁄ãxt
);

389 *
pEº‹Code
=
c⁄ãxt
.
îr‹Code
;

390 
Àad
=0xd800;Üead<0xdc00; ++lead) {

391 
uöt32_t
 
vÆue
;

392 if(
Ÿhî
->
d©a32
==
NULL
) {

393 
vÆue
=
	`UTRIE2_GET16_FROM_U16_SINGLE_LEAD
(
Ÿhî
, 
Àad
);

395 
vÆue
=
	`UTRIE2_GET32_FROM_U16_SINGLE_LEAD
(
Ÿhî
, 
Àad
);

397 if(
vÆue
!=
Ÿhî
->
öôülVÆue
) {

398 
	`uåõ2_£t32F‹LódSuºog©eCodeUnô
(
c⁄ãxt
.
åõ
, 
Àad
, 
vÆue
, 
pEº‹Code
);

401 if(
	`U_FAILURE
(*
pEº‹Code
)) {

402 
	`uåõ2_˛o£
(
c⁄ãxt
.
åõ
);

403 
c⁄ãxt
.
åõ
=
NULL
;

405  
c⁄ãxt
.
åõ
;

406 
	}
}

409 
U_CAPI
 
UTrõ2
 * 
U_EXPORT2


410 
	$uåõ2_‰omUTrõ
(c⁄° 
UTrõ
 *
åõ1
, 
uöt32_t
 
îr‹VÆue
, 
UEº‹Code
 *
pEº‹Code
) {

411 
NewTrõAndSètus
 
c⁄ãxt
;

412 
UCh¨
 
Àad
;

414 if(
	`U_FAILURE
(*
pEº‹Code
)) {

415  
NULL
;

417 if(
åõ1
==
NULL
) {

418 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

419  
NULL
;

421 
c⁄ãxt
.
åõ
=
	`uåõ2_›í
(
åõ1
->
öôülVÆue
, 
îr‹VÆue
, 
pEº‹Code
);

422 if(
	`U_FAILURE
(*
pEº‹Code
)) {

423  
NULL
;

425 
c⁄ãxt
.
ex˛usiveLimô
=
TRUE
;

426 
c⁄ãxt
.
îr‹Code
=*
pEº‹Code
;

427 
	`uåõ_íum
(
åõ1
, 
NULL
, 
c›yEnumR™ge
, &
c⁄ãxt
);

428 *
pEº‹Code
=
c⁄ãxt
.
îr‹Code
;

429 
Àad
=0xd800;Üead<0xdc00; ++lead) {

430 
uöt32_t
 
vÆue
;

431 if(
åõ1
->
d©a32
==
NULL
) {

432 
vÆue
=
	`UTRIE_GET16_FROM_LEAD
(
åõ1
, 
Àad
);

434 
vÆue
=
	`UTRIE_GET32_FROM_LEAD
(
åõ1
, 
Àad
);

436 if(
vÆue
!=
åõ1
->
öôülVÆue
) {

437 
	`uåõ2_£t32F‹LódSuºog©eCodeUnô
(
c⁄ãxt
.
åõ
, 
Àad
, 
vÆue
, 
pEº‹Code
);

440 if(
	`U_SUCCESS
(*
pEº‹Code
)) {

441 
	`uåõ2_‰ìze
(
c⁄ãxt
.
åõ
,

442 
åõ1
->
d©a32
!=
NULL
 ? 
UTRIE2_32_VALUE_BITS
 : 
UTRIE2_16_VALUE_BITS
,

443 
pEº‹Code
);

445 #ifde‡
UTRIE2_DEBUG


446 if(
	`U_SUCCESS
(*
pEº‹Code
)) {

447 
	`uåõ_¥ötLígths
(
åõ1
);

448 
	`uåõ2_¥ötLígths
(
c⁄ãxt
.
åõ
, "fromUTrie");

451 if(
	`U_FAILURE
(*
pEº‹Code
)) {

452 
	`uåõ2_˛o£
(
c⁄ãxt
.
åõ
);

453 
c⁄ãxt
.
åõ
=
NULL
;

455  
c⁄ãxt
.
åõ
;

456 
	}
}

458 
U_INLINE
 
UBoﬁ


459 
	$isInNuŒBlock
(
UNewTrõ2
 *
åõ
, 
UCh¨32
 
c
, 
UBoﬁ
 
f‹LSCP
) {

460 
öt32_t
 
i2
, 
block
;

462 if(
	`U_IS_LEAD
(
c
Ë&& 
f‹LSCP
) {

463 
i2
=(
UTRIE2_LSCP_INDEX_2_OFFSET
-(0xd800>>
UTRIE2_SHIFT_2
))+

464 (
c
>>
UTRIE2_SHIFT_2
);

466 
i2
=
åõ
->
ödex1
[
c
>>
UTRIE2_SHIFT_1
]+

467 ((
c
>>
UTRIE2_SHIFT_2
)&
UTRIE2_INDEX_2_MASK
);

469 
block
=
åõ
->
ödex2
[
i2
];

470  (
UBoﬁ
)(
block
==
åõ
->
d©aNuŒOff£t
);

471 
	}
}

473 
öt32_t


474 
	$ÆlocIndex2Block
(
UNewTrõ2
 *
åõ
) {

475 
öt32_t
 
√wBlock
, 
√wT›
;

477 
√wBlock
=
åõ
->
ödex2Lígth
;

478 
√wT›
=
√wBlock
+
UTRIE2_INDEX_2_BLOCK_LENGTH
;

479 if(
√wT›
>
	`LENGTHOF
(
åõ
->
ödex2
)) {

487 
åõ
->
ödex2Lígth
=
√wT›
;

488 
	`u¥v_mem˝y
(
åõ
->
ödex2
+
√wBlock
,Årõ->ödex2+åõ->
ödex2NuŒOff£t
, 
UTRIE2_INDEX_2_BLOCK_LENGTH
*4);

489  
√wBlock
;

490 
	}
}

492 
öt32_t


493 
	$gëIndex2Block
(
UNewTrõ2
 *
åõ
, 
UCh¨32
 
c
, 
UBoﬁ
 
f‹LSCP
) {

494 
öt32_t
 
i1
, 
i2
;

496 if(
	`U_IS_LEAD
(
c
Ë&& 
f‹LSCP
) {

497  
UTRIE2_LSCP_INDEX_2_OFFSET
;

500 
i1
=
c
>>
UTRIE2_SHIFT_1
;

501 
i2
=
åõ
->
ödex1
[
i1
];

502 if(
i2
==
åõ
->
ödex2NuŒOff£t
) {

503 
i2
=
	`ÆlocIndex2Block
(
åõ
);

504 if(
i2
<0) {

507 
åõ
->
ödex1
[
i1
]=
i2
;

509  
i2
;

510 
	}
}

512 
öt32_t


513 
	$ÆlocD©aBlock
(
UNewTrõ2
 *
åõ
, 
öt32_t
 
c›yBlock
) {

514 
öt32_t
 
√wBlock
, 
√wT›
;

516 if(
åõ
->
fú°FªeBlock
!=0) {

518 
√wBlock
=
åõ
->
fú°FªeBlock
;

519 
åõ
->
fú°FªeBlock
=-åõ->
m≠
[
√wBlock
>>
UTRIE2_SHIFT_2
];

522 
√wBlock
=
åõ
->
d©aLígth
;

523 
√wT›
=
√wBlock
+
UTRIE2_DATA_BLOCK_LENGTH
;

524 if(
√wT›
>
åõ
->
d©aC≠acôy
) {

526 
öt32_t
 
ˇ∑côy
;

527 
uöt32_t
 *
d©a
;

529 if(
åõ
->
d©aC≠acôy
<
UNEWTRIE2_MEDIUM_DATA_LENGTH
) {

530 
ˇ∑côy
=
UNEWTRIE2_MEDIUM_DATA_LENGTH
;

531 } if(
åõ
->
d©aC≠acôy
<
UNEWTRIE2_MAX_DATA_LENGTH
) {

532 
ˇ∑côy
=
UNEWTRIE2_MAX_DATA_LENGTH
;

541 
d©a
=(
uöt32_t
 *)
	`u¥v_mÆloc
(
ˇ∑côy
*4);

542 if(
d©a
==
NULL
) {

545 
	`u¥v_mem˝y
(
d©a
, 
åõ
->d©a,Årõ->
d©aLígth
*4);

546 
	`u¥v_‰ì
(
åõ
->
d©a
);

547 
åõ
->
d©a
=data;

548 
åõ
->
d©aC≠acôy
=
ˇ∑côy
;

550 
åõ
->
d©aLígth
=
√wT›
;

552 
	`u¥v_mem˝y
(
åõ
->
d©a
+
√wBlock
,Årõ->d©a+
c›yBlock
, 
UTRIE2_DATA_BLOCK_LENGTH
*4);

553 
åõ
->
m≠
[
√wBlock
>>
UTRIE2_SHIFT_2
]=0;

554  
√wBlock
;

555 
	}
}

559 
	$ªÀa£D©aBlock
(
UNewTrõ2
 *
åõ
, 
öt32_t
 
block
) {

561 
åõ
->
m≠
[
block
>>
UTRIE2_SHIFT_2
]=-åõ->
fú°FªeBlock
;

562 
åõ
->
fú°FªeBlock
=
block
;

563 
	}
}

565 
U_INLINE
 
UBoﬁ


566 
	$isWrôabÀBlock
(
UNewTrõ2
 *
åõ
, 
öt32_t
 
block
) {

567  (
UBoﬁ
)(
block
!=
åõ
->
d©aNuŒOff£t
 && 1=Òrõ->
m≠
[block>>
UTRIE2_SHIFT_2
]);

568 
	}
}

570 
U_INLINE
 

571 
	$£tIndex2E¡ry
(
UNewTrõ2
 *
åõ
, 
öt32_t
 
i2
, i¡32_à
block
) {

572 
öt32_t
 
ﬁdBlock
;

573 ++
åõ
->
m≠
[
block
>>
UTRIE2_SHIFT_2
];

574 
ﬁdBlock
=
åõ
->
ödex2
[
i2
];

575 if(0 =--
åõ
->
m≠
[
ﬁdBlock
>>
UTRIE2_SHIFT_2
]) {

576 
	`ªÀa£D©aBlock
(
åõ
, 
ﬁdBlock
);

578 
åõ
->
ödex2
[
i2
]=
block
;

579 
	}
}

587 
öt32_t


588 
	$gëD©aBlock
(
UNewTrõ2
 *
åõ
, 
UCh¨32
 
c
, 
UBoﬁ
 
f‹LSCP
) {

589 
öt32_t
 
i2
, 
ﬁdBlock
, 
√wBlock
;

591 
i2
=
	`gëIndex2Block
(
åõ
, 
c
, 
f‹LSCP
);

592 if(
i2
<0) {

596 
i2
+=(
c
>>
UTRIE2_SHIFT_2
)&
UTRIE2_INDEX_2_MASK
;

597 
ﬁdBlock
=
åõ
->
ödex2
[
i2
];

598 if(
	`isWrôabÀBlock
(
åõ
, 
ﬁdBlock
)) {

599  
ﬁdBlock
;

603 
√wBlock
=
	`ÆlocD©aBlock
(
åõ
, 
ﬁdBlock
);

604 if(
√wBlock
<0) {

608 
	`£tIndex2E¡ry
(
åõ
, 
i2
, 
√wBlock
);

609  
√wBlock
;

610 
	}
}

616 
	$£t32
(
UNewTrõ2
 *
åõ
,

617 
UCh¨32
 
c
, 
UBoﬁ
 
f‹LSCP
, 
uöt32_t
 
vÆue
,

618 
UEº‹Code
 *
pEº‹Code
) {

619 
öt32_t
 
block
;

621 if(
åõ
==
NULL
 ||Årõ->
isCom∑˘ed
) {

622 *
pEº‹Code
=
U_NO_WRITE_PERMISSION
;

626 
block
=
	`gëD©aBlock
(
åõ
, 
c
, 
f‹LSCP
);

627 if(
block
<0) {

628 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

632 
åõ
->
d©a
[
block
+(
c
&
UTRIE2_DATA_MASK
)]=
vÆue
;

633 
	}
}

635 
U_CAPI
 
U_EXPORT2


636 
	$uåõ2_£t32
(
UTrõ2
 *
åõ
, 
UCh¨32
 
c
, 
uöt32_t
 
vÆue
, 
UEº‹Code
 *
pEº‹Code
) {

637 if(
	`U_FAILURE
(*
pEº‹Code
)) {

640 if((
uöt32_t
)
c
>0x10ffff) {

641 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

644 
	`£t32
(
åõ
->
√wTrõ
, 
c
, 
TRUE
, 
vÆue
, 
pEº‹Code
);

645 
	}
}

647 
U_CAPI
 
U_EXPORT2


648 
	$uåõ2_£t32F‹LódSuºog©eCodeUnô
(
UTrõ2
 *
åõ
,

649 
UCh¨32
 
c
, 
uöt32_t
 
vÆue
,

650 
UEº‹Code
 *
pEº‹Code
) {

651 if(
	`U_FAILURE
(*
pEº‹Code
)) {

654 if(!
	`U_IS_LEAD
(
c
)) {

655 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

658 
	`£t32
(
åõ
->
√wTrõ
, 
c
, 
FALSE
, 
vÆue
, 
pEº‹Code
);

659 
	}
}

662 
	$wrôeBlock
(
uöt32_t
 *
block
, uöt32_à
vÆue
) {

663 
uöt32_t
 *
limô
=
block
+
UTRIE2_DATA_BLOCK_LENGTH
;

664 
block
<
limô
) {

665 *
block
++=
vÆue
;

667 
	}
}

674 
	$fûlBlock
(
uöt32_t
 *
block
, 
UCh¨32
 
°¨t
, UCh¨32 
limô
,

675 
uöt32_t
 
vÆue
, uöt32_à
öôülVÆue
, 
UBoﬁ
 
ovîwrôe
) {

676 
uöt32_t
 *
pLimô
;

678 
pLimô
=
block
+
limô
;

679 
block
+=
°¨t
;

680 if(
ovîwrôe
) {

681 
block
<
pLimô
) {

682 *
block
++=
vÆue
;

685 
block
<
pLimô
) {

686 if(*
block
==
öôülVÆue
) {

687 *
block
=
vÆue
;

689 ++
block
;

692 
	}
}

694 
U_CAPI
 
U_EXPORT2


695 
	$uåõ2_£tR™ge32
(
UTrõ2
 *
åõ
,

696 
UCh¨32
 
°¨t
, UCh¨32 
íd
,

697 
uöt32_t
 
vÆue
, 
UBoﬁ
 
ovîwrôe
,

698 
UEº‹Code
 *
pEº‹Code
) {

704 
UNewTrõ2
 *
√wTrõ
;

705 
öt32_t
 
block
, 
ª°
, 
ª≥©Block
;

706 
UCh¨32
 
limô
;

708 if(
	`U_FAILURE
(*
pEº‹Code
)) {

711 if((
uöt32_t
)
°¨t
>0x10fff‡|| (uöt32_t)
íd
>0x10ffff || start>end) {

712 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

715 
√wTrõ
=
åõ
->newTrie;

716 if(
√wTrõ
==
NULL
 ||ÇewTrõ->
isCom∑˘ed
) {

717 *
pEº‹Code
=
U_NO_WRITE_PERMISSION
;

720 if(!
ovîwrôe
 && 
vÆue
==
√wTrõ
->
öôülVÆue
) {

724 
limô
=
íd
+1;

725 if(
°¨t
&
UTRIE2_DATA_MASK
) {

726 
UCh¨32
 
√xtSèπ
;

729 
block
=
	`gëD©aBlock
(
√wTrõ
, 
°¨t
, 
TRUE
);

730 if(
block
<0) {

731 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

735 
√xtSèπ
=(
°¨t
+
UTRIE2_DATA_BLOCK_LENGTH
)&~
UTRIE2_DATA_MASK
;

736 if(
√xtSèπ
<=
limô
) {

737 
	`fûlBlock
(
√wTrõ
->
d©a
+
block
, 
°¨t
&
UTRIE2_DATA_MASK
, 
UTRIE2_DATA_BLOCK_LENGTH
,

738 
vÆue
, 
√wTrõ
->
öôülVÆue
, 
ovîwrôe
);

739 
°¨t
=
√xtSèπ
;

741 
	`fûlBlock
(
√wTrõ
->
d©a
+
block
, 
°¨t
&
UTRIE2_DATA_MASK
, 
limô
&UTRIE2_DATA_MASK,

742 
vÆue
, 
√wTrõ
->
öôülVÆue
, 
ovîwrôe
);

748 
ª°
=
limô
&
UTRIE2_DATA_MASK
;

751 
limô
&=~
UTRIE2_DATA_MASK
;

754 if(
vÆue
==
√wTrõ
->
öôülVÆue
) {

755 
ª≥©Block
=
√wTrõ
->
d©aNuŒOff£t
;

757 
ª≥©Block
=-1;

760 
°¨t
<
limô
) {

761 
öt32_t
 
i2
;

762 
UBoﬁ
 
£tRïótBlock
=
FALSE
;

764 if(
vÆue
==
√wTrõ
->
öôülVÆue
 && 
	`isInNuŒBlock
“ewTrõ, 
°¨t
, 
TRUE
)) {

765 
°¨t
+=
UTRIE2_DATA_BLOCK_LENGTH
;

770 
i2
=
	`gëIndex2Block
(
√wTrõ
, 
°¨t
, 
TRUE
);

771 if(
i2
<0) {

772 *
pEº‹Code
=
U_INTERNAL_PROGRAM_ERROR
;

775 
i2
+=(
°¨t
>>
UTRIE2_SHIFT_2
)&
UTRIE2_INDEX_2_MASK
;

776 
block
=
√wTrõ
->
ödex2
[
i2
];

777 if(
	`isWrôabÀBlock
(
√wTrõ
, 
block
)) {

779 if(
ovîwrôe
 && 
block
>=
UNEWTRIE2_DATA_0800_OFFSET
) {

785 
£tRïótBlock
=
TRUE
;

788 
	`fûlBlock
(
√wTrõ
->
d©a
+
block
,

789 0, 
UTRIE2_DATA_BLOCK_LENGTH
,

790 
vÆue
, 
√wTrõ
->
öôülVÆue
, 
ovîwrôe
);

792 } if(
√wTrõ
->
d©a
[
block
]!=
vÆue
 && (
ovîwrôe
 || block=ÚewTrõ->
d©aNuŒOff£t
)) {

809 
£tRïótBlock
=
TRUE
;

811 if(
£tRïótBlock
) {

812 if(
ª≥©Block
>=0) {

813 
	`£tIndex2E¡ry
(
√wTrõ
, 
i2
, 
ª≥©Block
);

816 
ª≥©Block
=
	`gëD©aBlock
(
√wTrõ
, 
°¨t
, 
TRUE
);

817 if(
ª≥©Block
<0) {

818 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

821 
	`wrôeBlock
(
√wTrõ
->
d©a
+
ª≥©Block
, 
vÆue
);

825 
°¨t
+=
UTRIE2_DATA_BLOCK_LENGTH
;

828 if(
ª°
>0) {

830 
block
=
	`gëD©aBlock
(
√wTrõ
, 
°¨t
, 
TRUE
);

831 if(
block
<0) {

832 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

836 
	`fûlBlock
(
√wTrõ
->
d©a
+
block
, 0, 
ª°
, 
vÆue
,ÇewTrõ->
öôülVÆue
, 
ovîwrôe
);

840 
	}
}

844 
U_INLINE
 
UBoﬁ


845 
	$equÆ_öt32
(c⁄° 
öt32_t
 *
s
, c⁄° i¡32_à*
t
, i¡32_à
Àngth
) {

846 
Àngth
>0 && *
s
==*
t
) {

847 ++
s
;

848 ++
t
;

849 --
Àngth
;

851  (
UBoﬁ
)(
Àngth
==0);

852 
	}
}

854 
U_INLINE
 
UBoﬁ


855 
	$equÆ_uöt32
(c⁄° 
uöt32_t
 *
s
, c⁄° uöt32_à*
t
, 
öt32_t
 
Àngth
) {

856 
Àngth
>0 && *
s
==*
t
) {

857 ++
s
;

858 ++
t
;

859 --
Àngth
;

861  (
UBoﬁ
)(
Àngth
==0);

862 
	}
}

864 
öt32_t


865 
	$födSameIndex2Block
(c⁄° 
öt32_t
 *
idx
, i¡32_à
ödex2Lígth
, i¡32_à
ŸhîBlock
) {

866 
öt32_t
 
block
;

869 
ödex2Lígth
-=
UTRIE2_INDEX_2_BLOCK_LENGTH
;

871 
block
=0; block<=
ödex2Lígth
; ++block) {

872 if(
	`equÆ_öt32
(
idx
+
block
, idx+
ŸhîBlock
, 
UTRIE2_INDEX_2_BLOCK_LENGTH
)) {

873  
block
;

877 
	}
}

879 
öt32_t


880 
	$födSameD©aBlock
(c⁄° 
uöt32_t
 *
d©a
, 
öt32_t
 
d©aLígth
, i¡32_à
ŸhîBlock
, i¡32_à
blockLígth
) {

881 
öt32_t
 
block
;

884 
d©aLígth
-=
blockLígth
;

886 
block
=0; block<=
d©aLígth
; block+=
UTRIE2_DATA_GRANULARITY
) {

887 if(
	`equÆ_uöt32
(
d©a
+
block
, d©a+
ŸhîBlock
, 
blockLígth
)) {

888  
block
;

892 
	}
}

898 
UCh¨32


899 
	$födHighSèπ
(
UNewTrõ2
 *
åõ
, 
uöt32_t
 
highVÆue
) {

900 c⁄° 
uöt32_t
 *
d©a32
;

902 
uöt32_t
 
vÆue
, 
öôülVÆue
;

903 
UCh¨32
 
c
, 
¥ev
;

904 
öt32_t
 
i1
, 
i2
, 
j
, 
i2Block
, 
¥evI2Block
, 
ödex2NuŒOff£t
, 
block
, 
¥evBlock
, 
nuŒBlock
;

906 
d©a32
=
åõ
->
d©a
;

907 
öôülVÆue
=
åõ
->initialValue;

909 
ödex2NuŒOff£t
=
åõ
->index2NullOffset;

910 
nuŒBlock
=
åõ
->
d©aNuŒOff£t
;

913 if(
highVÆue
==
öôülVÆue
) {

914 
¥evI2Block
=
ödex2NuŒOff£t
;

915 
¥evBlock
=
nuŒBlock
;

917 
¥evI2Block
=-1;

918 
¥evBlock
=-1;

920 
¥ev
=0x110000;

923 
i1
=
UNEWTRIE2_INDEX_1_LENGTH
;

924 
c
=
¥ev
;

925 
c
>0) {

926 
i2Block
=
åõ
->
ödex1
[--
i1
];

927 if(
i2Block
==
¥evI2Block
) {

929 
c
-=
UTRIE2_CP_PER_INDEX_1_ENTRY
;

932 
¥evI2Block
=
i2Block
;

933 if(
i2Block
==
ödex2NuŒOff£t
) {

935 if(
highVÆue
!=
öôülVÆue
) {

936  
c
;

938 
c
-=
UTRIE2_CP_PER_INDEX_1_ENTRY
;

941 
i2
=
UTRIE2_INDEX_2_BLOCK_LENGTH
; i2>0;) {

942 
block
=
åõ
->
ödex2
[
i2Block
+ --
i2
];

943 if(
block
==
¥evBlock
) {

945 
c
-=
UTRIE2_DATA_BLOCK_LENGTH
;

948 
¥evBlock
=
block
;

949 if(
block
==
nuŒBlock
) {

951 if(
highVÆue
!=
öôülVÆue
) {

952  
c
;

954 
c
-=
UTRIE2_DATA_BLOCK_LENGTH
;

956 
j
=
UTRIE2_DATA_BLOCK_LENGTH
; j>0;) {

957 
vÆue
=
d©a32
[
block
+ --
j
];

958 if(
vÆue
!=
highVÆue
) {

959  
c
;

961 --
c
;

970 
	}
}

985 
	$com∑˘D©a
(
UNewTrõ2
 *
åõ
) {

986 
öt32_t
 
°¨t
, 
√wSèπ
, 
movedSèπ
;

987 
öt32_t
 
blockLígth
, 
ovîœp
;

988 
öt32_t
 
i
, 
m≠Index
, 
blockCou¡
;

991 
√wSèπ
=
UTRIE2_DATA_START_OFFSET
;

992 
°¨t
=0, 
i
=0; sèπ<
√wSèπ
; sèπ+=
UTRIE2_DATA_BLOCK_LENGTH
, ++i) {

993 
åõ
->
m≠
[
i
]=
°¨t
;

1000 
blockLígth
=64;

1001 
blockCou¡
=
blockLígth
>>
UTRIE2_SHIFT_2
;

1002 
°¨t
=
√wSèπ
; sèπ<
åõ
->
d©aLígth
;) {

1008 if(
°¨t
==
UNEWTRIE2_DATA_0800_OFFSET
) {

1009 
blockLígth
=
UTRIE2_DATA_BLOCK_LENGTH
;

1010 
blockCou¡
=1;

1014 if(
åõ
->
m≠
[
°¨t
>>
UTRIE2_SHIFT_2
]<=0) {

1016 
°¨t
+=
blockLígth
;

1023 if–(
movedSèπ
=
	`födSameD©aBlock
(
åõ
->
d©a
, 
√wSèπ
, 
°¨t
, 
blockLígth
))

1027 
i
=
blockCou¡
, 
m≠Index
=
°¨t
>>
UTRIE2_SHIFT_2
; i>0; --i) {

1028 
åõ
->
m≠
[
m≠Index
++]=
movedSèπ
;

1029 
movedSèπ
+=
UTRIE2_DATA_BLOCK_LENGTH
;

1033 
°¨t
+=
blockLígth
;

1041 
ovîœp
=
blockLígth
-
UTRIE2_DATA_GRANULARITY
;

1042 
ovîœp
>0 && !
	`equÆ_uöt32
(
åõ
->
d©a
+(
√wSèπ
-ovîœp),Årõ->d©a+
°¨t
, overlap);

1043 
ovîœp
-=
UTRIE2_DATA_GRANULARITY
) {}

1045 if(
ovîœp
>0 || 
√wSèπ
<
°¨t
) {

1047 
movedSèπ
=
√wSèπ
-
ovîœp
;

1048 
i
=
blockCou¡
, 
m≠Index
=
°¨t
>>
UTRIE2_SHIFT_2
; i>0; --i) {

1049 
åõ
->
m≠
[
m≠Index
++]=
movedSèπ
;

1050 
movedSèπ
+=
UTRIE2_DATA_BLOCK_LENGTH
;

1054 
°¨t
+=
ovîœp
;

1055 
i
=
blockLígth
-
ovîœp
; i>0; --i) {

1056 
åõ
->
d©a
[
√wSèπ
++]Òrõ->d©a[
°¨t
++];

1059 
i
=
blockCou¡
, 
m≠Index
=
°¨t
>>
UTRIE2_SHIFT_2
; i>0; --i) {

1060 
åõ
->
m≠
[
m≠Index
++]=
°¨t
;

1061 
°¨t
+=
UTRIE2_DATA_BLOCK_LENGTH
;

1063 
√wSèπ
=
°¨t
;

1068 
i
=0; i<
åõ
->
ödex2Lígth
; ++i) {

1069 if(
i
==
UNEWTRIE2_INDEX_GAP_OFFSET
) {

1071 
i
+=
UNEWTRIE2_INDEX_GAP_LENGTH
;

1073 
åõ
->
ödex2
[
i
]Òrõ->
m≠
[åõ->ödex2[i]>>
UTRIE2_SHIFT_2
];

1075 
åõ
->
d©aNuŒOff£t
Òrõ->
m≠
[åõ->d©aNuŒOff£t>>
UTRIE2_SHIFT_2
];

1078 (
√wSèπ
&(
UTRIE2_DATA_GRANULARITY
-1))!=0) {

1079 
åõ
->
d©a
[
√wSèπ
++]Òrõ->
öôülVÆue
;

1082 #ifde‡
UTRIE2_DEBUG


1084 
	`¥ötf
("compacting UTrie2: count of 32-bit data words %lu->%lu\n",

1085 ()
åõ
->
d©aLígth
, ()
√wSèπ
);

1088 
åõ
->
d©aLígth
=
√wSèπ
;

1089 
	}
}

1092 
	$com∑˘Index2
(
UNewTrõ2
 *
åõ
) {

1093 
öt32_t
 
i
, 
°¨t
, 
√wSèπ
, 
movedSèπ
, 
ovîœp
;

1096 
√wSèπ
=
UTRIE2_INDEX_2_BMP_LENGTH
;

1097 
°¨t
=0, 
i
=0; sèπ<
√wSèπ
; sèπ+=
UTRIE2_INDEX_2_BLOCK_LENGTH
, ++i) {

1098 
åõ
->
m≠
[
i
]=
°¨t
;

1102 
√wSèπ
+=
UTRIE2_UTF8_2B_INDEX_2_LENGTH
+((
åõ
->
highSèπ
-0x10000)>>
UTRIE2_SHIFT_1
);

1104 
°¨t
=
UNEWTRIE2_INDEX_2_NULL_OFFSET
; sèπ<
åõ
->
ödex2Lígth
;) {

1112 if–(
movedSèπ
=
	`födSameIndex2Block
(
åõ
->
ödex2
, 
√wSèπ
, 
°¨t
))

1116 
åõ
->
m≠
[
°¨t
>>
UTRIE2_SHIFT_1_2
]=
movedSèπ
;

1119 
°¨t
+=
UTRIE2_INDEX_2_BLOCK_LENGTH
;

1127 
ovîœp
=
UTRIE2_INDEX_2_BLOCK_LENGTH
-1;

1128 
ovîœp
>0 && !
	`equÆ_öt32
(
åõ
->
ödex2
+(
√wSèπ
-ovîœp),Årõ->ödex2+
°¨t
, overlap);

1129 --
ovîœp
) {}

1131 if(
ovîœp
>0 || 
√wSèπ
<
°¨t
) {

1133 
åõ
->
m≠
[
°¨t
>>
UTRIE2_SHIFT_1_2
]=
√wSèπ
-
ovîœp
;

1136 
°¨t
+=
ovîœp
;

1137 
i
=
UTRIE2_INDEX_2_BLOCK_LENGTH
-
ovîœp
; i>0; --i) {

1138 
åõ
->
ödex2
[
√wSèπ
++]Òrõ->ödex2[
°¨t
++];

1141 
åõ
->
m≠
[
°¨t
>>
UTRIE2_SHIFT_1_2
]=start;

1142 
°¨t
+=
UTRIE2_INDEX_2_BLOCK_LENGTH
;

1143 
√wSèπ
=
°¨t
;

1148 
i
=0; i<
UNEWTRIE2_INDEX_1_LENGTH
; ++i) {

1149 
åõ
->
ödex1
[
i
]Òrõ->
m≠
[åõ->ödex1[i]>>
UTRIE2_SHIFT_1_2
];

1151 
åõ
->
ödex2NuŒOff£t
Òrõ->
m≠
[åõ->ödex2NuŒOff£t>>
UTRIE2_SHIFT_1_2
];

1159 (
√wSèπ
&((
UTRIE2_DATA_GRANULARITY
-1)|1))!=0) {

1161 
åõ
->
ödex2
[
√wSèπ
++]=(
öt32_t
)0xffff<<
UTRIE2_INDEX_SHIFT
;

1164 #ifde‡
UTRIE2_DEBUG


1166 
	`¥ötf
("compacting UTrie2: count of 16-bit index-2 words %lu->%lu\n",

1167 ()
åõ
->
ödex2Lígth
, ()
√wSèπ
);

1170 
åõ
->
ödex2Lígth
=
√wSèπ
;

1171 
	}
}

1174 
	$com∑˘Trõ
(
UTrõ2
 *
åõ
, 
UEº‹Code
 *
pEº‹Code
) {

1175 
UNewTrõ2
 *
√wTrõ
;

1176 
UCh¨32
 
highSèπ
, 
suµHighSèπ
;

1177 
uöt32_t
 
highVÆue
;

1179 
√wTrõ
=
åõ
->newTrie;

1182 
highVÆue
=
	`uåõ2_gë32
(
åõ
, 0x10ffff);

1183 
highSèπ
=
	`födHighSèπ
(
√wTrõ
, 
highVÆue
);

1184 
highSèπ
=(highSèπ+(
UTRIE2_CP_PER_INDEX_1_ENTRY
-1))&~(UTRIE2_CP_PER_INDEX_1_ENTRY-1);

1185 if(
highSèπ
==0x110000) {

1186 
highVÆue
=
åõ
->
îr‹VÆue
;

1193 
åõ
->
highSèπ
=
√wTrõ
->highStart=highStart;

1195 #ifde‡
UTRIE2_DEBUG


1196 
	`¥ötf
("UTrie2: highStart U+%04lx highValue 0x%lx initialValue 0x%lx\n",

1197 ()
highSèπ
, ()
highVÆue
, ()
åõ
->
öôülVÆue
);

1200 if(
highSèπ
<0x110000) {

1202 
suµHighSèπ

highSèπ
<=0x10000 ? 0x10000 : highStart;

1203 
	`uåõ2_£tR™ge32
(
åõ
, 
suµHighSèπ
, 0x10ffff,Årõ->
öôülVÆue
, 
TRUE
, 
pEº‹Code
);

1204 if(
	`U_FAILURE
(*
pEº‹Code
)) {

1209 
	`com∑˘D©a
(
√wTrõ
);

1210 if(
highSèπ
>0x10000) {

1211 
	`com∑˘Index2
(
√wTrõ
);

1212 #ifde‡
UTRIE2_DEBUG


1214 
	`¥ötf
("UTrie2: highStart U+%04lx count of 16-bit index-2 words %lu->%lu\n",

1215 ()
highSèπ
, ()
åõ
->
√wTrõ
->
ödex2Lígth
, ()
UTRIE2_INDEX_1_OFFSET
);

1224 
√wTrõ
->
d©a
[√wTrõ->
d©aLígth
++]=
highVÆue
;

1225 (
√wTrõ
->
d©aLígth
&(
UTRIE2_DATA_GRANULARITY
-1))!=0) {

1226 
√wTrõ
->
d©a
[√wTrõ->
d©aLígth
++]=
åõ
->
öôülVÆue
;

1229 
√wTrõ
->
isCom∑˘ed
=
TRUE
;

1230 
	}
}

1240 
	#UTRIE2_MAX_INDEX_LENGTH
 0xffff

	)

1247 
	#UTRIE2_MAX_DATA_LENGTH
 (0xffff<<
UTRIE2_INDEX_SHIFT
)

	)

1250 
U_CAPI
 
U_EXPORT2


1251 
	$uåõ2_‰ìze
(
UTrõ2
 *
åõ
, 
UTrõ2VÆueBôs
 
vÆueBôs
, 
UEº‹Code
 *
pEº‹Code
) {

1252 
UNewTrõ2
 *
√wTrõ
;

1253 
UTrõ2Hódî
 *
hódî
;

1254 
uöt32_t
 *
p
;

1255 
uöt16_t
 *
de°16
;

1256 
öt32_t
 
i
, 
Àngth
;

1257 
öt32_t
 
ÆlIndexesLígth
;

1258 
öt32_t
 
d©aMove
;

1259 
UCh¨32
 
highSèπ
;

1262 if(
	`U_FAILURE
(*
pEº‹Code
)) {

1265 if–
åõ
==
NULL
 ||

1266 
vÆueBôs
<0 || 
UTRIE2_COUNT_VALUE_BITS
<=valueBits

1268 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

1271 
√wTrõ
=
åõ
->newTrie;

1272 if(
√wTrõ
==
NULL
) {

1274 
UTrõ2VÆueBôs
 
‰ozíVÆueBôs
=

1275 
åõ
->
d©a16
!=
NULL
 ? 
UTRIE2_16_VALUE_BITS
 : 
UTRIE2_32_VALUE_BITS
;

1276 if(
vÆueBôs
!=
‰ozíVÆueBôs
) {

1277 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

1283 if(!
√wTrõ
->
isCom∑˘ed
) {

1284 
	`com∑˘Trõ
(
åõ
, 
pEº‹Code
);

1285 if(
	`U_FAILURE
(*
pEº‹Code
)) {

1289 
highSèπ
=
åõ
->highStart;

1291 if(
highSèπ
<=0x10000) {

1292 
ÆlIndexesLígth
=
UTRIE2_INDEX_1_OFFSET
;

1294 
ÆlIndexesLígth
=
√wTrõ
->
ödex2Lígth
;

1296 if(
vÆueBôs
==
UTRIE2_16_VALUE_BITS
) {

1297 
d©aMove
=
ÆlIndexesLígth
;

1299 
d©aMove
=0;

1304 
ÆlIndexesLígth
>
UTRIE2_MAX_INDEX_LENGTH
 ||

1306 (
d©aMove
+
√wTrõ
->
d©aNuŒOff£t
)>0xffff ||

1308 (
d©aMove
+
UNEWTRIE2_DATA_0800_OFFSET
)>0xffff ||

1310 (
d©aMove
+
√wTrõ
->
d©aLígth
)>
UTRIE2_MAX_DATA_LENGTH


1312 *
pEº‹Code
=
U_INDEX_OUTOFBOUNDS_ERROR
;

1317 
Àngth
=(
UTrõ2Hódî
)+
ÆlIndexesLígth
*2;

1318 if(
vÆueBôs
==
UTRIE2_16_VALUE_BITS
) {

1319 
Àngth
+=
√wTrõ
->
d©aLígth
*2;

1321 
Àngth
+=
√wTrõ
->
d©aLígth
*4;

1324 
åõ
->
mem‹y
=
	`u¥v_mÆloc
(
Àngth
);

1325 if(
åõ
->
mem‹y
==
NULL
) {

1326 *
pEº‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

1329 
åõ
->
Àngth
=length;

1330 
åõ
->
isMem‹yOw√d
=
TRUE
;

1332 
åõ
->
ödexLígth
=
ÆlIndexesLígth
;

1333 
åõ
->
d©aLígth
=
√wTrõ
->dataLength;

1334 if(
highSèπ
<=0x10000) {

1335 
åõ
->
ödex2NuŒOff£t
=0xffff;

1337 
åõ
->
ödex2NuŒOff£t
=
UTRIE2_INDEX_2_OFFSET
+
√wTrõ
->index2NullOffset;

1339 
åõ
->
d©aNuŒOff£t
=(
uöt16_t
)(
d©aMove
+
√wTrõ
->dataNullOffset);

1340 
åõ
->
highVÆueIndex
=
d©aMove
+åõ->
d©aLígth
-
UTRIE2_DATA_GRANULARITY
;

1343 
hódî
=(
UTrõ2Hódî
 *)
åõ
->
mem‹y
;

1345 
hódî
->
sig«tuª
=
UTRIE2_SIG
;

1346 
hódî
->
›ti⁄s
=(
uöt16_t
)
vÆueBôs
;

1348 
hódî
->
ödexLígth
=(
uöt16_t
)
åõ
->indexLength;

1349 
hódî
->
shi·edD©aLígth
=(
uöt16_t
)(
åõ
->
d©aLígth
>>
UTRIE2_INDEX_SHIFT
);

1350 
hódî
->
ödex2NuŒOff£t
=
åõ
->index2NullOffset;

1351 
hódî
->
d©aNuŒOff£t
=
åõ
->dataNullOffset;

1352 
hódî
->
shi·edHighSèπ
=(
uöt16_t
)(
highSèπ
>>
UTRIE2_SHIFT_1
);

1355 
de°16
=(
uöt16_t
 *)(
hódî
+1);

1356 
åõ
->
ödex
=
de°16
;

1359 
p
=(
uöt32_t
 *)
√wTrõ
->
ödex2
;

1360 
i
=
UTRIE2_INDEX_2_BMP_LENGTH
; i>0; --i) {

1361 *
de°16
++=(
uöt16_t
)((
d©aMove
 + *
p
++)>>
UTRIE2_INDEX_SHIFT
);

1365 
i
=0; i<(0xc2-0xc0); ++i) {

1366 *
de°16
++=(
uöt16_t
)(
d©aMove
+
UTRIE2_BAD_UTF8_DATA_OFFSET
);

1368 ; 
i
<(0xe0-0xc0); ++i) {

1369 *
de°16
++=(
uöt16_t
)(
d©aMove
+
√wTrõ
->
ödex2
[
i
<<(6-
UTRIE2_SHIFT_2
)]);

1372 if(
highSèπ
>0x10000) {

1373 
öt32_t
 
ödex1Lígth
=(
highSèπ
-0x10000)>>
UTRIE2_SHIFT_1
;

1374 
öt32_t
 
ödex2Off£t
=
UTRIE2_INDEX_2_BMP_LENGTH
+
UTRIE2_UTF8_2B_INDEX_2_LENGTH
+
ödex1Lígth
;

1377 
p
=(
uöt32_t
 *)
√wTrõ
->
ödex1
+
UTRIE2_OMITTED_BMP_INDEX_1_LENGTH
;

1378 
i
=
ödex1Lígth
; i>0; --i) {

1379 *
de°16
++=(
uöt16_t
)(
UTRIE2_INDEX_2_OFFSET
 + *
p
++);

1386 
p
=(
uöt32_t
 *)
√wTrõ
->
ödex2
+
ödex2Off£t
;

1387 
i
=
√wTrõ
->
ödex2Lígth
-
ödex2Off£t
; i>0; --i) {

1388 *
de°16
++=(
uöt16_t
)((
d©aMove
 + *
p
++)>>
UTRIE2_INDEX_SHIFT
);

1393 
vÆueBôs
) {

1394 
UTRIE2_16_VALUE_BITS
:

1396 
åõ
->
d©a16
=
de°16
;

1397 
åõ
->
d©a32
=
NULL
;

1398 
p
=
√wTrõ
->
d©a
;

1399 
i
=
√wTrõ
->
d©aLígth
; i>0; --i) {

1400 *
de°16
++=(
uöt16_t
)*
p
++;

1403 
UTRIE2_32_VALUE_BITS
:

1405 
åõ
->
d©a16
=
NULL
;

1406 
åõ
->
d©a32
=(
uöt32_t
 *)
de°16
;

1407 
	`u¥v_mem˝y
(
de°16
, 
√wTrõ
->
d©a
,ÇewTrõ->
d©aLígth
*4);

1410 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

1415 
	`u¥v_‰ì
(
√wTrõ
->
d©a
);

1416 
	`u¥v_‰ì
(
√wTrõ
);

1417 
åõ
->
√wTrõ
=
NULL
;

1418 
	}
}

1420 
U_CAPI
 
UBoﬁ
 
U_EXPORT2


1421 
	$uåõ2_isFrozí
(c⁄° 
UTrõ2
 *
åõ
) {

1422  (
UBoﬁ
)(
åõ
->
√wTrõ
==
NULL
);

1423 
	}
}

1425 
U_CAPI
 
öt32_t
 
U_EXPORT2


1426 
	$uåõ2_£rülize
(
UTrõ2
 *
åõ
,

1427 *
d©a
, 
öt32_t
 
ˇ∑côy
,

1428 
UEº‹Code
 *
pEº‹Code
) {

1430 if(
	`U_FAILURE
(*
pEº‹Code
)) {

1434 if–
åõ
==
NULL
 ||Årõ->
mem‹y
==NULL ||Årõ->
√wTrõ
!=NULL ||

1435 
ˇ∑côy
<0 || (ˇ∑côy>0 && (
d©a
==
NULL
 || (
	`U_POINTER_MASK_LSB
(data, 3)!=0)))

1437 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

1441 if(
ˇ∑côy
>=
åõ
->
Àngth
) {

1442 
	`u¥v_mem˝y
(
d©a
, 
åõ
->
mem‹y
,Årõ->
Àngth
);

1444 *
pEº‹Code
=
U_BUFFER_OVERFLOW_ERROR
;

1446  
åõ
->
Àngth
;

1447 
	}
}

1454 
U_CAPI
 
öt32_t
 
U_EXPORT2


1455 
	$uåõ2_sw≠AnyVîsi⁄
(c⁄° 
UD©aSw≠≥r
 *
ds
,

1456 c⁄° *
öD©a
, 
öt32_t
 
Àngth
, *
outD©a
,

1457 
UEº‹Code
 *
pEº‹Code
) {

1458 if(
	`U_SUCCESS
(*
pEº‹Code
)) {

1459 
	`uåõ2_gëVîsi⁄
(
öD©a
, 
Àngth
, 
TRUE
)) {

1461  
	`uåõ_sw≠
(
ds
, 
öD©a
, 
Àngth
, 
outD©a
, 
pEº‹Code
);

1463  
	`uåõ2_sw≠
(
ds
, 
öD©a
, 
Àngth
, 
outD©a
, 
pEº‹Code
);

1465 *
pEº‹Code
=
U_INVALID_FORMAT_ERROR
;

1470 
	}
}

	@utrie2_impl.h

20 #i‚de‡
__UTRIE2_IMPL_H__


21 
	#__UTRIE2_IMPL_H__


	)

23 
	~"uåõ2.h
"

36 
	#UTRIE_SIG
 0x54726965

	)

37 
	#UTRIE_OE_SIG
 0x65697254

	)

39 
	#UTRIE2_SIG
 0x54726932

	)

40 
	#UTRIE2_OE_SIG
 0x32697254

	)

50 
	sUTrõ2Hódî
 {

52 
uöt32_t
 
	msig«tuª
;

59 
uöt16_t
 
	m›ti⁄s
;

62 
uöt16_t
 
	mödexLígth
;

65 
uöt16_t
 
	mshi·edD©aLígth
;

68 
uöt16_t
 
	mödex2NuŒOff£t
, 
	md©aNuŒOff£t
;

74 
uöt16_t
 
	mshi·edHighSèπ
;

75 } 
	tUTrõ2Hódî
;

83 
	mUTRIE2_OPTIONS_VALUE_BITS_MASK
=0xf

100 
	mUNEWTRIE2_INDEX_GAP_OFFSET
=
UTRIE2_INDEX_2_BMP_LENGTH
,

101 
	mUNEWTRIE2_INDEX_GAP_LENGTH
=

102 ((
UTRIE2_UTF8_2B_INDEX_2_LENGTH
+
UTRIE2_MAX_INDEX_1_LENGTH
)+
UTRIE2_INDEX_2_MASK
)&

103 ~
UTRIE2_INDEX_2_MASK
,

112 
	mUNEWTRIE2_MAX_INDEX_2_LENGTH
=

113 (0x110000>>
UTRIE2_SHIFT_2
)+

114 
UTRIE2_LSCP_INDEX_2_LENGTH
+

115 
UNEWTRIE2_INDEX_GAP_LENGTH
+

116 
UTRIE2_INDEX_2_BLOCK_LENGTH
,

118 
	mUNEWTRIE2_INDEX_1_LENGTH
=0x110000>>
UTRIE2_SHIFT_1


126 
	#UNEWTRIE2_MAX_DATA_LENGTH
 (0x110000+0x40+0x40+0x400)

	)

142 
	sUNewTrõ2
 {

143 
öt32_t
 
	mödex1
[
UNEWTRIE2_INDEX_1_LENGTH
];

144 
öt32_t
 
	mödex2
[
UNEWTRIE2_MAX_INDEX_2_LENGTH
];

145 
uöt32_t
 *
	md©a
;

147 
uöt32_t
 
	möôülVÆue
, 
	mîr‹VÆue
;

148 
öt32_t
 
	mödex2Lígth
, 
	md©aC≠acôy
, 
	md©aLígth
;

149 
öt32_t
 
	mfú°FªeBlock
;

150 
öt32_t
 
	mödex2NuŒOff£t
, 
	md©aNuŒOff£t
;

151 
UCh¨32
 
	mhighSèπ
;

152 
UBoﬁ
 
	misCom∑˘ed
;

169 
öt32_t
 
	mm≠
[
UNEWTRIE2_MAX_DATA_LENGTH
>>
UTRIE2_SHIFT_2
];

	@uts46.cpp

15 
	~"unicode/uty≥s.h
"

17 #i‡!
UCONFIG_NO_IDNA


19 
	~"unicode/id«.h
"

20 
	~"unicode/n‹mÆizî2.h
"

21 
	~"unicode/u°rög.h
"

22 
	~"cmem‹y.h
"

23 
	~"c°rög.h
"

24 
	~"punycode.h
"

25 
	~"u°r_imp.h
"

27 
	#LENGTHOF
(
¨øy
Ë(
öt32_t
)(◊ºay)/(◊ºay)[0]))

	)

37 
U_NAMESPACE_BEGIN


40 c⁄° 
uöt32_t
 
	g£vîeEº‹s
=

41 
UIDNA_ERROR_LEADING_COMBINING_MARK
|

42 
UIDNA_ERROR_DISALLOWED
|

43 
UIDNA_ERROR_PUNYCODE
|

44 
UIDNA_ERROR_LABEL_HAS_DOT
|

45 
UIDNA_ERROR_INVALID_ACE_LABEL
;

47 
ölöe
 
UBoﬁ


48 
	$isASCIISåög
(c⁄° 
UnicodeSåög
 &
de°
) {

49 c⁄° 
UCh¨
 *
s
=
de°
.
	`gëBuf„r
();

50 c⁄° 
UCh¨
 *
limô
=
s
+
de°
.
	`Àngth
();

51 
s
<
limô
) {

52 if(*
s
++>0x7f) {

53  
FALSE
;

56  
TRUE
;

57 
	}
}

59 
UBoﬁ


60 
isASCIIOkBiDi
(c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
);

62 
UBoﬁ


63 
isASCIIOkBiDi
(c⁄° *
s
, 
öt32_t
 
Àngth
);

68 
	gIDNA
::
	$œbñToASCII_UTF8
(c⁄° 
SåögPõ˚
 &
œbñ
, 
ByãSök
 &
de°
,

69 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const {

70 if(
	`U_SUCCESS
(
îr‹Code
)) {

71 
UnicodeSåög
 
de°Såög
;

72 
	`œbñToASCII
(
UnicodeSåög
::
	`‰omUTF8
(
œbñ
), 
de°Såög
,

73 
öfo
, 
îr‹Code
).
	`toUTF8
(
de°
);

75 
	}
}

78 
	gIDNA
::
	$œbñToUnicodeUTF8
(c⁄° 
SåögPõ˚
 &
œbñ
, 
ByãSök
 &
de°
,

79 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const {

80 if(
	`U_SUCCESS
(
îr‹Code
)) {

81 
UnicodeSåög
 
de°Såög
;

82 
	`œbñToUnicode
(
UnicodeSåög
::
	`‰omUTF8
(
œbñ
), 
de°Såög
,

83 
öfo
, 
îr‹Code
).
	`toUTF8
(
de°
);

85 
	}
}

88 
	gIDNA
::
	$«meToASCII_UTF8
(c⁄° 
SåögPõ˚
 &
«me
, 
ByãSök
 &
de°
,

89 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const {

90 if(
	`U_SUCCESS
(
îr‹Code
)) {

91 
UnicodeSåög
 
de°Såög
;

92 
	`«meToASCII
(
UnicodeSåög
::
	`‰omUTF8
(
«me
), 
de°Såög
,

93 
öfo
, 
îr‹Code
).
	`toUTF8
(
de°
);

95 
	}
}

98 
	gIDNA
::
	$«meToUnicodeUTF8
(c⁄° 
SåögPõ˚
 &
«me
, 
ByãSök
 &
de°
,

99 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const {

100 if(
	`U_SUCCESS
(
îr‹Code
)) {

101 
UnicodeSåög
 
de°Såög
;

102 
	`«meToUnicode
(
UnicodeSåög
::
	`‰omUTF8
(
«me
), 
de°Såög
,

103 
öfo
, 
îr‹Code
).
	`toUTF8
(
de°
);

105 
	}
}

107 
	$UOBJECT_DEFINE_NO_RTTI_IMPLEMENTATION
(
IDNA
)

111 ˛as†
	cUTS46
 : 
public
 
IDNA
 {

112 
public
:

113 
	`UTS46
(
uöt32_t
 
›ti⁄s
, 
UEº‹Code
 &
îr‹Code
);

114 
vútuÆ
 ~
	`UTS46
();

116 
vútuÆ
 
UnicodeSåög
 &

117 
	$œbñToASCII
(c⁄° 
UnicodeSåög
 &
œbñ
, UnicodeSåög &
de°
,

118 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const;

120 
vútuÆ
 
UnicodeSåög
 &

121 
	$œbñToUnicode
(c⁄° 
UnicodeSåög
 &
œbñ
, UnicodeSåög &
de°
,

122 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const;

124 
vútuÆ
 
UnicodeSåög
 &

125 
	$«meToASCII
(c⁄° 
UnicodeSåög
 &
«me
, UnicodeSåög &
de°
,

126 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const;

128 
vútuÆ
 
UnicodeSåög
 &

129 
	$«meToUnicode
(c⁄° 
UnicodeSåög
 &
«me
, UnicodeSåög &
de°
,

130 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const;

132 
vútuÆ
 

133 
	$œbñToASCII_UTF8
(c⁄° 
SåögPõ˚
 &
œbñ
, 
ByãSök
 &
de°
,

134 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const;

136 
vútuÆ
 

137 
	$œbñToUnicodeUTF8
(c⁄° 
SåögPõ˚
 &
œbñ
, 
ByãSök
 &
de°
,

138 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const;

140 
vútuÆ
 

141 
	$«meToASCII_UTF8
(c⁄° 
SåögPõ˚
 &
«me
, 
ByãSök
 &
de°
,

142 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const;

144 
vútuÆ
 

145 
	$«meToUnicodeUTF8
(c⁄° 
SåögPõ˚
 &
«me
, 
ByãSök
 &
de°
,

146 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const;

148 
¥iv©e
:

149 
UnicodeSåög
 &

150 
	$¥o˚ss
(c⁄° 
UnicodeSåög
 &
§c
,

151 
UBoﬁ
 
isLabñ
, UBoﬁ 
toASCII
,

152 
UnicodeSåög
 &
de°
,

153 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const;

156 
	$¥o˚ssUTF8
(c⁄° 
SåögPõ˚
 &
§c
,

157 
UBoﬁ
 
isLabñ
, UBoﬁ 
toASCII
,

158 
ByãSök
 &
de°
,

159 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const;

161 
UnicodeSåög
 &

162 
	$¥o˚ssUnicode
(c⁄° 
UnicodeSåög
 &
§c
,

163 
öt32_t
 
œbñSèπ
, i¡32_à
m≠pögSèπ
,

164 
UBoﬁ
 
isLabñ
, UBoﬁ 
toASCII
,

165 
UnicodeSåög
 &
de°
,

166 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const;

169 
öt32_t


170 
	$m≠DevCh¨s
(
UnicodeSåög
 &
de°
, 
öt32_t
 
œbñSèπ
, i¡32_à
m≠pögSèπ
,

171 
UEº‹Code
 &
îr‹Code
) const;

174 
öt32_t


175 
	$¥o˚ssLabñ
(
UnicodeSåög
 &
de°
,

176 
öt32_t
 
œbñSèπ
, i¡32_à
œbñLígth
,

177 
UBoﬁ
 
toASCII
,

178 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const;

179 
öt32_t


180 
	$m¨kBadACELabñ
(
UnicodeSåög
 &
de°
,

181 
öt32_t
 
œbñSèπ
, i¡32_à
œbñLígth
,

182 
UBoﬁ
 
toASCII
, 
IDNAInfo
 &
öfo
) const;

185 
	$checkLabñBiDi
(c⁄° 
UCh¨
 *
œbñ
, 
öt32_t
 
œbñLígth
, 
IDNAInfo
 &
öfo
) const;

187 
UBoﬁ


188 
	$isLabñOkC⁄ãxtJ
(c⁄° 
UCh¨
 *
œbñ
, 
öt32_t
 
œbñLígth
) const;

190 c⁄° 
N‹mÆizî2
 &
uts46N‹m2
;

191 
uöt32_t
 
›ti⁄s
;

194 
IDNA
 *

195 
IDNA
::
	$¸óãUTS46In°™˚
(
uöt32_t
 
›ti⁄s
, 
UEº‹Code
 &
îr‹Code
) {

196 if(
	`U_SUCCESS
(
îr‹Code
)) {

197 
IDNA
 *
id«
=
√w
 
	`UTS46
(
›ti⁄s
, 
îr‹Code
);

198 if(
id«
==
NULL
) {

199 
îr‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

200 } if(
	`U_FAILURE
(
îr‹Code
)) {

201 
dñëe
 
id«
;

202 
id«
=
NULL
;

204  
id«
;

206  
NULL
;

208 
	}
}

212 
	gUTS46
::
	$UTS46
(
uöt32_t
 
›t
, 
UEº‹Code
 &
îr‹Code
)

213 : 
	`uts46N‹m2
(*
N‹mÆizî2
::
	`gëIn°™˚
(
NULL
, "uts46", 
UNORM2_COMPOSE
, 
îr‹Code
)),

214 
	$›ti⁄s
(
›t
Ë{
	}
}

216 
	gUTS46
::~
	$UTS46
(Ë{
	}
}

218 
UnicodeSåög
 &

219 
UTS46
::
	$œbñToASCII
(c⁄° 
UnicodeSåög
 &
œbñ
, UnicodeSåög &
de°
,

220 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const {

221  
	`¥o˚ss
(
œbñ
, 
TRUE
, TRUE, 
de°
, 
öfo
, 
îr‹Code
);

222 
	}
}

224 
	gUnicodeSåög
 &

225 
	gUTS46
::
	$œbñToUnicode
(c⁄° 
UnicodeSåög
 &
œbñ
, UnicodeSåög &
de°
,

226 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const {

227  
	`¥o˚ss
(
œbñ
, 
TRUE
, 
FALSE
, 
de°
, 
öfo
, 
îr‹Code
);

228 
	}
}

230 
	gUnicodeSåög
 &

231 
	gUTS46
::
	$«meToASCII
(c⁄° 
UnicodeSåög
 &
«me
, UnicodeSåög &
de°
,

232 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const {

233 
	`¥o˚ss
(
«me
, 
FALSE
, 
TRUE
, 
de°
, 
öfo
, 
îr‹Code
);

234 if–
de°
.
	`Àngth
()>=254 && (
öfo
.
îr‹s
&
UIDNA_ERROR_DOMAIN_NAME_TOO_LONG
)==0 &&

235 
	`isASCIISåög
(
de°
) &&

236 (
de°
.
	`Àngth
()>254 || dest[253]!=0x2e)

238 
öfo
.
îr‹s
|=
UIDNA_ERROR_DOMAIN_NAME_TOO_LONG
;

240  
de°
;

241 
	}
}

243 
	gUnicodeSåög
 &

244 
	gUTS46
::
	$«meToUnicode
(c⁄° 
UnicodeSåög
 &
«me
, UnicodeSåög &
de°
,

245 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const {

246  
	`¥o˚ss
(
«me
, 
FALSE
, FALSE, 
de°
, 
öfo
, 
îr‹Code
);

247 
	}
}

250 
	gUTS46
::
	$œbñToASCII_UTF8
(c⁄° 
SåögPõ˚
 &
œbñ
, 
ByãSök
 &
de°
,

251 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const {

252 
	`¥o˚ssUTF8
(
œbñ
, 
TRUE
, TRUE, 
de°
, 
öfo
, 
îr‹Code
);

253 
	}
}

256 
	gUTS46
::
	$œbñToUnicodeUTF8
(c⁄° 
SåögPõ˚
 &
œbñ
, 
ByãSök
 &
de°
,

257 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const {

258 
	`¥o˚ssUTF8
(
œbñ
, 
TRUE
, 
FALSE
, 
de°
, 
öfo
, 
îr‹Code
);

259 
	}
}

262 
	gUTS46
::
	$«meToASCII_UTF8
(c⁄° 
SåögPõ˚
 &
«me
, 
ByãSök
 &
de°
,

263 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const {

264 
	`¥o˚ssUTF8
(
«me
, 
FALSE
, 
TRUE
, 
de°
, 
öfo
, 
îr‹Code
);

265 
	}
}

268 
	gUTS46
::
	$«meToUnicodeUTF8
(c⁄° 
SåögPõ˚
 &
«me
, 
ByãSök
 &
de°
,

269 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const {

270 
	`¥o˚ssUTF8
(
«me
, 
FALSE
, FALSE, 
de°
, 
öfo
, 
îr‹Code
);

271 
	}
}

280 c⁄° 
öt8_t
 
	gasciiD©a
[128]={

295 
	gUnicodeSåög
 &

296 
	gUTS46
::
	$¥o˚ss
(c⁄° 
UnicodeSåög
 &
§c
,

297 
UBoﬁ
 
isLabñ
, UBoﬁ 
toASCII
,

298 
UnicodeSåög
 &
de°
,

299 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const {

303 if(
	`U_FAILURE
(
îr‹Code
)) {

304 
de°
.
	`£tToBogus
();

305  
de°
;

307 c⁄° 
UCh¨
 *
§cAºay
=
§c
.
	`gëBuf„r
();

308 if(&
de°
==&
§c
 || 
§cAºay
==
NULL
) {

309 
îr‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

310 
de°
.
	`£tToBogus
();

311  
de°
;

314 
de°
.
	`ªmove
();

315 
öfo
.
	`ª£t
();

316 
öt32_t
 
§cLígth
=
§c
.
	`Àngth
();

317 if(
§cLígth
==0) {

318 if(
toASCII
) {

319 
öfo
.
îr‹s
|=
UIDNA_ERROR_EMPTY_LABEL
;

321  
de°
;

323 
UCh¨
 *
de°Aºay
=
de°
.
	`gëBuf„r
(
§cLígth
);

324 if(
de°Aºay
==
NULL
) {

325 
îr‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

326  
de°
;

329 
UBoﬁ
 
dißŒowN⁄LDHDŸ
=(
›ti⁄s
&
UIDNA_USE_STD3_RULES
)!=0;

330 
öt32_t
 
œbñSèπ
=0;

331 
öt32_t
 
i
;

332 
i
=0;; ++i) {

333 if(
i
==
§cLígth
) {

334 if(
toASCII
) {

335 if((
i
-
œbñSèπ
)>63) {

336 
öfo
.
œbñEº‹s
|=
UIDNA_ERROR_LABEL_TOO_LONG
;

339 if(!
isLabñ
 && 
i
>=254 && (i>254 || 
œbñSèπ
<i)) {

340 
öfo
.
îr‹s
|=
UIDNA_ERROR_DOMAIN_NAME_TOO_LONG
;

343 
öfo
.
îr‹s
|=öfo.
œbñEº‹s
;

344 
de°
.
	`ªÀa£Buf„r
(
i
);

345  
de°
;

347 
UCh¨
 
c
=
§cAºay
[
i
];

348 if(
c
>0x7f) {

351 
cD©a
=
asciiD©a
[
c
];

352 if(
cD©a
>0) {

353 
de°Aºay
[
i
]=
c
+0x20;

354 } if(
cD©a
<0 && 
dißŒowN⁄LDHDŸ
) {

357 
de°Aºay
[
i
]=
c
;

358 if(
c
==0x2d) {

359 if(
i
==(
œbñSèπ
+3Ë&& 
§cAºay
[i-1]==0x2d) {

361 ++
i
;

364 if(
i
==
œbñSèπ
) {

366 
öfo
.
œbñEº‹s
|=
UIDNA_ERROR_LEADING_HYPHEN
;

368 if((
i
+1)==
§cLígth
 || 
§cAºay
[i+1]==0x2e) {

370 
öfo
.
œbñEº‹s
|=
UIDNA_ERROR_TRAILING_HYPHEN
;

372 } if(
c
==0x2e) {

373 if(
isLabñ
) {

375 ++
i
;

378 if(
toASCII
) {

380 if(
i
==
œbñSèπ
 && i<(
§cLígth
-1)) {

381 
öfo
.
œbñEº‹s
|=
UIDNA_ERROR_EMPTY_LABEL
;

382 } if((
i
-
œbñSèπ
)>63) {

383 
öfo
.
œbñEº‹s
|=
UIDNA_ERROR_LABEL_TOO_LONG
;

386 
öfo
.
îr‹s
|=öfo.
œbñEº‹s
;

387 
öfo
.
œbñEº‹s
=0;

388 
œbñSèπ
=
i
+1;

392 
öfo
.
îr‹s
|=öfo.
œbñEº‹s
;

393 
de°
.
	`ªÀa£Buf„r
(
i
);

394 
	`¥o˚ssUnicode
(
§c
, 
œbñSèπ
, 
i
, 
isLabñ
, 
toASCII
, 
de°
, 
öfo
, 
îr‹Code
);

395 if–
öfo
.
isBiDi
 && 
	`U_SUCCESS
(
îr‹Code
Ë&& (öfo.
îr‹s
&
£vîeEº‹s
)==0 &&

396 (!
öfo
.
isOkBiDi
 || (
œbñSèπ
>0 && !
	`isASCIIOkBiDi
(
de°
.
	`gëBuf„r
(),ÜabelStart)))

398 
öfo
.
îr‹s
|=
UIDNA_ERROR_BIDI
;

400  
de°
;

401 
	}
}

404 
	gUTS46
::
	$¥o˚ssUTF8
(c⁄° 
SåögPõ˚
 &
§c
,

405 
UBoﬁ
 
isLabñ
, UBoﬁ 
toASCII
,

406 
ByãSök
 &
de°
,

407 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const {

408 if(
	`U_FAILURE
(
îr‹Code
)) {

411 c⁄° *
§cAºay
=
§c
.
	`d©a
();

412 
öt32_t
 
§cLígth
=
§c
.
	`Àngth
();

413 if(
§cAºay
==
NULL
 && 
§cLígth
!=0) {

414 
îr‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

418 
öfo
.
	`ª£t
();

419 if(
§cLígth
==0) {

420 if(
toASCII
) {

421 
öfo
.
îr‹s
|=
UIDNA_ERROR_EMPTY_LABEL
;

423 
de°
.
	`Flush
();

426 
UnicodeSåög
 
de°Såög
;

427 
öt32_t
 
œbñSèπ
=0;

428 if(
§cLígth
<=256) {

430 
°ackAºay
[256];

431 
öt32_t
 
de°C≠acôy
;

432 *
de°Aºay
=
de°
.
	`GëAµídBuf„r
(
§cLígth
, srcLength+20,

433 
°ackAºay
, 
	`LENGTHOF
(°ackAºay), &
de°C≠acôy
);

434 
UBoﬁ
 
dißŒowN⁄LDHDŸ
=(
›ti⁄s
&
UIDNA_USE_STD3_RULES
)!=0;

435 
öt32_t
 
i
;

436 
i
=0;; ++i) {

437 if(
i
==
§cLígth
) {

438 if(
toASCII
) {

439 if((
i
-
œbñSèπ
)>63) {

440 
öfo
.
œbñEº‹s
|=
UIDNA_ERROR_LABEL_TOO_LONG
;

443 if(!
isLabñ
 && 
i
>=254 && (i>254 || 
œbñSèπ
<i)) {

444 
öfo
.
îr‹s
|=
UIDNA_ERROR_DOMAIN_NAME_TOO_LONG
;

447 
öfo
.
îr‹s
|=öfo.
œbñEº‹s
;

448 
de°
.
	`Aµíd
(
de°Aºay
, 
i
);

449 
de°
.
	`Flush
();

452 
c
=
§cAºay
[
i
];

453 if((
öt8_t
)
c
<0) {

456 
cD©a
=
asciiD©a
[()
c
];

457 if(
cD©a
>0) {

458 
de°Aºay
[
i
]=
c
+0x20;

459 } if(
cD©a
<0 && 
dißŒowN⁄LDHDŸ
) {

462 
de°Aºay
[
i
]=
c
;

463 if(
c
==0x2d) {

464 if(
i
==(
œbñSèπ
+3Ë&& 
§cAºay
[i-1]==0x2d) {

468 if(
i
==
œbñSèπ
) {

470 
öfo
.
œbñEº‹s
|=
UIDNA_ERROR_LEADING_HYPHEN
;

472 if((
i
+1)==
§cLígth
 || 
§cAºay
[i+1]==0x2e) {

474 
öfo
.
œbñEº‹s
|=
UIDNA_ERROR_TRAILING_HYPHEN
;

476 } if(
c
==0x2e) {

477 if(
isLabñ
) {

480 if(
toASCII
) {

482 if(
i
==
œbñSèπ
 && i<(
§cLígth
-1)) {

483 
öfo
.
œbñEº‹s
|=
UIDNA_ERROR_EMPTY_LABEL
;

484 } if((
i
-
œbñSèπ
)>63) {

485 
öfo
.
œbñEº‹s
|=
UIDNA_ERROR_LABEL_TOO_LONG
;

488 
öfo
.
îr‹s
|=öfo.
œbñEº‹s
;

489 
öfo
.
œbñEº‹s
=0;

490 
œbñSèπ
=
i
+1;

494 
öfo
.
îr‹s
|=öfo.
œbñEº‹s
;

496 
öt32_t
 
m≠pögSèπ
=
i
-
œbñSèπ
;

497 
de°Såög
=
UnicodeSåög
::
	`‰omUTF8
(
	`SåögPõ˚
(
de°Aºay
+
œbñSèπ
, 
m≠pögSèπ
));

499 
de°
.
	`Aµíd
(
de°Aºay
, 
œbñSèπ
);

500 
	`¥o˚ssUnicode
(
UnicodeSåög
::
	`‰omUTF8
(
	`SåögPõ˚
(
§c
, 
œbñSèπ
)), 0, 
m≠pögSèπ
,

501 
isLabñ
, 
toASCII
,

502 
de°Såög
, 
öfo
, 
îr‹Code
);

505 
	`¥o˚ssUnicode
(
UnicodeSåög
::
	`‰omUTF8
(
§c
), 0, 0,

506 
isLabñ
, 
toASCII
,

507 
de°Såög
, 
öfo
, 
îr‹Code
);

509 
de°Såög
.
	`toUTF8
(
de°
);

510 if(
toASCII
 && !
isLabñ
) {

513 
öt32_t
 
Àngth
=
œbñSèπ
+
de°Såög
.
	`Àngth
();

514 if–
Àngth
>=254 && 
	`isASCIISåög
(
de°Såög
) &&

515 (
Àngth
>254 ||

516 (
œbñSèπ
<254 && 
de°Såög
[253-labelStart]!=0x2e))

518 
öfo
.
îr‹s
|=
UIDNA_ERROR_DOMAIN_NAME_TOO_LONG
;

521 if–
öfo
.
isBiDi
 && 
	`U_SUCCESS
(
îr‹Code
Ë&& (öfo.
îr‹s
&
£vîeEº‹s
)==0 &&

522 (!
öfo
.
isOkBiDi
 || (
œbñSèπ
>0 && !
	`isASCIIOkBiDi
(
§cAºay
,ÜabelStart)))

524 
öfo
.
îr‹s
|=
UIDNA_ERROR_BIDI
;

526 
	}
}

528 
	gUnicodeSåög
 &

529 
	gUTS46
::
	$¥o˚ssUnicode
(c⁄° 
UnicodeSåög
 &
§c
,

530 
öt32_t
 
œbñSèπ
, i¡32_à
m≠pögSèπ
,

531 
UBoﬁ
 
isLabñ
, UBoﬁ 
toASCII
,

532 
UnicodeSåög
 &
de°
,

533 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const {

534 if(
m≠pögSèπ
==0) {

535 
uts46N‹m2
.
	`n‹mÆize
(
§c
, 
de°
, 
îr‹Code
);

537 
uts46N‹m2
.
	`n‹mÆizeSec⁄dAndAµíd
(
de°
, 
§c
.
	`ãmpSubSåög
(
m≠pögSèπ
), 
îr‹Code
);

539 if(
	`U_FAILURE
(
îr‹Code
)) {

540  
de°
;

542 
UBoﬁ
 
doM≠DevCh¨s
=

543 
toASCII
 ? (
›ti⁄s
&
UIDNA_NONTRANSITIONAL_TO_ASCII
)==0 :

544 (
›ti⁄s
&
UIDNA_NONTRANSITIONAL_TO_UNICODE
)==0;

545 c⁄° 
UCh¨
 *
de°Aºay
=
de°
.
	`gëBuf„r
();

546 
öt32_t
 
de°Lígth
=
de°
.
	`Àngth
();

547 
öt32_t
 
œbñLimô
=
œbñSèπ
;

548 
œbñLimô
<
de°Lígth
) {

549 
UCh¨
 
c
=
de°Aºay
[
œbñLimô
];

550 if(
c
==0x2ê&& !
isLabñ
) {

551 
öt32_t
 
œbñLígth
=
œbñLimô
-
œbñSèπ
;

552 
öt32_t
 
√wLígth
=
	`¥o˚ssLabñ
(
de°
, 
œbñSèπ
, 
œbñLígth
,

553 
toASCII
, 
öfo
, 
îr‹Code
);

554 
öfo
.
îr‹s
|=öfo.
œbñEº‹s
;

555 
öfo
.
œbñEº‹s
=0;

556 if(
	`U_FAILURE
(
îr‹Code
)) {

557  
de°
;

559 
de°Aºay
=
de°
.
	`gëBuf„r
();

560 
de°Lígth
+=
√wLígth
-
œbñLígth
;

561 
œbñLimô
=
œbñSèπ
+=
√wLígth
+1;

562 } if(0xdf<=
c
 && c<=0x200d && (c==0xdf || c==0x3c2 || c>=0x200c)) {

563 
öfo
.
isTønsDiff
=
TRUE
;

564 if(
doM≠DevCh¨s
) {

565 
de°Lígth
=
	`m≠DevCh¨s
(
de°
, 
œbñSèπ
, 
œbñLimô
, 
îr‹Code
);

566 if(
	`U_FAILURE
(
îr‹Code
)) {

567  
de°
;

569 
de°Aºay
=
de°
.
	`gëBuf„r
();

572 
doM≠DevCh¨s
=
FALSE
;

574 ++
œbñLimô
;

577 ++
œbñLimô
;

583 if(0==
œbñSèπ
 ||ÜabñSèπ<
œbñLimô
) {

584 
	`¥o˚ssLabñ
(
de°
, 
œbñSèπ
, 
œbñLimô
-labelStart,

585 
toASCII
, 
öfo
, 
îr‹Code
);

586 
öfo
.
îr‹s
|=öfo.
œbñEº‹s
;

588  
de°
;

589 
	}
}

591 
öt32_t


592 
	gUTS46
::
	$m≠DevCh¨s
(
UnicodeSåög
 &
de°
, 
öt32_t
 
œbñSèπ
, i¡32_à
m≠pögSèπ
,

593 
UEº‹Code
 &
îr‹Code
) const {

594 
öt32_t
 
Àngth
=
de°
.
	`Àngth
();

595 
UCh¨
 *
s
=
de°
.
	`gëBuf„r
(de°[
m≠pögSèπ
]==0xd‡? 
Àngth
+1 :Üength);

596 if(
s
==
NULL
) {

597 
îr‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

598  
Àngth
;

600 
öt32_t
 
ˇ∑côy
=
de°
.
	`gëC≠acôy
();

601 
UBoﬁ
 
didM≠DevCh¨s
=
FALSE
;

602 
öt32_t
 
ªadIndex
=
m≠pögSèπ
, 
wrôeIndex
=mappingStart;

604 
UCh¨
 
c
=
s
[
ªadIndex
++];

605 
c
) {

608 
didM≠DevCh¨s
=
TRUE
;

609 
s
[
wrôeIndex
++]=0x73;

611 if(
wrôeIndex
==
ªadIndex
) {

612 if(
Àngth
==
ˇ∑côy
) {

613 
de°
.
	`ªÀa£Buf„r
(
Àngth
);

614 
s
=
de°
.
	`gëBuf„r
(
Àngth
+1);

615 if(
s
==
NULL
) {

616 
îr‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

617  
Àngth
;

619 
ˇ∑côy
=
de°
.
	`gëC≠acôy
();

621 
	`u_memmove
(
s
+
wrôeIndex
+1, s+wrôeIndex, 
Àngth
-writeIndex);

622 ++
ªadIndex
;

624 
s
[
wrôeIndex
++]=0x73;

625 ++
Àngth
;

628 
didM≠DevCh¨s
=
TRUE
;

629 
s
[
wrôeIndex
++]=0x3c3;

633 
didM≠DevCh¨s
=
TRUE
;

634 --
Àngth
;

638 
s
[
wrôeIndex
++]=
c
;

641 } 
wrôeIndex
<
Àngth
);

642 
de°
.
	`ªÀa£Buf„r
(
Àngth
);

643 if(
didM≠DevCh¨s
) {

647 
UnicodeSåög
 
n‹mÆized
;

648 
uts46N‹m2
.
	`n‹mÆize
(
de°
.
	`ãmpSubSåög
(
œbñSèπ
), 
n‹mÆized
, 
îr‹Code
);

649 if(
	`U_SUCCESS
(
îr‹Code
)) {

650 
de°
.
	`ª∂a˚
(
œbñSèπ
, 0x7fffffff, 
n‹mÆized
);

651  
de°
.
	`Àngth
();

654  
Àngth
;

655 
	}
}

660 
ölöe
 
UBoﬁ


661 
	$isN⁄ASCIIDißŒowedSTD3VÆid
(
UCh¨32
 
c
) {

662  
c
==0x2260 || c==0x226E || c==0x226F;

663 
	}
}

670 
öt32_t


671 
	$ª∂a˚Labñ
(
UnicodeSåög
 &
de°
, 
öt32_t
 
de°LabñSèπ
, i¡32_à
de°LabñLígth
,

672 c⁄° 
UnicodeSåög
 &
œbñ
, 
öt32_t
 
œbñLígth
) {

673 if(&
œbñ
!=&
de°
) {

674 
de°
.
	`ª∂a˚
(
de°LabñSèπ
, 
de°LabñLígth
, 
œbñ
);

676  
œbñLígth
;

677 
	}
}

679 
öt32_t


680 
	gUTS46
::
	$¥o˚ssLabñ
(
UnicodeSåög
 &
de°
,

681 
öt32_t
 
œbñSèπ
, i¡32_à
œbñLígth
,

682 
UBoﬁ
 
toASCII
,

683 
IDNAInfo
 &
öfo
, 
UEº‹Code
 &
îr‹Code
) const {

684 
UnicodeSåög
 
‰omPunycode
;

685 
UnicodeSåög
 *
œbñSåög
;

686 c⁄° 
UCh¨
 *
œbñ
=
de°
.
	`gëBuf„r
()+
œbñSèπ
;

687 
öt32_t
 
de°LabñSèπ
=
œbñSèπ
;

688 
öt32_t
 
de°LabñLígth
=
œbñLígth
;

689 
UBoﬁ
 
wasPunycode
;

690 if(
œbñLígth
>=4 && 
œbñ
[0]==0x78 &&Üabel[1]==0x6e &&Üabel[2]==0x2d &&Üabel[3]==0x2d) {

692 
wasPunycode
=
TRUE
;

693 
UCh¨
 *
unicodeBuf„r
=
‰omPunycode
.
	`gëBuf„r
(-1);

694 if(
unicodeBuf„r
==
NULL
) {

696 
îr‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

697  
œbñLígth
;

699 
UEº‹Code
 
punycodeEº‹Code
=
U_ZERO_ERROR
;

700 
öt32_t
 
unicodeLígth
=
	`u_°rFromPunycode
(
œbñ
+4, 
œbñLígth
-4,

701 
unicodeBuf„r
, 
‰omPunycode
.
	`gëC≠acôy
(),

702 
NULL
, &
punycodeEº‹Code
);

703 if(
punycodeEº‹Code
==
U_BUFFER_OVERFLOW_ERROR
) {

704 
‰omPunycode
.
	`ªÀa£Buf„r
(0);

705 
unicodeBuf„r
=
‰omPunycode
.
	`gëBuf„r
(
unicodeLígth
);

706 if(
unicodeBuf„r
==
NULL
) {

707 
îr‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

708  
œbñLígth
;

710 
punycodeEº‹Code
=
U_ZERO_ERROR
;

711 
unicodeLígth
=
	`u_°rFromPunycode
(
œbñ
+4, 
œbñLígth
-4,

712 
unicodeBuf„r
, 
‰omPunycode
.
	`gëC≠acôy
(),

713 
NULL
, &
punycodeEº‹Code
);

715 
‰omPunycode
.
	`ªÀa£Buf„r
(
unicodeLígth
);

716 if(
	`U_FAILURE
(
punycodeEº‹Code
)) {

717 
öfo
.
œbñEº‹s
|=
UIDNA_ERROR_PUNYCODE
;

718  
	`m¨kBadACELabñ
(
de°
, 
œbñSèπ
, 
œbñLígth
, 
toASCII
, 
öfo
);

727 
UBoﬁ
 
isVÆid
=
uts46N‹m2
.
	`isN‹mÆized
(
‰omPunycode
, 
îr‹Code
);

728 if(
	`U_FAILURE
(
îr‹Code
)) {

729  
œbñLígth
;

731 if(!
isVÆid
) {

732 
öfo
.
œbñEº‹s
|=
UIDNA_ERROR_INVALID_ACE_LABEL
;

733  
	`m¨kBadACELabñ
(
de°
, 
œbñSèπ
, 
œbñLígth
, 
toASCII
, 
öfo
);

735 
œbñSåög
=&
‰omPunycode
;

736 
œbñ
=
‰omPunycode
.
	`gëBuf„r
();

737 
œbñSèπ
=0;

738 
œbñLígth
=
‰omPunycode
.
	`Àngth
();

740 
wasPunycode
=
FALSE
;

741 
œbñSåög
=&
de°
;

744 if(
œbñLígth
==0) {

745 if(
toASCII
) {

746 
öfo
.
œbñEº‹s
|=
UIDNA_ERROR_EMPTY_LABEL
;

748  
	`ª∂a˚Labñ
(
de°
, 
de°LabñSèπ
, 
de°LabñLígth
, *
œbñSåög
, 
œbñLígth
);

751 if(
œbñLígth
>=4 && 
œbñ
[2]==0x2d &&Üabel[3]==0x2d) {

753 
öfo
.
œbñEº‹s
|=
UIDNA_ERROR_HYPHEN_3_4
;

755 if(
œbñ
[0]==0x2d) {

757 
öfo
.
œbñEº‹s
|=
UIDNA_ERROR_LEADING_HYPHEN
;

759 if(
œbñ
[
œbñLígth
-1]==0x2d) {

761 
öfo
.
œbñEº‹s
|=
UIDNA_ERROR_TRAILING_HYPHEN
;

772 
UCh¨
 *
s
=(UCh¨ *)
œbñ
;

773 c⁄° 
UCh¨
 *
limô
=
œbñ
+
œbñLígth
;

774 
UCh¨
 
‹edCh¨s
=0;

776 
UBoﬁ
 
dißŒowN⁄LDHDŸ
=(
›ti⁄s
&
UIDNA_USE_STD3_RULES
)!=0;

778 
UCh¨
 
c
=*
s
;

779 if(
c
<=0x7f) {

780 if(
c
==0x2e) {

781 
öfo
.
œbñEº‹s
|=
UIDNA_ERROR_LABEL_HAS_DOT
;

782 *
s
=0xfffd;

783 } if(
dißŒowN⁄LDHDŸ
 && 
asciiD©a
[
c
]<0) {

784 
öfo
.
œbñEº‹s
|=
UIDNA_ERROR_DISALLOWED
;

785 *
s
=0xfffd;

788 
‹edCh¨s
|=
c
;

789 if(
dißŒowN⁄LDHDŸ
 && 
	`isN⁄ASCIIDißŒowedSTD3VÆid
(
c
)) {

790 
öfo
.
œbñEº‹s
|=
UIDNA_ERROR_DISALLOWED
;

791 *
s
=0xfffd;

792 } if(
c
==0xfffd) {

793 
öfo
.
œbñEº‹s
|=
UIDNA_ERROR_DISALLOWED
;

796 ++
s
;

797 } 
s
<
limô
);

800 
UCh¨32
 
c
;

801 
öt32_t
 
˝Lígth
=0;

803 
	`U16_NEXT_UNSAFE
(
œbñ
, 
˝Lígth
, 
c
);

804 if((
	`U_GET_GC_MASK
(
c
)&
U_GC_M_MASK
)!=0) {

805 
öfo
.
œbñEº‹s
|=
UIDNA_ERROR_LEADING_COMBINING_MARK
;

806 
œbñSåög
->
	`ª∂a˚
(
œbñSèπ
, 
˝Lígth
, (
UCh¨
)0xfffd);

807 
œbñ
=
œbñSåög
->
	`gëBuf„r
()+
œbñSèπ
;

808 
œbñLígth
+=1-
˝Lígth
;

809 if(
œbñSåög
==&
de°
) {

810 
de°LabñLígth
=
œbñLígth
;

813 if((
öfo
.
œbñEº‹s
&
£vîeEº‹s
)==0) {

816 if((
›ti⁄s
&
UIDNA_CHECK_BIDI
)!=0 && (!
öfo
.
isBiDi
 || info.
isOkBiDi
)) {

817 
	`checkLabñBiDi
(
œbñ
, 
œbñLígth
, 
öfo
);

819 if–(
›ti⁄s
&
UIDNA_CHECK_CONTEXTJ
)!=0 && (
‹edCh¨s
&0x200c)==0x200c &&

820 !
	`isLabñOkC⁄ãxtJ
(
œbñ
, 
œbñLígth
)

822 
öfo
.
œbñEº‹s
|=
UIDNA_ERROR_CONTEXTJ
;

824 if(
toASCII
) {

825 if(
wasPunycode
) {

827 if(
de°LabñLígth
>63) {

828 
öfo
.
œbñEº‹s
|=
UIDNA_ERROR_LABEL_TOO_LONG
;

830  
de°LabñLígth
;

831 } if(
‹edCh¨s
>=0x80) {

833 
UnicodeSåög
 
punycode
;

834 
UCh¨
 *
buf„r
=
punycode
.
	`gëBuf„r
(63);

835 if(
buf„r
==
NULL
) {

836 
îr‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

837  
de°LabñLígth
;

839 
buf„r
[0]=0x78;

840 
buf„r
[1]=0x6e;

841 
buf„r
[2]=0x2d;

842 
buf„r
[3]=0x2d;

843 
öt32_t
 
punycodeLígth
=
	`u_°rToPunycode
(
œbñ
, 
œbñLígth
,

844 
buf„r
+4, 
punycode
.
	`gëC≠acôy
()-4,

845 
NULL
, &
îr‹Code
);

846 if(
îr‹Code
==
U_BUFFER_OVERFLOW_ERROR
) {

847 
îr‹Code
=
U_ZERO_ERROR
;

848 
punycode
.
	`ªÀa£Buf„r
(4);

849 
buf„r
=
punycode
.
	`gëBuf„r
(4+
punycodeLígth
);

850 if(
buf„r
==
NULL
) {

851 
îr‹Code
=
U_MEMORY_ALLOCATION_ERROR
;

852  
de°LabñLígth
;

854 
punycodeLígth
=
	`u_°rToPunycode
(
œbñ
, 
œbñLígth
,

855 
buf„r
+4, 
punycode
.
	`gëC≠acôy
()-4,

856 
NULL
, &
îr‹Code
);

858 
punycodeLígth
+=4;

859 
punycode
.
	`ªÀa£Buf„r
(
punycodeLígth
);

860 if(
	`U_FAILURE
(
îr‹Code
)) {

861  
de°LabñLígth
;

863 if(
punycodeLígth
>63) {

864 
öfo
.
œbñEº‹s
|=
UIDNA_ERROR_LABEL_TOO_LONG
;

866  
	`ª∂a˚Labñ
(
de°
, 
de°LabñSèπ
, 
de°LabñLígth
,

867 
punycode
, 
punycodeLígth
);

870 if(
œbñLígth
>63) {

871 
öfo
.
œbñEº‹s
|=
UIDNA_ERROR_LABEL_TOO_LONG
;

878 if(
wasPunycode
) {

879 
öfo
.
œbñEº‹s
|=
UIDNA_ERROR_INVALID_ACE_LABEL
;

880  
	`m¨kBadACELabñ
(
de°
, 
de°LabñSèπ
, 
de°LabñLígth
, 
toASCII
, 
öfo
);

883  
	`ª∂a˚Labñ
(
de°
, 
de°LabñSèπ
, 
de°LabñLígth
, *
œbñSåög
, 
œbñLígth
);

884 
	}
}

889 
öt32_t


890 
	gUTS46
::
	$m¨kBadACELabñ
(
UnicodeSåög
 &
de°
,

891 
öt32_t
 
œbñSèπ
, i¡32_à
œbñLígth
,

892 
UBoﬁ
 
toASCII
, 
IDNAInfo
 &
öfo
) const {

893 
UBoﬁ
 
dißŒowN⁄LDHDŸ
=(
›ti⁄s
&
UIDNA_USE_STD3_RULES
)!=0;

894 
UBoﬁ
 
isASCII
=
TRUE
;

895 
UBoﬁ
 
⁄lyLDH
=
TRUE
;

896 c⁄° 
UCh¨
 *
œbñ
=
de°
.
	`gëBuf„r
()+
œbñSèπ
;

898 
UCh¨
 *
s
=(UCh¨ *)
œbñ
+4;

899 c⁄° 
UCh¨
 *
limô
=
œbñ
+
œbñLígth
;

901 
UCh¨
 
c
=*
s
;

902 if(
c
<=0x7f) {

903 if(
c
==0x2e) {

904 
öfo
.
œbñEº‹s
|=
UIDNA_ERROR_LABEL_HAS_DOT
;

905 *
s
=0xfffd;

906 
isASCII
=
⁄lyLDH
=
FALSE
;

907 } if(
asciiD©a
[
c
]<0) {

908 
⁄lyLDH
=
FALSE
;

909 if(
dißŒowN⁄LDHDŸ
) {

910 *
s
=0xfffd;

911 
isASCII
=
FALSE
;

915 
isASCII
=
⁄lyLDH
=
FALSE
;

917 } ++
s
<
limô
);

918 if(
⁄lyLDH
) {

919 
de°
.
	`ö£π
(
œbñSèπ
+
œbñLígth
, (
UCh¨
)0xfffd);

920 ++
œbñLígth
;

922 if(
toASCII
 && 
isASCII
 && 
œbñLígth
>63) {

923 
öfo
.
œbñEº‹s
|=
UIDNA_ERROR_LABEL_TOO_LONG
;

926  
œbñLígth
;

927 
	}
}

929 c⁄° 
uöt32_t
 
	gL_MASK
=
U_MASK
(
U_LEFT_TO_RIGHT
);

930 c⁄° 
uöt32_t
 
	gR_AL_MASK
=
U_MASK
(
U_RIGHT_TO_LEFT
)|U_MASK(
U_RIGHT_TO_LEFT_ARABIC
);

931 c⁄° 
uöt32_t
 
	gL_R_AL_MASK
=
L_MASK
|
R_AL_MASK
;

933 c⁄° 
uöt32_t
 
	gR_AL_AN_MASK
=
R_AL_MASK
|
U_MASK
(
U_ARABIC_NUMBER
);

935 c⁄° 
uöt32_t
 
	gEN_AN_MASK
=
U_MASK
(
U_EUROPEAN_NUMBER
)|U_MASK(
U_ARABIC_NUMBER
);

936 c⁄° 
uöt32_t
 
	gR_AL_EN_AN_MASK
=
R_AL_MASK
|
EN_AN_MASK
;

937 c⁄° 
uöt32_t
 
	gL_EN_MASK
=
L_MASK
|
U_MASK
(
U_EUROPEAN_NUMBER
);

939 c⁄° 
uöt32_t
 
	gES_CS_ET_ON_BN_NSM_MASK
=

940 
U_MASK
(
U_EUROPEAN_NUMBER_SEPARATOR
)|

941 
U_MASK
(
U_COMMON_NUMBER_SEPARATOR
)|

942 
U_MASK
(
U_EUROPEAN_NUMBER_TERMINATOR
)|

943 
U_MASK
(
U_OTHER_NEUTRAL
)|

944 
U_MASK
(
U_BOUNDARY_NEUTRAL
)|

945 
U_MASK
(
U_DIR_NON_SPACING_MARK
);

946 c⁄° 
uöt32_t
 
	gL_EN_ES_CS_ET_ON_BN_NSM_MASK
=
L_EN_MASK
|
ES_CS_ET_ON_BN_NSM_MASK
;

947 c⁄° 
uöt32_t
 
	gR_AL_AN_EN_ES_CS_ET_ON_BN_NSM_MASK
=
R_AL_MASK
|
EN_AN_MASK
|
ES_CS_ET_ON_BN_NSM_MASK
;

955 
	gUTS46
::
	$checkLabñBiDi
(c⁄° 
UCh¨
 *
œbñ
, 
öt32_t
 
œbñLígth
, 
IDNAInfo
 &
öfo
) const {

958 
UCh¨32
 
c
;

959 
öt32_t
 
i
=0;

960 
	`U16_NEXT_UNSAFE
(
œbñ
, 
i
, 
c
);

961 
uöt32_t
 
fú°Mask
=
	`U_MASK
(
	`u_ch¨Dúe˘i⁄
(
c
));

965 if((
fú°Mask
&~
L_R_AL_MASK
)!=0) {

966 
öfo
.
isOkBiDi
=
FALSE
;

969 
uöt32_t
 
œ°Mask
;

971 if(
i
>=
œbñLígth
) {

972 
œ°Mask
=
fú°Mask
;

975 
	`U16_PREV_UNSAFE
(
œbñ
, 
œbñLígth
, 
c
);

976 
UCh¨Dúe˘i⁄
 
dú
=
	`u_ch¨Dúe˘i⁄
(
c
);

977 if(
dú
!=
U_DIR_NON_SPACING_MARK
) {

978 
œ°Mask
=
	`U_MASK
(
dú
);

988 if–(
fú°Mask
&
L_MASK
)!=0 ?

989 (
œ°Mask
&~
L_EN_MASK
)!=0 :

990 (
œ°Mask
&~
R_AL_EN_AN_MASK
)!=0

992 
öfo
.
isOkBiDi
=
FALSE
;

995 
uöt32_t
 
mask
=0;

996 
i
<
œbñLígth
) {

997 
	`U16_NEXT_UNSAFE
(
œbñ
, 
i
, 
c
);

998 
mask
|=
	`U_MASK
(
	`u_ch¨Dúe˘i⁄
(
c
));

1000 if(
fú°Mask
&
L_MASK
) {

1003 if((
mask
&~
L_EN_ES_CS_ET_ON_BN_NSM_MASK
)!=0) {

1004 
öfo
.
isOkBiDi
=
FALSE
;

1009 if((
mask
&~
R_AL_AN_EN_ES_CS_ET_ON_BN_NSM_MASK
)!=0) {

1010 
öfo
.
isOkBiDi
=
FALSE
;

1014 if((
mask
&
EN_AN_MASK
)==EN_AN_MASK) {

1015 
öfo
.
isOkBiDi
=
FALSE
;

1024 if(((
fú°Mask
|
mask
|
œ°Mask
)&
R_AL_AN_MASK
)!=0) {

1025 
öfo
.
isBiDi
=
TRUE
;

1027 
	}
}

1042 
UBoﬁ


1043 
	$isASCIIOkBiDi
(c⁄° 
UCh¨
 *
s
, 
öt32_t
 
Àngth
) {

1044 
öt32_t
 
œbñSèπ
=0;

1045 
öt32_t
 
i
=0; i<
Àngth
; ++i) {

1046 
UCh¨
 
c
=
s
[
i
];

1047 if(
c
==0x2e) {

1048 if(
i
>
œbñSèπ
) {

1049 
c
=
s
[
i
-1];

1050 if(!(0x61<=
c
 && c<=0x7a) && !(0x30<=c && c<=0x39)) {

1052  
FALSE
;

1055 
œbñSèπ
=
i
+1;

1056 } if(
i
==
œbñSèπ
) {

1057 if(!(0x61<=
c
 && c<=0x7a)) {

1059  
FALSE
;

1062 if(
c
<=0x20 && (c>=0x1c || (9<=c && c<=0xd))) {

1064  
FALSE
;

1068  
TRUE
;

1069 
	}
}

1074 
UBoﬁ


1075 
	$isASCIIOkBiDi
(c⁄° *
s
, 
öt32_t
 
Àngth
) {

1076 
öt32_t
 
œbñSèπ
=0;

1077 
öt32_t
 
i
=0; i<
Àngth
; ++i) {

1078 
c
=
s
[
i
];

1079 if(
c
==0x2e) {

1080 if(
i
>
œbñSèπ
) {

1081 
c
=
s
[
i
-1];

1082 if(!(0x61<=
c
 && c<=0x7a) && !(0x41<=c && c<=0x5a) && !(0x30<=c && c<=0x39)) {

1084  
FALSE
;

1087 
œbñSèπ
=
i
+1;

1088 } if(
i
==
œbñSèπ
) {

1089 if(!(0x61<=
c
 && c<=0x7a) && !(0x41<=c && c<=0x5a)) {

1091  
FALSE
;

1094 if(
c
<=0x20 && (c>=0x1c || (9<=c && c<=0xd))) {

1096  
FALSE
;

1100  
TRUE
;

1101 
	}
}

1103 
UBoﬁ


1104 
	gUTS46
::
	$isLabñOkC⁄ãxtJ
(c⁄° 
UCh¨
 *
œbñ
, 
öt32_t
 
œbñLígth
) const {

1107 
öt32_t
 
i
=0; i<
œbñLígth
; ++i) {

1108 if(
œbñ
[
i
]==0x200c) {

1115 if(
i
==0) {

1116  
FALSE
;

1118 
UCh¨32
 
c
;

1119 
öt32_t
 
j
=
i
;

1120 
	`U16_PREV_UNSAFE
(
œbñ
, 
j
, 
c
);

1121 if(
	`u_gëComböögCœss
(
c
)==9) {

1126 
UJoöögTy≥
 
ty≥
=(UJoöögTy≥)
	`u_gëI¡Pr›îtyVÆue
(
c
, 
UCHAR_JOINING_TYPE
);

1127 if(
ty≥
==
U_JT_TRANSPARENT
) {

1128 if(
j
==0) {

1129  
FALSE
;

1131 
	`U16_PREV_UNSAFE
(
œbñ
, 
j
, 
c
);

1132 } if(
ty≥
==
U_JT_LEFT_JOINING
 ||Åy≥==
U_JT_DUAL_JOINING
) {

1135  
FALSE
;

1139 
j
=
i
+1;;) {

1140 if(
j
==
œbñLígth
) {

1141  
FALSE
;

1143 
	`U16_NEXT_UNSAFE
(
œbñ
, 
j
, 
c
);

1144 
UJoöögTy≥
 
ty≥
=(UJoöögTy≥)
	`u_gëI¡Pr›îtyVÆue
(
c
, 
UCHAR_JOINING_TYPE
);

1145 if(
ty≥
==
U_JT_TRANSPARENT
) {

1147 } if(
ty≥
==
U_JT_RIGHT_JOINING
 ||Åy≥==
U_JT_DUAL_JOINING
) {

1150  
FALSE
;

1153 } if(
œbñ
[
i
]==0x200d) {

1158 if(
i
==0) {

1159  
FALSE
;

1161 
UCh¨32
 
c
;

1162 
öt32_t
 
j
=
i
;

1163 
	`U16_PREV_UNSAFE
(
œbñ
, 
j
, 
c
);

1164 if(
	`u_gëComböögCœss
(
c
)!=9) {

1165  
FALSE
;

1169  
TRUE
;

1170 
	}
}

1172 
U_NAMESPACE_END


1176 
U_NAMESPACE_USE


1178 
U_DRAFT
 
UIDNA
 * 
U_EXPORT2


1179 
	$uid«_›íUTS46
(
uöt32_t
 
›ti⁄s
, 
UEº‹Code
 *
pEº‹Code
) {

1180  
ªöãΩªt_ˇ°
<
UIDNA
 *>(
IDNA
::
	`¸óãUTS46In°™˚
(
›ti⁄s
, *
pEº‹Code
));

1181 
	}
}

1183 
U_DRAFT
 
U_EXPORT2


1184 
	$uid«_˛o£
(
UIDNA
 *
id«
) {

1185 
dñëe
 
ªöãΩªt_ˇ°
<
IDNA
 *>(
id«
);

1186 
	}
}

1188 
UBoﬁ


1189 
	$checkArgs
(c⁄° *
œbñ
, 
öt32_t
 
Àngth
,

1190 *
de°
, 
öt32_t
 
ˇ∑côy
,

1191 
UIDNAInfo
 *
pInfo
, 
UEº‹Code
 *
pEº‹Code
) {

1192 if(
	`U_FAILURE
(*
pEº‹Code
)) {

1193  
FALSE
;

1196 if(
pInfo
==
NULL
 ||ÖInfo->
size
<16) {

1197 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

1198  
FALSE
;

1200 if–(
œbñ
==
NULL
 ? 
Àngth
!=0 :Üength<-1) ||

1201 (
de°
==
NULL
 ? 
ˇ∑côy
!=0 : capacity<0) ||

1202 (
de°
==
œbñ
 &&Üabñ!=
NULL
)

1204 *
pEº‹Code
=
U_ILLEGAL_ARGUMENT_ERROR
;

1205  
FALSE
;

1208 
	`u¥v_mem£t
(&
pInfo
->
size
+1, 0,ÖInfo->size-(pInfo->size));

1209  
TRUE
;

1210 
	}
}

1213 
	$id«InfoToSåu˘
(
IDNAInfo
 &
öfo
, 
UIDNAInfo
 *
pInfo
) {

1214 
pInfo
->
isTønsôi⁄ÆDif„ª¡
=
öfo
.
	`isTønsôi⁄ÆDif„ª¡
();

1215 
pInfo
->
îr‹s
=
öfo
.
	`gëEº‹s
();

1216 
	}
}

1218 
U_DRAFT
 
öt32_t
 
U_EXPORT2


1219 
	$uid«_œbñToASCII
(c⁄° 
UIDNA
 *
id«
,

1220 c⁄° 
UCh¨
 *
œbñ
, 
öt32_t
 
Àngth
,

1221 
UCh¨
 *
de°
, 
öt32_t
 
ˇ∑côy
,

1222 
UIDNAInfo
 *
pInfo
, 
UEº‹Code
 *
pEº‹Code
) {

1223 if(!
	`checkArgs
(
œbñ
, 
Àngth
, 
de°
, 
ˇ∑côy
, 
pInfo
, 
pEº‹Code
)) {

1226 
UnicodeSåög
 
	`§c
((
UBoﬁ
)(
Àngth
<0), 
œbñ
,Üength);

1227 
UnicodeSåög
 
	`de°Såög
(
de°
, 0, 
ˇ∑côy
);

1228 
IDNAInfo
 
öfo
;

1229 
ªöãΩªt_ˇ°
<c⁄° 
IDNA
 *>(
id«
)->
	`œbñToASCII
(
§c
, 
de°Såög
, 
öfo
, *
pEº‹Code
);

1230 
	`id«InfoToSåu˘
(
öfo
, 
pInfo
);

1231  
de°Såög
.
	`exåa˘
(
de°
, 
ˇ∑côy
, *
pEº‹Code
);

1232 
	}
}

1234 
U_DRAFT
 
öt32_t
 
U_EXPORT2


1235 
	$uid«_œbñToUnicode
(c⁄° 
UIDNA
 *
id«
,

1236 c⁄° 
UCh¨
 *
œbñ
, 
öt32_t
 
Àngth
,

1237 
UCh¨
 *
de°
, 
öt32_t
 
ˇ∑côy
,

1238 
UIDNAInfo
 *
pInfo
, 
UEº‹Code
 *
pEº‹Code
) {

1239 if(!
	`checkArgs
(
œbñ
, 
Àngth
, 
de°
, 
ˇ∑côy
, 
pInfo
, 
pEº‹Code
)) {

1242 
UnicodeSåög
 
	`§c
((
UBoﬁ
)(
Àngth
<0), 
œbñ
,Üength);

1243 
UnicodeSåög
 
	`de°Såög
(
de°
, 0, 
ˇ∑côy
);

1244 
IDNAInfo
 
öfo
;

1245 
ªöãΩªt_ˇ°
<c⁄° 
IDNA
 *>(
id«
)->
	`œbñToUnicode
(
§c
, 
de°Såög
, 
öfo
, *
pEº‹Code
);

1246 
	`id«InfoToSåu˘
(
öfo
, 
pInfo
);

1247  
de°Såög
.
	`exåa˘
(
de°
, 
ˇ∑côy
, *
pEº‹Code
);

1248 
	}
}

1250 
U_DRAFT
 
öt32_t
 
U_EXPORT2


1251 
	$uid«_«meToASCII
(c⁄° 
UIDNA
 *
id«
,

1252 c⁄° 
UCh¨
 *
«me
, 
öt32_t
 
Àngth
,

1253 
UCh¨
 *
de°
, 
öt32_t
 
ˇ∑côy
,

1254 
UIDNAInfo
 *
pInfo
, 
UEº‹Code
 *
pEº‹Code
) {

1255 if(!
	`checkArgs
(
«me
, 
Àngth
, 
de°
, 
ˇ∑côy
, 
pInfo
, 
pEº‹Code
)) {

1258 
UnicodeSåög
 
	`§c
((
UBoﬁ
)(
Àngth
<0), 
«me
,Üength);

1259 
UnicodeSåög
 
	`de°Såög
(
de°
, 0, 
ˇ∑côy
);

1260 
IDNAInfo
 
öfo
;

1261 
ªöãΩªt_ˇ°
<c⁄° 
IDNA
 *>(
id«
)->
	`«meToASCII
(
§c
, 
de°Såög
, 
öfo
, *
pEº‹Code
);

1262 
	`id«InfoToSåu˘
(
öfo
, 
pInfo
);

1263  
de°Såög
.
	`exåa˘
(
de°
, 
ˇ∑côy
, *
pEº‹Code
);

1264 
	}
}

1266 
U_DRAFT
 
öt32_t
 
U_EXPORT2


1267 
	$uid«_«meToUnicode
(c⁄° 
UIDNA
 *
id«
,

1268 c⁄° 
UCh¨
 *
«me
, 
öt32_t
 
Àngth
,

1269 
UCh¨
 *
de°
, 
öt32_t
 
ˇ∑côy
,

1270 
UIDNAInfo
 *
pInfo
, 
UEº‹Code
 *
pEº‹Code
) {

1271 if(!
	`checkArgs
(
«me
, 
Àngth
, 
de°
, 
ˇ∑côy
, 
pInfo
, 
pEº‹Code
)) {

1274 
UnicodeSåög
 
	`§c
((
UBoﬁ
)(
Àngth
<0), 
«me
,Üength);

1275 
UnicodeSåög
 
	`de°Såög
(
de°
, 0, 
ˇ∑côy
);

1276 
IDNAInfo
 
öfo
;

1277 
ªöãΩªt_ˇ°
<c⁄° 
IDNA
 *>(
id«
)->
	`«meToUnicode
(
§c
, 
de°Såög
, 
öfo
, *
pEº‹Code
);

1278 
	`id«InfoToSåu˘
(
öfo
, 
pInfo
);

1279  
de°Såög
.
	`exåa˘
(
de°
, 
ˇ∑côy
, *
pEº‹Code
);

1280 
	}
}

1282 
U_DRAFT
 
öt32_t
 
U_EXPORT2


1283 
	$uid«_œbñToASCII_UTF8
(c⁄° 
UIDNA
 *
id«
,

1284 c⁄° *
œbñ
, 
öt32_t
 
Àngth
,

1285 *
de°
, 
öt32_t
 
ˇ∑côy
,

1286 
UIDNAInfo
 *
pInfo
, 
UEº‹Code
 *
pEº‹Code
) {

1287 if(!
	`checkArgs
(
œbñ
, 
Àngth
, 
de°
, 
ˇ∑côy
, 
pInfo
, 
pEº‹Code
)) {

1290 
SåögPõ˚
 
	`§c
(
œbñ
, 
Àngth
<0 ? 
	`u¥v_°æí
(label) :Üength);

1291 
CheckedAºayByãSök
 
	`sök
(
de°
, 
ˇ∑côy
);

1292 
IDNAInfo
 
öfo
;

1293 
ªöãΩªt_ˇ°
<c⁄° 
IDNA
 *>(
id«
)->
	`œbñToASCII_UTF8
(
§c
, 
sök
, 
öfo
, *
pEº‹Code
);

1294 
	`id«InfoToSåu˘
(
öfo
, 
pInfo
);

1295  
	`u_ãrmö©eCh¨s
(
de°
, 
ˇ∑côy
, 
sök
.
	`NumbîOfByãsAµíded
(), 
pEº‹Code
);

1296 
	}
}

1298 
U_DRAFT
 
öt32_t
 
U_EXPORT2


1299 
	$uid«_œbñToUnicodeUTF8
(c⁄° 
UIDNA
 *
id«
,

1300 c⁄° *
œbñ
, 
öt32_t
 
Àngth
,

1301 *
de°
, 
öt32_t
 
ˇ∑côy
,

1302 
UIDNAInfo
 *
pInfo
, 
UEº‹Code
 *
pEº‹Code
) {

1303 if(!
	`checkArgs
(
œbñ
, 
Àngth
, 
de°
, 
ˇ∑côy
, 
pInfo
, 
pEº‹Code
)) {

1306 
SåögPõ˚
 
	`§c
(
œbñ
, 
Àngth
<0 ? 
	`u¥v_°æí
(label) :Üength);

1307 
CheckedAºayByãSök
 
	`sök
(
de°
, 
ˇ∑côy
);

1308 
IDNAInfo
 
öfo
;

1309 
ªöãΩªt_ˇ°
<c⁄° 
IDNA
 *>(
id«
)->
	`œbñToUnicodeUTF8
(
§c
, 
sök
, 
öfo
, *
pEº‹Code
);

1310 
	`id«InfoToSåu˘
(
öfo
, 
pInfo
);

1311  
	`u_ãrmö©eCh¨s
(
de°
, 
ˇ∑côy
, 
sök
.
	`NumbîOfByãsAµíded
(), 
pEº‹Code
);

1312 
	}
}

1314 
U_DRAFT
 
öt32_t
 
U_EXPORT2


1315 
	$uid«_«meToASCII_UTF8
(c⁄° 
UIDNA
 *
id«
,

1316 c⁄° *
«me
, 
öt32_t
 
Àngth
,

1317 *
de°
, 
öt32_t
 
ˇ∑côy
,

1318 
UIDNAInfo
 *
pInfo
, 
UEº‹Code
 *
pEº‹Code
) {

1319 if(!
	`checkArgs
(
«me
, 
Àngth
, 
de°
, 
ˇ∑côy
, 
pInfo
, 
pEº‹Code
)) {

1322 
SåögPõ˚
 
	`§c
(
«me
, 
Àngth
<0 ? 
	`u¥v_°æí
(name) :Üength);

1323 
CheckedAºayByãSök
 
	`sök
(
de°
, 
ˇ∑côy
);

1324 
IDNAInfo
 
öfo
;

1325 
ªöãΩªt_ˇ°
<c⁄° 
IDNA
 *>(
id«
)->
	`«meToASCII_UTF8
(
§c
, 
sök
, 
öfo
, *
pEº‹Code
);

1326 
	`id«InfoToSåu˘
(
öfo
, 
pInfo
);

1327  
	`u_ãrmö©eCh¨s
(
de°
, 
ˇ∑côy
, 
sök
.
	`NumbîOfByãsAµíded
(), 
pEº‹Code
);

1328 
	}
}

1330 
U_DRAFT
 
öt32_t
 
U_EXPORT2


1331 
	$uid«_«meToUnicodeUTF8
(c⁄° 
UIDNA
 *
id«
,

1332 c⁄° *
«me
, 
öt32_t
 
Àngth
,

1333 *
de°
, 
öt32_t
 
ˇ∑côy
,

1334 
UIDNAInfo
 *
pInfo
, 
UEº‹Code
 *
pEº‹Code
) {

1335 if(!
	`checkArgs
(
«me
, 
Àngth
, 
de°
, 
ˇ∑côy
, 
pInfo
, 
pEº‹Code
)) {

1338 
SåögPõ˚
 
	`§c
(
«me
, 
Àngth
<0 ? 
	`u¥v_°æí
(name) :Üength);

1339 
CheckedAºayByãSök
 
	`sök
(
de°
, 
ˇ∑côy
);

1340 
IDNAInfo
 
öfo
;

1341 
ªöãΩªt_ˇ°
<c⁄° 
IDNA
 *>(
id«
)->
	`«meToUnicodeUTF8
(
§c
, 
sök
, 
öfo
, *
pEº‹Code
);

1342 
	`id«InfoToSåu˘
(
öfo
, 
pInfo
);

1343  
	`u_ãrmö©eCh¨s
(
de°
, 
ˇ∑côy
, 
sök
.
	`NumbîOfByãsAµíded
(), 
pEº‹Code
);

1344 
	}
}

	@utypes.c

16 
	~"unicode/uty≥s.h
"

21 
	g_uEº‹InfoName
[
U_ERROR_WARNING_LIMIT
-
U_ERROR_WARNING_START
]={

34 
	g_uTønsEº‹Name
[
U_PARSE_ERROR_LIMIT
 - 
U_PARSE_ERROR_START
]={

73 
	g_uEº‹Name
[
U_STANDARD_ERROR_LIMIT
]={

108 
	g_uFmtEº‹Name
[
U_FMT_PARSE_ERROR_LIMIT
 - 
U_FMT_PARSE_ERROR_START
] = {

129 
	g_uBrkEº‹Name
[
U_BRK_ERROR_LIMIT
 - 
U_BRK_ERROR_START
] = {

147 
	g_uRegexEº‹Name
[
U_REGEX_ERROR_LIMIT
 - 
U_REGEX_ERROR_START
] = {

171 
	g_uIDNAEº‹Name
[
U_IDNA_ERROR_LIMIT
 - 
U_IDNA_ERROR_START
] = {

184 
	g_uPlugöEº‹Name
[
U_PLUGIN_ERROR_LIMIT
 - 
U_PLUGIN_ERROR_START
] = {

189 
U_CAPI
 c⁄° * 
U_EXPORT2


190 
	$u_îr‹Name
(
UEº‹Code
 
code
) {

191 if(
U_ZERO_ERROR
 <
code
 && codê< 
U_STANDARD_ERROR_LIMIT
) {

192  
_uEº‹Name
[
code
];

193 } if(
U_ERROR_WARNING_START
 <
code
 && codê< 
U_ERROR_WARNING_LIMIT
) {

194  
_uEº‹InfoName
[
code
 - 
U_ERROR_WARNING_START
];

195 } if(
U_PARSE_ERROR_START
 <
code
 && codê< 
U_PARSE_ERROR_LIMIT
){

196  
_uTønsEº‹Name
[
code
 - 
U_PARSE_ERROR_START
];

197 } if(
U_FMT_PARSE_ERROR_START
 <
code
 && codê< 
U_FMT_PARSE_ERROR_LIMIT
){

198  
_uFmtEº‹Name
[
code
 - 
U_FMT_PARSE_ERROR_START
];

199 } i‡(
U_BRK_ERROR_START
 <
code
 && codê< 
U_BRK_ERROR_LIMIT
){

200  
_uBrkEº‹Name
[
code
 - 
U_BRK_ERROR_START
];

201 } i‡(
U_REGEX_ERROR_START
 <
code
 && codê< 
U_REGEX_ERROR_LIMIT
) {

202  
_uRegexEº‹Name
[
code
 - 
U_REGEX_ERROR_START
];

203 } if(
U_IDNA_ERROR_START
 <
code
 && codê< 
U_IDNA_ERROR_LIMIT
) {

204  
_uIDNAEº‹Name
[
code
 - 
U_IDNA_ERROR_START
];

205 } if(
U_PLUGIN_ERROR_START
 <
code
 && codê< 
U_PLUGIN_ERROR_LIMIT
) {

206  
_uPlugöEº‹Name
[
code
 - 
U_PLUGIN_ERROR_START
];

210 
	}
}

	@uvector.cpp

11 
	~"uve˘‹.h
"

12 
	~"cmem‹y.h
"

13 
	~"u¨rs‹t.h
"

15 
	gU_NAMESPACE_BEGIN


17 
	#DEFAULT_CAPACITY
 8

	)

24 
	#HINT_KEY_POINTER
 (1)

	)

25 
	#HINT_KEY_INTEGER
 (0)

	)

27 
	$UOBJECT_DEFINE_RTTI_IMPLEMENTATION
(
UVe˘‹
)

29 
UVe˘‹
::
	$UVe˘‹
(
UEº‹Code
 &
°©us
) :

30 
	`cou¡
(0),

31 
	`ˇ∑côy
(0),

32 
	`ñemíts
(0),

33 
	`dñëî
(0),

34 
	$com∑ªr
(0)

36 
	`_öô
(
DEFAULT_CAPACITY
, 
°©us
);

37 
	}
}

39 
	gUVe˘‹
::
	$UVe˘‹
(
öt32_t
 
öôülC≠acôy
, 
UEº‹Code
 &
°©us
) :

40 
	`cou¡
(0),

41 
	`ˇ∑côy
(0),

42 
	`ñemíts
(0),

43 
	`dñëî
(0),

44 
	$com∑ªr
(0)

46 
	`_öô
(
öôülC≠acôy
, 
°©us
);

47 
	}
}

49 
	gUVe˘‹
::
	$UVe˘‹
(
UObje˘Dñëî
 *
d
, 
UKeyCom∑øt‹
 *
c
, 
UEº‹Code
 &
°©us
) :

50 
	`cou¡
(0),

51 
	`ˇ∑côy
(0),

52 
	`ñemíts
(0),

53 
	`dñëî
(
d
),

54 
	$com∑ªr
(
c
)

56 
	`_öô
(
DEFAULT_CAPACITY
, 
°©us
);

57 
	}
}

59 
	gUVe˘‹
::
	$UVe˘‹
(
UObje˘Dñëî
 *
d
, 
UKeyCom∑øt‹
 *
c
, 
öt32_t
 
öôülC≠acôy
, 
UEº‹Code
 &
°©us
) :

60 
	`cou¡
(0),

61 
	`ˇ∑côy
(0),

62 
	`ñemíts
(0),

63 
	`dñëî
(
d
),

64 
	$com∑ªr
(
c
)

66 
	`_öô
(
öôülC≠acôy
, 
°©us
);

67 
	}
}

69 
	gUVe˘‹
::
	$_öô
(
öt32_t
 
öôülC≠acôy
, 
UEº‹Code
 &
°©us
) {

70 i‡(
	`U_FAILURE
(
°©us
)) {

74 i‡((
öôülC≠acôy
 < 1Ë|| (öôülC≠acôy > (
öt32_t
)(
INT32_MAX
 / (
UHashTok
)))) {

75 
öôülC≠acôy
 = 
DEFAULT_CAPACITY
;

77 
ñemíts
 = (
UHashTok
 *)
	`u¥v_mÆloc
((UHashTok)*
öôülC≠acôy
);

78 i‡(
ñemíts
 == 0) {

79 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

81 
ˇ∑côy
 = 
öôülC≠acôy
;

83 
	}
}

85 
	gUVe˘‹
::~
	$UVe˘‹
() {

86 
	`ªmoveAŒEÀmíts
();

87 
	`u¥v_‰ì
(
ñemíts
);

88 
ñemíts
 = 0;

89 
	}
}

95 
	gUVe˘‹
::
	$assign
(c⁄° 
UVe˘‹
& 
Ÿhî
, 
UTokíAssig√r
 *
assign
, 
UEº‹Code
 &
ec
) {

96 i‡(
	`ísuªC≠acôy
(
Ÿhî
.
cou¡
, 
ec
)) {

97 
	`£tSize
(
Ÿhî
.
cou¡
, 
ec
);

98 i‡(
	`U_SUCCESS
(
ec
)) {

99 
öt32_t
 
i
=0; i<
Ÿhî
.
cou¡
; ++i) {

100 i‡(
ñemíts
[
i
].
poöãr
 !0 && 
dñëî
 != 0) {

101 (*
dñëî
)(
ñemíts
[
i
].
poöãr
);

103 (*
assign
)(&
ñemíts
[
i
], &
Ÿhî
.elements[i]);

107 
	}
}

110 
UBoﬁ
 
	gUVe˘‹
::
›î©‹
==(c⁄° 
UVe˘‹
& 
Ÿhî
) {

111 
öt32_t
 
i
;

112 i‡(
	gcou¡
 !
Ÿhî
.
cou¡
Ë 
FALSE
;

113 i‡(
	gcom∑ªr
 !
NULL
) {

115 
i
=0; 
	gi
<
	gcou¡
; ++i) {

116 i‡(!(*
	gcom∑ªr
)(
	gñemíts
[
i
], 
	gŸhî
.elements[i])) {

117  
	gFALSE
;

121  
	gTRUE
;

124 
	gUVe˘‹
::
	$addEÀmít
(* 
obj
, 
UEº‹Code
 &
°©us
) {

125 i‡(
	`ísuªC≠acôy
(
cou¡
 + 1, 
°©us
)) {

126 
ñemíts
[
cou¡
++].
poöãr
 = 
obj
;

128 
	}
}

130 
	gUVe˘‹
::
	$addEÀmít
(
öt32_t
 
ñem
, 
UEº‹Code
 &
°©us
) {

131 i‡(
	`ísuªC≠acôy
(
cou¡
 + 1, 
°©us
)) {

132 
ñemíts
[
cou¡
].
poöãr
 = 
NULL
;

133 
ñemíts
[
cou¡
].
öãgî
 = 
ñem
;

134 
cou¡
++;

136 
	}
}

138 
	gUVe˘‹
::
	$£tEÀmítAt
(* 
obj
, 
öt32_t
 
ödex
) {

139 i‡(0 <
ödex
 && index < 
cou¡
) {

140 i‡(
ñemíts
[
ödex
].
poöãr
 !0 && 
dñëî
 != 0) {

141 (*
dñëî
)(
ñemíts
[
ödex
].
poöãr
);

143 
ñemíts
[
ödex
].
poöãr
 = 
obj
;

146 
	}
}

148 
	gUVe˘‹
::
	$£tEÀmítAt
(
öt32_t
 
ñem
, i¡32_à
ödex
) {

149 i‡(0 <
ödex
 && index < 
cou¡
) {

150 i‡(
ñemíts
[
ödex
].
poöãr
 !0 && 
dñëî
 != 0) {

152 (*
dñëî
)(
ñemíts
[
ödex
].
poöãr
);

154 
ñemíts
[
ödex
].
poöãr
 = 
NULL
;

155 
ñemíts
[
ödex
].
öãgî
 = 
ñem
;

158 
	}
}

160 
	gUVe˘‹
::
	$ö£πEÀmítAt
(* 
obj
, 
öt32_t
 
ödex
, 
UEº‹Code
 &
°©us
) {

162 i‡(0 <
ödex
 && index <
cou¡
 && 
	`ísuªC≠acôy
(cou¡ + 1, 
°©us
)) {

163 
öt32_t
 
i
=
cou¡
; i>
ödex
; --i) {

164 
ñemíts
[
i
] =Élements[i-1];

166 
ñemíts
[
ödex
].
poöãr
 = 
obj
;

167 ++
cou¡
;

170 
	}
}

172 
	gUVe˘‹
::
	$ö£πEÀmítAt
(
öt32_t
 
ñem
, i¡32_à
ödex
, 
UEº‹Code
 &
°©us
) {

174 i‡(0 <
ödex
 && index <
cou¡
 && 
	`ísuªC≠acôy
(cou¡ + 1, 
°©us
)) {

175 
öt32_t
 
i
=
cou¡
; i>
ödex
; --i) {

176 
ñemíts
[
i
] =Élements[i-1];

178 
ñemíts
[
ödex
].
poöãr
 = 
NULL
;

179 
ñemíts
[
ödex
].
öãgî
 = 
ñem
;

180 ++
cou¡
;

183 
	}
}

185 * 
	gUVe˘‹
::
	$ñemítAt
(
öt32_t
 
ödex
) const {

186  (0 <
ödex
 && index < 
cou¡
Ë? 
ñemíts
[ödex].
poöãr
 : 0;

187 
	}
}

189 
öt32_t
 
	gUVe˘‹
::
	$ñemítAti
(
öt32_t
 
ödex
) const {

190  (0 <
ödex
 && index < 
cou¡
Ë? 
ñemíts
[ödex].
öãgî
 : 0;

191 
	}
}

193 
UBoﬁ
 
	gUVe˘‹
::
	$c⁄èösAŒ
(c⁄° 
UVe˘‹
& 
Ÿhî
) const {

194 
öt32_t
 
i
=0; i<
Ÿhî
.
	`size
(); ++i) {

195 i‡(
	`ödexOf
(
Ÿhî
.
ñemíts
[
i
]) < 0) {

196  
FALSE
;

199  
TRUE
;

200 
	}
}

202 
UBoﬁ
 
	gUVe˘‹
::
	$c⁄èösN⁄e
(c⁄° 
UVe˘‹
& 
Ÿhî
) const {

203 
öt32_t
 
i
=0; i<
Ÿhî
.
	`size
(); ++i) {

204 i‡(
	`ödexOf
(
Ÿhî
.
ñemíts
[
i
]) >= 0) {

205  
FALSE
;

208  
TRUE
;

209 
	}
}

211 
UBoﬁ
 
	gUVe˘‹
::
	$ªmoveAŒ
(c⁄° 
UVe˘‹
& 
Ÿhî
) {

212 
UBoﬁ
 
ch™ged
 = 
FALSE
;

213 
öt32_t
 
i
=0; i<
Ÿhî
.
	`size
(); ++i) {

214 
öt32_t
 
j
 = 
	`ödexOf
(
Ÿhî
.
ñemíts
[
i
]);

215 i‡(
j
 >= 0) {

216 
	`ªmoveEÀmítAt
(
j
);

217 
ch™ged
 = 
TRUE
;

220  
ch™ged
;

221 
	}
}

223 
UBoﬁ
 
	gUVe˘‹
::
	$ªèöAŒ
(c⁄° 
UVe˘‹
& 
Ÿhî
) {

224 
UBoﬁ
 
ch™ged
 = 
FALSE
;

225 
öt32_t
 
j
=
	`size
()-1; j>=0; --j) {

226 
öt32_t
 
i
 = 
Ÿhî
.
	`ödexOf
(
ñemíts
[
j
]);

227 i‡(
i
 < 0) {

228 
	`ªmoveEÀmítAt
(
j
);

229 
ch™ged
 = 
TRUE
;

232  
ch™ged
;

233 
	}
}

235 
	gUVe˘‹
::
	$ªmoveEÀmítAt
(
öt32_t
 
ödex
) {

236 * 
e
 = 
	`‹ph™EÀmítAt
(
ödex
);

237 i‡(
e
 !0 && 
dñëî
 != 0) {

238 (*
dñëî
)(
e
);

240 
	}
}

242 
UBoﬁ
 
	gUVe˘‹
::
	$ªmoveEÀmít
(* 
obj
) {

243 
öt32_t
 
i
 = 
	`ödexOf
(
obj
);

244 i‡(
i
 >= 0) {

245 
	`ªmoveEÀmítAt
(
i
);

246  
TRUE
;

248  
FALSE
;

249 
	}
}

251 
	gUVe˘‹
::
	$ªmoveAŒEÀmíts
() {

252 i‡(
dñëî
 != 0) {

253 
öt32_t
 
i
=0; i<
cou¡
; ++i) {

254 i‡(
ñemíts
[
i
].
poöãr
 != 0) {

255 (*
dñëî
)(
ñemíts
[
i
].
poöãr
);

259 
cou¡
 = 0;

260 
	}
}

262 
UBoﬁ
 
	gUVe˘‹
::
	$equÆs
(c⁄° 
UVe˘‹
 &
Ÿhî
) const {

263 
i
;

265 i‡(
this
->
cou¡
 !
Ÿhî
.count) {

266  
FALSE
;

268 i‡(
com∑ªr
 == 0) {

269 
i
=0; i<
cou¡
; i++) {

270 i‡(
ñemíts
[
i
].
poöãr
 !
Ÿhî
.elements[i].pointer) {

271  
FALSE
;

275 
UHashTok
 
key
;

276 
i
=0; i<
cou¡
; i++) {

277 
key
.
poöãr
 = &
Ÿhî
.
ñemíts
[
i
];

278 i‡(!(*
com∑ªr
)(
key
, 
ñemíts
[
i
])) {

279  
FALSE
;

283  
TRUE
;

284 
	}
}

288 
öt32_t
 
	gUVe˘‹
::
	$ödexOf
(* 
obj
, 
öt32_t
 
°¨tIndex
) const {

289 
UHashTok
 
key
;

290 
key
.
poöãr
 = 
obj
;

291  
	`ödexOf
(
key
, 
°¨tIndex
, 
HINT_KEY_POINTER
);

292 
	}
}

294 
öt32_t
 
	gUVe˘‹
::
	$ödexOf
(
öt32_t
 
obj
, i¡32_à
°¨tIndex
) const {

295 
UHashTok
 
key
;

296 
key
.
öãgî
 = 
obj
;

297  
	`ödexOf
(
key
, 
°¨tIndex
, 
HINT_KEY_INTEGER
);

298 
	}
}

301 
öt32_t
 
	gUVe˘‹
::
	$ödexOf
(
UHashTok
 
key
, 
öt32_t
 
°¨tIndex
, 
öt8_t
 
höt
) const {

302 
öt32_t
 
i
;

303 i‡(
com∑ªr
 != 0) {

304 
i
=
°¨tIndex
; i<
cou¡
; ++i) {

305 i‡((*
com∑ªr
)(
key
, 
ñemíts
[
i
])) {

306  
i
;

310 
i
=
°¨tIndex
; i<
cou¡
; ++i) {

314 i‡(
höt
 & 
HINT_KEY_POINTER
) {

315 i‡(
key
.
poöãr
 =
ñemíts
[
i
].pointer) {

316  
i
;

319 i‡(
key
.
öãgî
 =
ñemíts
[
i
].integer) {

320  
i
;

326 
	}
}

328 
UBoﬁ
 
	gUVe˘‹
::
	$ísuªC≠acôy
(
öt32_t
 
möimumC≠acôy
, 
UEº‹Code
 &
°©us
) {

329 i‡(
möimumC≠acôy
 < 0) {

330 
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

331  
FALSE
;

333 i‡(
ˇ∑côy
 < 
möimumC≠acôy
) {

334 i‡(
ˇ∑côy
 > (
INT32_MAX
 - 1) / 2) {

335 
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

336  
FALSE
;

338 
öt32_t
 
√wC≠
 = 
ˇ∑côy
 * 2;

339 i‡(
√wC≠
 < 
möimumC≠acôy
) {

340 
√wC≠
 = 
möimumC≠acôy
;

342 i‡(
√wC≠
 > (
öt32_t
)(
INT32_MAX
 / (
UHashTok
))) {

344 
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

345  
FALSE
;

347 
UHashTok
* 
√wEÀms
 = (UHashTok *)
	`u¥v_ªÆloc
(
ñemíts
, (UHashTok)*
√wC≠
);

348 i‡(
√wEÀms
 =
NULL
) {

350 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

351  
FALSE
;

353 
ñemíts
 = 
√wEÀms
;

354 
ˇ∑côy
 = 
√wC≠
;

356  
TRUE
;

357 
	}
}

365 
	gUVe˘‹
::
	$£tSize
(
öt32_t
 
√wSize
, 
UEº‹Code
 &
°©us
) {

366 
öt32_t
 
i
;

367 i‡(
√wSize
 < 0) {

370 i‡(
√wSize
 > 
cou¡
) {

371 i‡(!
	`ísuªC≠acôy
(
√wSize
, 
°©us
)) {

374 
UHashTok
 
em±y
;

375 
em±y
.
poöãr
 = 
NULL
;

376 
em±y
.
öãgî
 = 0;

377 
i
=
cou¡
; i<
√wSize
; ++i) {

378 
ñemíts
[
i
] = 
em±y
;

382 
i
=
cou¡
-1; i>=
√wSize
; --i) {

383 
	`ªmoveEÀmítAt
(
i
);

386 
cou¡
 = 
√wSize
;

387 
	}
}

392 ** 
	gUVe˘‹
::
	$toAºay
(** 
ªsu…
) const {

393 ** 
a
 = 
ªsu…
;

394 
i
=0; i<
cou¡
; ++i) {

395 *
a
++ = 
ñemíts
[
i
].
poöãr
;

397  
ªsu…
;

398 
	}
}

400 
UObje˘Dñëî
 *
	gUVe˘‹
::
	$£tDñëî
(
UObje˘Dñëî
 *
d
) {

401 
UObje˘Dñëî
 *
ﬁd
 = 
dñëî
;

402 
dñëî
 = 
d
;

403  
ﬁd
;

404 
	}
}

406 
UKeyCom∑øt‹
 *
	gUVe˘‹
::
	$£tCom∑ªr
(
UKeyCom∑øt‹
 *
d
) {

407 
UKeyCom∑øt‹
 *
ﬁd
 = 
com∑ªr
;

408 
com∑ªr
 = 
d
;

409  
ﬁd
;

410 
	}
}

421 * 
	gUVe˘‹
::
	$‹ph™EÀmítAt
(
öt32_t
 
ödex
) {

422 * 
e
 = 0;

423 i‡(0 <
ödex
 && index < 
cou¡
) {

424 
e
 = 
ñemíts
[
ödex
].
poöãr
;

425 
öt32_t
 
i
=
ödex
; i<
cou¡
-1; ++i) {

426 
ñemíts
[
i
] =Élements[i+1];

428 --
cou¡
;

431  
e
;

432 
	}
}

439 
	gUVe˘‹
::
	$s‹ãdIn£π
(* 
obj
, 
US‹tCom∑øt‹
 *
com∑ª
, 
UEº‹Code
& 
ec
) {

440 
UHashTok
 
tok
;

441 
tok
.
poöãr
 = 
obj
;

442 
	`s‹ãdIn£π
(
tok
, 
com∑ª
, 
ec
);

443 
	}
}

450 
	gUVe˘‹
::
	$s‹ãdIn£π
(
öt32_t
 
obj
, 
US‹tCom∑øt‹
 *
com∑ª
, 
UEº‹Code
& 
ec
) {

451 
UHashTok
 
tok
;

452 
tok
.
öãgî
 = 
obj
;

453 
	`s‹ãdIn£π
(
tok
, 
com∑ª
, 
ec
);

454 
	}
}

457 
	gUVe˘‹
::
	$s‹ãdIn£π
(
UHashTok
 
tok
, 
US‹tCom∑øt‹
 *
com∑ª
, 
UEº‹Code
& 
ec
) {

463 
öt32_t
 
mö
 = 0, 
max
 = 
cou¡
;

464 
mö
 !
max
) {

465 
öt32_t
 
¥obe
 = (
mö
 + 
max
) / 2;

466 
öt8_t
 
c
 = (*
com∑ª
)(
ñemíts
[
¥obe
], 
tok
);

467 i‡(
c
 > 0) {

468 
max
 = 
¥obe
;

471 
mö
 = 
¥obe
 + 1;

474 i‡(
	`ísuªC≠acôy
(
cou¡
 + 1, 
ec
)) {

475 
öt32_t
 
i
=
cou¡
; i>
mö
; --i) {

476 
ñemíts
[
i
] =Élements[i-1];

478 
ñemíts
[
mö
] = 
tok
;

479 ++
cou¡
;

481 
	}
}

494 
öt32_t
 
U_CALLCONV


495 
	$s‹tCom∑øt‹
(c⁄° *
c⁄ãxt
, c⁄° *
À·
, c⁄° *
right
) {

496 
US‹tCom∑øt‹
 *
com∑ª
 = *
°©ic_ˇ°
<US‹tCom∑øt‹ * c⁄° *>(
c⁄ãxt
);

497 
UHashTok
 
tok1
 = *
°©ic_ˇ°
<c⁄° UHashTok *>(
À·
);

498 
UHashTok
 
tok2
 = *
°©ic_ˇ°
<c⁄° UHashTok *>(
right
);

499 
öt32_t
 
ªsu…
 = (*
com∑ª
)(
tok1
, 
tok2
);

500  
ªsu…
;

501 
	}
}

508 
öt32_t
 
U_CALLCONV


509 
	$s‹tiCom∑øt‹
(c⁄° * , c⁄° *
À·
, c⁄° *
right
) {

510 c⁄° 
UHashTok
 *
tok1
 = 
°©ic_ˇ°
<c⁄° UHashTok *>(
À·
);

511 c⁄° 
UHashTok
 *
tok2
 = 
°©ic_ˇ°
<c⁄° UHashTok *>(
right
);

512 
öt32_t
 
ªsu…
 = 
tok1
->
öãgî
 < 
tok2
->integer? -1 :

513 
tok1
->
öãgî
 =
tok2
->integer? 0 : 1;

514  
ªsu…
;

515 
	}
}

523 
	gUVe˘‹
::
	$s‹ti
(
UEº‹Code
 &
ec
) {

524 i‡(
	`U_SUCCESS
(
ec
)) {

525 
	`u¥v_s‹tAºay
(
ñemíts
, 
cou¡
, (
UHashTok
),

526 
s‹tiCom∑øt‹
, 
NULL
, 
FALSE
, &
ec
);

528 
	}
}

545 
	gUVe˘‹
::
	$s‹t
(
US‹tCom∑øt‹
 *
com∑ª
, 
UEº‹Code
 &
ec
) {

546 i‡(
	`U_SUCCESS
(
ec
)) {

547 
	`u¥v_s‹tAºay
(
ñemíts
, 
cou¡
, (
UHashTok
),

548 
s‹tCom∑øt‹
, &
com∑ª
, 
FALSE
, &
ec
);

550 
	}
}

552 
	gU_NAMESPACE_END


	@uvector.h

12 #i‚de‡
UVECTOR_H


13 
	#UVECTOR_H


	)

15 
	~"unicode/uty≥s.h
"

16 
	~"unicode/uobje˘.h
"

17 
	~"uhash.h
"

19 
U_NAMESPACE_BEGIN


28 
öt8_t
 
	tU_CALLCONV
 
	tUS‹tCom∑øt‹
(
	tUHashTok
 
	ttok1
,

29 
	tUHashTok
 
	ttok2
);

37 
	tU_CALLCONV
 
	tUTokíAssig√r
(
	tUHashTok
 *
	td°
,

38 
	tUHashTok
 *
	t§c
);

90 ˛as†
	cU_COMMON_API
 
	mUVe˘‹
 : 
public
 
UObje˘
 {

98 
¥iv©e
:

99 
öt32_t
 
cou¡
;

101 
öt32_t
 
	mˇ∑côy
;

103 
UHashTok
* 
	mñemíts
;

105 
UObje˘Dñëî
 *
	mdñëî
;

107 
UKeyCom∑øt‹
 *
	mcom∑ªr
;

109 
	mpublic
:

110 
UVe˘‹
(
UEº‹Code
 &
°©us
);

112 
UVe˘‹
(
öt32_t
 
öôülC≠acôy
, 
UEº‹Code
 &
°©us
);

114 
UVe˘‹
(
UObje˘Dñëî
 *
d
, 
UKeyCom∑øt‹
 *
c
, 
UEº‹Code
 &
°©us
);

116 
UVe˘‹
(
UObje˘Dñëî
 *
d
, 
UKeyCom∑øt‹
 *
c
, 
öt32_t
 
öôülC≠acôy
, 
UEº‹Code
 &
°©us
);

118 
	mvútuÆ
 ~
UVe˘‹
();

124 
assign
(c⁄° 
UVe˘‹
& 
Ÿhî
, 
UTokíAssig√r
 *assign, 
UEº‹Code
 &
ec
);

131 
UBoﬁ
 
	m›î©‹
==(c⁄° 
UVe˘‹
& 
Ÿhî
);

136 
ölöe
 
UBoﬁ
 
	m›î©‹
!=(c⁄° 
UVe˘‹
& 
Ÿhî
);

142 
addEÀmít
(* 
obj
, 
UEº‹Code
 &
°©us
);

144 
addEÀmít
(
öt32_t
 
ñem
, 
UEº‹Code
 &
°©us
);

146 
£tEÀmítAt
(* 
obj
, 
öt32_t
 
ödex
);

148 
£tEÀmítAt
(
öt32_t
 
ñem
, i¡32_à
ödex
);

150 
ö£πEÀmítAt
(* 
obj
, 
öt32_t
 
ödex
, 
UEº‹Code
 &
°©us
);

152 
ö£πEÀmítAt
(
öt32_t
 
ñem
, i¡32_à
ödex
, 
UEº‹Code
 &
°©us
);

154 * 
	$ñemítAt
(
öt32_t
 
ödex
) const;

156 
öt32_t
 
	$ñemítAti
(
öt32_t
 
ödex
) const;

158 
UBoﬁ
 
	$equÆs
(c⁄° 
UVe˘‹
 &
Ÿhî
) const;

160 * 
	$fú°EÀmít
() const;

162 * 
	$œ°EÀmít
() const;

164 
öt32_t
 
	$œ°EÀmíti
() const;

166 
öt32_t
 
	$ödexOf
(* 
obj
, 
öt32_t
 
°¨tIndex
 = 0) const;

168 
öt32_t
 
	$ödexOf
(
öt32_t
 
obj
, i¡32_à
°¨tIndex
 = 0) const;

170 
UBoﬁ
 
	$c⁄èös
(* 
obj
) const;

172 
UBoﬁ
 
	$c⁄èös
(
öt32_t
 
obj
) const;

174 
UBoﬁ
 
	$c⁄èösAŒ
(c⁄° 
UVe˘‹
& 
Ÿhî
) const;

176 
UBoﬁ
 
	`ªmoveAŒ
(c⁄° 
UVe˘‹
& 
Ÿhî
);

178 
UBoﬁ
 
	`ªèöAŒ
(c⁄° 
UVe˘‹
& 
Ÿhî
);

180 
	`ªmoveEÀmítAt
(
öt32_t
 
ödex
);

182 
UBoﬁ
 
	`ªmoveEÀmít
(* 
obj
);

184 
	`ªmoveAŒEÀmíts
();

186 
öt32_t
 
	$size
() const;

188 
UBoﬁ
 
	$isEm±y
() const;

190 
UBoﬁ
 
	`ísuªC≠acôy
(
öt32_t
 
möimumC≠acôy
, 
UEº‹Code
 &
°©us
);

198 
	`£tSize
(
öt32_t
 
√wSize
, 
UEº‹Code
 &
°©us
);

203 ** 
	$toAºay
(** 
ªsu…
) const;

209 
UObje˘Dñëî
 *
	`£tDñëî
(UObje˘Dñëî *
d
);

211 
UKeyCom∑øt‹
 *
	`£tCom∑ªr
(UKeyCom∑øt‹ *
c
);

213 * 
›î©‹
[](
öt32_t
 
ödex
) const;

224 * 
	`‹ph™EÀmítAt
(
öt32_t
 
ödex
);

232 
UBoﬁ
 
	$c⁄èösN⁄e
(c⁄° 
UVe˘‹
& 
Ÿhî
) const;

239 
	`s‹ãdIn£π
(* 
obj
, 
US‹tCom∑øt‹
 *
com∑ª
, 
UEº‹Code
& 
ec
);

246 
	`s‹ãdIn£π
(
öt32_t
 
obj
, 
US‹tCom∑øt‹
 *
com∑ª
, 
UEº‹Code
& 
ec
);

252 
	`s‹ti
(
UEº‹Code
 &
ec
);

260 
	`s‹t
(
US‹tCom∑øt‹
 *
com∑ª
, 
UEº‹Code
 &
ec
);

265 
UCœssID
 
U_EXPORT2
 
	`gëSèticCœssID
();

270 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const;

272 
¥iv©e
:

273 
	`_öô
(
öt32_t
 
öôülC≠acôy
, 
UEº‹Code
 &
°©us
);

275 
öt32_t
 
	$ödexOf
(
UHashTok
 
key
, 
öt32_t
 
°¨tIndex
 = 0, 
öt8_t
 
höt
 = 0) const;

277 
	`s‹ãdIn£π
(
UHashTok
 
tok
, 
US‹tCom∑øt‹
 *
com∑ª
, 
UEº‹Code
& 
ec
);

280 
	`UVe˘‹
(c⁄° 
UVe˘‹
&);

283 
UVe˘‹
& 
›î©‹
=(const UVector&);

304 ˛as†
	cU_COMMON_API
 
USèck
 : 
public
 
UVe˘‹
 {

305 
public
:

306 
	`USèck
(
UEº‹Code
 &
°©us
);

308 
	`USèck
(
öt32_t
 
öôülC≠acôy
, 
UEº‹Code
 &
°©us
);

310 
	`USèck
(
UObje˘Dñëî
 *
d
, 
UKeyCom∑øt‹
 *
c
, 
UEº‹Code
 &
°©us
);

312 
	`USèck
(
UObje˘Dñëî
 *
d
, 
UKeyCom∑øt‹
 *
c
, 
öt32_t
 
öôülC≠acôy
, 
UEº‹Code
 &
°©us
);

314 
vútuÆ
 ~
	`USèck
();

319 
UBoﬁ
 
	$em±y
() const;

321 * 
	$≥ek
() const;

323 
öt32_t
 
	$≥eki
() const;

325 * 
	`p›
();

327 
öt32_t
 
	`p›i
();

329 * 
	`push
(* 
obj
, 
UEº‹Code
 &
°©us
);

331 
öt32_t
 
	`push
(öt32_à
i
, 
UEº‹Code
 &
°©us
);

337 
öt32_t
 
	$£¨ch
(* 
obj
) const;

342 
UCœssID
 
U_EXPORT2
 
	`gëSèticCœssID
();

347 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const;

349 
¥iv©e
:

351 
	`USèck
(c⁄° 
USèck
&);

354 
USèck
& 
›î©‹
=(const UStack&);

360 
ölöe
 
öt32_t
 
UVe˘‹
::
	$size
() const {

361  
cou¡
;

362 
	}
}

364 
ölöe
 
UBoﬁ
 
	gUVe˘‹
::
	$isEm±y
() const {

365  
cou¡
 == 0;

366 
	}
}

368 
ölöe
 
UBoﬁ
 
	gUVe˘‹
::
	$c⁄èös
(* 
obj
) const {

369  
	`ödexOf
(
obj
) >= 0;

370 
	}
}

372 
ölöe
 
UBoﬁ
 
	gUVe˘‹
::
	$c⁄èös
(
öt32_t
 
obj
) const {

373  
	`ödexOf
(
obj
) >= 0;

374 
	}
}

376 
ölöe
 * 
	gUVe˘‹
::
	$fú°EÀmít
() const {

377  
	`ñemítAt
(0);

378 
	}
}

380 
ölöe
 * 
	gUVe˘‹
::
	$œ°EÀmít
() const {

381  
	`ñemítAt
(
cou¡
-1);

382 
	}
}

384 
ölöe
 
öt32_t
 
	gUVe˘‹
::
	$œ°EÀmíti
() const {

385  
	`ñemítAti
(
cou¡
-1);

386 
	}
}

388 
ölöe
 * 
	gUVe˘‹
::
›î©‹
[](
öt32_t
 
ödex
) const {

389  
ñemítAt
(
ödex
);

392 
ölöe
 
UBoﬁ
 
	gUVe˘‹
::
›î©‹
!=(c⁄° 
UVe˘‹
& 
Ÿhî
) {

393  !
›î©‹
==(
Ÿhî
);

398 
ölöe
 
UBoﬁ
 
	gUSèck
::
	$em±y
() const {

399  
	`isEm±y
();

400 
	}
}

402 
ölöe
 * 
	gUSèck
::
	$≥ek
() const {

403  
	`œ°EÀmít
();

404 
	}
}

406 
ölöe
 
öt32_t
 
	gUSèck
::
	$≥eki
() const {

407  
	`œ°EÀmíti
();

408 
	}
}

410 
ölöe
 * 
	gUSèck
::
	$push
(* 
obj
, 
UEº‹Code
 &
°©us
) {

411 
	`addEÀmít
(
obj
, 
°©us
);

412  
obj
;

413 
	}
}

415 
ölöe
 
öt32_t
 
	gUSèck
::
	$push
(
öt32_t
 
i
, 
UEº‹Code
 &
°©us
) {

416 
	`addEÀmít
(
i
, 
°©us
);

417  
i
;

418 
	}
}

420 
	gU_NAMESPACE_END


	@uvectr32.cpp

11 
	~"uve˘r32.h
"

12 
	~"cmem‹y.h
"

13 
	~"putûimp.h
"

15 
	gU_NAMESPACE_BEGIN


17 
	#DEFAULT_CAPACITY
 8

	)

25 
	$UOBJECT_DEFINE_RTTI_IMPLEMENTATION
(
UVe˘‹32
)

27 
UVe˘‹32
::
	$UVe˘‹32
(
UEº‹Code
 &
°©us
) :

28 
	`cou¡
(0),

29 
	`ˇ∑côy
(0),

30 
	`maxC≠acôy
(0),

31 
	$ñemíts
(
NULL
)

33 
	`_öô
(
DEFAULT_CAPACITY
, 
°©us
);

34 
	}
}

36 
	gUVe˘‹32
::
	$UVe˘‹32
(
öt32_t
 
öôülC≠acôy
, 
UEº‹Code
 &
°©us
) :

37 
	`cou¡
(0),

38 
	`ˇ∑côy
(0),

39 
	`maxC≠acôy
(0),

40 
	$ñemíts
(0)

42 
	`_öô
(
öôülC≠acôy
, 
°©us
);

43 
	}
}

47 
	gUVe˘‹32
::
	$_öô
(
öt32_t
 
öôülC≠acôy
, 
UEº‹Code
 &
°©us
) {

49 i‡(
öôülC≠acôy
 < 1) {

50 
öôülC≠acôy
 = 
DEFAULT_CAPACITY
;

52 i‡(
maxC≠acôy
>0 && maxC≠acôy<
öôülC≠acôy
) {

53 
öôülC≠acôy
 = 
maxC≠acôy
;

55 i‡(
öôülC≠acôy
 > (
öt32_t
)(
INT32_MAX
 / (int32_t))) {

56 
öôülC≠acôy
 = 
	`u¥v_mö
(
DEFAULT_CAPACITY
, 
maxC≠acôy
);

58 
ñemíts
 = (
öt32_t
 *)
	`u¥v_mÆloc
((öt32_t)*
öôülC≠acôy
);

59 i‡(
ñemíts
 == 0) {

60 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

62 
ˇ∑côy
 = 
öôülC≠acôy
;

64 
	}
}

66 
	gUVe˘‹32
::~
	$UVe˘‹32
() {

67 
	`u¥v_‰ì
(
ñemíts
);

68 
ñemíts
 = 0;

69 
	}
}

74 
	gUVe˘‹32
::
	$assign
(c⁄° 
UVe˘‹32
& 
Ÿhî
, 
UEº‹Code
 &
ec
) {

75 i‡(
	`ísuªC≠acôy
(
Ÿhî
.
cou¡
, 
ec
)) {

76 
	`£tSize
(
Ÿhî
.
cou¡
);

77 
öt32_t
 
i
=0; i<
Ÿhî
.
cou¡
; ++i) {

78 
ñemíts
[
i
] = 
Ÿhî
.elements[i];

81 
	}
}

84 
UBoﬁ
 
	gUVe˘‹32
::
›î©‹
==(c⁄° 
UVe˘‹32
& 
Ÿhî
) {

85 
öt32_t
 
i
;

86 i‡(
	gcou¡
 !
Ÿhî
.
cou¡
Ë 
FALSE
;

87 
	gi
=0; i<
	gcou¡
; ++i) {

88 i‡(
	gñemíts
[
i
] !
Ÿhî
.
ñemíts
[i]) {

89  
FALSE
;

92  
	gTRUE
;

96 
	gUVe˘‹32
::
	$£tEÀmítAt
(
öt32_t
 
ñem
, i¡32_à
ödex
) {

97 i‡(0 <
ödex
 && index < 
cou¡
) {

98 
ñemíts
[
ödex
] = 
ñem
;

101 
	}
}

103 
	gUVe˘‹32
::
	$ö£πEÀmítAt
(
öt32_t
 
ñem
, i¡32_à
ödex
, 
UEº‹Code
 &
°©us
) {

105 i‡(0 <
ödex
 && index <
cou¡
 && 
	`ísuªC≠acôy
(cou¡ + 1, 
°©us
)) {

106 
öt32_t
 
i
=
cou¡
; i>
ödex
; --i) {

107 
ñemíts
[
i
] =Élements[i-1];

109 
ñemíts
[
ödex
] = 
ñem
;

110 ++
cou¡
;

113 
	}
}

115 
UBoﬁ
 
	gUVe˘‹32
::
	$c⁄èösAŒ
(c⁄° 
UVe˘‹32
& 
Ÿhî
) const {

116 
öt32_t
 
i
=0; i<
Ÿhî
.
	`size
(); ++i) {

117 i‡(
	`ödexOf
(
Ÿhî
.
ñemíts
[
i
]) < 0) {

118  
FALSE
;

121  
TRUE
;

122 
	}
}

124 
UBoﬁ
 
	gUVe˘‹32
::
	$c⁄èösN⁄e
(c⁄° 
UVe˘‹32
& 
Ÿhî
) const {

125 
öt32_t
 
i
=0; i<
Ÿhî
.
	`size
(); ++i) {

126 i‡(
	`ödexOf
(
Ÿhî
.
ñemíts
[
i
]) >= 0) {

127  
FALSE
;

130  
TRUE
;

131 
	}
}

133 
UBoﬁ
 
	gUVe˘‹32
::
	$ªmoveAŒ
(c⁄° 
UVe˘‹32
& 
Ÿhî
) {

134 
UBoﬁ
 
ch™ged
 = 
FALSE
;

135 
öt32_t
 
i
=0; i<
Ÿhî
.
	`size
(); ++i) {

136 
öt32_t
 
j
 = 
	`ödexOf
(
Ÿhî
.
ñemíts
[
i
]);

137 i‡(
j
 >= 0) {

138 
	`ªmoveEÀmítAt
(
j
);

139 
ch™ged
 = 
TRUE
;

142  
ch™ged
;

143 
	}
}

145 
UBoﬁ
 
	gUVe˘‹32
::
	$ªèöAŒ
(c⁄° 
UVe˘‹32
& 
Ÿhî
) {

146 
UBoﬁ
 
ch™ged
 = 
FALSE
;

147 
öt32_t
 
j
=
	`size
()-1; j>=0; --j) {

148 
öt32_t
 
i
 = 
Ÿhî
.
	`ödexOf
(
ñemíts
[
j
]);

149 i‡(
i
 < 0) {

150 
	`ªmoveEÀmítAt
(
j
);

151 
ch™ged
 = 
TRUE
;

154  
ch™ged
;

155 
	}
}

157 
	gUVe˘‹32
::
	$ªmoveEÀmítAt
(
öt32_t
 
ödex
) {

158 i‡(
ödex
 >= 0) {

159 
öt32_t
 
i
=
ödex
; i<
cou¡
-1; ++i) {

160 
ñemíts
[
i
] =Élements[i+1];

162 --
cou¡
;

164 
	}
}

166 
	gUVe˘‹32
::
	$ªmoveAŒEÀmíts
() {

167 
cou¡
 = 0;

168 
	}
}

170 
UBoﬁ
 
	gUVe˘‹32
::
	$equÆs
(c⁄° 
UVe˘‹32
 &
Ÿhî
) const {

171 
i
;

173 i‡(
this
->
cou¡
 !
Ÿhî
.count) {

174  
FALSE
;

176 
i
=0; i<
cou¡
; i++) {

177 i‡(
ñemíts
[
i
] !
Ÿhî
.elements[i]) {

178  
FALSE
;

181  
TRUE
;

182 
	}
}

187 
öt32_t
 
	gUVe˘‹32
::
	$ödexOf
(
öt32_t
 
key
, i¡32_à
°¨tIndex
) const {

188 
öt32_t
 
i
;

189 
i
=
°¨tIndex
; i<
cou¡
; ++i) {

190 i‡(
key
 =
ñemíts
[
i
]) {

191  
i
;

195 
	}
}

198 
UBoﬁ
 
	gUVe˘‹32
::
	$ex∑ndC≠acôy
(
öt32_t
 
möimumC≠acôy
, 
UEº‹Code
 &
°©us
) {

199 i‡(
möimumC≠acôy
 < 0) {

200 
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

201  
FALSE
;

203 i‡(
ˇ∑côy
 >
möimumC≠acôy
) {

204  
TRUE
;

206 i‡(
maxC≠acôy
>0 && 
möimumC≠acôy
>maxCapacity) {

207 
°©us
 = 
U_BUFFER_OVERFLOW_ERROR
;

208  
FALSE
;

210 i‡(
ˇ∑côy
 > (
INT32_MAX
 - 1) / 2) {

211 
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

212  
FALSE
;

214 
öt32_t
 
√wC≠
 = 
ˇ∑côy
 * 2;

215 i‡(
√wC≠
 < 
möimumC≠acôy
) {

216 
√wC≠
 = 
möimumC≠acôy
;

218 i‡(
maxC≠acôy
 > 0 && 
√wC≠
 > maxCapacity) {

219 
√wC≠
 = 
maxC≠acôy
;

221 i‡(
√wC≠
 > (
öt32_t
)(
INT32_MAX
 / (int32_t))) {

223 
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

224  
FALSE
;

226 
öt32_t
* 
√wEÀms
 = (öt32_à*)
	`u¥v_ªÆloc
(
ñemíts
, (öt32_t)*
√wC≠
);

227 i‡(
√wEÀms
 =
NULL
) {

229 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

230  
FALSE
;

232 
ñemíts
 = 
√wEÀms
;

233 
ˇ∑côy
 = 
√wC≠
;

234  
TRUE
;

235 
	}
}

237 
	gUVe˘‹32
::
	$£tMaxC≠acôy
(
öt32_t
 
limô
) {

238 
	`U_ASSERT
(
limô
 >= 0);

239 i‡(
limô
 < 0) {

240 
limô
 = 0;

242 i‡(
limô
 > (
öt32_t
)(
INT32_MAX
 / (int32_t))) {

246 
maxC≠acôy
 = 
limô
;

247 i‡(
ˇ∑côy
 <
maxC≠acôy
 || maxCapacity == 0) {

254 
öt32_t
* 
√wEÀms
 = (öt32_à*)
	`u¥v_ªÆloc
(
ñemíts
, (öt32_t)*
maxC≠acôy
);

255 i‡(
√wEÀms
 =
NULL
) {

260 
ñemíts
 = 
√wEÀms
;

261 
ˇ∑côy
 = 
maxC≠acôy
;

262 i‡(
cou¡
 > 
ˇ∑côy
) {

263 
cou¡
 = 
ˇ∑côy
;

265 
	}
}

273 
	gUVe˘‹32
::
	$£tSize
(
öt32_t
 
√wSize
) {

274 
öt32_t
 
i
;

275 i‡(
√wSize
 < 0) {

278 i‡(
√wSize
 > 
cou¡
) {

279 
UEº‹Code
 
ec
 = 
U_ZERO_ERROR
;

280 i‡(!
	`ísuªC≠acôy
(
√wSize
, 
ec
)) {

283 
i
=
cou¡
; i<
√wSize
; ++i) {

284 
ñemíts
[
i
] = 0;

287 
cou¡
 = 
√wSize
;

288 
	}
}

298 
	gUVe˘‹32
::
	$s‹ãdIn£π
(
öt32_t
 
tok
, 
UEº‹Code
& 
ec
) {

304 
öt32_t
 
mö
 = 0, 
max
 = 
cou¡
;

305 
mö
 !
max
) {

306 
öt32_t
 
¥obe
 = (
mö
 + 
max
) / 2;

309 i‡(
ñemíts
[
¥obe
] > 
tok
) {

310 
max
 = 
¥obe
;

313 
mö
 = 
¥obe
 + 1;

316 i‡(
	`ísuªC≠acôy
(
cou¡
 + 1, 
ec
)) {

317 
öt32_t
 
i
=
cou¡
; i>
mö
; --i) {

318 
ñemíts
[
i
] =Élements[i-1];

320 
ñemíts
[
mö
] = 
tok
;

321 ++
cou¡
;

323 
	}
}

329 
	gU_NAMESPACE_END


	@uvectr32.h

14 #i‚de‡
UVECTOR32_H


15 
	#UVECTOR32_H


	)

17 
	~"unicode/uty≥s.h
"

18 
	~"unicode/uobje˘.h
"

19 
	~"uhash.h
"

20 
	~"uas£π.h
"

22 
U_NAMESPACE_BEGIN


59 ˛as†
	cU_COMMON_API
 
	mUVe˘‹32
 : 
public
 
UObje˘
 {

60 
¥iv©e
:

61 
öt32_t
 
cou¡
;

63 
öt32_t
 
	mˇ∑côy
;

65 
öt32_t
 
	mmaxC≠acôy
;

67 
öt32_t
* 
	mñemíts
;

69 
	mpublic
:

70 
UVe˘‹32
(
UEº‹Code
 &
°©us
);

72 
UVe˘‹32
(
öt32_t
 
öôülC≠acôy
, 
UEº‹Code
 &
°©us
);

74 
	mvútuÆ
 ~
UVe˘‹32
();

80 
assign
(c⁄° 
UVe˘‹32
& 
Ÿhî
, 
UEº‹Code
 &
ec
);

87 
UBoﬁ
 
	m›î©‹
==(c⁄° 
UVe˘‹32
& 
Ÿhî
);

92 
ölöe
 
UBoﬁ
 
	m›î©‹
!=(c⁄° 
UVe˘‹32
& 
Ÿhî
);

98 
addEÀmít
(
öt32_t
 
ñem
, 
UEº‹Code
 &
°©us
);

100 
£tEÀmítAt
(
öt32_t
 
ñem
, i¡32_à
ödex
);

102 
ö£πEÀmítAt
(
öt32_t
 
ñem
, i¡32_à
ödex
, 
UEº‹Code
 &
°©us
);

104 
öt32_t
 
	$ñemítAti
(
öt32_t
 
ödex
) const;

106 
UBoﬁ
 
	$equÆs
(c⁄° 
UVe˘‹32
 &
Ÿhî
) const;

108 
öt32_t
 
	$œ°EÀmíti
() const;

110 
öt32_t
 
	$ödexOf
(
öt32_t
 
ñem
, i¡32_à
°¨tIndex
 = 0) const;

112 
UBoﬁ
 
	$c⁄èös
(
öt32_t
 
ñem
) const;

114 
UBoﬁ
 
	$c⁄èösAŒ
(c⁄° 
UVe˘‹32
& 
Ÿhî
) const;

116 
UBoﬁ
 
	`ªmoveAŒ
(c⁄° 
UVe˘‹32
& 
Ÿhî
);

118 
UBoﬁ
 
	`ªèöAŒ
(c⁄° 
UVe˘‹32
& 
Ÿhî
);

120 
	`ªmoveEÀmítAt
(
öt32_t
 
ödex
);

122 
	`ªmoveAŒEÀmíts
();

124 
öt32_t
 
	$size
() const;

126 
UBoﬁ
 
	$isEm±y
() const;

129 
ölöe
 
UBoﬁ
 
	`ísuªC≠acôy
(
öt32_t
 
möimumC≠acôy
, 
UEº‹Code
 &
°©us
);

132 
UBoﬁ
 
	`ex∑ndC≠acôy
(
öt32_t
 
möimumC≠acôy
, 
UEº‹Code
 &
°©us
);

140 
	`£tSize
(
öt32_t
 
√wSize
);

152 
UBoﬁ
 
	$c⁄èösN⁄e
(c⁄° 
UVe˘‹32
& 
Ÿhî
) const;

159 
	`s‹ãdIn£π
(
öt32_t
 
ñem
, 
UEº‹Code
& 
ec
);

164 
öt32_t
 *
	$gëBuf„r
() const;

172 
	`£tMaxC≠acôy
(
öt32_t
 
limô
);

177 
UCœssID
 
U_EXPORT2
 
	`gëSèticCœssID
();

182 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const;

184 
¥iv©e
:

185 
	`_öô
(
öt32_t
 
öôülC≠acôy
, 
UEº‹Code
 &
°©us
);

188 
	`UVe˘‹32
(c⁄° 
UVe˘‹32
&);

191 
UVe˘‹32
& 
›î©‹
=(const UVector32&);

197 
public
:

198 
UBoﬁ
 
	$em±y
() const;

200 
öt32_t
 
	$≥eki
() const;

202 
öt32_t
 
	`p›i
();

204 
öt32_t
 
	`push
(öt32_à
i
, 
UEº‹Code
 &
°©us
);

206 
öt32_t
 *
	`ª£rveBlock
(öt32_à
size
, 
UEº‹Code
 &
°©us
);

207 
öt32_t
 *
	`p›Føme
(öt32_à
size
);

213 
ölöe
 
UBoﬁ
 
UVe˘‹32
::
	$ísuªC≠acôy
(
öt32_t
 
möimumC≠acôy
, 
UEº‹Code
 &
°©us
) {

214 i‡((
möimumC≠acôy
 >0Ë&& (
ˇ∑côy
 >= minimumCapacity)) {

215  
TRUE
;

217  
	`ex∑ndC≠acôy
(
möimumC≠acôy
, 
°©us
);

219 
	}
}

221 
ölöe
 
öt32_t
 
	gUVe˘‹32
::
	$ñemítAti
(
öt32_t
 
ödex
) const {

222  (0 <
ödex
 && index < 
cou¡
Ë? 
ñemíts
[index] : 0;

223 
	}
}

226 
ölöe
 
	gUVe˘‹32
::
	$addEÀmít
(
öt32_t
 
ñem
, 
UEº‹Code
 &
°©us
) {

227 i‡(
	`ísuªC≠acôy
(
cou¡
 + 1, 
°©us
)) {

228 
ñemíts
[
cou¡
] = 
ñem
;

229 
cou¡
++;

231 
	}
}

233 
ölöe
 
öt32_t
 *
	gUVe˘‹32
::
	$ª£rveBlock
(
öt32_t
 
size
, 
UEº‹Code
 &
°©us
) {

234 i‡(
	`ísuªC≠acôy
(
cou¡
+
size
, 
°©us
Ë=
FALSE
) {

235  
NULL
;

237 
öt32_t
 *
Ω
 = 
ñemíts
+
cou¡
;

238 
cou¡
 +
size
;

239  
Ω
;

240 
	}
}

242 
ölöe
 
öt32_t
 *
	gUVe˘‹32
::
	$p›Føme
(
öt32_t
 
size
) {

243 
	`U_ASSERT
(
cou¡
 >
size
);

244 
cou¡
 -
size
;

245 i‡(
cou¡
 < 0) {

246 
cou¡
 = 0;

248  
ñemíts
+
cou¡
-
size
;

249 
	}
}

253 
ölöe
 
öt32_t
 
	gUVe˘‹32
::
	$size
() const {

254  
cou¡
;

255 
	}
}

257 
ölöe
 
UBoﬁ
 
	gUVe˘‹32
::
	$isEm±y
() const {

258  
cou¡
 == 0;

259 
	}
}

261 
ölöe
 
UBoﬁ
 
	gUVe˘‹32
::
	$c⁄èös
(
öt32_t
 
obj
) const {

262  
	`ödexOf
(
obj
) >= 0;

263 
	}
}

265 
ölöe
 
öt32_t
 
	gUVe˘‹32
::
	$œ°EÀmíti
() const {

266  
	`ñemítAti
(
cou¡
-1);

267 
	}
}

269 
ölöe
 
UBoﬁ
 
	gUVe˘‹32
::
›î©‹
!=(c⁄° 
UVe˘‹32
& 
Ÿhî
) {

270  !
›î©‹
==(
Ÿhî
);

273 
ölöe
 
öt32_t
 *
	gUVe˘‹32
::
	$gëBuf„r
() const {

274  
ñemíts
;

275 
	}
}

280 
ölöe
 
UBoﬁ
 
	gUVe˘‹32
::
	$em±y
() const {

281  
	`isEm±y
();

282 
	}
}

284 
ölöe
 
öt32_t
 
	gUVe˘‹32
::
	$≥eki
() const {

285  
	`œ°EÀmíti
();

286 
	}
}

288 
ölöe
 
öt32_t
 
	gUVe˘‹32
::
	$push
(
öt32_t
 
i
, 
UEº‹Code
 &
°©us
) {

289 
	`addEÀmít
(
i
, 
°©us
);

290  
i
;

291 
	}
}

293 
ölöe
 
öt32_t
 
	gUVe˘‹32
::
	$p›i
() {

294 
öt32_t
 
ªsu…
 = 0;

295 i‡(
cou¡
 > 0) {

296 
cou¡
--;

297 
ªsu…
 = 
ñemíts
[
cou¡
];

299  
ªsu…
;

300 
	}
}

302 
	gU_NAMESPACE_END


	@uvectr64.cpp

8 
	~"uve˘r64.h
"

9 
	~"cmem‹y.h
"

10 
	~"putûimp.h
"

12 
	gU_NAMESPACE_BEGIN


14 
	#DEFAULT_CAPACITY
 8

	)

22 
	$UOBJECT_DEFINE_RTTI_IMPLEMENTATION
(
UVe˘‹64
)

24 
UVe˘‹64
::
	$UVe˘‹64
(
UEº‹Code
 &
°©us
) :

25 
	`cou¡
(0),

26 
	`ˇ∑côy
(0),

27 
	`maxC≠acôy
(0),

28 
	$ñemíts
(
NULL
)

30 
	`_öô
(
DEFAULT_CAPACITY
, 
°©us
);

31 
	}
}

33 
	gUVe˘‹64
::
	$UVe˘‹64
(
öt32_t
 
öôülC≠acôy
, 
UEº‹Code
 &
°©us
) :

34 
	`cou¡
(0),

35 
	`ˇ∑côy
(0),

36 
	`maxC≠acôy
(0),

37 
	$ñemíts
(0)

39 
	`_öô
(
öôülC≠acôy
, 
°©us
);

40 
	}
}

44 
	gUVe˘‹64
::
	$_öô
(
öt32_t
 
öôülC≠acôy
, 
UEº‹Code
 &
°©us
) {

46 i‡(
öôülC≠acôy
 < 1) {

47 
öôülC≠acôy
 = 
DEFAULT_CAPACITY
;

49 i‡(
maxC≠acôy
>0 && maxC≠acôy<
öôülC≠acôy
) {

50 
öôülC≠acôy
 = 
maxC≠acôy
;

52 i‡(
öôülC≠acôy
 > (
öt32_t
)(
INT32_MAX
 / (
öt64_t
))) {

53 
öôülC≠acôy
 = 
	`u¥v_mö
(
DEFAULT_CAPACITY
, 
maxC≠acôy
);

55 
ñemíts
 = (
öt64_t
 *)
	`u¥v_mÆloc
((öt64_t)*
öôülC≠acôy
);

56 i‡(
ñemíts
 == 0) {

57 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

59 
ˇ∑côy
 = 
öôülC≠acôy
;

61 
	}
}

63 
	gUVe˘‹64
::~
	$UVe˘‹64
() {

64 
	`u¥v_‰ì
(
ñemíts
);

65 
ñemíts
 = 0;

66 
	}
}

71 
	gUVe˘‹64
::
	$assign
(c⁄° 
UVe˘‹64
& 
Ÿhî
, 
UEº‹Code
 &
ec
) {

72 i‡(
	`ísuªC≠acôy
(
Ÿhî
.
cou¡
, 
ec
)) {

73 
	`£tSize
(
Ÿhî
.
cou¡
);

74 
öt32_t
 
i
=0; i<
Ÿhî
.
cou¡
; ++i) {

75 
ñemíts
[
i
] = 
Ÿhî
.elements[i];

78 
	}
}

81 
UBoﬁ
 
	gUVe˘‹64
::
›î©‹
==(c⁄° 
UVe˘‹64
& 
Ÿhî
) {

82 
öt32_t
 
i
;

83 i‡(
	gcou¡
 !
Ÿhî
.
cou¡
Ë 
FALSE
;

84 
	gi
=0; i<
	gcou¡
; ++i) {

85 i‡(
	gñemíts
[
i
] !
Ÿhî
.
ñemíts
[i]) {

86  
FALSE
;

89  
	gTRUE
;

93 
	gUVe˘‹64
::
	$£tEÀmítAt
(
öt64_t
 
ñem
, 
öt32_t
 
ödex
) {

94 i‡(0 <
ödex
 && index < 
cou¡
) {

95 
ñemíts
[
ödex
] = 
ñem
;

98 
	}
}

100 
	gUVe˘‹64
::
	$ö£πEÀmítAt
(
öt64_t
 
ñem
, 
öt32_t
 
ödex
, 
UEº‹Code
 &
°©us
) {

102 i‡(0 <
ödex
 && index <
cou¡
 && 
	`ísuªC≠acôy
(cou¡ + 1, 
°©us
)) {

103 
öt32_t
 
i
=
cou¡
; i>
ödex
; --i) {

104 
ñemíts
[
i
] =Élements[i-1];

106 
ñemíts
[
ödex
] = 
ñem
;

107 ++
cou¡
;

110 
	}
}

112 
	gUVe˘‹64
::
	$ªmoveAŒEÀmíts
() {

113 
cou¡
 = 0;

114 
	}
}

116 
UBoﬁ
 
	gUVe˘‹64
::
	$ex∑ndC≠acôy
(
öt32_t
 
möimumC≠acôy
, 
UEº‹Code
 &
°©us
) {

117 i‡(
möimumC≠acôy
 < 0) {

118 
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

119  
FALSE
;

121 i‡(
ˇ∑côy
 >
möimumC≠acôy
) {

122  
TRUE
;

124 i‡(
maxC≠acôy
>0 && 
möimumC≠acôy
>maxCapacity) {

125 
°©us
 = 
U_BUFFER_OVERFLOW_ERROR
;

126  
FALSE
;

128 i‡(
ˇ∑côy
 > (
INT32_MAX
 - 1) / 2) {

129 
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

130  
FALSE
;

132 
öt32_t
 
√wC≠
 = 
ˇ∑côy
 * 2;

133 i‡(
√wC≠
 < 
möimumC≠acôy
) {

134 
√wC≠
 = 
möimumC≠acôy
;

136 i‡(
maxC≠acôy
 > 0 && 
√wC≠
 > maxCapacity) {

137 
√wC≠
 = 
maxC≠acôy
;

139 i‡(
√wC≠
 > (
öt32_t
)(
INT32_MAX
 / (
öt64_t
))) {

141 
°©us
 = 
U_ILLEGAL_ARGUMENT_ERROR
;

142  
FALSE
;

144 
öt64_t
* 
√wEÀms
 = (öt64_à*)
	`u¥v_ªÆloc
(
ñemíts
, (öt64_t)*
√wC≠
);

145 i‡(
√wEÀms
 =
NULL
) {

147 
°©us
 = 
U_MEMORY_ALLOCATION_ERROR
;

148  
FALSE
;

150 
ñemíts
 = 
√wEÀms
;

151 
ˇ∑côy
 = 
√wC≠
;

152  
TRUE
;

153 
	}
}

155 
	gUVe˘‹64
::
	$£tMaxC≠acôy
(
öt32_t
 
limô
) {

156 
	`U_ASSERT
(
limô
 >= 0);

157 i‡(
limô
 < 0) {

158 
limô
 = 0;

160 i‡(
limô
 > (
öt32_t
)(
INT32_MAX
 / (
öt64_t
))) {

164 
maxC≠acôy
 = 
limô
;

165 i‡(
ˇ∑côy
 <
maxC≠acôy
 || maxCapacity == 0) {

172 
öt64_t
* 
√wEÀms
 = (öt64_à*)
	`u¥v_ªÆloc
(
ñemíts
, (öt64_t)*
maxC≠acôy
);

173 i‡(
√wEÀms
 =
NULL
) {

178 
ñemíts
 = 
√wEÀms
;

179 
ˇ∑côy
 = 
maxC≠acôy
;

180 i‡(
cou¡
 > 
ˇ∑côy
) {

181 
cou¡
 = 
ˇ∑côy
;

183 
	}
}

191 
	gUVe˘‹64
::
	$£tSize
(
öt32_t
 
√wSize
) {

192 
öt32_t
 
i
;

193 i‡(
√wSize
 < 0) {

196 i‡(
√wSize
 > 
cou¡
) {

197 
UEº‹Code
 
ec
 = 
U_ZERO_ERROR
;

198 i‡(!
	`ísuªC≠acôy
(
√wSize
, 
ec
)) {

201 
i
=
cou¡
; i<
√wSize
; ++i) {

202 
ñemíts
[
i
] = 0;

205 
cou¡
 = 
√wSize
;

206 
	}
}

208 
	gU_NAMESPACE_END


	@uvectr64.h

14 #i‚de‡
UVECTOR64_H


15 
	#UVECTOR64_H


	)

17 
	~"unicode/uty≥s.h
"

18 
	~"unicode/uobje˘.h
"

19 
	~"uhash.h
"

20 
	~"uas£π.h
"

22 
U_NAMESPACE_BEGIN


58 ˛as†
	cU_COMMON_API
 
	mUVe˘‹64
 : 
public
 
UObje˘
 {

59 
¥iv©e
:

60 
öt32_t
 
cou¡
;

62 
öt32_t
 
	mˇ∑côy
;

64 
öt32_t
 
	mmaxC≠acôy
;

66 
öt64_t
* 
	mñemíts
;

68 
	mpublic
:

69 
UVe˘‹64
(
UEº‹Code
 &
°©us
);

71 
UVe˘‹64
(
öt32_t
 
öôülC≠acôy
, 
UEº‹Code
 &
°©us
);

73 
	mvútuÆ
 ~
UVe˘‹64
();

79 
assign
(c⁄° 
UVe˘‹64
& 
Ÿhî
, 
UEº‹Code
 &
ec
);

86 
UBoﬁ
 
	m›î©‹
==(c⁄° 
UVe˘‹64
& 
Ÿhî
);

91 
ölöe
 
UBoﬁ
 
	m›î©‹
!=(c⁄° 
UVe˘‹64
& 
Ÿhî
);

97 
addEÀmít
(
öt64_t
 
ñem
, 
UEº‹Code
 &
°©us
);

99 
£tEÀmítAt
(
öt64_t
 
ñem
, 
öt32_t
 
ödex
);

101 
ö£πEÀmítAt
(
öt64_t
 
ñem
, 
öt32_t
 
ödex
, 
UEº‹Code
 &
°©us
);

103 
öt64_t
 
	$ñemítAti
(
öt32_t
 
ödex
) const;

107 
öt64_t
 
	$œ°EÀmíti
() const;

121 
	`ªmoveAŒEÀmíts
();

123 
öt32_t
 
	$size
() const;

128 
ölöe
 
UBoﬁ
 
	`ísuªC≠acôy
(
öt32_t
 
möimumC≠acôy
, 
UEº‹Code
 &
°©us
);

131 
UBoﬁ
 
	`ex∑ndC≠acôy
(
öt32_t
 
möimumC≠acôy
, 
UEº‹Code
 &
°©us
);

139 
	`£tSize
(
öt32_t
 
√wSize
);

153 
öt64_t
 *
	$gëBuf„r
() const;

161 
	`£tMaxC≠acôy
(
öt32_t
 
limô
);

166 
UCœssID
 
U_EXPORT2
 
	`gëSèticCœssID
();

171 
vútuÆ
 
UCœssID
 
	$gëDy«micCœssID
() const;

173 
¥iv©e
:

174 
	`_öô
(
öt32_t
 
öôülC≠acôy
, 
UEº‹Code
 &
°©us
);

177 
	`UVe˘‹64
(c⁄° 
UVe˘‹64
&);

180 
UVe˘‹64
& 
›î©‹
=(const UVector64&);

186 
public
:

191 
öt64_t
 
	`p›i
();

193 
öt64_t
 
	`push
(öt64_à
i
, 
UEº‹Code
 &
°©us
);

195 
öt64_t
 *
	`ª£rveBlock
(
öt32_t
 
size
, 
UEº‹Code
 &
°©us
);

196 
öt64_t
 *
	`p›Føme
(
öt32_t
 
size
);

202 
ölöe
 
UBoﬁ
 
UVe˘‹64
::
	$ísuªC≠acôy
(
öt32_t
 
möimumC≠acôy
, 
UEº‹Code
 &
°©us
) {

203 i‡((
möimumC≠acôy
 >0Ë&& (
ˇ∑côy
 >= minimumCapacity)) {

204  
TRUE
;

206  
	`ex∑ndC≠acôy
(
möimumC≠acôy
, 
°©us
);

208 
	}
}

210 
ölöe
 
öt64_t
 
	gUVe˘‹64
::
	$ñemítAti
(
öt32_t
 
ödex
) const {

211  (0 <
ödex
 && index < 
cou¡
Ë? 
ñemíts
[index] : 0;

212 
	}
}

215 
ölöe
 
	gUVe˘‹64
::
	$addEÀmít
(
öt64_t
 
ñem
, 
UEº‹Code
 &
°©us
) {

216 i‡(
	`ísuªC≠acôy
(
cou¡
 + 1, 
°©us
)) {

217 
ñemíts
[
cou¡
] = 
ñem
;

218 
cou¡
++;

220 
	}
}

222 
ölöe
 
öt64_t
 *
	gUVe˘‹64
::
	$ª£rveBlock
(
öt32_t
 
size
, 
UEº‹Code
 &
°©us
) {

223 i‡(
	`ísuªC≠acôy
(
cou¡
+
size
, 
°©us
Ë=
FALSE
) {

224  
NULL
;

226 
öt64_t
 *
Ω
 = 
ñemíts
+
cou¡
;

227 
cou¡
 +
size
;

228  
Ω
;

229 
	}
}

231 
ölöe
 
öt64_t
 *
	gUVe˘‹64
::
	$p›Føme
(
öt32_t
 
size
) {

232 
	`U_ASSERT
(
cou¡
 >
size
);

233 
cou¡
 -
size
;

234 i‡(
cou¡
 < 0) {

235 
cou¡
 = 0;

237  
ñemíts
+
cou¡
-
size
;

238 
	}
}

242 
ölöe
 
öt32_t
 
	gUVe˘‹64
::
	$size
() const {

243  
cou¡
;

244 
	}
}

246 
ölöe
 
öt64_t
 
	gUVe˘‹64
::
	$œ°EÀmíti
() const {

247  
	`ñemítAti
(
cou¡
-1);

248 
	}
}

250 
ölöe
 
UBoﬁ
 
	gUVe˘‹64
::
›î©‹
!=(c⁄° 
UVe˘‹64
& 
Ÿhî
) {

251  !
›î©‹
==(
Ÿhî
);

254 
ölöe
 
öt64_t
 *
	gUVe˘‹64
::
	$gëBuf„r
() const {

255  
ñemíts
;

256 
	}
}

261 
ölöe
 
öt64_t
 
	gUVe˘‹64
::
	$push
(
öt64_t
 
i
, 
UEº‹Code
 &
°©us
) {

262 
	`addEÀmít
(
i
, 
°©us
);

263  
i
;

264 
	}
}

266 
ölöe
 
öt64_t
 
	gUVe˘‹64
::
	$p›i
() {

267 
öt64_t
 
ªsu…
 = 0;

268 i‡(
cou¡
 > 0) {

269 
cou¡
--;

270 
ªsu…
 = 
ñemíts
[
cou¡
];

272  
ªsu…
;

273 
	}
}

275 
	gU_NAMESPACE_END


	@wintz.c

12 
	~"unicode/uty≥s.h
"

14 #ifde‡
U_WINDOWS


16 
	~"wötz.h
"

18 
	~"cmem‹y.h
"

19 
	~"c°rög.h
"

21 
	~"unicode/u°rög.h
"

22 
	~"unicode/uªs.h
"

24 
	#WIN32_LEAN_AND_MEAN


	)

25 
	#VC_EXTRALEAN


	)

26 
	#NOUSER


	)

27 
	#NOSERVICE


	)

28 
	#NOIME


	)

29 
	#NOMCX


	)

30 
	~<wödows.h
>

35 
öt32_t
 
	mbüs
;

36 
öt32_t
 
	m°™d¨dBüs
;

37 
öt32_t
 
	mdaylightBüs
;

38 
SYSTEMTIME
 
	m°™d¨dD©e
;

39 
SYSTEMTIME
 
	mdaylightD©e
;

40 } 
	tTZI
;

45 c⁄° 
	gCURRENT_ZONE_REGKEY
[] = "SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation\\";

46 c⁄° 
	gSTANDARD_NAME_REGKEY
[] = "StandardName";

47 c⁄° 
	gSTANDARD_TIME_REGKEY
[] = " Standard Time";

48 c⁄° 
	gTZI_REGKEY
[] = "TZI";

49 c⁄° 
	gSTD_REGKEY
[] = "Std";

57 c⁄° * c⁄° 
	gWIN_TYPE_PROBE_REGKEY
[] = {

71 c⁄° * c⁄° 
	gTZ_REGKEY
[] = {

85 
	mWIN_9X_ME_TYPE
 = 1,

86 
	mWIN_NT_TYPE
 = 2,

87 
	mWIN_2K_XP_TYPE
 = 3

90 
öt32_t
 
	ggWöTy≥
 = 0;

92 
öt32_t
 
	$dëe˘WödowsTy≥
()

94 
öt32_t
 
wöTy≥
;

95 
LONG
 
ªsu…
;

96 
HKEY
 
hkey
;

103 
wöTy≥
 = 0; winType < 2; winType++) {

104 
ªsu…
 = 
	`RegO≥nKeyExA
(
HKEY_LOCAL_MACHINE
,

105 
WIN_TYPE_PROBE_REGKEY
[
wöTy≥
],

107 
KEY_QUERY_VALUE
,

108 &
hkey
);

109 
	`RegClo£Key
(
hkey
);

111 i‡(
ªsu…
 =
ERROR_SUCCESS
) {

116  
wöTy≥
+1;

117 
	}
}

119 
LONG
 
	$›íTZRegKey
(
HKEY
 *
hkey
, c⁄° *
wöid
)

121 
subKeyName
[110];

122 *
«me
;

123 
LONG
 
ªsu…
;

126 i‡(
gWöTy≥
 <= 0) {

127 
gWöTy≥
 = 
	`dëe˘WödowsTy≥
();

130 
	`u¥v_°r˝y
(
subKeyName
, 
TZ_REGKEY
[(
gWöTy≥
 !
WIN_9X_ME_TYPE
)]);

131 
«me
 = &
subKeyName
[
	`°æí
(subKeyName)];

132 
	`u¥v_°rˇt
(
subKeyName
, 
wöid
);

134 i‡(
gWöTy≥
 =
WIN_9X_ME_TYPE
) {

136 *
pStd
 = 
	`u¥v_°r°r
(
subKeyName
, 
STANDARD_TIME_REGKEY
);

137 i‡(
pStd
) {

138 *
pStd
 = 0;

142 
ªsu…
 = 
	`RegO≥nKeyExA
(
HKEY_LOCAL_MACHINE
,

143 
subKeyName
,

145 
KEY_QUERY_VALUE
,

146 
hkey
);

147  
ªsu…
;

148 
	}
}

150 
LONG
 
	$gëTZI
(c⁄° *
wöid
, 
TZI
 *
tzi
)

152 
DWORD
 
cbD©a
 = (
TZI
);

153 
LONG
 
ªsu…
;

154 
HKEY
 
hkey
;

156 
ªsu…
 = 
	`›íTZRegKey
(&
hkey
, 
wöid
);

158 i‡(
ªsu…
 =
ERROR_SUCCESS
) {

159 
ªsu…
 = 
	`RegQuîyVÆueExA
(
hkey
,

160 
TZI_REGKEY
,

161 
NULL
,

162 
NULL
,

163 (
LPBYTE
)
tzi
,

164 &
cbD©a
);

168 
	`RegClo£Key
(
hkey
);

170  
ªsu…
;

171 
	}
}

225 
U_CFUNC
 c⁄° * 
U_EXPORT2


226 
	$u¥v_dëe˘WödowsTimeZ⁄e
() {

227 
UEº‹Code
 
°©us
 = 
U_ZERO_ERROR
;

228 
UResour˚BundÀ
* 
bundÀ
 = 
NULL
;

229 * 
icuid
 = 
NULL
;

231 
LONG
 
ªsu…
;

232 
TZI
 
tziKey
;

233 
TZI
 
tziReg
;

234 
TIME_ZONE_INFORMATION
 
≠iTZI
;

239 
	`u¥v_mem£t
(&
≠iTZI
, 0, (apiTZI));

240 
	`u¥v_mem£t
(&
tziKey
, 0, (tziKey));

241 
	`u¥v_mem£t
(&
tziReg
, 0, (tziReg));

242 
	`GëTimeZ⁄eInf‹m©i⁄
(&
≠iTZI
);

243 
tziKey
.
büs
 = 
≠iTZI
.
Büs
;

244 
	`u¥v_mem˝y
((*)&
tziKey
.
°™d¨dD©e
, (*)&
≠iTZI
.
Sènd¨dD©e
,

245 (
≠iTZI
.
Sènd¨dD©e
));

246 
	`u¥v_mem˝y
((*)&
tziKey
.
daylightD©e
, (*)&
≠iTZI
.
DaylightD©e
,

247 (
≠iTZI
.
DaylightD©e
));

249 
bundÀ
 = 
	`uªs_›íDúe˘
(
NULL
, "wödowsZ⁄es", &
°©us
);

250 
	`uªs_gëByKey
(
bundÀ
, "m≠Timez⁄es", bundÀ, &
°©us
);

253 
	`U_SUCCESS
(
°©us
Ë&& 
	`uªs_hasNext
(
bundÀ
)) {

254 c⁄° * 
wöid
;

255 
öt32_t
 
Àn
;

256 
UResour˚BundÀ
* 
wöTZ
 = 
	`uªs_gëNextResour˚
(
bundÀ
, 
NULL
, &
°©us
);

257 i‡(
	`U_FAILURE
(
°©us
)) {

260 
wöid
 = 
	`uªs_gëKey
(
wöTZ
);

261 
ªsu…
 = 
	`gëTZI
(
wöid
, &
tziReg
);

263 i‡(
ªsu…
 =
ERROR_SUCCESS
) {

267 
tziKey
.
°™d¨dBüs
 = 
tziReg
.standardBias;

268 
tziKey
.
daylightBüs
 = 
tziReg
.daylightBias;

270 i‡(
	`u¥v_memcmp
((*)&
tziKey
, (*)&
tziReg
, (tziKey)) == 0) {

271 c⁄° 
UCh¨
* 
icuTZ
 = 
	`uªs_gëSåögByKey
(
wöTZ
, "001", &
Àn
, &
°©us
);

272 i‡(
	`U_SUCCESS
(
°©us
)) {

273 
icuid
 = (*)
	`u¥v_mÆloc
((Ë* (
Àn
 + 1));

274 
	`u¥v_mem£t
(
icuid
, 0, 
Àn
 + 1);

275 
	`u_au°∫˝y
(
icuid
, 
icuTZ
, 
Àn
);

279 
	`uªs_˛o£
(
wöTZ
);

280 i‡(
icuid
 !
NULL
) {

285 
	`uªs_˛o£
(
bundÀ
);

287  
icuid
;

288 
	}
}

	@wintz.h

12 #i‚de‡
__WINTZ


13 
	#__WINTZ


	)

15 
	~"unicode/uty≥s.h
"

17 #ifde‡
U_WINDOWS


24 
U_CDECL_BEGIN


26 
_TIME_ZONE_INFORMATION
 
	tTIME_ZONE_INFORMATION
;

27 
U_CDECL_END


29 
U_CFUNC
 c⁄° * 
U_EXPORT2


30 
u¥v_dëe˘WödowsTimeZ⁄e
();

	@
1
.
0
321
4121
bmpset.cpp
bmpset.h
brkeng.cpp
brkeng.h
brkiter.cpp
bytestream.cpp
caniter.cpp
chariter.cpp
charstr.cpp
charstr.h
cmemory.c
cmemory.h
cpputils.h
cstring.c
cstring.h
cwchar.c
cwchar.h
dictbe.cpp
dictbe.h
dtintrv.cpp
errorcode.cpp
filterednormalizer2.cpp
hash.h
icucfg.h
icudataver.c
icuplug.c
icuplugimp.h
localsvc.h
locavailable.cpp
locbased.cpp
locbased.h
locdispnames.cpp
locid.cpp
loclikely.cpp
locmap.c
locmap.h
locresdata.cpp
locutil.cpp
locutil.h
msvcres.h
mutex.cpp
mutex.h
normalizer2.cpp
normalizer2impl.cpp
normalizer2impl.h
normlzr.cpp
parsepos.cpp
propname.cpp
propname.h
propsvec.c
propsvec.h
punycode.c
punycode.h
putil.c
putilimp.h
rbbi.cpp
rbbidata.cpp
rbbidata.h
rbbinode.cpp
rbbinode.h
rbbirb.cpp
rbbirb.h
rbbirpt.h
rbbiscan.cpp
rbbiscan.h
rbbisetb.cpp
rbbisetb.h
rbbistbl.cpp
rbbitblb.cpp
rbbitblb.h
resbund.cpp
resbund_cnv.cpp
ruleiter.cpp
ruleiter.h
schriter.cpp
serv.cpp
serv.h
servlk.cpp
servlkf.cpp
servloc.h
servls.cpp
servnotf.cpp
servnotf.h
servrbf.cpp
servslkf.cpp
sprpimpl.h
stringpiece.cpp
triedict.cpp
triedict.h
uarrsort.c
uarrsort.h
uassert.h
ubidi.c
ubidi_props.c
ubidi_props.h
ubidi_props_data.c
ubidiimp.h
ubidiln.c
ubidiwrt.c
ubrk.cpp
ubrkimpl.h
ucase.c
ucase.h
ucase_props_data.c
ucasemap.c
ucat.c
uchar.c
uchar_props_data.c
uchriter.cpp
ucln.h
ucln_cmn.c
ucln_cmn.h
ucln_imp.h
ucmndata.c
ucmndata.h
ucnv.c
ucnv2022.c
ucnv_bld.c
ucnv_bld.h
ucnv_cb.c
ucnv_cnv.c
ucnv_cnv.h
ucnv_err.c
ucnv_ext.c
ucnv_ext.h
ucnv_imp.h
ucnv_io.c
ucnv_io.h
ucnv_lmb.c
ucnv_set.c
ucnv_u16.c
ucnv_u32.c
ucnv_u7.c
ucnv_u8.c
ucnvbocu.c
ucnvdisp.c
ucnvhz.c
ucnvisci.c
ucnvlat1.c
ucnvmbcs.c
ucnvmbcs.h
ucnvscsu.c
ucnvsel.cpp
ucol_swp.cpp
ucol_swp.h
udata.cpp
udatamem.c
udatamem.h
udataswp.c
udataswp.h
uenum.c
uenumimp.h
uhash.c
uhash.h
uhash_us.cpp
uidna.cpp
uinit.c
uinvchar.c
uinvchar.h
uiter.cpp
ulist.c
ulist.h
uloc.c
uloc_tag.c
ulocimp.h
umapfile.c
umapfile.h
umath.c
umutex.c
umutex.h
unames.c
unicode/brkiter.h
unicode/bytestream.h
unicode/caniter.h
unicode/chariter.h
unicode/dbbi.h
unicode/docmain.h
unicode/dtintrv.h
unicode/errorcode.h
unicode/icudataver.h
unicode/icuplug.h
unicode/idna.h
unicode/localpointer.h
unicode/locid.h
unicode/normalizer2.h
unicode/normlzr.h
unicode/parseerr.h
unicode/parsepos.h
unicode/platform.h
unicode/ppalmos.h
unicode/ptypes.h
unicode/putil.h
unicode/pwin32.h
unicode/rbbi.h
unicode/rep.h
unicode/resbund.h
unicode/schriter.h
unicode/std_string.h
unicode/strenum.h
unicode/stringpiece.h
unicode/symtable.h
unicode/ubidi.h
unicode/ubrk.h
unicode/ucasemap.h
unicode/ucat.h
unicode/uchar.h
unicode/uchriter.h
unicode/uclean.h
unicode/ucnv.h
unicode/ucnv_cb.h
unicode/ucnv_err.h
unicode/ucnvsel.h
unicode/uconfig.h
unicode/udata.h
unicode/udeprctd.h
unicode/udraft.h
unicode/uenum.h
unicode/uidna.h
unicode/uintrnal.h
unicode/uiter.h
unicode/uloc.h
unicode/umachine.h
unicode/umisc.h
unicode/unifilt.h
unicode/unifunct.h
unicode/unimatch.h
unicode/uniset.h
unicode/unistr.h
unicode/unorm.h
unicode/unorm2.h
unicode/uobject.h
unicode/uobslete.h
unicode/urename.h
unicode/urep.h
unicode/ures.h
unicode/uscript.h
unicode/uset.h
unicode/usetiter.h
unicode/ushape.h
unicode/usprep.h
unicode/ustring.h
unicode/usystem.h
unicode/utext.h
unicode/utf.h
unicode/utf16.h
unicode/utf32.h
unicode/utf8.h
unicode/utf_old.h
unicode/utrace.h
unicode/utypes.h
unicode/uvernum.h
unicode/uversion.h
unifilt.cpp
unifunct.cpp
uniset.cpp
uniset_props.cpp
unisetspan.cpp
unisetspan.h
unistr.cpp
unistr_case.cpp
unistr_cnv.cpp
unistr_props.cpp
unorm.cpp
unorm_it.c
unorm_it.h
unorm_props_data.c
unormcmp.cpp
unormimp.h
uobject.cpp
uprops.cpp
uprops.h
ures_cnv.c
uresbund.c
uresdata.c
uresdata.h
uresimp.h
ureslocs.h
usc_impl.c
usc_impl.h
uscript.c
uset.cpp
uset_imp.h
uset_props.cpp
usetiter.cpp
ushape.c
usprep.cpp
ustack.cpp
ustr_cnv.c
ustr_cnv.h
ustr_imp.h
ustr_wcs.c
ustrcase.c
ustrenum.cpp
ustrenum.h
ustrfmt.c
ustrfmt.h
ustring.c
ustrtrns.c
utext.cpp
utf_impl.c
util.cpp
util.h
util_props.cpp
utrace.c
utracimp.h
utrie.c
utrie.h
utrie2.cpp
utrie2.h
utrie2_builder.c
utrie2_impl.h
uts46.cpp
utypes.c
uvector.cpp
uvector.h
uvectr32.cpp
uvectr32.h
uvectr64.cpp
uvectr64.h
wintz.c
wintz.h
